; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99c0a0_type = type <{ [8 x i8] }>
%G_0xaf3458_type = type <{ [1 x i8] }>
%G__0x579d93_type = type <{ [8 x i8] }>
%G__0x586073_type = type <{ [8 x i8] }>
%G__0x588897_type = type <{ [8 x i8] }>
%G__0x588b0b_type = type <{ [8 x i8] }>
%G__0x588b2c_type = type <{ [8 x i8] }>
%G__0x588b35_type = type <{ [8 x i8] }>
%G__0xb8c050_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99c0a0 = global %G_0x99c0a0_type zeroinitializer
@G_0xaf3458 = global %G_0xaf3458_type zeroinitializer
@G__0x579d93 = global %G__0x579d93_type zeroinitializer
@G__0x586073 = global %G__0x586073_type zeroinitializer
@G__0x588897 = global %G__0x588897_type zeroinitializer
@G__0x588b0b = global %G__0x588b0b_type zeroinitializer
@G__0x588b2c = global %G__0x588b2c_type zeroinitializer
@G__0x588b35 = global %G__0x588b35_type zeroinitializer
@G__0xb8c050 = global %G__0xb8c050_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_401030.strchr_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @pattern_2_string(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4a9220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4a9220, %struct.Memory** %MEMORY
  %loadMem_4a9221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i249 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i249
  %27 = load i64, i64* %PC.i248
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i248
  store i64 %26, i64* %RBP.i250, align 8
  store %struct.Memory* %loadMem_4a9221, %struct.Memory** %MEMORY
  %loadMem_4a9224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 31
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R15.i311 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R15.i311
  %36 = load i64, i64* %PC.i310
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i310
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_4a9224, %struct.Memory** %MEMORY
  %loadMem_4a9226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14.i413 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %R14.i413
  %49 = load i64, i64* %PC.i412
  %50 = add i64 %49, 2
  store i64 %50, i64* %PC.i412
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_4a9226, %struct.Memory** %MEMORY
  %loadMem_4a9228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 3
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RBX.i434 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RBX.i434
  %62 = load i64, i64* %PC.i433
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC.i433
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -8
  %67 = inttoptr i64 %66 to i64*
  store i64 %61, i64* %67
  store i64 %66, i64* %64, align 8
  store %struct.Memory* %loadMem_4a9228, %struct.Memory** %MEMORY
  %loadMem_4a9229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %69 = getelementptr inbounds %struct.GPR, %struct.GPR* %68, i32 0, i32 33
  %70 = getelementptr inbounds %struct.Reg, %struct.Reg* %69, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %70 to i64*
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 13
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %RSP.i456 = bitcast %union.anon* %73 to i64*
  %74 = load i64, i64* %RSP.i456
  %75 = load i64, i64* %PC.i455
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i455
  %77 = sub i64 %74, 7208
  store i64 %77, i64* %RSP.i456, align 8
  %78 = icmp ult i64 %74, 7208
  %79 = zext i1 %78 to i8
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %79, i8* %80, align 1
  %81 = trunc i64 %77 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82)
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %86, i8* %87, align 1
  %88 = xor i64 7208, %74
  %89 = xor i64 %88, %77
  %90 = lshr i64 %89, 4
  %91 = trunc i64 %90 to i8
  %92 = and i8 %91, 1
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %92, i8* %93, align 1
  %94 = icmp eq i64 %77, 0
  %95 = zext i1 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %95, i8* %96, align 1
  %97 = lshr i64 %77, 63
  %98 = trunc i64 %97 to i8
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %98, i8* %99, align 1
  %100 = lshr i64 %74, 63
  %101 = xor i64 %97, %100
  %102 = add i64 %101, %100
  %103 = icmp eq i64 %102, 2
  %104 = zext i1 %103 to i8
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %104, i8* %105, align 1
  store %struct.Memory* %loadMem_4a9229, %struct.Memory** %MEMORY
  %loadMem_4a9230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 1
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %111 to i64*
  %112 = load i64, i64* %PC.i486
  %113 = add i64 %112, 5
  store i64 %113, i64* %PC.i486
  store i64 35, i64* %RAX.i487, align 8
  store %struct.Memory* %loadMem_4a9230, %struct.Memory** %MEMORY
  %loadMem_4a9235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %119 to i32*
  %120 = bitcast i32* %R10D.i to i64*
  %121 = load i64, i64* %PC.i624
  %122 = add i64 %121, 6
  store i64 %122, i64* %PC.i624
  store i64 7056, i64* %120, align 8
  store %struct.Memory* %loadMem_4a9235, %struct.Memory** %MEMORY
  %loadMem_4a923b = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 21
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R10D.i645 = bitcast %union.anon* %128 to i32*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 23
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %131 to i32*
  %132 = bitcast i32* %R11D.i to i64*
  %133 = load i32, i32* %R10D.i645
  %134 = zext i32 %133 to i64
  %135 = load i64, i64* %PC.i644
  %136 = add i64 %135, 3
  store i64 %136, i64* %PC.i644
  %137 = and i64 %134, 4294967295
  store i64 %137, i64* %132, align 8
  store %struct.Memory* %loadMem_4a923b, %struct.Memory** %MEMORY
  %loadMem_4a923e = load %struct.Memory*, %struct.Memory** %MEMORY
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 33
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RBX.i667 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i668
  %148 = sub i64 %147, 7120
  %149 = load i64, i64* %PC.i666
  %150 = add i64 %149, 7
  store i64 %150, i64* %PC.i666
  store i64 %148, i64* %RBX.i667, align 8
  store %struct.Memory* %loadMem_4a923e, %struct.Memory** %MEMORY
  %loadMem_4a9245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %152 = getelementptr inbounds %struct.GPR, %struct.GPR* %151, i32 0, i32 33
  %153 = getelementptr inbounds %struct.Reg, %struct.Reg* %152, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %153 to i64*
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %155 = getelementptr inbounds %struct.GPR, %struct.GPR* %154, i32 0, i32 21
  %156 = getelementptr inbounds %struct.Reg, %struct.Reg* %155, i32 0, i32 0
  %R10D.i699 = bitcast %union.anon* %156 to i32*
  %157 = bitcast i32* %R10D.i699 to i64*
  %158 = load i32, i32* %R10D.i699
  %159 = zext i32 %158 to i64
  %160 = load i32, i32* %R10D.i699
  %161 = zext i32 %160 to i64
  %162 = load i64, i64* %PC.i698
  %163 = add i64 %162, 3
  store i64 %163, i64* %PC.i698
  %164 = xor i64 %161, %159
  %165 = trunc i64 %164 to i32
  %166 = and i64 %164, 4294967295
  store i64 %166, i64* %157, align 8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %167, align 1
  %168 = and i32 %165, 255
  %169 = call i32 @llvm.ctpop.i32(i32 %168)
  %170 = trunc i32 %169 to i8
  %171 = and i8 %170, 1
  %172 = xor i8 %171, 1
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %172, i8* %173, align 1
  %174 = icmp eq i32 %165, 0
  %175 = zext i1 %174 to i8
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %175, i8* %176, align 1
  %177 = lshr i32 %165, 31
  %178 = trunc i32 %177 to i8
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %178, i8* %179, align 1
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %181, align 1
  store %struct.Memory* %loadMem_4a9245, %struct.Memory** %MEMORY
  %loadMem_4a9248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 33
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %184 to i64*
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 29
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %187 to i32*
  %188 = bitcast i32* %R14D.i to i64*
  %189 = load i64, i64* %PC.i1258
  %190 = add i64 %189, 6
  store i64 %190, i64* %PC.i1258
  store i64 1764, i64* %188, align 8
  store %struct.Memory* %loadMem_4a9248, %struct.Memory** %MEMORY
  %loadMem_4a924e = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 29
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %R14D.i1269 = bitcast %union.anon* %196 to i32*
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 31
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %199 to i32*
  %200 = bitcast i32* %R15D.i to i64*
  %201 = load i32, i32* %R14D.i1269
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC.i1268
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC.i1268
  %205 = and i64 %202, 4294967295
  store i64 %205, i64* %200, align 8
  store %struct.Memory* %loadMem_4a924e, %struct.Memory** %MEMORY
  %loadMem_4a9251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 11
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %RDI.i1284 = bitcast %union.anon* %211 to i64*
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 15
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %RBP.i1285 = bitcast %union.anon* %214 to i64*
  %215 = load i64, i64* %RBP.i1285
  %216 = sub i64 %215, 32
  %217 = load i64, i64* %RDI.i1284
  %218 = load i64, i64* %PC.i1283
  %219 = add i64 %218, 4
  store i64 %219, i64* %PC.i1283
  %220 = inttoptr i64 %216 to i64*
  store i64 %217, i64* %220
  store %struct.Memory* %loadMem_4a9251, %struct.Memory** %MEMORY
  %loadMem_4a9255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 9
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RSI.i1331 = bitcast %union.anon* %226 to i64*
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %228 = getelementptr inbounds %struct.GPR, %struct.GPR* %227, i32 0, i32 15
  %229 = getelementptr inbounds %struct.Reg, %struct.Reg* %228, i32 0, i32 0
  %RBP.i1332 = bitcast %union.anon* %229 to i64*
  %230 = load i64, i64* %RBP.i1332
  %231 = sub i64 %230, 40
  %232 = load i64, i64* %RSI.i1331
  %233 = load i64, i64* %PC.i1330
  %234 = add i64 %233, 4
  store i64 %234, i64* %PC.i1330
  %235 = inttoptr i64 %231 to i64*
  store i64 %232, i64* %235
  store %struct.Memory* %loadMem_4a9255, %struct.Memory** %MEMORY
  %loadMem_4a9259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 33
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %238 to i64*
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %240 = getelementptr inbounds %struct.GPR, %struct.GPR* %239, i32 0, i32 7
  %241 = getelementptr inbounds %struct.Reg, %struct.Reg* %240, i32 0, i32 0
  %RDX.i1328 = bitcast %union.anon* %241 to i64*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %243 = getelementptr inbounds %struct.GPR, %struct.GPR* %242, i32 0, i32 15
  %244 = getelementptr inbounds %struct.Reg, %struct.Reg* %243, i32 0, i32 0
  %RBP.i1329 = bitcast %union.anon* %244 to i64*
  %245 = load i64, i64* %RBP.i1329
  %246 = sub i64 %245, 48
  %247 = load i64, i64* %RDX.i1328
  %248 = load i64, i64* %PC.i1327
  %249 = add i64 %248, 4
  store i64 %249, i64* %PC.i1327
  %250 = inttoptr i64 %246 to i64*
  store i64 %247, i64* %250
  store %struct.Memory* %loadMem_4a9259, %struct.Memory** %MEMORY
  %loadMem_4a925d = load %struct.Memory*, %struct.Memory** %MEMORY
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 33
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %253 to i64*
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %255 = getelementptr inbounds %struct.GPR, %struct.GPR* %254, i32 0, i32 5
  %256 = getelementptr inbounds %struct.Reg, %struct.Reg* %255, i32 0, i32 0
  %ECX.i1325 = bitcast %union.anon* %256 to i32*
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %258 = getelementptr inbounds %struct.GPR, %struct.GPR* %257, i32 0, i32 15
  %259 = getelementptr inbounds %struct.Reg, %struct.Reg* %258, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %259 to i64*
  %260 = load i64, i64* %RBP.i1326
  %261 = sub i64 %260, 52
  %262 = load i32, i32* %ECX.i1325
  %263 = zext i32 %262 to i64
  %264 = load i64, i64* %PC.i1324
  %265 = add i64 %264, 3
  store i64 %265, i64* %PC.i1324
  %266 = inttoptr i64 %261 to i32*
  store i32 %262, i32* %266
  store %struct.Memory* %loadMem_4a925d, %struct.Memory** %MEMORY
  %loadMem_4a9260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %268 = getelementptr inbounds %struct.GPR, %struct.GPR* %267, i32 0, i32 33
  %269 = getelementptr inbounds %struct.Reg, %struct.Reg* %268, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %269 to i64*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 17
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %272 to i32*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 15
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %275 to i64*
  %276 = load i64, i64* %RBP.i1323
  %277 = sub i64 %276, 56
  %278 = load i32, i32* %R8D.i
  %279 = zext i32 %278 to i64
  %280 = load i64, i64* %PC.i1322
  %281 = add i64 %280, 4
  store i64 %281, i64* %PC.i1322
  %282 = inttoptr i64 %277 to i32*
  store i32 %278, i32* %282
  store %struct.Memory* %loadMem_4a9260, %struct.Memory** %MEMORY
  %loadMem_4a9264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %284 = getelementptr inbounds %struct.GPR, %struct.GPR* %283, i32 0, i32 33
  %285 = getelementptr inbounds %struct.Reg, %struct.Reg* %284, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %285 to i64*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 19
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %288 to i32*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 15
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RBP.i1321 = bitcast %union.anon* %291 to i64*
  %292 = load i64, i64* %RBP.i1321
  %293 = sub i64 %292, 60
  %294 = load i32, i32* %R9D.i
  %295 = zext i32 %294 to i64
  %296 = load i64, i64* %PC.i1320
  %297 = add i64 %296, 4
  store i64 %297, i64* %PC.i1320
  %298 = inttoptr i64 %293 to i32*
  store i32 %294, i32* %298
  store %struct.Memory* %loadMem_4a9264, %struct.Memory** %MEMORY
  %loadMem_4a9268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 33
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %301 to i64*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %303 = getelementptr inbounds %struct.GPR, %struct.GPR* %302, i32 0, i32 5
  %304 = getelementptr inbounds %struct.Reg, %struct.Reg* %303, i32 0, i32 0
  %RCX.i1318 = bitcast %union.anon* %304 to i64*
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %306 = getelementptr inbounds %struct.GPR, %struct.GPR* %305, i32 0, i32 15
  %307 = getelementptr inbounds %struct.Reg, %struct.Reg* %306, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %307 to i64*
  %308 = load i64, i64* %RBP.i1319
  %309 = sub i64 %308, 56
  %310 = load i64, i64* %PC.i1317
  %311 = add i64 %310, 3
  store i64 %311, i64* %PC.i1317
  %312 = inttoptr i64 %309 to i32*
  %313 = load i32, i32* %312
  %314 = zext i32 %313 to i64
  store i64 %314, i64* %RCX.i1318, align 8
  store %struct.Memory* %loadMem_4a9268, %struct.Memory** %MEMORY
  %loadMem_4a926b = load %struct.Memory*, %struct.Memory** %MEMORY
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 33
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %317 to i64*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 5
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %RCX.i1316 = bitcast %union.anon* %320 to i64*
  %321 = load i64, i64* %RCX.i1316
  %322 = load i64, i64* %PC.i1315
  %323 = add i64 %322, 3
  store i64 %323, i64* %PC.i1315
  %324 = trunc i64 %321 to i32
  %325 = add i32 42, %324
  %326 = zext i32 %325 to i64
  store i64 %326, i64* %RCX.i1316, align 8
  %327 = icmp ult i32 %325, %324
  %328 = icmp ult i32 %325, 42
  %329 = or i1 %327, %328
  %330 = zext i1 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %330, i8* %331, align 1
  %332 = and i32 %325, 255
  %333 = call i32 @llvm.ctpop.i32(i32 %332)
  %334 = trunc i32 %333 to i8
  %335 = and i8 %334, 1
  %336 = xor i8 %335, 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %336, i8* %337, align 1
  %338 = xor i64 42, %321
  %339 = trunc i64 %338 to i32
  %340 = xor i32 %339, %325
  %341 = lshr i32 %340, 4
  %342 = trunc i32 %341 to i8
  %343 = and i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %343, i8* %344, align 1
  %345 = icmp eq i32 %325, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1
  %348 = lshr i32 %325, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1
  %351 = lshr i32 %324, 31
  %352 = xor i32 %348, %351
  %353 = add i32 %352, %348
  %354 = icmp eq i32 %353, 2
  %355 = zext i1 %354 to i8
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %355, i8* %356, align 1
  store %struct.Memory* %loadMem_4a926b, %struct.Memory** %MEMORY
  %loadMem_4a926e = load %struct.Memory*, %struct.Memory** %MEMORY
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %358 = getelementptr inbounds %struct.GPR, %struct.GPR* %357, i32 0, i32 33
  %359 = getelementptr inbounds %struct.Reg, %struct.Reg* %358, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %359 to i64*
  %360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %361 = getelementptr inbounds %struct.GPR, %struct.GPR* %360, i32 0, i32 5
  %362 = getelementptr inbounds %struct.Reg, %struct.Reg* %361, i32 0, i32 0
  %ECX.i1313 = bitcast %union.anon* %362 to i32*
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %364 = getelementptr inbounds %struct.GPR, %struct.GPR* %363, i32 0, i32 15
  %365 = getelementptr inbounds %struct.Reg, %struct.Reg* %364, i32 0, i32 0
  %RBP.i1314 = bitcast %union.anon* %365 to i64*
  %366 = load i64, i64* %RBP.i1314
  %367 = sub i64 %366, 7124
  %368 = load i32, i32* %ECX.i1313
  %369 = zext i32 %368 to i64
  %370 = load i64, i64* %PC.i1312
  %371 = add i64 %370, 6
  store i64 %371, i64* %PC.i1312
  %372 = inttoptr i64 %367 to i32*
  store i32 %368, i32* %372
  store %struct.Memory* %loadMem_4a926e, %struct.Memory** %MEMORY
  %loadMem_4a9274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 33
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %375 to i64*
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %377 = getelementptr inbounds %struct.GPR, %struct.GPR* %376, i32 0, i32 5
  %378 = getelementptr inbounds %struct.Reg, %struct.Reg* %377, i32 0, i32 0
  %RCX.i1310 = bitcast %union.anon* %378 to i64*
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %380 = getelementptr inbounds %struct.GPR, %struct.GPR* %379, i32 0, i32 15
  %381 = getelementptr inbounds %struct.Reg, %struct.Reg* %380, i32 0, i32 0
  %RBP.i1311 = bitcast %union.anon* %381 to i64*
  %382 = load i64, i64* %RBP.i1311
  %383 = sub i64 %382, 60
  %384 = load i64, i64* %PC.i1309
  %385 = add i64 %384, 3
  store i64 %385, i64* %PC.i1309
  %386 = inttoptr i64 %383 to i32*
  %387 = load i32, i32* %386
  %388 = zext i32 %387 to i64
  store i64 %388, i64* %RCX.i1310, align 8
  store %struct.Memory* %loadMem_4a9274, %struct.Memory** %MEMORY
  %loadMem_4a9277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 33
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %391 to i64*
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 5
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %RCX.i1308 = bitcast %union.anon* %394 to i64*
  %395 = load i64, i64* %RCX.i1308
  %396 = load i64, i64* %PC.i1307
  %397 = add i64 %396, 3
  store i64 %397, i64* %PC.i1307
  %398 = trunc i64 %395 to i32
  %399 = add i32 42, %398
  %400 = zext i32 %399 to i64
  store i64 %400, i64* %RCX.i1308, align 8
  %401 = icmp ult i32 %399, %398
  %402 = icmp ult i32 %399, 42
  %403 = or i1 %401, %402
  %404 = zext i1 %403 to i8
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %404, i8* %405, align 1
  %406 = and i32 %399, 255
  %407 = call i32 @llvm.ctpop.i32(i32 %406)
  %408 = trunc i32 %407 to i8
  %409 = and i8 %408, 1
  %410 = xor i8 %409, 1
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %410, i8* %411, align 1
  %412 = xor i64 42, %395
  %413 = trunc i64 %412 to i32
  %414 = xor i32 %413, %399
  %415 = lshr i32 %414, 4
  %416 = trunc i32 %415 to i8
  %417 = and i8 %416, 1
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %417, i8* %418, align 1
  %419 = icmp eq i32 %399, 0
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %420, i8* %421, align 1
  %422 = lshr i32 %399, 31
  %423 = trunc i32 %422 to i8
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %423, i8* %424, align 1
  %425 = lshr i32 %398, 31
  %426 = xor i32 %422, %425
  %427 = add i32 %426, %422
  %428 = icmp eq i32 %427, 2
  %429 = zext i1 %428 to i8
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %429, i8* %430, align 1
  store %struct.Memory* %loadMem_4a9277, %struct.Memory** %MEMORY
  %loadMem_4a927a = load %struct.Memory*, %struct.Memory** %MEMORY
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %432 = getelementptr inbounds %struct.GPR, %struct.GPR* %431, i32 0, i32 33
  %433 = getelementptr inbounds %struct.Reg, %struct.Reg* %432, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %433 to i64*
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %435 = getelementptr inbounds %struct.GPR, %struct.GPR* %434, i32 0, i32 5
  %436 = getelementptr inbounds %struct.Reg, %struct.Reg* %435, i32 0, i32 0
  %ECX.i1305 = bitcast %union.anon* %436 to i32*
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %438 = getelementptr inbounds %struct.GPR, %struct.GPR* %437, i32 0, i32 15
  %439 = getelementptr inbounds %struct.Reg, %struct.Reg* %438, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %439 to i64*
  %440 = load i64, i64* %RBP.i1306
  %441 = sub i64 %440, 7128
  %442 = load i32, i32* %ECX.i1305
  %443 = zext i32 %442 to i64
  %444 = load i64, i64* %PC.i1304
  %445 = add i64 %444, 6
  store i64 %445, i64* %PC.i1304
  %446 = inttoptr i64 %441 to i32*
  store i32 %442, i32* %446
  store %struct.Memory* %loadMem_4a927a, %struct.Memory** %MEMORY
  %loadMem_4a9280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 33
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %449 to i64*
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 11
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %RDI.i1302 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 15
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %455 to i64*
  %456 = load i64, i64* %RBP.i1303
  %457 = sub i64 %456, 48
  %458 = load i64, i64* %PC.i1301
  %459 = add i64 %458, 4
  store i64 %459, i64* %PC.i1301
  %460 = inttoptr i64 %457 to i64*
  %461 = load i64, i64* %460
  store i64 %461, i64* %RDI.i1302, align 8
  store %struct.Memory* %loadMem_4a9280, %struct.Memory** %MEMORY
  %loadMem_4a9284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 33
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %464 to i64*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 21
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %R10D.i1299 = bitcast %union.anon* %467 to i32*
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %469 = getelementptr inbounds %struct.GPR, %struct.GPR* %468, i32 0, i32 9
  %470 = getelementptr inbounds %struct.Reg, %struct.Reg* %469, i32 0, i32 0
  %RSI.i1300 = bitcast %union.anon* %470 to i64*
  %471 = load i32, i32* %R10D.i1299
  %472 = zext i32 %471 to i64
  %473 = load i64, i64* %PC.i1298
  %474 = add i64 %473, 3
  store i64 %474, i64* %PC.i1298
  %475 = and i64 %472, 4294967295
  store i64 %475, i64* %RSI.i1300, align 8
  store %struct.Memory* %loadMem_4a9284, %struct.Memory** %MEMORY
  %loadMem_4a9287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 33
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %478 to i64*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 7
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RDX.i1296 = bitcast %union.anon* %481 to i64*
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 31
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %R15.i1297 = bitcast %union.anon* %484 to i64*
  %485 = load i64, i64* %R15.i1297
  %486 = load i64, i64* %PC.i1295
  %487 = add i64 %486, 3
  store i64 %487, i64* %PC.i1295
  store i64 %485, i64* %RDX.i1296, align 8
  store %struct.Memory* %loadMem_4a9287, %struct.Memory** %MEMORY
  %loadMem_4a928a = load %struct.Memory*, %struct.Memory** %MEMORY
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 33
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 1
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %EAX.i1293 = bitcast %union.anon* %493 to i32*
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %495 = getelementptr inbounds %struct.GPR, %struct.GPR* %494, i32 0, i32 15
  %496 = getelementptr inbounds %struct.Reg, %struct.Reg* %495, i32 0, i32 0
  %RBP.i1294 = bitcast %union.anon* %496 to i64*
  %497 = load i64, i64* %RBP.i1294
  %498 = sub i64 %497, 7160
  %499 = load i32, i32* %EAX.i1293
  %500 = zext i32 %499 to i64
  %501 = load i64, i64* %PC.i1292
  %502 = add i64 %501, 6
  store i64 %502, i64* %PC.i1292
  %503 = inttoptr i64 %498 to i32*
  store i32 %499, i32* %503
  store %struct.Memory* %loadMem_4a928a, %struct.Memory** %MEMORY
  %loadMem_4a9290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 33
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %506 to i64*
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 15
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %RBP.i1291 = bitcast %union.anon* %509 to i64*
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %511 = getelementptr inbounds %struct.GPR, %struct.GPR* %510, i32 0, i32 23
  %512 = getelementptr inbounds %struct.Reg, %struct.Reg* %511, i32 0, i32 0
  %R11.i = bitcast %union.anon* %512 to i64*
  %513 = load i64, i64* %RBP.i1291
  %514 = sub i64 %513, 7168
  %515 = load i64, i64* %R11.i
  %516 = load i64, i64* %PC.i1290
  %517 = add i64 %516, 7
  store i64 %517, i64* %PC.i1290
  %518 = inttoptr i64 %514 to i64*
  store i64 %515, i64* %518
  store %struct.Memory* %loadMem_4a9290, %struct.Memory** %MEMORY
  %loadMem_4a9297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 33
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %521 to i64*
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %523 = getelementptr inbounds %struct.GPR, %struct.GPR* %522, i32 0, i32 3
  %524 = getelementptr inbounds %struct.Reg, %struct.Reg* %523, i32 0, i32 0
  %RBX.i1288 = bitcast %union.anon* %524 to i64*
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 15
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %527 to i64*
  %528 = load i64, i64* %RBP.i1289
  %529 = sub i64 %528, 7176
  %530 = load i64, i64* %RBX.i1288
  %531 = load i64, i64* %PC.i1287
  %532 = add i64 %531, 7
  store i64 %532, i64* %PC.i1287
  %533 = inttoptr i64 %529 to i64*
  store i64 %530, i64* %533
  store %struct.Memory* %loadMem_4a9297, %struct.Memory** %MEMORY
  %loadMem1_4a929e = load %struct.Memory*, %struct.Memory** %MEMORY
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %535 = getelementptr inbounds %struct.GPR, %struct.GPR* %534, i32 0, i32 33
  %536 = getelementptr inbounds %struct.Reg, %struct.Reg* %535, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %536 to i64*
  %537 = load i64, i64* %PC.i1286
  %538 = add i64 %537, -688686
  %539 = load i64, i64* %PC.i1286
  %540 = add i64 %539, 5
  %541 = load i64, i64* %PC.i1286
  %542 = add i64 %541, 5
  store i64 %542, i64* %PC.i1286
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %544 = load i64, i64* %543, align 8
  %545 = add i64 %544, -8
  %546 = inttoptr i64 %545 to i64*
  store i64 %540, i64* %546
  store i64 %545, i64* %543, align 8
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %538, i64* %547, align 8
  store %struct.Memory* %loadMem1_4a929e, %struct.Memory** %MEMORY
  %loadMem2_4a929e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a929e = load i64, i64* %3
  %548 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_4a929e)
  store %struct.Memory* %548, %struct.Memory** %MEMORY
  %loadMem_4a92a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 33
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %551 to i64*
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 7
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %RDX.i1281 = bitcast %union.anon* %554 to i64*
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %556 = getelementptr inbounds %struct.GPR, %struct.GPR* %555, i32 0, i32 15
  %557 = getelementptr inbounds %struct.Reg, %struct.Reg* %556, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %557 to i64*
  %558 = load i64, i64* %RBP.i1282
  %559 = sub i64 %558, 7176
  %560 = load i64, i64* %PC.i1280
  %561 = add i64 %560, 7
  store i64 %561, i64* %PC.i1280
  %562 = inttoptr i64 %559 to i64*
  %563 = load i64, i64* %562
  store i64 %563, i64* %RDX.i1281, align 8
  store %struct.Memory* %loadMem_4a92a3, %struct.Memory** %MEMORY
  %loadMem_4a92aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 33
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %566 to i64*
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %568 = getelementptr inbounds %struct.GPR, %struct.GPR* %567, i32 0, i32 7
  %569 = getelementptr inbounds %struct.Reg, %struct.Reg* %568, i32 0, i32 0
  %RDX.i1278 = bitcast %union.anon* %569 to i64*
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %571 = getelementptr inbounds %struct.GPR, %struct.GPR* %570, i32 0, i32 11
  %572 = getelementptr inbounds %struct.Reg, %struct.Reg* %571, i32 0, i32 0
  %RDI.i1279 = bitcast %union.anon* %572 to i64*
  %573 = load i64, i64* %RDX.i1278
  %574 = load i64, i64* %PC.i1277
  %575 = add i64 %574, 3
  store i64 %575, i64* %PC.i1277
  store i64 %573, i64* %RDI.i1279, align 8
  store %struct.Memory* %loadMem_4a92aa, %struct.Memory** %MEMORY
  %loadMem_4a92ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %577 = getelementptr inbounds %struct.GPR, %struct.GPR* %576, i32 0, i32 33
  %578 = getelementptr inbounds %struct.Reg, %struct.Reg* %577, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %578 to i64*
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 9
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %RSI.i1275 = bitcast %union.anon* %581 to i64*
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 15
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %RBP.i1276 = bitcast %union.anon* %584 to i64*
  %585 = load i64, i64* %RBP.i1276
  %586 = sub i64 %585, 7160
  %587 = load i64, i64* %PC.i1274
  %588 = add i64 %587, 6
  store i64 %588, i64* %PC.i1274
  %589 = inttoptr i64 %586 to i32*
  %590 = load i32, i32* %589
  %591 = zext i32 %590 to i64
  store i64 %591, i64* %RSI.i1275, align 8
  store %struct.Memory* %loadMem_4a92ad, %struct.Memory** %MEMORY
  %loadMem_4a92b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %593 = getelementptr inbounds %struct.GPR, %struct.GPR* %592, i32 0, i32 33
  %594 = getelementptr inbounds %struct.Reg, %struct.Reg* %593, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %594 to i64*
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 7
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %RDX.i1272 = bitcast %union.anon* %597 to i64*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 15
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %600 to i64*
  %601 = load i64, i64* %RBP.i1273
  %602 = sub i64 %601, 7168
  %603 = load i64, i64* %PC.i1271
  %604 = add i64 %603, 7
  store i64 %604, i64* %PC.i1271
  %605 = inttoptr i64 %602 to i64*
  %606 = load i64, i64* %605
  store i64 %606, i64* %RDX.i1272, align 8
  store %struct.Memory* %loadMem_4a92b3, %struct.Memory** %MEMORY
  %loadMem1_4a92ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 33
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %PC.i1270
  %611 = add i64 %610, -688714
  %612 = load i64, i64* %PC.i1270
  %613 = add i64 %612, 5
  %614 = load i64, i64* %PC.i1270
  %615 = add i64 %614, 5
  store i64 %615, i64* %PC.i1270
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %617 = load i64, i64* %616, align 8
  %618 = add i64 %617, -8
  %619 = inttoptr i64 %618 to i64*
  store i64 %613, i64* %619
  store i64 %618, i64* %616, align 8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %611, i64* %620, align 8
  store %struct.Memory* %loadMem1_4a92ba, %struct.Memory** %MEMORY
  %loadMem2_4a92ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a92ba = load i64, i64* %3
  %621 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_4a92ba)
  store %struct.Memory* %621, %struct.Memory** %MEMORY
  %loadMem_4a92bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 33
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %624 to i64*
  %625 = load i64, i64* %PC.i1267
  %626 = add i64 %625, 8
  store i64 %626, i64* %PC.i1267
  %627 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %628, align 1
  %629 = and i32 %627, 255
  %630 = call i32 @llvm.ctpop.i32(i32 %629)
  %631 = trunc i32 %630 to i8
  %632 = and i8 %631, 1
  %633 = xor i8 %632, 1
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %633, i8* %634, align 1
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %635, align 1
  %636 = icmp eq i32 %627, 0
  %637 = zext i1 %636 to i8
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %637, i8* %638, align 1
  %639 = lshr i32 %627, 31
  %640 = trunc i32 %639 to i8
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %640, i8* %641, align 1
  %642 = lshr i32 %627, 31
  %643 = xor i32 %639, %642
  %644 = add i32 %643, %642
  %645 = icmp eq i32 %644, 2
  %646 = zext i1 %645 to i8
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %646, i8* %647, align 1
  store %struct.Memory* %loadMem_4a92bf, %struct.Memory** %MEMORY
  %loadMem_4a92c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 33
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %650 to i64*
  %651 = load i64, i64* %PC.i1266
  %652 = add i64 %651, 37
  %653 = load i64, i64* %PC.i1266
  %654 = add i64 %653, 6
  %655 = load i64, i64* %PC.i1266
  %656 = add i64 %655, 6
  store i64 %656, i64* %PC.i1266
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %658 = load i8, i8* %657, align 1
  %659 = icmp ne i8 %658, 0
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %661 = load i8, i8* %660, align 1
  %662 = icmp ne i8 %661, 0
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %664 = load i8, i8* %663, align 1
  %665 = icmp ne i8 %664, 0
  %666 = xor i1 %662, %665
  %667 = or i1 %659, %666
  %668 = zext i1 %667 to i8
  store i8 %668, i8* %BRANCH_TAKEN, align 1
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %670 = select i1 %667, i64 %652, i64 %654
  store i64 %670, i64* %669, align 8
  store %struct.Memory* %loadMem_4a92c7, %struct.Memory** %MEMORY
  %loadBr_4a92c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a92c7 = icmp eq i8 %loadBr_4a92c7, 1
  br i1 %cmpBr_4a92c7, label %block_.L_4a92ec, label %block_4a92cd

block_4a92cd:                                     ; preds = %entry
  %loadMem_4a92cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 33
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %673 to i64*
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %675 = getelementptr inbounds %struct.GPR, %struct.GPR* %674, i32 0, i32 9
  %676 = getelementptr inbounds %struct.Reg, %struct.Reg* %675, i32 0, i32 0
  %RSI.i1265 = bitcast %union.anon* %676 to i64*
  %677 = load i64, i64* %PC.i1264
  %678 = add i64 %677, 10
  store i64 %678, i64* %PC.i1264
  store i64 ptrtoint (%G__0x588b0b_type* @G__0x588b0b to i64), i64* %RSI.i1265, align 8
  store %struct.Memory* %loadMem_4a92cd, %struct.Memory** %MEMORY
  %loadMem_4a92d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 33
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 11
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RDI.i1263 = bitcast %union.anon* %684 to i64*
  %685 = load i64, i64* %PC.i1262
  %686 = add i64 %685, 8
  store i64 %686, i64* %PC.i1262
  %687 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %687, i64* %RDI.i1263, align 8
  store %struct.Memory* %loadMem_4a92d7, %struct.Memory** %MEMORY
  %loadMem_4a92df = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 1
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %694 = bitcast %union.anon* %693 to %struct.anon.2*
  %AL.i1261 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %694, i32 0, i32 0
  %695 = load i64, i64* %PC.i1260
  %696 = add i64 %695, 2
  store i64 %696, i64* %PC.i1260
  store i8 0, i8* %AL.i1261, align 1
  store %struct.Memory* %loadMem_4a92df, %struct.Memory** %MEMORY
  %loadMem1_4a92e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 33
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %699 to i64*
  %700 = load i64, i64* %PC.i1259
  %701 = add i64 %700, -688657
  %702 = load i64, i64* %PC.i1259
  %703 = add i64 %702, 5
  %704 = load i64, i64* %PC.i1259
  %705 = add i64 %704, 5
  store i64 %705, i64* %PC.i1259
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %707 = load i64, i64* %706, align 8
  %708 = add i64 %707, -8
  %709 = inttoptr i64 %708 to i64*
  store i64 %703, i64* %709
  store i64 %708, i64* %706, align 8
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %701, i64* %710, align 8
  store %struct.Memory* %loadMem1_4a92e1, %struct.Memory** %MEMORY
  %loadMem2_4a92e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a92e1 = load i64, i64* %3
  %711 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a92e1)
  store %struct.Memory* %711, %struct.Memory** %MEMORY
  %loadMem_4a92e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 33
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %714 to i64*
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 1
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %EAX.i1256 = bitcast %union.anon* %717 to i32*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 15
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %RBP.i1257
  %722 = sub i64 %721, 7180
  %723 = load i32, i32* %EAX.i1256
  %724 = zext i32 %723 to i64
  %725 = load i64, i64* %PC.i1255
  %726 = add i64 %725, 6
  store i64 %726, i64* %PC.i1255
  %727 = inttoptr i64 %722 to i32*
  store i32 %723, i32* %727
  store %struct.Memory* %loadMem_4a92e6, %struct.Memory** %MEMORY
  br label %block_.L_4a92ec

block_.L_4a92ec:                                  ; preds = %block_4a92cd, %entry
  %loadMem_4a92ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 15
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %733 to i64*
  %734 = load i64, i64* %RBP.i1254
  %735 = sub i64 %734, 7144
  %736 = load i64, i64* %PC.i1253
  %737 = add i64 %736, 10
  store i64 %737, i64* %PC.i1253
  %738 = inttoptr i64 %735 to i32*
  store i32 21, i32* %738
  store %struct.Memory* %loadMem_4a92ec, %struct.Memory** %MEMORY
  br label %block_.L_4a92f6

block_.L_4a92f6:                                  ; preds = %block_.L_4a9353, %block_.L_4a92ec
  %loadMem_4a92f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %741 to i64*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 15
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %RBP.i1252 = bitcast %union.anon* %744 to i64*
  %745 = load i64, i64* %RBP.i1252
  %746 = sub i64 %745, 7144
  %747 = load i64, i64* %PC.i1251
  %748 = add i64 %747, 7
  store i64 %748, i64* %PC.i1251
  %749 = inttoptr i64 %746 to i32*
  %750 = load i32, i32* %749
  %751 = sub i32 %750, 63
  %752 = icmp ult i32 %750, 63
  %753 = zext i1 %752 to i8
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %753, i8* %754, align 1
  %755 = and i32 %751, 255
  %756 = call i32 @llvm.ctpop.i32(i32 %755)
  %757 = trunc i32 %756 to i8
  %758 = and i8 %757, 1
  %759 = xor i8 %758, 1
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %759, i8* %760, align 1
  %761 = xor i32 %750, 63
  %762 = xor i32 %761, %751
  %763 = lshr i32 %762, 4
  %764 = trunc i32 %763 to i8
  %765 = and i8 %764, 1
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %765, i8* %766, align 1
  %767 = icmp eq i32 %751, 0
  %768 = zext i1 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %768, i8* %769, align 1
  %770 = lshr i32 %751, 31
  %771 = trunc i32 %770 to i8
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %771, i8* %772, align 1
  %773 = lshr i32 %750, 31
  %774 = xor i32 %770, %773
  %775 = add i32 %774, %773
  %776 = icmp eq i32 %775, 2
  %777 = zext i1 %776 to i8
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %777, i8* %778, align 1
  store %struct.Memory* %loadMem_4a92f6, %struct.Memory** %MEMORY
  %loadMem_4a92fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %781 to i64*
  %782 = load i64, i64* %PC.i1250
  %783 = add i64 %782, 106
  %784 = load i64, i64* %PC.i1250
  %785 = add i64 %784, 6
  %786 = load i64, i64* %PC.i1250
  %787 = add i64 %786, 6
  store i64 %787, i64* %PC.i1250
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %789 = load i8, i8* %788, align 1
  store i8 %789, i8* %BRANCH_TAKEN, align 1
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %791 = icmp ne i8 %789, 0
  %792 = select i1 %791, i64 %783, i64 %785
  store i64 %792, i64* %790, align 8
  store %struct.Memory* %loadMem_4a92fd, %struct.Memory** %MEMORY
  %loadBr_4a92fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a92fd = icmp eq i8 %loadBr_4a92fd, 1
  br i1 %cmpBr_4a92fd, label %block_.L_4a9367, label %block_4a9303

block_4a9303:                                     ; preds = %block_.L_4a92f6
  %loadMem_4a9303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 33
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %795 to i64*
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 15
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %RBP.i1249 = bitcast %union.anon* %798 to i64*
  %799 = load i64, i64* %RBP.i1249
  %800 = sub i64 %799, 7148
  %801 = load i64, i64* %PC.i1248
  %802 = add i64 %801, 10
  store i64 %802, i64* %PC.i1248
  %803 = inttoptr i64 %800 to i32*
  store i32 21, i32* %803
  store %struct.Memory* %loadMem_4a9303, %struct.Memory** %MEMORY
  br label %block_.L_4a930d

block_.L_4a930d:                                  ; preds = %block_4a931a, %block_4a9303
  %loadMem_4a930d = load %struct.Memory*, %struct.Memory** %MEMORY
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 33
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %806 to i64*
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 15
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %809 to i64*
  %810 = load i64, i64* %RBP.i1247
  %811 = sub i64 %810, 7148
  %812 = load i64, i64* %PC.i1246
  %813 = add i64 %812, 7
  store i64 %813, i64* %PC.i1246
  %814 = inttoptr i64 %811 to i32*
  %815 = load i32, i32* %814
  %816 = sub i32 %815, 63
  %817 = icmp ult i32 %815, 63
  %818 = zext i1 %817 to i8
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %818, i8* %819, align 1
  %820 = and i32 %816, 255
  %821 = call i32 @llvm.ctpop.i32(i32 %820)
  %822 = trunc i32 %821 to i8
  %823 = and i8 %822, 1
  %824 = xor i8 %823, 1
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %824, i8* %825, align 1
  %826 = xor i32 %815, 63
  %827 = xor i32 %826, %816
  %828 = lshr i32 %827, 4
  %829 = trunc i32 %828 to i8
  %830 = and i8 %829, 1
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %830, i8* %831, align 1
  %832 = icmp eq i32 %816, 0
  %833 = zext i1 %832 to i8
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %833, i8* %834, align 1
  %835 = lshr i32 %816, 31
  %836 = trunc i32 %835 to i8
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %836, i8* %837, align 1
  %838 = lshr i32 %815, 31
  %839 = xor i32 %835, %838
  %840 = add i32 %839, %838
  %841 = icmp eq i32 %840, 2
  %842 = zext i1 %841 to i8
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %842, i8* %843, align 1
  store %struct.Memory* %loadMem_4a930d, %struct.Memory** %MEMORY
  %loadMem_4a9314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %845 = getelementptr inbounds %struct.GPR, %struct.GPR* %844, i32 0, i32 33
  %846 = getelementptr inbounds %struct.Reg, %struct.Reg* %845, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %846 to i64*
  %847 = load i64, i64* %PC.i1245
  %848 = add i64 %847, 58
  %849 = load i64, i64* %PC.i1245
  %850 = add i64 %849, 6
  %851 = load i64, i64* %PC.i1245
  %852 = add i64 %851, 6
  store i64 %852, i64* %PC.i1245
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %854 = load i8, i8* %853, align 1
  store i8 %854, i8* %BRANCH_TAKEN, align 1
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %856 = icmp ne i8 %854, 0
  %857 = select i1 %856, i64 %848, i64 %850
  store i64 %857, i64* %855, align 8
  store %struct.Memory* %loadMem_4a9314, %struct.Memory** %MEMORY
  %loadBr_4a9314 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9314 = icmp eq i8 %loadBr_4a9314, 1
  br i1 %cmpBr_4a9314, label %block_.L_4a934e, label %block_4a931a

block_4a931a:                                     ; preds = %block_.L_4a930d
  %loadMem_4a931a = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %RAX.i1243 = bitcast %union.anon* %863 to i64*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 15
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RBP.i1244
  %868 = sub i64 %867, 7120
  %869 = load i64, i64* %PC.i1242
  %870 = add i64 %869, 7
  store i64 %870, i64* %PC.i1242
  store i64 %868, i64* %RAX.i1243, align 8
  store %struct.Memory* %loadMem_4a931a, %struct.Memory** %MEMORY
  %loadMem_4a9321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 33
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 5
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %876 to i64*
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 15
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %879 to i64*
  %880 = load i64, i64* %RBP.i1241
  %881 = sub i64 %880, 7144
  %882 = load i64, i64* %PC.i1239
  %883 = add i64 %882, 7
  store i64 %883, i64* %PC.i1239
  %884 = inttoptr i64 %881 to i32*
  %885 = load i32, i32* %884
  %886 = sext i32 %885 to i64
  store i64 %886, i64* %RCX.i1240, align 8
  store %struct.Memory* %loadMem_4a9321, %struct.Memory** %MEMORY
  %loadMem_4a9328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 33
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %889 to i64*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 5
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %RCX.i1238 = bitcast %union.anon* %892 to i64*
  %893 = load i64, i64* %RCX.i1238
  %894 = load i64, i64* %PC.i1237
  %895 = add i64 %894, 4
  store i64 %895, i64* %PC.i1237
  %896 = sext i64 %893 to i128
  %897 = and i128 %896, -18446744073709551616
  %898 = zext i64 %893 to i128
  %899 = or i128 %897, %898
  %900 = mul i128 84, %899
  %901 = trunc i128 %900 to i64
  store i64 %901, i64* %RCX.i1238, align 8
  %902 = sext i64 %901 to i128
  %903 = icmp ne i128 %902, %900
  %904 = zext i1 %903 to i8
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %904, i8* %905, align 1
  %906 = trunc i128 %900 to i32
  %907 = and i32 %906, 255
  %908 = call i32 @llvm.ctpop.i32(i32 %907)
  %909 = trunc i32 %908 to i8
  %910 = and i8 %909, 1
  %911 = xor i8 %910, 1
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %911, i8* %912, align 1
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %913, align 1
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %914, align 1
  %915 = lshr i64 %901, 63
  %916 = trunc i64 %915 to i8
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %916, i8* %917, align 1
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %904, i8* %918, align 1
  store %struct.Memory* %loadMem_4a9328, %struct.Memory** %MEMORY
  %loadMem_4a932c = load %struct.Memory*, %struct.Memory** %MEMORY
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 33
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %921 to i64*
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %923 = getelementptr inbounds %struct.GPR, %struct.GPR* %922, i32 0, i32 1
  %924 = getelementptr inbounds %struct.Reg, %struct.Reg* %923, i32 0, i32 0
  %RAX.i1235 = bitcast %union.anon* %924 to i64*
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %926 = getelementptr inbounds %struct.GPR, %struct.GPR* %925, i32 0, i32 5
  %927 = getelementptr inbounds %struct.Reg, %struct.Reg* %926, i32 0, i32 0
  %RCX.i1236 = bitcast %union.anon* %927 to i64*
  %928 = load i64, i64* %RAX.i1235
  %929 = load i64, i64* %RCX.i1236
  %930 = load i64, i64* %PC.i1234
  %931 = add i64 %930, 3
  store i64 %931, i64* %PC.i1234
  %932 = add i64 %929, %928
  store i64 %932, i64* %RAX.i1235, align 8
  %933 = icmp ult i64 %932, %928
  %934 = icmp ult i64 %932, %929
  %935 = or i1 %933, %934
  %936 = zext i1 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %936, i8* %937, align 1
  %938 = trunc i64 %932 to i32
  %939 = and i32 %938, 255
  %940 = call i32 @llvm.ctpop.i32(i32 %939)
  %941 = trunc i32 %940 to i8
  %942 = and i8 %941, 1
  %943 = xor i8 %942, 1
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %943, i8* %944, align 1
  %945 = xor i64 %929, %928
  %946 = xor i64 %945, %932
  %947 = lshr i64 %946, 4
  %948 = trunc i64 %947 to i8
  %949 = and i8 %948, 1
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %949, i8* %950, align 1
  %951 = icmp eq i64 %932, 0
  %952 = zext i1 %951 to i8
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %952, i8* %953, align 1
  %954 = lshr i64 %932, 63
  %955 = trunc i64 %954 to i8
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %955, i8* %956, align 1
  %957 = lshr i64 %928, 63
  %958 = lshr i64 %929, 63
  %959 = xor i64 %954, %957
  %960 = xor i64 %954, %958
  %961 = add i64 %959, %960
  %962 = icmp eq i64 %961, 2
  %963 = zext i1 %962 to i8
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %963, i8* %964, align 1
  store %struct.Memory* %loadMem_4a932c, %struct.Memory** %MEMORY
  %loadMem_4a932f = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %967 to i64*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 5
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RCX.i1232 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 15
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %973 to i64*
  %974 = load i64, i64* %RBP.i1233
  %975 = sub i64 %974, 7148
  %976 = load i64, i64* %PC.i1231
  %977 = add i64 %976, 7
  store i64 %977, i64* %PC.i1231
  %978 = inttoptr i64 %975 to i32*
  %979 = load i32, i32* %978
  %980 = sext i32 %979 to i64
  store i64 %980, i64* %RCX.i1232, align 8
  store %struct.Memory* %loadMem_4a932f, %struct.Memory** %MEMORY
  %loadMem_4a9336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 1
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 5
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %RCX.i1230 = bitcast %union.anon* %989 to i64*
  %990 = load i64, i64* %RAX.i1229
  %991 = load i64, i64* %RCX.i1230
  %992 = add i64 %991, %990
  %993 = load i64, i64* %PC.i1228
  %994 = add i64 %993, 4
  store i64 %994, i64* %PC.i1228
  %995 = inttoptr i64 %992 to i8*
  store i8 36, i8* %995
  store %struct.Memory* %loadMem_4a9336, %struct.Memory** %MEMORY
  %loadMem_4a933a = load %struct.Memory*, %struct.Memory** %MEMORY
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 33
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %998 to i64*
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 1
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %RAX.i1226 = bitcast %union.anon* %1001 to i64*
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 15
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %RBP.i1227 = bitcast %union.anon* %1004 to i64*
  %1005 = load i64, i64* %RBP.i1227
  %1006 = sub i64 %1005, 7148
  %1007 = load i64, i64* %PC.i1225
  %1008 = add i64 %1007, 6
  store i64 %1008, i64* %PC.i1225
  %1009 = inttoptr i64 %1006 to i32*
  %1010 = load i32, i32* %1009
  %1011 = zext i32 %1010 to i64
  store i64 %1011, i64* %RAX.i1226, align 8
  store %struct.Memory* %loadMem_4a933a, %struct.Memory** %MEMORY
  %loadMem_4a9340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 1
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RAX.i1224 = bitcast %union.anon* %1017 to i64*
  %1018 = load i64, i64* %RAX.i1224
  %1019 = load i64, i64* %PC.i1223
  %1020 = add i64 %1019, 3
  store i64 %1020, i64* %PC.i1223
  %1021 = trunc i64 %1018 to i32
  %1022 = add i32 1, %1021
  %1023 = zext i32 %1022 to i64
  store i64 %1023, i64* %RAX.i1224, align 8
  %1024 = icmp ult i32 %1022, %1021
  %1025 = icmp ult i32 %1022, 1
  %1026 = or i1 %1024, %1025
  %1027 = zext i1 %1026 to i8
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1027, i8* %1028, align 1
  %1029 = and i32 %1022, 255
  %1030 = call i32 @llvm.ctpop.i32(i32 %1029)
  %1031 = trunc i32 %1030 to i8
  %1032 = and i8 %1031, 1
  %1033 = xor i8 %1032, 1
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1033, i8* %1034, align 1
  %1035 = xor i64 1, %1018
  %1036 = trunc i64 %1035 to i32
  %1037 = xor i32 %1036, %1022
  %1038 = lshr i32 %1037, 4
  %1039 = trunc i32 %1038 to i8
  %1040 = and i8 %1039, 1
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1040, i8* %1041, align 1
  %1042 = icmp eq i32 %1022, 0
  %1043 = zext i1 %1042 to i8
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1043, i8* %1044, align 1
  %1045 = lshr i32 %1022, 31
  %1046 = trunc i32 %1045 to i8
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1046, i8* %1047, align 1
  %1048 = lshr i32 %1021, 31
  %1049 = xor i32 %1045, %1048
  %1050 = add i32 %1049, %1045
  %1051 = icmp eq i32 %1050, 2
  %1052 = zext i1 %1051 to i8
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1052, i8* %1053, align 1
  store %struct.Memory* %loadMem_4a9340, %struct.Memory** %MEMORY
  %loadMem_4a9343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 33
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %1056 to i64*
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 1
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %EAX.i1221 = bitcast %union.anon* %1059 to i32*
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 15
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %1062 to i64*
  %1063 = load i64, i64* %RBP.i1222
  %1064 = sub i64 %1063, 7148
  %1065 = load i32, i32* %EAX.i1221
  %1066 = zext i32 %1065 to i64
  %1067 = load i64, i64* %PC.i1220
  %1068 = add i64 %1067, 6
  store i64 %1068, i64* %PC.i1220
  %1069 = inttoptr i64 %1064 to i32*
  store i32 %1065, i32* %1069
  store %struct.Memory* %loadMem_4a9343, %struct.Memory** %MEMORY
  %loadMem_4a9349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 33
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %1072 to i64*
  %1073 = load i64, i64* %PC.i1219
  %1074 = add i64 %1073, -60
  %1075 = load i64, i64* %PC.i1219
  %1076 = add i64 %1075, 5
  store i64 %1076, i64* %PC.i1219
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1074, i64* %1077, align 8
  store %struct.Memory* %loadMem_4a9349, %struct.Memory** %MEMORY
  br label %block_.L_4a930d

block_.L_4a934e:                                  ; preds = %block_.L_4a930d
  %loadMem_4a934e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %1080 to i64*
  %1081 = load i64, i64* %PC.i1218
  %1082 = add i64 %1081, 5
  %1083 = load i64, i64* %PC.i1218
  %1084 = add i64 %1083, 5
  store i64 %1084, i64* %PC.i1218
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1082, i64* %1085, align 8
  store %struct.Memory* %loadMem_4a934e, %struct.Memory** %MEMORY
  br label %block_.L_4a9353

block_.L_4a9353:                                  ; preds = %block_.L_4a934e
  %loadMem_4a9353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 1
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 15
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %RBP.i1217 = bitcast %union.anon* %1094 to i64*
  %1095 = load i64, i64* %RBP.i1217
  %1096 = sub i64 %1095, 7144
  %1097 = load i64, i64* %PC.i1215
  %1098 = add i64 %1097, 6
  store i64 %1098, i64* %PC.i1215
  %1099 = inttoptr i64 %1096 to i32*
  %1100 = load i32, i32* %1099
  %1101 = zext i32 %1100 to i64
  store i64 %1101, i64* %RAX.i1216, align 8
  store %struct.Memory* %loadMem_4a9353, %struct.Memory** %MEMORY
  %loadMem_4a9359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 33
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 1
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %RAX.i1214
  %1109 = load i64, i64* %PC.i1213
  %1110 = add i64 %1109, 3
  store i64 %1110, i64* %PC.i1213
  %1111 = trunc i64 %1108 to i32
  %1112 = add i32 1, %1111
  %1113 = zext i32 %1112 to i64
  store i64 %1113, i64* %RAX.i1214, align 8
  %1114 = icmp ult i32 %1112, %1111
  %1115 = icmp ult i32 %1112, 1
  %1116 = or i1 %1114, %1115
  %1117 = zext i1 %1116 to i8
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1117, i8* %1118, align 1
  %1119 = and i32 %1112, 255
  %1120 = call i32 @llvm.ctpop.i32(i32 %1119)
  %1121 = trunc i32 %1120 to i8
  %1122 = and i8 %1121, 1
  %1123 = xor i8 %1122, 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1123, i8* %1124, align 1
  %1125 = xor i64 1, %1108
  %1126 = trunc i64 %1125 to i32
  %1127 = xor i32 %1126, %1112
  %1128 = lshr i32 %1127, 4
  %1129 = trunc i32 %1128 to i8
  %1130 = and i8 %1129, 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1130, i8* %1131, align 1
  %1132 = icmp eq i32 %1112, 0
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1133, i8* %1134, align 1
  %1135 = lshr i32 %1112, 31
  %1136 = trunc i32 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1136, i8* %1137, align 1
  %1138 = lshr i32 %1111, 31
  %1139 = xor i32 %1135, %1138
  %1140 = add i32 %1139, %1135
  %1141 = icmp eq i32 %1140, 2
  %1142 = zext i1 %1141 to i8
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1142, i8* %1143, align 1
  store %struct.Memory* %loadMem_4a9359, %struct.Memory** %MEMORY
  %loadMem_4a935c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 33
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %1146 to i64*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 1
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %EAX.i1211 = bitcast %union.anon* %1149 to i32*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 15
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %1152 to i64*
  %1153 = load i64, i64* %RBP.i1212
  %1154 = sub i64 %1153, 7144
  %1155 = load i32, i32* %EAX.i1211
  %1156 = zext i32 %1155 to i64
  %1157 = load i64, i64* %PC.i1210
  %1158 = add i64 %1157, 6
  store i64 %1158, i64* %PC.i1210
  %1159 = inttoptr i64 %1154 to i32*
  store i32 %1155, i32* %1159
  store %struct.Memory* %loadMem_4a935c, %struct.Memory** %MEMORY
  %loadMem_4a9362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 33
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %PC.i1209
  %1164 = add i64 %1163, -108
  %1165 = load i64, i64* %PC.i1209
  %1166 = add i64 %1165, 5
  store i64 %1166, i64* %PC.i1209
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1164, i64* %1167, align 8
  store %struct.Memory* %loadMem_4a9362, %struct.Memory** %MEMORY
  br label %block_.L_4a92f6

block_.L_4a9367:                                  ; preds = %block_.L_4a92f6
  %loadMem_4a9367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 33
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %1170 to i64*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 1
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %RAX.i1207 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 15
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %1176 to i64*
  %1177 = load i64, i64* %RBP.i1208
  %1178 = sub i64 %1177, 32
  %1179 = load i64, i64* %PC.i1206
  %1180 = add i64 %1179, 4
  store i64 %1180, i64* %PC.i1206
  %1181 = inttoptr i64 %1178 to i64*
  %1182 = load i64, i64* %1181
  store i64 %1182, i64* %RAX.i1207, align 8
  store %struct.Memory* %loadMem_4a9367, %struct.Memory** %MEMORY
  %loadMem_4a936b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 33
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %1185 to i64*
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 1
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %RAX.i1204 = bitcast %union.anon* %1188 to i64*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 5
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %RCX.i1205 = bitcast %union.anon* %1191 to i64*
  %1192 = load i64, i64* %RAX.i1204
  %1193 = add i64 %1192, 24
  %1194 = load i64, i64* %PC.i1203
  %1195 = add i64 %1194, 3
  store i64 %1195, i64* %PC.i1203
  %1196 = inttoptr i64 %1193 to i32*
  %1197 = load i32, i32* %1196
  %1198 = zext i32 %1197 to i64
  store i64 %1198, i64* %RCX.i1205, align 8
  store %struct.Memory* %loadMem_4a936b, %struct.Memory** %MEMORY
  %loadMem_4a936e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 33
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %1201 to i64*
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 5
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %RCX.i1201 = bitcast %union.anon* %1204 to i64*
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1206 = getelementptr inbounds %struct.GPR, %struct.GPR* %1205, i32 0, i32 15
  %1207 = getelementptr inbounds %struct.Reg, %struct.Reg* %1206, i32 0, i32 0
  %RBP.i1202 = bitcast %union.anon* %1207 to i64*
  %1208 = load i64, i64* %RCX.i1201
  %1209 = load i64, i64* %RBP.i1202
  %1210 = sub i64 %1209, 7124
  %1211 = load i64, i64* %PC.i1200
  %1212 = add i64 %1211, 6
  store i64 %1212, i64* %PC.i1200
  %1213 = trunc i64 %1208 to i32
  %1214 = inttoptr i64 %1210 to i32*
  %1215 = load i32, i32* %1214
  %1216 = add i32 %1215, %1213
  %1217 = zext i32 %1216 to i64
  store i64 %1217, i64* %RCX.i1201, align 8
  %1218 = icmp ult i32 %1216, %1213
  %1219 = icmp ult i32 %1216, %1215
  %1220 = or i1 %1218, %1219
  %1221 = zext i1 %1220 to i8
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1221, i8* %1222, align 1
  %1223 = and i32 %1216, 255
  %1224 = call i32 @llvm.ctpop.i32(i32 %1223)
  %1225 = trunc i32 %1224 to i8
  %1226 = and i8 %1225, 1
  %1227 = xor i8 %1226, 1
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1227, i8* %1228, align 1
  %1229 = xor i32 %1215, %1213
  %1230 = xor i32 %1229, %1216
  %1231 = lshr i32 %1230, 4
  %1232 = trunc i32 %1231 to i8
  %1233 = and i8 %1232, 1
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1233, i8* %1234, align 1
  %1235 = icmp eq i32 %1216, 0
  %1236 = zext i1 %1235 to i8
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1236, i8* %1237, align 1
  %1238 = lshr i32 %1216, 31
  %1239 = trunc i32 %1238 to i8
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1239, i8* %1240, align 1
  %1241 = lshr i32 %1213, 31
  %1242 = lshr i32 %1215, 31
  %1243 = xor i32 %1238, %1241
  %1244 = xor i32 %1238, %1242
  %1245 = add i32 %1243, %1244
  %1246 = icmp eq i32 %1245, 2
  %1247 = zext i1 %1246 to i8
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1247, i8* %1248, align 1
  store %struct.Memory* %loadMem_4a936e, %struct.Memory** %MEMORY
  %loadMem_4a9374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 33
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %1251 to i64*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 5
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %ECX.i1198 = bitcast %union.anon* %1254 to i32*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 15
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RBP.i1199 = bitcast %union.anon* %1257 to i64*
  %1258 = load i64, i64* %RBP.i1199
  %1259 = sub i64 %1258, 7144
  %1260 = load i32, i32* %ECX.i1198
  %1261 = zext i32 %1260 to i64
  %1262 = load i64, i64* %PC.i1197
  %1263 = add i64 %1262, 6
  store i64 %1263, i64* %PC.i1197
  %1264 = inttoptr i64 %1259 to i32*
  store i32 %1260, i32* %1264
  store %struct.Memory* %loadMem_4a9374, %struct.Memory** %MEMORY
  br label %block_.L_4a937a

block_.L_4a937a:                                  ; preds = %block_.L_4a9402, %block_.L_4a9367
  %loadMem_4a937a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 33
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %1267 to i64*
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1269 = getelementptr inbounds %struct.GPR, %struct.GPR* %1268, i32 0, i32 1
  %1270 = getelementptr inbounds %struct.Reg, %struct.Reg* %1269, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %1270 to i64*
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 15
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %1273 to i64*
  %1274 = load i64, i64* %RBP.i1196
  %1275 = sub i64 %1274, 7144
  %1276 = load i64, i64* %PC.i1194
  %1277 = add i64 %1276, 6
  store i64 %1277, i64* %PC.i1194
  %1278 = inttoptr i64 %1275 to i32*
  %1279 = load i32, i32* %1278
  %1280 = zext i32 %1279 to i64
  store i64 %1280, i64* %RAX.i1195, align 8
  store %struct.Memory* %loadMem_4a937a, %struct.Memory** %MEMORY
  %loadMem_4a9380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 33
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %1283 to i64*
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 5
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %RCX.i1192 = bitcast %union.anon* %1286 to i64*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 15
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %1289 to i64*
  %1290 = load i64, i64* %RBP.i1193
  %1291 = sub i64 %1290, 32
  %1292 = load i64, i64* %PC.i1191
  %1293 = add i64 %1292, 4
  store i64 %1293, i64* %PC.i1191
  %1294 = inttoptr i64 %1291 to i64*
  %1295 = load i64, i64* %1294
  store i64 %1295, i64* %RCX.i1192, align 8
  store %struct.Memory* %loadMem_4a9380, %struct.Memory** %MEMORY
  %loadMem_4a9384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1297 = getelementptr inbounds %struct.GPR, %struct.GPR* %1296, i32 0, i32 33
  %1298 = getelementptr inbounds %struct.Reg, %struct.Reg* %1297, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %1298 to i64*
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1300 = getelementptr inbounds %struct.GPR, %struct.GPR* %1299, i32 0, i32 5
  %1301 = getelementptr inbounds %struct.Reg, %struct.Reg* %1300, i32 0, i32 0
  %RCX.i1189 = bitcast %union.anon* %1301 to i64*
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 7
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %RDX.i1190 = bitcast %union.anon* %1304 to i64*
  %1305 = load i64, i64* %RCX.i1189
  %1306 = add i64 %1305, 32
  %1307 = load i64, i64* %PC.i1188
  %1308 = add i64 %1307, 3
  store i64 %1308, i64* %PC.i1188
  %1309 = inttoptr i64 %1306 to i32*
  %1310 = load i32, i32* %1309
  %1311 = zext i32 %1310 to i64
  store i64 %1311, i64* %RDX.i1190, align 8
  store %struct.Memory* %loadMem_4a9384, %struct.Memory** %MEMORY
  %loadMem_4a9387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 33
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 7
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RDX.i1186 = bitcast %union.anon* %1317 to i64*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 15
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %1320 to i64*
  %1321 = load i64, i64* %RDX.i1186
  %1322 = load i64, i64* %RBP.i1187
  %1323 = sub i64 %1322, 7124
  %1324 = load i64, i64* %PC.i1185
  %1325 = add i64 %1324, 6
  store i64 %1325, i64* %PC.i1185
  %1326 = trunc i64 %1321 to i32
  %1327 = inttoptr i64 %1323 to i32*
  %1328 = load i32, i32* %1327
  %1329 = add i32 %1328, %1326
  %1330 = zext i32 %1329 to i64
  store i64 %1330, i64* %RDX.i1186, align 8
  %1331 = icmp ult i32 %1329, %1326
  %1332 = icmp ult i32 %1329, %1328
  %1333 = or i1 %1331, %1332
  %1334 = zext i1 %1333 to i8
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1334, i8* %1335, align 1
  %1336 = and i32 %1329, 255
  %1337 = call i32 @llvm.ctpop.i32(i32 %1336)
  %1338 = trunc i32 %1337 to i8
  %1339 = and i8 %1338, 1
  %1340 = xor i8 %1339, 1
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1340, i8* %1341, align 1
  %1342 = xor i32 %1328, %1326
  %1343 = xor i32 %1342, %1329
  %1344 = lshr i32 %1343, 4
  %1345 = trunc i32 %1344 to i8
  %1346 = and i8 %1345, 1
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1346, i8* %1347, align 1
  %1348 = icmp eq i32 %1329, 0
  %1349 = zext i1 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1349, i8* %1350, align 1
  %1351 = lshr i32 %1329, 31
  %1352 = trunc i32 %1351 to i8
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1352, i8* %1353, align 1
  %1354 = lshr i32 %1326, 31
  %1355 = lshr i32 %1328, 31
  %1356 = xor i32 %1351, %1354
  %1357 = xor i32 %1351, %1355
  %1358 = add i32 %1356, %1357
  %1359 = icmp eq i32 %1358, 2
  %1360 = zext i1 %1359 to i8
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1360, i8* %1361, align 1
  store %struct.Memory* %loadMem_4a9387, %struct.Memory** %MEMORY
  %loadMem_4a938d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 33
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 7
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RDX.i1184 = bitcast %union.anon* %1367 to i64*
  %1368 = load i64, i64* %RDX.i1184
  %1369 = load i64, i64* %PC.i1183
  %1370 = add i64 %1369, 3
  store i64 %1370, i64* %PC.i1183
  %1371 = trunc i64 %1368 to i32
  %1372 = add i32 1, %1371
  %1373 = zext i32 %1372 to i64
  store i64 %1373, i64* %RDX.i1184, align 8
  %1374 = icmp ult i32 %1372, %1371
  %1375 = icmp ult i32 %1372, 1
  %1376 = or i1 %1374, %1375
  %1377 = zext i1 %1376 to i8
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1377, i8* %1378, align 1
  %1379 = and i32 %1372, 255
  %1380 = call i32 @llvm.ctpop.i32(i32 %1379)
  %1381 = trunc i32 %1380 to i8
  %1382 = and i8 %1381, 1
  %1383 = xor i8 %1382, 1
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1383, i8* %1384, align 1
  %1385 = xor i64 1, %1368
  %1386 = trunc i64 %1385 to i32
  %1387 = xor i32 %1386, %1372
  %1388 = lshr i32 %1387, 4
  %1389 = trunc i32 %1388 to i8
  %1390 = and i8 %1389, 1
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1390, i8* %1391, align 1
  %1392 = icmp eq i32 %1372, 0
  %1393 = zext i1 %1392 to i8
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1393, i8* %1394, align 1
  %1395 = lshr i32 %1372, 31
  %1396 = trunc i32 %1395 to i8
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1396, i8* %1397, align 1
  %1398 = lshr i32 %1371, 31
  %1399 = xor i32 %1395, %1398
  %1400 = add i32 %1399, %1395
  %1401 = icmp eq i32 %1400, 2
  %1402 = zext i1 %1401 to i8
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1402, i8* %1403, align 1
  store %struct.Memory* %loadMem_4a938d, %struct.Memory** %MEMORY
  %loadMem_4a9390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 33
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %1406 to i64*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 1
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %EAX.i1181 = bitcast %union.anon* %1409 to i32*
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 7
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %EDX.i1182 = bitcast %union.anon* %1412 to i32*
  %1413 = load i32, i32* %EAX.i1181
  %1414 = zext i32 %1413 to i64
  %1415 = load i32, i32* %EDX.i1182
  %1416 = zext i32 %1415 to i64
  %1417 = load i64, i64* %PC.i1180
  %1418 = add i64 %1417, 2
  store i64 %1418, i64* %PC.i1180
  %1419 = sub i32 %1413, %1415
  %1420 = icmp ult i32 %1413, %1415
  %1421 = zext i1 %1420 to i8
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1421, i8* %1422, align 1
  %1423 = and i32 %1419, 255
  %1424 = call i32 @llvm.ctpop.i32(i32 %1423)
  %1425 = trunc i32 %1424 to i8
  %1426 = and i8 %1425, 1
  %1427 = xor i8 %1426, 1
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1427, i8* %1428, align 1
  %1429 = xor i64 %1416, %1414
  %1430 = trunc i64 %1429 to i32
  %1431 = xor i32 %1430, %1419
  %1432 = lshr i32 %1431, 4
  %1433 = trunc i32 %1432 to i8
  %1434 = and i8 %1433, 1
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1434, i8* %1435, align 1
  %1436 = icmp eq i32 %1419, 0
  %1437 = zext i1 %1436 to i8
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1437, i8* %1438, align 1
  %1439 = lshr i32 %1419, 31
  %1440 = trunc i32 %1439 to i8
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1440, i8* %1441, align 1
  %1442 = lshr i32 %1413, 31
  %1443 = lshr i32 %1415, 31
  %1444 = xor i32 %1443, %1442
  %1445 = xor i32 %1439, %1442
  %1446 = add i32 %1445, %1444
  %1447 = icmp eq i32 %1446, 2
  %1448 = zext i1 %1447 to i8
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1448, i8* %1449, align 1
  store %struct.Memory* %loadMem_4a9390, %struct.Memory** %MEMORY
  %loadMem_4a9392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 33
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %1452 to i64*
  %1453 = load i64, i64* %PC.i1179
  %1454 = add i64 %1453, 132
  %1455 = load i64, i64* %PC.i1179
  %1456 = add i64 %1455, 6
  %1457 = load i64, i64* %PC.i1179
  %1458 = add i64 %1457, 6
  store i64 %1458, i64* %PC.i1179
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1460 = load i8, i8* %1459, align 1
  store i8 %1460, i8* %BRANCH_TAKEN, align 1
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1462 = icmp ne i8 %1460, 0
  %1463 = select i1 %1462, i64 %1454, i64 %1456
  store i64 %1463, i64* %1461, align 8
  store %struct.Memory* %loadMem_4a9392, %struct.Memory** %MEMORY
  %loadBr_4a9392 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9392 = icmp eq i8 %loadBr_4a9392, 1
  br i1 %cmpBr_4a9392, label %block_.L_4a9416, label %block_4a9398

block_4a9398:                                     ; preds = %block_.L_4a937a
  %loadMem_4a9398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 33
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %1466 to i64*
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 1
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %1469 to i64*
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 15
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %1472 to i64*
  %1473 = load i64, i64* %RBP.i1178
  %1474 = sub i64 %1473, 32
  %1475 = load i64, i64* %PC.i1176
  %1476 = add i64 %1475, 4
  store i64 %1476, i64* %PC.i1176
  %1477 = inttoptr i64 %1474 to i64*
  %1478 = load i64, i64* %1477
  store i64 %1478, i64* %RAX.i1177, align 8
  store %struct.Memory* %loadMem_4a9398, %struct.Memory** %MEMORY
  %loadMem_4a939c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 33
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1481 to i64*
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 1
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 5
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RCX.i1175 = bitcast %union.anon* %1487 to i64*
  %1488 = load i64, i64* %RAX.i1174
  %1489 = add i64 %1488, 28
  %1490 = load i64, i64* %PC.i1173
  %1491 = add i64 %1490, 3
  store i64 %1491, i64* %PC.i1173
  %1492 = inttoptr i64 %1489 to i32*
  %1493 = load i32, i32* %1492
  %1494 = zext i32 %1493 to i64
  store i64 %1494, i64* %RCX.i1175, align 8
  store %struct.Memory* %loadMem_4a939c, %struct.Memory** %MEMORY
  %loadMem_4a939f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 5
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RCX.i1171 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 15
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %1503 to i64*
  %1504 = load i64, i64* %RCX.i1171
  %1505 = load i64, i64* %RBP.i1172
  %1506 = sub i64 %1505, 7128
  %1507 = load i64, i64* %PC.i1170
  %1508 = add i64 %1507, 6
  store i64 %1508, i64* %PC.i1170
  %1509 = trunc i64 %1504 to i32
  %1510 = inttoptr i64 %1506 to i32*
  %1511 = load i32, i32* %1510
  %1512 = add i32 %1511, %1509
  %1513 = zext i32 %1512 to i64
  store i64 %1513, i64* %RCX.i1171, align 8
  %1514 = icmp ult i32 %1512, %1509
  %1515 = icmp ult i32 %1512, %1511
  %1516 = or i1 %1514, %1515
  %1517 = zext i1 %1516 to i8
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1517, i8* %1518, align 1
  %1519 = and i32 %1512, 255
  %1520 = call i32 @llvm.ctpop.i32(i32 %1519)
  %1521 = trunc i32 %1520 to i8
  %1522 = and i8 %1521, 1
  %1523 = xor i8 %1522, 1
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1523, i8* %1524, align 1
  %1525 = xor i32 %1511, %1509
  %1526 = xor i32 %1525, %1512
  %1527 = lshr i32 %1526, 4
  %1528 = trunc i32 %1527 to i8
  %1529 = and i8 %1528, 1
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1529, i8* %1530, align 1
  %1531 = icmp eq i32 %1512, 0
  %1532 = zext i1 %1531 to i8
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1532, i8* %1533, align 1
  %1534 = lshr i32 %1512, 31
  %1535 = trunc i32 %1534 to i8
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1535, i8* %1536, align 1
  %1537 = lshr i32 %1509, 31
  %1538 = lshr i32 %1511, 31
  %1539 = xor i32 %1534, %1537
  %1540 = xor i32 %1534, %1538
  %1541 = add i32 %1539, %1540
  %1542 = icmp eq i32 %1541, 2
  %1543 = zext i1 %1542 to i8
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1543, i8* %1544, align 1
  store %struct.Memory* %loadMem_4a939f, %struct.Memory** %MEMORY
  %loadMem_4a93a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 33
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %1547 to i64*
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 5
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %ECX.i1168 = bitcast %union.anon* %1550 to i32*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 15
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %1553 to i64*
  %1554 = load i64, i64* %RBP.i1169
  %1555 = sub i64 %1554, 7148
  %1556 = load i32, i32* %ECX.i1168
  %1557 = zext i32 %1556 to i64
  %1558 = load i64, i64* %PC.i1167
  %1559 = add i64 %1558, 6
  store i64 %1559, i64* %PC.i1167
  %1560 = inttoptr i64 %1555 to i32*
  store i32 %1556, i32* %1560
  store %struct.Memory* %loadMem_4a93a5, %struct.Memory** %MEMORY
  br label %block_.L_4a93ab

block_.L_4a93ab:                                  ; preds = %block_4a93c9, %block_4a9398
  %loadMem_4a93ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 1
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RAX.i1165 = bitcast %union.anon* %1566 to i64*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 15
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %1569 to i64*
  %1570 = load i64, i64* %RBP.i1166
  %1571 = sub i64 %1570, 7148
  %1572 = load i64, i64* %PC.i1164
  %1573 = add i64 %1572, 6
  store i64 %1573, i64* %PC.i1164
  %1574 = inttoptr i64 %1571 to i32*
  %1575 = load i32, i32* %1574
  %1576 = zext i32 %1575 to i64
  store i64 %1576, i64* %RAX.i1165, align 8
  store %struct.Memory* %loadMem_4a93ab, %struct.Memory** %MEMORY
  %loadMem_4a93b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 33
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 5
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %RCX.i1162 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 15
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %1585 to i64*
  %1586 = load i64, i64* %RBP.i1163
  %1587 = sub i64 %1586, 32
  %1588 = load i64, i64* %PC.i1161
  %1589 = add i64 %1588, 4
  store i64 %1589, i64* %PC.i1161
  %1590 = inttoptr i64 %1587 to i64*
  %1591 = load i64, i64* %1590
  store i64 %1591, i64* %RCX.i1162, align 8
  store %struct.Memory* %loadMem_4a93b1, %struct.Memory** %MEMORY
  %loadMem_4a93b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 33
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 5
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %RCX.i1159 = bitcast %union.anon* %1597 to i64*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 7
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RDX.i1160 = bitcast %union.anon* %1600 to i64*
  %1601 = load i64, i64* %RCX.i1159
  %1602 = add i64 %1601, 36
  %1603 = load i64, i64* %PC.i1158
  %1604 = add i64 %1603, 3
  store i64 %1604, i64* %PC.i1158
  %1605 = inttoptr i64 %1602 to i32*
  %1606 = load i32, i32* %1605
  %1607 = zext i32 %1606 to i64
  store i64 %1607, i64* %RDX.i1160, align 8
  store %struct.Memory* %loadMem_4a93b5, %struct.Memory** %MEMORY
  %loadMem_4a93b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 33
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %1610 to i64*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 7
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %RDX.i1156 = bitcast %union.anon* %1613 to i64*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 15
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %1616 to i64*
  %1617 = load i64, i64* %RDX.i1156
  %1618 = load i64, i64* %RBP.i1157
  %1619 = sub i64 %1618, 7128
  %1620 = load i64, i64* %PC.i1155
  %1621 = add i64 %1620, 6
  store i64 %1621, i64* %PC.i1155
  %1622 = trunc i64 %1617 to i32
  %1623 = inttoptr i64 %1619 to i32*
  %1624 = load i32, i32* %1623
  %1625 = add i32 %1624, %1622
  %1626 = zext i32 %1625 to i64
  store i64 %1626, i64* %RDX.i1156, align 8
  %1627 = icmp ult i32 %1625, %1622
  %1628 = icmp ult i32 %1625, %1624
  %1629 = or i1 %1627, %1628
  %1630 = zext i1 %1629 to i8
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1630, i8* %1631, align 1
  %1632 = and i32 %1625, 255
  %1633 = call i32 @llvm.ctpop.i32(i32 %1632)
  %1634 = trunc i32 %1633 to i8
  %1635 = and i8 %1634, 1
  %1636 = xor i8 %1635, 1
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1636, i8* %1637, align 1
  %1638 = xor i32 %1624, %1622
  %1639 = xor i32 %1638, %1625
  %1640 = lshr i32 %1639, 4
  %1641 = trunc i32 %1640 to i8
  %1642 = and i8 %1641, 1
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1642, i8* %1643, align 1
  %1644 = icmp eq i32 %1625, 0
  %1645 = zext i1 %1644 to i8
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1645, i8* %1646, align 1
  %1647 = lshr i32 %1625, 31
  %1648 = trunc i32 %1647 to i8
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1648, i8* %1649, align 1
  %1650 = lshr i32 %1622, 31
  %1651 = lshr i32 %1624, 31
  %1652 = xor i32 %1647, %1650
  %1653 = xor i32 %1647, %1651
  %1654 = add i32 %1652, %1653
  %1655 = icmp eq i32 %1654, 2
  %1656 = zext i1 %1655 to i8
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1656, i8* %1657, align 1
  store %struct.Memory* %loadMem_4a93b8, %struct.Memory** %MEMORY
  %loadMem_4a93be = load %struct.Memory*, %struct.Memory** %MEMORY
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 33
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 7
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RDX.i1154 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RDX.i1154
  %1665 = load i64, i64* %PC.i1153
  %1666 = add i64 %1665, 3
  store i64 %1666, i64* %PC.i1153
  %1667 = trunc i64 %1664 to i32
  %1668 = add i32 1, %1667
  %1669 = zext i32 %1668 to i64
  store i64 %1669, i64* %RDX.i1154, align 8
  %1670 = icmp ult i32 %1668, %1667
  %1671 = icmp ult i32 %1668, 1
  %1672 = or i1 %1670, %1671
  %1673 = zext i1 %1672 to i8
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1673, i8* %1674, align 1
  %1675 = and i32 %1668, 255
  %1676 = call i32 @llvm.ctpop.i32(i32 %1675)
  %1677 = trunc i32 %1676 to i8
  %1678 = and i8 %1677, 1
  %1679 = xor i8 %1678, 1
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1679, i8* %1680, align 1
  %1681 = xor i64 1, %1664
  %1682 = trunc i64 %1681 to i32
  %1683 = xor i32 %1682, %1668
  %1684 = lshr i32 %1683, 4
  %1685 = trunc i32 %1684 to i8
  %1686 = and i8 %1685, 1
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1686, i8* %1687, align 1
  %1688 = icmp eq i32 %1668, 0
  %1689 = zext i1 %1688 to i8
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1689, i8* %1690, align 1
  %1691 = lshr i32 %1668, 31
  %1692 = trunc i32 %1691 to i8
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1692, i8* %1693, align 1
  %1694 = lshr i32 %1667, 31
  %1695 = xor i32 %1691, %1694
  %1696 = add i32 %1695, %1691
  %1697 = icmp eq i32 %1696, 2
  %1698 = zext i1 %1697 to i8
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1698, i8* %1699, align 1
  store %struct.Memory* %loadMem_4a93be, %struct.Memory** %MEMORY
  %loadMem_4a93c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1701 = getelementptr inbounds %struct.GPR, %struct.GPR* %1700, i32 0, i32 33
  %1702 = getelementptr inbounds %struct.Reg, %struct.Reg* %1701, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %1702 to i64*
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 1
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %EAX.i1151 = bitcast %union.anon* %1705 to i32*
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 7
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %EDX.i1152 = bitcast %union.anon* %1708 to i32*
  %1709 = load i32, i32* %EAX.i1151
  %1710 = zext i32 %1709 to i64
  %1711 = load i32, i32* %EDX.i1152
  %1712 = zext i32 %1711 to i64
  %1713 = load i64, i64* %PC.i1150
  %1714 = add i64 %1713, 2
  store i64 %1714, i64* %PC.i1150
  %1715 = sub i32 %1709, %1711
  %1716 = icmp ult i32 %1709, %1711
  %1717 = zext i1 %1716 to i8
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1717, i8* %1718, align 1
  %1719 = and i32 %1715, 255
  %1720 = call i32 @llvm.ctpop.i32(i32 %1719)
  %1721 = trunc i32 %1720 to i8
  %1722 = and i8 %1721, 1
  %1723 = xor i8 %1722, 1
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1723, i8* %1724, align 1
  %1725 = xor i64 %1712, %1710
  %1726 = trunc i64 %1725 to i32
  %1727 = xor i32 %1726, %1715
  %1728 = lshr i32 %1727, 4
  %1729 = trunc i32 %1728 to i8
  %1730 = and i8 %1729, 1
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1730, i8* %1731, align 1
  %1732 = icmp eq i32 %1715, 0
  %1733 = zext i1 %1732 to i8
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1733, i8* %1734, align 1
  %1735 = lshr i32 %1715, 31
  %1736 = trunc i32 %1735 to i8
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1736, i8* %1737, align 1
  %1738 = lshr i32 %1709, 31
  %1739 = lshr i32 %1711, 31
  %1740 = xor i32 %1739, %1738
  %1741 = xor i32 %1735, %1738
  %1742 = add i32 %1741, %1740
  %1743 = icmp eq i32 %1742, 2
  %1744 = zext i1 %1743 to i8
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1744, i8* %1745, align 1
  store %struct.Memory* %loadMem_4a93c1, %struct.Memory** %MEMORY
  %loadMem_4a93c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 33
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %1748 to i64*
  %1749 = load i64, i64* %PC.i1149
  %1750 = add i64 %1749, 58
  %1751 = load i64, i64* %PC.i1149
  %1752 = add i64 %1751, 6
  %1753 = load i64, i64* %PC.i1149
  %1754 = add i64 %1753, 6
  store i64 %1754, i64* %PC.i1149
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1756 = load i8, i8* %1755, align 1
  store i8 %1756, i8* %BRANCH_TAKEN, align 1
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1758 = icmp ne i8 %1756, 0
  %1759 = select i1 %1758, i64 %1750, i64 %1752
  store i64 %1759, i64* %1757, align 8
  store %struct.Memory* %loadMem_4a93c3, %struct.Memory** %MEMORY
  %loadBr_4a93c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a93c3 = icmp eq i8 %loadBr_4a93c3, 1
  br i1 %cmpBr_4a93c3, label %block_.L_4a93fd, label %block_4a93c9

block_4a93c9:                                     ; preds = %block_.L_4a93ab
  %loadMem_4a93c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1761 = getelementptr inbounds %struct.GPR, %struct.GPR* %1760, i32 0, i32 33
  %1762 = getelementptr inbounds %struct.Reg, %struct.Reg* %1761, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %1762 to i64*
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1764 = getelementptr inbounds %struct.GPR, %struct.GPR* %1763, i32 0, i32 1
  %1765 = getelementptr inbounds %struct.Reg, %struct.Reg* %1764, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %1765 to i64*
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1767 = getelementptr inbounds %struct.GPR, %struct.GPR* %1766, i32 0, i32 15
  %1768 = getelementptr inbounds %struct.Reg, %struct.Reg* %1767, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %1768 to i64*
  %1769 = load i64, i64* %RBP.i1148
  %1770 = sub i64 %1769, 7120
  %1771 = load i64, i64* %PC.i1146
  %1772 = add i64 %1771, 7
  store i64 %1772, i64* %PC.i1146
  store i64 %1770, i64* %RAX.i1147, align 8
  store %struct.Memory* %loadMem_4a93c9, %struct.Memory** %MEMORY
  %loadMem_4a93d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 33
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 5
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RCX.i1144 = bitcast %union.anon* %1778 to i64*
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 15
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %1781 to i64*
  %1782 = load i64, i64* %RBP.i1145
  %1783 = sub i64 %1782, 7144
  %1784 = load i64, i64* %PC.i1143
  %1785 = add i64 %1784, 7
  store i64 %1785, i64* %PC.i1143
  %1786 = inttoptr i64 %1783 to i32*
  %1787 = load i32, i32* %1786
  %1788 = sext i32 %1787 to i64
  store i64 %1788, i64* %RCX.i1144, align 8
  store %struct.Memory* %loadMem_4a93d0, %struct.Memory** %MEMORY
  %loadMem_4a93d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 33
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %1791 to i64*
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 5
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %1794 to i64*
  %1795 = load i64, i64* %RCX.i1142
  %1796 = load i64, i64* %PC.i1141
  %1797 = add i64 %1796, 4
  store i64 %1797, i64* %PC.i1141
  %1798 = sext i64 %1795 to i128
  %1799 = and i128 %1798, -18446744073709551616
  %1800 = zext i64 %1795 to i128
  %1801 = or i128 %1799, %1800
  %1802 = mul i128 84, %1801
  %1803 = trunc i128 %1802 to i64
  store i64 %1803, i64* %RCX.i1142, align 8
  %1804 = sext i64 %1803 to i128
  %1805 = icmp ne i128 %1804, %1802
  %1806 = zext i1 %1805 to i8
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1806, i8* %1807, align 1
  %1808 = trunc i128 %1802 to i32
  %1809 = and i32 %1808, 255
  %1810 = call i32 @llvm.ctpop.i32(i32 %1809)
  %1811 = trunc i32 %1810 to i8
  %1812 = and i8 %1811, 1
  %1813 = xor i8 %1812, 1
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1813, i8* %1814, align 1
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1815, align 1
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1816, align 1
  %1817 = lshr i64 %1803, 63
  %1818 = trunc i64 %1817 to i8
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1818, i8* %1819, align 1
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1806, i8* %1820, align 1
  store %struct.Memory* %loadMem_4a93d7, %struct.Memory** %MEMORY
  %loadMem_4a93db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 33
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %1823 to i64*
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 1
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %RAX.i1139 = bitcast %union.anon* %1826 to i64*
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 5
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %RCX.i1140 = bitcast %union.anon* %1829 to i64*
  %1830 = load i64, i64* %RAX.i1139
  %1831 = load i64, i64* %RCX.i1140
  %1832 = load i64, i64* %PC.i1138
  %1833 = add i64 %1832, 3
  store i64 %1833, i64* %PC.i1138
  %1834 = add i64 %1831, %1830
  store i64 %1834, i64* %RAX.i1139, align 8
  %1835 = icmp ult i64 %1834, %1830
  %1836 = icmp ult i64 %1834, %1831
  %1837 = or i1 %1835, %1836
  %1838 = zext i1 %1837 to i8
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1838, i8* %1839, align 1
  %1840 = trunc i64 %1834 to i32
  %1841 = and i32 %1840, 255
  %1842 = call i32 @llvm.ctpop.i32(i32 %1841)
  %1843 = trunc i32 %1842 to i8
  %1844 = and i8 %1843, 1
  %1845 = xor i8 %1844, 1
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1845, i8* %1846, align 1
  %1847 = xor i64 %1831, %1830
  %1848 = xor i64 %1847, %1834
  %1849 = lshr i64 %1848, 4
  %1850 = trunc i64 %1849 to i8
  %1851 = and i8 %1850, 1
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1851, i8* %1852, align 1
  %1853 = icmp eq i64 %1834, 0
  %1854 = zext i1 %1853 to i8
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1854, i8* %1855, align 1
  %1856 = lshr i64 %1834, 63
  %1857 = trunc i64 %1856 to i8
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1857, i8* %1858, align 1
  %1859 = lshr i64 %1830, 63
  %1860 = lshr i64 %1831, 63
  %1861 = xor i64 %1856, %1859
  %1862 = xor i64 %1856, %1860
  %1863 = add i64 %1861, %1862
  %1864 = icmp eq i64 %1863, 2
  %1865 = zext i1 %1864 to i8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1865, i8* %1866, align 1
  store %struct.Memory* %loadMem_4a93db, %struct.Memory** %MEMORY
  %loadMem_4a93de = load %struct.Memory*, %struct.Memory** %MEMORY
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 33
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %1869 to i64*
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 5
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %RCX.i1136 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 15
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %1875 to i64*
  %1876 = load i64, i64* %RBP.i1137
  %1877 = sub i64 %1876, 7148
  %1878 = load i64, i64* %PC.i1135
  %1879 = add i64 %1878, 7
  store i64 %1879, i64* %PC.i1135
  %1880 = inttoptr i64 %1877 to i32*
  %1881 = load i32, i32* %1880
  %1882 = sext i32 %1881 to i64
  store i64 %1882, i64* %RCX.i1136, align 8
  store %struct.Memory* %loadMem_4a93de, %struct.Memory** %MEMORY
  %loadMem_4a93e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 33
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %1885 to i64*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 1
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %1888 to i64*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 5
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %RCX.i1134 = bitcast %union.anon* %1891 to i64*
  %1892 = load i64, i64* %RAX.i1133
  %1893 = load i64, i64* %RCX.i1134
  %1894 = add i64 %1893, %1892
  %1895 = load i64, i64* %PC.i1132
  %1896 = add i64 %1895, 4
  store i64 %1896, i64* %PC.i1132
  %1897 = inttoptr i64 %1894 to i8*
  store i8 63, i8* %1897
  store %struct.Memory* %loadMem_4a93e5, %struct.Memory** %MEMORY
  %loadMem_4a93e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 33
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %1900 to i64*
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 1
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %1903 to i64*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 15
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %1906 to i64*
  %1907 = load i64, i64* %RBP.i1131
  %1908 = sub i64 %1907, 7148
  %1909 = load i64, i64* %PC.i1129
  %1910 = add i64 %1909, 6
  store i64 %1910, i64* %PC.i1129
  %1911 = inttoptr i64 %1908 to i32*
  %1912 = load i32, i32* %1911
  %1913 = zext i32 %1912 to i64
  store i64 %1913, i64* %RAX.i1130, align 8
  store %struct.Memory* %loadMem_4a93e9, %struct.Memory** %MEMORY
  %loadMem_4a93ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1915 = getelementptr inbounds %struct.GPR, %struct.GPR* %1914, i32 0, i32 33
  %1916 = getelementptr inbounds %struct.Reg, %struct.Reg* %1915, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %1916 to i64*
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1918 = getelementptr inbounds %struct.GPR, %struct.GPR* %1917, i32 0, i32 1
  %1919 = getelementptr inbounds %struct.Reg, %struct.Reg* %1918, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %1919 to i64*
  %1920 = load i64, i64* %RAX.i1128
  %1921 = load i64, i64* %PC.i1127
  %1922 = add i64 %1921, 3
  store i64 %1922, i64* %PC.i1127
  %1923 = trunc i64 %1920 to i32
  %1924 = add i32 1, %1923
  %1925 = zext i32 %1924 to i64
  store i64 %1925, i64* %RAX.i1128, align 8
  %1926 = icmp ult i32 %1924, %1923
  %1927 = icmp ult i32 %1924, 1
  %1928 = or i1 %1926, %1927
  %1929 = zext i1 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1929, i8* %1930, align 1
  %1931 = and i32 %1924, 255
  %1932 = call i32 @llvm.ctpop.i32(i32 %1931)
  %1933 = trunc i32 %1932 to i8
  %1934 = and i8 %1933, 1
  %1935 = xor i8 %1934, 1
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1935, i8* %1936, align 1
  %1937 = xor i64 1, %1920
  %1938 = trunc i64 %1937 to i32
  %1939 = xor i32 %1938, %1924
  %1940 = lshr i32 %1939, 4
  %1941 = trunc i32 %1940 to i8
  %1942 = and i8 %1941, 1
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1942, i8* %1943, align 1
  %1944 = icmp eq i32 %1924, 0
  %1945 = zext i1 %1944 to i8
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1945, i8* %1946, align 1
  %1947 = lshr i32 %1924, 31
  %1948 = trunc i32 %1947 to i8
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1948, i8* %1949, align 1
  %1950 = lshr i32 %1923, 31
  %1951 = xor i32 %1947, %1950
  %1952 = add i32 %1951, %1947
  %1953 = icmp eq i32 %1952, 2
  %1954 = zext i1 %1953 to i8
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1954, i8* %1955, align 1
  store %struct.Memory* %loadMem_4a93ef, %struct.Memory** %MEMORY
  %loadMem_4a93f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 33
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1958 to i64*
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1960 = getelementptr inbounds %struct.GPR, %struct.GPR* %1959, i32 0, i32 1
  %1961 = getelementptr inbounds %struct.Reg, %struct.Reg* %1960, i32 0, i32 0
  %EAX.i1125 = bitcast %union.anon* %1961 to i32*
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 15
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %RBP.i1126 = bitcast %union.anon* %1964 to i64*
  %1965 = load i64, i64* %RBP.i1126
  %1966 = sub i64 %1965, 7148
  %1967 = load i32, i32* %EAX.i1125
  %1968 = zext i32 %1967 to i64
  %1969 = load i64, i64* %PC.i1124
  %1970 = add i64 %1969, 6
  store i64 %1970, i64* %PC.i1124
  %1971 = inttoptr i64 %1966 to i32*
  store i32 %1967, i32* %1971
  store %struct.Memory* %loadMem_4a93f2, %struct.Memory** %MEMORY
  %loadMem_4a93f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 33
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %1974 to i64*
  %1975 = load i64, i64* %PC.i1123
  %1976 = add i64 %1975, -77
  %1977 = load i64, i64* %PC.i1123
  %1978 = add i64 %1977, 5
  store i64 %1978, i64* %PC.i1123
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1976, i64* %1979, align 8
  store %struct.Memory* %loadMem_4a93f8, %struct.Memory** %MEMORY
  br label %block_.L_4a93ab

block_.L_4a93fd:                                  ; preds = %block_.L_4a93ab
  %loadMem_4a93fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 33
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %1982 to i64*
  %1983 = load i64, i64* %PC.i1122
  %1984 = add i64 %1983, 5
  %1985 = load i64, i64* %PC.i1122
  %1986 = add i64 %1985, 5
  store i64 %1986, i64* %PC.i1122
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1984, i64* %1987, align 8
  store %struct.Memory* %loadMem_4a93fd, %struct.Memory** %MEMORY
  br label %block_.L_4a9402

block_.L_4a9402:                                  ; preds = %block_.L_4a93fd
  %loadMem_4a9402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 33
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %1990 to i64*
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 1
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %1993 to i64*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 15
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %1996 to i64*
  %1997 = load i64, i64* %RBP.i1121
  %1998 = sub i64 %1997, 7144
  %1999 = load i64, i64* %PC.i1119
  %2000 = add i64 %1999, 6
  store i64 %2000, i64* %PC.i1119
  %2001 = inttoptr i64 %1998 to i32*
  %2002 = load i32, i32* %2001
  %2003 = zext i32 %2002 to i64
  store i64 %2003, i64* %RAX.i1120, align 8
  store %struct.Memory* %loadMem_4a9402, %struct.Memory** %MEMORY
  %loadMem_4a9408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 33
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %2006 to i64*
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2008 = getelementptr inbounds %struct.GPR, %struct.GPR* %2007, i32 0, i32 1
  %2009 = getelementptr inbounds %struct.Reg, %struct.Reg* %2008, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %2009 to i64*
  %2010 = load i64, i64* %RAX.i1118
  %2011 = load i64, i64* %PC.i1117
  %2012 = add i64 %2011, 3
  store i64 %2012, i64* %PC.i1117
  %2013 = trunc i64 %2010 to i32
  %2014 = add i32 1, %2013
  %2015 = zext i32 %2014 to i64
  store i64 %2015, i64* %RAX.i1118, align 8
  %2016 = icmp ult i32 %2014, %2013
  %2017 = icmp ult i32 %2014, 1
  %2018 = or i1 %2016, %2017
  %2019 = zext i1 %2018 to i8
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2019, i8* %2020, align 1
  %2021 = and i32 %2014, 255
  %2022 = call i32 @llvm.ctpop.i32(i32 %2021)
  %2023 = trunc i32 %2022 to i8
  %2024 = and i8 %2023, 1
  %2025 = xor i8 %2024, 1
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2025, i8* %2026, align 1
  %2027 = xor i64 1, %2010
  %2028 = trunc i64 %2027 to i32
  %2029 = xor i32 %2028, %2014
  %2030 = lshr i32 %2029, 4
  %2031 = trunc i32 %2030 to i8
  %2032 = and i8 %2031, 1
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2032, i8* %2033, align 1
  %2034 = icmp eq i32 %2014, 0
  %2035 = zext i1 %2034 to i8
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2035, i8* %2036, align 1
  %2037 = lshr i32 %2014, 31
  %2038 = trunc i32 %2037 to i8
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2038, i8* %2039, align 1
  %2040 = lshr i32 %2013, 31
  %2041 = xor i32 %2037, %2040
  %2042 = add i32 %2041, %2037
  %2043 = icmp eq i32 %2042, 2
  %2044 = zext i1 %2043 to i8
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2044, i8* %2045, align 1
  store %struct.Memory* %loadMem_4a9408, %struct.Memory** %MEMORY
  %loadMem_4a940b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2047 = getelementptr inbounds %struct.GPR, %struct.GPR* %2046, i32 0, i32 33
  %2048 = getelementptr inbounds %struct.Reg, %struct.Reg* %2047, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %2048 to i64*
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 1
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %EAX.i1115 = bitcast %union.anon* %2051 to i32*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 15
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %2054 to i64*
  %2055 = load i64, i64* %RBP.i1116
  %2056 = sub i64 %2055, 7144
  %2057 = load i32, i32* %EAX.i1115
  %2058 = zext i32 %2057 to i64
  %2059 = load i64, i64* %PC.i1114
  %2060 = add i64 %2059, 6
  store i64 %2060, i64* %PC.i1114
  %2061 = inttoptr i64 %2056 to i32*
  store i32 %2057, i32* %2061
  store %struct.Memory* %loadMem_4a940b, %struct.Memory** %MEMORY
  %loadMem_4a9411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 33
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %2064 to i64*
  %2065 = load i64, i64* %PC.i1113
  %2066 = add i64 %2065, -151
  %2067 = load i64, i64* %PC.i1113
  %2068 = add i64 %2067, 5
  store i64 %2068, i64* %PC.i1113
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2066, i64* %2069, align 8
  store %struct.Memory* %loadMem_4a9411, %struct.Memory** %MEMORY
  br label %block_.L_4a937a

block_.L_4a9416:                                  ; preds = %block_.L_4a937a
  %loadMem_4a9416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2071 = getelementptr inbounds %struct.GPR, %struct.GPR* %2070, i32 0, i32 33
  %2072 = getelementptr inbounds %struct.Reg, %struct.Reg* %2071, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %2072 to i64*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 1
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %RAX.i1111 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 15
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %2078 to i64*
  %2079 = load i64, i64* %RBP.i1112
  %2080 = sub i64 %2079, 32
  %2081 = load i64, i64* %PC.i1110
  %2082 = add i64 %2081, 4
  store i64 %2082, i64* %PC.i1110
  %2083 = inttoptr i64 %2080 to i64*
  %2084 = load i64, i64* %2083
  store i64 %2084, i64* %RAX.i1111, align 8
  store %struct.Memory* %loadMem_4a9416, %struct.Memory** %MEMORY
  %loadMem_4a941a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2086 = getelementptr inbounds %struct.GPR, %struct.GPR* %2085, i32 0, i32 33
  %2087 = getelementptr inbounds %struct.Reg, %struct.Reg* %2086, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %2087 to i64*
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 1
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 5
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %2093 to i64*
  %2094 = load i64, i64* %RAX.i1108
  %2095 = add i64 %2094, 48
  %2096 = load i64, i64* %PC.i1107
  %2097 = add i64 %2096, 3
  store i64 %2097, i64* %PC.i1107
  %2098 = inttoptr i64 %2095 to i32*
  %2099 = load i32, i32* %2098
  %2100 = zext i32 %2099 to i64
  store i64 %2100, i64* %RCX.i1109, align 8
  store %struct.Memory* %loadMem_4a941a, %struct.Memory** %MEMORY
  %loadMem_4a941d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2102 = getelementptr inbounds %struct.GPR, %struct.GPR* %2101, i32 0, i32 33
  %2103 = getelementptr inbounds %struct.Reg, %struct.Reg* %2102, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %2103 to i64*
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2105 = getelementptr inbounds %struct.GPR, %struct.GPR* %2104, i32 0, i32 5
  %2106 = getelementptr inbounds %struct.Reg, %struct.Reg* %2105, i32 0, i32 0
  %RCX.i1106 = bitcast %union.anon* %2106 to i64*
  %2107 = load i64, i64* %RCX.i1106
  %2108 = load i64, i64* %PC.i1105
  %2109 = add i64 %2108, 3
  store i64 %2109, i64* %PC.i1105
  %2110 = and i64 2, %2107
  %2111 = trunc i64 %2110 to i32
  store i64 %2110, i64* %RCX.i1106, align 8
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2112, align 1
  %2113 = and i32 %2111, 255
  %2114 = call i32 @llvm.ctpop.i32(i32 %2113)
  %2115 = trunc i32 %2114 to i8
  %2116 = and i8 %2115, 1
  %2117 = xor i8 %2116, 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2117, i8* %2118, align 1
  %2119 = icmp eq i32 %2111, 0
  %2120 = zext i1 %2119 to i8
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2120, i8* %2121, align 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2122, align 1
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2123, align 1
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2124, align 1
  store %struct.Memory* %loadMem_4a941d, %struct.Memory** %MEMORY
  %loadMem_4a9420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 33
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 5
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %ECX.i1104 = bitcast %union.anon* %2130 to i32*
  %2131 = load i32, i32* %ECX.i1104
  %2132 = zext i32 %2131 to i64
  %2133 = load i64, i64* %PC.i1103
  %2134 = add i64 %2133, 3
  store i64 %2134, i64* %PC.i1103
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2135, align 1
  %2136 = and i32 %2131, 255
  %2137 = call i32 @llvm.ctpop.i32(i32 %2136)
  %2138 = trunc i32 %2137 to i8
  %2139 = and i8 %2138, 1
  %2140 = xor i8 %2139, 1
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2140, i8* %2141, align 1
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2142, align 1
  %2143 = icmp eq i32 %2131, 0
  %2144 = zext i1 %2143 to i8
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2144, i8* %2145, align 1
  %2146 = lshr i32 %2131, 31
  %2147 = trunc i32 %2146 to i8
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2147, i8* %2148, align 1
  %2149 = lshr i32 %2131, 31
  %2150 = xor i32 %2146, %2149
  %2151 = add i32 %2150, %2149
  %2152 = icmp eq i32 %2151, 2
  %2153 = zext i1 %2152 to i8
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2153, i8* %2154, align 1
  store %struct.Memory* %loadMem_4a9420, %struct.Memory** %MEMORY
  %loadMem_4a9423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2156 = getelementptr inbounds %struct.GPR, %struct.GPR* %2155, i32 0, i32 33
  %2157 = getelementptr inbounds %struct.Reg, %struct.Reg* %2156, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %2157 to i64*
  %2158 = load i64, i64* %PC.i1102
  %2159 = add i64 %2158, 146
  %2160 = load i64, i64* %PC.i1102
  %2161 = add i64 %2160, 6
  %2162 = load i64, i64* %PC.i1102
  %2163 = add i64 %2162, 6
  store i64 %2163, i64* %PC.i1102
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2165 = load i8, i8* %2164, align 1
  store i8 %2165, i8* %BRANCH_TAKEN, align 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2167 = icmp ne i8 %2165, 0
  %2168 = select i1 %2167, i64 %2159, i64 %2161
  store i64 %2168, i64* %2166, align 8
  store %struct.Memory* %loadMem_4a9423, %struct.Memory** %MEMORY
  %loadBr_4a9423 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9423 = icmp eq i8 %loadBr_4a9423, 1
  br i1 %cmpBr_4a9423, label %block_.L_4a94b5, label %block_4a9429

block_4a9429:                                     ; preds = %block_.L_4a9416
  %loadMem_4a9429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 33
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %2171 to i64*
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 1
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %RAX.i1100 = bitcast %union.anon* %2174 to i64*
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 15
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %2177 to i64*
  %2178 = load i64, i64* %RBP.i1101
  %2179 = sub i64 %2178, 7124
  %2180 = load i64, i64* %PC.i1099
  %2181 = add i64 %2180, 6
  store i64 %2181, i64* %PC.i1099
  %2182 = inttoptr i64 %2179 to i32*
  %2183 = load i32, i32* %2182
  %2184 = zext i32 %2183 to i64
  store i64 %2184, i64* %RAX.i1100, align 8
  store %struct.Memory* %loadMem_4a9429, %struct.Memory** %MEMORY
  %loadMem_4a942f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 5
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %RCX.i1097 = bitcast %union.anon* %2190 to i64*
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2192 = getelementptr inbounds %struct.GPR, %struct.GPR* %2191, i32 0, i32 15
  %2193 = getelementptr inbounds %struct.Reg, %struct.Reg* %2192, i32 0, i32 0
  %RBP.i1098 = bitcast %union.anon* %2193 to i64*
  %2194 = load i64, i64* %RBP.i1098
  %2195 = sub i64 %2194, 32
  %2196 = load i64, i64* %PC.i1096
  %2197 = add i64 %2196, 4
  store i64 %2197, i64* %PC.i1096
  %2198 = inttoptr i64 %2195 to i64*
  %2199 = load i64, i64* %2198
  store i64 %2199, i64* %RCX.i1097, align 8
  store %struct.Memory* %loadMem_4a942f, %struct.Memory** %MEMORY
  %loadMem_4a9433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2201 = getelementptr inbounds %struct.GPR, %struct.GPR* %2200, i32 0, i32 33
  %2202 = getelementptr inbounds %struct.Reg, %struct.Reg* %2201, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %2202 to i64*
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 1
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %RAX.i1094 = bitcast %union.anon* %2205 to i64*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 5
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %RCX.i1095 = bitcast %union.anon* %2208 to i64*
  %2209 = load i64, i64* %RAX.i1094
  %2210 = load i64, i64* %RCX.i1095
  %2211 = add i64 %2210, 32
  %2212 = load i64, i64* %PC.i1093
  %2213 = add i64 %2212, 3
  store i64 %2213, i64* %PC.i1093
  %2214 = trunc i64 %2209 to i32
  %2215 = inttoptr i64 %2211 to i32*
  %2216 = load i32, i32* %2215
  %2217 = add i32 %2216, %2214
  %2218 = zext i32 %2217 to i64
  store i64 %2218, i64* %RAX.i1094, align 8
  %2219 = icmp ult i32 %2217, %2214
  %2220 = icmp ult i32 %2217, %2216
  %2221 = or i1 %2219, %2220
  %2222 = zext i1 %2221 to i8
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2222, i8* %2223, align 1
  %2224 = and i32 %2217, 255
  %2225 = call i32 @llvm.ctpop.i32(i32 %2224)
  %2226 = trunc i32 %2225 to i8
  %2227 = and i8 %2226, 1
  %2228 = xor i8 %2227, 1
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2228, i8* %2229, align 1
  %2230 = xor i32 %2216, %2214
  %2231 = xor i32 %2230, %2217
  %2232 = lshr i32 %2231, 4
  %2233 = trunc i32 %2232 to i8
  %2234 = and i8 %2233, 1
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2234, i8* %2235, align 1
  %2236 = icmp eq i32 %2217, 0
  %2237 = zext i1 %2236 to i8
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2237, i8* %2238, align 1
  %2239 = lshr i32 %2217, 31
  %2240 = trunc i32 %2239 to i8
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2240, i8* %2241, align 1
  %2242 = lshr i32 %2214, 31
  %2243 = lshr i32 %2216, 31
  %2244 = xor i32 %2239, %2242
  %2245 = xor i32 %2239, %2243
  %2246 = add i32 %2244, %2245
  %2247 = icmp eq i32 %2246, 2
  %2248 = zext i1 %2247 to i8
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2248, i8* %2249, align 1
  store %struct.Memory* %loadMem_4a9433, %struct.Memory** %MEMORY
  %loadMem_4a9436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 33
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %2252 to i64*
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 1
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %2255 to i64*
  %2256 = load i64, i64* %RAX.i1092
  %2257 = load i64, i64* %PC.i1091
  %2258 = add i64 %2257, 3
  store i64 %2258, i64* %PC.i1091
  %2259 = trunc i64 %2256 to i32
  %2260 = add i32 1, %2259
  %2261 = zext i32 %2260 to i64
  store i64 %2261, i64* %RAX.i1092, align 8
  %2262 = icmp ult i32 %2260, %2259
  %2263 = icmp ult i32 %2260, 1
  %2264 = or i1 %2262, %2263
  %2265 = zext i1 %2264 to i8
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2265, i8* %2266, align 1
  %2267 = and i32 %2260, 255
  %2268 = call i32 @llvm.ctpop.i32(i32 %2267)
  %2269 = trunc i32 %2268 to i8
  %2270 = and i8 %2269, 1
  %2271 = xor i8 %2270, 1
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2271, i8* %2272, align 1
  %2273 = xor i64 1, %2256
  %2274 = trunc i64 %2273 to i32
  %2275 = xor i32 %2274, %2260
  %2276 = lshr i32 %2275, 4
  %2277 = trunc i32 %2276 to i8
  %2278 = and i8 %2277, 1
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2278, i8* %2279, align 1
  %2280 = icmp eq i32 %2260, 0
  %2281 = zext i1 %2280 to i8
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2281, i8* %2282, align 1
  %2283 = lshr i32 %2260, 31
  %2284 = trunc i32 %2283 to i8
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2284, i8* %2285, align 1
  %2286 = lshr i32 %2259, 31
  %2287 = xor i32 %2283, %2286
  %2288 = add i32 %2287, %2283
  %2289 = icmp eq i32 %2288, 2
  %2290 = zext i1 %2289 to i8
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2290, i8* %2291, align 1
  store %struct.Memory* %loadMem_4a9436, %struct.Memory** %MEMORY
  %loadMem_4a9439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 33
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %2294 to i64*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 1
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %EAX.i1089 = bitcast %union.anon* %2297 to i32*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 15
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %2300 to i64*
  %2301 = load i64, i64* %RBP.i1090
  %2302 = sub i64 %2301, 7144
  %2303 = load i32, i32* %EAX.i1089
  %2304 = zext i32 %2303 to i64
  %2305 = load i64, i64* %PC.i1088
  %2306 = add i64 %2305, 6
  store i64 %2306, i64* %PC.i1088
  %2307 = inttoptr i64 %2302 to i32*
  store i32 %2303, i32* %2307
  store %struct.Memory* %loadMem_4a9439, %struct.Memory** %MEMORY
  br label %block_.L_4a943f

block_.L_4a943f:                                  ; preds = %block_.L_4a949c, %block_4a9429
  %loadMem_4a943f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 33
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 15
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %RBP.i1087
  %2315 = sub i64 %2314, 7144
  %2316 = load i64, i64* %PC.i1086
  %2317 = add i64 %2316, 7
  store i64 %2317, i64* %PC.i1086
  %2318 = inttoptr i64 %2315 to i32*
  %2319 = load i32, i32* %2318
  %2320 = sub i32 %2319, 63
  %2321 = icmp ult i32 %2319, 63
  %2322 = zext i1 %2321 to i8
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2322, i8* %2323, align 1
  %2324 = and i32 %2320, 255
  %2325 = call i32 @llvm.ctpop.i32(i32 %2324)
  %2326 = trunc i32 %2325 to i8
  %2327 = and i8 %2326, 1
  %2328 = xor i8 %2327, 1
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2328, i8* %2329, align 1
  %2330 = xor i32 %2319, 63
  %2331 = xor i32 %2330, %2320
  %2332 = lshr i32 %2331, 4
  %2333 = trunc i32 %2332 to i8
  %2334 = and i8 %2333, 1
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2334, i8* %2335, align 1
  %2336 = icmp eq i32 %2320, 0
  %2337 = zext i1 %2336 to i8
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2337, i8* %2338, align 1
  %2339 = lshr i32 %2320, 31
  %2340 = trunc i32 %2339 to i8
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2340, i8* %2341, align 1
  %2342 = lshr i32 %2319, 31
  %2343 = xor i32 %2339, %2342
  %2344 = add i32 %2343, %2342
  %2345 = icmp eq i32 %2344, 2
  %2346 = zext i1 %2345 to i8
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2346, i8* %2347, align 1
  store %struct.Memory* %loadMem_4a943f, %struct.Memory** %MEMORY
  %loadMem_4a9446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 33
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %2350 to i64*
  %2351 = load i64, i64* %PC.i1085
  %2352 = add i64 %2351, 106
  %2353 = load i64, i64* %PC.i1085
  %2354 = add i64 %2353, 6
  %2355 = load i64, i64* %PC.i1085
  %2356 = add i64 %2355, 6
  store i64 %2356, i64* %PC.i1085
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2358 = load i8, i8* %2357, align 1
  store i8 %2358, i8* %BRANCH_TAKEN, align 1
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2360 = icmp ne i8 %2358, 0
  %2361 = select i1 %2360, i64 %2352, i64 %2354
  store i64 %2361, i64* %2359, align 8
  store %struct.Memory* %loadMem_4a9446, %struct.Memory** %MEMORY
  %loadBr_4a9446 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9446 = icmp eq i8 %loadBr_4a9446, 1
  br i1 %cmpBr_4a9446, label %block_.L_4a94b0, label %block_4a944c

block_4a944c:                                     ; preds = %block_.L_4a943f
  %loadMem_4a944c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 33
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %2364 to i64*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 15
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %2367 to i64*
  %2368 = load i64, i64* %RBP.i1084
  %2369 = sub i64 %2368, 7148
  %2370 = load i64, i64* %PC.i1083
  %2371 = add i64 %2370, 10
  store i64 %2371, i64* %PC.i1083
  %2372 = inttoptr i64 %2369 to i32*
  store i32 0, i32* %2372
  store %struct.Memory* %loadMem_4a944c, %struct.Memory** %MEMORY
  br label %block_.L_4a9456

block_.L_4a9456:                                  ; preds = %block_4a9463, %block_4a944c
  %loadMem_4a9456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 15
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %2378 to i64*
  %2379 = load i64, i64* %RBP.i1082
  %2380 = sub i64 %2379, 7148
  %2381 = load i64, i64* %PC.i1081
  %2382 = add i64 %2381, 7
  store i64 %2382, i64* %PC.i1081
  %2383 = inttoptr i64 %2380 to i32*
  %2384 = load i32, i32* %2383
  %2385 = sub i32 %2384, 63
  %2386 = icmp ult i32 %2384, 63
  %2387 = zext i1 %2386 to i8
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2387, i8* %2388, align 1
  %2389 = and i32 %2385, 255
  %2390 = call i32 @llvm.ctpop.i32(i32 %2389)
  %2391 = trunc i32 %2390 to i8
  %2392 = and i8 %2391, 1
  %2393 = xor i8 %2392, 1
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2393, i8* %2394, align 1
  %2395 = xor i32 %2384, 63
  %2396 = xor i32 %2395, %2385
  %2397 = lshr i32 %2396, 4
  %2398 = trunc i32 %2397 to i8
  %2399 = and i8 %2398, 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2399, i8* %2400, align 1
  %2401 = icmp eq i32 %2385, 0
  %2402 = zext i1 %2401 to i8
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2402, i8* %2403, align 1
  %2404 = lshr i32 %2385, 31
  %2405 = trunc i32 %2404 to i8
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2405, i8* %2406, align 1
  %2407 = lshr i32 %2384, 31
  %2408 = xor i32 %2404, %2407
  %2409 = add i32 %2408, %2407
  %2410 = icmp eq i32 %2409, 2
  %2411 = zext i1 %2410 to i8
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2411, i8* %2412, align 1
  store %struct.Memory* %loadMem_4a9456, %struct.Memory** %MEMORY
  %loadMem_4a945d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 33
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %2415 to i64*
  %2416 = load i64, i64* %PC.i1080
  %2417 = add i64 %2416, 58
  %2418 = load i64, i64* %PC.i1080
  %2419 = add i64 %2418, 6
  %2420 = load i64, i64* %PC.i1080
  %2421 = add i64 %2420, 6
  store i64 %2421, i64* %PC.i1080
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2423 = load i8, i8* %2422, align 1
  store i8 %2423, i8* %BRANCH_TAKEN, align 1
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2425 = icmp ne i8 %2423, 0
  %2426 = select i1 %2425, i64 %2417, i64 %2419
  store i64 %2426, i64* %2424, align 8
  store %struct.Memory* %loadMem_4a945d, %struct.Memory** %MEMORY
  %loadBr_4a945d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a945d = icmp eq i8 %loadBr_4a945d, 1
  br i1 %cmpBr_4a945d, label %block_.L_4a9497, label %block_4a9463

block_4a9463:                                     ; preds = %block_.L_4a9456
  %loadMem_4a9463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 33
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 1
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %2432 to i64*
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 15
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %2435 to i64*
  %2436 = load i64, i64* %RBP.i1079
  %2437 = sub i64 %2436, 7120
  %2438 = load i64, i64* %PC.i1077
  %2439 = add i64 %2438, 7
  store i64 %2439, i64* %PC.i1077
  store i64 %2437, i64* %RAX.i1078, align 8
  store %struct.Memory* %loadMem_4a9463, %struct.Memory** %MEMORY
  %loadMem_4a946a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 33
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %2442 to i64*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 5
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %2445 to i64*
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 15
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %2448 to i64*
  %2449 = load i64, i64* %RBP.i1076
  %2450 = sub i64 %2449, 7144
  %2451 = load i64, i64* %PC.i1074
  %2452 = add i64 %2451, 7
  store i64 %2452, i64* %PC.i1074
  %2453 = inttoptr i64 %2450 to i32*
  %2454 = load i32, i32* %2453
  %2455 = sext i32 %2454 to i64
  store i64 %2455, i64* %RCX.i1075, align 8
  store %struct.Memory* %loadMem_4a946a, %struct.Memory** %MEMORY
  %loadMem_4a9471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 33
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 5
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RCX.i1073 = bitcast %union.anon* %2461 to i64*
  %2462 = load i64, i64* %RCX.i1073
  %2463 = load i64, i64* %PC.i1072
  %2464 = add i64 %2463, 4
  store i64 %2464, i64* %PC.i1072
  %2465 = sext i64 %2462 to i128
  %2466 = and i128 %2465, -18446744073709551616
  %2467 = zext i64 %2462 to i128
  %2468 = or i128 %2466, %2467
  %2469 = mul i128 84, %2468
  %2470 = trunc i128 %2469 to i64
  store i64 %2470, i64* %RCX.i1073, align 8
  %2471 = sext i64 %2470 to i128
  %2472 = icmp ne i128 %2471, %2469
  %2473 = zext i1 %2472 to i8
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2473, i8* %2474, align 1
  %2475 = trunc i128 %2469 to i32
  %2476 = and i32 %2475, 255
  %2477 = call i32 @llvm.ctpop.i32(i32 %2476)
  %2478 = trunc i32 %2477 to i8
  %2479 = and i8 %2478, 1
  %2480 = xor i8 %2479, 1
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2480, i8* %2481, align 1
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2482, align 1
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2483, align 1
  %2484 = lshr i64 %2470, 63
  %2485 = trunc i64 %2484 to i8
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2485, i8* %2486, align 1
  %2487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2473, i8* %2487, align 1
  store %struct.Memory* %loadMem_4a9471, %struct.Memory** %MEMORY
  %loadMem_4a9475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 33
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %2490 to i64*
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 1
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 5
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RCX.i1071 = bitcast %union.anon* %2496 to i64*
  %2497 = load i64, i64* %RAX.i1070
  %2498 = load i64, i64* %RCX.i1071
  %2499 = load i64, i64* %PC.i1069
  %2500 = add i64 %2499, 3
  store i64 %2500, i64* %PC.i1069
  %2501 = add i64 %2498, %2497
  store i64 %2501, i64* %RAX.i1070, align 8
  %2502 = icmp ult i64 %2501, %2497
  %2503 = icmp ult i64 %2501, %2498
  %2504 = or i1 %2502, %2503
  %2505 = zext i1 %2504 to i8
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2505, i8* %2506, align 1
  %2507 = trunc i64 %2501 to i32
  %2508 = and i32 %2507, 255
  %2509 = call i32 @llvm.ctpop.i32(i32 %2508)
  %2510 = trunc i32 %2509 to i8
  %2511 = and i8 %2510, 1
  %2512 = xor i8 %2511, 1
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2512, i8* %2513, align 1
  %2514 = xor i64 %2498, %2497
  %2515 = xor i64 %2514, %2501
  %2516 = lshr i64 %2515, 4
  %2517 = trunc i64 %2516 to i8
  %2518 = and i8 %2517, 1
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2518, i8* %2519, align 1
  %2520 = icmp eq i64 %2501, 0
  %2521 = zext i1 %2520 to i8
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2521, i8* %2522, align 1
  %2523 = lshr i64 %2501, 63
  %2524 = trunc i64 %2523 to i8
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2524, i8* %2525, align 1
  %2526 = lshr i64 %2497, 63
  %2527 = lshr i64 %2498, 63
  %2528 = xor i64 %2523, %2526
  %2529 = xor i64 %2523, %2527
  %2530 = add i64 %2528, %2529
  %2531 = icmp eq i64 %2530, 2
  %2532 = zext i1 %2531 to i8
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2532, i8* %2533, align 1
  store %struct.Memory* %loadMem_4a9475, %struct.Memory** %MEMORY
  %loadMem_4a9478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2535 = getelementptr inbounds %struct.GPR, %struct.GPR* %2534, i32 0, i32 33
  %2536 = getelementptr inbounds %struct.Reg, %struct.Reg* %2535, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %2536 to i64*
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 5
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %RCX.i1067 = bitcast %union.anon* %2539 to i64*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 15
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %2542 to i64*
  %2543 = load i64, i64* %RBP.i1068
  %2544 = sub i64 %2543, 7148
  %2545 = load i64, i64* %PC.i1066
  %2546 = add i64 %2545, 7
  store i64 %2546, i64* %PC.i1066
  %2547 = inttoptr i64 %2544 to i32*
  %2548 = load i32, i32* %2547
  %2549 = sext i32 %2548 to i64
  store i64 %2549, i64* %RCX.i1067, align 8
  store %struct.Memory* %loadMem_4a9478, %struct.Memory** %MEMORY
  %loadMem_4a947f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 33
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %2552 to i64*
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 1
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %2555 to i64*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 5
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %2558 to i64*
  %2559 = load i64, i64* %RAX.i1064
  %2560 = load i64, i64* %RCX.i1065
  %2561 = add i64 %2560, %2559
  %2562 = load i64, i64* %PC.i1063
  %2563 = add i64 %2562, 4
  store i64 %2563, i64* %PC.i1063
  %2564 = inttoptr i64 %2561 to i8*
  store i8 45, i8* %2564
  store %struct.Memory* %loadMem_4a947f, %struct.Memory** %MEMORY
  %loadMem_4a9483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2566 = getelementptr inbounds %struct.GPR, %struct.GPR* %2565, i32 0, i32 33
  %2567 = getelementptr inbounds %struct.Reg, %struct.Reg* %2566, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %2567 to i64*
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 1
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %2570 to i64*
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 15
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %2573 to i64*
  %2574 = load i64, i64* %RBP.i1062
  %2575 = sub i64 %2574, 7148
  %2576 = load i64, i64* %PC.i1060
  %2577 = add i64 %2576, 6
  store i64 %2577, i64* %PC.i1060
  %2578 = inttoptr i64 %2575 to i32*
  %2579 = load i32, i32* %2578
  %2580 = zext i32 %2579 to i64
  store i64 %2580, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_4a9483, %struct.Memory** %MEMORY
  %loadMem_4a9489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 33
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %2583 to i64*
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 1
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %2586 to i64*
  %2587 = load i64, i64* %RAX.i1059
  %2588 = load i64, i64* %PC.i1058
  %2589 = add i64 %2588, 3
  store i64 %2589, i64* %PC.i1058
  %2590 = trunc i64 %2587 to i32
  %2591 = add i32 1, %2590
  %2592 = zext i32 %2591 to i64
  store i64 %2592, i64* %RAX.i1059, align 8
  %2593 = icmp ult i32 %2591, %2590
  %2594 = icmp ult i32 %2591, 1
  %2595 = or i1 %2593, %2594
  %2596 = zext i1 %2595 to i8
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2596, i8* %2597, align 1
  %2598 = and i32 %2591, 255
  %2599 = call i32 @llvm.ctpop.i32(i32 %2598)
  %2600 = trunc i32 %2599 to i8
  %2601 = and i8 %2600, 1
  %2602 = xor i8 %2601, 1
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2602, i8* %2603, align 1
  %2604 = xor i64 1, %2587
  %2605 = trunc i64 %2604 to i32
  %2606 = xor i32 %2605, %2591
  %2607 = lshr i32 %2606, 4
  %2608 = trunc i32 %2607 to i8
  %2609 = and i8 %2608, 1
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2609, i8* %2610, align 1
  %2611 = icmp eq i32 %2591, 0
  %2612 = zext i1 %2611 to i8
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2612, i8* %2613, align 1
  %2614 = lshr i32 %2591, 31
  %2615 = trunc i32 %2614 to i8
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2615, i8* %2616, align 1
  %2617 = lshr i32 %2590, 31
  %2618 = xor i32 %2614, %2617
  %2619 = add i32 %2618, %2614
  %2620 = icmp eq i32 %2619, 2
  %2621 = zext i1 %2620 to i8
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2621, i8* %2622, align 1
  store %struct.Memory* %loadMem_4a9489, %struct.Memory** %MEMORY
  %loadMem_4a948c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 33
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %2625 to i64*
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 1
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %EAX.i1056 = bitcast %union.anon* %2628 to i32*
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 15
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %2631 to i64*
  %2632 = load i64, i64* %RBP.i1057
  %2633 = sub i64 %2632, 7148
  %2634 = load i32, i32* %EAX.i1056
  %2635 = zext i32 %2634 to i64
  %2636 = load i64, i64* %PC.i1055
  %2637 = add i64 %2636, 6
  store i64 %2637, i64* %PC.i1055
  %2638 = inttoptr i64 %2633 to i32*
  store i32 %2634, i32* %2638
  store %struct.Memory* %loadMem_4a948c, %struct.Memory** %MEMORY
  %loadMem_4a9492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 33
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %2641 to i64*
  %2642 = load i64, i64* %PC.i1054
  %2643 = add i64 %2642, -60
  %2644 = load i64, i64* %PC.i1054
  %2645 = add i64 %2644, 5
  store i64 %2645, i64* %PC.i1054
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2643, i64* %2646, align 8
  store %struct.Memory* %loadMem_4a9492, %struct.Memory** %MEMORY
  br label %block_.L_4a9456

block_.L_4a9497:                                  ; preds = %block_.L_4a9456
  %loadMem_4a9497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %2649 to i64*
  %2650 = load i64, i64* %PC.i1053
  %2651 = add i64 %2650, 5
  %2652 = load i64, i64* %PC.i1053
  %2653 = add i64 %2652, 5
  store i64 %2653, i64* %PC.i1053
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2651, i64* %2654, align 8
  store %struct.Memory* %loadMem_4a9497, %struct.Memory** %MEMORY
  br label %block_.L_4a949c

block_.L_4a949c:                                  ; preds = %block_.L_4a9497
  %loadMem_4a949c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2656 = getelementptr inbounds %struct.GPR, %struct.GPR* %2655, i32 0, i32 33
  %2657 = getelementptr inbounds %struct.Reg, %struct.Reg* %2656, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %2657 to i64*
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2659 = getelementptr inbounds %struct.GPR, %struct.GPR* %2658, i32 0, i32 1
  %2660 = getelementptr inbounds %struct.Reg, %struct.Reg* %2659, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %2660 to i64*
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 15
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %2663 to i64*
  %2664 = load i64, i64* %RBP.i1052
  %2665 = sub i64 %2664, 7144
  %2666 = load i64, i64* %PC.i1050
  %2667 = add i64 %2666, 6
  store i64 %2667, i64* %PC.i1050
  %2668 = inttoptr i64 %2665 to i32*
  %2669 = load i32, i32* %2668
  %2670 = zext i32 %2669 to i64
  store i64 %2670, i64* %RAX.i1051, align 8
  store %struct.Memory* %loadMem_4a949c, %struct.Memory** %MEMORY
  %loadMem_4a94a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 33
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %2673 to i64*
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 1
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %2676 to i64*
  %2677 = load i64, i64* %RAX.i1049
  %2678 = load i64, i64* %PC.i1048
  %2679 = add i64 %2678, 3
  store i64 %2679, i64* %PC.i1048
  %2680 = trunc i64 %2677 to i32
  %2681 = add i32 1, %2680
  %2682 = zext i32 %2681 to i64
  store i64 %2682, i64* %RAX.i1049, align 8
  %2683 = icmp ult i32 %2681, %2680
  %2684 = icmp ult i32 %2681, 1
  %2685 = or i1 %2683, %2684
  %2686 = zext i1 %2685 to i8
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2686, i8* %2687, align 1
  %2688 = and i32 %2681, 255
  %2689 = call i32 @llvm.ctpop.i32(i32 %2688)
  %2690 = trunc i32 %2689 to i8
  %2691 = and i8 %2690, 1
  %2692 = xor i8 %2691, 1
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2692, i8* %2693, align 1
  %2694 = xor i64 1, %2677
  %2695 = trunc i64 %2694 to i32
  %2696 = xor i32 %2695, %2681
  %2697 = lshr i32 %2696, 4
  %2698 = trunc i32 %2697 to i8
  %2699 = and i8 %2698, 1
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2699, i8* %2700, align 1
  %2701 = icmp eq i32 %2681, 0
  %2702 = zext i1 %2701 to i8
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2702, i8* %2703, align 1
  %2704 = lshr i32 %2681, 31
  %2705 = trunc i32 %2704 to i8
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2705, i8* %2706, align 1
  %2707 = lshr i32 %2680, 31
  %2708 = xor i32 %2704, %2707
  %2709 = add i32 %2708, %2704
  %2710 = icmp eq i32 %2709, 2
  %2711 = zext i1 %2710 to i8
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2711, i8* %2712, align 1
  store %struct.Memory* %loadMem_4a94a2, %struct.Memory** %MEMORY
  %loadMem_4a94a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2714 = getelementptr inbounds %struct.GPR, %struct.GPR* %2713, i32 0, i32 33
  %2715 = getelementptr inbounds %struct.Reg, %struct.Reg* %2714, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %2715 to i64*
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 1
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %EAX.i1046 = bitcast %union.anon* %2718 to i32*
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 15
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %2721 to i64*
  %2722 = load i64, i64* %RBP.i1047
  %2723 = sub i64 %2722, 7144
  %2724 = load i32, i32* %EAX.i1046
  %2725 = zext i32 %2724 to i64
  %2726 = load i64, i64* %PC.i1045
  %2727 = add i64 %2726, 6
  store i64 %2727, i64* %PC.i1045
  %2728 = inttoptr i64 %2723 to i32*
  store i32 %2724, i32* %2728
  store %struct.Memory* %loadMem_4a94a5, %struct.Memory** %MEMORY
  %loadMem_4a94ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 33
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %2731 to i64*
  %2732 = load i64, i64* %PC.i1044
  %2733 = add i64 %2732, -108
  %2734 = load i64, i64* %PC.i1044
  %2735 = add i64 %2734, 5
  store i64 %2735, i64* %PC.i1044
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2733, i64* %2736, align 8
  store %struct.Memory* %loadMem_4a94ab, %struct.Memory** %MEMORY
  br label %block_.L_4a943f

block_.L_4a94b0:                                  ; preds = %block_.L_4a943f
  %loadMem_4a94b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 33
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %PC.i1043
  %2741 = add i64 %2740, 5
  %2742 = load i64, i64* %PC.i1043
  %2743 = add i64 %2742, 5
  store i64 %2743, i64* %PC.i1043
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2741, i64* %2744, align 8
  store %struct.Memory* %loadMem_4a94b0, %struct.Memory** %MEMORY
  br label %block_.L_4a94b5

block_.L_4a94b5:                                  ; preds = %block_.L_4a94b0, %block_.L_4a9416
  %loadMem_4a94b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2746 = getelementptr inbounds %struct.GPR, %struct.GPR* %2745, i32 0, i32 33
  %2747 = getelementptr inbounds %struct.Reg, %struct.Reg* %2746, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %2747 to i64*
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 1
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %2750 to i64*
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 15
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %2753 to i64*
  %2754 = load i64, i64* %RBP.i1042
  %2755 = sub i64 %2754, 32
  %2756 = load i64, i64* %PC.i1040
  %2757 = add i64 %2756, 4
  store i64 %2757, i64* %PC.i1040
  %2758 = inttoptr i64 %2755 to i64*
  %2759 = load i64, i64* %2758
  store i64 %2759, i64* %RAX.i1041, align 8
  store %struct.Memory* %loadMem_4a94b5, %struct.Memory** %MEMORY
  %loadMem_4a94b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2761 = getelementptr inbounds %struct.GPR, %struct.GPR* %2760, i32 0, i32 33
  %2762 = getelementptr inbounds %struct.Reg, %struct.Reg* %2761, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %2762 to i64*
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2764 = getelementptr inbounds %struct.GPR, %struct.GPR* %2763, i32 0, i32 1
  %2765 = getelementptr inbounds %struct.Reg, %struct.Reg* %2764, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %2765 to i64*
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2767 = getelementptr inbounds %struct.GPR, %struct.GPR* %2766, i32 0, i32 5
  %2768 = getelementptr inbounds %struct.Reg, %struct.Reg* %2767, i32 0, i32 0
  %RCX.i1039 = bitcast %union.anon* %2768 to i64*
  %2769 = load i64, i64* %RAX.i1038
  %2770 = add i64 %2769, 48
  %2771 = load i64, i64* %PC.i1037
  %2772 = add i64 %2771, 3
  store i64 %2772, i64* %PC.i1037
  %2773 = inttoptr i64 %2770 to i32*
  %2774 = load i32, i32* %2773
  %2775 = zext i32 %2774 to i64
  store i64 %2775, i64* %RCX.i1039, align 8
  store %struct.Memory* %loadMem_4a94b9, %struct.Memory** %MEMORY
  %loadMem_4a94bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 33
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %2778 to i64*
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 5
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %2781 to i64*
  %2782 = load i64, i64* %RCX.i1036
  %2783 = load i64, i64* %PC.i1035
  %2784 = add i64 %2783, 3
  store i64 %2784, i64* %PC.i1035
  %2785 = and i64 4, %2782
  %2786 = trunc i64 %2785 to i32
  store i64 %2785, i64* %RCX.i1036, align 8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2787, align 1
  %2788 = and i32 %2786, 255
  %2789 = call i32 @llvm.ctpop.i32(i32 %2788)
  %2790 = trunc i32 %2789 to i8
  %2791 = and i8 %2790, 1
  %2792 = xor i8 %2791, 1
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2792, i8* %2793, align 1
  %2794 = icmp eq i32 %2786, 0
  %2795 = zext i1 %2794 to i8
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2795, i8* %2796, align 1
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2797, align 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2798, align 1
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2799, align 1
  store %struct.Memory* %loadMem_4a94bc, %struct.Memory** %MEMORY
  %loadMem_4a94bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 33
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %2802 to i64*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 5
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %ECX.i1034 = bitcast %union.anon* %2805 to i32*
  %2806 = load i32, i32* %ECX.i1034
  %2807 = zext i32 %2806 to i64
  %2808 = load i64, i64* %PC.i1033
  %2809 = add i64 %2808, 3
  store i64 %2809, i64* %PC.i1033
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2810, align 1
  %2811 = and i32 %2806, 255
  %2812 = call i32 @llvm.ctpop.i32(i32 %2811)
  %2813 = trunc i32 %2812 to i8
  %2814 = and i8 %2813, 1
  %2815 = xor i8 %2814, 1
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2815, i8* %2816, align 1
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2817, align 1
  %2818 = icmp eq i32 %2806, 0
  %2819 = zext i1 %2818 to i8
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2819, i8* %2820, align 1
  %2821 = lshr i32 %2806, 31
  %2822 = trunc i32 %2821 to i8
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2822, i8* %2823, align 1
  %2824 = lshr i32 %2806, 31
  %2825 = xor i32 %2821, %2824
  %2826 = add i32 %2825, %2824
  %2827 = icmp eq i32 %2826, 2
  %2828 = zext i1 %2827 to i8
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2828, i8* %2829, align 1
  store %struct.Memory* %loadMem_4a94bf, %struct.Memory** %MEMORY
  %loadMem_4a94c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2831 = getelementptr inbounds %struct.GPR, %struct.GPR* %2830, i32 0, i32 33
  %2832 = getelementptr inbounds %struct.Reg, %struct.Reg* %2831, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %2832 to i64*
  %2833 = load i64, i64* %PC.i1032
  %2834 = add i64 %2833, 146
  %2835 = load i64, i64* %PC.i1032
  %2836 = add i64 %2835, 6
  %2837 = load i64, i64* %PC.i1032
  %2838 = add i64 %2837, 6
  store i64 %2838, i64* %PC.i1032
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2840 = load i8, i8* %2839, align 1
  store i8 %2840, i8* %BRANCH_TAKEN, align 1
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2842 = icmp ne i8 %2840, 0
  %2843 = select i1 %2842, i64 %2834, i64 %2836
  store i64 %2843, i64* %2841, align 8
  store %struct.Memory* %loadMem_4a94c2, %struct.Memory** %MEMORY
  %loadBr_4a94c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a94c2 = icmp eq i8 %loadBr_4a94c2, 1
  br i1 %cmpBr_4a94c2, label %block_.L_4a9554, label %block_4a94c8

block_4a94c8:                                     ; preds = %block_.L_4a94b5
  %loadMem_4a94c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2845 = getelementptr inbounds %struct.GPR, %struct.GPR* %2844, i32 0, i32 33
  %2846 = getelementptr inbounds %struct.Reg, %struct.Reg* %2845, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %2846 to i64*
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 15
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %2849 to i64*
  %2850 = load i64, i64* %RBP.i1031
  %2851 = sub i64 %2850, 7144
  %2852 = load i64, i64* %PC.i1030
  %2853 = add i64 %2852, 10
  store i64 %2853, i64* %PC.i1030
  %2854 = inttoptr i64 %2851 to i32*
  store i32 0, i32* %2854
  store %struct.Memory* %loadMem_4a94c8, %struct.Memory** %MEMORY
  br label %block_.L_4a94d2

block_.L_4a94d2:                                  ; preds = %block_.L_4a953b, %block_4a94c8
  %loadMem_4a94d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 33
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 15
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %RBP.i1029 = bitcast %union.anon* %2860 to i64*
  %2861 = load i64, i64* %RBP.i1029
  %2862 = sub i64 %2861, 7144
  %2863 = load i64, i64* %PC.i1028
  %2864 = add i64 %2863, 7
  store i64 %2864, i64* %PC.i1028
  %2865 = inttoptr i64 %2862 to i32*
  %2866 = load i32, i32* %2865
  %2867 = sub i32 %2866, 63
  %2868 = icmp ult i32 %2866, 63
  %2869 = zext i1 %2868 to i8
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2869, i8* %2870, align 1
  %2871 = and i32 %2867, 255
  %2872 = call i32 @llvm.ctpop.i32(i32 %2871)
  %2873 = trunc i32 %2872 to i8
  %2874 = and i8 %2873, 1
  %2875 = xor i8 %2874, 1
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2875, i8* %2876, align 1
  %2877 = xor i32 %2866, 63
  %2878 = xor i32 %2877, %2867
  %2879 = lshr i32 %2878, 4
  %2880 = trunc i32 %2879 to i8
  %2881 = and i8 %2880, 1
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2881, i8* %2882, align 1
  %2883 = icmp eq i32 %2867, 0
  %2884 = zext i1 %2883 to i8
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2884, i8* %2885, align 1
  %2886 = lshr i32 %2867, 31
  %2887 = trunc i32 %2886 to i8
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2887, i8* %2888, align 1
  %2889 = lshr i32 %2866, 31
  %2890 = xor i32 %2886, %2889
  %2891 = add i32 %2890, %2889
  %2892 = icmp eq i32 %2891, 2
  %2893 = zext i1 %2892 to i8
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2893, i8* %2894, align 1
  store %struct.Memory* %loadMem_4a94d2, %struct.Memory** %MEMORY
  %loadMem_4a94d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 33
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %2897 to i64*
  %2898 = load i64, i64* %PC.i1027
  %2899 = add i64 %2898, 118
  %2900 = load i64, i64* %PC.i1027
  %2901 = add i64 %2900, 6
  %2902 = load i64, i64* %PC.i1027
  %2903 = add i64 %2902, 6
  store i64 %2903, i64* %PC.i1027
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2905 = load i8, i8* %2904, align 1
  store i8 %2905, i8* %BRANCH_TAKEN, align 1
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2907 = icmp ne i8 %2905, 0
  %2908 = select i1 %2907, i64 %2899, i64 %2901
  store i64 %2908, i64* %2906, align 8
  store %struct.Memory* %loadMem_4a94d9, %struct.Memory** %MEMORY
  %loadBr_4a94d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a94d9 = icmp eq i8 %loadBr_4a94d9, 1
  br i1 %cmpBr_4a94d9, label %block_.L_4a954f, label %block_4a94df

block_4a94df:                                     ; preds = %block_.L_4a94d2
  %loadMem_4a94df = load %struct.Memory*, %struct.Memory** %MEMORY
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 33
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %2911 to i64*
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2913 = getelementptr inbounds %struct.GPR, %struct.GPR* %2912, i32 0, i32 1
  %2914 = getelementptr inbounds %struct.Reg, %struct.Reg* %2913, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %2914 to i64*
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 15
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %RBP.i1026 = bitcast %union.anon* %2917 to i64*
  %2918 = load i64, i64* %RBP.i1026
  %2919 = sub i64 %2918, 7128
  %2920 = load i64, i64* %PC.i1024
  %2921 = add i64 %2920, 6
  store i64 %2921, i64* %PC.i1024
  %2922 = inttoptr i64 %2919 to i32*
  %2923 = load i32, i32* %2922
  %2924 = zext i32 %2923 to i64
  store i64 %2924, i64* %RAX.i1025, align 8
  store %struct.Memory* %loadMem_4a94df, %struct.Memory** %MEMORY
  %loadMem_4a94e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2926 = getelementptr inbounds %struct.GPR, %struct.GPR* %2925, i32 0, i32 33
  %2927 = getelementptr inbounds %struct.Reg, %struct.Reg* %2926, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %2927 to i64*
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2929 = getelementptr inbounds %struct.GPR, %struct.GPR* %2928, i32 0, i32 5
  %2930 = getelementptr inbounds %struct.Reg, %struct.Reg* %2929, i32 0, i32 0
  %RCX.i1022 = bitcast %union.anon* %2930 to i64*
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 15
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %2933 to i64*
  %2934 = load i64, i64* %RBP.i1023
  %2935 = sub i64 %2934, 32
  %2936 = load i64, i64* %PC.i1021
  %2937 = add i64 %2936, 4
  store i64 %2937, i64* %PC.i1021
  %2938 = inttoptr i64 %2935 to i64*
  %2939 = load i64, i64* %2938
  store i64 %2939, i64* %RCX.i1022, align 8
  store %struct.Memory* %loadMem_4a94e5, %struct.Memory** %MEMORY
  %loadMem_4a94e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 33
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2942 to i64*
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 1
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %RAX.i1019 = bitcast %union.anon* %2945 to i64*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 5
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %RCX.i1020 = bitcast %union.anon* %2948 to i64*
  %2949 = load i64, i64* %RAX.i1019
  %2950 = load i64, i64* %RCX.i1020
  %2951 = add i64 %2950, 36
  %2952 = load i64, i64* %PC.i1018
  %2953 = add i64 %2952, 3
  store i64 %2953, i64* %PC.i1018
  %2954 = trunc i64 %2949 to i32
  %2955 = inttoptr i64 %2951 to i32*
  %2956 = load i32, i32* %2955
  %2957 = add i32 %2956, %2954
  %2958 = zext i32 %2957 to i64
  store i64 %2958, i64* %RAX.i1019, align 8
  %2959 = icmp ult i32 %2957, %2954
  %2960 = icmp ult i32 %2957, %2956
  %2961 = or i1 %2959, %2960
  %2962 = zext i1 %2961 to i8
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2962, i8* %2963, align 1
  %2964 = and i32 %2957, 255
  %2965 = call i32 @llvm.ctpop.i32(i32 %2964)
  %2966 = trunc i32 %2965 to i8
  %2967 = and i8 %2966, 1
  %2968 = xor i8 %2967, 1
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2968, i8* %2969, align 1
  %2970 = xor i32 %2956, %2954
  %2971 = xor i32 %2970, %2957
  %2972 = lshr i32 %2971, 4
  %2973 = trunc i32 %2972 to i8
  %2974 = and i8 %2973, 1
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2974, i8* %2975, align 1
  %2976 = icmp eq i32 %2957, 0
  %2977 = zext i1 %2976 to i8
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2977, i8* %2978, align 1
  %2979 = lshr i32 %2957, 31
  %2980 = trunc i32 %2979 to i8
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2980, i8* %2981, align 1
  %2982 = lshr i32 %2954, 31
  %2983 = lshr i32 %2956, 31
  %2984 = xor i32 %2979, %2982
  %2985 = xor i32 %2979, %2983
  %2986 = add i32 %2984, %2985
  %2987 = icmp eq i32 %2986, 2
  %2988 = zext i1 %2987 to i8
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2988, i8* %2989, align 1
  store %struct.Memory* %loadMem_4a94e9, %struct.Memory** %MEMORY
  %loadMem_4a94ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 33
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %2992 to i64*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 1
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %2995 to i64*
  %2996 = load i64, i64* %RAX.i1017
  %2997 = load i64, i64* %PC.i1016
  %2998 = add i64 %2997, 3
  store i64 %2998, i64* %PC.i1016
  %2999 = trunc i64 %2996 to i32
  %3000 = add i32 1, %2999
  %3001 = zext i32 %3000 to i64
  store i64 %3001, i64* %RAX.i1017, align 8
  %3002 = icmp ult i32 %3000, %2999
  %3003 = icmp ult i32 %3000, 1
  %3004 = or i1 %3002, %3003
  %3005 = zext i1 %3004 to i8
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3005, i8* %3006, align 1
  %3007 = and i32 %3000, 255
  %3008 = call i32 @llvm.ctpop.i32(i32 %3007)
  %3009 = trunc i32 %3008 to i8
  %3010 = and i8 %3009, 1
  %3011 = xor i8 %3010, 1
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3011, i8* %3012, align 1
  %3013 = xor i64 1, %2996
  %3014 = trunc i64 %3013 to i32
  %3015 = xor i32 %3014, %3000
  %3016 = lshr i32 %3015, 4
  %3017 = trunc i32 %3016 to i8
  %3018 = and i8 %3017, 1
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3018, i8* %3019, align 1
  %3020 = icmp eq i32 %3000, 0
  %3021 = zext i1 %3020 to i8
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3021, i8* %3022, align 1
  %3023 = lshr i32 %3000, 31
  %3024 = trunc i32 %3023 to i8
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3024, i8* %3025, align 1
  %3026 = lshr i32 %2999, 31
  %3027 = xor i32 %3023, %3026
  %3028 = add i32 %3027, %3023
  %3029 = icmp eq i32 %3028, 2
  %3030 = zext i1 %3029 to i8
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3030, i8* %3031, align 1
  store %struct.Memory* %loadMem_4a94ec, %struct.Memory** %MEMORY
  %loadMem_4a94ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 33
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %3034 to i64*
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3036 = getelementptr inbounds %struct.GPR, %struct.GPR* %3035, i32 0, i32 1
  %3037 = getelementptr inbounds %struct.Reg, %struct.Reg* %3036, i32 0, i32 0
  %EAX.i1014 = bitcast %union.anon* %3037 to i32*
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3039 = getelementptr inbounds %struct.GPR, %struct.GPR* %3038, i32 0, i32 15
  %3040 = getelementptr inbounds %struct.Reg, %struct.Reg* %3039, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %3040 to i64*
  %3041 = load i64, i64* %RBP.i1015
  %3042 = sub i64 %3041, 7148
  %3043 = load i32, i32* %EAX.i1014
  %3044 = zext i32 %3043 to i64
  %3045 = load i64, i64* %PC.i1013
  %3046 = add i64 %3045, 6
  store i64 %3046, i64* %PC.i1013
  %3047 = inttoptr i64 %3042 to i32*
  store i32 %3043, i32* %3047
  store %struct.Memory* %loadMem_4a94ef, %struct.Memory** %MEMORY
  br label %block_.L_4a94f5

block_.L_4a94f5:                                  ; preds = %block_4a9502, %block_4a94df
  %loadMem_4a94f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 15
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %3053 to i64*
  %3054 = load i64, i64* %RBP.i1012
  %3055 = sub i64 %3054, 7148
  %3056 = load i64, i64* %PC.i1011
  %3057 = add i64 %3056, 7
  store i64 %3057, i64* %PC.i1011
  %3058 = inttoptr i64 %3055 to i32*
  %3059 = load i32, i32* %3058
  %3060 = sub i32 %3059, 63
  %3061 = icmp ult i32 %3059, 63
  %3062 = zext i1 %3061 to i8
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3062, i8* %3063, align 1
  %3064 = and i32 %3060, 255
  %3065 = call i32 @llvm.ctpop.i32(i32 %3064)
  %3066 = trunc i32 %3065 to i8
  %3067 = and i8 %3066, 1
  %3068 = xor i8 %3067, 1
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3068, i8* %3069, align 1
  %3070 = xor i32 %3059, 63
  %3071 = xor i32 %3070, %3060
  %3072 = lshr i32 %3071, 4
  %3073 = trunc i32 %3072 to i8
  %3074 = and i8 %3073, 1
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3074, i8* %3075, align 1
  %3076 = icmp eq i32 %3060, 0
  %3077 = zext i1 %3076 to i8
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3077, i8* %3078, align 1
  %3079 = lshr i32 %3060, 31
  %3080 = trunc i32 %3079 to i8
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3080, i8* %3081, align 1
  %3082 = lshr i32 %3059, 31
  %3083 = xor i32 %3079, %3082
  %3084 = add i32 %3083, %3082
  %3085 = icmp eq i32 %3084, 2
  %3086 = zext i1 %3085 to i8
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3086, i8* %3087, align 1
  store %struct.Memory* %loadMem_4a94f5, %struct.Memory** %MEMORY
  %loadMem_4a94fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 33
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %3090 to i64*
  %3091 = load i64, i64* %PC.i1010
  %3092 = add i64 %3091, 58
  %3093 = load i64, i64* %PC.i1010
  %3094 = add i64 %3093, 6
  %3095 = load i64, i64* %PC.i1010
  %3096 = add i64 %3095, 6
  store i64 %3096, i64* %PC.i1010
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3098 = load i8, i8* %3097, align 1
  store i8 %3098, i8* %BRANCH_TAKEN, align 1
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3100 = icmp ne i8 %3098, 0
  %3101 = select i1 %3100, i64 %3092, i64 %3094
  store i64 %3101, i64* %3099, align 8
  store %struct.Memory* %loadMem_4a94fc, %struct.Memory** %MEMORY
  %loadBr_4a94fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a94fc = icmp eq i8 %loadBr_4a94fc, 1
  br i1 %cmpBr_4a94fc, label %block_.L_4a9536, label %block_4a9502

block_4a9502:                                     ; preds = %block_.L_4a94f5
  %loadMem_4a9502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 33
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %3104 to i64*
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3106 = getelementptr inbounds %struct.GPR, %struct.GPR* %3105, i32 0, i32 1
  %3107 = getelementptr inbounds %struct.Reg, %struct.Reg* %3106, i32 0, i32 0
  %RAX.i1008 = bitcast %union.anon* %3107 to i64*
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 15
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %3110 to i64*
  %3111 = load i64, i64* %RBP.i1009
  %3112 = sub i64 %3111, 7120
  %3113 = load i64, i64* %PC.i1007
  %3114 = add i64 %3113, 7
  store i64 %3114, i64* %PC.i1007
  store i64 %3112, i64* %RAX.i1008, align 8
  store %struct.Memory* %loadMem_4a9502, %struct.Memory** %MEMORY
  %loadMem_4a9509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 33
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %3117 to i64*
  %3118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3119 = getelementptr inbounds %struct.GPR, %struct.GPR* %3118, i32 0, i32 5
  %3120 = getelementptr inbounds %struct.Reg, %struct.Reg* %3119, i32 0, i32 0
  %RCX.i1005 = bitcast %union.anon* %3120 to i64*
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 15
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %3123 to i64*
  %3124 = load i64, i64* %RBP.i1006
  %3125 = sub i64 %3124, 7144
  %3126 = load i64, i64* %PC.i1004
  %3127 = add i64 %3126, 7
  store i64 %3127, i64* %PC.i1004
  %3128 = inttoptr i64 %3125 to i32*
  %3129 = load i32, i32* %3128
  %3130 = sext i32 %3129 to i64
  store i64 %3130, i64* %RCX.i1005, align 8
  store %struct.Memory* %loadMem_4a9509, %struct.Memory** %MEMORY
  %loadMem_4a9510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 33
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %3133 to i64*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 5
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %RCX.i1003 = bitcast %union.anon* %3136 to i64*
  %3137 = load i64, i64* %RCX.i1003
  %3138 = load i64, i64* %PC.i1002
  %3139 = add i64 %3138, 4
  store i64 %3139, i64* %PC.i1002
  %3140 = sext i64 %3137 to i128
  %3141 = and i128 %3140, -18446744073709551616
  %3142 = zext i64 %3137 to i128
  %3143 = or i128 %3141, %3142
  %3144 = mul i128 84, %3143
  %3145 = trunc i128 %3144 to i64
  store i64 %3145, i64* %RCX.i1003, align 8
  %3146 = sext i64 %3145 to i128
  %3147 = icmp ne i128 %3146, %3144
  %3148 = zext i1 %3147 to i8
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3148, i8* %3149, align 1
  %3150 = trunc i128 %3144 to i32
  %3151 = and i32 %3150, 255
  %3152 = call i32 @llvm.ctpop.i32(i32 %3151)
  %3153 = trunc i32 %3152 to i8
  %3154 = and i8 %3153, 1
  %3155 = xor i8 %3154, 1
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3155, i8* %3156, align 1
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3157, align 1
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3158, align 1
  %3159 = lshr i64 %3145, 63
  %3160 = trunc i64 %3159 to i8
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3160, i8* %3161, align 1
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3148, i8* %3162, align 1
  store %struct.Memory* %loadMem_4a9510, %struct.Memory** %MEMORY
  %loadMem_4a9514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 33
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 1
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 5
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RCX.i1001 = bitcast %union.anon* %3171 to i64*
  %3172 = load i64, i64* %RAX.i1000
  %3173 = load i64, i64* %RCX.i1001
  %3174 = load i64, i64* %PC.i999
  %3175 = add i64 %3174, 3
  store i64 %3175, i64* %PC.i999
  %3176 = add i64 %3173, %3172
  store i64 %3176, i64* %RAX.i1000, align 8
  %3177 = icmp ult i64 %3176, %3172
  %3178 = icmp ult i64 %3176, %3173
  %3179 = or i1 %3177, %3178
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3180, i8* %3181, align 1
  %3182 = trunc i64 %3176 to i32
  %3183 = and i32 %3182, 255
  %3184 = call i32 @llvm.ctpop.i32(i32 %3183)
  %3185 = trunc i32 %3184 to i8
  %3186 = and i8 %3185, 1
  %3187 = xor i8 %3186, 1
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3187, i8* %3188, align 1
  %3189 = xor i64 %3173, %3172
  %3190 = xor i64 %3189, %3176
  %3191 = lshr i64 %3190, 4
  %3192 = trunc i64 %3191 to i8
  %3193 = and i8 %3192, 1
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3193, i8* %3194, align 1
  %3195 = icmp eq i64 %3176, 0
  %3196 = zext i1 %3195 to i8
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3196, i8* %3197, align 1
  %3198 = lshr i64 %3176, 63
  %3199 = trunc i64 %3198 to i8
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3199, i8* %3200, align 1
  %3201 = lshr i64 %3172, 63
  %3202 = lshr i64 %3173, 63
  %3203 = xor i64 %3198, %3201
  %3204 = xor i64 %3198, %3202
  %3205 = add i64 %3203, %3204
  %3206 = icmp eq i64 %3205, 2
  %3207 = zext i1 %3206 to i8
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3207, i8* %3208, align 1
  store %struct.Memory* %loadMem_4a9514, %struct.Memory** %MEMORY
  %loadMem_4a9517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3210 = getelementptr inbounds %struct.GPR, %struct.GPR* %3209, i32 0, i32 33
  %3211 = getelementptr inbounds %struct.Reg, %struct.Reg* %3210, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %3211 to i64*
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3213 = getelementptr inbounds %struct.GPR, %struct.GPR* %3212, i32 0, i32 5
  %3214 = getelementptr inbounds %struct.Reg, %struct.Reg* %3213, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %3214 to i64*
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 15
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %3217 to i64*
  %3218 = load i64, i64* %RBP.i998
  %3219 = sub i64 %3218, 7148
  %3220 = load i64, i64* %PC.i996
  %3221 = add i64 %3220, 7
  store i64 %3221, i64* %PC.i996
  %3222 = inttoptr i64 %3219 to i32*
  %3223 = load i32, i32* %3222
  %3224 = sext i32 %3223 to i64
  store i64 %3224, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_4a9517, %struct.Memory** %MEMORY
  %loadMem_4a951e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3226 = getelementptr inbounds %struct.GPR, %struct.GPR* %3225, i32 0, i32 33
  %3227 = getelementptr inbounds %struct.Reg, %struct.Reg* %3226, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %3227 to i64*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 1
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %3230 to i64*
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 5
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %3233 to i64*
  %3234 = load i64, i64* %RAX.i994
  %3235 = load i64, i64* %RCX.i995
  %3236 = add i64 %3235, %3234
  %3237 = load i64, i64* %PC.i993
  %3238 = add i64 %3237, 4
  store i64 %3238, i64* %PC.i993
  %3239 = inttoptr i64 %3236 to i8*
  store i8 124, i8* %3239
  store %struct.Memory* %loadMem_4a951e, %struct.Memory** %MEMORY
  %loadMem_4a9522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 1
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %RAX.i991 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 15
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RBP.i992
  %3250 = sub i64 %3249, 7148
  %3251 = load i64, i64* %PC.i990
  %3252 = add i64 %3251, 6
  store i64 %3252, i64* %PC.i990
  %3253 = inttoptr i64 %3250 to i32*
  %3254 = load i32, i32* %3253
  %3255 = zext i32 %3254 to i64
  store i64 %3255, i64* %RAX.i991, align 8
  store %struct.Memory* %loadMem_4a9522, %struct.Memory** %MEMORY
  %loadMem_4a9528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 33
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %3258 to i64*
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 1
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %RAX.i989 = bitcast %union.anon* %3261 to i64*
  %3262 = load i64, i64* %RAX.i989
  %3263 = load i64, i64* %PC.i988
  %3264 = add i64 %3263, 3
  store i64 %3264, i64* %PC.i988
  %3265 = trunc i64 %3262 to i32
  %3266 = add i32 1, %3265
  %3267 = zext i32 %3266 to i64
  store i64 %3267, i64* %RAX.i989, align 8
  %3268 = icmp ult i32 %3266, %3265
  %3269 = icmp ult i32 %3266, 1
  %3270 = or i1 %3268, %3269
  %3271 = zext i1 %3270 to i8
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3271, i8* %3272, align 1
  %3273 = and i32 %3266, 255
  %3274 = call i32 @llvm.ctpop.i32(i32 %3273)
  %3275 = trunc i32 %3274 to i8
  %3276 = and i8 %3275, 1
  %3277 = xor i8 %3276, 1
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3277, i8* %3278, align 1
  %3279 = xor i64 1, %3262
  %3280 = trunc i64 %3279 to i32
  %3281 = xor i32 %3280, %3266
  %3282 = lshr i32 %3281, 4
  %3283 = trunc i32 %3282 to i8
  %3284 = and i8 %3283, 1
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3284, i8* %3285, align 1
  %3286 = icmp eq i32 %3266, 0
  %3287 = zext i1 %3286 to i8
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3287, i8* %3288, align 1
  %3289 = lshr i32 %3266, 31
  %3290 = trunc i32 %3289 to i8
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3290, i8* %3291, align 1
  %3292 = lshr i32 %3265, 31
  %3293 = xor i32 %3289, %3292
  %3294 = add i32 %3293, %3289
  %3295 = icmp eq i32 %3294, 2
  %3296 = zext i1 %3295 to i8
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3296, i8* %3297, align 1
  store %struct.Memory* %loadMem_4a9528, %struct.Memory** %MEMORY
  %loadMem_4a952b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3299 = getelementptr inbounds %struct.GPR, %struct.GPR* %3298, i32 0, i32 33
  %3300 = getelementptr inbounds %struct.Reg, %struct.Reg* %3299, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %3300 to i64*
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 1
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %EAX.i986 = bitcast %union.anon* %3303 to i32*
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 15
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %3306 to i64*
  %3307 = load i64, i64* %RBP.i987
  %3308 = sub i64 %3307, 7148
  %3309 = load i32, i32* %EAX.i986
  %3310 = zext i32 %3309 to i64
  %3311 = load i64, i64* %PC.i985
  %3312 = add i64 %3311, 6
  store i64 %3312, i64* %PC.i985
  %3313 = inttoptr i64 %3308 to i32*
  store i32 %3309, i32* %3313
  store %struct.Memory* %loadMem_4a952b, %struct.Memory** %MEMORY
  %loadMem_4a9531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 33
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %3316 to i64*
  %3317 = load i64, i64* %PC.i984
  %3318 = add i64 %3317, -60
  %3319 = load i64, i64* %PC.i984
  %3320 = add i64 %3319, 5
  store i64 %3320, i64* %PC.i984
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3318, i64* %3321, align 8
  store %struct.Memory* %loadMem_4a9531, %struct.Memory** %MEMORY
  br label %block_.L_4a94f5

block_.L_4a9536:                                  ; preds = %block_.L_4a94f5
  %loadMem_4a9536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 33
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %3324 to i64*
  %3325 = load i64, i64* %PC.i983
  %3326 = add i64 %3325, 5
  %3327 = load i64, i64* %PC.i983
  %3328 = add i64 %3327, 5
  store i64 %3328, i64* %PC.i983
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3326, i64* %3329, align 8
  store %struct.Memory* %loadMem_4a9536, %struct.Memory** %MEMORY
  br label %block_.L_4a953b

block_.L_4a953b:                                  ; preds = %block_.L_4a9536
  %loadMem_4a953b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3331 = getelementptr inbounds %struct.GPR, %struct.GPR* %3330, i32 0, i32 33
  %3332 = getelementptr inbounds %struct.Reg, %struct.Reg* %3331, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %3332 to i64*
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3334 = getelementptr inbounds %struct.GPR, %struct.GPR* %3333, i32 0, i32 1
  %3335 = getelementptr inbounds %struct.Reg, %struct.Reg* %3334, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %3335 to i64*
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 15
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %3338 to i64*
  %3339 = load i64, i64* %RBP.i982
  %3340 = sub i64 %3339, 7144
  %3341 = load i64, i64* %PC.i980
  %3342 = add i64 %3341, 6
  store i64 %3342, i64* %PC.i980
  %3343 = inttoptr i64 %3340 to i32*
  %3344 = load i32, i32* %3343
  %3345 = zext i32 %3344 to i64
  store i64 %3345, i64* %RAX.i981, align 8
  store %struct.Memory* %loadMem_4a953b, %struct.Memory** %MEMORY
  %loadMem_4a9541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3347 = getelementptr inbounds %struct.GPR, %struct.GPR* %3346, i32 0, i32 33
  %3348 = getelementptr inbounds %struct.Reg, %struct.Reg* %3347, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %3348 to i64*
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3350 = getelementptr inbounds %struct.GPR, %struct.GPR* %3349, i32 0, i32 1
  %3351 = getelementptr inbounds %struct.Reg, %struct.Reg* %3350, i32 0, i32 0
  %RAX.i979 = bitcast %union.anon* %3351 to i64*
  %3352 = load i64, i64* %RAX.i979
  %3353 = load i64, i64* %PC.i978
  %3354 = add i64 %3353, 3
  store i64 %3354, i64* %PC.i978
  %3355 = trunc i64 %3352 to i32
  %3356 = add i32 1, %3355
  %3357 = zext i32 %3356 to i64
  store i64 %3357, i64* %RAX.i979, align 8
  %3358 = icmp ult i32 %3356, %3355
  %3359 = icmp ult i32 %3356, 1
  %3360 = or i1 %3358, %3359
  %3361 = zext i1 %3360 to i8
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3361, i8* %3362, align 1
  %3363 = and i32 %3356, 255
  %3364 = call i32 @llvm.ctpop.i32(i32 %3363)
  %3365 = trunc i32 %3364 to i8
  %3366 = and i8 %3365, 1
  %3367 = xor i8 %3366, 1
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3367, i8* %3368, align 1
  %3369 = xor i64 1, %3352
  %3370 = trunc i64 %3369 to i32
  %3371 = xor i32 %3370, %3356
  %3372 = lshr i32 %3371, 4
  %3373 = trunc i32 %3372 to i8
  %3374 = and i8 %3373, 1
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3374, i8* %3375, align 1
  %3376 = icmp eq i32 %3356, 0
  %3377 = zext i1 %3376 to i8
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3377, i8* %3378, align 1
  %3379 = lshr i32 %3356, 31
  %3380 = trunc i32 %3379 to i8
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3380, i8* %3381, align 1
  %3382 = lshr i32 %3355, 31
  %3383 = xor i32 %3379, %3382
  %3384 = add i32 %3383, %3379
  %3385 = icmp eq i32 %3384, 2
  %3386 = zext i1 %3385 to i8
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3386, i8* %3387, align 1
  store %struct.Memory* %loadMem_4a9541, %struct.Memory** %MEMORY
  %loadMem_4a9544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 33
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %3390 to i64*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 1
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %EAX.i976 = bitcast %union.anon* %3393 to i32*
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 15
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %3396 to i64*
  %3397 = load i64, i64* %RBP.i977
  %3398 = sub i64 %3397, 7144
  %3399 = load i32, i32* %EAX.i976
  %3400 = zext i32 %3399 to i64
  %3401 = load i64, i64* %PC.i975
  %3402 = add i64 %3401, 6
  store i64 %3402, i64* %PC.i975
  %3403 = inttoptr i64 %3398 to i32*
  store i32 %3399, i32* %3403
  store %struct.Memory* %loadMem_4a9544, %struct.Memory** %MEMORY
  %loadMem_4a954a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 33
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %3406 to i64*
  %3407 = load i64, i64* %PC.i974
  %3408 = add i64 %3407, -120
  %3409 = load i64, i64* %PC.i974
  %3410 = add i64 %3409, 5
  store i64 %3410, i64* %PC.i974
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3408, i64* %3411, align 8
  store %struct.Memory* %loadMem_4a954a, %struct.Memory** %MEMORY
  br label %block_.L_4a94d2

block_.L_4a954f:                                  ; preds = %block_.L_4a94d2
  %loadMem_4a954f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 33
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %3414 to i64*
  %3415 = load i64, i64* %PC.i973
  %3416 = add i64 %3415, 5
  %3417 = load i64, i64* %PC.i973
  %3418 = add i64 %3417, 5
  store i64 %3418, i64* %PC.i973
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3416, i64* %3419, align 8
  store %struct.Memory* %loadMem_4a954f, %struct.Memory** %MEMORY
  br label %block_.L_4a9554

block_.L_4a9554:                                  ; preds = %block_.L_4a954f, %block_.L_4a94b5
  %loadMem_4a9554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 33
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %3422 to i64*
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 1
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %3425 to i64*
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 15
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %3428 to i64*
  %3429 = load i64, i64* %RBP.i972
  %3430 = sub i64 %3429, 32
  %3431 = load i64, i64* %PC.i970
  %3432 = add i64 %3431, 4
  store i64 %3432, i64* %PC.i970
  %3433 = inttoptr i64 %3430 to i64*
  %3434 = load i64, i64* %3433
  store i64 %3434, i64* %RAX.i971, align 8
  store %struct.Memory* %loadMem_4a9554, %struct.Memory** %MEMORY
  %loadMem_4a9558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 33
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %3437 to i64*
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 1
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %3440 to i64*
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 5
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %3443 to i64*
  %3444 = load i64, i64* %RAX.i968
  %3445 = add i64 %3444, 48
  %3446 = load i64, i64* %PC.i967
  %3447 = add i64 %3446, 3
  store i64 %3447, i64* %PC.i967
  %3448 = inttoptr i64 %3445 to i32*
  %3449 = load i32, i32* %3448
  %3450 = zext i32 %3449 to i64
  store i64 %3450, i64* %RCX.i969, align 8
  store %struct.Memory* %loadMem_4a9558, %struct.Memory** %MEMORY
  %loadMem_4a955b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3452 = getelementptr inbounds %struct.GPR, %struct.GPR* %3451, i32 0, i32 33
  %3453 = getelementptr inbounds %struct.Reg, %struct.Reg* %3452, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %3453 to i64*
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 5
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %RCX.i966 = bitcast %union.anon* %3456 to i64*
  %3457 = load i64, i64* %RCX.i966
  %3458 = load i64, i64* %PC.i965
  %3459 = add i64 %3458, 3
  store i64 %3459, i64* %PC.i965
  %3460 = and i64 1, %3457
  %3461 = trunc i64 %3460 to i32
  store i64 %3460, i64* %RCX.i966, align 8
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3462, align 1
  %3463 = and i32 %3461, 255
  %3464 = call i32 @llvm.ctpop.i32(i32 %3463)
  %3465 = trunc i32 %3464 to i8
  %3466 = and i8 %3465, 1
  %3467 = xor i8 %3466, 1
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3467, i8* %3468, align 1
  %3469 = icmp eq i32 %3461, 0
  %3470 = zext i1 %3469 to i8
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3470, i8* %3471, align 1
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3472, align 1
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3473, align 1
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3474, align 1
  store %struct.Memory* %loadMem_4a955b, %struct.Memory** %MEMORY
  %loadMem_4a955e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 33
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %3477 to i64*
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3479 = getelementptr inbounds %struct.GPR, %struct.GPR* %3478, i32 0, i32 5
  %3480 = getelementptr inbounds %struct.Reg, %struct.Reg* %3479, i32 0, i32 0
  %ECX.i964 = bitcast %union.anon* %3480 to i32*
  %3481 = load i32, i32* %ECX.i964
  %3482 = zext i32 %3481 to i64
  %3483 = load i64, i64* %PC.i963
  %3484 = add i64 %3483, 3
  store i64 %3484, i64* %PC.i963
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3485, align 1
  %3486 = and i32 %3481, 255
  %3487 = call i32 @llvm.ctpop.i32(i32 %3486)
  %3488 = trunc i32 %3487 to i8
  %3489 = and i8 %3488, 1
  %3490 = xor i8 %3489, 1
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3490, i8* %3491, align 1
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3492, align 1
  %3493 = icmp eq i32 %3481, 0
  %3494 = zext i1 %3493 to i8
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3494, i8* %3495, align 1
  %3496 = lshr i32 %3481, 31
  %3497 = trunc i32 %3496 to i8
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3497, i8* %3498, align 1
  %3499 = lshr i32 %3481, 31
  %3500 = xor i32 %3496, %3499
  %3501 = add i32 %3500, %3499
  %3502 = icmp eq i32 %3501, 2
  %3503 = zext i1 %3502 to i8
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3503, i8* %3504, align 1
  store %struct.Memory* %loadMem_4a955e, %struct.Memory** %MEMORY
  %loadMem_4a9561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %3507 to i64*
  %3508 = load i64, i64* %PC.i962
  %3509 = add i64 %3508, 148
  %3510 = load i64, i64* %PC.i962
  %3511 = add i64 %3510, 6
  %3512 = load i64, i64* %PC.i962
  %3513 = add i64 %3512, 6
  store i64 %3513, i64* %PC.i962
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3515 = load i8, i8* %3514, align 1
  store i8 %3515, i8* %BRANCH_TAKEN, align 1
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3517 = icmp ne i8 %3515, 0
  %3518 = select i1 %3517, i64 %3509, i64 %3511
  store i64 %3518, i64* %3516, align 8
  store %struct.Memory* %loadMem_4a9561, %struct.Memory** %MEMORY
  %loadBr_4a9561 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9561 = icmp eq i8 %loadBr_4a9561, 1
  br i1 %cmpBr_4a9561, label %block_.L_4a95f5, label %block_4a9567

block_4a9567:                                     ; preds = %block_.L_4a9554
  %loadMem_4a9567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3520 = getelementptr inbounds %struct.GPR, %struct.GPR* %3519, i32 0, i32 33
  %3521 = getelementptr inbounds %struct.Reg, %struct.Reg* %3520, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %3521 to i64*
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3523 = getelementptr inbounds %struct.GPR, %struct.GPR* %3522, i32 0, i32 15
  %3524 = getelementptr inbounds %struct.Reg, %struct.Reg* %3523, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %3524 to i64*
  %3525 = load i64, i64* %RBP.i961
  %3526 = sub i64 %3525, 7144
  %3527 = load i64, i64* %PC.i960
  %3528 = add i64 %3527, 10
  store i64 %3528, i64* %PC.i960
  %3529 = inttoptr i64 %3526 to i32*
  store i32 0, i32* %3529
  store %struct.Memory* %loadMem_4a9567, %struct.Memory** %MEMORY
  br label %block_.L_4a9571

block_.L_4a9571:                                  ; preds = %block_.L_4a95dc, %block_4a9567
  %loadMem_4a9571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 33
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %3532 to i64*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 1
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 15
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RBP.i959 = bitcast %union.anon* %3538 to i64*
  %3539 = load i64, i64* %RBP.i959
  %3540 = sub i64 %3539, 7144
  %3541 = load i64, i64* %PC.i957
  %3542 = add i64 %3541, 6
  store i64 %3542, i64* %PC.i957
  %3543 = inttoptr i64 %3540 to i32*
  %3544 = load i32, i32* %3543
  %3545 = zext i32 %3544 to i64
  store i64 %3545, i64* %RAX.i958, align 8
  store %struct.Memory* %loadMem_4a9571, %struct.Memory** %MEMORY
  %loadMem_4a9577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 33
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %3548 to i64*
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 5
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %3551 to i64*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 15
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %3554 to i64*
  %3555 = load i64, i64* %RBP.i956
  %3556 = sub i64 %3555, 7124
  %3557 = load i64, i64* %PC.i954
  %3558 = add i64 %3557, 6
  store i64 %3558, i64* %PC.i954
  %3559 = inttoptr i64 %3556 to i32*
  %3560 = load i32, i32* %3559
  %3561 = zext i32 %3560 to i64
  store i64 %3561, i64* %RCX.i955, align 8
  store %struct.Memory* %loadMem_4a9577, %struct.Memory** %MEMORY
  %loadMem_4a957d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3563 = getelementptr inbounds %struct.GPR, %struct.GPR* %3562, i32 0, i32 33
  %3564 = getelementptr inbounds %struct.Reg, %struct.Reg* %3563, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %3564 to i64*
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3566 = getelementptr inbounds %struct.GPR, %struct.GPR* %3565, i32 0, i32 7
  %3567 = getelementptr inbounds %struct.Reg, %struct.Reg* %3566, i32 0, i32 0
  %RDX.i952 = bitcast %union.anon* %3567 to i64*
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 15
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %RBP.i953
  %3572 = sub i64 %3571, 32
  %3573 = load i64, i64* %PC.i951
  %3574 = add i64 %3573, 4
  store i64 %3574, i64* %PC.i951
  %3575 = inttoptr i64 %3572 to i64*
  %3576 = load i64, i64* %3575
  store i64 %3576, i64* %RDX.i952, align 8
  store %struct.Memory* %loadMem_4a957d, %struct.Memory** %MEMORY
  %loadMem_4a9581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 33
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %3579 to i64*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 5
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RCX.i949 = bitcast %union.anon* %3582 to i64*
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 7
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %RDX.i950 = bitcast %union.anon* %3585 to i64*
  %3586 = load i64, i64* %RCX.i949
  %3587 = load i64, i64* %RDX.i950
  %3588 = add i64 %3587, 24
  %3589 = load i64, i64* %PC.i948
  %3590 = add i64 %3589, 3
  store i64 %3590, i64* %PC.i948
  %3591 = trunc i64 %3586 to i32
  %3592 = inttoptr i64 %3588 to i32*
  %3593 = load i32, i32* %3592
  %3594 = add i32 %3593, %3591
  %3595 = zext i32 %3594 to i64
  store i64 %3595, i64* %RCX.i949, align 8
  %3596 = icmp ult i32 %3594, %3591
  %3597 = icmp ult i32 %3594, %3593
  %3598 = or i1 %3596, %3597
  %3599 = zext i1 %3598 to i8
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3599, i8* %3600, align 1
  %3601 = and i32 %3594, 255
  %3602 = call i32 @llvm.ctpop.i32(i32 %3601)
  %3603 = trunc i32 %3602 to i8
  %3604 = and i8 %3603, 1
  %3605 = xor i8 %3604, 1
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3605, i8* %3606, align 1
  %3607 = xor i32 %3593, %3591
  %3608 = xor i32 %3607, %3594
  %3609 = lshr i32 %3608, 4
  %3610 = trunc i32 %3609 to i8
  %3611 = and i8 %3610, 1
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3611, i8* %3612, align 1
  %3613 = icmp eq i32 %3594, 0
  %3614 = zext i1 %3613 to i8
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3614, i8* %3615, align 1
  %3616 = lshr i32 %3594, 31
  %3617 = trunc i32 %3616 to i8
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3617, i8* %3618, align 1
  %3619 = lshr i32 %3591, 31
  %3620 = lshr i32 %3593, 31
  %3621 = xor i32 %3616, %3619
  %3622 = xor i32 %3616, %3620
  %3623 = add i32 %3621, %3622
  %3624 = icmp eq i32 %3623, 2
  %3625 = zext i1 %3624 to i8
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3625, i8* %3626, align 1
  store %struct.Memory* %loadMem_4a9581, %struct.Memory** %MEMORY
  %loadMem_4a9584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 33
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %3629 to i64*
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3631 = getelementptr inbounds %struct.GPR, %struct.GPR* %3630, i32 0, i32 1
  %3632 = getelementptr inbounds %struct.Reg, %struct.Reg* %3631, i32 0, i32 0
  %EAX.i946 = bitcast %union.anon* %3632 to i32*
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 5
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %ECX.i947 = bitcast %union.anon* %3635 to i32*
  %3636 = load i32, i32* %EAX.i946
  %3637 = zext i32 %3636 to i64
  %3638 = load i32, i32* %ECX.i947
  %3639 = zext i32 %3638 to i64
  %3640 = load i64, i64* %PC.i945
  %3641 = add i64 %3640, 2
  store i64 %3641, i64* %PC.i945
  %3642 = sub i32 %3636, %3638
  %3643 = icmp ult i32 %3636, %3638
  %3644 = zext i1 %3643 to i8
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3644, i8* %3645, align 1
  %3646 = and i32 %3642, 255
  %3647 = call i32 @llvm.ctpop.i32(i32 %3646)
  %3648 = trunc i32 %3647 to i8
  %3649 = and i8 %3648, 1
  %3650 = xor i8 %3649, 1
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3650, i8* %3651, align 1
  %3652 = xor i64 %3639, %3637
  %3653 = trunc i64 %3652 to i32
  %3654 = xor i32 %3653, %3642
  %3655 = lshr i32 %3654, 4
  %3656 = trunc i32 %3655 to i8
  %3657 = and i8 %3656, 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3657, i8* %3658, align 1
  %3659 = icmp eq i32 %3642, 0
  %3660 = zext i1 %3659 to i8
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3660, i8* %3661, align 1
  %3662 = lshr i32 %3642, 31
  %3663 = trunc i32 %3662 to i8
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3663, i8* %3664, align 1
  %3665 = lshr i32 %3636, 31
  %3666 = lshr i32 %3638, 31
  %3667 = xor i32 %3666, %3665
  %3668 = xor i32 %3662, %3665
  %3669 = add i32 %3668, %3667
  %3670 = icmp eq i32 %3669, 2
  %3671 = zext i1 %3670 to i8
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3671, i8* %3672, align 1
  store %struct.Memory* %loadMem_4a9584, %struct.Memory** %MEMORY
  %loadMem_4a9586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 33
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %3675 to i64*
  %3676 = load i64, i64* %PC.i944
  %3677 = add i64 %3676, 106
  %3678 = load i64, i64* %PC.i944
  %3679 = add i64 %3678, 6
  %3680 = load i64, i64* %PC.i944
  %3681 = add i64 %3680, 6
  store i64 %3681, i64* %PC.i944
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3683 = load i8, i8* %3682, align 1
  store i8 %3683, i8* %BRANCH_TAKEN, align 1
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3685 = icmp ne i8 %3683, 0
  %3686 = select i1 %3685, i64 %3677, i64 %3679
  store i64 %3686, i64* %3684, align 8
  store %struct.Memory* %loadMem_4a9586, %struct.Memory** %MEMORY
  %loadBr_4a9586 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9586 = icmp eq i8 %loadBr_4a9586, 1
  br i1 %cmpBr_4a9586, label %block_.L_4a95f0, label %block_4a958c

block_4a958c:                                     ; preds = %block_.L_4a9571
  %loadMem_4a958c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3688 = getelementptr inbounds %struct.GPR, %struct.GPR* %3687, i32 0, i32 33
  %3689 = getelementptr inbounds %struct.Reg, %struct.Reg* %3688, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %3689 to i64*
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3691 = getelementptr inbounds %struct.GPR, %struct.GPR* %3690, i32 0, i32 15
  %3692 = getelementptr inbounds %struct.Reg, %struct.Reg* %3691, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %3692 to i64*
  %3693 = load i64, i64* %RBP.i943
  %3694 = sub i64 %3693, 7148
  %3695 = load i64, i64* %PC.i942
  %3696 = add i64 %3695, 10
  store i64 %3696, i64* %PC.i942
  %3697 = inttoptr i64 %3694 to i32*
  store i32 0, i32* %3697
  store %struct.Memory* %loadMem_4a958c, %struct.Memory** %MEMORY
  br label %block_.L_4a9596

block_.L_4a9596:                                  ; preds = %block_4a95a3, %block_4a958c
  %loadMem_4a9596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 33
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %3700 to i64*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 15
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %3703 to i64*
  %3704 = load i64, i64* %RBP.i941
  %3705 = sub i64 %3704, 7148
  %3706 = load i64, i64* %PC.i940
  %3707 = add i64 %3706, 7
  store i64 %3707, i64* %PC.i940
  %3708 = inttoptr i64 %3705 to i32*
  %3709 = load i32, i32* %3708
  %3710 = sub i32 %3709, 84
  %3711 = icmp ult i32 %3709, 84
  %3712 = zext i1 %3711 to i8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3712, i8* %3713, align 1
  %3714 = and i32 %3710, 255
  %3715 = call i32 @llvm.ctpop.i32(i32 %3714)
  %3716 = trunc i32 %3715 to i8
  %3717 = and i8 %3716, 1
  %3718 = xor i8 %3717, 1
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3718, i8* %3719, align 1
  %3720 = xor i32 %3709, 84
  %3721 = xor i32 %3720, %3710
  %3722 = lshr i32 %3721, 4
  %3723 = trunc i32 %3722 to i8
  %3724 = and i8 %3723, 1
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3724, i8* %3725, align 1
  %3726 = icmp eq i32 %3710, 0
  %3727 = zext i1 %3726 to i8
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3727, i8* %3728, align 1
  %3729 = lshr i32 %3710, 31
  %3730 = trunc i32 %3729 to i8
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3730, i8* %3731, align 1
  %3732 = lshr i32 %3709, 31
  %3733 = xor i32 %3729, %3732
  %3734 = add i32 %3733, %3732
  %3735 = icmp eq i32 %3734, 2
  %3736 = zext i1 %3735 to i8
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3736, i8* %3737, align 1
  store %struct.Memory* %loadMem_4a9596, %struct.Memory** %MEMORY
  %loadMem_4a959d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 33
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %3740 to i64*
  %3741 = load i64, i64* %PC.i939
  %3742 = add i64 %3741, 58
  %3743 = load i64, i64* %PC.i939
  %3744 = add i64 %3743, 6
  %3745 = load i64, i64* %PC.i939
  %3746 = add i64 %3745, 6
  store i64 %3746, i64* %PC.i939
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3748 = load i8, i8* %3747, align 1
  store i8 %3748, i8* %BRANCH_TAKEN, align 1
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3750 = icmp ne i8 %3748, 0
  %3751 = select i1 %3750, i64 %3742, i64 %3744
  store i64 %3751, i64* %3749, align 8
  store %struct.Memory* %loadMem_4a959d, %struct.Memory** %MEMORY
  %loadBr_4a959d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a959d = icmp eq i8 %loadBr_4a959d, 1
  br i1 %cmpBr_4a959d, label %block_.L_4a95d7, label %block_4a95a3

block_4a95a3:                                     ; preds = %block_.L_4a9596
  %loadMem_4a95a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 33
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %3754 to i64*
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 1
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %3757 to i64*
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 15
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %3760 to i64*
  %3761 = load i64, i64* %RBP.i938
  %3762 = sub i64 %3761, 7120
  %3763 = load i64, i64* %PC.i936
  %3764 = add i64 %3763, 7
  store i64 %3764, i64* %PC.i936
  store i64 %3762, i64* %RAX.i937, align 8
  store %struct.Memory* %loadMem_4a95a3, %struct.Memory** %MEMORY
  %loadMem_4a95aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 33
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %3767 to i64*
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 5
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %RCX.i934 = bitcast %union.anon* %3770 to i64*
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 15
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %RBP.i935 = bitcast %union.anon* %3773 to i64*
  %3774 = load i64, i64* %RBP.i935
  %3775 = sub i64 %3774, 7144
  %3776 = load i64, i64* %PC.i933
  %3777 = add i64 %3776, 7
  store i64 %3777, i64* %PC.i933
  %3778 = inttoptr i64 %3775 to i32*
  %3779 = load i32, i32* %3778
  %3780 = sext i32 %3779 to i64
  store i64 %3780, i64* %RCX.i934, align 8
  store %struct.Memory* %loadMem_4a95aa, %struct.Memory** %MEMORY
  %loadMem_4a95b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 33
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 5
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RCX.i932
  %3788 = load i64, i64* %PC.i931
  %3789 = add i64 %3788, 4
  store i64 %3789, i64* %PC.i931
  %3790 = sext i64 %3787 to i128
  %3791 = and i128 %3790, -18446744073709551616
  %3792 = zext i64 %3787 to i128
  %3793 = or i128 %3791, %3792
  %3794 = mul i128 84, %3793
  %3795 = trunc i128 %3794 to i64
  store i64 %3795, i64* %RCX.i932, align 8
  %3796 = sext i64 %3795 to i128
  %3797 = icmp ne i128 %3796, %3794
  %3798 = zext i1 %3797 to i8
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3798, i8* %3799, align 1
  %3800 = trunc i128 %3794 to i32
  %3801 = and i32 %3800, 255
  %3802 = call i32 @llvm.ctpop.i32(i32 %3801)
  %3803 = trunc i32 %3802 to i8
  %3804 = and i8 %3803, 1
  %3805 = xor i8 %3804, 1
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3805, i8* %3806, align 1
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3807, align 1
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3808, align 1
  %3809 = lshr i64 %3795, 63
  %3810 = trunc i64 %3809 to i8
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3810, i8* %3811, align 1
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3798, i8* %3812, align 1
  store %struct.Memory* %loadMem_4a95b1, %struct.Memory** %MEMORY
  %loadMem_4a95b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 33
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %3815 to i64*
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3817 = getelementptr inbounds %struct.GPR, %struct.GPR* %3816, i32 0, i32 1
  %3818 = getelementptr inbounds %struct.Reg, %struct.Reg* %3817, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %3818 to i64*
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3820 = getelementptr inbounds %struct.GPR, %struct.GPR* %3819, i32 0, i32 5
  %3821 = getelementptr inbounds %struct.Reg, %struct.Reg* %3820, i32 0, i32 0
  %RCX.i930 = bitcast %union.anon* %3821 to i64*
  %3822 = load i64, i64* %RAX.i929
  %3823 = load i64, i64* %RCX.i930
  %3824 = load i64, i64* %PC.i928
  %3825 = add i64 %3824, 3
  store i64 %3825, i64* %PC.i928
  %3826 = add i64 %3823, %3822
  store i64 %3826, i64* %RAX.i929, align 8
  %3827 = icmp ult i64 %3826, %3822
  %3828 = icmp ult i64 %3826, %3823
  %3829 = or i1 %3827, %3828
  %3830 = zext i1 %3829 to i8
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3830, i8* %3831, align 1
  %3832 = trunc i64 %3826 to i32
  %3833 = and i32 %3832, 255
  %3834 = call i32 @llvm.ctpop.i32(i32 %3833)
  %3835 = trunc i32 %3834 to i8
  %3836 = and i8 %3835, 1
  %3837 = xor i8 %3836, 1
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3837, i8* %3838, align 1
  %3839 = xor i64 %3823, %3822
  %3840 = xor i64 %3839, %3826
  %3841 = lshr i64 %3840, 4
  %3842 = trunc i64 %3841 to i8
  %3843 = and i8 %3842, 1
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3843, i8* %3844, align 1
  %3845 = icmp eq i64 %3826, 0
  %3846 = zext i1 %3845 to i8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3846, i8* %3847, align 1
  %3848 = lshr i64 %3826, 63
  %3849 = trunc i64 %3848 to i8
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3849, i8* %3850, align 1
  %3851 = lshr i64 %3822, 63
  %3852 = lshr i64 %3823, 63
  %3853 = xor i64 %3848, %3851
  %3854 = xor i64 %3848, %3852
  %3855 = add i64 %3853, %3854
  %3856 = icmp eq i64 %3855, 2
  %3857 = zext i1 %3856 to i8
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3857, i8* %3858, align 1
  store %struct.Memory* %loadMem_4a95b5, %struct.Memory** %MEMORY
  %loadMem_4a95b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3860 = getelementptr inbounds %struct.GPR, %struct.GPR* %3859, i32 0, i32 33
  %3861 = getelementptr inbounds %struct.Reg, %struct.Reg* %3860, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %3861 to i64*
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 5
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %RCX.i926 = bitcast %union.anon* %3864 to i64*
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 15
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %3867 to i64*
  %3868 = load i64, i64* %RBP.i927
  %3869 = sub i64 %3868, 7148
  %3870 = load i64, i64* %PC.i925
  %3871 = add i64 %3870, 7
  store i64 %3871, i64* %PC.i925
  %3872 = inttoptr i64 %3869 to i32*
  %3873 = load i32, i32* %3872
  %3874 = sext i32 %3873 to i64
  store i64 %3874, i64* %RCX.i926, align 8
  store %struct.Memory* %loadMem_4a95b8, %struct.Memory** %MEMORY
  %loadMem_4a95bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3876 = getelementptr inbounds %struct.GPR, %struct.GPR* %3875, i32 0, i32 33
  %3877 = getelementptr inbounds %struct.Reg, %struct.Reg* %3876, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %3877 to i64*
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3879 = getelementptr inbounds %struct.GPR, %struct.GPR* %3878, i32 0, i32 1
  %3880 = getelementptr inbounds %struct.Reg, %struct.Reg* %3879, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %3880 to i64*
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3882 = getelementptr inbounds %struct.GPR, %struct.GPR* %3881, i32 0, i32 5
  %3883 = getelementptr inbounds %struct.Reg, %struct.Reg* %3882, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %3883 to i64*
  %3884 = load i64, i64* %RAX.i923
  %3885 = load i64, i64* %RCX.i924
  %3886 = add i64 %3885, %3884
  %3887 = load i64, i64* %PC.i922
  %3888 = add i64 %3887, 4
  store i64 %3888, i64* %PC.i922
  %3889 = inttoptr i64 %3886 to i8*
  store i8 45, i8* %3889
  store %struct.Memory* %loadMem_4a95bf, %struct.Memory** %MEMORY
  %loadMem_4a95c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3891 = getelementptr inbounds %struct.GPR, %struct.GPR* %3890, i32 0, i32 33
  %3892 = getelementptr inbounds %struct.Reg, %struct.Reg* %3891, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %3892 to i64*
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3894 = getelementptr inbounds %struct.GPR, %struct.GPR* %3893, i32 0, i32 1
  %3895 = getelementptr inbounds %struct.Reg, %struct.Reg* %3894, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %3895 to i64*
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 15
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %3898 to i64*
  %3899 = load i64, i64* %RBP.i921
  %3900 = sub i64 %3899, 7148
  %3901 = load i64, i64* %PC.i919
  %3902 = add i64 %3901, 6
  store i64 %3902, i64* %PC.i919
  %3903 = inttoptr i64 %3900 to i32*
  %3904 = load i32, i32* %3903
  %3905 = zext i32 %3904 to i64
  store i64 %3905, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_4a95c3, %struct.Memory** %MEMORY
  %loadMem_4a95c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 33
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %3908 to i64*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 1
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %3911 to i64*
  %3912 = load i64, i64* %RAX.i918
  %3913 = load i64, i64* %PC.i917
  %3914 = add i64 %3913, 3
  store i64 %3914, i64* %PC.i917
  %3915 = trunc i64 %3912 to i32
  %3916 = add i32 1, %3915
  %3917 = zext i32 %3916 to i64
  store i64 %3917, i64* %RAX.i918, align 8
  %3918 = icmp ult i32 %3916, %3915
  %3919 = icmp ult i32 %3916, 1
  %3920 = or i1 %3918, %3919
  %3921 = zext i1 %3920 to i8
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3921, i8* %3922, align 1
  %3923 = and i32 %3916, 255
  %3924 = call i32 @llvm.ctpop.i32(i32 %3923)
  %3925 = trunc i32 %3924 to i8
  %3926 = and i8 %3925, 1
  %3927 = xor i8 %3926, 1
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3927, i8* %3928, align 1
  %3929 = xor i64 1, %3912
  %3930 = trunc i64 %3929 to i32
  %3931 = xor i32 %3930, %3916
  %3932 = lshr i32 %3931, 4
  %3933 = trunc i32 %3932 to i8
  %3934 = and i8 %3933, 1
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3934, i8* %3935, align 1
  %3936 = icmp eq i32 %3916, 0
  %3937 = zext i1 %3936 to i8
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3937, i8* %3938, align 1
  %3939 = lshr i32 %3916, 31
  %3940 = trunc i32 %3939 to i8
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3940, i8* %3941, align 1
  %3942 = lshr i32 %3915, 31
  %3943 = xor i32 %3939, %3942
  %3944 = add i32 %3943, %3939
  %3945 = icmp eq i32 %3944, 2
  %3946 = zext i1 %3945 to i8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3946, i8* %3947, align 1
  store %struct.Memory* %loadMem_4a95c9, %struct.Memory** %MEMORY
  %loadMem_4a95cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3949 = getelementptr inbounds %struct.GPR, %struct.GPR* %3948, i32 0, i32 33
  %3950 = getelementptr inbounds %struct.Reg, %struct.Reg* %3949, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %3950 to i64*
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3952 = getelementptr inbounds %struct.GPR, %struct.GPR* %3951, i32 0, i32 1
  %3953 = getelementptr inbounds %struct.Reg, %struct.Reg* %3952, i32 0, i32 0
  %EAX.i915 = bitcast %union.anon* %3953 to i32*
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3955 = getelementptr inbounds %struct.GPR, %struct.GPR* %3954, i32 0, i32 15
  %3956 = getelementptr inbounds %struct.Reg, %struct.Reg* %3955, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %3956 to i64*
  %3957 = load i64, i64* %RBP.i916
  %3958 = sub i64 %3957, 7148
  %3959 = load i32, i32* %EAX.i915
  %3960 = zext i32 %3959 to i64
  %3961 = load i64, i64* %PC.i914
  %3962 = add i64 %3961, 6
  store i64 %3962, i64* %PC.i914
  %3963 = inttoptr i64 %3958 to i32*
  store i32 %3959, i32* %3963
  store %struct.Memory* %loadMem_4a95cc, %struct.Memory** %MEMORY
  %loadMem_4a95d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3965 = getelementptr inbounds %struct.GPR, %struct.GPR* %3964, i32 0, i32 33
  %3966 = getelementptr inbounds %struct.Reg, %struct.Reg* %3965, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %3966 to i64*
  %3967 = load i64, i64* %PC.i913
  %3968 = add i64 %3967, -60
  %3969 = load i64, i64* %PC.i913
  %3970 = add i64 %3969, 5
  store i64 %3970, i64* %PC.i913
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3968, i64* %3971, align 8
  store %struct.Memory* %loadMem_4a95d2, %struct.Memory** %MEMORY
  br label %block_.L_4a9596

block_.L_4a95d7:                                  ; preds = %block_.L_4a9596
  %loadMem_4a95d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3973 = getelementptr inbounds %struct.GPR, %struct.GPR* %3972, i32 0, i32 33
  %3974 = getelementptr inbounds %struct.Reg, %struct.Reg* %3973, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3974 to i64*
  %3975 = load i64, i64* %PC.i912
  %3976 = add i64 %3975, 5
  %3977 = load i64, i64* %PC.i912
  %3978 = add i64 %3977, 5
  store i64 %3978, i64* %PC.i912
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3976, i64* %3979, align 8
  store %struct.Memory* %loadMem_4a95d7, %struct.Memory** %MEMORY
  br label %block_.L_4a95dc

block_.L_4a95dc:                                  ; preds = %block_.L_4a95d7
  %loadMem_4a95dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3981 = getelementptr inbounds %struct.GPR, %struct.GPR* %3980, i32 0, i32 33
  %3982 = getelementptr inbounds %struct.Reg, %struct.Reg* %3981, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3982 to i64*
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3984 = getelementptr inbounds %struct.GPR, %struct.GPR* %3983, i32 0, i32 1
  %3985 = getelementptr inbounds %struct.Reg, %struct.Reg* %3984, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %3985 to i64*
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3987 = getelementptr inbounds %struct.GPR, %struct.GPR* %3986, i32 0, i32 15
  %3988 = getelementptr inbounds %struct.Reg, %struct.Reg* %3987, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %3988 to i64*
  %3989 = load i64, i64* %RBP.i911
  %3990 = sub i64 %3989, 7144
  %3991 = load i64, i64* %PC.i909
  %3992 = add i64 %3991, 6
  store i64 %3992, i64* %PC.i909
  %3993 = inttoptr i64 %3990 to i32*
  %3994 = load i32, i32* %3993
  %3995 = zext i32 %3994 to i64
  store i64 %3995, i64* %RAX.i910, align 8
  store %struct.Memory* %loadMem_4a95dc, %struct.Memory** %MEMORY
  %loadMem_4a95e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 33
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 1
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RAX.i908 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %RAX.i908
  %4003 = load i64, i64* %PC.i907
  %4004 = add i64 %4003, 3
  store i64 %4004, i64* %PC.i907
  %4005 = trunc i64 %4002 to i32
  %4006 = add i32 1, %4005
  %4007 = zext i32 %4006 to i64
  store i64 %4007, i64* %RAX.i908, align 8
  %4008 = icmp ult i32 %4006, %4005
  %4009 = icmp ult i32 %4006, 1
  %4010 = or i1 %4008, %4009
  %4011 = zext i1 %4010 to i8
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4011, i8* %4012, align 1
  %4013 = and i32 %4006, 255
  %4014 = call i32 @llvm.ctpop.i32(i32 %4013)
  %4015 = trunc i32 %4014 to i8
  %4016 = and i8 %4015, 1
  %4017 = xor i8 %4016, 1
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4017, i8* %4018, align 1
  %4019 = xor i64 1, %4002
  %4020 = trunc i64 %4019 to i32
  %4021 = xor i32 %4020, %4006
  %4022 = lshr i32 %4021, 4
  %4023 = trunc i32 %4022 to i8
  %4024 = and i8 %4023, 1
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4024, i8* %4025, align 1
  %4026 = icmp eq i32 %4006, 0
  %4027 = zext i1 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4027, i8* %4028, align 1
  %4029 = lshr i32 %4006, 31
  %4030 = trunc i32 %4029 to i8
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4030, i8* %4031, align 1
  %4032 = lshr i32 %4005, 31
  %4033 = xor i32 %4029, %4032
  %4034 = add i32 %4033, %4029
  %4035 = icmp eq i32 %4034, 2
  %4036 = zext i1 %4035 to i8
  %4037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4036, i8* %4037, align 1
  store %struct.Memory* %loadMem_4a95e2, %struct.Memory** %MEMORY
  %loadMem_4a95e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4039 = getelementptr inbounds %struct.GPR, %struct.GPR* %4038, i32 0, i32 33
  %4040 = getelementptr inbounds %struct.Reg, %struct.Reg* %4039, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %4040 to i64*
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4042 = getelementptr inbounds %struct.GPR, %struct.GPR* %4041, i32 0, i32 1
  %4043 = getelementptr inbounds %struct.Reg, %struct.Reg* %4042, i32 0, i32 0
  %EAX.i905 = bitcast %union.anon* %4043 to i32*
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 15
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %4046 to i64*
  %4047 = load i64, i64* %RBP.i906
  %4048 = sub i64 %4047, 7144
  %4049 = load i32, i32* %EAX.i905
  %4050 = zext i32 %4049 to i64
  %4051 = load i64, i64* %PC.i904
  %4052 = add i64 %4051, 6
  store i64 %4052, i64* %PC.i904
  %4053 = inttoptr i64 %4048 to i32*
  store i32 %4049, i32* %4053
  store %struct.Memory* %loadMem_4a95e5, %struct.Memory** %MEMORY
  %loadMem_4a95eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4055 = getelementptr inbounds %struct.GPR, %struct.GPR* %4054, i32 0, i32 33
  %4056 = getelementptr inbounds %struct.Reg, %struct.Reg* %4055, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %4056 to i64*
  %4057 = load i64, i64* %PC.i903
  %4058 = add i64 %4057, -122
  %4059 = load i64, i64* %PC.i903
  %4060 = add i64 %4059, 5
  store i64 %4060, i64* %PC.i903
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4058, i64* %4061, align 8
  store %struct.Memory* %loadMem_4a95eb, %struct.Memory** %MEMORY
  br label %block_.L_4a9571

block_.L_4a95f0:                                  ; preds = %block_.L_4a9571
  %loadMem_4a95f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 33
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %4064 to i64*
  %4065 = load i64, i64* %PC.i902
  %4066 = add i64 %4065, 5
  %4067 = load i64, i64* %PC.i902
  %4068 = add i64 %4067, 5
  store i64 %4068, i64* %PC.i902
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4066, i64* %4069, align 8
  store %struct.Memory* %loadMem_4a95f0, %struct.Memory** %MEMORY
  br label %block_.L_4a95f5

block_.L_4a95f5:                                  ; preds = %block_.L_4a95f0, %block_.L_4a9554
  %loadMem_4a95f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 33
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %4072 to i64*
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4074 = getelementptr inbounds %struct.GPR, %struct.GPR* %4073, i32 0, i32 1
  %4075 = getelementptr inbounds %struct.Reg, %struct.Reg* %4074, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %4075 to i64*
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4077 = getelementptr inbounds %struct.GPR, %struct.GPR* %4076, i32 0, i32 15
  %4078 = getelementptr inbounds %struct.Reg, %struct.Reg* %4077, i32 0, i32 0
  %RBP.i901 = bitcast %union.anon* %4078 to i64*
  %4079 = load i64, i64* %RBP.i901
  %4080 = sub i64 %4079, 32
  %4081 = load i64, i64* %PC.i899
  %4082 = add i64 %4081, 4
  store i64 %4082, i64* %PC.i899
  %4083 = inttoptr i64 %4080 to i64*
  %4084 = load i64, i64* %4083
  store i64 %4084, i64* %RAX.i900, align 8
  store %struct.Memory* %loadMem_4a95f5, %struct.Memory** %MEMORY
  %loadMem_4a95f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4086 = getelementptr inbounds %struct.GPR, %struct.GPR* %4085, i32 0, i32 33
  %4087 = getelementptr inbounds %struct.Reg, %struct.Reg* %4086, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %4087 to i64*
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 1
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %4090 to i64*
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 5
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %4093 to i64*
  %4094 = load i64, i64* %RAX.i897
  %4095 = add i64 %4094, 48
  %4096 = load i64, i64* %PC.i896
  %4097 = add i64 %4096, 3
  store i64 %4097, i64* %PC.i896
  %4098 = inttoptr i64 %4095 to i32*
  %4099 = load i32, i32* %4098
  %4100 = zext i32 %4099 to i64
  store i64 %4100, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_4a95f9, %struct.Memory** %MEMORY
  %loadMem_4a95fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %4103 to i64*
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 5
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %RCX.i895 = bitcast %union.anon* %4106 to i64*
  %4107 = load i64, i64* %RCX.i895
  %4108 = load i64, i64* %PC.i894
  %4109 = add i64 %4108, 3
  store i64 %4109, i64* %PC.i894
  %4110 = and i64 8, %4107
  %4111 = trunc i64 %4110 to i32
  store i64 %4110, i64* %RCX.i895, align 8
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4112, align 1
  %4113 = and i32 %4111, 255
  %4114 = call i32 @llvm.ctpop.i32(i32 %4113)
  %4115 = trunc i32 %4114 to i8
  %4116 = and i8 %4115, 1
  %4117 = xor i8 %4116, 1
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4117, i8* %4118, align 1
  %4119 = icmp eq i32 %4111, 0
  %4120 = zext i1 %4119 to i8
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4120, i8* %4121, align 1
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4122, align 1
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4123, align 1
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4124, align 1
  store %struct.Memory* %loadMem_4a95fc, %struct.Memory** %MEMORY
  %loadMem_4a95ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 33
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %4127 to i64*
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 5
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %ECX.i893 = bitcast %union.anon* %4130 to i32*
  %4131 = load i32, i32* %ECX.i893
  %4132 = zext i32 %4131 to i64
  %4133 = load i64, i64* %PC.i892
  %4134 = add i64 %4133, 3
  store i64 %4134, i64* %PC.i892
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4135, align 1
  %4136 = and i32 %4131, 255
  %4137 = call i32 @llvm.ctpop.i32(i32 %4136)
  %4138 = trunc i32 %4137 to i8
  %4139 = and i8 %4138, 1
  %4140 = xor i8 %4139, 1
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4140, i8* %4141, align 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4142, align 1
  %4143 = icmp eq i32 %4131, 0
  %4144 = zext i1 %4143 to i8
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4144, i8* %4145, align 1
  %4146 = lshr i32 %4131, 31
  %4147 = trunc i32 %4146 to i8
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4147, i8* %4148, align 1
  %4149 = lshr i32 %4131, 31
  %4150 = xor i32 %4146, %4149
  %4151 = add i32 %4150, %4149
  %4152 = icmp eq i32 %4151, 2
  %4153 = zext i1 %4152 to i8
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4153, i8* %4154, align 1
  store %struct.Memory* %loadMem_4a95ff, %struct.Memory** %MEMORY
  %loadMem_4a9602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4156 = getelementptr inbounds %struct.GPR, %struct.GPR* %4155, i32 0, i32 33
  %4157 = getelementptr inbounds %struct.Reg, %struct.Reg* %4156, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %4157 to i64*
  %4158 = load i64, i64* %PC.i891
  %4159 = add i64 %4158, 338
  %4160 = load i64, i64* %PC.i891
  %4161 = add i64 %4160, 6
  %4162 = load i64, i64* %PC.i891
  %4163 = add i64 %4162, 6
  store i64 %4163, i64* %PC.i891
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4165 = load i8, i8* %4164, align 1
  store i8 %4165, i8* %BRANCH_TAKEN, align 1
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4167 = icmp ne i8 %4165, 0
  %4168 = select i1 %4167, i64 %4159, i64 %4161
  store i64 %4168, i64* %4166, align 8
  store %struct.Memory* %loadMem_4a9602, %struct.Memory** %MEMORY
  %loadBr_4a9602 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9602 = icmp eq i8 %loadBr_4a9602, 1
  br i1 %cmpBr_4a9602, label %block_.L_4a9754, label %block_4a9608

block_4a9608:                                     ; preds = %block_.L_4a95f5
  %loadMem_4a9608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 33
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %4171 to i64*
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 15
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %4174 to i64*
  %4175 = load i64, i64* %RBP.i890
  %4176 = sub i64 %4175, 7144
  %4177 = load i64, i64* %PC.i889
  %4178 = add i64 %4177, 10
  store i64 %4178, i64* %PC.i889
  %4179 = inttoptr i64 %4176 to i32*
  store i32 0, i32* %4179
  store %struct.Memory* %loadMem_4a9608, %struct.Memory** %MEMORY
  br label %block_.L_4a9612

block_.L_4a9612:                                  ; preds = %block_.L_4a968e, %block_4a9608
  %loadMem_4a9612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 33
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %4182 to i64*
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 1
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 15
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %RBP.i888 = bitcast %union.anon* %4188 to i64*
  %4189 = load i64, i64* %RBP.i888
  %4190 = sub i64 %4189, 7144
  %4191 = load i64, i64* %PC.i886
  %4192 = add i64 %4191, 6
  store i64 %4192, i64* %PC.i886
  %4193 = inttoptr i64 %4190 to i32*
  %4194 = load i32, i32* %4193
  %4195 = zext i32 %4194 to i64
  store i64 %4195, i64* %RAX.i887, align 8
  store %struct.Memory* %loadMem_4a9612, %struct.Memory** %MEMORY
  %loadMem_4a9618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 33
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %4198 to i64*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 5
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %RCX.i884 = bitcast %union.anon* %4201 to i64*
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 15
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %4204 to i64*
  %4205 = load i64, i64* %RBP.i885
  %4206 = sub i64 %4205, 7124
  %4207 = load i64, i64* %PC.i883
  %4208 = add i64 %4207, 6
  store i64 %4208, i64* %PC.i883
  %4209 = inttoptr i64 %4206 to i32*
  %4210 = load i32, i32* %4209
  %4211 = zext i32 %4210 to i64
  store i64 %4211, i64* %RCX.i884, align 8
  store %struct.Memory* %loadMem_4a9618, %struct.Memory** %MEMORY
  %loadMem_4a961e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 33
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %4214 to i64*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 7
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %4217 to i64*
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 15
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %4220 to i64*
  %4221 = load i64, i64* %RBP.i882
  %4222 = sub i64 %4221, 32
  %4223 = load i64, i64* %PC.i880
  %4224 = add i64 %4223, 4
  store i64 %4224, i64* %PC.i880
  %4225 = inttoptr i64 %4222 to i64*
  %4226 = load i64, i64* %4225
  store i64 %4226, i64* %RDX.i881, align 8
  store %struct.Memory* %loadMem_4a961e, %struct.Memory** %MEMORY
  %loadMem_4a9622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 33
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %4229 to i64*
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 5
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %RCX.i878 = bitcast %union.anon* %4232 to i64*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 7
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %RDX.i879 = bitcast %union.anon* %4235 to i64*
  %4236 = load i64, i64* %RCX.i878
  %4237 = load i64, i64* %RDX.i879
  %4238 = add i64 %4237, 32
  %4239 = load i64, i64* %PC.i877
  %4240 = add i64 %4239, 3
  store i64 %4240, i64* %PC.i877
  %4241 = trunc i64 %4236 to i32
  %4242 = inttoptr i64 %4238 to i32*
  %4243 = load i32, i32* %4242
  %4244 = add i32 %4243, %4241
  %4245 = zext i32 %4244 to i64
  store i64 %4245, i64* %RCX.i878, align 8
  %4246 = icmp ult i32 %4244, %4241
  %4247 = icmp ult i32 %4244, %4243
  %4248 = or i1 %4246, %4247
  %4249 = zext i1 %4248 to i8
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4249, i8* %4250, align 1
  %4251 = and i32 %4244, 255
  %4252 = call i32 @llvm.ctpop.i32(i32 %4251)
  %4253 = trunc i32 %4252 to i8
  %4254 = and i8 %4253, 1
  %4255 = xor i8 %4254, 1
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4255, i8* %4256, align 1
  %4257 = xor i32 %4243, %4241
  %4258 = xor i32 %4257, %4244
  %4259 = lshr i32 %4258, 4
  %4260 = trunc i32 %4259 to i8
  %4261 = and i8 %4260, 1
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4261, i8* %4262, align 1
  %4263 = icmp eq i32 %4244, 0
  %4264 = zext i1 %4263 to i8
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4264, i8* %4265, align 1
  %4266 = lshr i32 %4244, 31
  %4267 = trunc i32 %4266 to i8
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4267, i8* %4268, align 1
  %4269 = lshr i32 %4241, 31
  %4270 = lshr i32 %4243, 31
  %4271 = xor i32 %4266, %4269
  %4272 = xor i32 %4266, %4270
  %4273 = add i32 %4271, %4272
  %4274 = icmp eq i32 %4273, 2
  %4275 = zext i1 %4274 to i8
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4275, i8* %4276, align 1
  store %struct.Memory* %loadMem_4a9622, %struct.Memory** %MEMORY
  %loadMem_4a9625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 33
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %4279 to i64*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 5
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %RCX.i876 = bitcast %union.anon* %4282 to i64*
  %4283 = load i64, i64* %RCX.i876
  %4284 = load i64, i64* %PC.i875
  %4285 = add i64 %4284, 3
  store i64 %4285, i64* %PC.i875
  %4286 = trunc i64 %4283 to i32
  %4287 = add i32 1, %4286
  %4288 = zext i32 %4287 to i64
  store i64 %4288, i64* %RCX.i876, align 8
  %4289 = icmp ult i32 %4287, %4286
  %4290 = icmp ult i32 %4287, 1
  %4291 = or i1 %4289, %4290
  %4292 = zext i1 %4291 to i8
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4292, i8* %4293, align 1
  %4294 = and i32 %4287, 255
  %4295 = call i32 @llvm.ctpop.i32(i32 %4294)
  %4296 = trunc i32 %4295 to i8
  %4297 = and i8 %4296, 1
  %4298 = xor i8 %4297, 1
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4298, i8* %4299, align 1
  %4300 = xor i64 1, %4283
  %4301 = trunc i64 %4300 to i32
  %4302 = xor i32 %4301, %4287
  %4303 = lshr i32 %4302, 4
  %4304 = trunc i32 %4303 to i8
  %4305 = and i8 %4304, 1
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4305, i8* %4306, align 1
  %4307 = icmp eq i32 %4287, 0
  %4308 = zext i1 %4307 to i8
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4308, i8* %4309, align 1
  %4310 = lshr i32 %4287, 31
  %4311 = trunc i32 %4310 to i8
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4311, i8* %4312, align 1
  %4313 = lshr i32 %4286, 31
  %4314 = xor i32 %4310, %4313
  %4315 = add i32 %4314, %4310
  %4316 = icmp eq i32 %4315, 2
  %4317 = zext i1 %4316 to i8
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4317, i8* %4318, align 1
  store %struct.Memory* %loadMem_4a9625, %struct.Memory** %MEMORY
  %loadMem_4a9628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 33
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 1
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %EAX.i873 = bitcast %union.anon* %4324 to i32*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 5
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %ECX.i874 = bitcast %union.anon* %4327 to i32*
  %4328 = load i32, i32* %EAX.i873
  %4329 = zext i32 %4328 to i64
  %4330 = load i32, i32* %ECX.i874
  %4331 = zext i32 %4330 to i64
  %4332 = load i64, i64* %PC.i872
  %4333 = add i64 %4332, 2
  store i64 %4333, i64* %PC.i872
  %4334 = sub i32 %4328, %4330
  %4335 = icmp ult i32 %4328, %4330
  %4336 = zext i1 %4335 to i8
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4336, i8* %4337, align 1
  %4338 = and i32 %4334, 255
  %4339 = call i32 @llvm.ctpop.i32(i32 %4338)
  %4340 = trunc i32 %4339 to i8
  %4341 = and i8 %4340, 1
  %4342 = xor i8 %4341, 1
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4342, i8* %4343, align 1
  %4344 = xor i64 %4331, %4329
  %4345 = trunc i64 %4344 to i32
  %4346 = xor i32 %4345, %4334
  %4347 = lshr i32 %4346, 4
  %4348 = trunc i32 %4347 to i8
  %4349 = and i8 %4348, 1
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4349, i8* %4350, align 1
  %4351 = icmp eq i32 %4334, 0
  %4352 = zext i1 %4351 to i8
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4352, i8* %4353, align 1
  %4354 = lshr i32 %4334, 31
  %4355 = trunc i32 %4354 to i8
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4355, i8* %4356, align 1
  %4357 = lshr i32 %4328, 31
  %4358 = lshr i32 %4330, 31
  %4359 = xor i32 %4358, %4357
  %4360 = xor i32 %4354, %4357
  %4361 = add i32 %4360, %4359
  %4362 = icmp eq i32 %4361, 2
  %4363 = zext i1 %4362 to i8
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4363, i8* %4364, align 1
  store %struct.Memory* %loadMem_4a9628, %struct.Memory** %MEMORY
  %loadMem_4a962a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4366 = getelementptr inbounds %struct.GPR, %struct.GPR* %4365, i32 0, i32 33
  %4367 = getelementptr inbounds %struct.Reg, %struct.Reg* %4366, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %4367 to i64*
  %4368 = load i64, i64* %PC.i871
  %4369 = add i64 %4368, 120
  %4370 = load i64, i64* %PC.i871
  %4371 = add i64 %4370, 6
  %4372 = load i64, i64* %PC.i871
  %4373 = add i64 %4372, 6
  store i64 %4373, i64* %PC.i871
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4375 = load i8, i8* %4374, align 1
  store i8 %4375, i8* %BRANCH_TAKEN, align 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4377 = icmp ne i8 %4375, 0
  %4378 = select i1 %4377, i64 %4369, i64 %4371
  store i64 %4378, i64* %4376, align 8
  store %struct.Memory* %loadMem_4a962a, %struct.Memory** %MEMORY
  %loadBr_4a962a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a962a = icmp eq i8 %loadBr_4a962a, 1
  br i1 %cmpBr_4a962a, label %block_.L_4a96a2, label %block_4a9630

block_4a9630:                                     ; preds = %block_.L_4a9612
  %loadMem_4a9630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %4381 to i64*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 15
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %4384 to i64*
  %4385 = load i64, i64* %RBP.i870
  %4386 = sub i64 %4385, 7148
  %4387 = load i64, i64* %PC.i869
  %4388 = add i64 %4387, 10
  store i64 %4388, i64* %PC.i869
  %4389 = inttoptr i64 %4386 to i32*
  store i32 0, i32* %4389
  store %struct.Memory* %loadMem_4a9630, %struct.Memory** %MEMORY
  br label %block_.L_4a963a

block_.L_4a963a:                                  ; preds = %block_4a9655, %block_4a9630
  %loadMem_4a963a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %4392 to i64*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 1
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %RAX.i867 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 15
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %4398 to i64*
  %4399 = load i64, i64* %RBP.i868
  %4400 = sub i64 %4399, 7148
  %4401 = load i64, i64* %PC.i866
  %4402 = add i64 %4401, 6
  store i64 %4402, i64* %PC.i866
  %4403 = inttoptr i64 %4400 to i32*
  %4404 = load i32, i32* %4403
  %4405 = zext i32 %4404 to i64
  store i64 %4405, i64* %RAX.i867, align 8
  store %struct.Memory* %loadMem_4a963a, %struct.Memory** %MEMORY
  %loadMem_4a9640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4407 = getelementptr inbounds %struct.GPR, %struct.GPR* %4406, i32 0, i32 33
  %4408 = getelementptr inbounds %struct.Reg, %struct.Reg* %4407, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %4408 to i64*
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 5
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %RCX.i864 = bitcast %union.anon* %4411 to i64*
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 15
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %4414 to i64*
  %4415 = load i64, i64* %RBP.i865
  %4416 = sub i64 %4415, 7128
  %4417 = load i64, i64* %PC.i863
  %4418 = add i64 %4417, 6
  store i64 %4418, i64* %PC.i863
  %4419 = inttoptr i64 %4416 to i32*
  %4420 = load i32, i32* %4419
  %4421 = zext i32 %4420 to i64
  store i64 %4421, i64* %RCX.i864, align 8
  store %struct.Memory* %loadMem_4a9640, %struct.Memory** %MEMORY
  %loadMem_4a9646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4423 = getelementptr inbounds %struct.GPR, %struct.GPR* %4422, i32 0, i32 33
  %4424 = getelementptr inbounds %struct.Reg, %struct.Reg* %4423, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %4424 to i64*
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 7
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %RDX.i861 = bitcast %union.anon* %4427 to i64*
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4429 = getelementptr inbounds %struct.GPR, %struct.GPR* %4428, i32 0, i32 15
  %4430 = getelementptr inbounds %struct.Reg, %struct.Reg* %4429, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %4430 to i64*
  %4431 = load i64, i64* %RBP.i862
  %4432 = sub i64 %4431, 32
  %4433 = load i64, i64* %PC.i860
  %4434 = add i64 %4433, 4
  store i64 %4434, i64* %PC.i860
  %4435 = inttoptr i64 %4432 to i64*
  %4436 = load i64, i64* %4435
  store i64 %4436, i64* %RDX.i861, align 8
  store %struct.Memory* %loadMem_4a9646, %struct.Memory** %MEMORY
  %loadMem_4a964a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 33
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %4439 to i64*
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 5
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %RCX.i858 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 7
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RDX.i859 = bitcast %union.anon* %4445 to i64*
  %4446 = load i64, i64* %RCX.i858
  %4447 = load i64, i64* %RDX.i859
  %4448 = add i64 %4447, 28
  %4449 = load i64, i64* %PC.i857
  %4450 = add i64 %4449, 3
  store i64 %4450, i64* %PC.i857
  %4451 = trunc i64 %4446 to i32
  %4452 = inttoptr i64 %4448 to i32*
  %4453 = load i32, i32* %4452
  %4454 = add i32 %4453, %4451
  %4455 = zext i32 %4454 to i64
  store i64 %4455, i64* %RCX.i858, align 8
  %4456 = icmp ult i32 %4454, %4451
  %4457 = icmp ult i32 %4454, %4453
  %4458 = or i1 %4456, %4457
  %4459 = zext i1 %4458 to i8
  %4460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4459, i8* %4460, align 1
  %4461 = and i32 %4454, 255
  %4462 = call i32 @llvm.ctpop.i32(i32 %4461)
  %4463 = trunc i32 %4462 to i8
  %4464 = and i8 %4463, 1
  %4465 = xor i8 %4464, 1
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4465, i8* %4466, align 1
  %4467 = xor i32 %4453, %4451
  %4468 = xor i32 %4467, %4454
  %4469 = lshr i32 %4468, 4
  %4470 = trunc i32 %4469 to i8
  %4471 = and i8 %4470, 1
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4471, i8* %4472, align 1
  %4473 = icmp eq i32 %4454, 0
  %4474 = zext i1 %4473 to i8
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4474, i8* %4475, align 1
  %4476 = lshr i32 %4454, 31
  %4477 = trunc i32 %4476 to i8
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4477, i8* %4478, align 1
  %4479 = lshr i32 %4451, 31
  %4480 = lshr i32 %4453, 31
  %4481 = xor i32 %4476, %4479
  %4482 = xor i32 %4476, %4480
  %4483 = add i32 %4481, %4482
  %4484 = icmp eq i32 %4483, 2
  %4485 = zext i1 %4484 to i8
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4485, i8* %4486, align 1
  store %struct.Memory* %loadMem_4a964a, %struct.Memory** %MEMORY
  %loadMem_4a964d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4488 = getelementptr inbounds %struct.GPR, %struct.GPR* %4487, i32 0, i32 33
  %4489 = getelementptr inbounds %struct.Reg, %struct.Reg* %4488, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %4489 to i64*
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 1
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %EAX.i855 = bitcast %union.anon* %4492 to i32*
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4494 = getelementptr inbounds %struct.GPR, %struct.GPR* %4493, i32 0, i32 5
  %4495 = getelementptr inbounds %struct.Reg, %struct.Reg* %4494, i32 0, i32 0
  %ECX.i856 = bitcast %union.anon* %4495 to i32*
  %4496 = load i32, i32* %EAX.i855
  %4497 = zext i32 %4496 to i64
  %4498 = load i32, i32* %ECX.i856
  %4499 = zext i32 %4498 to i64
  %4500 = load i64, i64* %PC.i854
  %4501 = add i64 %4500, 2
  store i64 %4501, i64* %PC.i854
  %4502 = sub i32 %4496, %4498
  %4503 = icmp ult i32 %4496, %4498
  %4504 = zext i1 %4503 to i8
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4504, i8* %4505, align 1
  %4506 = and i32 %4502, 255
  %4507 = call i32 @llvm.ctpop.i32(i32 %4506)
  %4508 = trunc i32 %4507 to i8
  %4509 = and i8 %4508, 1
  %4510 = xor i8 %4509, 1
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4510, i8* %4511, align 1
  %4512 = xor i64 %4499, %4497
  %4513 = trunc i64 %4512 to i32
  %4514 = xor i32 %4513, %4502
  %4515 = lshr i32 %4514, 4
  %4516 = trunc i32 %4515 to i8
  %4517 = and i8 %4516, 1
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4517, i8* %4518, align 1
  %4519 = icmp eq i32 %4502, 0
  %4520 = zext i1 %4519 to i8
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4520, i8* %4521, align 1
  %4522 = lshr i32 %4502, 31
  %4523 = trunc i32 %4522 to i8
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4523, i8* %4524, align 1
  %4525 = lshr i32 %4496, 31
  %4526 = lshr i32 %4498, 31
  %4527 = xor i32 %4526, %4525
  %4528 = xor i32 %4522, %4525
  %4529 = add i32 %4528, %4527
  %4530 = icmp eq i32 %4529, 2
  %4531 = zext i1 %4530 to i8
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4531, i8* %4532, align 1
  store %struct.Memory* %loadMem_4a964d, %struct.Memory** %MEMORY
  %loadMem_4a964f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 33
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %4535 to i64*
  %4536 = load i64, i64* %PC.i853
  %4537 = add i64 %4536, 58
  %4538 = load i64, i64* %PC.i853
  %4539 = add i64 %4538, 6
  %4540 = load i64, i64* %PC.i853
  %4541 = add i64 %4540, 6
  store i64 %4541, i64* %PC.i853
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4543 = load i8, i8* %4542, align 1
  store i8 %4543, i8* %BRANCH_TAKEN, align 1
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4545 = icmp ne i8 %4543, 0
  %4546 = select i1 %4545, i64 %4537, i64 %4539
  store i64 %4546, i64* %4544, align 8
  store %struct.Memory* %loadMem_4a964f, %struct.Memory** %MEMORY
  %loadBr_4a964f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a964f = icmp eq i8 %loadBr_4a964f, 1
  br i1 %cmpBr_4a964f, label %block_.L_4a9689, label %block_4a9655

block_4a9655:                                     ; preds = %block_.L_4a963a
  %loadMem_4a9655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 33
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 1
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %4552 to i64*
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 15
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %4555 to i64*
  %4556 = load i64, i64* %RBP.i852
  %4557 = sub i64 %4556, 7120
  %4558 = load i64, i64* %PC.i850
  %4559 = add i64 %4558, 7
  store i64 %4559, i64* %PC.i850
  store i64 %4557, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_4a9655, %struct.Memory** %MEMORY
  %loadMem_4a965c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4561 = getelementptr inbounds %struct.GPR, %struct.GPR* %4560, i32 0, i32 33
  %4562 = getelementptr inbounds %struct.Reg, %struct.Reg* %4561, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %4562 to i64*
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 5
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %RCX.i848 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 15
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %4568 to i64*
  %4569 = load i64, i64* %RBP.i849
  %4570 = sub i64 %4569, 7144
  %4571 = load i64, i64* %PC.i847
  %4572 = add i64 %4571, 7
  store i64 %4572, i64* %PC.i847
  %4573 = inttoptr i64 %4570 to i32*
  %4574 = load i32, i32* %4573
  %4575 = sext i32 %4574 to i64
  store i64 %4575, i64* %RCX.i848, align 8
  store %struct.Memory* %loadMem_4a965c, %struct.Memory** %MEMORY
  %loadMem_4a9663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 33
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %4578 to i64*
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 5
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %4581 to i64*
  %4582 = load i64, i64* %RCX.i846
  %4583 = load i64, i64* %PC.i845
  %4584 = add i64 %4583, 4
  store i64 %4584, i64* %PC.i845
  %4585 = sext i64 %4582 to i128
  %4586 = and i128 %4585, -18446744073709551616
  %4587 = zext i64 %4582 to i128
  %4588 = or i128 %4586, %4587
  %4589 = mul i128 84, %4588
  %4590 = trunc i128 %4589 to i64
  store i64 %4590, i64* %RCX.i846, align 8
  %4591 = sext i64 %4590 to i128
  %4592 = icmp ne i128 %4591, %4589
  %4593 = zext i1 %4592 to i8
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4593, i8* %4594, align 1
  %4595 = trunc i128 %4589 to i32
  %4596 = and i32 %4595, 255
  %4597 = call i32 @llvm.ctpop.i32(i32 %4596)
  %4598 = trunc i32 %4597 to i8
  %4599 = and i8 %4598, 1
  %4600 = xor i8 %4599, 1
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4600, i8* %4601, align 1
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4602, align 1
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4603, align 1
  %4604 = lshr i64 %4590, 63
  %4605 = trunc i64 %4604 to i8
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4605, i8* %4606, align 1
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4593, i8* %4607, align 1
  store %struct.Memory* %loadMem_4a9663, %struct.Memory** %MEMORY
  %loadMem_4a9667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4609 = getelementptr inbounds %struct.GPR, %struct.GPR* %4608, i32 0, i32 33
  %4610 = getelementptr inbounds %struct.Reg, %struct.Reg* %4609, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %4610 to i64*
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4612 = getelementptr inbounds %struct.GPR, %struct.GPR* %4611, i32 0, i32 1
  %4613 = getelementptr inbounds %struct.Reg, %struct.Reg* %4612, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %4613 to i64*
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4615 = getelementptr inbounds %struct.GPR, %struct.GPR* %4614, i32 0, i32 5
  %4616 = getelementptr inbounds %struct.Reg, %struct.Reg* %4615, i32 0, i32 0
  %RCX.i844 = bitcast %union.anon* %4616 to i64*
  %4617 = load i64, i64* %RAX.i843
  %4618 = load i64, i64* %RCX.i844
  %4619 = load i64, i64* %PC.i842
  %4620 = add i64 %4619, 3
  store i64 %4620, i64* %PC.i842
  %4621 = add i64 %4618, %4617
  store i64 %4621, i64* %RAX.i843, align 8
  %4622 = icmp ult i64 %4621, %4617
  %4623 = icmp ult i64 %4621, %4618
  %4624 = or i1 %4622, %4623
  %4625 = zext i1 %4624 to i8
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4625, i8* %4626, align 1
  %4627 = trunc i64 %4621 to i32
  %4628 = and i32 %4627, 255
  %4629 = call i32 @llvm.ctpop.i32(i32 %4628)
  %4630 = trunc i32 %4629 to i8
  %4631 = and i8 %4630, 1
  %4632 = xor i8 %4631, 1
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4632, i8* %4633, align 1
  %4634 = xor i64 %4618, %4617
  %4635 = xor i64 %4634, %4621
  %4636 = lshr i64 %4635, 4
  %4637 = trunc i64 %4636 to i8
  %4638 = and i8 %4637, 1
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4638, i8* %4639, align 1
  %4640 = icmp eq i64 %4621, 0
  %4641 = zext i1 %4640 to i8
  %4642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4641, i8* %4642, align 1
  %4643 = lshr i64 %4621, 63
  %4644 = trunc i64 %4643 to i8
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4644, i8* %4645, align 1
  %4646 = lshr i64 %4617, 63
  %4647 = lshr i64 %4618, 63
  %4648 = xor i64 %4643, %4646
  %4649 = xor i64 %4643, %4647
  %4650 = add i64 %4648, %4649
  %4651 = icmp eq i64 %4650, 2
  %4652 = zext i1 %4651 to i8
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4652, i8* %4653, align 1
  store %struct.Memory* %loadMem_4a9667, %struct.Memory** %MEMORY
  %loadMem_4a966a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4655 = getelementptr inbounds %struct.GPR, %struct.GPR* %4654, i32 0, i32 33
  %4656 = getelementptr inbounds %struct.Reg, %struct.Reg* %4655, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %4656 to i64*
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4658 = getelementptr inbounds %struct.GPR, %struct.GPR* %4657, i32 0, i32 5
  %4659 = getelementptr inbounds %struct.Reg, %struct.Reg* %4658, i32 0, i32 0
  %RCX.i840 = bitcast %union.anon* %4659 to i64*
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4661 = getelementptr inbounds %struct.GPR, %struct.GPR* %4660, i32 0, i32 15
  %4662 = getelementptr inbounds %struct.Reg, %struct.Reg* %4661, i32 0, i32 0
  %RBP.i841 = bitcast %union.anon* %4662 to i64*
  %4663 = load i64, i64* %RBP.i841
  %4664 = sub i64 %4663, 7148
  %4665 = load i64, i64* %PC.i839
  %4666 = add i64 %4665, 7
  store i64 %4666, i64* %PC.i839
  %4667 = inttoptr i64 %4664 to i32*
  %4668 = load i32, i32* %4667
  %4669 = sext i32 %4668 to i64
  store i64 %4669, i64* %RCX.i840, align 8
  store %struct.Memory* %loadMem_4a966a, %struct.Memory** %MEMORY
  %loadMem_4a9671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 33
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %4672 to i64*
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 1
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %RAX.i837 = bitcast %union.anon* %4675 to i64*
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4677 = getelementptr inbounds %struct.GPR, %struct.GPR* %4676, i32 0, i32 5
  %4678 = getelementptr inbounds %struct.Reg, %struct.Reg* %4677, i32 0, i32 0
  %RCX.i838 = bitcast %union.anon* %4678 to i64*
  %4679 = load i64, i64* %RAX.i837
  %4680 = load i64, i64* %RCX.i838
  %4681 = add i64 %4680, %4679
  %4682 = load i64, i64* %PC.i836
  %4683 = add i64 %4682, 4
  store i64 %4683, i64* %PC.i836
  %4684 = inttoptr i64 %4681 to i8*
  store i8 124, i8* %4684
  store %struct.Memory* %loadMem_4a9671, %struct.Memory** %MEMORY
  %loadMem_4a9675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 33
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %4687 to i64*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4689 = getelementptr inbounds %struct.GPR, %struct.GPR* %4688, i32 0, i32 1
  %4690 = getelementptr inbounds %struct.Reg, %struct.Reg* %4689, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %4690 to i64*
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4692 = getelementptr inbounds %struct.GPR, %struct.GPR* %4691, i32 0, i32 15
  %4693 = getelementptr inbounds %struct.Reg, %struct.Reg* %4692, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %4693 to i64*
  %4694 = load i64, i64* %RBP.i835
  %4695 = sub i64 %4694, 7148
  %4696 = load i64, i64* %PC.i833
  %4697 = add i64 %4696, 6
  store i64 %4697, i64* %PC.i833
  %4698 = inttoptr i64 %4695 to i32*
  %4699 = load i32, i32* %4698
  %4700 = zext i32 %4699 to i64
  store i64 %4700, i64* %RAX.i834, align 8
  store %struct.Memory* %loadMem_4a9675, %struct.Memory** %MEMORY
  %loadMem_4a967b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 33
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %4703 to i64*
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4705 = getelementptr inbounds %struct.GPR, %struct.GPR* %4704, i32 0, i32 1
  %4706 = getelementptr inbounds %struct.Reg, %struct.Reg* %4705, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %4706 to i64*
  %4707 = load i64, i64* %RAX.i832
  %4708 = load i64, i64* %PC.i831
  %4709 = add i64 %4708, 3
  store i64 %4709, i64* %PC.i831
  %4710 = trunc i64 %4707 to i32
  %4711 = add i32 1, %4710
  %4712 = zext i32 %4711 to i64
  store i64 %4712, i64* %RAX.i832, align 8
  %4713 = icmp ult i32 %4711, %4710
  %4714 = icmp ult i32 %4711, 1
  %4715 = or i1 %4713, %4714
  %4716 = zext i1 %4715 to i8
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4716, i8* %4717, align 1
  %4718 = and i32 %4711, 255
  %4719 = call i32 @llvm.ctpop.i32(i32 %4718)
  %4720 = trunc i32 %4719 to i8
  %4721 = and i8 %4720, 1
  %4722 = xor i8 %4721, 1
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4722, i8* %4723, align 1
  %4724 = xor i64 1, %4707
  %4725 = trunc i64 %4724 to i32
  %4726 = xor i32 %4725, %4711
  %4727 = lshr i32 %4726, 4
  %4728 = trunc i32 %4727 to i8
  %4729 = and i8 %4728, 1
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4729, i8* %4730, align 1
  %4731 = icmp eq i32 %4711, 0
  %4732 = zext i1 %4731 to i8
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4732, i8* %4733, align 1
  %4734 = lshr i32 %4711, 31
  %4735 = trunc i32 %4734 to i8
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4735, i8* %4736, align 1
  %4737 = lshr i32 %4710, 31
  %4738 = xor i32 %4734, %4737
  %4739 = add i32 %4738, %4734
  %4740 = icmp eq i32 %4739, 2
  %4741 = zext i1 %4740 to i8
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4741, i8* %4742, align 1
  store %struct.Memory* %loadMem_4a967b, %struct.Memory** %MEMORY
  %loadMem_4a967e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 33
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 1
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %EAX.i829 = bitcast %union.anon* %4748 to i32*
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 15
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %RBP.i830 = bitcast %union.anon* %4751 to i64*
  %4752 = load i64, i64* %RBP.i830
  %4753 = sub i64 %4752, 7148
  %4754 = load i32, i32* %EAX.i829
  %4755 = zext i32 %4754 to i64
  %4756 = load i64, i64* %PC.i828
  %4757 = add i64 %4756, 6
  store i64 %4757, i64* %PC.i828
  %4758 = inttoptr i64 %4753 to i32*
  store i32 %4754, i32* %4758
  store %struct.Memory* %loadMem_4a967e, %struct.Memory** %MEMORY
  %loadMem_4a9684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 33
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %4761 to i64*
  %4762 = load i64, i64* %PC.i827
  %4763 = add i64 %4762, -74
  %4764 = load i64, i64* %PC.i827
  %4765 = add i64 %4764, 5
  store i64 %4765, i64* %PC.i827
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4763, i64* %4766, align 8
  store %struct.Memory* %loadMem_4a9684, %struct.Memory** %MEMORY
  br label %block_.L_4a963a

block_.L_4a9689:                                  ; preds = %block_.L_4a963a
  %loadMem_4a9689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 33
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %4769 to i64*
  %4770 = load i64, i64* %PC.i826
  %4771 = add i64 %4770, 5
  %4772 = load i64, i64* %PC.i826
  %4773 = add i64 %4772, 5
  store i64 %4773, i64* %PC.i826
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4771, i64* %4774, align 8
  store %struct.Memory* %loadMem_4a9689, %struct.Memory** %MEMORY
  br label %block_.L_4a968e

block_.L_4a968e:                                  ; preds = %block_.L_4a9689
  %loadMem_4a968e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 33
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 1
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %4780 to i64*
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 15
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %4783 to i64*
  %4784 = load i64, i64* %RBP.i825
  %4785 = sub i64 %4784, 7144
  %4786 = load i64, i64* %PC.i823
  %4787 = add i64 %4786, 6
  store i64 %4787, i64* %PC.i823
  %4788 = inttoptr i64 %4785 to i32*
  %4789 = load i32, i32* %4788
  %4790 = zext i32 %4789 to i64
  store i64 %4790, i64* %RAX.i824, align 8
  store %struct.Memory* %loadMem_4a968e, %struct.Memory** %MEMORY
  %loadMem_4a9694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 33
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %4793 to i64*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 1
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %4796 to i64*
  %4797 = load i64, i64* %RAX.i822
  %4798 = load i64, i64* %PC.i821
  %4799 = add i64 %4798, 3
  store i64 %4799, i64* %PC.i821
  %4800 = trunc i64 %4797 to i32
  %4801 = add i32 1, %4800
  %4802 = zext i32 %4801 to i64
  store i64 %4802, i64* %RAX.i822, align 8
  %4803 = icmp ult i32 %4801, %4800
  %4804 = icmp ult i32 %4801, 1
  %4805 = or i1 %4803, %4804
  %4806 = zext i1 %4805 to i8
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4806, i8* %4807, align 1
  %4808 = and i32 %4801, 255
  %4809 = call i32 @llvm.ctpop.i32(i32 %4808)
  %4810 = trunc i32 %4809 to i8
  %4811 = and i8 %4810, 1
  %4812 = xor i8 %4811, 1
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4812, i8* %4813, align 1
  %4814 = xor i64 1, %4797
  %4815 = trunc i64 %4814 to i32
  %4816 = xor i32 %4815, %4801
  %4817 = lshr i32 %4816, 4
  %4818 = trunc i32 %4817 to i8
  %4819 = and i8 %4818, 1
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4819, i8* %4820, align 1
  %4821 = icmp eq i32 %4801, 0
  %4822 = zext i1 %4821 to i8
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4822, i8* %4823, align 1
  %4824 = lshr i32 %4801, 31
  %4825 = trunc i32 %4824 to i8
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4825, i8* %4826, align 1
  %4827 = lshr i32 %4800, 31
  %4828 = xor i32 %4824, %4827
  %4829 = add i32 %4828, %4824
  %4830 = icmp eq i32 %4829, 2
  %4831 = zext i1 %4830 to i8
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4831, i8* %4832, align 1
  store %struct.Memory* %loadMem_4a9694, %struct.Memory** %MEMORY
  %loadMem_4a9697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 33
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 1
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %EAX.i819 = bitcast %union.anon* %4838 to i32*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 15
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %4841 to i64*
  %4842 = load i64, i64* %RBP.i820
  %4843 = sub i64 %4842, 7144
  %4844 = load i32, i32* %EAX.i819
  %4845 = zext i32 %4844 to i64
  %4846 = load i64, i64* %PC.i818
  %4847 = add i64 %4846, 6
  store i64 %4847, i64* %PC.i818
  %4848 = inttoptr i64 %4843 to i32*
  store i32 %4844, i32* %4848
  store %struct.Memory* %loadMem_4a9697, %struct.Memory** %MEMORY
  %loadMem_4a969d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %4851 to i64*
  %4852 = load i64, i64* %PC.i817
  %4853 = add i64 %4852, -139
  %4854 = load i64, i64* %PC.i817
  %4855 = add i64 %4854, 5
  store i64 %4855, i64* %PC.i817
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4853, i64* %4856, align 8
  store %struct.Memory* %loadMem_4a969d, %struct.Memory** %MEMORY
  br label %block_.L_4a9612

block_.L_4a96a2:                                  ; preds = %block_.L_4a9612
  %loadMem_4a96a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 1
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 15
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %4865 to i64*
  %4866 = load i64, i64* %RBP.i816
  %4867 = sub i64 %4866, 32
  %4868 = load i64, i64* %PC.i814
  %4869 = add i64 %4868, 4
  store i64 %4869, i64* %PC.i814
  %4870 = inttoptr i64 %4867 to i64*
  %4871 = load i64, i64* %4870
  store i64 %4871, i64* %RAX.i815, align 8
  store %struct.Memory* %loadMem_4a96a2, %struct.Memory** %MEMORY
  %loadMem_4a96a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4873 = getelementptr inbounds %struct.GPR, %struct.GPR* %4872, i32 0, i32 33
  %4874 = getelementptr inbounds %struct.Reg, %struct.Reg* %4873, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %4874 to i64*
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4876 = getelementptr inbounds %struct.GPR, %struct.GPR* %4875, i32 0, i32 1
  %4877 = getelementptr inbounds %struct.Reg, %struct.Reg* %4876, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %4877 to i64*
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4879 = getelementptr inbounds %struct.GPR, %struct.GPR* %4878, i32 0, i32 5
  %4880 = getelementptr inbounds %struct.Reg, %struct.Reg* %4879, i32 0, i32 0
  %RCX.i813 = bitcast %union.anon* %4880 to i64*
  %4881 = load i64, i64* %RAX.i812
  %4882 = add i64 %4881, 48
  %4883 = load i64, i64* %PC.i811
  %4884 = add i64 %4883, 3
  store i64 %4884, i64* %PC.i811
  %4885 = inttoptr i64 %4882 to i32*
  %4886 = load i32, i32* %4885
  %4887 = zext i32 %4886 to i64
  store i64 %4887, i64* %RCX.i813, align 8
  store %struct.Memory* %loadMem_4a96a6, %struct.Memory** %MEMORY
  %loadMem_4a96a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 33
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %4890 to i64*
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4892 = getelementptr inbounds %struct.GPR, %struct.GPR* %4891, i32 0, i32 5
  %4893 = getelementptr inbounds %struct.Reg, %struct.Reg* %4892, i32 0, i32 0
  %RCX.i810 = bitcast %union.anon* %4893 to i64*
  %4894 = load i64, i64* %RCX.i810
  %4895 = load i64, i64* %PC.i809
  %4896 = add i64 %4895, 3
  store i64 %4896, i64* %PC.i809
  %4897 = and i64 2, %4894
  %4898 = trunc i64 %4897 to i32
  store i64 %4897, i64* %RCX.i810, align 8
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4899, align 1
  %4900 = and i32 %4898, 255
  %4901 = call i32 @llvm.ctpop.i32(i32 %4900)
  %4902 = trunc i32 %4901 to i8
  %4903 = and i8 %4902, 1
  %4904 = xor i8 %4903, 1
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4904, i8* %4905, align 1
  %4906 = icmp eq i32 %4898, 0
  %4907 = zext i1 %4906 to i8
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4907, i8* %4908, align 1
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4909, align 1
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4910, align 1
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4911, align 1
  store %struct.Memory* %loadMem_4a96a9, %struct.Memory** %MEMORY
  %loadMem_4a96ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 33
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %4914 to i64*
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4916 = getelementptr inbounds %struct.GPR, %struct.GPR* %4915, i32 0, i32 5
  %4917 = getelementptr inbounds %struct.Reg, %struct.Reg* %4916, i32 0, i32 0
  %ECX.i808 = bitcast %union.anon* %4917 to i32*
  %4918 = load i32, i32* %ECX.i808
  %4919 = zext i32 %4918 to i64
  %4920 = load i64, i64* %PC.i807
  %4921 = add i64 %4920, 3
  store i64 %4921, i64* %PC.i807
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4922, align 1
  %4923 = and i32 %4918, 255
  %4924 = call i32 @llvm.ctpop.i32(i32 %4923)
  %4925 = trunc i32 %4924 to i8
  %4926 = and i8 %4925, 1
  %4927 = xor i8 %4926, 1
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4927, i8* %4928, align 1
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4929, align 1
  %4930 = icmp eq i32 %4918, 0
  %4931 = zext i1 %4930 to i8
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4931, i8* %4932, align 1
  %4933 = lshr i32 %4918, 31
  %4934 = trunc i32 %4933 to i8
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4934, i8* %4935, align 1
  %4936 = lshr i32 %4918, 31
  %4937 = xor i32 %4933, %4936
  %4938 = add i32 %4937, %4936
  %4939 = icmp eq i32 %4938, 2
  %4940 = zext i1 %4939 to i8
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4940, i8* %4941, align 1
  store %struct.Memory* %loadMem_4a96ac, %struct.Memory** %MEMORY
  %loadMem_4a96af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 33
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %4944 to i64*
  %4945 = load i64, i64* %PC.i806
  %4946 = add i64 %4945, 160
  %4947 = load i64, i64* %PC.i806
  %4948 = add i64 %4947, 6
  %4949 = load i64, i64* %PC.i806
  %4950 = add i64 %4949, 6
  store i64 %4950, i64* %PC.i806
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4952 = load i8, i8* %4951, align 1
  %4953 = icmp eq i8 %4952, 0
  %4954 = zext i1 %4953 to i8
  store i8 %4954, i8* %BRANCH_TAKEN, align 1
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4956 = select i1 %4953, i64 %4946, i64 %4948
  store i64 %4956, i64* %4955, align 8
  store %struct.Memory* %loadMem_4a96af, %struct.Memory** %MEMORY
  %loadBr_4a96af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a96af = icmp eq i8 %loadBr_4a96af, 1
  br i1 %cmpBr_4a96af, label %block_.L_4a974f, label %block_4a96b5

block_4a96b5:                                     ; preds = %block_.L_4a96a2
  %loadMem_4a96b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 33
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %4959 to i64*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 1
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 15
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %RBP.i805 = bitcast %union.anon* %4965 to i64*
  %4966 = load i64, i64* %RBP.i805
  %4967 = sub i64 %4966, 7124
  %4968 = load i64, i64* %PC.i803
  %4969 = add i64 %4968, 6
  store i64 %4969, i64* %PC.i803
  %4970 = inttoptr i64 %4967 to i32*
  %4971 = load i32, i32* %4970
  %4972 = zext i32 %4971 to i64
  store i64 %4972, i64* %RAX.i804, align 8
  store %struct.Memory* %loadMem_4a96b5, %struct.Memory** %MEMORY
  %loadMem_4a96bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 33
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %4975 to i64*
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4977 = getelementptr inbounds %struct.GPR, %struct.GPR* %4976, i32 0, i32 5
  %4978 = getelementptr inbounds %struct.Reg, %struct.Reg* %4977, i32 0, i32 0
  %RCX.i801 = bitcast %union.anon* %4978 to i64*
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 15
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %4981 to i64*
  %4982 = load i64, i64* %RBP.i802
  %4983 = sub i64 %4982, 32
  %4984 = load i64, i64* %PC.i800
  %4985 = add i64 %4984, 4
  store i64 %4985, i64* %PC.i800
  %4986 = inttoptr i64 %4983 to i64*
  %4987 = load i64, i64* %4986
  store i64 %4987, i64* %RCX.i801, align 8
  store %struct.Memory* %loadMem_4a96bb, %struct.Memory** %MEMORY
  %loadMem_4a96bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 33
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %4990 to i64*
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 1
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %4993 to i64*
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4995 = getelementptr inbounds %struct.GPR, %struct.GPR* %4994, i32 0, i32 5
  %4996 = getelementptr inbounds %struct.Reg, %struct.Reg* %4995, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %4996 to i64*
  %4997 = load i64, i64* %RAX.i798
  %4998 = load i64, i64* %RCX.i799
  %4999 = add i64 %4998, 32
  %5000 = load i64, i64* %PC.i797
  %5001 = add i64 %5000, 3
  store i64 %5001, i64* %PC.i797
  %5002 = trunc i64 %4997 to i32
  %5003 = inttoptr i64 %4999 to i32*
  %5004 = load i32, i32* %5003
  %5005 = add i32 %5004, %5002
  %5006 = zext i32 %5005 to i64
  store i64 %5006, i64* %RAX.i798, align 8
  %5007 = icmp ult i32 %5005, %5002
  %5008 = icmp ult i32 %5005, %5004
  %5009 = or i1 %5007, %5008
  %5010 = zext i1 %5009 to i8
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5010, i8* %5011, align 1
  %5012 = and i32 %5005, 255
  %5013 = call i32 @llvm.ctpop.i32(i32 %5012)
  %5014 = trunc i32 %5013 to i8
  %5015 = and i8 %5014, 1
  %5016 = xor i8 %5015, 1
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5016, i8* %5017, align 1
  %5018 = xor i32 %5004, %5002
  %5019 = xor i32 %5018, %5005
  %5020 = lshr i32 %5019, 4
  %5021 = trunc i32 %5020 to i8
  %5022 = and i8 %5021, 1
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5022, i8* %5023, align 1
  %5024 = icmp eq i32 %5005, 0
  %5025 = zext i1 %5024 to i8
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5025, i8* %5026, align 1
  %5027 = lshr i32 %5005, 31
  %5028 = trunc i32 %5027 to i8
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5028, i8* %5029, align 1
  %5030 = lshr i32 %5002, 31
  %5031 = lshr i32 %5004, 31
  %5032 = xor i32 %5027, %5030
  %5033 = xor i32 %5027, %5031
  %5034 = add i32 %5032, %5033
  %5035 = icmp eq i32 %5034, 2
  %5036 = zext i1 %5035 to i8
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5036, i8* %5037, align 1
  store %struct.Memory* %loadMem_4a96bf, %struct.Memory** %MEMORY
  %loadMem_4a96c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 33
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %5040 to i64*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5042 = getelementptr inbounds %struct.GPR, %struct.GPR* %5041, i32 0, i32 1
  %5043 = getelementptr inbounds %struct.Reg, %struct.Reg* %5042, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %5043 to i64*
  %5044 = load i64, i64* %RAX.i796
  %5045 = load i64, i64* %PC.i795
  %5046 = add i64 %5045, 3
  store i64 %5046, i64* %PC.i795
  %5047 = trunc i64 %5044 to i32
  %5048 = add i32 1, %5047
  %5049 = zext i32 %5048 to i64
  store i64 %5049, i64* %RAX.i796, align 8
  %5050 = icmp ult i32 %5048, %5047
  %5051 = icmp ult i32 %5048, 1
  %5052 = or i1 %5050, %5051
  %5053 = zext i1 %5052 to i8
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5053, i8* %5054, align 1
  %5055 = and i32 %5048, 255
  %5056 = call i32 @llvm.ctpop.i32(i32 %5055)
  %5057 = trunc i32 %5056 to i8
  %5058 = and i8 %5057, 1
  %5059 = xor i8 %5058, 1
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5059, i8* %5060, align 1
  %5061 = xor i64 1, %5044
  %5062 = trunc i64 %5061 to i32
  %5063 = xor i32 %5062, %5048
  %5064 = lshr i32 %5063, 4
  %5065 = trunc i32 %5064 to i8
  %5066 = and i8 %5065, 1
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5066, i8* %5067, align 1
  %5068 = icmp eq i32 %5048, 0
  %5069 = zext i1 %5068 to i8
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5069, i8* %5070, align 1
  %5071 = lshr i32 %5048, 31
  %5072 = trunc i32 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5072, i8* %5073, align 1
  %5074 = lshr i32 %5047, 31
  %5075 = xor i32 %5071, %5074
  %5076 = add i32 %5075, %5071
  %5077 = icmp eq i32 %5076, 2
  %5078 = zext i1 %5077 to i8
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5078, i8* %5079, align 1
  store %struct.Memory* %loadMem_4a96c2, %struct.Memory** %MEMORY
  %loadMem_4a96c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5081 = getelementptr inbounds %struct.GPR, %struct.GPR* %5080, i32 0, i32 33
  %5082 = getelementptr inbounds %struct.Reg, %struct.Reg* %5081, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %5082 to i64*
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 1
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %EAX.i793 = bitcast %union.anon* %5085 to i32*
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 15
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %5088 to i64*
  %5089 = load i64, i64* %RBP.i794
  %5090 = sub i64 %5089, 7144
  %5091 = load i32, i32* %EAX.i793
  %5092 = zext i32 %5091 to i64
  %5093 = load i64, i64* %PC.i792
  %5094 = add i64 %5093, 6
  store i64 %5094, i64* %PC.i792
  %5095 = inttoptr i64 %5090 to i32*
  store i32 %5091, i32* %5095
  store %struct.Memory* %loadMem_4a96c5, %struct.Memory** %MEMORY
  br label %block_.L_4a96cb

block_.L_4a96cb:                                  ; preds = %block_.L_4a9736, %block_4a96b5
  %loadMem_4a96cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 33
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %5098 to i64*
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 15
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %5101 to i64*
  %5102 = load i64, i64* %RBP.i791
  %5103 = sub i64 %5102, 7144
  %5104 = load i64, i64* %PC.i790
  %5105 = add i64 %5104, 7
  store i64 %5105, i64* %PC.i790
  %5106 = inttoptr i64 %5103 to i32*
  %5107 = load i32, i32* %5106
  %5108 = sub i32 %5107, 63
  %5109 = icmp ult i32 %5107, 63
  %5110 = zext i1 %5109 to i8
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5110, i8* %5111, align 1
  %5112 = and i32 %5108, 255
  %5113 = call i32 @llvm.ctpop.i32(i32 %5112)
  %5114 = trunc i32 %5113 to i8
  %5115 = and i8 %5114, 1
  %5116 = xor i8 %5115, 1
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5116, i8* %5117, align 1
  %5118 = xor i32 %5107, 63
  %5119 = xor i32 %5118, %5108
  %5120 = lshr i32 %5119, 4
  %5121 = trunc i32 %5120 to i8
  %5122 = and i8 %5121, 1
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5122, i8* %5123, align 1
  %5124 = icmp eq i32 %5108, 0
  %5125 = zext i1 %5124 to i8
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5125, i8* %5126, align 1
  %5127 = lshr i32 %5108, 31
  %5128 = trunc i32 %5127 to i8
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5128, i8* %5129, align 1
  %5130 = lshr i32 %5107, 31
  %5131 = xor i32 %5127, %5130
  %5132 = add i32 %5131, %5130
  %5133 = icmp eq i32 %5132, 2
  %5134 = zext i1 %5133 to i8
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5134, i8* %5135, align 1
  store %struct.Memory* %loadMem_4a96cb, %struct.Memory** %MEMORY
  %loadMem_4a96d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 33
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %5138 to i64*
  %5139 = load i64, i64* %PC.i789
  %5140 = add i64 %5139, 120
  %5141 = load i64, i64* %PC.i789
  %5142 = add i64 %5141, 6
  %5143 = load i64, i64* %PC.i789
  %5144 = add i64 %5143, 6
  store i64 %5144, i64* %PC.i789
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5146 = load i8, i8* %5145, align 1
  store i8 %5146, i8* %BRANCH_TAKEN, align 1
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5148 = icmp ne i8 %5146, 0
  %5149 = select i1 %5148, i64 %5140, i64 %5142
  store i64 %5149, i64* %5147, align 8
  store %struct.Memory* %loadMem_4a96d2, %struct.Memory** %MEMORY
  %loadBr_4a96d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a96d2 = icmp eq i8 %loadBr_4a96d2, 1
  br i1 %cmpBr_4a96d2, label %block_.L_4a974a, label %block_4a96d8

block_4a96d8:                                     ; preds = %block_.L_4a96cb
  %loadMem_4a96d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 33
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 15
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %RBP.i788
  %5157 = sub i64 %5156, 7148
  %5158 = load i64, i64* %PC.i787
  %5159 = add i64 %5158, 10
  store i64 %5159, i64* %PC.i787
  %5160 = inttoptr i64 %5157 to i32*
  store i32 0, i32* %5160
  store %struct.Memory* %loadMem_4a96d8, %struct.Memory** %MEMORY
  br label %block_.L_4a96e2

block_.L_4a96e2:                                  ; preds = %block_4a96fd, %block_4a96d8
  %loadMem_4a96e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5162 = getelementptr inbounds %struct.GPR, %struct.GPR* %5161, i32 0, i32 33
  %5163 = getelementptr inbounds %struct.Reg, %struct.Reg* %5162, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %5163 to i64*
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5165 = getelementptr inbounds %struct.GPR, %struct.GPR* %5164, i32 0, i32 1
  %5166 = getelementptr inbounds %struct.Reg, %struct.Reg* %5165, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %5166 to i64*
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 15
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %5169 to i64*
  %5170 = load i64, i64* %RBP.i786
  %5171 = sub i64 %5170, 7148
  %5172 = load i64, i64* %PC.i784
  %5173 = add i64 %5172, 6
  store i64 %5173, i64* %PC.i784
  %5174 = inttoptr i64 %5171 to i32*
  %5175 = load i32, i32* %5174
  %5176 = zext i32 %5175 to i64
  store i64 %5176, i64* %RAX.i785, align 8
  store %struct.Memory* %loadMem_4a96e2, %struct.Memory** %MEMORY
  %loadMem_4a96e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 33
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 5
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RCX.i782 = bitcast %union.anon* %5182 to i64*
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 15
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %5185 to i64*
  %5186 = load i64, i64* %RBP.i783
  %5187 = sub i64 %5186, 7128
  %5188 = load i64, i64* %PC.i781
  %5189 = add i64 %5188, 6
  store i64 %5189, i64* %PC.i781
  %5190 = inttoptr i64 %5187 to i32*
  %5191 = load i32, i32* %5190
  %5192 = zext i32 %5191 to i64
  store i64 %5192, i64* %RCX.i782, align 8
  store %struct.Memory* %loadMem_4a96e8, %struct.Memory** %MEMORY
  %loadMem_4a96ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5194 = getelementptr inbounds %struct.GPR, %struct.GPR* %5193, i32 0, i32 33
  %5195 = getelementptr inbounds %struct.Reg, %struct.Reg* %5194, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %5195 to i64*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 7
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %RDX.i779 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 15
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %5201 to i64*
  %5202 = load i64, i64* %RBP.i780
  %5203 = sub i64 %5202, 32
  %5204 = load i64, i64* %PC.i778
  %5205 = add i64 %5204, 4
  store i64 %5205, i64* %PC.i778
  %5206 = inttoptr i64 %5203 to i64*
  %5207 = load i64, i64* %5206
  store i64 %5207, i64* %RDX.i779, align 8
  store %struct.Memory* %loadMem_4a96ee, %struct.Memory** %MEMORY
  %loadMem_4a96f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5209 = getelementptr inbounds %struct.GPR, %struct.GPR* %5208, i32 0, i32 33
  %5210 = getelementptr inbounds %struct.Reg, %struct.Reg* %5209, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %5210 to i64*
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5212 = getelementptr inbounds %struct.GPR, %struct.GPR* %5211, i32 0, i32 5
  %5213 = getelementptr inbounds %struct.Reg, %struct.Reg* %5212, i32 0, i32 0
  %RCX.i776 = bitcast %union.anon* %5213 to i64*
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5215 = getelementptr inbounds %struct.GPR, %struct.GPR* %5214, i32 0, i32 7
  %5216 = getelementptr inbounds %struct.Reg, %struct.Reg* %5215, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %5216 to i64*
  %5217 = load i64, i64* %RCX.i776
  %5218 = load i64, i64* %RDX.i777
  %5219 = add i64 %5218, 28
  %5220 = load i64, i64* %PC.i775
  %5221 = add i64 %5220, 3
  store i64 %5221, i64* %PC.i775
  %5222 = trunc i64 %5217 to i32
  %5223 = inttoptr i64 %5219 to i32*
  %5224 = load i32, i32* %5223
  %5225 = add i32 %5224, %5222
  %5226 = zext i32 %5225 to i64
  store i64 %5226, i64* %RCX.i776, align 8
  %5227 = icmp ult i32 %5225, %5222
  %5228 = icmp ult i32 %5225, %5224
  %5229 = or i1 %5227, %5228
  %5230 = zext i1 %5229 to i8
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5230, i8* %5231, align 1
  %5232 = and i32 %5225, 255
  %5233 = call i32 @llvm.ctpop.i32(i32 %5232)
  %5234 = trunc i32 %5233 to i8
  %5235 = and i8 %5234, 1
  %5236 = xor i8 %5235, 1
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5236, i8* %5237, align 1
  %5238 = xor i32 %5224, %5222
  %5239 = xor i32 %5238, %5225
  %5240 = lshr i32 %5239, 4
  %5241 = trunc i32 %5240 to i8
  %5242 = and i8 %5241, 1
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5242, i8* %5243, align 1
  %5244 = icmp eq i32 %5225, 0
  %5245 = zext i1 %5244 to i8
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5245, i8* %5246, align 1
  %5247 = lshr i32 %5225, 31
  %5248 = trunc i32 %5247 to i8
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5248, i8* %5249, align 1
  %5250 = lshr i32 %5222, 31
  %5251 = lshr i32 %5224, 31
  %5252 = xor i32 %5247, %5250
  %5253 = xor i32 %5247, %5251
  %5254 = add i32 %5252, %5253
  %5255 = icmp eq i32 %5254, 2
  %5256 = zext i1 %5255 to i8
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5256, i8* %5257, align 1
  store %struct.Memory* %loadMem_4a96f2, %struct.Memory** %MEMORY
  %loadMem_4a96f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 33
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %5260 to i64*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 1
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %EAX.i773 = bitcast %union.anon* %5263 to i32*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 5
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %ECX.i774 = bitcast %union.anon* %5266 to i32*
  %5267 = load i32, i32* %EAX.i773
  %5268 = zext i32 %5267 to i64
  %5269 = load i32, i32* %ECX.i774
  %5270 = zext i32 %5269 to i64
  %5271 = load i64, i64* %PC.i772
  %5272 = add i64 %5271, 2
  store i64 %5272, i64* %PC.i772
  %5273 = sub i32 %5267, %5269
  %5274 = icmp ult i32 %5267, %5269
  %5275 = zext i1 %5274 to i8
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5275, i8* %5276, align 1
  %5277 = and i32 %5273, 255
  %5278 = call i32 @llvm.ctpop.i32(i32 %5277)
  %5279 = trunc i32 %5278 to i8
  %5280 = and i8 %5279, 1
  %5281 = xor i8 %5280, 1
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5281, i8* %5282, align 1
  %5283 = xor i64 %5270, %5268
  %5284 = trunc i64 %5283 to i32
  %5285 = xor i32 %5284, %5273
  %5286 = lshr i32 %5285, 4
  %5287 = trunc i32 %5286 to i8
  %5288 = and i8 %5287, 1
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5288, i8* %5289, align 1
  %5290 = icmp eq i32 %5273, 0
  %5291 = zext i1 %5290 to i8
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5291, i8* %5292, align 1
  %5293 = lshr i32 %5273, 31
  %5294 = trunc i32 %5293 to i8
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5294, i8* %5295, align 1
  %5296 = lshr i32 %5267, 31
  %5297 = lshr i32 %5269, 31
  %5298 = xor i32 %5297, %5296
  %5299 = xor i32 %5293, %5296
  %5300 = add i32 %5299, %5298
  %5301 = icmp eq i32 %5300, 2
  %5302 = zext i1 %5301 to i8
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5302, i8* %5303, align 1
  store %struct.Memory* %loadMem_4a96f5, %struct.Memory** %MEMORY
  %loadMem_4a96f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5305 = getelementptr inbounds %struct.GPR, %struct.GPR* %5304, i32 0, i32 33
  %5306 = getelementptr inbounds %struct.Reg, %struct.Reg* %5305, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %5306 to i64*
  %5307 = load i64, i64* %PC.i771
  %5308 = add i64 %5307, 58
  %5309 = load i64, i64* %PC.i771
  %5310 = add i64 %5309, 6
  %5311 = load i64, i64* %PC.i771
  %5312 = add i64 %5311, 6
  store i64 %5312, i64* %PC.i771
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5314 = load i8, i8* %5313, align 1
  store i8 %5314, i8* %BRANCH_TAKEN, align 1
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5316 = icmp ne i8 %5314, 0
  %5317 = select i1 %5316, i64 %5308, i64 %5310
  store i64 %5317, i64* %5315, align 8
  store %struct.Memory* %loadMem_4a96f7, %struct.Memory** %MEMORY
  %loadBr_4a96f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a96f7 = icmp eq i8 %loadBr_4a96f7, 1
  br i1 %cmpBr_4a96f7, label %block_.L_4a9731, label %block_4a96fd

block_4a96fd:                                     ; preds = %block_.L_4a96e2
  %loadMem_4a96fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 1
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %5323 to i64*
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5325 = getelementptr inbounds %struct.GPR, %struct.GPR* %5324, i32 0, i32 15
  %5326 = getelementptr inbounds %struct.Reg, %struct.Reg* %5325, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %5326 to i64*
  %5327 = load i64, i64* %RBP.i770
  %5328 = sub i64 %5327, 7120
  %5329 = load i64, i64* %PC.i768
  %5330 = add i64 %5329, 7
  store i64 %5330, i64* %PC.i768
  store i64 %5328, i64* %RAX.i769, align 8
  store %struct.Memory* %loadMem_4a96fd, %struct.Memory** %MEMORY
  %loadMem_4a9704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 33
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %5333 to i64*
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 5
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %RCX.i766 = bitcast %union.anon* %5336 to i64*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 15
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %5339 to i64*
  %5340 = load i64, i64* %RBP.i767
  %5341 = sub i64 %5340, 7144
  %5342 = load i64, i64* %PC.i765
  %5343 = add i64 %5342, 7
  store i64 %5343, i64* %PC.i765
  %5344 = inttoptr i64 %5341 to i32*
  %5345 = load i32, i32* %5344
  %5346 = sext i32 %5345 to i64
  store i64 %5346, i64* %RCX.i766, align 8
  store %struct.Memory* %loadMem_4a9704, %struct.Memory** %MEMORY
  %loadMem_4a970b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 5
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RCX.i764 = bitcast %union.anon* %5352 to i64*
  %5353 = load i64, i64* %RCX.i764
  %5354 = load i64, i64* %PC.i763
  %5355 = add i64 %5354, 4
  store i64 %5355, i64* %PC.i763
  %5356 = sext i64 %5353 to i128
  %5357 = and i128 %5356, -18446744073709551616
  %5358 = zext i64 %5353 to i128
  %5359 = or i128 %5357, %5358
  %5360 = mul i128 84, %5359
  %5361 = trunc i128 %5360 to i64
  store i64 %5361, i64* %RCX.i764, align 8
  %5362 = sext i64 %5361 to i128
  %5363 = icmp ne i128 %5362, %5360
  %5364 = zext i1 %5363 to i8
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5364, i8* %5365, align 1
  %5366 = trunc i128 %5360 to i32
  %5367 = and i32 %5366, 255
  %5368 = call i32 @llvm.ctpop.i32(i32 %5367)
  %5369 = trunc i32 %5368 to i8
  %5370 = and i8 %5369, 1
  %5371 = xor i8 %5370, 1
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5371, i8* %5372, align 1
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5373, align 1
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5374, align 1
  %5375 = lshr i64 %5361, 63
  %5376 = trunc i64 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5376, i8* %5377, align 1
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5364, i8* %5378, align 1
  store %struct.Memory* %loadMem_4a970b, %struct.Memory** %MEMORY
  %loadMem_4a970f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 33
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %5381 to i64*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 1
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %5384 to i64*
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 5
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %RCX.i762 = bitcast %union.anon* %5387 to i64*
  %5388 = load i64, i64* %RAX.i761
  %5389 = load i64, i64* %RCX.i762
  %5390 = load i64, i64* %PC.i760
  %5391 = add i64 %5390, 3
  store i64 %5391, i64* %PC.i760
  %5392 = add i64 %5389, %5388
  store i64 %5392, i64* %RAX.i761, align 8
  %5393 = icmp ult i64 %5392, %5388
  %5394 = icmp ult i64 %5392, %5389
  %5395 = or i1 %5393, %5394
  %5396 = zext i1 %5395 to i8
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5396, i8* %5397, align 1
  %5398 = trunc i64 %5392 to i32
  %5399 = and i32 %5398, 255
  %5400 = call i32 @llvm.ctpop.i32(i32 %5399)
  %5401 = trunc i32 %5400 to i8
  %5402 = and i8 %5401, 1
  %5403 = xor i8 %5402, 1
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5403, i8* %5404, align 1
  %5405 = xor i64 %5389, %5388
  %5406 = xor i64 %5405, %5392
  %5407 = lshr i64 %5406, 4
  %5408 = trunc i64 %5407 to i8
  %5409 = and i8 %5408, 1
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5409, i8* %5410, align 1
  %5411 = icmp eq i64 %5392, 0
  %5412 = zext i1 %5411 to i8
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5412, i8* %5413, align 1
  %5414 = lshr i64 %5392, 63
  %5415 = trunc i64 %5414 to i8
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5415, i8* %5416, align 1
  %5417 = lshr i64 %5388, 63
  %5418 = lshr i64 %5389, 63
  %5419 = xor i64 %5414, %5417
  %5420 = xor i64 %5414, %5418
  %5421 = add i64 %5419, %5420
  %5422 = icmp eq i64 %5421, 2
  %5423 = zext i1 %5422 to i8
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5423, i8* %5424, align 1
  store %struct.Memory* %loadMem_4a970f, %struct.Memory** %MEMORY
  %loadMem_4a9712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 33
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %5427 to i64*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5429 = getelementptr inbounds %struct.GPR, %struct.GPR* %5428, i32 0, i32 5
  %5430 = getelementptr inbounds %struct.Reg, %struct.Reg* %5429, i32 0, i32 0
  %RCX.i758 = bitcast %union.anon* %5430 to i64*
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5432 = getelementptr inbounds %struct.GPR, %struct.GPR* %5431, i32 0, i32 15
  %5433 = getelementptr inbounds %struct.Reg, %struct.Reg* %5432, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %5433 to i64*
  %5434 = load i64, i64* %RBP.i759
  %5435 = sub i64 %5434, 7148
  %5436 = load i64, i64* %PC.i757
  %5437 = add i64 %5436, 7
  store i64 %5437, i64* %PC.i757
  %5438 = inttoptr i64 %5435 to i32*
  %5439 = load i32, i32* %5438
  %5440 = sext i32 %5439 to i64
  store i64 %5440, i64* %RCX.i758, align 8
  store %struct.Memory* %loadMem_4a9712, %struct.Memory** %MEMORY
  %loadMem_4a9719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5442 = getelementptr inbounds %struct.GPR, %struct.GPR* %5441, i32 0, i32 33
  %5443 = getelementptr inbounds %struct.Reg, %struct.Reg* %5442, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %5443 to i64*
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5445 = getelementptr inbounds %struct.GPR, %struct.GPR* %5444, i32 0, i32 1
  %5446 = getelementptr inbounds %struct.Reg, %struct.Reg* %5445, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %5446 to i64*
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5448 = getelementptr inbounds %struct.GPR, %struct.GPR* %5447, i32 0, i32 5
  %5449 = getelementptr inbounds %struct.Reg, %struct.Reg* %5448, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %5449 to i64*
  %5450 = load i64, i64* %RAX.i755
  %5451 = load i64, i64* %RCX.i756
  %5452 = add i64 %5451, %5450
  %5453 = load i64, i64* %PC.i754
  %5454 = add i64 %5453, 4
  store i64 %5454, i64* %PC.i754
  %5455 = inttoptr i64 %5452 to i8*
  store i8 124, i8* %5455
  store %struct.Memory* %loadMem_4a9719, %struct.Memory** %MEMORY
  %loadMem_4a971d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 33
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %5458 to i64*
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 1
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %5461 to i64*
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5463 = getelementptr inbounds %struct.GPR, %struct.GPR* %5462, i32 0, i32 15
  %5464 = getelementptr inbounds %struct.Reg, %struct.Reg* %5463, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %5464 to i64*
  %5465 = load i64, i64* %RBP.i753
  %5466 = sub i64 %5465, 7148
  %5467 = load i64, i64* %PC.i751
  %5468 = add i64 %5467, 6
  store i64 %5468, i64* %PC.i751
  %5469 = inttoptr i64 %5466 to i32*
  %5470 = load i32, i32* %5469
  %5471 = zext i32 %5470 to i64
  store i64 %5471, i64* %RAX.i752, align 8
  store %struct.Memory* %loadMem_4a971d, %struct.Memory** %MEMORY
  %loadMem_4a9723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 33
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %5474 to i64*
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 1
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %RAX.i750 = bitcast %union.anon* %5477 to i64*
  %5478 = load i64, i64* %RAX.i750
  %5479 = load i64, i64* %PC.i749
  %5480 = add i64 %5479, 3
  store i64 %5480, i64* %PC.i749
  %5481 = trunc i64 %5478 to i32
  %5482 = add i32 1, %5481
  %5483 = zext i32 %5482 to i64
  store i64 %5483, i64* %RAX.i750, align 8
  %5484 = icmp ult i32 %5482, %5481
  %5485 = icmp ult i32 %5482, 1
  %5486 = or i1 %5484, %5485
  %5487 = zext i1 %5486 to i8
  %5488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5487, i8* %5488, align 1
  %5489 = and i32 %5482, 255
  %5490 = call i32 @llvm.ctpop.i32(i32 %5489)
  %5491 = trunc i32 %5490 to i8
  %5492 = and i8 %5491, 1
  %5493 = xor i8 %5492, 1
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5493, i8* %5494, align 1
  %5495 = xor i64 1, %5478
  %5496 = trunc i64 %5495 to i32
  %5497 = xor i32 %5496, %5482
  %5498 = lshr i32 %5497, 4
  %5499 = trunc i32 %5498 to i8
  %5500 = and i8 %5499, 1
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5500, i8* %5501, align 1
  %5502 = icmp eq i32 %5482, 0
  %5503 = zext i1 %5502 to i8
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5503, i8* %5504, align 1
  %5505 = lshr i32 %5482, 31
  %5506 = trunc i32 %5505 to i8
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5506, i8* %5507, align 1
  %5508 = lshr i32 %5481, 31
  %5509 = xor i32 %5505, %5508
  %5510 = add i32 %5509, %5505
  %5511 = icmp eq i32 %5510, 2
  %5512 = zext i1 %5511 to i8
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5512, i8* %5513, align 1
  store %struct.Memory* %loadMem_4a9723, %struct.Memory** %MEMORY
  %loadMem_4a9726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5515 = getelementptr inbounds %struct.GPR, %struct.GPR* %5514, i32 0, i32 33
  %5516 = getelementptr inbounds %struct.Reg, %struct.Reg* %5515, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %5516 to i64*
  %5517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5518 = getelementptr inbounds %struct.GPR, %struct.GPR* %5517, i32 0, i32 1
  %5519 = getelementptr inbounds %struct.Reg, %struct.Reg* %5518, i32 0, i32 0
  %EAX.i747 = bitcast %union.anon* %5519 to i32*
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 15
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %5522 to i64*
  %5523 = load i64, i64* %RBP.i748
  %5524 = sub i64 %5523, 7148
  %5525 = load i32, i32* %EAX.i747
  %5526 = zext i32 %5525 to i64
  %5527 = load i64, i64* %PC.i746
  %5528 = add i64 %5527, 6
  store i64 %5528, i64* %PC.i746
  %5529 = inttoptr i64 %5524 to i32*
  store i32 %5525, i32* %5529
  store %struct.Memory* %loadMem_4a9726, %struct.Memory** %MEMORY
  %loadMem_4a972c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5531 = getelementptr inbounds %struct.GPR, %struct.GPR* %5530, i32 0, i32 33
  %5532 = getelementptr inbounds %struct.Reg, %struct.Reg* %5531, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %5532 to i64*
  %5533 = load i64, i64* %PC.i745
  %5534 = add i64 %5533, -74
  %5535 = load i64, i64* %PC.i745
  %5536 = add i64 %5535, 5
  store i64 %5536, i64* %PC.i745
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5534, i64* %5537, align 8
  store %struct.Memory* %loadMem_4a972c, %struct.Memory** %MEMORY
  br label %block_.L_4a96e2

block_.L_4a9731:                                  ; preds = %block_.L_4a96e2
  %loadMem_4a9731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 33
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %PC.i744
  %5542 = add i64 %5541, 5
  %5543 = load i64, i64* %PC.i744
  %5544 = add i64 %5543, 5
  store i64 %5544, i64* %PC.i744
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5542, i64* %5545, align 8
  store %struct.Memory* %loadMem_4a9731, %struct.Memory** %MEMORY
  br label %block_.L_4a9736

block_.L_4a9736:                                  ; preds = %block_.L_4a9731
  %loadMem_4a9736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 1
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %RAX.i742 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i743
  %5556 = sub i64 %5555, 7144
  %5557 = load i64, i64* %PC.i741
  %5558 = add i64 %5557, 6
  store i64 %5558, i64* %PC.i741
  %5559 = inttoptr i64 %5556 to i32*
  %5560 = load i32, i32* %5559
  %5561 = zext i32 %5560 to i64
  store i64 %5561, i64* %RAX.i742, align 8
  store %struct.Memory* %loadMem_4a9736, %struct.Memory** %MEMORY
  %loadMem_4a973c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 1
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %5567 to i64*
  %5568 = load i64, i64* %RAX.i740
  %5569 = load i64, i64* %PC.i739
  %5570 = add i64 %5569, 3
  store i64 %5570, i64* %PC.i739
  %5571 = trunc i64 %5568 to i32
  %5572 = add i32 1, %5571
  %5573 = zext i32 %5572 to i64
  store i64 %5573, i64* %RAX.i740, align 8
  %5574 = icmp ult i32 %5572, %5571
  %5575 = icmp ult i32 %5572, 1
  %5576 = or i1 %5574, %5575
  %5577 = zext i1 %5576 to i8
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5577, i8* %5578, align 1
  %5579 = and i32 %5572, 255
  %5580 = call i32 @llvm.ctpop.i32(i32 %5579)
  %5581 = trunc i32 %5580 to i8
  %5582 = and i8 %5581, 1
  %5583 = xor i8 %5582, 1
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5583, i8* %5584, align 1
  %5585 = xor i64 1, %5568
  %5586 = trunc i64 %5585 to i32
  %5587 = xor i32 %5586, %5572
  %5588 = lshr i32 %5587, 4
  %5589 = trunc i32 %5588 to i8
  %5590 = and i8 %5589, 1
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5590, i8* %5591, align 1
  %5592 = icmp eq i32 %5572, 0
  %5593 = zext i1 %5592 to i8
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5593, i8* %5594, align 1
  %5595 = lshr i32 %5572, 31
  %5596 = trunc i32 %5595 to i8
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5596, i8* %5597, align 1
  %5598 = lshr i32 %5571, 31
  %5599 = xor i32 %5595, %5598
  %5600 = add i32 %5599, %5595
  %5601 = icmp eq i32 %5600, 2
  %5602 = zext i1 %5601 to i8
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5602, i8* %5603, align 1
  store %struct.Memory* %loadMem_4a973c, %struct.Memory** %MEMORY
  %loadMem_4a973f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5605 = getelementptr inbounds %struct.GPR, %struct.GPR* %5604, i32 0, i32 33
  %5606 = getelementptr inbounds %struct.Reg, %struct.Reg* %5605, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %5606 to i64*
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 1
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %EAX.i737 = bitcast %union.anon* %5609 to i32*
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 15
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %5612 to i64*
  %5613 = load i64, i64* %RBP.i738
  %5614 = sub i64 %5613, 7144
  %5615 = load i32, i32* %EAX.i737
  %5616 = zext i32 %5615 to i64
  %5617 = load i64, i64* %PC.i736
  %5618 = add i64 %5617, 6
  store i64 %5618, i64* %PC.i736
  %5619 = inttoptr i64 %5614 to i32*
  store i32 %5615, i32* %5619
  store %struct.Memory* %loadMem_4a973f, %struct.Memory** %MEMORY
  %loadMem_4a9745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 33
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %5622 to i64*
  %5623 = load i64, i64* %PC.i735
  %5624 = add i64 %5623, -122
  %5625 = load i64, i64* %PC.i735
  %5626 = add i64 %5625, 5
  store i64 %5626, i64* %PC.i735
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5624, i64* %5627, align 8
  store %struct.Memory* %loadMem_4a9745, %struct.Memory** %MEMORY
  br label %block_.L_4a96cb

block_.L_4a974a:                                  ; preds = %block_.L_4a96cb
  %loadMem_4a974a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 33
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %5630 to i64*
  %5631 = load i64, i64* %PC.i734
  %5632 = add i64 %5631, 5
  %5633 = load i64, i64* %PC.i734
  %5634 = add i64 %5633, 5
  store i64 %5634, i64* %PC.i734
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5632, i64* %5635, align 8
  store %struct.Memory* %loadMem_4a974a, %struct.Memory** %MEMORY
  br label %block_.L_4a974f

block_.L_4a974f:                                  ; preds = %block_.L_4a974a, %block_.L_4a96a2
  %loadMem_4a974f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 33
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %5638 to i64*
  %5639 = load i64, i64* %PC.i733
  %5640 = add i64 %5639, 5
  %5641 = load i64, i64* %PC.i733
  %5642 = add i64 %5641, 5
  store i64 %5642, i64* %PC.i733
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5640, i64* %5643, align 8
  store %struct.Memory* %loadMem_4a974f, %struct.Memory** %MEMORY
  br label %block_.L_4a9754

block_.L_4a9754:                                  ; preds = %block_.L_4a974f, %block_.L_4a95f5
  %loadMem_4a9754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 33
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %5646 to i64*
  %5647 = load i64, i64* %PC.i732
  %5648 = add i64 %5647, 8
  store i64 %5648, i64* %PC.i732
  %5649 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %5650 = sub i32 %5649, 4
  %5651 = icmp ult i32 %5649, 4
  %5652 = zext i1 %5651 to i8
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5652, i8* %5653, align 1
  %5654 = and i32 %5650, 255
  %5655 = call i32 @llvm.ctpop.i32(i32 %5654)
  %5656 = trunc i32 %5655 to i8
  %5657 = and i8 %5656, 1
  %5658 = xor i8 %5657, 1
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5658, i8* %5659, align 1
  %5660 = xor i32 %5649, 4
  %5661 = xor i32 %5660, %5650
  %5662 = lshr i32 %5661, 4
  %5663 = trunc i32 %5662 to i8
  %5664 = and i8 %5663, 1
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5664, i8* %5665, align 1
  %5666 = icmp eq i32 %5650, 0
  %5667 = zext i1 %5666 to i8
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5667, i8* %5668, align 1
  %5669 = lshr i32 %5650, 31
  %5670 = trunc i32 %5669 to i8
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5670, i8* %5671, align 1
  %5672 = lshr i32 %5649, 31
  %5673 = xor i32 %5669, %5672
  %5674 = add i32 %5673, %5672
  %5675 = icmp eq i32 %5674, 2
  %5676 = zext i1 %5675 to i8
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5676, i8* %5677, align 1
  store %struct.Memory* %loadMem_4a9754, %struct.Memory** %MEMORY
  %loadMem_4a975c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %5680 to i64*
  %5681 = load i64, i64* %PC.i731
  %5682 = add i64 %5681, 294
  %5683 = load i64, i64* %PC.i731
  %5684 = add i64 %5683, 6
  %5685 = load i64, i64* %PC.i731
  %5686 = add i64 %5685, 6
  store i64 %5686, i64* %PC.i731
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5688 = load i8, i8* %5687, align 1
  %5689 = icmp ne i8 %5688, 0
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5691 = load i8, i8* %5690, align 1
  %5692 = icmp ne i8 %5691, 0
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5694 = load i8, i8* %5693, align 1
  %5695 = icmp ne i8 %5694, 0
  %5696 = xor i1 %5692, %5695
  %5697 = or i1 %5689, %5696
  %5698 = zext i1 %5697 to i8
  store i8 %5698, i8* %BRANCH_TAKEN, align 1
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5700 = select i1 %5697, i64 %5682, i64 %5684
  store i64 %5700, i64* %5699, align 8
  store %struct.Memory* %loadMem_4a975c, %struct.Memory** %MEMORY
  %loadBr_4a975c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a975c = icmp eq i8 %loadBr_4a975c, 1
  br i1 %cmpBr_4a975c, label %block_.L_4a9882, label %block_4a9762

block_4a9762:                                     ; preds = %block_.L_4a9754
  %loadMem_4a9762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 33
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %5703 to i64*
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 15
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %5706 to i64*
  %5707 = load i64, i64* %RBP.i730
  %5708 = sub i64 %5707, 7144
  %5709 = load i64, i64* %PC.i729
  %5710 = add i64 %5709, 10
  store i64 %5710, i64* %PC.i729
  %5711 = inttoptr i64 %5708 to i32*
  store i32 20, i32* %5711
  store %struct.Memory* %loadMem_4a9762, %struct.Memory** %MEMORY
  br label %block_.L_4a976c

block_.L_4a976c:                                  ; preds = %block_.L_4a9830, %block_4a9762
  %loadMem_4a976c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5713 = getelementptr inbounds %struct.GPR, %struct.GPR* %5712, i32 0, i32 33
  %5714 = getelementptr inbounds %struct.Reg, %struct.Reg* %5713, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %5714 to i64*
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5716 = getelementptr inbounds %struct.GPR, %struct.GPR* %5715, i32 0, i32 15
  %5717 = getelementptr inbounds %struct.Reg, %struct.Reg* %5716, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %5717 to i64*
  %5718 = load i64, i64* %RBP.i728
  %5719 = sub i64 %5718, 7144
  %5720 = load i64, i64* %PC.i727
  %5721 = add i64 %5720, 7
  store i64 %5721, i64* %PC.i727
  %5722 = inttoptr i64 %5719 to i32*
  %5723 = load i32, i32* %5722
  %5724 = sub i32 %5723, 64
  %5725 = icmp ult i32 %5723, 64
  %5726 = zext i1 %5725 to i8
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5726, i8* %5727, align 1
  %5728 = and i32 %5724, 255
  %5729 = call i32 @llvm.ctpop.i32(i32 %5728)
  %5730 = trunc i32 %5729 to i8
  %5731 = and i8 %5730, 1
  %5732 = xor i8 %5731, 1
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5732, i8* %5733, align 1
  %5734 = xor i32 %5723, 64
  %5735 = xor i32 %5734, %5724
  %5736 = lshr i32 %5735, 4
  %5737 = trunc i32 %5736 to i8
  %5738 = and i8 %5737, 1
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5738, i8* %5739, align 1
  %5740 = icmp eq i32 %5724, 0
  %5741 = zext i1 %5740 to i8
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5741, i8* %5742, align 1
  %5743 = lshr i32 %5724, 31
  %5744 = trunc i32 %5743 to i8
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5744, i8* %5745, align 1
  %5746 = lshr i32 %5723, 31
  %5747 = xor i32 %5743, %5746
  %5748 = add i32 %5747, %5746
  %5749 = icmp eq i32 %5748, 2
  %5750 = zext i1 %5749 to i8
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5750, i8* %5751, align 1
  store %struct.Memory* %loadMem_4a976c, %struct.Memory** %MEMORY
  %loadMem_4a9773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5753 = getelementptr inbounds %struct.GPR, %struct.GPR* %5752, i32 0, i32 33
  %5754 = getelementptr inbounds %struct.Reg, %struct.Reg* %5753, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %5754 to i64*
  %5755 = load i64, i64* %PC.i726
  %5756 = add i64 %5755, 240
  %5757 = load i64, i64* %PC.i726
  %5758 = add i64 %5757, 6
  %5759 = load i64, i64* %PC.i726
  %5760 = add i64 %5759, 6
  store i64 %5760, i64* %PC.i726
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5762 = load i8, i8* %5761, align 1
  store i8 %5762, i8* %BRANCH_TAKEN, align 1
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5764 = icmp ne i8 %5762, 0
  %5765 = select i1 %5764, i64 %5756, i64 %5758
  store i64 %5765, i64* %5763, align 8
  store %struct.Memory* %loadMem_4a9773, %struct.Memory** %MEMORY
  %loadBr_4a9773 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9773 = icmp eq i8 %loadBr_4a9773, 1
  br i1 %cmpBr_4a9773, label %block_.L_4a9863, label %block_4a9779

block_4a9779:                                     ; preds = %block_.L_4a976c
  %loadMem_4a9779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 15
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %5771 to i64*
  %5772 = load i64, i64* %RBP.i725
  %5773 = sub i64 %5772, 7148
  %5774 = load i64, i64* %PC.i724
  %5775 = add i64 %5774, 10
  store i64 %5775, i64* %PC.i724
  %5776 = inttoptr i64 %5773 to i32*
  store i32 20, i32* %5776
  store %struct.Memory* %loadMem_4a9779, %struct.Memory** %MEMORY
  br label %block_.L_4a9783

block_.L_4a9783:                                  ; preds = %block_.L_4a981c, %block_4a9779
  %loadMem_4a9783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 15
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %RBP.i723
  %5784 = sub i64 %5783, 7148
  %5785 = load i64, i64* %PC.i722
  %5786 = add i64 %5785, 7
  store i64 %5786, i64* %PC.i722
  %5787 = inttoptr i64 %5784 to i32*
  %5788 = load i32, i32* %5787
  %5789 = sub i32 %5788, 64
  %5790 = icmp ult i32 %5788, 64
  %5791 = zext i1 %5790 to i8
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5791, i8* %5792, align 1
  %5793 = and i32 %5789, 255
  %5794 = call i32 @llvm.ctpop.i32(i32 %5793)
  %5795 = trunc i32 %5794 to i8
  %5796 = and i8 %5795, 1
  %5797 = xor i8 %5796, 1
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5797, i8* %5798, align 1
  %5799 = xor i32 %5788, 64
  %5800 = xor i32 %5799, %5789
  %5801 = lshr i32 %5800, 4
  %5802 = trunc i32 %5801 to i8
  %5803 = and i8 %5802, 1
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5803, i8* %5804, align 1
  %5805 = icmp eq i32 %5789, 0
  %5806 = zext i1 %5805 to i8
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5806, i8* %5807, align 1
  %5808 = lshr i32 %5789, 31
  %5809 = trunc i32 %5808 to i8
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5809, i8* %5810, align 1
  %5811 = lshr i32 %5788, 31
  %5812 = xor i32 %5808, %5811
  %5813 = add i32 %5812, %5811
  %5814 = icmp eq i32 %5813, 2
  %5815 = zext i1 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5815, i8* %5816, align 1
  store %struct.Memory* %loadMem_4a9783, %struct.Memory** %MEMORY
  %loadMem_4a978a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %5819 to i64*
  %5820 = load i64, i64* %PC.i721
  %5821 = add i64 %5820, 166
  %5822 = load i64, i64* %PC.i721
  %5823 = add i64 %5822, 6
  %5824 = load i64, i64* %PC.i721
  %5825 = add i64 %5824, 6
  store i64 %5825, i64* %PC.i721
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5827 = load i8, i8* %5826, align 1
  store i8 %5827, i8* %BRANCH_TAKEN, align 1
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5829 = icmp ne i8 %5827, 0
  %5830 = select i1 %5829, i64 %5821, i64 %5823
  store i64 %5830, i64* %5828, align 8
  store %struct.Memory* %loadMem_4a978a, %struct.Memory** %MEMORY
  %loadBr_4a978a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a978a = icmp eq i8 %loadBr_4a978a, 1
  br i1 %cmpBr_4a978a, label %block_.L_4a9830, label %block_4a9790

block_4a9790:                                     ; preds = %block_.L_4a9783
  %loadMem_4a9790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 33
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %5833 to i64*
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5835 = getelementptr inbounds %struct.GPR, %struct.GPR* %5834, i32 0, i32 1
  %5836 = getelementptr inbounds %struct.Reg, %struct.Reg* %5835, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %5836 to i64*
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 15
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %RBP.i720 = bitcast %union.anon* %5839 to i64*
  %5840 = load i64, i64* %RBP.i720
  %5841 = sub i64 %5840, 7144
  %5842 = load i64, i64* %PC.i718
  %5843 = add i64 %5842, 6
  store i64 %5843, i64* %PC.i718
  %5844 = inttoptr i64 %5841 to i32*
  %5845 = load i32, i32* %5844
  %5846 = zext i32 %5845 to i64
  store i64 %5846, i64* %RAX.i719, align 8
  store %struct.Memory* %loadMem_4a9790, %struct.Memory** %MEMORY
  %loadMem_4a9796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 33
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 1
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %EAX.i716 = bitcast %union.anon* %5852 to i32*
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 15
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %5855 to i64*
  %5856 = load i32, i32* %EAX.i716
  %5857 = zext i32 %5856 to i64
  %5858 = load i64, i64* %RBP.i717
  %5859 = sub i64 %5858, 7124
  %5860 = load i64, i64* %PC.i715
  %5861 = add i64 %5860, 6
  store i64 %5861, i64* %PC.i715
  %5862 = inttoptr i64 %5859 to i32*
  %5863 = load i32, i32* %5862
  %5864 = sub i32 %5856, %5863
  %5865 = icmp ult i32 %5856, %5863
  %5866 = zext i1 %5865 to i8
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5866, i8* %5867, align 1
  %5868 = and i32 %5864, 255
  %5869 = call i32 @llvm.ctpop.i32(i32 %5868)
  %5870 = trunc i32 %5869 to i8
  %5871 = and i8 %5870, 1
  %5872 = xor i8 %5871, 1
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5872, i8* %5873, align 1
  %5874 = xor i32 %5863, %5856
  %5875 = xor i32 %5874, %5864
  %5876 = lshr i32 %5875, 4
  %5877 = trunc i32 %5876 to i8
  %5878 = and i8 %5877, 1
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5878, i8* %5879, align 1
  %5880 = icmp eq i32 %5864, 0
  %5881 = zext i1 %5880 to i8
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5881, i8* %5882, align 1
  %5883 = lshr i32 %5864, 31
  %5884 = trunc i32 %5883 to i8
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5884, i8* %5885, align 1
  %5886 = lshr i32 %5856, 31
  %5887 = lshr i32 %5863, 31
  %5888 = xor i32 %5887, %5886
  %5889 = xor i32 %5883, %5886
  %5890 = add i32 %5889, %5888
  %5891 = icmp eq i32 %5890, 2
  %5892 = zext i1 %5891 to i8
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5892, i8* %5893, align 1
  store %struct.Memory* %loadMem_4a9796, %struct.Memory** %MEMORY
  %loadMem_4a979c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 33
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %5896 to i64*
  %5897 = load i64, i64* %PC.i714
  %5898 = add i64 %5897, 60
  %5899 = load i64, i64* %PC.i714
  %5900 = add i64 %5899, 6
  %5901 = load i64, i64* %PC.i714
  %5902 = add i64 %5901, 6
  store i64 %5902, i64* %PC.i714
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5904 = load i8, i8* %5903, align 1
  %5905 = icmp eq i8 %5904, 0
  %5906 = zext i1 %5905 to i8
  store i8 %5906, i8* %BRANCH_TAKEN, align 1
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5908 = select i1 %5905, i64 %5898, i64 %5900
  store i64 %5908, i64* %5907, align 8
  store %struct.Memory* %loadMem_4a979c, %struct.Memory** %MEMORY
  %loadBr_4a979c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a979c = icmp eq i8 %loadBr_4a979c, 1
  br i1 %cmpBr_4a979c, label %block_.L_4a97d8, label %block_4a97a2

block_4a97a2:                                     ; preds = %block_4a9790
  %loadMem_4a97a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5910 = getelementptr inbounds %struct.GPR, %struct.GPR* %5909, i32 0, i32 33
  %5911 = getelementptr inbounds %struct.Reg, %struct.Reg* %5910, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %5911 to i64*
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 1
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %RAX.i712 = bitcast %union.anon* %5914 to i64*
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 15
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %RBP.i713 = bitcast %union.anon* %5917 to i64*
  %5918 = load i64, i64* %RBP.i713
  %5919 = sub i64 %5918, 7148
  %5920 = load i64, i64* %PC.i711
  %5921 = add i64 %5920, 6
  store i64 %5921, i64* %PC.i711
  %5922 = inttoptr i64 %5919 to i32*
  %5923 = load i32, i32* %5922
  %5924 = zext i32 %5923 to i64
  store i64 %5924, i64* %RAX.i712, align 8
  store %struct.Memory* %loadMem_4a97a2, %struct.Memory** %MEMORY
  %loadMem_4a97a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5926 = getelementptr inbounds %struct.GPR, %struct.GPR* %5925, i32 0, i32 33
  %5927 = getelementptr inbounds %struct.Reg, %struct.Reg* %5926, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %5927 to i64*
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 1
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %EAX.i709 = bitcast %union.anon* %5930 to i32*
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 15
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %5933 to i64*
  %5934 = load i32, i32* %EAX.i709
  %5935 = zext i32 %5934 to i64
  %5936 = load i64, i64* %RBP.i710
  %5937 = sub i64 %5936, 7128
  %5938 = load i64, i64* %PC.i708
  %5939 = add i64 %5938, 6
  store i64 %5939, i64* %PC.i708
  %5940 = inttoptr i64 %5937 to i32*
  %5941 = load i32, i32* %5940
  %5942 = sub i32 %5934, %5941
  %5943 = icmp ult i32 %5934, %5941
  %5944 = zext i1 %5943 to i8
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5944, i8* %5945, align 1
  %5946 = and i32 %5942, 255
  %5947 = call i32 @llvm.ctpop.i32(i32 %5946)
  %5948 = trunc i32 %5947 to i8
  %5949 = and i8 %5948, 1
  %5950 = xor i8 %5949, 1
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5950, i8* %5951, align 1
  %5952 = xor i32 %5941, %5934
  %5953 = xor i32 %5952, %5942
  %5954 = lshr i32 %5953, 4
  %5955 = trunc i32 %5954 to i8
  %5956 = and i8 %5955, 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5956, i8* %5957, align 1
  %5958 = icmp eq i32 %5942, 0
  %5959 = zext i1 %5958 to i8
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5959, i8* %5960, align 1
  %5961 = lshr i32 %5942, 31
  %5962 = trunc i32 %5961 to i8
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5962, i8* %5963, align 1
  %5964 = lshr i32 %5934, 31
  %5965 = lshr i32 %5941, 31
  %5966 = xor i32 %5965, %5964
  %5967 = xor i32 %5961, %5964
  %5968 = add i32 %5967, %5966
  %5969 = icmp eq i32 %5968, 2
  %5970 = zext i1 %5969 to i8
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5970, i8* %5971, align 1
  store %struct.Memory* %loadMem_4a97a8, %struct.Memory** %MEMORY
  %loadMem_4a97ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 33
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %PC.i707
  %5976 = add i64 %5975, 42
  %5977 = load i64, i64* %PC.i707
  %5978 = add i64 %5977, 6
  %5979 = load i64, i64* %PC.i707
  %5980 = add i64 %5979, 6
  store i64 %5980, i64* %PC.i707
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5982 = load i8, i8* %5981, align 1
  %5983 = icmp eq i8 %5982, 0
  %5984 = zext i1 %5983 to i8
  store i8 %5984, i8* %BRANCH_TAKEN, align 1
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5986 = select i1 %5983, i64 %5976, i64 %5978
  store i64 %5986, i64* %5985, align 8
  store %struct.Memory* %loadMem_4a97ae, %struct.Memory** %MEMORY
  %loadBr_4a97ae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a97ae = icmp eq i8 %loadBr_4a97ae, 1
  br i1 %cmpBr_4a97ae, label %block_.L_4a97d8, label %block_4a97b4

block_4a97b4:                                     ; preds = %block_4a97a2
  %loadMem_4a97b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5988 = getelementptr inbounds %struct.GPR, %struct.GPR* %5987, i32 0, i32 33
  %5989 = getelementptr inbounds %struct.Reg, %struct.Reg* %5988, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %5989 to i64*
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5991 = getelementptr inbounds %struct.GPR, %struct.GPR* %5990, i32 0, i32 9
  %5992 = getelementptr inbounds %struct.Reg, %struct.Reg* %5991, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %5992 to i64*
  %5993 = load i64, i64* %PC.i705
  %5994 = add i64 %5993, 10
  store i64 %5994, i64* %PC.i705
  store i64 ptrtoint (%G__0x588897_type* @G__0x588897 to i64), i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_4a97b4, %struct.Memory** %MEMORY
  %loadMem_4a97be = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 11
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RDI.i704 = bitcast %union.anon* %6000 to i64*
  %6001 = load i64, i64* %PC.i703
  %6002 = add i64 %6001, 8
  store i64 %6002, i64* %PC.i703
  %6003 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %6003, i64* %RDI.i704, align 8
  store %struct.Memory* %loadMem_4a97be, %struct.Memory** %MEMORY
  %loadMem_4a97c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6005 = getelementptr inbounds %struct.GPR, %struct.GPR* %6004, i32 0, i32 33
  %6006 = getelementptr inbounds %struct.Reg, %struct.Reg* %6005, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %6006 to i64*
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 1
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %6010 = bitcast %union.anon* %6009 to %struct.anon.2*
  %AL.i702 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6010, i32 0, i32 0
  %6011 = load i64, i64* %PC.i701
  %6012 = add i64 %6011, 2
  store i64 %6012, i64* %PC.i701
  store i8 0, i8* %AL.i702, align 1
  store %struct.Memory* %loadMem_4a97c6, %struct.Memory** %MEMORY
  %loadMem1_4a97c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 33
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %6015 to i64*
  %6016 = load i64, i64* %PC.i700
  %6017 = add i64 %6016, -689912
  %6018 = load i64, i64* %PC.i700
  %6019 = add i64 %6018, 5
  %6020 = load i64, i64* %PC.i700
  %6021 = add i64 %6020, 5
  store i64 %6021, i64* %PC.i700
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6023 = load i64, i64* %6022, align 8
  %6024 = add i64 %6023, -8
  %6025 = inttoptr i64 %6024 to i64*
  store i64 %6019, i64* %6025
  store i64 %6024, i64* %6022, align 8
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6017, i64* %6026, align 8
  store %struct.Memory* %loadMem1_4a97c8, %struct.Memory** %MEMORY
  %loadMem2_4a97c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a97c8 = load i64, i64* %3
  %6027 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a97c8)
  store %struct.Memory* %6027, %struct.Memory** %MEMORY
  %loadMem_4a97cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 33
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %6030 to i64*
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6032 = getelementptr inbounds %struct.GPR, %struct.GPR* %6031, i32 0, i32 1
  %6033 = getelementptr inbounds %struct.Reg, %struct.Reg* %6032, i32 0, i32 0
  %EAX.i696 = bitcast %union.anon* %6033 to i32*
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 15
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %6036 to i64*
  %6037 = load i64, i64* %RBP.i697
  %6038 = sub i64 %6037, 7184
  %6039 = load i32, i32* %EAX.i696
  %6040 = zext i32 %6039 to i64
  %6041 = load i64, i64* %PC.i695
  %6042 = add i64 %6041, 6
  store i64 %6042, i64* %PC.i695
  %6043 = inttoptr i64 %6038 to i32*
  store i32 %6039, i32* %6043
  store %struct.Memory* %loadMem_4a97cd, %struct.Memory** %MEMORY
  %loadMem_4a97d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6045 = getelementptr inbounds %struct.GPR, %struct.GPR* %6044, i32 0, i32 33
  %6046 = getelementptr inbounds %struct.Reg, %struct.Reg* %6045, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %6046 to i64*
  %6047 = load i64, i64* %PC.i694
  %6048 = add i64 %6047, 68
  %6049 = load i64, i64* %PC.i694
  %6050 = add i64 %6049, 5
  store i64 %6050, i64* %PC.i694
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6048, i64* %6051, align 8
  store %struct.Memory* %loadMem_4a97d3, %struct.Memory** %MEMORY
  br label %block_.L_4a9817

block_.L_4a97d8:                                  ; preds = %block_4a97a2, %block_4a9790
  %loadMem_4a97d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6053 = getelementptr inbounds %struct.GPR, %struct.GPR* %6052, i32 0, i32 33
  %6054 = getelementptr inbounds %struct.Reg, %struct.Reg* %6053, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %6054 to i64*
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 9
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %RSI.i693 = bitcast %union.anon* %6057 to i64*
  %6058 = load i64, i64* %PC.i692
  %6059 = add i64 %6058, 10
  store i64 %6059, i64* %PC.i692
  store i64 ptrtoint (%G__0x579d93_type* @G__0x579d93 to i64), i64* %RSI.i693, align 8
  store %struct.Memory* %loadMem_4a97d8, %struct.Memory** %MEMORY
  %loadMem_4a97e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 33
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %6062 to i64*
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 1
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %6065 to i64*
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 15
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %6068 to i64*
  %6069 = load i64, i64* %RBP.i691
  %6070 = sub i64 %6069, 7120
  %6071 = load i64, i64* %PC.i689
  %6072 = add i64 %6071, 7
  store i64 %6072, i64* %PC.i689
  store i64 %6070, i64* %RAX.i690, align 8
  store %struct.Memory* %loadMem_4a97e2, %struct.Memory** %MEMORY
  %loadMem_4a97e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 33
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %6075 to i64*
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6077 = getelementptr inbounds %struct.GPR, %struct.GPR* %6076, i32 0, i32 11
  %6078 = getelementptr inbounds %struct.Reg, %struct.Reg* %6077, i32 0, i32 0
  %RDI.i688 = bitcast %union.anon* %6078 to i64*
  %6079 = load i64, i64* %PC.i687
  %6080 = add i64 %6079, 8
  store i64 %6080, i64* %PC.i687
  %6081 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %6081, i64* %RDI.i688, align 8
  store %struct.Memory* %loadMem_4a97e9, %struct.Memory** %MEMORY
  %loadMem_4a97f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 33
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %6084 to i64*
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 5
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %RCX.i685 = bitcast %union.anon* %6087 to i64*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 15
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %6090 to i64*
  %6091 = load i64, i64* %RBP.i686
  %6092 = sub i64 %6091, 7144
  %6093 = load i64, i64* %PC.i684
  %6094 = add i64 %6093, 7
  store i64 %6094, i64* %PC.i684
  %6095 = inttoptr i64 %6092 to i32*
  %6096 = load i32, i32* %6095
  %6097 = sext i32 %6096 to i64
  store i64 %6097, i64* %RCX.i685, align 8
  store %struct.Memory* %loadMem_4a97f1, %struct.Memory** %MEMORY
  %loadMem_4a97f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6099 = getelementptr inbounds %struct.GPR, %struct.GPR* %6098, i32 0, i32 33
  %6100 = getelementptr inbounds %struct.Reg, %struct.Reg* %6099, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %6100 to i64*
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 5
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %RCX.i683 = bitcast %union.anon* %6103 to i64*
  %6104 = load i64, i64* %RCX.i683
  %6105 = load i64, i64* %PC.i682
  %6106 = add i64 %6105, 4
  store i64 %6106, i64* %PC.i682
  %6107 = sext i64 %6104 to i128
  %6108 = and i128 %6107, -18446744073709551616
  %6109 = zext i64 %6104 to i128
  %6110 = or i128 %6108, %6109
  %6111 = mul i128 84, %6110
  %6112 = trunc i128 %6111 to i64
  store i64 %6112, i64* %RCX.i683, align 8
  %6113 = sext i64 %6112 to i128
  %6114 = icmp ne i128 %6113, %6111
  %6115 = zext i1 %6114 to i8
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6115, i8* %6116, align 1
  %6117 = trunc i128 %6111 to i32
  %6118 = and i32 %6117, 255
  %6119 = call i32 @llvm.ctpop.i32(i32 %6118)
  %6120 = trunc i32 %6119 to i8
  %6121 = and i8 %6120, 1
  %6122 = xor i8 %6121, 1
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6122, i8* %6123, align 1
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6124, align 1
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6125, align 1
  %6126 = lshr i64 %6112, 63
  %6127 = trunc i64 %6126 to i8
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6127, i8* %6128, align 1
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6115, i8* %6129, align 1
  store %struct.Memory* %loadMem_4a97f8, %struct.Memory** %MEMORY
  %loadMem_4a97fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %6132 to i64*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 1
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %6135 to i64*
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 5
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %6138 to i64*
  %6139 = load i64, i64* %RAX.i680
  %6140 = load i64, i64* %RCX.i681
  %6141 = load i64, i64* %PC.i679
  %6142 = add i64 %6141, 3
  store i64 %6142, i64* %PC.i679
  %6143 = add i64 %6140, %6139
  store i64 %6143, i64* %RAX.i680, align 8
  %6144 = icmp ult i64 %6143, %6139
  %6145 = icmp ult i64 %6143, %6140
  %6146 = or i1 %6144, %6145
  %6147 = zext i1 %6146 to i8
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6147, i8* %6148, align 1
  %6149 = trunc i64 %6143 to i32
  %6150 = and i32 %6149, 255
  %6151 = call i32 @llvm.ctpop.i32(i32 %6150)
  %6152 = trunc i32 %6151 to i8
  %6153 = and i8 %6152, 1
  %6154 = xor i8 %6153, 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6154, i8* %6155, align 1
  %6156 = xor i64 %6140, %6139
  %6157 = xor i64 %6156, %6143
  %6158 = lshr i64 %6157, 4
  %6159 = trunc i64 %6158 to i8
  %6160 = and i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6160, i8* %6161, align 1
  %6162 = icmp eq i64 %6143, 0
  %6163 = zext i1 %6162 to i8
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6163, i8* %6164, align 1
  %6165 = lshr i64 %6143, 63
  %6166 = trunc i64 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6166, i8* %6167, align 1
  %6168 = lshr i64 %6139, 63
  %6169 = lshr i64 %6140, 63
  %6170 = xor i64 %6165, %6168
  %6171 = xor i64 %6165, %6169
  %6172 = add i64 %6170, %6171
  %6173 = icmp eq i64 %6172, 2
  %6174 = zext i1 %6173 to i8
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6174, i8* %6175, align 1
  store %struct.Memory* %loadMem_4a97fc, %struct.Memory** %MEMORY
  %loadMem_4a97ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 33
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %6178 to i64*
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 5
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %RCX.i677 = bitcast %union.anon* %6181 to i64*
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 15
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %6184 to i64*
  %6185 = load i64, i64* %RBP.i678
  %6186 = sub i64 %6185, 7148
  %6187 = load i64, i64* %PC.i676
  %6188 = add i64 %6187, 7
  store i64 %6188, i64* %PC.i676
  %6189 = inttoptr i64 %6186 to i32*
  %6190 = load i32, i32* %6189
  %6191 = sext i32 %6190 to i64
  store i64 %6191, i64* %RCX.i677, align 8
  store %struct.Memory* %loadMem_4a97ff, %struct.Memory** %MEMORY
  %loadMem_4a9806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 33
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 1
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %6197 to i64*
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 5
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %RCX.i674 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 7
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %RDX.i675 = bitcast %union.anon* %6203 to i64*
  %6204 = load i64, i64* %RAX.i673
  %6205 = load i64, i64* %RCX.i674
  %6206 = add i64 %6205, %6204
  %6207 = load i64, i64* %PC.i672
  %6208 = add i64 %6207, 4
  store i64 %6208, i64* %PC.i672
  %6209 = inttoptr i64 %6206 to i8*
  %6210 = load i8, i8* %6209
  %6211 = sext i8 %6210 to i64
  %6212 = and i64 %6211, 4294967295
  store i64 %6212, i64* %RDX.i675, align 8
  store %struct.Memory* %loadMem_4a9806, %struct.Memory** %MEMORY
  %loadMem_4a980a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 33
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %6215 to i64*
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 1
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %6219 = bitcast %union.anon* %6218 to %struct.anon.2*
  %AL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6219, i32 0, i32 0
  %6220 = load i64, i64* %PC.i670
  %6221 = add i64 %6220, 2
  store i64 %6221, i64* %PC.i670
  store i8 0, i8* %AL.i671, align 1
  store %struct.Memory* %loadMem_4a980a, %struct.Memory** %MEMORY
  %loadMem1_4a980c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 33
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %6224 to i64*
  %6225 = load i64, i64* %PC.i669
  %6226 = add i64 %6225, -689980
  %6227 = load i64, i64* %PC.i669
  %6228 = add i64 %6227, 5
  %6229 = load i64, i64* %PC.i669
  %6230 = add i64 %6229, 5
  store i64 %6230, i64* %PC.i669
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6232 = load i64, i64* %6231, align 8
  %6233 = add i64 %6232, -8
  %6234 = inttoptr i64 %6233 to i64*
  store i64 %6228, i64* %6234
  store i64 %6233, i64* %6231, align 8
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6226, i64* %6235, align 8
  store %struct.Memory* %loadMem1_4a980c, %struct.Memory** %MEMORY
  %loadMem2_4a980c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a980c = load i64, i64* %3
  %6236 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a980c)
  store %struct.Memory* %6236, %struct.Memory** %MEMORY
  %loadMem_4a9811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6238 = getelementptr inbounds %struct.GPR, %struct.GPR* %6237, i32 0, i32 33
  %6239 = getelementptr inbounds %struct.Reg, %struct.Reg* %6238, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %6239 to i64*
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6241 = getelementptr inbounds %struct.GPR, %struct.GPR* %6240, i32 0, i32 1
  %6242 = getelementptr inbounds %struct.Reg, %struct.Reg* %6241, i32 0, i32 0
  %EAX.i664 = bitcast %union.anon* %6242 to i32*
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6244 = getelementptr inbounds %struct.GPR, %struct.GPR* %6243, i32 0, i32 15
  %6245 = getelementptr inbounds %struct.Reg, %struct.Reg* %6244, i32 0, i32 0
  %RBP.i665 = bitcast %union.anon* %6245 to i64*
  %6246 = load i64, i64* %RBP.i665
  %6247 = sub i64 %6246, 7188
  %6248 = load i32, i32* %EAX.i664
  %6249 = zext i32 %6248 to i64
  %6250 = load i64, i64* %PC.i663
  %6251 = add i64 %6250, 6
  store i64 %6251, i64* %PC.i663
  %6252 = inttoptr i64 %6247 to i32*
  store i32 %6248, i32* %6252
  store %struct.Memory* %loadMem_4a9811, %struct.Memory** %MEMORY
  br label %block_.L_4a9817

block_.L_4a9817:                                  ; preds = %block_.L_4a97d8, %block_4a97b4
  %loadMem_4a9817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6254 = getelementptr inbounds %struct.GPR, %struct.GPR* %6253, i32 0, i32 33
  %6255 = getelementptr inbounds %struct.Reg, %struct.Reg* %6254, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %6255 to i64*
  %6256 = load i64, i64* %PC.i662
  %6257 = add i64 %6256, 5
  %6258 = load i64, i64* %PC.i662
  %6259 = add i64 %6258, 5
  store i64 %6259, i64* %PC.i662
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6257, i64* %6260, align 8
  store %struct.Memory* %loadMem_4a9817, %struct.Memory** %MEMORY
  br label %block_.L_4a981c

block_.L_4a981c:                                  ; preds = %block_.L_4a9817
  %loadMem_4a981c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6262 = getelementptr inbounds %struct.GPR, %struct.GPR* %6261, i32 0, i32 33
  %6263 = getelementptr inbounds %struct.Reg, %struct.Reg* %6262, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %6263 to i64*
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6265 = getelementptr inbounds %struct.GPR, %struct.GPR* %6264, i32 0, i32 1
  %6266 = getelementptr inbounds %struct.Reg, %struct.Reg* %6265, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %6266 to i64*
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6268 = getelementptr inbounds %struct.GPR, %struct.GPR* %6267, i32 0, i32 15
  %6269 = getelementptr inbounds %struct.Reg, %struct.Reg* %6268, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %6269 to i64*
  %6270 = load i64, i64* %RBP.i661
  %6271 = sub i64 %6270, 7148
  %6272 = load i64, i64* %PC.i659
  %6273 = add i64 %6272, 6
  store i64 %6273, i64* %PC.i659
  %6274 = inttoptr i64 %6271 to i32*
  %6275 = load i32, i32* %6274
  %6276 = zext i32 %6275 to i64
  store i64 %6276, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_4a981c, %struct.Memory** %MEMORY
  %loadMem_4a9822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 33
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %6279 to i64*
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6281 = getelementptr inbounds %struct.GPR, %struct.GPR* %6280, i32 0, i32 1
  %6282 = getelementptr inbounds %struct.Reg, %struct.Reg* %6281, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %6282 to i64*
  %6283 = load i64, i64* %RAX.i658
  %6284 = load i64, i64* %PC.i657
  %6285 = add i64 %6284, 3
  store i64 %6285, i64* %PC.i657
  %6286 = trunc i64 %6283 to i32
  %6287 = add i32 1, %6286
  %6288 = zext i32 %6287 to i64
  store i64 %6288, i64* %RAX.i658, align 8
  %6289 = icmp ult i32 %6287, %6286
  %6290 = icmp ult i32 %6287, 1
  %6291 = or i1 %6289, %6290
  %6292 = zext i1 %6291 to i8
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6292, i8* %6293, align 1
  %6294 = and i32 %6287, 255
  %6295 = call i32 @llvm.ctpop.i32(i32 %6294)
  %6296 = trunc i32 %6295 to i8
  %6297 = and i8 %6296, 1
  %6298 = xor i8 %6297, 1
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6298, i8* %6299, align 1
  %6300 = xor i64 1, %6283
  %6301 = trunc i64 %6300 to i32
  %6302 = xor i32 %6301, %6287
  %6303 = lshr i32 %6302, 4
  %6304 = trunc i32 %6303 to i8
  %6305 = and i8 %6304, 1
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6305, i8* %6306, align 1
  %6307 = icmp eq i32 %6287, 0
  %6308 = zext i1 %6307 to i8
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6308, i8* %6309, align 1
  %6310 = lshr i32 %6287, 31
  %6311 = trunc i32 %6310 to i8
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6311, i8* %6312, align 1
  %6313 = lshr i32 %6286, 31
  %6314 = xor i32 %6310, %6313
  %6315 = add i32 %6314, %6310
  %6316 = icmp eq i32 %6315, 2
  %6317 = zext i1 %6316 to i8
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6317, i8* %6318, align 1
  store %struct.Memory* %loadMem_4a9822, %struct.Memory** %MEMORY
  %loadMem_4a9825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 33
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %6321 to i64*
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 1
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %EAX.i655 = bitcast %union.anon* %6324 to i32*
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 15
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %6327 to i64*
  %6328 = load i64, i64* %RBP.i656
  %6329 = sub i64 %6328, 7148
  %6330 = load i32, i32* %EAX.i655
  %6331 = zext i32 %6330 to i64
  %6332 = load i64, i64* %PC.i654
  %6333 = add i64 %6332, 6
  store i64 %6333, i64* %PC.i654
  %6334 = inttoptr i64 %6329 to i32*
  store i32 %6330, i32* %6334
  store %struct.Memory* %loadMem_4a9825, %struct.Memory** %MEMORY
  %loadMem_4a982b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 33
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %6337 to i64*
  %6338 = load i64, i64* %PC.i653
  %6339 = add i64 %6338, -168
  %6340 = load i64, i64* %PC.i653
  %6341 = add i64 %6340, 5
  store i64 %6341, i64* %PC.i653
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6339, i64* %6342, align 8
  store %struct.Memory* %loadMem_4a982b, %struct.Memory** %MEMORY
  br label %block_.L_4a9783

block_.L_4a9830:                                  ; preds = %block_.L_4a9783
  %loadMem_4a9830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 33
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 9
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %RSI.i652 = bitcast %union.anon* %6348 to i64*
  %6349 = load i64, i64* %PC.i651
  %6350 = add i64 %6349, 10
  store i64 %6350, i64* %PC.i651
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RSI.i652, align 8
  store %struct.Memory* %loadMem_4a9830, %struct.Memory** %MEMORY
  %loadMem_4a983a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 33
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 11
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RDI.i650 = bitcast %union.anon* %6356 to i64*
  %6357 = load i64, i64* %PC.i649
  %6358 = add i64 %6357, 8
  store i64 %6358, i64* %PC.i649
  %6359 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %6359, i64* %RDI.i650, align 8
  store %struct.Memory* %loadMem_4a983a, %struct.Memory** %MEMORY
  %loadMem_4a9842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 33
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 1
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %6366 = bitcast %union.anon* %6365 to %struct.anon.2*
  %AL.i648 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6366, i32 0, i32 0
  %6367 = load i64, i64* %PC.i647
  %6368 = add i64 %6367, 2
  store i64 %6368, i64* %PC.i647
  store i8 0, i8* %AL.i648, align 1
  store %struct.Memory* %loadMem_4a9842, %struct.Memory** %MEMORY
  %loadMem1_4a9844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %6371 to i64*
  %6372 = load i64, i64* %PC.i646
  %6373 = add i64 %6372, -690036
  %6374 = load i64, i64* %PC.i646
  %6375 = add i64 %6374, 5
  %6376 = load i64, i64* %PC.i646
  %6377 = add i64 %6376, 5
  store i64 %6377, i64* %PC.i646
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6379 = load i64, i64* %6378, align 8
  %6380 = add i64 %6379, -8
  %6381 = inttoptr i64 %6380 to i64*
  store i64 %6375, i64* %6381
  store i64 %6380, i64* %6378, align 8
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6373, i64* %6382, align 8
  store %struct.Memory* %loadMem1_4a9844, %struct.Memory** %MEMORY
  %loadMem2_4a9844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9844 = load i64, i64* %3
  %6383 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a9844)
  store %struct.Memory* %6383, %struct.Memory** %MEMORY
  %loadMem_4a9849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6385 = getelementptr inbounds %struct.GPR, %struct.GPR* %6384, i32 0, i32 33
  %6386 = getelementptr inbounds %struct.Reg, %struct.Reg* %6385, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %6386 to i64*
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 1
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %EAX.i642 = bitcast %union.anon* %6389 to i32*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 15
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %RBP.i643 = bitcast %union.anon* %6392 to i64*
  %6393 = load i64, i64* %RBP.i643
  %6394 = sub i64 %6393, 7192
  %6395 = load i32, i32* %EAX.i642
  %6396 = zext i32 %6395 to i64
  %6397 = load i64, i64* %PC.i641
  %6398 = add i64 %6397, 6
  store i64 %6398, i64* %PC.i641
  %6399 = inttoptr i64 %6394 to i32*
  store i32 %6395, i32* %6399
  store %struct.Memory* %loadMem_4a9849, %struct.Memory** %MEMORY
  %loadMem_4a984f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6401 = getelementptr inbounds %struct.GPR, %struct.GPR* %6400, i32 0, i32 33
  %6402 = getelementptr inbounds %struct.Reg, %struct.Reg* %6401, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %6402 to i64*
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6404 = getelementptr inbounds %struct.GPR, %struct.GPR* %6403, i32 0, i32 1
  %6405 = getelementptr inbounds %struct.Reg, %struct.Reg* %6404, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %6405 to i64*
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6407 = getelementptr inbounds %struct.GPR, %struct.GPR* %6406, i32 0, i32 15
  %6408 = getelementptr inbounds %struct.Reg, %struct.Reg* %6407, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %6408 to i64*
  %6409 = load i64, i64* %RBP.i640
  %6410 = sub i64 %6409, 7144
  %6411 = load i64, i64* %PC.i638
  %6412 = add i64 %6411, 6
  store i64 %6412, i64* %PC.i638
  %6413 = inttoptr i64 %6410 to i32*
  %6414 = load i32, i32* %6413
  %6415 = zext i32 %6414 to i64
  store i64 %6415, i64* %RAX.i639, align 8
  store %struct.Memory* %loadMem_4a984f, %struct.Memory** %MEMORY
  %loadMem_4a9855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6417 = getelementptr inbounds %struct.GPR, %struct.GPR* %6416, i32 0, i32 33
  %6418 = getelementptr inbounds %struct.Reg, %struct.Reg* %6417, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %6418 to i64*
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6420 = getelementptr inbounds %struct.GPR, %struct.GPR* %6419, i32 0, i32 1
  %6421 = getelementptr inbounds %struct.Reg, %struct.Reg* %6420, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %6421 to i64*
  %6422 = load i64, i64* %RAX.i637
  %6423 = load i64, i64* %PC.i636
  %6424 = add i64 %6423, 3
  store i64 %6424, i64* %PC.i636
  %6425 = trunc i64 %6422 to i32
  %6426 = add i32 1, %6425
  %6427 = zext i32 %6426 to i64
  store i64 %6427, i64* %RAX.i637, align 8
  %6428 = icmp ult i32 %6426, %6425
  %6429 = icmp ult i32 %6426, 1
  %6430 = or i1 %6428, %6429
  %6431 = zext i1 %6430 to i8
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6431, i8* %6432, align 1
  %6433 = and i32 %6426, 255
  %6434 = call i32 @llvm.ctpop.i32(i32 %6433)
  %6435 = trunc i32 %6434 to i8
  %6436 = and i8 %6435, 1
  %6437 = xor i8 %6436, 1
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6437, i8* %6438, align 1
  %6439 = xor i64 1, %6422
  %6440 = trunc i64 %6439 to i32
  %6441 = xor i32 %6440, %6426
  %6442 = lshr i32 %6441, 4
  %6443 = trunc i32 %6442 to i8
  %6444 = and i8 %6443, 1
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6444, i8* %6445, align 1
  %6446 = icmp eq i32 %6426, 0
  %6447 = zext i1 %6446 to i8
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6447, i8* %6448, align 1
  %6449 = lshr i32 %6426, 31
  %6450 = trunc i32 %6449 to i8
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6450, i8* %6451, align 1
  %6452 = lshr i32 %6425, 31
  %6453 = xor i32 %6449, %6452
  %6454 = add i32 %6453, %6449
  %6455 = icmp eq i32 %6454, 2
  %6456 = zext i1 %6455 to i8
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6456, i8* %6457, align 1
  store %struct.Memory* %loadMem_4a9855, %struct.Memory** %MEMORY
  %loadMem_4a9858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 33
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %6460 to i64*
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 1
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %EAX.i634 = bitcast %union.anon* %6463 to i32*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 15
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %6466 to i64*
  %6467 = load i64, i64* %RBP.i635
  %6468 = sub i64 %6467, 7144
  %6469 = load i32, i32* %EAX.i634
  %6470 = zext i32 %6469 to i64
  %6471 = load i64, i64* %PC.i633
  %6472 = add i64 %6471, 6
  store i64 %6472, i64* %PC.i633
  %6473 = inttoptr i64 %6468 to i32*
  store i32 %6469, i32* %6473
  store %struct.Memory* %loadMem_4a9858, %struct.Memory** %MEMORY
  %loadMem_4a985e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 33
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %6476 to i64*
  %6477 = load i64, i64* %PC.i632
  %6478 = add i64 %6477, -242
  %6479 = load i64, i64* %PC.i632
  %6480 = add i64 %6479, 5
  store i64 %6480, i64* %PC.i632
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6478, i64* %6481, align 8
  store %struct.Memory* %loadMem_4a985e, %struct.Memory** %MEMORY
  br label %block_.L_4a976c

block_.L_4a9863:                                  ; preds = %block_.L_4a976c
  %loadMem_4a9863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 33
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %6484 to i64*
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 9
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %RSI.i631 = bitcast %union.anon* %6487 to i64*
  %6488 = load i64, i64* %PC.i630
  %6489 = add i64 %6488, 10
  store i64 %6489, i64* %PC.i630
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RSI.i631, align 8
  store %struct.Memory* %loadMem_4a9863, %struct.Memory** %MEMORY
  %loadMem_4a986d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6491 = getelementptr inbounds %struct.GPR, %struct.GPR* %6490, i32 0, i32 33
  %6492 = getelementptr inbounds %struct.Reg, %struct.Reg* %6491, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %6492 to i64*
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6494 = getelementptr inbounds %struct.GPR, %struct.GPR* %6493, i32 0, i32 11
  %6495 = getelementptr inbounds %struct.Reg, %struct.Reg* %6494, i32 0, i32 0
  %RDI.i629 = bitcast %union.anon* %6495 to i64*
  %6496 = load i64, i64* %PC.i628
  %6497 = add i64 %6496, 8
  store i64 %6497, i64* %PC.i628
  %6498 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %6498, i64* %RDI.i629, align 8
  store %struct.Memory* %loadMem_4a986d, %struct.Memory** %MEMORY
  %loadMem_4a9875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6500 = getelementptr inbounds %struct.GPR, %struct.GPR* %6499, i32 0, i32 33
  %6501 = getelementptr inbounds %struct.Reg, %struct.Reg* %6500, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %6501 to i64*
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 1
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %6505 = bitcast %union.anon* %6504 to %struct.anon.2*
  %AL.i627 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6505, i32 0, i32 0
  %6506 = load i64, i64* %PC.i626
  %6507 = add i64 %6506, 2
  store i64 %6507, i64* %PC.i626
  store i8 0, i8* %AL.i627, align 1
  store %struct.Memory* %loadMem_4a9875, %struct.Memory** %MEMORY
  %loadMem1_4a9877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 33
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %PC.i625
  %6512 = add i64 %6511, -690087
  %6513 = load i64, i64* %PC.i625
  %6514 = add i64 %6513, 5
  %6515 = load i64, i64* %PC.i625
  %6516 = add i64 %6515, 5
  store i64 %6516, i64* %PC.i625
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6518 = load i64, i64* %6517, align 8
  %6519 = add i64 %6518, -8
  %6520 = inttoptr i64 %6519 to i64*
  store i64 %6514, i64* %6520
  store i64 %6519, i64* %6517, align 8
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6512, i64* %6521, align 8
  store %struct.Memory* %loadMem1_4a9877, %struct.Memory** %MEMORY
  %loadMem2_4a9877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9877 = load i64, i64* %3
  %6522 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a9877)
  store %struct.Memory* %6522, %struct.Memory** %MEMORY
  %loadMem_4a987c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 33
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %6525 to i64*
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 1
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %6528 to i32*
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6530 = getelementptr inbounds %struct.GPR, %struct.GPR* %6529, i32 0, i32 15
  %6531 = getelementptr inbounds %struct.Reg, %struct.Reg* %6530, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %6531 to i64*
  %6532 = load i64, i64* %RBP.i623
  %6533 = sub i64 %6532, 7196
  %6534 = load i32, i32* %EAX.i622
  %6535 = zext i32 %6534 to i64
  %6536 = load i64, i64* %PC.i621
  %6537 = add i64 %6536, 6
  store i64 %6537, i64* %PC.i621
  %6538 = inttoptr i64 %6533 to i32*
  store i32 %6534, i32* %6538
  store %struct.Memory* %loadMem_4a987c, %struct.Memory** %MEMORY
  br label %block_.L_4a9882

block_.L_4a9882:                                  ; preds = %block_.L_4a9863, %block_.L_4a9754
  %loadMem_4a9882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 33
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 15
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %6544 to i64*
  %6545 = load i64, i64* %RBP.i620
  %6546 = sub i64 %6545, 7152
  %6547 = load i64, i64* %PC.i619
  %6548 = add i64 %6547, 10
  store i64 %6548, i64* %PC.i619
  %6549 = inttoptr i64 %6546 to i32*
  store i32 0, i32* %6549
  store %struct.Memory* %loadMem_4a9882, %struct.Memory** %MEMORY
  br label %block_.L_4a988c

block_.L_4a988c:                                  ; preds = %block_4a989f, %block_.L_4a9882
  %loadMem_4a988c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 33
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %6552 to i64*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6554 = getelementptr inbounds %struct.GPR, %struct.GPR* %6553, i32 0, i32 1
  %6555 = getelementptr inbounds %struct.Reg, %struct.Reg* %6554, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %6555 to i64*
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 15
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %6558 to i64*
  %6559 = load i64, i64* %RBP.i618
  %6560 = sub i64 %6559, 7152
  %6561 = load i64, i64* %PC.i616
  %6562 = add i64 %6561, 6
  store i64 %6562, i64* %PC.i616
  %6563 = inttoptr i64 %6560 to i32*
  %6564 = load i32, i32* %6563
  %6565 = zext i32 %6564 to i64
  store i64 %6565, i64* %RAX.i617, align 8
  store %struct.Memory* %loadMem_4a988c, %struct.Memory** %MEMORY
  %loadMem_4a9892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 33
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %6568 to i64*
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6570 = getelementptr inbounds %struct.GPR, %struct.GPR* %6569, i32 0, i32 5
  %6571 = getelementptr inbounds %struct.Reg, %struct.Reg* %6570, i32 0, i32 0
  %RCX.i614 = bitcast %union.anon* %6571 to i64*
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 15
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %6574 to i64*
  %6575 = load i64, i64* %RBP.i615
  %6576 = sub i64 %6575, 32
  %6577 = load i64, i64* %PC.i613
  %6578 = add i64 %6577, 4
  store i64 %6578, i64* %PC.i613
  %6579 = inttoptr i64 %6576 to i64*
  %6580 = load i64, i64* %6579
  store i64 %6580, i64* %RCX.i614, align 8
  store %struct.Memory* %loadMem_4a9892, %struct.Memory** %MEMORY
  %loadMem_4a9896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6582 = getelementptr inbounds %struct.GPR, %struct.GPR* %6581, i32 0, i32 33
  %6583 = getelementptr inbounds %struct.Reg, %struct.Reg* %6582, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %6583 to i64*
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6585 = getelementptr inbounds %struct.GPR, %struct.GPR* %6584, i32 0, i32 1
  %6586 = getelementptr inbounds %struct.Reg, %struct.Reg* %6585, i32 0, i32 0
  %EAX.i611 = bitcast %union.anon* %6586 to i32*
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 5
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %6589 to i64*
  %6590 = load i32, i32* %EAX.i611
  %6591 = zext i32 %6590 to i64
  %6592 = load i64, i64* %RCX.i612
  %6593 = add i64 %6592, 8
  %6594 = load i64, i64* %PC.i610
  %6595 = add i64 %6594, 3
  store i64 %6595, i64* %PC.i610
  %6596 = inttoptr i64 %6593 to i32*
  %6597 = load i32, i32* %6596
  %6598 = sub i32 %6590, %6597
  %6599 = icmp ult i32 %6590, %6597
  %6600 = zext i1 %6599 to i8
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6600, i8* %6601, align 1
  %6602 = and i32 %6598, 255
  %6603 = call i32 @llvm.ctpop.i32(i32 %6602)
  %6604 = trunc i32 %6603 to i8
  %6605 = and i8 %6604, 1
  %6606 = xor i8 %6605, 1
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6606, i8* %6607, align 1
  %6608 = xor i32 %6597, %6590
  %6609 = xor i32 %6608, %6598
  %6610 = lshr i32 %6609, 4
  %6611 = trunc i32 %6610 to i8
  %6612 = and i8 %6611, 1
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6612, i8* %6613, align 1
  %6614 = icmp eq i32 %6598, 0
  %6615 = zext i1 %6614 to i8
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6615, i8* %6616, align 1
  %6617 = lshr i32 %6598, 31
  %6618 = trunc i32 %6617 to i8
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6618, i8* %6619, align 1
  %6620 = lshr i32 %6590, 31
  %6621 = lshr i32 %6597, 31
  %6622 = xor i32 %6621, %6620
  %6623 = xor i32 %6617, %6620
  %6624 = add i32 %6623, %6622
  %6625 = icmp eq i32 %6624, 2
  %6626 = zext i1 %6625 to i8
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6626, i8* %6627, align 1
  store %struct.Memory* %loadMem_4a9896, %struct.Memory** %MEMORY
  %loadMem_4a9899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 33
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %6630 to i64*
  %6631 = load i64, i64* %PC.i609
  %6632 = add i64 %6631, 153
  %6633 = load i64, i64* %PC.i609
  %6634 = add i64 %6633, 6
  %6635 = load i64, i64* %PC.i609
  %6636 = add i64 %6635, 6
  store i64 %6636, i64* %PC.i609
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6638 = load i8, i8* %6637, align 1
  store i8 %6638, i8* %BRANCH_TAKEN, align 1
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6640 = icmp ne i8 %6638, 0
  %6641 = select i1 %6640, i64 %6632, i64 %6634
  store i64 %6641, i64* %6639, align 8
  store %struct.Memory* %loadMem_4a9899, %struct.Memory** %MEMORY
  %loadBr_4a9899 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9899 = icmp eq i8 %loadBr_4a9899, 1
  br i1 %cmpBr_4a9899, label %block_.L_4a9932, label %block_4a989f

block_4a989f:                                     ; preds = %block_.L_4a988c
  %loadMem_4a989f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6643 = getelementptr inbounds %struct.GPR, %struct.GPR* %6642, i32 0, i32 33
  %6644 = getelementptr inbounds %struct.Reg, %struct.Reg* %6643, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %6644 to i64*
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6646 = getelementptr inbounds %struct.GPR, %struct.GPR* %6645, i32 0, i32 1
  %6647 = getelementptr inbounds %struct.Reg, %struct.Reg* %6646, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %6647 to i64*
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6649 = getelementptr inbounds %struct.GPR, %struct.GPR* %6648, i32 0, i32 15
  %6650 = getelementptr inbounds %struct.Reg, %struct.Reg* %6649, i32 0, i32 0
  %RBP.i608 = bitcast %union.anon* %6650 to i64*
  %6651 = load i64, i64* %RBP.i608
  %6652 = sub i64 %6651, 7120
  %6653 = load i64, i64* %PC.i606
  %6654 = add i64 %6653, 7
  store i64 %6654, i64* %PC.i606
  store i64 %6652, i64* %RAX.i607, align 8
  store %struct.Memory* %loadMem_4a989f, %struct.Memory** %MEMORY
  %loadMem_4a98a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6656 = getelementptr inbounds %struct.GPR, %struct.GPR* %6655, i32 0, i32 33
  %6657 = getelementptr inbounds %struct.Reg, %struct.Reg* %6656, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %6657 to i64*
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6659 = getelementptr inbounds %struct.GPR, %struct.GPR* %6658, i32 0, i32 5
  %6660 = getelementptr inbounds %struct.Reg, %struct.Reg* %6659, i32 0, i32 0
  %RCX.i604 = bitcast %union.anon* %6660 to i64*
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 15
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %6663 to i64*
  %6664 = load i64, i64* %RBP.i605
  %6665 = sub i64 %6664, 40
  %6666 = load i64, i64* %PC.i603
  %6667 = add i64 %6666, 4
  store i64 %6667, i64* %PC.i603
  %6668 = inttoptr i64 %6665 to i64*
  %6669 = load i64, i64* %6668
  store i64 %6669, i64* %RCX.i604, align 8
  store %struct.Memory* %loadMem_4a98a6, %struct.Memory** %MEMORY
  %loadMem_4a98aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 33
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %6672 to i64*
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 7
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %RDX.i601 = bitcast %union.anon* %6675 to i64*
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 15
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %6678 to i64*
  %6679 = load i64, i64* %RBP.i602
  %6680 = sub i64 %6679, 7152
  %6681 = load i64, i64* %PC.i600
  %6682 = add i64 %6681, 7
  store i64 %6682, i64* %PC.i600
  %6683 = inttoptr i64 %6680 to i32*
  %6684 = load i32, i32* %6683
  %6685 = sext i32 %6684 to i64
  store i64 %6685, i64* %RDX.i601, align 8
  store %struct.Memory* %loadMem_4a98aa, %struct.Memory** %MEMORY
  %loadMem_4a98b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 33
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %6688 to i64*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 7
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RDX.i599 = bitcast %union.anon* %6691 to i64*
  %6692 = load i64, i64* %RDX.i599
  %6693 = load i64, i64* %PC.i598
  %6694 = add i64 %6693, 4
  store i64 %6694, i64* %PC.i598
  %6695 = sext i64 %6692 to i128
  %6696 = and i128 %6695, -18446744073709551616
  %6697 = zext i64 %6692 to i128
  %6698 = or i128 %6696, %6697
  %6699 = mul i128 12, %6698
  %6700 = trunc i128 %6699 to i64
  store i64 %6700, i64* %RDX.i599, align 8
  %6701 = sext i64 %6700 to i128
  %6702 = icmp ne i128 %6701, %6699
  %6703 = zext i1 %6702 to i8
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6703, i8* %6704, align 1
  %6705 = trunc i128 %6699 to i32
  %6706 = and i32 %6705, 255
  %6707 = call i32 @llvm.ctpop.i32(i32 %6706)
  %6708 = trunc i32 %6707 to i8
  %6709 = and i8 %6708, 1
  %6710 = xor i8 %6709, 1
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6710, i8* %6711, align 1
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6712, align 1
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6713, align 1
  %6714 = lshr i64 %6700, 63
  %6715 = trunc i64 %6714 to i8
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6715, i8* %6716, align 1
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6703, i8* %6717, align 1
  store %struct.Memory* %loadMem_4a98b1, %struct.Memory** %MEMORY
  %loadMem_4a98b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6719 = getelementptr inbounds %struct.GPR, %struct.GPR* %6718, i32 0, i32 33
  %6720 = getelementptr inbounds %struct.Reg, %struct.Reg* %6719, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %6720 to i64*
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6722 = getelementptr inbounds %struct.GPR, %struct.GPR* %6721, i32 0, i32 5
  %6723 = getelementptr inbounds %struct.Reg, %struct.Reg* %6722, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %6723 to i64*
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6725 = getelementptr inbounds %struct.GPR, %struct.GPR* %6724, i32 0, i32 7
  %6726 = getelementptr inbounds %struct.Reg, %struct.Reg* %6725, i32 0, i32 0
  %RDX.i597 = bitcast %union.anon* %6726 to i64*
  %6727 = load i64, i64* %RCX.i596
  %6728 = load i64, i64* %RDX.i597
  %6729 = load i64, i64* %PC.i595
  %6730 = add i64 %6729, 3
  store i64 %6730, i64* %PC.i595
  %6731 = add i64 %6728, %6727
  store i64 %6731, i64* %RCX.i596, align 8
  %6732 = icmp ult i64 %6731, %6727
  %6733 = icmp ult i64 %6731, %6728
  %6734 = or i1 %6732, %6733
  %6735 = zext i1 %6734 to i8
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6735, i8* %6736, align 1
  %6737 = trunc i64 %6731 to i32
  %6738 = and i32 %6737, 255
  %6739 = call i32 @llvm.ctpop.i32(i32 %6738)
  %6740 = trunc i32 %6739 to i8
  %6741 = and i8 %6740, 1
  %6742 = xor i8 %6741, 1
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6742, i8* %6743, align 1
  %6744 = xor i64 %6728, %6727
  %6745 = xor i64 %6744, %6731
  %6746 = lshr i64 %6745, 4
  %6747 = trunc i64 %6746 to i8
  %6748 = and i8 %6747, 1
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6748, i8* %6749, align 1
  %6750 = icmp eq i64 %6731, 0
  %6751 = zext i1 %6750 to i8
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6751, i8* %6752, align 1
  %6753 = lshr i64 %6731, 63
  %6754 = trunc i64 %6753 to i8
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6754, i8* %6755, align 1
  %6756 = lshr i64 %6727, 63
  %6757 = lshr i64 %6728, 63
  %6758 = xor i64 %6753, %6756
  %6759 = xor i64 %6753, %6757
  %6760 = add i64 %6758, %6759
  %6761 = icmp eq i64 %6760, 2
  %6762 = zext i1 %6761 to i8
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6762, i8* %6763, align 1
  store %struct.Memory* %loadMem_4a98b5, %struct.Memory** %MEMORY
  %loadMem_4a98b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6765 = getelementptr inbounds %struct.GPR, %struct.GPR* %6764, i32 0, i32 33
  %6766 = getelementptr inbounds %struct.Reg, %struct.Reg* %6765, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %6766 to i64*
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 5
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %6769 to i64*
  %6770 = load i64, i64* %RCX.i594
  %6771 = add i64 %6770, 8
  %6772 = load i64, i64* %PC.i593
  %6773 = add i64 %6772, 4
  store i64 %6773, i64* %PC.i593
  %6774 = inttoptr i64 %6771 to i32*
  %6775 = load i32, i32* %6774
  %6776 = sext i32 %6775 to i64
  store i64 %6776, i64* %RCX.i594, align 8
  store %struct.Memory* %loadMem_4a98b8, %struct.Memory** %MEMORY
  %loadMem_4a98bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6778 = getelementptr inbounds %struct.GPR, %struct.GPR* %6777, i32 0, i32 33
  %6779 = getelementptr inbounds %struct.Reg, %struct.Reg* %6778, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %6779 to i64*
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 9
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %6783 = bitcast %union.anon* %6782 to %struct.anon.2*
  %SIL.i591 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6783, i32 0, i32 0
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 5
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %6786 to i64*
  %6787 = load i64, i64* %RCX.i592
  %6788 = add i64 %6787, 5138880
  %6789 = load i64, i64* %PC.i590
  %6790 = add i64 %6789, 8
  store i64 %6790, i64* %PC.i590
  %6791 = inttoptr i64 %6788 to i8*
  %6792 = load i8, i8* %6791
  store i8 %6792, i8* %SIL.i591, align 1
  store %struct.Memory* %loadMem_4a98bc, %struct.Memory** %MEMORY
  %loadMem_4a98c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 33
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %6795 to i64*
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6797 = getelementptr inbounds %struct.GPR, %struct.GPR* %6796, i32 0, i32 9
  %6798 = getelementptr inbounds %struct.Reg, %struct.Reg* %6797, i32 0, i32 0
  %6799 = bitcast %union.anon* %6798 to %struct.anon.2*
  %SIL.i588 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6799, i32 0, i32 0
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 15
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %6802 to i64*
  %6803 = load i64, i64* %RBP.i589
  %6804 = sub i64 %6803, 7153
  %6805 = load i8, i8* %SIL.i588
  %6806 = zext i8 %6805 to i64
  %6807 = load i64, i64* %PC.i587
  %6808 = add i64 %6807, 7
  store i64 %6808, i64* %PC.i587
  %6809 = inttoptr i64 %6804 to i8*
  store i8 %6805, i8* %6809
  store %struct.Memory* %loadMem_4a98c4, %struct.Memory** %MEMORY
  %loadMem_4a98cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 33
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %6812 to i64*
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 9
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %6816 = bitcast %union.anon* %6815 to %struct.anon.2*
  %SIL.i585 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6816, i32 0, i32 0
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6818 = getelementptr inbounds %struct.GPR, %struct.GPR* %6817, i32 0, i32 15
  %6819 = getelementptr inbounds %struct.Reg, %struct.Reg* %6818, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %6819 to i64*
  %6820 = load i64, i64* %RBP.i586
  %6821 = sub i64 %6820, 7153
  %6822 = load i64, i64* %PC.i584
  %6823 = add i64 %6822, 7
  store i64 %6823, i64* %PC.i584
  %6824 = inttoptr i64 %6821 to i8*
  %6825 = load i8, i8* %6824
  store i8 %6825, i8* %SIL.i585, align 1
  store %struct.Memory* %loadMem_4a98cb, %struct.Memory** %MEMORY
  %loadMem_4a98d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 11
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RDI.i582 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 15
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %6834 to i64*
  %6835 = load i64, i64* %RBP.i583
  %6836 = sub i64 %6835, 7124
  %6837 = load i64, i64* %PC.i581
  %6838 = add i64 %6837, 6
  store i64 %6838, i64* %PC.i581
  %6839 = inttoptr i64 %6836 to i32*
  %6840 = load i32, i32* %6839
  %6841 = zext i32 %6840 to i64
  store i64 %6841, i64* %RDI.i582, align 8
  store %struct.Memory* %loadMem_4a98d2, %struct.Memory** %MEMORY
  %loadMem_4a98d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 5
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 15
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RBP.i580 = bitcast %union.anon* %6850 to i64*
  %6851 = load i64, i64* %RBP.i580
  %6852 = sub i64 %6851, 40
  %6853 = load i64, i64* %PC.i578
  %6854 = add i64 %6853, 4
  store i64 %6854, i64* %PC.i578
  %6855 = inttoptr i64 %6852 to i64*
  %6856 = load i64, i64* %6855
  store i64 %6856, i64* %RCX.i579, align 8
  store %struct.Memory* %loadMem_4a98d8, %struct.Memory** %MEMORY
  %loadMem_4a98dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 33
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %6859 to i64*
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 7
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %RDX.i576 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 15
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %6865 to i64*
  %6866 = load i64, i64* %RBP.i577
  %6867 = sub i64 %6866, 7152
  %6868 = load i64, i64* %PC.i575
  %6869 = add i64 %6868, 7
  store i64 %6869, i64* %PC.i575
  %6870 = inttoptr i64 %6867 to i32*
  %6871 = load i32, i32* %6870
  %6872 = sext i32 %6871 to i64
  store i64 %6872, i64* %RDX.i576, align 8
  store %struct.Memory* %loadMem_4a98dc, %struct.Memory** %MEMORY
  %loadMem_4a98e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 33
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %6875 to i64*
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6877 = getelementptr inbounds %struct.GPR, %struct.GPR* %6876, i32 0, i32 7
  %6878 = getelementptr inbounds %struct.Reg, %struct.Reg* %6877, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %6878 to i64*
  %6879 = load i64, i64* %RDX.i574
  %6880 = load i64, i64* %PC.i573
  %6881 = add i64 %6880, 4
  store i64 %6881, i64* %PC.i573
  %6882 = sext i64 %6879 to i128
  %6883 = and i128 %6882, -18446744073709551616
  %6884 = zext i64 %6879 to i128
  %6885 = or i128 %6883, %6884
  %6886 = mul i128 12, %6885
  %6887 = trunc i128 %6886 to i64
  store i64 %6887, i64* %RDX.i574, align 8
  %6888 = sext i64 %6887 to i128
  %6889 = icmp ne i128 %6888, %6886
  %6890 = zext i1 %6889 to i8
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6890, i8* %6891, align 1
  %6892 = trunc i128 %6886 to i32
  %6893 = and i32 %6892, 255
  %6894 = call i32 @llvm.ctpop.i32(i32 %6893)
  %6895 = trunc i32 %6894 to i8
  %6896 = and i8 %6895, 1
  %6897 = xor i8 %6896, 1
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6897, i8* %6898, align 1
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6899, align 1
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6900, align 1
  %6901 = lshr i64 %6887, 63
  %6902 = trunc i64 %6901 to i8
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6902, i8* %6903, align 1
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6890, i8* %6904, align 1
  store %struct.Memory* %loadMem_4a98e3, %struct.Memory** %MEMORY
  %loadMem_4a98e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 33
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 5
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %RCX.i571 = bitcast %union.anon* %6910 to i64*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 7
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %RDX.i572 = bitcast %union.anon* %6913 to i64*
  %6914 = load i64, i64* %RCX.i571
  %6915 = load i64, i64* %RDX.i572
  %6916 = load i64, i64* %PC.i570
  %6917 = add i64 %6916, 3
  store i64 %6917, i64* %PC.i570
  %6918 = add i64 %6915, %6914
  store i64 %6918, i64* %RCX.i571, align 8
  %6919 = icmp ult i64 %6918, %6914
  %6920 = icmp ult i64 %6918, %6915
  %6921 = or i1 %6919, %6920
  %6922 = zext i1 %6921 to i8
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6922, i8* %6923, align 1
  %6924 = trunc i64 %6918 to i32
  %6925 = and i32 %6924, 255
  %6926 = call i32 @llvm.ctpop.i32(i32 %6925)
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = xor i8 %6928, 1
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6929, i8* %6930, align 1
  %6931 = xor i64 %6915, %6914
  %6932 = xor i64 %6931, %6918
  %6933 = lshr i64 %6932, 4
  %6934 = trunc i64 %6933 to i8
  %6935 = and i8 %6934, 1
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6935, i8* %6936, align 1
  %6937 = icmp eq i64 %6918, 0
  %6938 = zext i1 %6937 to i8
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6938, i8* %6939, align 1
  %6940 = lshr i64 %6918, 63
  %6941 = trunc i64 %6940 to i8
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6941, i8* %6942, align 1
  %6943 = lshr i64 %6914, 63
  %6944 = lshr i64 %6915, 63
  %6945 = xor i64 %6940, %6943
  %6946 = xor i64 %6940, %6944
  %6947 = add i64 %6945, %6946
  %6948 = icmp eq i64 %6947, 2
  %6949 = zext i1 %6948 to i8
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6949, i8* %6950, align 1
  store %struct.Memory* %loadMem_4a98e7, %struct.Memory** %MEMORY
  %loadMem_4a98ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6952 = getelementptr inbounds %struct.GPR, %struct.GPR* %6951, i32 0, i32 33
  %6953 = getelementptr inbounds %struct.Reg, %struct.Reg* %6952, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %6953 to i64*
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6955 = getelementptr inbounds %struct.GPR, %struct.GPR* %6954, i32 0, i32 5
  %6956 = getelementptr inbounds %struct.Reg, %struct.Reg* %6955, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %6956 to i64*
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 11
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %RDI.i569 = bitcast %union.anon* %6959 to i64*
  %6960 = load i64, i64* %RDI.i569
  %6961 = load i64, i64* %RCX.i568
  %6962 = load i64, i64* %PC.i567
  %6963 = add i64 %6962, 2
  store i64 %6963, i64* %PC.i567
  %6964 = trunc i64 %6960 to i32
  %6965 = inttoptr i64 %6961 to i32*
  %6966 = load i32, i32* %6965
  %6967 = add i32 %6966, %6964
  %6968 = zext i32 %6967 to i64
  store i64 %6968, i64* %RDI.i569, align 8
  %6969 = icmp ult i32 %6967, %6964
  %6970 = icmp ult i32 %6967, %6966
  %6971 = or i1 %6969, %6970
  %6972 = zext i1 %6971 to i8
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6972, i8* %6973, align 1
  %6974 = and i32 %6967, 255
  %6975 = call i32 @llvm.ctpop.i32(i32 %6974)
  %6976 = trunc i32 %6975 to i8
  %6977 = and i8 %6976, 1
  %6978 = xor i8 %6977, 1
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6978, i8* %6979, align 1
  %6980 = xor i32 %6966, %6964
  %6981 = xor i32 %6980, %6967
  %6982 = lshr i32 %6981, 4
  %6983 = trunc i32 %6982 to i8
  %6984 = and i8 %6983, 1
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6984, i8* %6985, align 1
  %6986 = icmp eq i32 %6967, 0
  %6987 = zext i1 %6986 to i8
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6987, i8* %6988, align 1
  %6989 = lshr i32 %6967, 31
  %6990 = trunc i32 %6989 to i8
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6990, i8* %6991, align 1
  %6992 = lshr i32 %6964, 31
  %6993 = lshr i32 %6966, 31
  %6994 = xor i32 %6989, %6992
  %6995 = xor i32 %6989, %6993
  %6996 = add i32 %6994, %6995
  %6997 = icmp eq i32 %6996, 2
  %6998 = zext i1 %6997 to i8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6998, i8* %6999, align 1
  store %struct.Memory* %loadMem_4a98ea, %struct.Memory** %MEMORY
  %loadMem_4a98ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 33
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 11
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %RDI.i565 = bitcast %union.anon* %7005 to i64*
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 15
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %7008 to i64*
  %7009 = load i64, i64* %RDI.i565
  %7010 = load i64, i64* %RBP.i566
  %7011 = sub i64 %7010, 56
  %7012 = load i64, i64* %PC.i564
  %7013 = add i64 %7012, 3
  store i64 %7013, i64* %PC.i564
  %7014 = trunc i64 %7009 to i32
  %7015 = inttoptr i64 %7011 to i32*
  %7016 = load i32, i32* %7015
  %7017 = sub i32 %7014, %7016
  %7018 = zext i32 %7017 to i64
  store i64 %7018, i64* %RDI.i565, align 8
  %7019 = icmp ult i32 %7014, %7016
  %7020 = zext i1 %7019 to i8
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7020, i8* %7021, align 1
  %7022 = and i32 %7017, 255
  %7023 = call i32 @llvm.ctpop.i32(i32 %7022)
  %7024 = trunc i32 %7023 to i8
  %7025 = and i8 %7024, 1
  %7026 = xor i8 %7025, 1
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7026, i8* %7027, align 1
  %7028 = xor i32 %7016, %7014
  %7029 = xor i32 %7028, %7017
  %7030 = lshr i32 %7029, 4
  %7031 = trunc i32 %7030 to i8
  %7032 = and i8 %7031, 1
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7032, i8* %7033, align 1
  %7034 = icmp eq i32 %7017, 0
  %7035 = zext i1 %7034 to i8
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7035, i8* %7036, align 1
  %7037 = lshr i32 %7017, 31
  %7038 = trunc i32 %7037 to i8
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7038, i8* %7039, align 1
  %7040 = lshr i32 %7014, 31
  %7041 = lshr i32 %7016, 31
  %7042 = xor i32 %7041, %7040
  %7043 = xor i32 %7037, %7040
  %7044 = add i32 %7043, %7042
  %7045 = icmp eq i32 %7044, 2
  %7046 = zext i1 %7045 to i8
  %7047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7046, i8* %7047, align 1
  store %struct.Memory* %loadMem_4a98ec, %struct.Memory** %MEMORY
  %loadMem_4a98ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 33
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %7050 to i64*
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7052 = getelementptr inbounds %struct.GPR, %struct.GPR* %7051, i32 0, i32 11
  %7053 = getelementptr inbounds %struct.Reg, %struct.Reg* %7052, i32 0, i32 0
  %EDI.i562 = bitcast %union.anon* %7053 to i32*
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 5
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %RCX.i563 = bitcast %union.anon* %7056 to i64*
  %7057 = load i32, i32* %EDI.i562
  %7058 = zext i32 %7057 to i64
  %7059 = load i64, i64* %PC.i561
  %7060 = add i64 %7059, 3
  store i64 %7060, i64* %PC.i561
  %7061 = shl i64 %7058, 32
  %7062 = ashr exact i64 %7061, 32
  store i64 %7062, i64* %RCX.i563, align 8
  store %struct.Memory* %loadMem_4a98ef, %struct.Memory** %MEMORY
  %loadMem_4a98f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 33
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %7065 to i64*
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7067 = getelementptr inbounds %struct.GPR, %struct.GPR* %7066, i32 0, i32 5
  %7068 = getelementptr inbounds %struct.Reg, %struct.Reg* %7067, i32 0, i32 0
  %RCX.i560 = bitcast %union.anon* %7068 to i64*
  %7069 = load i64, i64* %RCX.i560
  %7070 = load i64, i64* %PC.i559
  %7071 = add i64 %7070, 4
  store i64 %7071, i64* %PC.i559
  %7072 = sext i64 %7069 to i128
  %7073 = and i128 %7072, -18446744073709551616
  %7074 = zext i64 %7069 to i128
  %7075 = or i128 %7073, %7074
  %7076 = mul i128 84, %7075
  %7077 = trunc i128 %7076 to i64
  store i64 %7077, i64* %RCX.i560, align 8
  %7078 = sext i64 %7077 to i128
  %7079 = icmp ne i128 %7078, %7076
  %7080 = zext i1 %7079 to i8
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7080, i8* %7081, align 1
  %7082 = trunc i128 %7076 to i32
  %7083 = and i32 %7082, 255
  %7084 = call i32 @llvm.ctpop.i32(i32 %7083)
  %7085 = trunc i32 %7084 to i8
  %7086 = and i8 %7085, 1
  %7087 = xor i8 %7086, 1
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7087, i8* %7088, align 1
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7089, align 1
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7090, align 1
  %7091 = lshr i64 %7077, 63
  %7092 = trunc i64 %7091 to i8
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7092, i8* %7093, align 1
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7080, i8* %7094, align 1
  store %struct.Memory* %loadMem_4a98f2, %struct.Memory** %MEMORY
  %loadMem_4a98f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 33
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %7097 to i64*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 1
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %7100 to i64*
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 5
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %RCX.i558 = bitcast %union.anon* %7103 to i64*
  %7104 = load i64, i64* %RAX.i557
  %7105 = load i64, i64* %RCX.i558
  %7106 = load i64, i64* %PC.i556
  %7107 = add i64 %7106, 3
  store i64 %7107, i64* %PC.i556
  %7108 = add i64 %7105, %7104
  store i64 %7108, i64* %RAX.i557, align 8
  %7109 = icmp ult i64 %7108, %7104
  %7110 = icmp ult i64 %7108, %7105
  %7111 = or i1 %7109, %7110
  %7112 = zext i1 %7111 to i8
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7112, i8* %7113, align 1
  %7114 = trunc i64 %7108 to i32
  %7115 = and i32 %7114, 255
  %7116 = call i32 @llvm.ctpop.i32(i32 %7115)
  %7117 = trunc i32 %7116 to i8
  %7118 = and i8 %7117, 1
  %7119 = xor i8 %7118, 1
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7119, i8* %7120, align 1
  %7121 = xor i64 %7105, %7104
  %7122 = xor i64 %7121, %7108
  %7123 = lshr i64 %7122, 4
  %7124 = trunc i64 %7123 to i8
  %7125 = and i8 %7124, 1
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7125, i8* %7126, align 1
  %7127 = icmp eq i64 %7108, 0
  %7128 = zext i1 %7127 to i8
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7128, i8* %7129, align 1
  %7130 = lshr i64 %7108, 63
  %7131 = trunc i64 %7130 to i8
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7131, i8* %7132, align 1
  %7133 = lshr i64 %7104, 63
  %7134 = lshr i64 %7105, 63
  %7135 = xor i64 %7130, %7133
  %7136 = xor i64 %7130, %7134
  %7137 = add i64 %7135, %7136
  %7138 = icmp eq i64 %7137, 2
  %7139 = zext i1 %7138 to i8
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7139, i8* %7140, align 1
  store %struct.Memory* %loadMem_4a98f6, %struct.Memory** %MEMORY
  %loadMem_4a98f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 33
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %7143 to i64*
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7145 = getelementptr inbounds %struct.GPR, %struct.GPR* %7144, i32 0, i32 11
  %7146 = getelementptr inbounds %struct.Reg, %struct.Reg* %7145, i32 0, i32 0
  %RDI.i554 = bitcast %union.anon* %7146 to i64*
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7148 = getelementptr inbounds %struct.GPR, %struct.GPR* %7147, i32 0, i32 15
  %7149 = getelementptr inbounds %struct.Reg, %struct.Reg* %7148, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %7149 to i64*
  %7150 = load i64, i64* %RBP.i555
  %7151 = sub i64 %7150, 7128
  %7152 = load i64, i64* %PC.i553
  %7153 = add i64 %7152, 6
  store i64 %7153, i64* %PC.i553
  %7154 = inttoptr i64 %7151 to i32*
  %7155 = load i32, i32* %7154
  %7156 = zext i32 %7155 to i64
  store i64 %7156, i64* %RDI.i554, align 8
  store %struct.Memory* %loadMem_4a98f9, %struct.Memory** %MEMORY
  %loadMem_4a98ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 33
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %7159 to i64*
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 5
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %RCX.i551 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 15
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %7165 to i64*
  %7166 = load i64, i64* %RBP.i552
  %7167 = sub i64 %7166, 40
  %7168 = load i64, i64* %PC.i550
  %7169 = add i64 %7168, 4
  store i64 %7169, i64* %PC.i550
  %7170 = inttoptr i64 %7167 to i64*
  %7171 = load i64, i64* %7170
  store i64 %7171, i64* %RCX.i551, align 8
  store %struct.Memory* %loadMem_4a98ff, %struct.Memory** %MEMORY
  %loadMem_4a9903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 33
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %7174 to i64*
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 7
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %RDX.i548 = bitcast %union.anon* %7177 to i64*
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7179 = getelementptr inbounds %struct.GPR, %struct.GPR* %7178, i32 0, i32 15
  %7180 = getelementptr inbounds %struct.Reg, %struct.Reg* %7179, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %7180 to i64*
  %7181 = load i64, i64* %RBP.i549
  %7182 = sub i64 %7181, 7152
  %7183 = load i64, i64* %PC.i547
  %7184 = add i64 %7183, 7
  store i64 %7184, i64* %PC.i547
  %7185 = inttoptr i64 %7182 to i32*
  %7186 = load i32, i32* %7185
  %7187 = sext i32 %7186 to i64
  store i64 %7187, i64* %RDX.i548, align 8
  store %struct.Memory* %loadMem_4a9903, %struct.Memory** %MEMORY
  %loadMem_4a990a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 33
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %7190 to i64*
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7192 = getelementptr inbounds %struct.GPR, %struct.GPR* %7191, i32 0, i32 7
  %7193 = getelementptr inbounds %struct.Reg, %struct.Reg* %7192, i32 0, i32 0
  %RDX.i546 = bitcast %union.anon* %7193 to i64*
  %7194 = load i64, i64* %RDX.i546
  %7195 = load i64, i64* %PC.i545
  %7196 = add i64 %7195, 4
  store i64 %7196, i64* %PC.i545
  %7197 = sext i64 %7194 to i128
  %7198 = and i128 %7197, -18446744073709551616
  %7199 = zext i64 %7194 to i128
  %7200 = or i128 %7198, %7199
  %7201 = mul i128 12, %7200
  %7202 = trunc i128 %7201 to i64
  store i64 %7202, i64* %RDX.i546, align 8
  %7203 = sext i64 %7202 to i128
  %7204 = icmp ne i128 %7203, %7201
  %7205 = zext i1 %7204 to i8
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7205, i8* %7206, align 1
  %7207 = trunc i128 %7201 to i32
  %7208 = and i32 %7207, 255
  %7209 = call i32 @llvm.ctpop.i32(i32 %7208)
  %7210 = trunc i32 %7209 to i8
  %7211 = and i8 %7210, 1
  %7212 = xor i8 %7211, 1
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7212, i8* %7213, align 1
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7214, align 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7215, align 1
  %7216 = lshr i64 %7202, 63
  %7217 = trunc i64 %7216 to i8
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7217, i8* %7218, align 1
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7205, i8* %7219, align 1
  store %struct.Memory* %loadMem_4a990a, %struct.Memory** %MEMORY
  %loadMem_4a990e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 33
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %7222 to i64*
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 5
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %RCX.i543 = bitcast %union.anon* %7225 to i64*
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 7
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %RDX.i544 = bitcast %union.anon* %7228 to i64*
  %7229 = load i64, i64* %RCX.i543
  %7230 = load i64, i64* %RDX.i544
  %7231 = load i64, i64* %PC.i542
  %7232 = add i64 %7231, 3
  store i64 %7232, i64* %PC.i542
  %7233 = add i64 %7230, %7229
  store i64 %7233, i64* %RCX.i543, align 8
  %7234 = icmp ult i64 %7233, %7229
  %7235 = icmp ult i64 %7233, %7230
  %7236 = or i1 %7234, %7235
  %7237 = zext i1 %7236 to i8
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7237, i8* %7238, align 1
  %7239 = trunc i64 %7233 to i32
  %7240 = and i32 %7239, 255
  %7241 = call i32 @llvm.ctpop.i32(i32 %7240)
  %7242 = trunc i32 %7241 to i8
  %7243 = and i8 %7242, 1
  %7244 = xor i8 %7243, 1
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7244, i8* %7245, align 1
  %7246 = xor i64 %7230, %7229
  %7247 = xor i64 %7246, %7233
  %7248 = lshr i64 %7247, 4
  %7249 = trunc i64 %7248 to i8
  %7250 = and i8 %7249, 1
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7250, i8* %7251, align 1
  %7252 = icmp eq i64 %7233, 0
  %7253 = zext i1 %7252 to i8
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7253, i8* %7254, align 1
  %7255 = lshr i64 %7233, 63
  %7256 = trunc i64 %7255 to i8
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7256, i8* %7257, align 1
  %7258 = lshr i64 %7229, 63
  %7259 = lshr i64 %7230, 63
  %7260 = xor i64 %7255, %7258
  %7261 = xor i64 %7255, %7259
  %7262 = add i64 %7260, %7261
  %7263 = icmp eq i64 %7262, 2
  %7264 = zext i1 %7263 to i8
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7264, i8* %7265, align 1
  store %struct.Memory* %loadMem_4a990e, %struct.Memory** %MEMORY
  %loadMem_4a9911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 33
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %7268 to i64*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 5
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %RCX.i540 = bitcast %union.anon* %7271 to i64*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 11
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %RDI.i541 = bitcast %union.anon* %7274 to i64*
  %7275 = load i64, i64* %RDI.i541
  %7276 = load i64, i64* %RCX.i540
  %7277 = add i64 %7276, 4
  %7278 = load i64, i64* %PC.i539
  %7279 = add i64 %7278, 3
  store i64 %7279, i64* %PC.i539
  %7280 = trunc i64 %7275 to i32
  %7281 = inttoptr i64 %7277 to i32*
  %7282 = load i32, i32* %7281
  %7283 = add i32 %7282, %7280
  %7284 = zext i32 %7283 to i64
  store i64 %7284, i64* %RDI.i541, align 8
  %7285 = icmp ult i32 %7283, %7280
  %7286 = icmp ult i32 %7283, %7282
  %7287 = or i1 %7285, %7286
  %7288 = zext i1 %7287 to i8
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7288, i8* %7289, align 1
  %7290 = and i32 %7283, 255
  %7291 = call i32 @llvm.ctpop.i32(i32 %7290)
  %7292 = trunc i32 %7291 to i8
  %7293 = and i8 %7292, 1
  %7294 = xor i8 %7293, 1
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7294, i8* %7295, align 1
  %7296 = xor i32 %7282, %7280
  %7297 = xor i32 %7296, %7283
  %7298 = lshr i32 %7297, 4
  %7299 = trunc i32 %7298 to i8
  %7300 = and i8 %7299, 1
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7300, i8* %7301, align 1
  %7302 = icmp eq i32 %7283, 0
  %7303 = zext i1 %7302 to i8
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7303, i8* %7304, align 1
  %7305 = lshr i32 %7283, 31
  %7306 = trunc i32 %7305 to i8
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7306, i8* %7307, align 1
  %7308 = lshr i32 %7280, 31
  %7309 = lshr i32 %7282, 31
  %7310 = xor i32 %7305, %7308
  %7311 = xor i32 %7305, %7309
  %7312 = add i32 %7310, %7311
  %7313 = icmp eq i32 %7312, 2
  %7314 = zext i1 %7313 to i8
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7314, i8* %7315, align 1
  store %struct.Memory* %loadMem_4a9911, %struct.Memory** %MEMORY
  %loadMem_4a9914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7317 = getelementptr inbounds %struct.GPR, %struct.GPR* %7316, i32 0, i32 33
  %7318 = getelementptr inbounds %struct.Reg, %struct.Reg* %7317, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %7318 to i64*
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 11
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %RDI.i537 = bitcast %union.anon* %7321 to i64*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7323 = getelementptr inbounds %struct.GPR, %struct.GPR* %7322, i32 0, i32 15
  %7324 = getelementptr inbounds %struct.Reg, %struct.Reg* %7323, i32 0, i32 0
  %RBP.i538 = bitcast %union.anon* %7324 to i64*
  %7325 = load i64, i64* %RDI.i537
  %7326 = load i64, i64* %RBP.i538
  %7327 = sub i64 %7326, 60
  %7328 = load i64, i64* %PC.i536
  %7329 = add i64 %7328, 3
  store i64 %7329, i64* %PC.i536
  %7330 = trunc i64 %7325 to i32
  %7331 = inttoptr i64 %7327 to i32*
  %7332 = load i32, i32* %7331
  %7333 = sub i32 %7330, %7332
  %7334 = zext i32 %7333 to i64
  store i64 %7334, i64* %RDI.i537, align 8
  %7335 = icmp ult i32 %7330, %7332
  %7336 = zext i1 %7335 to i8
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7336, i8* %7337, align 1
  %7338 = and i32 %7333, 255
  %7339 = call i32 @llvm.ctpop.i32(i32 %7338)
  %7340 = trunc i32 %7339 to i8
  %7341 = and i8 %7340, 1
  %7342 = xor i8 %7341, 1
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7342, i8* %7343, align 1
  %7344 = xor i32 %7332, %7330
  %7345 = xor i32 %7344, %7333
  %7346 = lshr i32 %7345, 4
  %7347 = trunc i32 %7346 to i8
  %7348 = and i8 %7347, 1
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7348, i8* %7349, align 1
  %7350 = icmp eq i32 %7333, 0
  %7351 = zext i1 %7350 to i8
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7351, i8* %7352, align 1
  %7353 = lshr i32 %7333, 31
  %7354 = trunc i32 %7353 to i8
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7354, i8* %7355, align 1
  %7356 = lshr i32 %7330, 31
  %7357 = lshr i32 %7332, 31
  %7358 = xor i32 %7357, %7356
  %7359 = xor i32 %7353, %7356
  %7360 = add i32 %7359, %7358
  %7361 = icmp eq i32 %7360, 2
  %7362 = zext i1 %7361 to i8
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7362, i8* %7363, align 1
  store %struct.Memory* %loadMem_4a9914, %struct.Memory** %MEMORY
  %loadMem_4a9917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 33
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %7366 to i64*
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7368 = getelementptr inbounds %struct.GPR, %struct.GPR* %7367, i32 0, i32 11
  %7369 = getelementptr inbounds %struct.Reg, %struct.Reg* %7368, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %7369 to i32*
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7371 = getelementptr inbounds %struct.GPR, %struct.GPR* %7370, i32 0, i32 5
  %7372 = getelementptr inbounds %struct.Reg, %struct.Reg* %7371, i32 0, i32 0
  %RCX.i535 = bitcast %union.anon* %7372 to i64*
  %7373 = load i32, i32* %EDI.i
  %7374 = zext i32 %7373 to i64
  %7375 = load i64, i64* %PC.i534
  %7376 = add i64 %7375, 3
  store i64 %7376, i64* %PC.i534
  %7377 = shl i64 %7374, 32
  %7378 = ashr exact i64 %7377, 32
  store i64 %7378, i64* %RCX.i535, align 8
  store %struct.Memory* %loadMem_4a9917, %struct.Memory** %MEMORY
  %loadMem_4a991a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 33
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %7381 to i64*
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 9
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %7385 = bitcast %union.anon* %7384 to %struct.anon.2*
  %SIL.i531 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7385, i32 0, i32 0
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 1
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 5
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RCX.i533 = bitcast %union.anon* %7391 to i64*
  %7392 = load i64, i64* %RAX.i532
  %7393 = load i64, i64* %RCX.i533
  %7394 = add i64 %7393, %7392
  %7395 = load i8, i8* %SIL.i531
  %7396 = zext i8 %7395 to i64
  %7397 = load i64, i64* %PC.i530
  %7398 = add i64 %7397, 4
  store i64 %7398, i64* %PC.i530
  %7399 = inttoptr i64 %7394 to i8*
  store i8 %7395, i8* %7399
  store %struct.Memory* %loadMem_4a991a, %struct.Memory** %MEMORY
  %loadMem_4a991e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 1
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %7405 to i64*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 15
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %RBP.i529 = bitcast %union.anon* %7408 to i64*
  %7409 = load i64, i64* %RBP.i529
  %7410 = sub i64 %7409, 7152
  %7411 = load i64, i64* %PC.i527
  %7412 = add i64 %7411, 6
  store i64 %7412, i64* %PC.i527
  %7413 = inttoptr i64 %7410 to i32*
  %7414 = load i32, i32* %7413
  %7415 = zext i32 %7414 to i64
  store i64 %7415, i64* %RAX.i528, align 8
  store %struct.Memory* %loadMem_4a991e, %struct.Memory** %MEMORY
  %loadMem_4a9924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7417 = getelementptr inbounds %struct.GPR, %struct.GPR* %7416, i32 0, i32 33
  %7418 = getelementptr inbounds %struct.Reg, %struct.Reg* %7417, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %7418 to i64*
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 1
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %RAX.i526 = bitcast %union.anon* %7421 to i64*
  %7422 = load i64, i64* %RAX.i526
  %7423 = load i64, i64* %PC.i525
  %7424 = add i64 %7423, 3
  store i64 %7424, i64* %PC.i525
  %7425 = trunc i64 %7422 to i32
  %7426 = add i32 1, %7425
  %7427 = zext i32 %7426 to i64
  store i64 %7427, i64* %RAX.i526, align 8
  %7428 = icmp ult i32 %7426, %7425
  %7429 = icmp ult i32 %7426, 1
  %7430 = or i1 %7428, %7429
  %7431 = zext i1 %7430 to i8
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7431, i8* %7432, align 1
  %7433 = and i32 %7426, 255
  %7434 = call i32 @llvm.ctpop.i32(i32 %7433)
  %7435 = trunc i32 %7434 to i8
  %7436 = and i8 %7435, 1
  %7437 = xor i8 %7436, 1
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7437, i8* %7438, align 1
  %7439 = xor i64 1, %7422
  %7440 = trunc i64 %7439 to i32
  %7441 = xor i32 %7440, %7426
  %7442 = lshr i32 %7441, 4
  %7443 = trunc i32 %7442 to i8
  %7444 = and i8 %7443, 1
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7444, i8* %7445, align 1
  %7446 = icmp eq i32 %7426, 0
  %7447 = zext i1 %7446 to i8
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7447, i8* %7448, align 1
  %7449 = lshr i32 %7426, 31
  %7450 = trunc i32 %7449 to i8
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7450, i8* %7451, align 1
  %7452 = lshr i32 %7425, 31
  %7453 = xor i32 %7449, %7452
  %7454 = add i32 %7453, %7449
  %7455 = icmp eq i32 %7454, 2
  %7456 = zext i1 %7455 to i8
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7456, i8* %7457, align 1
  store %struct.Memory* %loadMem_4a9924, %struct.Memory** %MEMORY
  %loadMem_4a9927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 33
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %7460 to i64*
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7462 = getelementptr inbounds %struct.GPR, %struct.GPR* %7461, i32 0, i32 1
  %7463 = getelementptr inbounds %struct.Reg, %struct.Reg* %7462, i32 0, i32 0
  %EAX.i523 = bitcast %union.anon* %7463 to i32*
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7465 = getelementptr inbounds %struct.GPR, %struct.GPR* %7464, i32 0, i32 15
  %7466 = getelementptr inbounds %struct.Reg, %struct.Reg* %7465, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %7466 to i64*
  %7467 = load i64, i64* %RBP.i524
  %7468 = sub i64 %7467, 7152
  %7469 = load i32, i32* %EAX.i523
  %7470 = zext i32 %7469 to i64
  %7471 = load i64, i64* %PC.i522
  %7472 = add i64 %7471, 6
  store i64 %7472, i64* %PC.i522
  %7473 = inttoptr i64 %7468 to i32*
  store i32 %7469, i32* %7473
  store %struct.Memory* %loadMem_4a9927, %struct.Memory** %MEMORY
  %loadMem_4a992d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 33
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %7476 to i64*
  %7477 = load i64, i64* %PC.i521
  %7478 = add i64 %7477, -161
  %7479 = load i64, i64* %PC.i521
  %7480 = add i64 %7479, 5
  store i64 %7480, i64* %PC.i521
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7478, i64* %7481, align 8
  store %struct.Memory* %loadMem_4a992d, %struct.Memory** %MEMORY
  br label %block_.L_4a988c

block_.L_4a9932:                                  ; preds = %block_.L_4a988c
  %loadMem_4a9932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7483 = getelementptr inbounds %struct.GPR, %struct.GPR* %7482, i32 0, i32 33
  %7484 = getelementptr inbounds %struct.Reg, %struct.Reg* %7483, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %7484 to i64*
  %7485 = load i64, i64* %PC.i520
  %7486 = add i64 %7485, 8
  store i64 %7486, i64* %PC.i520
  %7487 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %7488 = sub i32 %7487, 3
  %7489 = icmp ult i32 %7487, 3
  %7490 = zext i1 %7489 to i8
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7490, i8* %7491, align 1
  %7492 = and i32 %7488, 255
  %7493 = call i32 @llvm.ctpop.i32(i32 %7492)
  %7494 = trunc i32 %7493 to i8
  %7495 = and i8 %7494, 1
  %7496 = xor i8 %7495, 1
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7496, i8* %7497, align 1
  %7498 = xor i32 %7487, 3
  %7499 = xor i32 %7498, %7488
  %7500 = lshr i32 %7499, 4
  %7501 = trunc i32 %7500 to i8
  %7502 = and i8 %7501, 1
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7502, i8* %7503, align 1
  %7504 = icmp eq i32 %7488, 0
  %7505 = zext i1 %7504 to i8
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7505, i8* %7506, align 1
  %7507 = lshr i32 %7488, 31
  %7508 = trunc i32 %7507 to i8
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7508, i8* %7509, align 1
  %7510 = lshr i32 %7487, 31
  %7511 = xor i32 %7507, %7510
  %7512 = add i32 %7511, %7510
  %7513 = icmp eq i32 %7512, 2
  %7514 = zext i1 %7513 to i8
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7514, i8* %7515, align 1
  store %struct.Memory* %loadMem_4a9932, %struct.Memory** %MEMORY
  %loadMem_4a993a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7517 = getelementptr inbounds %struct.GPR, %struct.GPR* %7516, i32 0, i32 33
  %7518 = getelementptr inbounds %struct.Reg, %struct.Reg* %7517, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %7518 to i64*
  %7519 = load i64, i64* %PC.i519
  %7520 = add i64 %7519, 294
  %7521 = load i64, i64* %PC.i519
  %7522 = add i64 %7521, 6
  %7523 = load i64, i64* %PC.i519
  %7524 = add i64 %7523, 6
  store i64 %7524, i64* %PC.i519
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7526 = load i8, i8* %7525, align 1
  %7527 = icmp ne i8 %7526, 0
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7529 = load i8, i8* %7528, align 1
  %7530 = icmp ne i8 %7529, 0
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7532 = load i8, i8* %7531, align 1
  %7533 = icmp ne i8 %7532, 0
  %7534 = xor i1 %7530, %7533
  %7535 = or i1 %7527, %7534
  %7536 = zext i1 %7535 to i8
  store i8 %7536, i8* %BRANCH_TAKEN, align 1
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7538 = select i1 %7535, i64 %7520, i64 %7522
  store i64 %7538, i64* %7537, align 8
  store %struct.Memory* %loadMem_4a993a, %struct.Memory** %MEMORY
  %loadBr_4a993a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a993a = icmp eq i8 %loadBr_4a993a, 1
  br i1 %cmpBr_4a993a, label %block_.L_4a9a60, label %block_4a9940

block_4a9940:                                     ; preds = %block_.L_4a9932
  %loadMem_4a9940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 33
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %7541 to i64*
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7543 = getelementptr inbounds %struct.GPR, %struct.GPR* %7542, i32 0, i32 15
  %7544 = getelementptr inbounds %struct.Reg, %struct.Reg* %7543, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %7544 to i64*
  %7545 = load i64, i64* %RBP.i518
  %7546 = sub i64 %7545, 7144
  %7547 = load i64, i64* %PC.i517
  %7548 = add i64 %7547, 10
  store i64 %7548, i64* %PC.i517
  %7549 = inttoptr i64 %7546 to i32*
  store i32 20, i32* %7549
  store %struct.Memory* %loadMem_4a9940, %struct.Memory** %MEMORY
  br label %block_.L_4a994a

block_.L_4a994a:                                  ; preds = %block_.L_4a9a0e, %block_4a9940
  %loadMem_4a994a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 33
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 15
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %7555 to i64*
  %7556 = load i64, i64* %RBP.i516
  %7557 = sub i64 %7556, 7144
  %7558 = load i64, i64* %PC.i515
  %7559 = add i64 %7558, 7
  store i64 %7559, i64* %PC.i515
  %7560 = inttoptr i64 %7557 to i32*
  %7561 = load i32, i32* %7560
  %7562 = sub i32 %7561, 64
  %7563 = icmp ult i32 %7561, 64
  %7564 = zext i1 %7563 to i8
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7564, i8* %7565, align 1
  %7566 = and i32 %7562, 255
  %7567 = call i32 @llvm.ctpop.i32(i32 %7566)
  %7568 = trunc i32 %7567 to i8
  %7569 = and i8 %7568, 1
  %7570 = xor i8 %7569, 1
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7570, i8* %7571, align 1
  %7572 = xor i32 %7561, 64
  %7573 = xor i32 %7572, %7562
  %7574 = lshr i32 %7573, 4
  %7575 = trunc i32 %7574 to i8
  %7576 = and i8 %7575, 1
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7576, i8* %7577, align 1
  %7578 = icmp eq i32 %7562, 0
  %7579 = zext i1 %7578 to i8
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7579, i8* %7580, align 1
  %7581 = lshr i32 %7562, 31
  %7582 = trunc i32 %7581 to i8
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7582, i8* %7583, align 1
  %7584 = lshr i32 %7561, 31
  %7585 = xor i32 %7581, %7584
  %7586 = add i32 %7585, %7584
  %7587 = icmp eq i32 %7586, 2
  %7588 = zext i1 %7587 to i8
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7588, i8* %7589, align 1
  store %struct.Memory* %loadMem_4a994a, %struct.Memory** %MEMORY
  %loadMem_4a9951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 33
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %7592 to i64*
  %7593 = load i64, i64* %PC.i514
  %7594 = add i64 %7593, 240
  %7595 = load i64, i64* %PC.i514
  %7596 = add i64 %7595, 6
  %7597 = load i64, i64* %PC.i514
  %7598 = add i64 %7597, 6
  store i64 %7598, i64* %PC.i514
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7600 = load i8, i8* %7599, align 1
  store i8 %7600, i8* %BRANCH_TAKEN, align 1
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7602 = icmp ne i8 %7600, 0
  %7603 = select i1 %7602, i64 %7594, i64 %7596
  store i64 %7603, i64* %7601, align 8
  store %struct.Memory* %loadMem_4a9951, %struct.Memory** %MEMORY
  %loadBr_4a9951 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9951 = icmp eq i8 %loadBr_4a9951, 1
  br i1 %cmpBr_4a9951, label %block_.L_4a9a41, label %block_4a9957

block_4a9957:                                     ; preds = %block_.L_4a994a
  %loadMem_4a9957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 33
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %7606 to i64*
  %7607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7608 = getelementptr inbounds %struct.GPR, %struct.GPR* %7607, i32 0, i32 15
  %7609 = getelementptr inbounds %struct.Reg, %struct.Reg* %7608, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %7609 to i64*
  %7610 = load i64, i64* %RBP.i513
  %7611 = sub i64 %7610, 7148
  %7612 = load i64, i64* %PC.i512
  %7613 = add i64 %7612, 10
  store i64 %7613, i64* %PC.i512
  %7614 = inttoptr i64 %7611 to i32*
  store i32 20, i32* %7614
  store %struct.Memory* %loadMem_4a9957, %struct.Memory** %MEMORY
  br label %block_.L_4a9961

block_.L_4a9961:                                  ; preds = %block_.L_4a99fa, %block_4a9957
  %loadMem_4a9961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7616 = getelementptr inbounds %struct.GPR, %struct.GPR* %7615, i32 0, i32 33
  %7617 = getelementptr inbounds %struct.Reg, %struct.Reg* %7616, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %7617 to i64*
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7619 = getelementptr inbounds %struct.GPR, %struct.GPR* %7618, i32 0, i32 15
  %7620 = getelementptr inbounds %struct.Reg, %struct.Reg* %7619, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %7620 to i64*
  %7621 = load i64, i64* %RBP.i511
  %7622 = sub i64 %7621, 7148
  %7623 = load i64, i64* %PC.i510
  %7624 = add i64 %7623, 7
  store i64 %7624, i64* %PC.i510
  %7625 = inttoptr i64 %7622 to i32*
  %7626 = load i32, i32* %7625
  %7627 = sub i32 %7626, 64
  %7628 = icmp ult i32 %7626, 64
  %7629 = zext i1 %7628 to i8
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7629, i8* %7630, align 1
  %7631 = and i32 %7627, 255
  %7632 = call i32 @llvm.ctpop.i32(i32 %7631)
  %7633 = trunc i32 %7632 to i8
  %7634 = and i8 %7633, 1
  %7635 = xor i8 %7634, 1
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7635, i8* %7636, align 1
  %7637 = xor i32 %7626, 64
  %7638 = xor i32 %7637, %7627
  %7639 = lshr i32 %7638, 4
  %7640 = trunc i32 %7639 to i8
  %7641 = and i8 %7640, 1
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7641, i8* %7642, align 1
  %7643 = icmp eq i32 %7627, 0
  %7644 = zext i1 %7643 to i8
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7644, i8* %7645, align 1
  %7646 = lshr i32 %7627, 31
  %7647 = trunc i32 %7646 to i8
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7647, i8* %7648, align 1
  %7649 = lshr i32 %7626, 31
  %7650 = xor i32 %7646, %7649
  %7651 = add i32 %7650, %7649
  %7652 = icmp eq i32 %7651, 2
  %7653 = zext i1 %7652 to i8
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7653, i8* %7654, align 1
  store %struct.Memory* %loadMem_4a9961, %struct.Memory** %MEMORY
  %loadMem_4a9968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7656 = getelementptr inbounds %struct.GPR, %struct.GPR* %7655, i32 0, i32 33
  %7657 = getelementptr inbounds %struct.Reg, %struct.Reg* %7656, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %7657 to i64*
  %7658 = load i64, i64* %PC.i509
  %7659 = add i64 %7658, 166
  %7660 = load i64, i64* %PC.i509
  %7661 = add i64 %7660, 6
  %7662 = load i64, i64* %PC.i509
  %7663 = add i64 %7662, 6
  store i64 %7663, i64* %PC.i509
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7665 = load i8, i8* %7664, align 1
  store i8 %7665, i8* %BRANCH_TAKEN, align 1
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7667 = icmp ne i8 %7665, 0
  %7668 = select i1 %7667, i64 %7659, i64 %7661
  store i64 %7668, i64* %7666, align 8
  store %struct.Memory* %loadMem_4a9968, %struct.Memory** %MEMORY
  %loadBr_4a9968 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9968 = icmp eq i8 %loadBr_4a9968, 1
  br i1 %cmpBr_4a9968, label %block_.L_4a9a0e, label %block_4a996e

block_4a996e:                                     ; preds = %block_.L_4a9961
  %loadMem_4a996e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 33
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %7671 to i64*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 1
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RAX.i507 = bitcast %union.anon* %7674 to i64*
  %7675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7676 = getelementptr inbounds %struct.GPR, %struct.GPR* %7675, i32 0, i32 15
  %7677 = getelementptr inbounds %struct.Reg, %struct.Reg* %7676, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %7677 to i64*
  %7678 = load i64, i64* %RBP.i508
  %7679 = sub i64 %7678, 7144
  %7680 = load i64, i64* %PC.i506
  %7681 = add i64 %7680, 6
  store i64 %7681, i64* %PC.i506
  %7682 = inttoptr i64 %7679 to i32*
  %7683 = load i32, i32* %7682
  %7684 = zext i32 %7683 to i64
  store i64 %7684, i64* %RAX.i507, align 8
  store %struct.Memory* %loadMem_4a996e, %struct.Memory** %MEMORY
  %loadMem_4a9974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7686 = getelementptr inbounds %struct.GPR, %struct.GPR* %7685, i32 0, i32 33
  %7687 = getelementptr inbounds %struct.Reg, %struct.Reg* %7686, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %7687 to i64*
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7689 = getelementptr inbounds %struct.GPR, %struct.GPR* %7688, i32 0, i32 1
  %7690 = getelementptr inbounds %struct.Reg, %struct.Reg* %7689, i32 0, i32 0
  %EAX.i504 = bitcast %union.anon* %7690 to i32*
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7692 = getelementptr inbounds %struct.GPR, %struct.GPR* %7691, i32 0, i32 15
  %7693 = getelementptr inbounds %struct.Reg, %struct.Reg* %7692, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %7693 to i64*
  %7694 = load i32, i32* %EAX.i504
  %7695 = zext i32 %7694 to i64
  %7696 = load i64, i64* %RBP.i505
  %7697 = sub i64 %7696, 7124
  %7698 = load i64, i64* %PC.i503
  %7699 = add i64 %7698, 6
  store i64 %7699, i64* %PC.i503
  %7700 = inttoptr i64 %7697 to i32*
  %7701 = load i32, i32* %7700
  %7702 = sub i32 %7694, %7701
  %7703 = icmp ult i32 %7694, %7701
  %7704 = zext i1 %7703 to i8
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7704, i8* %7705, align 1
  %7706 = and i32 %7702, 255
  %7707 = call i32 @llvm.ctpop.i32(i32 %7706)
  %7708 = trunc i32 %7707 to i8
  %7709 = and i8 %7708, 1
  %7710 = xor i8 %7709, 1
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7710, i8* %7711, align 1
  %7712 = xor i32 %7701, %7694
  %7713 = xor i32 %7712, %7702
  %7714 = lshr i32 %7713, 4
  %7715 = trunc i32 %7714 to i8
  %7716 = and i8 %7715, 1
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7716, i8* %7717, align 1
  %7718 = icmp eq i32 %7702, 0
  %7719 = zext i1 %7718 to i8
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7719, i8* %7720, align 1
  %7721 = lshr i32 %7702, 31
  %7722 = trunc i32 %7721 to i8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7722, i8* %7723, align 1
  %7724 = lshr i32 %7694, 31
  %7725 = lshr i32 %7701, 31
  %7726 = xor i32 %7725, %7724
  %7727 = xor i32 %7721, %7724
  %7728 = add i32 %7727, %7726
  %7729 = icmp eq i32 %7728, 2
  %7730 = zext i1 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7730, i8* %7731, align 1
  store %struct.Memory* %loadMem_4a9974, %struct.Memory** %MEMORY
  %loadMem_4a997a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %PC.i502
  %7736 = add i64 %7735, 60
  %7737 = load i64, i64* %PC.i502
  %7738 = add i64 %7737, 6
  %7739 = load i64, i64* %PC.i502
  %7740 = add i64 %7739, 6
  store i64 %7740, i64* %PC.i502
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7742 = load i8, i8* %7741, align 1
  %7743 = icmp eq i8 %7742, 0
  %7744 = zext i1 %7743 to i8
  store i8 %7744, i8* %BRANCH_TAKEN, align 1
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7746 = select i1 %7743, i64 %7736, i64 %7738
  store i64 %7746, i64* %7745, align 8
  store %struct.Memory* %loadMem_4a997a, %struct.Memory** %MEMORY
  %loadBr_4a997a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a997a = icmp eq i8 %loadBr_4a997a, 1
  br i1 %cmpBr_4a997a, label %block_.L_4a99b6, label %block_4a9980

block_4a9980:                                     ; preds = %block_4a996e
  %loadMem_4a9980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 33
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %7749 to i64*
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 1
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %7752 to i64*
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 15
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %7755 to i64*
  %7756 = load i64, i64* %RBP.i501
  %7757 = sub i64 %7756, 7148
  %7758 = load i64, i64* %PC.i499
  %7759 = add i64 %7758, 6
  store i64 %7759, i64* %PC.i499
  %7760 = inttoptr i64 %7757 to i32*
  %7761 = load i32, i32* %7760
  %7762 = zext i32 %7761 to i64
  store i64 %7762, i64* %RAX.i500, align 8
  store %struct.Memory* %loadMem_4a9980, %struct.Memory** %MEMORY
  %loadMem_4a9986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 33
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %7765 to i64*
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 1
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %EAX.i497 = bitcast %union.anon* %7768 to i32*
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 15
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %RBP.i498 = bitcast %union.anon* %7771 to i64*
  %7772 = load i32, i32* %EAX.i497
  %7773 = zext i32 %7772 to i64
  %7774 = load i64, i64* %RBP.i498
  %7775 = sub i64 %7774, 7128
  %7776 = load i64, i64* %PC.i496
  %7777 = add i64 %7776, 6
  store i64 %7777, i64* %PC.i496
  %7778 = inttoptr i64 %7775 to i32*
  %7779 = load i32, i32* %7778
  %7780 = sub i32 %7772, %7779
  %7781 = icmp ult i32 %7772, %7779
  %7782 = zext i1 %7781 to i8
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7782, i8* %7783, align 1
  %7784 = and i32 %7780, 255
  %7785 = call i32 @llvm.ctpop.i32(i32 %7784)
  %7786 = trunc i32 %7785 to i8
  %7787 = and i8 %7786, 1
  %7788 = xor i8 %7787, 1
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7788, i8* %7789, align 1
  %7790 = xor i32 %7779, %7772
  %7791 = xor i32 %7790, %7780
  %7792 = lshr i32 %7791, 4
  %7793 = trunc i32 %7792 to i8
  %7794 = and i8 %7793, 1
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7794, i8* %7795, align 1
  %7796 = icmp eq i32 %7780, 0
  %7797 = zext i1 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7797, i8* %7798, align 1
  %7799 = lshr i32 %7780, 31
  %7800 = trunc i32 %7799 to i8
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7800, i8* %7801, align 1
  %7802 = lshr i32 %7772, 31
  %7803 = lshr i32 %7779, 31
  %7804 = xor i32 %7803, %7802
  %7805 = xor i32 %7799, %7802
  %7806 = add i32 %7805, %7804
  %7807 = icmp eq i32 %7806, 2
  %7808 = zext i1 %7807 to i8
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7808, i8* %7809, align 1
  store %struct.Memory* %loadMem_4a9986, %struct.Memory** %MEMORY
  %loadMem_4a998c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 33
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %7812 to i64*
  %7813 = load i64, i64* %PC.i495
  %7814 = add i64 %7813, 42
  %7815 = load i64, i64* %PC.i495
  %7816 = add i64 %7815, 6
  %7817 = load i64, i64* %PC.i495
  %7818 = add i64 %7817, 6
  store i64 %7818, i64* %PC.i495
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7820 = load i8, i8* %7819, align 1
  %7821 = icmp eq i8 %7820, 0
  %7822 = zext i1 %7821 to i8
  store i8 %7822, i8* %BRANCH_TAKEN, align 1
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7824 = select i1 %7821, i64 %7814, i64 %7816
  store i64 %7824, i64* %7823, align 8
  store %struct.Memory* %loadMem_4a998c, %struct.Memory** %MEMORY
  %loadBr_4a998c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a998c = icmp eq i8 %loadBr_4a998c, 1
  br i1 %cmpBr_4a998c, label %block_.L_4a99b6, label %block_4a9992

block_4a9992:                                     ; preds = %block_4a9980
  %loadMem_4a9992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 33
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %7827 to i64*
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 9
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %RSI.i494 = bitcast %union.anon* %7830 to i64*
  %7831 = load i64, i64* %PC.i493
  %7832 = add i64 %7831, 10
  store i64 %7832, i64* %PC.i493
  store i64 ptrtoint (%G__0x588897_type* @G__0x588897 to i64), i64* %RSI.i494, align 8
  store %struct.Memory* %loadMem_4a9992, %struct.Memory** %MEMORY
  %loadMem_4a999c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 33
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %7835 to i64*
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 11
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %RDI.i492 = bitcast %union.anon* %7838 to i64*
  %7839 = load i64, i64* %PC.i491
  %7840 = add i64 %7839, 8
  store i64 %7840, i64* %PC.i491
  %7841 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %7841, i64* %RDI.i492, align 8
  store %struct.Memory* %loadMem_4a999c, %struct.Memory** %MEMORY
  %loadMem_4a99a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 1
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %7848 = bitcast %union.anon* %7847 to %struct.anon.2*
  %AL.i490 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7848, i32 0, i32 0
  %7849 = load i64, i64* %PC.i489
  %7850 = add i64 %7849, 2
  store i64 %7850, i64* %PC.i489
  store i8 0, i8* %AL.i490, align 1
  store %struct.Memory* %loadMem_4a99a4, %struct.Memory** %MEMORY
  %loadMem1_4a99a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 33
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %7853 to i64*
  %7854 = load i64, i64* %PC.i488
  %7855 = add i64 %7854, -690390
  %7856 = load i64, i64* %PC.i488
  %7857 = add i64 %7856, 5
  %7858 = load i64, i64* %PC.i488
  %7859 = add i64 %7858, 5
  store i64 %7859, i64* %PC.i488
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7861 = load i64, i64* %7860, align 8
  %7862 = add i64 %7861, -8
  %7863 = inttoptr i64 %7862 to i64*
  store i64 %7857, i64* %7863
  store i64 %7862, i64* %7860, align 8
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7855, i64* %7864, align 8
  store %struct.Memory* %loadMem1_4a99a6, %struct.Memory** %MEMORY
  %loadMem2_4a99a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a99a6 = load i64, i64* %3
  %7865 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a99a6)
  store %struct.Memory* %7865, %struct.Memory** %MEMORY
  %loadMem_4a99ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 33
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 1
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %EAX.i484 = bitcast %union.anon* %7871 to i32*
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 15
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %7874 to i64*
  %7875 = load i64, i64* %RBP.i485
  %7876 = sub i64 %7875, 7200
  %7877 = load i32, i32* %EAX.i484
  %7878 = zext i32 %7877 to i64
  %7879 = load i64, i64* %PC.i483
  %7880 = add i64 %7879, 6
  store i64 %7880, i64* %PC.i483
  %7881 = inttoptr i64 %7876 to i32*
  store i32 %7877, i32* %7881
  store %struct.Memory* %loadMem_4a99ab, %struct.Memory** %MEMORY
  %loadMem_4a99b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 33
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %7884 to i64*
  %7885 = load i64, i64* %PC.i482
  %7886 = add i64 %7885, 68
  %7887 = load i64, i64* %PC.i482
  %7888 = add i64 %7887, 5
  store i64 %7888, i64* %PC.i482
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7886, i64* %7889, align 8
  store %struct.Memory* %loadMem_4a99b1, %struct.Memory** %MEMORY
  br label %block_.L_4a99f5

block_.L_4a99b6:                                  ; preds = %block_4a9980, %block_4a996e
  %loadMem_4a99b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 33
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 9
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RSI.i481 = bitcast %union.anon* %7895 to i64*
  %7896 = load i64, i64* %PC.i480
  %7897 = add i64 %7896, 10
  store i64 %7897, i64* %PC.i480
  store i64 ptrtoint (%G__0x579d93_type* @G__0x579d93 to i64), i64* %RSI.i481, align 8
  store %struct.Memory* %loadMem_4a99b6, %struct.Memory** %MEMORY
  %loadMem_4a99c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7899 = getelementptr inbounds %struct.GPR, %struct.GPR* %7898, i32 0, i32 33
  %7900 = getelementptr inbounds %struct.Reg, %struct.Reg* %7899, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %7900 to i64*
  %7901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7902 = getelementptr inbounds %struct.GPR, %struct.GPR* %7901, i32 0, i32 1
  %7903 = getelementptr inbounds %struct.Reg, %struct.Reg* %7902, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %7903 to i64*
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 15
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %7906 to i64*
  %7907 = load i64, i64* %RBP.i479
  %7908 = sub i64 %7907, 7120
  %7909 = load i64, i64* %PC.i477
  %7910 = add i64 %7909, 7
  store i64 %7910, i64* %PC.i477
  store i64 %7908, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_4a99c0, %struct.Memory** %MEMORY
  %loadMem_4a99c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 33
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %7913 to i64*
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 11
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %RDI.i476 = bitcast %union.anon* %7916 to i64*
  %7917 = load i64, i64* %PC.i475
  %7918 = add i64 %7917, 8
  store i64 %7918, i64* %PC.i475
  %7919 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %7919, i64* %RDI.i476, align 8
  store %struct.Memory* %loadMem_4a99c7, %struct.Memory** %MEMORY
  %loadMem_4a99cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 33
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %7922 to i64*
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 5
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %RCX.i473 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 15
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %7928 to i64*
  %7929 = load i64, i64* %RBP.i474
  %7930 = sub i64 %7929, 7144
  %7931 = load i64, i64* %PC.i472
  %7932 = add i64 %7931, 7
  store i64 %7932, i64* %PC.i472
  %7933 = inttoptr i64 %7930 to i32*
  %7934 = load i32, i32* %7933
  %7935 = sext i32 %7934 to i64
  store i64 %7935, i64* %RCX.i473, align 8
  store %struct.Memory* %loadMem_4a99cf, %struct.Memory** %MEMORY
  %loadMem_4a99d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 33
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %7938 to i64*
  %7939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7940 = getelementptr inbounds %struct.GPR, %struct.GPR* %7939, i32 0, i32 5
  %7941 = getelementptr inbounds %struct.Reg, %struct.Reg* %7940, i32 0, i32 0
  %RCX.i471 = bitcast %union.anon* %7941 to i64*
  %7942 = load i64, i64* %RCX.i471
  %7943 = load i64, i64* %PC.i470
  %7944 = add i64 %7943, 4
  store i64 %7944, i64* %PC.i470
  %7945 = sext i64 %7942 to i128
  %7946 = and i128 %7945, -18446744073709551616
  %7947 = zext i64 %7942 to i128
  %7948 = or i128 %7946, %7947
  %7949 = mul i128 84, %7948
  %7950 = trunc i128 %7949 to i64
  store i64 %7950, i64* %RCX.i471, align 8
  %7951 = sext i64 %7950 to i128
  %7952 = icmp ne i128 %7951, %7949
  %7953 = zext i1 %7952 to i8
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7953, i8* %7954, align 1
  %7955 = trunc i128 %7949 to i32
  %7956 = and i32 %7955, 255
  %7957 = call i32 @llvm.ctpop.i32(i32 %7956)
  %7958 = trunc i32 %7957 to i8
  %7959 = and i8 %7958, 1
  %7960 = xor i8 %7959, 1
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7960, i8* %7961, align 1
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7962, align 1
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7963, align 1
  %7964 = lshr i64 %7950, 63
  %7965 = trunc i64 %7964 to i8
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7965, i8* %7966, align 1
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7953, i8* %7967, align 1
  store %struct.Memory* %loadMem_4a99d6, %struct.Memory** %MEMORY
  %loadMem_4a99da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 33
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %7970 to i64*
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7972 = getelementptr inbounds %struct.GPR, %struct.GPR* %7971, i32 0, i32 1
  %7973 = getelementptr inbounds %struct.Reg, %struct.Reg* %7972, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %7973 to i64*
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 5
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %7976 to i64*
  %7977 = load i64, i64* %RAX.i468
  %7978 = load i64, i64* %RCX.i469
  %7979 = load i64, i64* %PC.i467
  %7980 = add i64 %7979, 3
  store i64 %7980, i64* %PC.i467
  %7981 = add i64 %7978, %7977
  store i64 %7981, i64* %RAX.i468, align 8
  %7982 = icmp ult i64 %7981, %7977
  %7983 = icmp ult i64 %7981, %7978
  %7984 = or i1 %7982, %7983
  %7985 = zext i1 %7984 to i8
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7985, i8* %7986, align 1
  %7987 = trunc i64 %7981 to i32
  %7988 = and i32 %7987, 255
  %7989 = call i32 @llvm.ctpop.i32(i32 %7988)
  %7990 = trunc i32 %7989 to i8
  %7991 = and i8 %7990, 1
  %7992 = xor i8 %7991, 1
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7992, i8* %7993, align 1
  %7994 = xor i64 %7978, %7977
  %7995 = xor i64 %7994, %7981
  %7996 = lshr i64 %7995, 4
  %7997 = trunc i64 %7996 to i8
  %7998 = and i8 %7997, 1
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7998, i8* %7999, align 1
  %8000 = icmp eq i64 %7981, 0
  %8001 = zext i1 %8000 to i8
  %8002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8001, i8* %8002, align 1
  %8003 = lshr i64 %7981, 63
  %8004 = trunc i64 %8003 to i8
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8004, i8* %8005, align 1
  %8006 = lshr i64 %7977, 63
  %8007 = lshr i64 %7978, 63
  %8008 = xor i64 %8003, %8006
  %8009 = xor i64 %8003, %8007
  %8010 = add i64 %8008, %8009
  %8011 = icmp eq i64 %8010, 2
  %8012 = zext i1 %8011 to i8
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8012, i8* %8013, align 1
  store %struct.Memory* %loadMem_4a99da, %struct.Memory** %MEMORY
  %loadMem_4a99dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 33
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 5
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 15
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RBP.i466
  %8024 = sub i64 %8023, 7148
  %8025 = load i64, i64* %PC.i464
  %8026 = add i64 %8025, 7
  store i64 %8026, i64* %PC.i464
  %8027 = inttoptr i64 %8024 to i32*
  %8028 = load i32, i32* %8027
  %8029 = sext i32 %8028 to i64
  store i64 %8029, i64* %RCX.i465, align 8
  store %struct.Memory* %loadMem_4a99dd, %struct.Memory** %MEMORY
  %loadMem_4a99e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 33
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %8032 to i64*
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 1
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %RAX.i461 = bitcast %union.anon* %8035 to i64*
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 5
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %RCX.i462 = bitcast %union.anon* %8038 to i64*
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 7
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %8041 to i64*
  %8042 = load i64, i64* %RAX.i461
  %8043 = load i64, i64* %RCX.i462
  %8044 = add i64 %8043, %8042
  %8045 = load i64, i64* %PC.i460
  %8046 = add i64 %8045, 4
  store i64 %8046, i64* %PC.i460
  %8047 = inttoptr i64 %8044 to i8*
  %8048 = load i8, i8* %8047
  %8049 = sext i8 %8048 to i64
  %8050 = and i64 %8049, 4294967295
  store i64 %8050, i64* %RDX.i463, align 8
  store %struct.Memory* %loadMem_4a99e4, %struct.Memory** %MEMORY
  %loadMem_4a99e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 33
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %8053 to i64*
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 1
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %8057 = bitcast %union.anon* %8056 to %struct.anon.2*
  %AL.i459 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8057, i32 0, i32 0
  %8058 = load i64, i64* %PC.i458
  %8059 = add i64 %8058, 2
  store i64 %8059, i64* %PC.i458
  store i8 0, i8* %AL.i459, align 1
  store %struct.Memory* %loadMem_4a99e8, %struct.Memory** %MEMORY
  %loadMem1_4a99ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 33
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %8062 to i64*
  %8063 = load i64, i64* %PC.i457
  %8064 = add i64 %8063, -690458
  %8065 = load i64, i64* %PC.i457
  %8066 = add i64 %8065, 5
  %8067 = load i64, i64* %PC.i457
  %8068 = add i64 %8067, 5
  store i64 %8068, i64* %PC.i457
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8070 = load i64, i64* %8069, align 8
  %8071 = add i64 %8070, -8
  %8072 = inttoptr i64 %8071 to i64*
  store i64 %8066, i64* %8072
  store i64 %8071, i64* %8069, align 8
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8064, i64* %8073, align 8
  store %struct.Memory* %loadMem1_4a99ea, %struct.Memory** %MEMORY
  %loadMem2_4a99ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a99ea = load i64, i64* %3
  %8074 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a99ea)
  store %struct.Memory* %8074, %struct.Memory** %MEMORY
  %loadMem_4a99ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 33
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %8077 to i64*
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 1
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %EAX.i453 = bitcast %union.anon* %8080 to i32*
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8082 = getelementptr inbounds %struct.GPR, %struct.GPR* %8081, i32 0, i32 15
  %8083 = getelementptr inbounds %struct.Reg, %struct.Reg* %8082, i32 0, i32 0
  %RBP.i454 = bitcast %union.anon* %8083 to i64*
  %8084 = load i64, i64* %RBP.i454
  %8085 = sub i64 %8084, 7204
  %8086 = load i32, i32* %EAX.i453
  %8087 = zext i32 %8086 to i64
  %8088 = load i64, i64* %PC.i452
  %8089 = add i64 %8088, 6
  store i64 %8089, i64* %PC.i452
  %8090 = inttoptr i64 %8085 to i32*
  store i32 %8086, i32* %8090
  store %struct.Memory* %loadMem_4a99ef, %struct.Memory** %MEMORY
  br label %block_.L_4a99f5

block_.L_4a99f5:                                  ; preds = %block_.L_4a99b6, %block_4a9992
  %loadMem_4a99f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 33
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %8093 to i64*
  %8094 = load i64, i64* %PC.i451
  %8095 = add i64 %8094, 5
  %8096 = load i64, i64* %PC.i451
  %8097 = add i64 %8096, 5
  store i64 %8097, i64* %PC.i451
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8095, i64* %8098, align 8
  store %struct.Memory* %loadMem_4a99f5, %struct.Memory** %MEMORY
  br label %block_.L_4a99fa

block_.L_4a99fa:                                  ; preds = %block_.L_4a99f5
  %loadMem_4a99fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8100 = getelementptr inbounds %struct.GPR, %struct.GPR* %8099, i32 0, i32 33
  %8101 = getelementptr inbounds %struct.Reg, %struct.Reg* %8100, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %8101 to i64*
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8103 = getelementptr inbounds %struct.GPR, %struct.GPR* %8102, i32 0, i32 1
  %8104 = getelementptr inbounds %struct.Reg, %struct.Reg* %8103, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %8104 to i64*
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 15
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %8107 to i64*
  %8108 = load i64, i64* %RBP.i450
  %8109 = sub i64 %8108, 7148
  %8110 = load i64, i64* %PC.i448
  %8111 = add i64 %8110, 6
  store i64 %8111, i64* %PC.i448
  %8112 = inttoptr i64 %8109 to i32*
  %8113 = load i32, i32* %8112
  %8114 = zext i32 %8113 to i64
  store i64 %8114, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_4a99fa, %struct.Memory** %MEMORY
  %loadMem_4a9a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8116 = getelementptr inbounds %struct.GPR, %struct.GPR* %8115, i32 0, i32 33
  %8117 = getelementptr inbounds %struct.Reg, %struct.Reg* %8116, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %8117 to i64*
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 1
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %8120 to i64*
  %8121 = load i64, i64* %RAX.i447
  %8122 = load i64, i64* %PC.i446
  %8123 = add i64 %8122, 3
  store i64 %8123, i64* %PC.i446
  %8124 = trunc i64 %8121 to i32
  %8125 = add i32 1, %8124
  %8126 = zext i32 %8125 to i64
  store i64 %8126, i64* %RAX.i447, align 8
  %8127 = icmp ult i32 %8125, %8124
  %8128 = icmp ult i32 %8125, 1
  %8129 = or i1 %8127, %8128
  %8130 = zext i1 %8129 to i8
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8130, i8* %8131, align 1
  %8132 = and i32 %8125, 255
  %8133 = call i32 @llvm.ctpop.i32(i32 %8132)
  %8134 = trunc i32 %8133 to i8
  %8135 = and i8 %8134, 1
  %8136 = xor i8 %8135, 1
  %8137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8136, i8* %8137, align 1
  %8138 = xor i64 1, %8121
  %8139 = trunc i64 %8138 to i32
  %8140 = xor i32 %8139, %8125
  %8141 = lshr i32 %8140, 4
  %8142 = trunc i32 %8141 to i8
  %8143 = and i8 %8142, 1
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8143, i8* %8144, align 1
  %8145 = icmp eq i32 %8125, 0
  %8146 = zext i1 %8145 to i8
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8146, i8* %8147, align 1
  %8148 = lshr i32 %8125, 31
  %8149 = trunc i32 %8148 to i8
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8149, i8* %8150, align 1
  %8151 = lshr i32 %8124, 31
  %8152 = xor i32 %8148, %8151
  %8153 = add i32 %8152, %8148
  %8154 = icmp eq i32 %8153, 2
  %8155 = zext i1 %8154 to i8
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8155, i8* %8156, align 1
  store %struct.Memory* %loadMem_4a9a00, %struct.Memory** %MEMORY
  %loadMem_4a9a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8158 = getelementptr inbounds %struct.GPR, %struct.GPR* %8157, i32 0, i32 33
  %8159 = getelementptr inbounds %struct.Reg, %struct.Reg* %8158, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %8159 to i64*
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 1
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %EAX.i444 = bitcast %union.anon* %8162 to i32*
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 15
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %8165 to i64*
  %8166 = load i64, i64* %RBP.i445
  %8167 = sub i64 %8166, 7148
  %8168 = load i32, i32* %EAX.i444
  %8169 = zext i32 %8168 to i64
  %8170 = load i64, i64* %PC.i443
  %8171 = add i64 %8170, 6
  store i64 %8171, i64* %PC.i443
  %8172 = inttoptr i64 %8167 to i32*
  store i32 %8168, i32* %8172
  store %struct.Memory* %loadMem_4a9a03, %struct.Memory** %MEMORY
  %loadMem_4a9a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 33
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %8175 to i64*
  %8176 = load i64, i64* %PC.i442
  %8177 = add i64 %8176, -168
  %8178 = load i64, i64* %PC.i442
  %8179 = add i64 %8178, 5
  store i64 %8179, i64* %PC.i442
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8177, i64* %8180, align 8
  store %struct.Memory* %loadMem_4a9a09, %struct.Memory** %MEMORY
  br label %block_.L_4a9961

block_.L_4a9a0e:                                  ; preds = %block_.L_4a9961
  %loadMem_4a9a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 33
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %8183 to i64*
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 9
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %RSI.i441 = bitcast %union.anon* %8186 to i64*
  %8187 = load i64, i64* %PC.i440
  %8188 = add i64 %8187, 10
  store i64 %8188, i64* %PC.i440
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RSI.i441, align 8
  store %struct.Memory* %loadMem_4a9a0e, %struct.Memory** %MEMORY
  %loadMem_4a9a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 33
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %8191 to i64*
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8193 = getelementptr inbounds %struct.GPR, %struct.GPR* %8192, i32 0, i32 11
  %8194 = getelementptr inbounds %struct.Reg, %struct.Reg* %8193, i32 0, i32 0
  %RDI.i439 = bitcast %union.anon* %8194 to i64*
  %8195 = load i64, i64* %PC.i438
  %8196 = add i64 %8195, 8
  store i64 %8196, i64* %PC.i438
  %8197 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %8197, i64* %RDI.i439, align 8
  store %struct.Memory* %loadMem_4a9a18, %struct.Memory** %MEMORY
  %loadMem_4a9a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 33
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %8200 to i64*
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8202 = getelementptr inbounds %struct.GPR, %struct.GPR* %8201, i32 0, i32 1
  %8203 = getelementptr inbounds %struct.Reg, %struct.Reg* %8202, i32 0, i32 0
  %8204 = bitcast %union.anon* %8203 to %struct.anon.2*
  %AL.i437 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8204, i32 0, i32 0
  %8205 = load i64, i64* %PC.i436
  %8206 = add i64 %8205, 2
  store i64 %8206, i64* %PC.i436
  store i8 0, i8* %AL.i437, align 1
  store %struct.Memory* %loadMem_4a9a20, %struct.Memory** %MEMORY
  %loadMem1_4a9a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 33
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %8209 to i64*
  %8210 = load i64, i64* %PC.i435
  %8211 = add i64 %8210, -690514
  %8212 = load i64, i64* %PC.i435
  %8213 = add i64 %8212, 5
  %8214 = load i64, i64* %PC.i435
  %8215 = add i64 %8214, 5
  store i64 %8215, i64* %PC.i435
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8217 = load i64, i64* %8216, align 8
  %8218 = add i64 %8217, -8
  %8219 = inttoptr i64 %8218 to i64*
  store i64 %8213, i64* %8219
  store i64 %8218, i64* %8216, align 8
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8211, i64* %8220, align 8
  store %struct.Memory* %loadMem1_4a9a22, %struct.Memory** %MEMORY
  %loadMem2_4a9a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9a22 = load i64, i64* %3
  %8221 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a9a22)
  store %struct.Memory* %8221, %struct.Memory** %MEMORY
  %loadMem_4a9a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 33
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %8224 to i64*
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8226 = getelementptr inbounds %struct.GPR, %struct.GPR* %8225, i32 0, i32 1
  %8227 = getelementptr inbounds %struct.Reg, %struct.Reg* %8226, i32 0, i32 0
  %EAX.i431 = bitcast %union.anon* %8227 to i32*
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 15
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %RBP.i432 = bitcast %union.anon* %8230 to i64*
  %8231 = load i64, i64* %RBP.i432
  %8232 = sub i64 %8231, 7208
  %8233 = load i32, i32* %EAX.i431
  %8234 = zext i32 %8233 to i64
  %8235 = load i64, i64* %PC.i430
  %8236 = add i64 %8235, 6
  store i64 %8236, i64* %PC.i430
  %8237 = inttoptr i64 %8232 to i32*
  store i32 %8233, i32* %8237
  store %struct.Memory* %loadMem_4a9a27, %struct.Memory** %MEMORY
  %loadMem_4a9a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8239 = getelementptr inbounds %struct.GPR, %struct.GPR* %8238, i32 0, i32 33
  %8240 = getelementptr inbounds %struct.Reg, %struct.Reg* %8239, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %8240 to i64*
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8242 = getelementptr inbounds %struct.GPR, %struct.GPR* %8241, i32 0, i32 1
  %8243 = getelementptr inbounds %struct.Reg, %struct.Reg* %8242, i32 0, i32 0
  %RAX.i428 = bitcast %union.anon* %8243 to i64*
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8245 = getelementptr inbounds %struct.GPR, %struct.GPR* %8244, i32 0, i32 15
  %8246 = getelementptr inbounds %struct.Reg, %struct.Reg* %8245, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %8246 to i64*
  %8247 = load i64, i64* %RBP.i429
  %8248 = sub i64 %8247, 7144
  %8249 = load i64, i64* %PC.i427
  %8250 = add i64 %8249, 6
  store i64 %8250, i64* %PC.i427
  %8251 = inttoptr i64 %8248 to i32*
  %8252 = load i32, i32* %8251
  %8253 = zext i32 %8252 to i64
  store i64 %8253, i64* %RAX.i428, align 8
  store %struct.Memory* %loadMem_4a9a2d, %struct.Memory** %MEMORY
  %loadMem_4a9a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8255 = getelementptr inbounds %struct.GPR, %struct.GPR* %8254, i32 0, i32 33
  %8256 = getelementptr inbounds %struct.Reg, %struct.Reg* %8255, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %8256 to i64*
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8258 = getelementptr inbounds %struct.GPR, %struct.GPR* %8257, i32 0, i32 1
  %8259 = getelementptr inbounds %struct.Reg, %struct.Reg* %8258, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %8259 to i64*
  %8260 = load i64, i64* %RAX.i426
  %8261 = load i64, i64* %PC.i425
  %8262 = add i64 %8261, 3
  store i64 %8262, i64* %PC.i425
  %8263 = trunc i64 %8260 to i32
  %8264 = add i32 1, %8263
  %8265 = zext i32 %8264 to i64
  store i64 %8265, i64* %RAX.i426, align 8
  %8266 = icmp ult i32 %8264, %8263
  %8267 = icmp ult i32 %8264, 1
  %8268 = or i1 %8266, %8267
  %8269 = zext i1 %8268 to i8
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8269, i8* %8270, align 1
  %8271 = and i32 %8264, 255
  %8272 = call i32 @llvm.ctpop.i32(i32 %8271)
  %8273 = trunc i32 %8272 to i8
  %8274 = and i8 %8273, 1
  %8275 = xor i8 %8274, 1
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8275, i8* %8276, align 1
  %8277 = xor i64 1, %8260
  %8278 = trunc i64 %8277 to i32
  %8279 = xor i32 %8278, %8264
  %8280 = lshr i32 %8279, 4
  %8281 = trunc i32 %8280 to i8
  %8282 = and i8 %8281, 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8282, i8* %8283, align 1
  %8284 = icmp eq i32 %8264, 0
  %8285 = zext i1 %8284 to i8
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8285, i8* %8286, align 1
  %8287 = lshr i32 %8264, 31
  %8288 = trunc i32 %8287 to i8
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8288, i8* %8289, align 1
  %8290 = lshr i32 %8263, 31
  %8291 = xor i32 %8287, %8290
  %8292 = add i32 %8291, %8287
  %8293 = icmp eq i32 %8292, 2
  %8294 = zext i1 %8293 to i8
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8294, i8* %8295, align 1
  store %struct.Memory* %loadMem_4a9a33, %struct.Memory** %MEMORY
  %loadMem_4a9a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 33
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %8298 to i64*
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8300 = getelementptr inbounds %struct.GPR, %struct.GPR* %8299, i32 0, i32 1
  %8301 = getelementptr inbounds %struct.Reg, %struct.Reg* %8300, i32 0, i32 0
  %EAX.i423 = bitcast %union.anon* %8301 to i32*
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8303 = getelementptr inbounds %struct.GPR, %struct.GPR* %8302, i32 0, i32 15
  %8304 = getelementptr inbounds %struct.Reg, %struct.Reg* %8303, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %8304 to i64*
  %8305 = load i64, i64* %RBP.i424
  %8306 = sub i64 %8305, 7144
  %8307 = load i32, i32* %EAX.i423
  %8308 = zext i32 %8307 to i64
  %8309 = load i64, i64* %PC.i422
  %8310 = add i64 %8309, 6
  store i64 %8310, i64* %PC.i422
  %8311 = inttoptr i64 %8306 to i32*
  store i32 %8307, i32* %8311
  store %struct.Memory* %loadMem_4a9a36, %struct.Memory** %MEMORY
  %loadMem_4a9a3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8313 = getelementptr inbounds %struct.GPR, %struct.GPR* %8312, i32 0, i32 33
  %8314 = getelementptr inbounds %struct.Reg, %struct.Reg* %8313, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %8314 to i64*
  %8315 = load i64, i64* %PC.i421
  %8316 = add i64 %8315, -242
  %8317 = load i64, i64* %PC.i421
  %8318 = add i64 %8317, 5
  store i64 %8318, i64* %PC.i421
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8316, i64* %8319, align 8
  store %struct.Memory* %loadMem_4a9a3c, %struct.Memory** %MEMORY
  br label %block_.L_4a994a

block_.L_4a9a41:                                  ; preds = %block_.L_4a994a
  %loadMem_4a9a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 33
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %8322 to i64*
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 9
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %RSI.i420 = bitcast %union.anon* %8325 to i64*
  %8326 = load i64, i64* %PC.i419
  %8327 = add i64 %8326, 10
  store i64 %8327, i64* %PC.i419
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RSI.i420, align 8
  store %struct.Memory* %loadMem_4a9a41, %struct.Memory** %MEMORY
  %loadMem_4a9a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8329 = getelementptr inbounds %struct.GPR, %struct.GPR* %8328, i32 0, i32 33
  %8330 = getelementptr inbounds %struct.Reg, %struct.Reg* %8329, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %8330 to i64*
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 11
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %RDI.i418 = bitcast %union.anon* %8333 to i64*
  %8334 = load i64, i64* %PC.i417
  %8335 = add i64 %8334, 8
  store i64 %8335, i64* %PC.i417
  %8336 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %8336, i64* %RDI.i418, align 8
  store %struct.Memory* %loadMem_4a9a4b, %struct.Memory** %MEMORY
  %loadMem_4a9a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 33
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %8339 to i64*
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8341 = getelementptr inbounds %struct.GPR, %struct.GPR* %8340, i32 0, i32 1
  %8342 = getelementptr inbounds %struct.Reg, %struct.Reg* %8341, i32 0, i32 0
  %8343 = bitcast %union.anon* %8342 to %struct.anon.2*
  %AL.i416 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8343, i32 0, i32 0
  %8344 = load i64, i64* %PC.i415
  %8345 = add i64 %8344, 2
  store i64 %8345, i64* %PC.i415
  store i8 0, i8* %AL.i416, align 1
  store %struct.Memory* %loadMem_4a9a53, %struct.Memory** %MEMORY
  %loadMem1_4a9a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8347 = getelementptr inbounds %struct.GPR, %struct.GPR* %8346, i32 0, i32 33
  %8348 = getelementptr inbounds %struct.Reg, %struct.Reg* %8347, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %8348 to i64*
  %8349 = load i64, i64* %PC.i414
  %8350 = add i64 %8349, -690565
  %8351 = load i64, i64* %PC.i414
  %8352 = add i64 %8351, 5
  %8353 = load i64, i64* %PC.i414
  %8354 = add i64 %8353, 5
  store i64 %8354, i64* %PC.i414
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8356 = load i64, i64* %8355, align 8
  %8357 = add i64 %8356, -8
  %8358 = inttoptr i64 %8357 to i64*
  store i64 %8352, i64* %8358
  store i64 %8357, i64* %8355, align 8
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8350, i64* %8359, align 8
  store %struct.Memory* %loadMem1_4a9a55, %struct.Memory** %MEMORY
  %loadMem2_4a9a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9a55 = load i64, i64* %3
  %8360 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4a9a55)
  store %struct.Memory* %8360, %struct.Memory** %MEMORY
  %loadMem_4a9a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8362 = getelementptr inbounds %struct.GPR, %struct.GPR* %8361, i32 0, i32 33
  %8363 = getelementptr inbounds %struct.Reg, %struct.Reg* %8362, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %8363 to i64*
  %8364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8365 = getelementptr inbounds %struct.GPR, %struct.GPR* %8364, i32 0, i32 1
  %8366 = getelementptr inbounds %struct.Reg, %struct.Reg* %8365, i32 0, i32 0
  %EAX.i410 = bitcast %union.anon* %8366 to i32*
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 15
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %8369 to i64*
  %8370 = load i64, i64* %RBP.i411
  %8371 = sub i64 %8370, 7212
  %8372 = load i32, i32* %EAX.i410
  %8373 = zext i32 %8372 to i64
  %8374 = load i64, i64* %PC.i409
  %8375 = add i64 %8374, 6
  store i64 %8375, i64* %PC.i409
  %8376 = inttoptr i64 %8371 to i32*
  store i32 %8372, i32* %8376
  store %struct.Memory* %loadMem_4a9a5a, %struct.Memory** %MEMORY
  br label %block_.L_4a9a60

block_.L_4a9a60:                                  ; preds = %block_.L_4a9a41, %block_.L_4a9932
  %loadMem_4a9a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8378 = getelementptr inbounds %struct.GPR, %struct.GPR* %8377, i32 0, i32 33
  %8379 = getelementptr inbounds %struct.Reg, %struct.Reg* %8378, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %8379 to i64*
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8381 = getelementptr inbounds %struct.GPR, %struct.GPR* %8380, i32 0, i32 1
  %8382 = getelementptr inbounds %struct.Reg, %struct.Reg* %8381, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %8382 to i64*
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 15
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %8385 to i64*
  %8386 = load i64, i64* %RBP.i408
  %8387 = sub i64 %8386, 32
  %8388 = load i64, i64* %PC.i406
  %8389 = add i64 %8388, 4
  store i64 %8389, i64* %PC.i406
  %8390 = inttoptr i64 %8387 to i64*
  %8391 = load i64, i64* %8390
  store i64 %8391, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_4a9a60, %struct.Memory** %MEMORY
  %loadMem_4a9a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8393 = getelementptr inbounds %struct.GPR, %struct.GPR* %8392, i32 0, i32 33
  %8394 = getelementptr inbounds %struct.Reg, %struct.Reg* %8393, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %8394 to i64*
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8396 = getelementptr inbounds %struct.GPR, %struct.GPR* %8395, i32 0, i32 1
  %8397 = getelementptr inbounds %struct.Reg, %struct.Reg* %8396, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %8397 to i64*
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8399 = getelementptr inbounds %struct.GPR, %struct.GPR* %8398, i32 0, i32 5
  %8400 = getelementptr inbounds %struct.Reg, %struct.Reg* %8399, i32 0, i32 0
  %RCX.i405 = bitcast %union.anon* %8400 to i64*
  %8401 = load i64, i64* %RAX.i404
  %8402 = add i64 %8401, 8
  %8403 = load i64, i64* %PC.i403
  %8404 = add i64 %8403, 3
  store i64 %8404, i64* %PC.i403
  %8405 = inttoptr i64 %8402 to i32*
  %8406 = load i32, i32* %8405
  %8407 = zext i32 %8406 to i64
  store i64 %8407, i64* %RCX.i405, align 8
  store %struct.Memory* %loadMem_4a9a64, %struct.Memory** %MEMORY
  %loadMem_4a9a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8409 = getelementptr inbounds %struct.GPR, %struct.GPR* %8408, i32 0, i32 33
  %8410 = getelementptr inbounds %struct.Reg, %struct.Reg* %8409, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %8410 to i64*
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8412 = getelementptr inbounds %struct.GPR, %struct.GPR* %8411, i32 0, i32 5
  %8413 = getelementptr inbounds %struct.Reg, %struct.Reg* %8412, i32 0, i32 0
  %ECX.i401 = bitcast %union.anon* %8413 to i32*
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8415 = getelementptr inbounds %struct.GPR, %struct.GPR* %8414, i32 0, i32 15
  %8416 = getelementptr inbounds %struct.Reg, %struct.Reg* %8415, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %8416 to i64*
  %8417 = load i64, i64* %RBP.i402
  %8418 = sub i64 %8417, 7140
  %8419 = load i32, i32* %ECX.i401
  %8420 = zext i32 %8419 to i64
  %8421 = load i64, i64* %PC.i400
  %8422 = add i64 %8421, 6
  store i64 %8422, i64* %PC.i400
  %8423 = inttoptr i64 %8418 to i32*
  store i32 %8419, i32* %8423
  store %struct.Memory* %loadMem_4a9a67, %struct.Memory** %MEMORY
  %loadMem_4a9a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 1
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %8429 to i64*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 15
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %RBP.i399
  %8434 = sub i64 %8433, 32
  %8435 = load i64, i64* %PC.i397
  %8436 = add i64 %8435, 4
  store i64 %8436, i64* %PC.i397
  %8437 = inttoptr i64 %8434 to i64*
  %8438 = load i64, i64* %8437
  store i64 %8438, i64* %RAX.i398, align 8
  store %struct.Memory* %loadMem_4a9a6d, %struct.Memory** %MEMORY
  %loadMem_4a9a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8440 = getelementptr inbounds %struct.GPR, %struct.GPR* %8439, i32 0, i32 33
  %8441 = getelementptr inbounds %struct.Reg, %struct.Reg* %8440, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %8441 to i64*
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8443 = getelementptr inbounds %struct.GPR, %struct.GPR* %8442, i32 0, i32 1
  %8444 = getelementptr inbounds %struct.Reg, %struct.Reg* %8443, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %8444 to i64*
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 5
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %RCX.i396 = bitcast %union.anon* %8447 to i64*
  %8448 = load i64, i64* %RAX.i395
  %8449 = add i64 %8448, 48
  %8450 = load i64, i64* %PC.i394
  %8451 = add i64 %8450, 3
  store i64 %8451, i64* %PC.i394
  %8452 = inttoptr i64 %8449 to i32*
  %8453 = load i32, i32* %8452
  %8454 = zext i32 %8453 to i64
  store i64 %8454, i64* %RCX.i396, align 8
  store %struct.Memory* %loadMem_4a9a71, %struct.Memory** %MEMORY
  %loadMem_4a9a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 33
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %8457 to i64*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 5
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %ECX.i392 = bitcast %union.anon* %8460 to i32*
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 15
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %8463 to i64*
  %8464 = load i64, i64* %RBP.i393
  %8465 = sub i64 %8464, 7132
  %8466 = load i32, i32* %ECX.i392
  %8467 = zext i32 %8466 to i64
  %8468 = load i64, i64* %PC.i391
  %8469 = add i64 %8468, 6
  store i64 %8469, i64* %PC.i391
  %8470 = inttoptr i64 %8465 to i32*
  store i32 %8466, i32* %8470
  store %struct.Memory* %loadMem_4a9a74, %struct.Memory** %MEMORY
  %loadMem_4a9a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 33
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 15
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %8476 to i64*
  %8477 = load i64, i64* %RBP.i390
  %8478 = sub i64 %8477, 7136
  %8479 = load i64, i64* %PC.i389
  %8480 = add i64 %8479, 10
  store i64 %8480, i64* %PC.i389
  %8481 = inttoptr i64 %8478 to i32*
  store i32 15, i32* %8481
  store %struct.Memory* %loadMem_4a9a7a, %struct.Memory** %MEMORY
  %loadMem_4a9a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8483 = getelementptr inbounds %struct.GPR, %struct.GPR* %8482, i32 0, i32 33
  %8484 = getelementptr inbounds %struct.Reg, %struct.Reg* %8483, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %8484 to i64*
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8486 = getelementptr inbounds %struct.GPR, %struct.GPR* %8485, i32 0, i32 15
  %8487 = getelementptr inbounds %struct.Reg, %struct.Reg* %8486, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %8487 to i64*
  %8488 = load i64, i64* %RBP.i388
  %8489 = sub i64 %8488, 7152
  %8490 = load i64, i64* %PC.i387
  %8491 = add i64 %8490, 10
  store i64 %8491, i64* %PC.i387
  %8492 = inttoptr i64 %8489 to i32*
  store i32 0, i32* %8492
  store %struct.Memory* %loadMem_4a9a84, %struct.Memory** %MEMORY
  br label %block_.L_4a9a8e

block_.L_4a9a8e:                                  ; preds = %block_.L_4a9d6d, %block_.L_4a9a60
  %loadMem_4a9a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 33
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 1
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %EAX.i385 = bitcast %union.anon* %8498 to i32*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 1
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %8501 to i64*
  %8502 = load i64, i64* %RAX.i386
  %8503 = load i32, i32* %EAX.i385
  %8504 = zext i32 %8503 to i64
  %8505 = load i64, i64* %PC.i384
  %8506 = add i64 %8505, 2
  store i64 %8506, i64* %PC.i384
  %8507 = xor i64 %8504, %8502
  %8508 = trunc i64 %8507 to i32
  %8509 = and i64 %8507, 4294967295
  store i64 %8509, i64* %RAX.i386, align 8
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8510, align 1
  %8511 = and i32 %8508, 255
  %8512 = call i32 @llvm.ctpop.i32(i32 %8511)
  %8513 = trunc i32 %8512 to i8
  %8514 = and i8 %8513, 1
  %8515 = xor i8 %8514, 1
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8515, i8* %8516, align 1
  %8517 = icmp eq i32 %8508, 0
  %8518 = zext i1 %8517 to i8
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8518, i8* %8519, align 1
  %8520 = lshr i32 %8508, 31
  %8521 = trunc i32 %8520 to i8
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8521, i8* %8522, align 1
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8523, align 1
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8524, align 1
  store %struct.Memory* %loadMem_4a9a8e, %struct.Memory** %MEMORY
  %loadMem_4a9a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 33
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 1
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %8531 = bitcast %union.anon* %8530 to %struct.anon.2*
  %AL.i382 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8531, i32 0, i32 0
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8533 = getelementptr inbounds %struct.GPR, %struct.GPR* %8532, i32 0, i32 5
  %8534 = getelementptr inbounds %struct.Reg, %struct.Reg* %8533, i32 0, i32 0
  %8535 = bitcast %union.anon* %8534 to %struct.anon.2*
  %CL.i383 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8535, i32 0, i32 0
  %8536 = load i8, i8* %AL.i382
  %8537 = zext i8 %8536 to i64
  %8538 = load i64, i64* %PC.i381
  %8539 = add i64 %8538, 2
  store i64 %8539, i64* %PC.i381
  store i8 %8536, i8* %CL.i383, align 1
  store %struct.Memory* %loadMem_4a9a90, %struct.Memory** %MEMORY
  %loadMem_4a9a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 33
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %8542 to i64*
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 15
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %8545 to i64*
  %8546 = load i64, i64* %RBP.i380
  %8547 = sub i64 %8546, 7152
  %8548 = load i64, i64* %PC.i379
  %8549 = add i64 %8548, 10
  store i64 %8549, i64* %PC.i379
  %8550 = inttoptr i64 %8547 to i32*
  %8551 = load i32, i32* %8550
  %8552 = sub i32 %8551, 1763
  %8553 = icmp ult i32 %8551, 1763
  %8554 = zext i1 %8553 to i8
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8554, i8* %8555, align 1
  %8556 = and i32 %8552, 255
  %8557 = call i32 @llvm.ctpop.i32(i32 %8556)
  %8558 = trunc i32 %8557 to i8
  %8559 = and i8 %8558, 1
  %8560 = xor i8 %8559, 1
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8560, i8* %8561, align 1
  %8562 = xor i32 %8551, 1763
  %8563 = xor i32 %8562, %8552
  %8564 = lshr i32 %8563, 4
  %8565 = trunc i32 %8564 to i8
  %8566 = and i8 %8565, 1
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8566, i8* %8567, align 1
  %8568 = icmp eq i32 %8552, 0
  %8569 = zext i1 %8568 to i8
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8569, i8* %8570, align 1
  %8571 = lshr i32 %8552, 31
  %8572 = trunc i32 %8571 to i8
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8572, i8* %8573, align 1
  %8574 = lshr i32 %8551, 31
  %8575 = xor i32 %8571, %8574
  %8576 = add i32 %8575, %8574
  %8577 = icmp eq i32 %8576, 2
  %8578 = zext i1 %8577 to i8
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8578, i8* %8579, align 1
  store %struct.Memory* %loadMem_4a9a92, %struct.Memory** %MEMORY
  %loadMem_4a9a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 33
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %8582 to i64*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 5
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %8586 = bitcast %union.anon* %8585 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8586, i32 0, i32 0
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8588 = getelementptr inbounds %struct.GPR, %struct.GPR* %8587, i32 0, i32 15
  %8589 = getelementptr inbounds %struct.Reg, %struct.Reg* %8588, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %8589 to i64*
  %8590 = load i64, i64* %RBP.i378
  %8591 = sub i64 %8590, 7213
  %8592 = load i8, i8* %CL.i
  %8593 = zext i8 %8592 to i64
  %8594 = load i64, i64* %PC.i377
  %8595 = add i64 %8594, 6
  store i64 %8595, i64* %PC.i377
  %8596 = inttoptr i64 %8591 to i8*
  store i8 %8592, i8* %8596
  store %struct.Memory* %loadMem_4a9a9c, %struct.Memory** %MEMORY
  %loadMem_4a9aa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 33
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %8599 to i64*
  %8600 = load i64, i64* %PC.i376
  %8601 = add i64 %8600, 76
  %8602 = load i64, i64* %PC.i376
  %8603 = add i64 %8602, 6
  %8604 = load i64, i64* %PC.i376
  %8605 = add i64 %8604, 6
  store i64 %8605, i64* %PC.i376
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8607 = load i8, i8* %8606, align 1
  store i8 %8607, i8* %BRANCH_TAKEN, align 1
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8609 = icmp ne i8 %8607, 0
  %8610 = select i1 %8609, i64 %8601, i64 %8603
  store i64 %8610, i64* %8608, align 8
  store %struct.Memory* %loadMem_4a9aa2, %struct.Memory** %MEMORY
  %loadBr_4a9aa2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9aa2 = icmp eq i8 %loadBr_4a9aa2, 1
  br i1 %cmpBr_4a9aa2, label %block_.L_4a9aee, label %block_4a9aa8

block_4a9aa8:                                     ; preds = %block_.L_4a9a8e
  %loadMem_4a9aa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 33
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 1
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %8617 = bitcast %union.anon* %8616 to %struct.anon.2*
  %AL.i375 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8617, i32 0, i32 0
  %8618 = load i64, i64* %PC.i374
  %8619 = add i64 %8618, 2
  store i64 %8619, i64* %PC.i374
  store i8 1, i8* %AL.i375, align 1
  store %struct.Memory* %loadMem_4a9aa8, %struct.Memory** %MEMORY
  %loadMem_4a9aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 33
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %8622 to i64*
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 15
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %8625 to i64*
  %8626 = load i64, i64* %RBP.i373
  %8627 = sub i64 %8626, 7136
  %8628 = load i64, i64* %PC.i372
  %8629 = add i64 %8628, 7
  store i64 %8629, i64* %PC.i372
  %8630 = inttoptr i64 %8627 to i32*
  %8631 = load i32, i32* %8630
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8632, align 1
  %8633 = and i32 %8631, 255
  %8634 = call i32 @llvm.ctpop.i32(i32 %8633)
  %8635 = trunc i32 %8634 to i8
  %8636 = and i8 %8635, 1
  %8637 = xor i8 %8636, 1
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8637, i8* %8638, align 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8639, align 1
  %8640 = icmp eq i32 %8631, 0
  %8641 = zext i1 %8640 to i8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8641, i8* %8642, align 1
  %8643 = lshr i32 %8631, 31
  %8644 = trunc i32 %8643 to i8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8644, i8* %8645, align 1
  %8646 = lshr i32 %8631, 31
  %8647 = xor i32 %8643, %8646
  %8648 = add i32 %8647, %8646
  %8649 = icmp eq i32 %8648, 2
  %8650 = zext i1 %8649 to i8
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8650, i8* %8651, align 1
  store %struct.Memory* %loadMem_4a9aaa, %struct.Memory** %MEMORY
  %loadMem_4a9ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 33
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %8654 to i64*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 1
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %8658 = bitcast %union.anon* %8657 to %struct.anon.2*
  %AL.i370 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8658, i32 0, i32 0
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 15
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %8661 to i64*
  %8662 = load i64, i64* %RBP.i371
  %8663 = sub i64 %8662, 7214
  %8664 = load i8, i8* %AL.i370
  %8665 = zext i8 %8664 to i64
  %8666 = load i64, i64* %PC.i369
  %8667 = add i64 %8666, 6
  store i64 %8667, i64* %PC.i369
  %8668 = inttoptr i64 %8663 to i8*
  store i8 %8664, i8* %8668
  store %struct.Memory* %loadMem_4a9ab1, %struct.Memory** %MEMORY
  %loadMem_4a9ab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8670 = getelementptr inbounds %struct.GPR, %struct.GPR* %8669, i32 0, i32 33
  %8671 = getelementptr inbounds %struct.Reg, %struct.Reg* %8670, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %8671 to i64*
  %8672 = load i64, i64* %PC.i368
  %8673 = add i64 %8672, 43
  %8674 = load i64, i64* %PC.i368
  %8675 = add i64 %8674, 6
  %8676 = load i64, i64* %PC.i368
  %8677 = add i64 %8676, 6
  store i64 %8677, i64* %PC.i368
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8679 = load i8, i8* %8678, align 1
  %8680 = icmp eq i8 %8679, 0
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8682 = load i8, i8* %8681, align 1
  %8683 = icmp ne i8 %8682, 0
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8685 = load i8, i8* %8684, align 1
  %8686 = icmp ne i8 %8685, 0
  %8687 = xor i1 %8683, %8686
  %8688 = xor i1 %8687, true
  %8689 = and i1 %8680, %8688
  %8690 = zext i1 %8689 to i8
  store i8 %8690, i8* %BRANCH_TAKEN, align 1
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8692 = select i1 %8689, i64 %8673, i64 %8675
  store i64 %8692, i64* %8691, align 8
  store %struct.Memory* %loadMem_4a9ab7, %struct.Memory** %MEMORY
  %loadBr_4a9ab7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9ab7 = icmp eq i8 %loadBr_4a9ab7, 1
  br i1 %cmpBr_4a9ab7, label %block_.L_4a9ae2, label %block_4a9abd

block_4a9abd:                                     ; preds = %block_4a9aa8
  %loadMem_4a9abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8694 = getelementptr inbounds %struct.GPR, %struct.GPR* %8693, i32 0, i32 33
  %8695 = getelementptr inbounds %struct.Reg, %struct.Reg* %8694, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %8695 to i64*
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8697 = getelementptr inbounds %struct.GPR, %struct.GPR* %8696, i32 0, i32 1
  %8698 = getelementptr inbounds %struct.Reg, %struct.Reg* %8697, i32 0, i32 0
  %8699 = bitcast %union.anon* %8698 to %struct.anon.2*
  %AL.i367 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8699, i32 0, i32 0
  %8700 = load i64, i64* %PC.i366
  %8701 = add i64 %8700, 2
  store i64 %8701, i64* %PC.i366
  store i8 1, i8* %AL.i367, align 1
  store %struct.Memory* %loadMem_4a9abd, %struct.Memory** %MEMORY
  %loadMem_4a9abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8703 = getelementptr inbounds %struct.GPR, %struct.GPR* %8702, i32 0, i32 33
  %8704 = getelementptr inbounds %struct.Reg, %struct.Reg* %8703, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %8704 to i64*
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8706 = getelementptr inbounds %struct.GPR, %struct.GPR* %8705, i32 0, i32 15
  %8707 = getelementptr inbounds %struct.Reg, %struct.Reg* %8706, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %8707 to i64*
  %8708 = load i64, i64* %RBP.i365
  %8709 = sub i64 %8708, 7132
  %8710 = load i64, i64* %PC.i364
  %8711 = add i64 %8710, 7
  store i64 %8711, i64* %PC.i364
  %8712 = inttoptr i64 %8709 to i32*
  %8713 = load i32, i32* %8712
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8714, align 1
  %8715 = and i32 %8713, 255
  %8716 = call i32 @llvm.ctpop.i32(i32 %8715)
  %8717 = trunc i32 %8716 to i8
  %8718 = and i8 %8717, 1
  %8719 = xor i8 %8718, 1
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8719, i8* %8720, align 1
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8721, align 1
  %8722 = icmp eq i32 %8713, 0
  %8723 = zext i1 %8722 to i8
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8723, i8* %8724, align 1
  %8725 = lshr i32 %8713, 31
  %8726 = trunc i32 %8725 to i8
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8726, i8* %8727, align 1
  %8728 = lshr i32 %8713, 31
  %8729 = xor i32 %8725, %8728
  %8730 = add i32 %8729, %8728
  %8731 = icmp eq i32 %8730, 2
  %8732 = zext i1 %8731 to i8
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8732, i8* %8733, align 1
  store %struct.Memory* %loadMem_4a9abf, %struct.Memory** %MEMORY
  %loadMem_4a9ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 33
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 1
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %8740 = bitcast %union.anon* %8739 to %struct.anon.2*
  %AL.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8740, i32 0, i32 0
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8742 = getelementptr inbounds %struct.GPR, %struct.GPR* %8741, i32 0, i32 15
  %8743 = getelementptr inbounds %struct.Reg, %struct.Reg* %8742, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %8743 to i64*
  %8744 = load i64, i64* %RBP.i363
  %8745 = sub i64 %8744, 7214
  %8746 = load i8, i8* %AL.i362
  %8747 = zext i8 %8746 to i64
  %8748 = load i64, i64* %PC.i361
  %8749 = add i64 %8748, 6
  store i64 %8749, i64* %PC.i361
  %8750 = inttoptr i64 %8745 to i8*
  store i8 %8746, i8* %8750
  store %struct.Memory* %loadMem_4a9ac6, %struct.Memory** %MEMORY
  %loadMem_4a9acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8752 = getelementptr inbounds %struct.GPR, %struct.GPR* %8751, i32 0, i32 33
  %8753 = getelementptr inbounds %struct.Reg, %struct.Reg* %8752, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %8753 to i64*
  %8754 = load i64, i64* %PC.i360
  %8755 = add i64 %8754, 22
  %8756 = load i64, i64* %PC.i360
  %8757 = add i64 %8756, 6
  %8758 = load i64, i64* %PC.i360
  %8759 = add i64 %8758, 6
  store i64 %8759, i64* %PC.i360
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8761 = load i8, i8* %8760, align 1
  %8762 = icmp eq i8 %8761, 0
  %8763 = zext i1 %8762 to i8
  store i8 %8763, i8* %BRANCH_TAKEN, align 1
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8765 = select i1 %8762, i64 %8755, i64 %8757
  store i64 %8765, i64* %8764, align 8
  store %struct.Memory* %loadMem_4a9acc, %struct.Memory** %MEMORY
  %loadBr_4a9acc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9acc = icmp eq i8 %loadBr_4a9acc, 1
  br i1 %cmpBr_4a9acc, label %block_.L_4a9ae2, label %block_4a9ad2

block_4a9ad2:                                     ; preds = %block_4a9abd
  %loadMem_4a9ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 33
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %8768 to i64*
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8770 = getelementptr inbounds %struct.GPR, %struct.GPR* %8769, i32 0, i32 15
  %8771 = getelementptr inbounds %struct.Reg, %struct.Reg* %8770, i32 0, i32 0
  %RBP.i359 = bitcast %union.anon* %8771 to i64*
  %8772 = load i64, i64* %RBP.i359
  %8773 = sub i64 %8772, 7140
  %8774 = load i64, i64* %PC.i358
  %8775 = add i64 %8774, 7
  store i64 %8775, i64* %PC.i358
  %8776 = inttoptr i64 %8773 to i32*
  %8777 = load i32, i32* %8776
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8778, align 1
  %8779 = and i32 %8777, 255
  %8780 = call i32 @llvm.ctpop.i32(i32 %8779)
  %8781 = trunc i32 %8780 to i8
  %8782 = and i8 %8781, 1
  %8783 = xor i8 %8782, 1
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8783, i8* %8784, align 1
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8785, align 1
  %8786 = icmp eq i32 %8777, 0
  %8787 = zext i1 %8786 to i8
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8787, i8* %8788, align 1
  %8789 = lshr i32 %8777, 31
  %8790 = trunc i32 %8789 to i8
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8790, i8* %8791, align 1
  %8792 = lshr i32 %8777, 31
  %8793 = xor i32 %8789, %8792
  %8794 = add i32 %8793, %8792
  %8795 = icmp eq i32 %8794, 2
  %8796 = zext i1 %8795 to i8
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8796, i8* %8797, align 1
  store %struct.Memory* %loadMem_4a9ad2, %struct.Memory** %MEMORY
  %loadMem_4a9ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8799 = getelementptr inbounds %struct.GPR, %struct.GPR* %8798, i32 0, i32 33
  %8800 = getelementptr inbounds %struct.Reg, %struct.Reg* %8799, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8800 to i64*
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 1
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %8804 = bitcast %union.anon* %8803 to %struct.anon.2*
  %AL.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8804, i32 0, i32 0
  %8805 = load i64, i64* %PC.i356
  %8806 = add i64 %8805, 3
  store i64 %8806, i64* %PC.i356
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8808 = load i8, i8* %8807, align 1
  %8809 = icmp eq i8 %8808, 0
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8811 = load i8, i8* %8810, align 1
  %8812 = icmp ne i8 %8811, 0
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8814 = load i8, i8* %8813, align 1
  %8815 = icmp ne i8 %8814, 0
  %8816 = xor i1 %8812, %8815
  %8817 = xor i1 %8816, true
  %8818 = and i1 %8809, %8817
  %8819 = zext i1 %8818 to i8
  store i8 %8819, i8* %AL.i357, align 1
  store %struct.Memory* %loadMem_4a9ad9, %struct.Memory** %MEMORY
  %loadMem_4a9adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8821 = getelementptr inbounds %struct.GPR, %struct.GPR* %8820, i32 0, i32 33
  %8822 = getelementptr inbounds %struct.Reg, %struct.Reg* %8821, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %8822 to i64*
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 1
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %8826 = bitcast %union.anon* %8825 to %struct.anon.2*
  %AL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8826, i32 0, i32 0
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8828 = getelementptr inbounds %struct.GPR, %struct.GPR* %8827, i32 0, i32 15
  %8829 = getelementptr inbounds %struct.Reg, %struct.Reg* %8828, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %8829 to i64*
  %8830 = load i64, i64* %RBP.i355
  %8831 = sub i64 %8830, 7214
  %8832 = load i8, i8* %AL.i354
  %8833 = zext i8 %8832 to i64
  %8834 = load i64, i64* %PC.i353
  %8835 = add i64 %8834, 6
  store i64 %8835, i64* %PC.i353
  %8836 = inttoptr i64 %8831 to i8*
  store i8 %8832, i8* %8836
  store %struct.Memory* %loadMem_4a9adc, %struct.Memory** %MEMORY
  br label %block_.L_4a9ae2

block_.L_4a9ae2:                                  ; preds = %block_4a9ad2, %block_4a9abd, %block_4a9aa8
  %loadMem_4a9ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 33
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %8839 to i64*
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 1
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %8843 = bitcast %union.anon* %8842 to %struct.anon.2*
  %AL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8843, i32 0, i32 0
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 15
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %8846 to i64*
  %8847 = load i64, i64* %RBP.i352
  %8848 = sub i64 %8847, 7214
  %8849 = load i64, i64* %PC.i350
  %8850 = add i64 %8849, 6
  store i64 %8850, i64* %PC.i350
  %8851 = inttoptr i64 %8848 to i8*
  %8852 = load i8, i8* %8851
  store i8 %8852, i8* %AL.i351, align 1
  store %struct.Memory* %loadMem_4a9ae2, %struct.Memory** %MEMORY
  %loadMem_4a9ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 33
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %8855 to i64*
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8857 = getelementptr inbounds %struct.GPR, %struct.GPR* %8856, i32 0, i32 1
  %8858 = getelementptr inbounds %struct.Reg, %struct.Reg* %8857, i32 0, i32 0
  %8859 = bitcast %union.anon* %8858 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8859, i32 0, i32 0
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8861 = getelementptr inbounds %struct.GPR, %struct.GPR* %8860, i32 0, i32 15
  %8862 = getelementptr inbounds %struct.Reg, %struct.Reg* %8861, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %8862 to i64*
  %8863 = load i64, i64* %RBP.i349
  %8864 = sub i64 %8863, 7213
  %8865 = load i8, i8* %AL.i348
  %8866 = zext i8 %8865 to i64
  %8867 = load i64, i64* %PC.i347
  %8868 = add i64 %8867, 6
  store i64 %8868, i64* %PC.i347
  %8869 = inttoptr i64 %8864 to i8*
  store i8 %8865, i8* %8869
  store %struct.Memory* %loadMem_4a9ae8, %struct.Memory** %MEMORY
  br label %block_.L_4a9aee

block_.L_4a9aee:                                  ; preds = %block_.L_4a9ae2, %block_.L_4a9a8e
  %loadMem_4a9aee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 33
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %8872 to i64*
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 1
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %8876 = bitcast %union.anon* %8875 to %struct.anon.2*
  %AL.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8876, i32 0, i32 0
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8878 = getelementptr inbounds %struct.GPR, %struct.GPR* %8877, i32 0, i32 15
  %8879 = getelementptr inbounds %struct.Reg, %struct.Reg* %8878, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %8879 to i64*
  %8880 = load i64, i64* %RBP.i346
  %8881 = sub i64 %8880, 7213
  %8882 = load i64, i64* %PC.i344
  %8883 = add i64 %8882, 6
  store i64 %8883, i64* %PC.i344
  %8884 = inttoptr i64 %8881 to i8*
  %8885 = load i8, i8* %8884
  store i8 %8885, i8* %AL.i345, align 1
  store %struct.Memory* %loadMem_4a9aee, %struct.Memory** %MEMORY
  %loadMem_4a9af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 33
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 1
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %8892 = bitcast %union.anon* %8891 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8892, i32 0, i32 0
  %8893 = load i8, i8* %AL.i
  %8894 = zext i8 %8893 to i64
  %8895 = load i64, i64* %PC.i343
  %8896 = add i64 %8895, 2
  store i64 %8896, i64* %PC.i343
  %8897 = and i64 1, %8894
  %8898 = trunc i64 %8897 to i8
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8899, align 1
  %8900 = trunc i64 %8897 to i32
  %8901 = and i32 %8900, 255
  %8902 = call i32 @llvm.ctpop.i32(i32 %8901)
  %8903 = trunc i32 %8902 to i8
  %8904 = and i8 %8903, 1
  %8905 = xor i8 %8904, 1
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8905, i8* %8906, align 1
  %8907 = icmp eq i8 %8898, 0
  %8908 = zext i1 %8907 to i8
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8908, i8* %8909, align 1
  %8910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8910, align 1
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8911, align 1
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8912, align 1
  store %struct.Memory* %loadMem_4a9af4, %struct.Memory** %MEMORY
  %loadMem_4a9af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 33
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %8915 to i64*
  %8916 = load i64, i64* %PC.i342
  %8917 = add i64 %8916, 11
  %8918 = load i64, i64* %PC.i342
  %8919 = add i64 %8918, 6
  %8920 = load i64, i64* %PC.i342
  %8921 = add i64 %8920, 6
  store i64 %8921, i64* %PC.i342
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8923 = load i8, i8* %8922, align 1
  %8924 = icmp eq i8 %8923, 0
  %8925 = zext i1 %8924 to i8
  store i8 %8925, i8* %BRANCH_TAKEN, align 1
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8927 = select i1 %8924, i64 %8917, i64 %8919
  store i64 %8927, i64* %8926, align 8
  store %struct.Memory* %loadMem_4a9af6, %struct.Memory** %MEMORY
  %loadBr_4a9af6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9af6 = icmp eq i8 %loadBr_4a9af6, 1
  br i1 %cmpBr_4a9af6, label %block_.L_4a9b01, label %block_4a9afc

block_4a9afc:                                     ; preds = %block_.L_4a9aee
  %loadMem_4a9afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 33
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %8930 to i64*
  %8931 = load i64, i64* %PC.i341
  %8932 = add i64 %8931, 645
  %8933 = load i64, i64* %PC.i341
  %8934 = add i64 %8933, 5
  store i64 %8934, i64* %PC.i341
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8932, i64* %8935, align 8
  store %struct.Memory* %loadMem_4a9afc, %struct.Memory** %MEMORY
  br label %block_.L_4a9d81

block_.L_4a9b01:                                  ; preds = %block_.L_4a9aee
  %loadMem_4a9b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 33
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %8938 to i64*
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8940 = getelementptr inbounds %struct.GPR, %struct.GPR* %8939, i32 0, i32 1
  %8941 = getelementptr inbounds %struct.Reg, %struct.Reg* %8940, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %8941 to i64*
  %8942 = load i64, i64* %PC.i339
  %8943 = add i64 %8942, 5
  store i64 %8943, i64* %PC.i339
  store i64 84, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_4a9b01, %struct.Memory** %MEMORY
  %loadMem_4a9b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8945 = getelementptr inbounds %struct.GPR, %struct.GPR* %8944, i32 0, i32 33
  %8946 = getelementptr inbounds %struct.Reg, %struct.Reg* %8945, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8946 to i64*
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 5
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %RCX.i338 = bitcast %union.anon* %8949 to i64*
  %8950 = load i64, i64* %PC.i337
  %8951 = add i64 %8950, 10
  store i64 %8951, i64* %PC.i337
  store i64 ptrtoint (%G__0xb8c050_type* @G__0xb8c050 to i64), i64* %RCX.i338, align 8
  store %struct.Memory* %loadMem_4a9b06, %struct.Memory** %MEMORY
  %loadMem_4a9b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 33
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %8954 to i64*
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8956 = getelementptr inbounds %struct.GPR, %struct.GPR* %8955, i32 0, i32 7
  %8957 = getelementptr inbounds %struct.Reg, %struct.Reg* %8956, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %8957 to i64*
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 15
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %8960 to i64*
  %8961 = load i64, i64* %RBP.i336
  %8962 = sub i64 %8961, 7152
  %8963 = load i64, i64* %PC.i334
  %8964 = add i64 %8963, 7
  store i64 %8964, i64* %PC.i334
  %8965 = inttoptr i64 %8962 to i32*
  %8966 = load i32, i32* %8965
  %8967 = sext i32 %8966 to i64
  store i64 %8967, i64* %RDX.i335, align 8
  store %struct.Memory* %loadMem_4a9b10, %struct.Memory** %MEMORY
  %loadMem_4a9b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 33
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8970 to i64*
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8972 = getelementptr inbounds %struct.GPR, %struct.GPR* %8971, i32 0, i32 7
  %8973 = getelementptr inbounds %struct.Reg, %struct.Reg* %8972, i32 0, i32 0
  %RDX.i333 = bitcast %union.anon* %8973 to i64*
  %8974 = load i64, i64* %RDX.i333
  %8975 = load i64, i64* %PC.i332
  %8976 = add i64 %8975, 4
  store i64 %8976, i64* %PC.i332
  %8977 = shl i64 %8974, 4
  %8978 = icmp slt i64 %8977, 0
  %8979 = shl i64 %8977, 1
  store i64 %8979, i64* %RDX.i333, align 8
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8981 = zext i1 %8978 to i8
  store i8 %8981, i8* %8980, align 1
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8983 = trunc i64 %8979 to i32
  %8984 = and i32 %8983, 254
  %8985 = call i32 @llvm.ctpop.i32(i32 %8984)
  %8986 = trunc i32 %8985 to i8
  %8987 = and i8 %8986, 1
  %8988 = xor i8 %8987, 1
  store i8 %8988, i8* %8982, align 1
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8989, align 1
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8991 = icmp eq i64 %8979, 0
  %8992 = zext i1 %8991 to i8
  store i8 %8992, i8* %8990, align 1
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8994 = lshr i64 %8979, 63
  %8995 = trunc i64 %8994 to i8
  store i8 %8995, i8* %8993, align 1
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8996, align 1
  store %struct.Memory* %loadMem_4a9b17, %struct.Memory** %MEMORY
  %loadMem_4a9b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 33
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 5
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %RCX.i330 = bitcast %union.anon* %9002 to i64*
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 7
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %RDX.i331 = bitcast %union.anon* %9005 to i64*
  %9006 = load i64, i64* %RCX.i330
  %9007 = load i64, i64* %RDX.i331
  %9008 = load i64, i64* %PC.i329
  %9009 = add i64 %9008, 3
  store i64 %9009, i64* %PC.i329
  %9010 = add i64 %9007, %9006
  store i64 %9010, i64* %RCX.i330, align 8
  %9011 = icmp ult i64 %9010, %9006
  %9012 = icmp ult i64 %9010, %9007
  %9013 = or i1 %9011, %9012
  %9014 = zext i1 %9013 to i8
  %9015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9014, i8* %9015, align 1
  %9016 = trunc i64 %9010 to i32
  %9017 = and i32 %9016, 255
  %9018 = call i32 @llvm.ctpop.i32(i32 %9017)
  %9019 = trunc i32 %9018 to i8
  %9020 = and i8 %9019, 1
  %9021 = xor i8 %9020, 1
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9021, i8* %9022, align 1
  %9023 = xor i64 %9007, %9006
  %9024 = xor i64 %9023, %9010
  %9025 = lshr i64 %9024, 4
  %9026 = trunc i64 %9025 to i8
  %9027 = and i8 %9026, 1
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9027, i8* %9028, align 1
  %9029 = icmp eq i64 %9010, 0
  %9030 = zext i1 %9029 to i8
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9030, i8* %9031, align 1
  %9032 = lshr i64 %9010, 63
  %9033 = trunc i64 %9032 to i8
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9033, i8* %9034, align 1
  %9035 = lshr i64 %9006, 63
  %9036 = lshr i64 %9007, 63
  %9037 = xor i64 %9032, %9035
  %9038 = xor i64 %9032, %9036
  %9039 = add i64 %9037, %9038
  %9040 = icmp eq i64 %9039, 2
  %9041 = zext i1 %9040 to i8
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9041, i8* %9042, align 1
  store %struct.Memory* %loadMem_4a9b1b, %struct.Memory** %MEMORY
  %loadMem_4a9b1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 33
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %9045 to i64*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 7
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %9048 to i64*
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 15
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %9051 to i64*
  %9052 = load i64, i64* %RBP.i328
  %9053 = sub i64 %9052, 52
  %9054 = load i64, i64* %PC.i326
  %9055 = add i64 %9054, 4
  store i64 %9055, i64* %PC.i326
  %9056 = inttoptr i64 %9053 to i32*
  %9057 = load i32, i32* %9056
  %9058 = sext i32 %9057 to i64
  store i64 %9058, i64* %RDX.i327, align 8
  store %struct.Memory* %loadMem_4a9b1e, %struct.Memory** %MEMORY
  %loadMem_4a9b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9060 = getelementptr inbounds %struct.GPR, %struct.GPR* %9059, i32 0, i32 33
  %9061 = getelementptr inbounds %struct.Reg, %struct.Reg* %9060, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %9061 to i64*
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9063 = getelementptr inbounds %struct.GPR, %struct.GPR* %9062, i32 0, i32 5
  %9064 = getelementptr inbounds %struct.Reg, %struct.Reg* %9063, i32 0, i32 0
  %RCX.i323 = bitcast %union.anon* %9064 to i64*
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9066 = getelementptr inbounds %struct.GPR, %struct.GPR* %9065, i32 0, i32 7
  %9067 = getelementptr inbounds %struct.Reg, %struct.Reg* %9066, i32 0, i32 0
  %RDX.i324 = bitcast %union.anon* %9067 to i64*
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 9
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %RSI.i325 = bitcast %union.anon* %9070 to i64*
  %9071 = load i64, i64* %RCX.i323
  %9072 = load i64, i64* %RDX.i324
  %9073 = mul i64 %9072, 4
  %9074 = add i64 %9073, %9071
  %9075 = load i64, i64* %PC.i322
  %9076 = add i64 %9075, 3
  store i64 %9076, i64* %PC.i322
  %9077 = inttoptr i64 %9074 to i32*
  %9078 = load i32, i32* %9077
  %9079 = zext i32 %9078 to i64
  store i64 %9079, i64* %RSI.i325, align 8
  store %struct.Memory* %loadMem_4a9b22, %struct.Memory** %MEMORY
  %loadMem_4a9b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 33
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %9082 to i64*
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9084 = getelementptr inbounds %struct.GPR, %struct.GPR* %9083, i32 0, i32 1
  %9085 = getelementptr inbounds %struct.Reg, %struct.Reg* %9084, i32 0, i32 0
  %EAX.i320 = bitcast %union.anon* %9085 to i32*
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 15
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %9088 to i64*
  %9089 = load i64, i64* %RBP.i321
  %9090 = sub i64 %9089, 7220
  %9091 = load i32, i32* %EAX.i320
  %9092 = zext i32 %9091 to i64
  %9093 = load i64, i64* %PC.i319
  %9094 = add i64 %9093, 6
  store i64 %9094, i64* %PC.i319
  %9095 = inttoptr i64 %9090 to i32*
  store i32 %9091, i32* %9095
  store %struct.Memory* %loadMem_4a9b25, %struct.Memory** %MEMORY
  %loadMem_4a9b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 33
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %9098 to i64*
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 9
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %ESI.i317 = bitcast %union.anon* %9101 to i32*
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 1
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %9104 to i64*
  %9105 = load i32, i32* %ESI.i317
  %9106 = zext i32 %9105 to i64
  %9107 = load i64, i64* %PC.i316
  %9108 = add i64 %9107, 2
  store i64 %9108, i64* %PC.i316
  %9109 = and i64 %9106, 4294967295
  store i64 %9109, i64* %RAX.i318, align 8
  store %struct.Memory* %loadMem_4a9b2b, %struct.Memory** %MEMORY
  %loadMem_4a9b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9111 = getelementptr inbounds %struct.GPR, %struct.GPR* %9110, i32 0, i32 33
  %9112 = getelementptr inbounds %struct.Reg, %struct.Reg* %9111, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %9112 to i64*
  %9113 = load i64, i64* %PC.i315
  %9114 = add i64 %9113, 1
  store i64 %9114, i64* %PC.i315
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9117 = bitcast %union.anon* %9116 to i32*
  %9118 = load i32, i32* %9117, align 8
  %9119 = sext i32 %9118 to i64
  %9120 = lshr i64 %9119, 32
  store i64 %9120, i64* %9115, align 8
  store %struct.Memory* %loadMem_4a9b2d, %struct.Memory** %MEMORY
  %loadMem_4a9b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 33
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %9123 to i64*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 9
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RSI.i313 = bitcast %union.anon* %9126 to i64*
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9128 = getelementptr inbounds %struct.GPR, %struct.GPR* %9127, i32 0, i32 15
  %9129 = getelementptr inbounds %struct.Reg, %struct.Reg* %9128, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %9129 to i64*
  %9130 = load i64, i64* %RBP.i314
  %9131 = sub i64 %9130, 7220
  %9132 = load i64, i64* %PC.i312
  %9133 = add i64 %9132, 6
  store i64 %9133, i64* %PC.i312
  %9134 = inttoptr i64 %9131 to i32*
  %9135 = load i32, i32* %9134
  %9136 = zext i32 %9135 to i64
  store i64 %9136, i64* %RSI.i313, align 8
  store %struct.Memory* %loadMem_4a9b2e, %struct.Memory** %MEMORY
  %loadMem_4a9b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 33
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %9139 to i64*
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 9
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %ESI.i308 = bitcast %union.anon* %9142 to i32*
  %9143 = load i32, i32* %ESI.i308
  %9144 = zext i32 %9143 to i64
  %9145 = load i64, i64* %PC.i307
  %9146 = add i64 %9145, 2
  store i64 %9146, i64* %PC.i307
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9148 = bitcast %union.anon* %9147 to i32*
  %9149 = load i32, i32* %9148, align 8
  %9150 = zext i32 %9149 to i64
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9152 = bitcast %union.anon* %9151 to i32*
  %9153 = load i32, i32* %9152, align 8
  %9154 = zext i32 %9153 to i64
  %9155 = shl i64 %9144, 32
  %9156 = ashr exact i64 %9155, 32
  %9157 = shl i64 %9154, 32
  %9158 = or i64 %9157, %9150
  %9159 = sdiv i64 %9158, %9156
  %9160 = shl i64 %9159, 32
  %9161 = ashr exact i64 %9160, 32
  %9162 = icmp eq i64 %9159, %9161
  br i1 %9162, label %9167, label %9163

; <label>:9163:                                   ; preds = %block_.L_4a9b01
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9165 = load i64, i64* %9164, align 8
  %9166 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9165, %struct.Memory* %loadMem_4a9b34)
  br label %routine_idivl__esi.exit309

; <label>:9167:                                   ; preds = %block_.L_4a9b01
  %9168 = srem i64 %9158, %9156
  %9169 = getelementptr inbounds %union.anon, %union.anon* %9147, i64 0, i32 0
  %9170 = and i64 %9159, 4294967295
  store i64 %9170, i64* %9169, align 8
  %9171 = getelementptr inbounds %union.anon, %union.anon* %9151, i64 0, i32 0
  %9172 = and i64 %9168, 4294967295
  store i64 %9172, i64* %9171, align 8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9173, align 1
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9174, align 1
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9175, align 1
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9176, align 1
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9177, align 1
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9178, align 1
  br label %routine_idivl__esi.exit309

routine_idivl__esi.exit309:                       ; preds = %9163, %9167
  %9179 = phi %struct.Memory* [ %9166, %9163 ], [ %loadMem_4a9b34, %9167 ]
  store %struct.Memory* %9179, %struct.Memory** %MEMORY
  %loadMem_4a9b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 33
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %9182 to i64*
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 7
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9185 to i32*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 15
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RBP.i306
  %9190 = sub i64 %9189, 7148
  %9191 = load i32, i32* %EDX.i
  %9192 = zext i32 %9191 to i64
  %9193 = load i64, i64* %PC.i305
  %9194 = add i64 %9193, 6
  store i64 %9194, i64* %PC.i305
  %9195 = inttoptr i64 %9190 to i32*
  store i32 %9191, i32* %9195
  store %struct.Memory* %loadMem_4a9b36, %struct.Memory** %MEMORY
  %loadMem_4a9b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 33
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %9198 to i64*
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9200 = getelementptr inbounds %struct.GPR, %struct.GPR* %9199, i32 0, i32 15
  %9201 = getelementptr inbounds %struct.Reg, %struct.Reg* %9200, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %9201 to i64*
  %9202 = load i64, i64* %RBP.i304
  %9203 = sub i64 %9202, 7148
  %9204 = load i64, i64* %PC.i303
  %9205 = add i64 %9204, 7
  store i64 %9205, i64* %PC.i303
  %9206 = inttoptr i64 %9203 to i32*
  %9207 = load i32, i32* %9206
  %9208 = sub i32 %9207, 42
  %9209 = icmp ult i32 %9207, 42
  %9210 = zext i1 %9209 to i8
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9210, i8* %9211, align 1
  %9212 = and i32 %9208, 255
  %9213 = call i32 @llvm.ctpop.i32(i32 %9212)
  %9214 = trunc i32 %9213 to i8
  %9215 = and i8 %9214, 1
  %9216 = xor i8 %9215, 1
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9216, i8* %9217, align 1
  %9218 = xor i32 %9207, 42
  %9219 = xor i32 %9218, %9208
  %9220 = lshr i32 %9219, 4
  %9221 = trunc i32 %9220 to i8
  %9222 = and i8 %9221, 1
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9222, i8* %9223, align 1
  %9224 = icmp eq i32 %9208, 0
  %9225 = zext i1 %9224 to i8
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9225, i8* %9226, align 1
  %9227 = lshr i32 %9208, 31
  %9228 = trunc i32 %9227 to i8
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9228, i8* %9229, align 1
  %9230 = lshr i32 %9207, 31
  %9231 = xor i32 %9227, %9230
  %9232 = add i32 %9231, %9230
  %9233 = icmp eq i32 %9232, 2
  %9234 = zext i1 %9233 to i8
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9234, i8* %9235, align 1
  store %struct.Memory* %loadMem_4a9b3c, %struct.Memory** %MEMORY
  %loadMem_4a9b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 33
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %9238 to i64*
  %9239 = load i64, i64* %PC.i302
  %9240 = add i64 %9239, 21
  %9241 = load i64, i64* %PC.i302
  %9242 = add i64 %9241, 6
  %9243 = load i64, i64* %PC.i302
  %9244 = add i64 %9243, 6
  store i64 %9244, i64* %PC.i302
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9246 = load i8, i8* %9245, align 1
  %9247 = icmp ne i8 %9246, 0
  %9248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9249 = load i8, i8* %9248, align 1
  %9250 = icmp ne i8 %9249, 0
  %9251 = xor i1 %9247, %9250
  %9252 = zext i1 %9251 to i8
  store i8 %9252, i8* %BRANCH_TAKEN, align 1
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9254 = select i1 %9251, i64 %9240, i64 %9242
  store i64 %9254, i64* %9253, align 8
  store %struct.Memory* %loadMem_4a9b43, %struct.Memory** %MEMORY
  %loadBr_4a9b43 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9b43 = icmp eq i8 %loadBr_4a9b43, 1
  br i1 %cmpBr_4a9b43, label %block_.L_4a9b58, label %block_4a9b49

block_4a9b49:                                     ; preds = %routine_idivl__esi.exit309
  %loadMem_4a9b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 33
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %9257 to i64*
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9259 = getelementptr inbounds %struct.GPR, %struct.GPR* %9258, i32 0, i32 1
  %9260 = getelementptr inbounds %struct.Reg, %struct.Reg* %9259, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %9260 to i64*
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 15
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %9263 to i64*
  %9264 = load i64, i64* %RBP.i301
  %9265 = sub i64 %9264, 7148
  %9266 = load i64, i64* %PC.i299
  %9267 = add i64 %9266, 6
  store i64 %9267, i64* %PC.i299
  %9268 = inttoptr i64 %9265 to i32*
  %9269 = load i32, i32* %9268
  %9270 = zext i32 %9269 to i64
  store i64 %9270, i64* %RAX.i300, align 8
  store %struct.Memory* %loadMem_4a9b49, %struct.Memory** %MEMORY
  %loadMem_4a9b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 33
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %9273 to i64*
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9275 = getelementptr inbounds %struct.GPR, %struct.GPR* %9274, i32 0, i32 1
  %9276 = getelementptr inbounds %struct.Reg, %struct.Reg* %9275, i32 0, i32 0
  %RAX.i298 = bitcast %union.anon* %9276 to i64*
  %9277 = load i64, i64* %RAX.i298
  %9278 = load i64, i64* %PC.i297
  %9279 = add i64 %9278, 3
  store i64 %9279, i64* %PC.i297
  %9280 = trunc i64 %9277 to i32
  %9281 = sub i32 %9280, 84
  %9282 = zext i32 %9281 to i64
  store i64 %9282, i64* %RAX.i298, align 8
  %9283 = icmp ult i32 %9280, 84
  %9284 = zext i1 %9283 to i8
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9284, i8* %9285, align 1
  %9286 = and i32 %9281, 255
  %9287 = call i32 @llvm.ctpop.i32(i32 %9286)
  %9288 = trunc i32 %9287 to i8
  %9289 = and i8 %9288, 1
  %9290 = xor i8 %9289, 1
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9290, i8* %9291, align 1
  %9292 = xor i64 84, %9277
  %9293 = trunc i64 %9292 to i32
  %9294 = xor i32 %9293, %9281
  %9295 = lshr i32 %9294, 4
  %9296 = trunc i32 %9295 to i8
  %9297 = and i8 %9296, 1
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9297, i8* %9298, align 1
  %9299 = icmp eq i32 %9281, 0
  %9300 = zext i1 %9299 to i8
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9300, i8* %9301, align 1
  %9302 = lshr i32 %9281, 31
  %9303 = trunc i32 %9302 to i8
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9303, i8* %9304, align 1
  %9305 = lshr i32 %9280, 31
  %9306 = xor i32 %9302, %9305
  %9307 = add i32 %9306, %9305
  %9308 = icmp eq i32 %9307, 2
  %9309 = zext i1 %9308 to i8
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9309, i8* %9310, align 1
  store %struct.Memory* %loadMem_4a9b4f, %struct.Memory** %MEMORY
  %loadMem_4a9b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 33
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %9313 to i64*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 1
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %EAX.i295 = bitcast %union.anon* %9316 to i32*
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 15
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %9319 to i64*
  %9320 = load i64, i64* %RBP.i296
  %9321 = sub i64 %9320, 7148
  %9322 = load i32, i32* %EAX.i295
  %9323 = zext i32 %9322 to i64
  %9324 = load i64, i64* %PC.i294
  %9325 = add i64 %9324, 6
  store i64 %9325, i64* %PC.i294
  %9326 = inttoptr i64 %9321 to i32*
  store i32 %9322, i32* %9326
  store %struct.Memory* %loadMem_4a9b52, %struct.Memory** %MEMORY
  br label %block_.L_4a9b58

block_.L_4a9b58:                                  ; preds = %block_4a9b49, %routine_idivl__esi.exit309
  %loadMem_4a9b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9328 = getelementptr inbounds %struct.GPR, %struct.GPR* %9327, i32 0, i32 33
  %9329 = getelementptr inbounds %struct.Reg, %struct.Reg* %9328, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %9329 to i64*
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 15
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %9332 to i64*
  %9333 = load i64, i64* %RBP.i293
  %9334 = sub i64 %9333, 7148
  %9335 = load i64, i64* %PC.i292
  %9336 = add i64 %9335, 7
  store i64 %9336, i64* %PC.i292
  %9337 = inttoptr i64 %9334 to i32*
  %9338 = load i32, i32* %9337
  %9339 = sub i32 %9338, -42
  %9340 = icmp ult i32 %9338, -42
  %9341 = zext i1 %9340 to i8
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9341, i8* %9342, align 1
  %9343 = and i32 %9339, 255
  %9344 = call i32 @llvm.ctpop.i32(i32 %9343)
  %9345 = trunc i32 %9344 to i8
  %9346 = and i8 %9345, 1
  %9347 = xor i8 %9346, 1
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9347, i8* %9348, align 1
  %9349 = xor i32 %9338, -42
  %9350 = xor i32 %9349, %9339
  %9351 = lshr i32 %9350, 4
  %9352 = trunc i32 %9351 to i8
  %9353 = and i8 %9352, 1
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9353, i8* %9354, align 1
  %9355 = icmp eq i32 %9339, 0
  %9356 = zext i1 %9355 to i8
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9356, i8* %9357, align 1
  %9358 = lshr i32 %9339, 31
  %9359 = trunc i32 %9358 to i8
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9359, i8* %9360, align 1
  %9361 = lshr i32 %9338, 31
  %9362 = xor i32 %9361, 1
  %9363 = xor i32 %9358, %9361
  %9364 = add i32 %9363, %9362
  %9365 = icmp eq i32 %9364, 2
  %9366 = zext i1 %9365 to i8
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9366, i8* %9367, align 1
  store %struct.Memory* %loadMem_4a9b58, %struct.Memory** %MEMORY
  %loadMem_4a9b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 33
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %9370 to i64*
  %9371 = load i64, i64* %PC.i291
  %9372 = add i64 %9371, 21
  %9373 = load i64, i64* %PC.i291
  %9374 = add i64 %9373, 6
  %9375 = load i64, i64* %PC.i291
  %9376 = add i64 %9375, 6
  store i64 %9376, i64* %PC.i291
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9378 = load i8, i8* %9377, align 1
  %9379 = icmp ne i8 %9378, 0
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9381 = load i8, i8* %9380, align 1
  %9382 = icmp ne i8 %9381, 0
  %9383 = xor i1 %9379, %9382
  %9384 = xor i1 %9383, true
  %9385 = zext i1 %9384 to i8
  store i8 %9385, i8* %BRANCH_TAKEN, align 1
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9387 = select i1 %9383, i64 %9374, i64 %9372
  store i64 %9387, i64* %9386, align 8
  store %struct.Memory* %loadMem_4a9b5f, %struct.Memory** %MEMORY
  %loadBr_4a9b5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9b5f = icmp eq i8 %loadBr_4a9b5f, 1
  br i1 %cmpBr_4a9b5f, label %block_.L_4a9b74, label %block_4a9b65

block_4a9b65:                                     ; preds = %block_.L_4a9b58
  %loadMem_4a9b65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9389 = getelementptr inbounds %struct.GPR, %struct.GPR* %9388, i32 0, i32 33
  %9390 = getelementptr inbounds %struct.Reg, %struct.Reg* %9389, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %9390 to i64*
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9392 = getelementptr inbounds %struct.GPR, %struct.GPR* %9391, i32 0, i32 1
  %9393 = getelementptr inbounds %struct.Reg, %struct.Reg* %9392, i32 0, i32 0
  %RAX.i289 = bitcast %union.anon* %9393 to i64*
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9395 = getelementptr inbounds %struct.GPR, %struct.GPR* %9394, i32 0, i32 15
  %9396 = getelementptr inbounds %struct.Reg, %struct.Reg* %9395, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %9396 to i64*
  %9397 = load i64, i64* %RBP.i290
  %9398 = sub i64 %9397, 7148
  %9399 = load i64, i64* %PC.i288
  %9400 = add i64 %9399, 6
  store i64 %9400, i64* %PC.i288
  %9401 = inttoptr i64 %9398 to i32*
  %9402 = load i32, i32* %9401
  %9403 = zext i32 %9402 to i64
  store i64 %9403, i64* %RAX.i289, align 8
  store %struct.Memory* %loadMem_4a9b65, %struct.Memory** %MEMORY
  %loadMem_4a9b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 33
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 1
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RAX.i287
  %9411 = load i64, i64* %PC.i286
  %9412 = add i64 %9411, 3
  store i64 %9412, i64* %PC.i286
  %9413 = trunc i64 %9410 to i32
  %9414 = add i32 84, %9413
  %9415 = zext i32 %9414 to i64
  store i64 %9415, i64* %RAX.i287, align 8
  %9416 = icmp ult i32 %9414, %9413
  %9417 = icmp ult i32 %9414, 84
  %9418 = or i1 %9416, %9417
  %9419 = zext i1 %9418 to i8
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9419, i8* %9420, align 1
  %9421 = and i32 %9414, 255
  %9422 = call i32 @llvm.ctpop.i32(i32 %9421)
  %9423 = trunc i32 %9422 to i8
  %9424 = and i8 %9423, 1
  %9425 = xor i8 %9424, 1
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9425, i8* %9426, align 1
  %9427 = xor i64 84, %9410
  %9428 = trunc i64 %9427 to i32
  %9429 = xor i32 %9428, %9414
  %9430 = lshr i32 %9429, 4
  %9431 = trunc i32 %9430 to i8
  %9432 = and i8 %9431, 1
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9432, i8* %9433, align 1
  %9434 = icmp eq i32 %9414, 0
  %9435 = zext i1 %9434 to i8
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9435, i8* %9436, align 1
  %9437 = lshr i32 %9414, 31
  %9438 = trunc i32 %9437 to i8
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9438, i8* %9439, align 1
  %9440 = lshr i32 %9413, 31
  %9441 = xor i32 %9437, %9440
  %9442 = add i32 %9441, %9437
  %9443 = icmp eq i32 %9442, 2
  %9444 = zext i1 %9443 to i8
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9444, i8* %9445, align 1
  store %struct.Memory* %loadMem_4a9b6b, %struct.Memory** %MEMORY
  %loadMem_4a9b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9447 = getelementptr inbounds %struct.GPR, %struct.GPR* %9446, i32 0, i32 33
  %9448 = getelementptr inbounds %struct.Reg, %struct.Reg* %9447, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %9448 to i64*
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9450 = getelementptr inbounds %struct.GPR, %struct.GPR* %9449, i32 0, i32 1
  %9451 = getelementptr inbounds %struct.Reg, %struct.Reg* %9450, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %9451 to i32*
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9453 = getelementptr inbounds %struct.GPR, %struct.GPR* %9452, i32 0, i32 15
  %9454 = getelementptr inbounds %struct.Reg, %struct.Reg* %9453, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %9454 to i64*
  %9455 = load i64, i64* %RBP.i285
  %9456 = sub i64 %9455, 7148
  %9457 = load i32, i32* %EAX.i284
  %9458 = zext i32 %9457 to i64
  %9459 = load i64, i64* %PC.i283
  %9460 = add i64 %9459, 6
  store i64 %9460, i64* %PC.i283
  %9461 = inttoptr i64 %9456 to i32*
  store i32 %9457, i32* %9461
  store %struct.Memory* %loadMem_4a9b6e, %struct.Memory** %MEMORY
  br label %block_.L_4a9b74

block_.L_4a9b74:                                  ; preds = %block_4a9b65, %block_.L_4a9b58
  %loadMem_4a9b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9463 = getelementptr inbounds %struct.GPR, %struct.GPR* %9462, i32 0, i32 33
  %9464 = getelementptr inbounds %struct.Reg, %struct.Reg* %9463, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %9464 to i64*
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9466 = getelementptr inbounds %struct.GPR, %struct.GPR* %9465, i32 0, i32 1
  %9467 = getelementptr inbounds %struct.Reg, %struct.Reg* %9466, i32 0, i32 0
  %RAX.i282 = bitcast %union.anon* %9467 to i64*
  %9468 = load i64, i64* %PC.i281
  %9469 = add i64 %9468, 5
  store i64 %9469, i64* %PC.i281
  store i64 84, i64* %RAX.i282, align 8
  store %struct.Memory* %loadMem_4a9b74, %struct.Memory** %MEMORY
  %loadMem_4a9b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 33
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %9472 to i64*
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 5
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %9475 to i64*
  %9476 = load i64, i64* %PC.i279
  %9477 = add i64 %9476, 10
  store i64 %9477, i64* %PC.i279
  store i64 ptrtoint (%G__0xb8c050_type* @G__0xb8c050 to i64), i64* %RCX.i280, align 8
  store %struct.Memory* %loadMem_4a9b79, %struct.Memory** %MEMORY
  %loadMem_4a9b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9479 = getelementptr inbounds %struct.GPR, %struct.GPR* %9478, i32 0, i32 33
  %9480 = getelementptr inbounds %struct.Reg, %struct.Reg* %9479, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %9480 to i64*
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9482 = getelementptr inbounds %struct.GPR, %struct.GPR* %9481, i32 0, i32 7
  %9483 = getelementptr inbounds %struct.Reg, %struct.Reg* %9482, i32 0, i32 0
  %RDX.i277 = bitcast %union.anon* %9483 to i64*
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 15
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %9486 to i64*
  %9487 = load i64, i64* %RBP.i278
  %9488 = sub i64 %9487, 7152
  %9489 = load i64, i64* %PC.i276
  %9490 = add i64 %9489, 7
  store i64 %9490, i64* %PC.i276
  %9491 = inttoptr i64 %9488 to i32*
  %9492 = load i32, i32* %9491
  %9493 = sext i32 %9492 to i64
  store i64 %9493, i64* %RDX.i277, align 8
  store %struct.Memory* %loadMem_4a9b83, %struct.Memory** %MEMORY
  %loadMem_4a9b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 33
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %9496 to i64*
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9498 = getelementptr inbounds %struct.GPR, %struct.GPR* %9497, i32 0, i32 7
  %9499 = getelementptr inbounds %struct.Reg, %struct.Reg* %9498, i32 0, i32 0
  %RDX.i275 = bitcast %union.anon* %9499 to i64*
  %9500 = load i64, i64* %RDX.i275
  %9501 = load i64, i64* %PC.i274
  %9502 = add i64 %9501, 4
  store i64 %9502, i64* %PC.i274
  %9503 = shl i64 %9500, 4
  %9504 = icmp slt i64 %9503, 0
  %9505 = shl i64 %9503, 1
  store i64 %9505, i64* %RDX.i275, align 8
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9507 = zext i1 %9504 to i8
  store i8 %9507, i8* %9506, align 1
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9509 = trunc i64 %9505 to i32
  %9510 = and i32 %9509, 254
  %9511 = call i32 @llvm.ctpop.i32(i32 %9510)
  %9512 = trunc i32 %9511 to i8
  %9513 = and i8 %9512, 1
  %9514 = xor i8 %9513, 1
  store i8 %9514, i8* %9508, align 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9515, align 1
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9517 = icmp eq i64 %9505, 0
  %9518 = zext i1 %9517 to i8
  store i8 %9518, i8* %9516, align 1
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9520 = lshr i64 %9505, 63
  %9521 = trunc i64 %9520 to i8
  store i8 %9521, i8* %9519, align 1
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9522, align 1
  store %struct.Memory* %loadMem_4a9b8a, %struct.Memory** %MEMORY
  %loadMem_4a9b8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9524 = getelementptr inbounds %struct.GPR, %struct.GPR* %9523, i32 0, i32 33
  %9525 = getelementptr inbounds %struct.Reg, %struct.Reg* %9524, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %9525 to i64*
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9527 = getelementptr inbounds %struct.GPR, %struct.GPR* %9526, i32 0, i32 5
  %9528 = getelementptr inbounds %struct.Reg, %struct.Reg* %9527, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %9528 to i64*
  %9529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9530 = getelementptr inbounds %struct.GPR, %struct.GPR* %9529, i32 0, i32 7
  %9531 = getelementptr inbounds %struct.Reg, %struct.Reg* %9530, i32 0, i32 0
  %RDX.i273 = bitcast %union.anon* %9531 to i64*
  %9532 = load i64, i64* %RCX.i272
  %9533 = load i64, i64* %RDX.i273
  %9534 = load i64, i64* %PC.i271
  %9535 = add i64 %9534, 3
  store i64 %9535, i64* %PC.i271
  %9536 = add i64 %9533, %9532
  store i64 %9536, i64* %RCX.i272, align 8
  %9537 = icmp ult i64 %9536, %9532
  %9538 = icmp ult i64 %9536, %9533
  %9539 = or i1 %9537, %9538
  %9540 = zext i1 %9539 to i8
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9540, i8* %9541, align 1
  %9542 = trunc i64 %9536 to i32
  %9543 = and i32 %9542, 255
  %9544 = call i32 @llvm.ctpop.i32(i32 %9543)
  %9545 = trunc i32 %9544 to i8
  %9546 = and i8 %9545, 1
  %9547 = xor i8 %9546, 1
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9547, i8* %9548, align 1
  %9549 = xor i64 %9533, %9532
  %9550 = xor i64 %9549, %9536
  %9551 = lshr i64 %9550, 4
  %9552 = trunc i64 %9551 to i8
  %9553 = and i8 %9552, 1
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9553, i8* %9554, align 1
  %9555 = icmp eq i64 %9536, 0
  %9556 = zext i1 %9555 to i8
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9556, i8* %9557, align 1
  %9558 = lshr i64 %9536, 63
  %9559 = trunc i64 %9558 to i8
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9559, i8* %9560, align 1
  %9561 = lshr i64 %9532, 63
  %9562 = lshr i64 %9533, 63
  %9563 = xor i64 %9558, %9561
  %9564 = xor i64 %9558, %9562
  %9565 = add i64 %9563, %9564
  %9566 = icmp eq i64 %9565, 2
  %9567 = zext i1 %9566 to i8
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9567, i8* %9568, align 1
  store %struct.Memory* %loadMem_4a9b8e, %struct.Memory** %MEMORY
  %loadMem_4a9b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 33
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %9571 to i64*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 7
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RDX.i269 = bitcast %union.anon* %9574 to i64*
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 15
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %9577 to i64*
  %9578 = load i64, i64* %RBP.i270
  %9579 = sub i64 %9578, 52
  %9580 = load i64, i64* %PC.i268
  %9581 = add i64 %9580, 4
  store i64 %9581, i64* %PC.i268
  %9582 = inttoptr i64 %9579 to i32*
  %9583 = load i32, i32* %9582
  %9584 = sext i32 %9583 to i64
  store i64 %9584, i64* %RDX.i269, align 8
  store %struct.Memory* %loadMem_4a9b91, %struct.Memory** %MEMORY
  %loadMem_4a9b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 33
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %9587 to i64*
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 5
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %RCX.i265 = bitcast %union.anon* %9590 to i64*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 7
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %RDX.i266 = bitcast %union.anon* %9593 to i64*
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 9
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %RSI.i267 = bitcast %union.anon* %9596 to i64*
  %9597 = load i64, i64* %RCX.i265
  %9598 = load i64, i64* %RDX.i266
  %9599 = mul i64 %9598, 4
  %9600 = add i64 %9599, %9597
  %9601 = load i64, i64* %PC.i264
  %9602 = add i64 %9601, 3
  store i64 %9602, i64* %PC.i264
  %9603 = inttoptr i64 %9600 to i32*
  %9604 = load i32, i32* %9603
  %9605 = zext i32 %9604 to i64
  store i64 %9605, i64* %RSI.i267, align 8
  store %struct.Memory* %loadMem_4a9b95, %struct.Memory** %MEMORY
  %loadMem_4a9b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9607 = getelementptr inbounds %struct.GPR, %struct.GPR* %9606, i32 0, i32 33
  %9608 = getelementptr inbounds %struct.Reg, %struct.Reg* %9607, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %9608 to i64*
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 9
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %RSI.i262 = bitcast %union.anon* %9611 to i64*
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9613 = getelementptr inbounds %struct.GPR, %struct.GPR* %9612, i32 0, i32 15
  %9614 = getelementptr inbounds %struct.Reg, %struct.Reg* %9613, i32 0, i32 0
  %RBP.i263 = bitcast %union.anon* %9614 to i64*
  %9615 = load i64, i64* %RSI.i262
  %9616 = load i64, i64* %RBP.i263
  %9617 = sub i64 %9616, 7148
  %9618 = load i64, i64* %PC.i261
  %9619 = add i64 %9618, 6
  store i64 %9619, i64* %PC.i261
  %9620 = trunc i64 %9615 to i32
  %9621 = inttoptr i64 %9617 to i32*
  %9622 = load i32, i32* %9621
  %9623 = sub i32 %9620, %9622
  %9624 = zext i32 %9623 to i64
  store i64 %9624, i64* %RSI.i262, align 8
  %9625 = icmp ult i32 %9620, %9622
  %9626 = zext i1 %9625 to i8
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9626, i8* %9627, align 1
  %9628 = and i32 %9623, 255
  %9629 = call i32 @llvm.ctpop.i32(i32 %9628)
  %9630 = trunc i32 %9629 to i8
  %9631 = and i8 %9630, 1
  %9632 = xor i8 %9631, 1
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9632, i8* %9633, align 1
  %9634 = xor i32 %9622, %9620
  %9635 = xor i32 %9634, %9623
  %9636 = lshr i32 %9635, 4
  %9637 = trunc i32 %9636 to i8
  %9638 = and i8 %9637, 1
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9638, i8* %9639, align 1
  %9640 = icmp eq i32 %9623, 0
  %9641 = zext i1 %9640 to i8
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9641, i8* %9642, align 1
  %9643 = lshr i32 %9623, 31
  %9644 = trunc i32 %9643 to i8
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9644, i8* %9645, align 1
  %9646 = lshr i32 %9620, 31
  %9647 = lshr i32 %9622, 31
  %9648 = xor i32 %9647, %9646
  %9649 = xor i32 %9643, %9646
  %9650 = add i32 %9649, %9648
  %9651 = icmp eq i32 %9650, 2
  %9652 = zext i1 %9651 to i8
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9652, i8* %9653, align 1
  store %struct.Memory* %loadMem_4a9b98, %struct.Memory** %MEMORY
  %loadMem_4a9b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9655 = getelementptr inbounds %struct.GPR, %struct.GPR* %9654, i32 0, i32 33
  %9656 = getelementptr inbounds %struct.Reg, %struct.Reg* %9655, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %9656 to i64*
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 1
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %9659 to i32*
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 15
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %9662 to i64*
  %9663 = load i64, i64* %RBP.i260
  %9664 = sub i64 %9663, 7224
  %9665 = load i32, i32* %EAX.i259
  %9666 = zext i32 %9665 to i64
  %9667 = load i64, i64* %PC.i258
  %9668 = add i64 %9667, 6
  store i64 %9668, i64* %PC.i258
  %9669 = inttoptr i64 %9664 to i32*
  store i32 %9665, i32* %9669
  store %struct.Memory* %loadMem_4a9b9e, %struct.Memory** %MEMORY
  %loadMem_4a9ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 33
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %9672 to i64*
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9674 = getelementptr inbounds %struct.GPR, %struct.GPR* %9673, i32 0, i32 9
  %9675 = getelementptr inbounds %struct.Reg, %struct.Reg* %9674, i32 0, i32 0
  %ESI.i256 = bitcast %union.anon* %9675 to i32*
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 1
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %9678 to i64*
  %9679 = load i32, i32* %ESI.i256
  %9680 = zext i32 %9679 to i64
  %9681 = load i64, i64* %PC.i255
  %9682 = add i64 %9681, 2
  store i64 %9682, i64* %PC.i255
  %9683 = and i64 %9680, 4294967295
  store i64 %9683, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_4a9ba4, %struct.Memory** %MEMORY
  %loadMem_4a9ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 33
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %9686 to i64*
  %9687 = load i64, i64* %PC.i254
  %9688 = add i64 %9687, 1
  store i64 %9688, i64* %PC.i254
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9691 = bitcast %union.anon* %9690 to i32*
  %9692 = load i32, i32* %9691, align 8
  %9693 = sext i32 %9692 to i64
  %9694 = lshr i64 %9693, 32
  store i64 %9694, i64* %9689, align 8
  store %struct.Memory* %loadMem_4a9ba6, %struct.Memory** %MEMORY
  %loadMem_4a9ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9696 = getelementptr inbounds %struct.GPR, %struct.GPR* %9695, i32 0, i32 33
  %9697 = getelementptr inbounds %struct.Reg, %struct.Reg* %9696, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9697 to i64*
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9699 = getelementptr inbounds %struct.GPR, %struct.GPR* %9698, i32 0, i32 9
  %9700 = getelementptr inbounds %struct.Reg, %struct.Reg* %9699, i32 0, i32 0
  %RSI.i252 = bitcast %union.anon* %9700 to i64*
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9702 = getelementptr inbounds %struct.GPR, %struct.GPR* %9701, i32 0, i32 15
  %9703 = getelementptr inbounds %struct.Reg, %struct.Reg* %9702, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %9703 to i64*
  %9704 = load i64, i64* %RBP.i253
  %9705 = sub i64 %9704, 7224
  %9706 = load i64, i64* %PC.i251
  %9707 = add i64 %9706, 6
  store i64 %9707, i64* %PC.i251
  %9708 = inttoptr i64 %9705 to i32*
  %9709 = load i32, i32* %9708
  %9710 = zext i32 %9709 to i64
  store i64 %9710, i64* %RSI.i252, align 8
  store %struct.Memory* %loadMem_4a9ba7, %struct.Memory** %MEMORY
  %loadMem_4a9bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 33
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %9713 to i64*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 9
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %9716 to i32*
  %9717 = load i32, i32* %ESI.i
  %9718 = zext i32 %9717 to i64
  %9719 = load i64, i64* %PC.i247
  %9720 = add i64 %9719, 2
  store i64 %9720, i64* %PC.i247
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9722 = bitcast %union.anon* %9721 to i32*
  %9723 = load i32, i32* %9722, align 8
  %9724 = zext i32 %9723 to i64
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9726 = bitcast %union.anon* %9725 to i32*
  %9727 = load i32, i32* %9726, align 8
  %9728 = zext i32 %9727 to i64
  %9729 = shl i64 %9718, 32
  %9730 = ashr exact i64 %9729, 32
  %9731 = shl i64 %9728, 32
  %9732 = or i64 %9731, %9724
  %9733 = sdiv i64 %9732, %9730
  %9734 = shl i64 %9733, 32
  %9735 = ashr exact i64 %9734, 32
  %9736 = icmp eq i64 %9733, %9735
  br i1 %9736, label %9741, label %9737

; <label>:9737:                                   ; preds = %block_.L_4a9b74
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9739 = load i64, i64* %9738, align 8
  %9740 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9739, %struct.Memory* %loadMem_4a9bad)
  br label %routine_idivl__esi.exit

; <label>:9741:                                   ; preds = %block_.L_4a9b74
  %9742 = srem i64 %9732, %9730
  %9743 = getelementptr inbounds %union.anon, %union.anon* %9721, i64 0, i32 0
  %9744 = and i64 %9733, 4294967295
  store i64 %9744, i64* %9743, align 8
  %9745 = getelementptr inbounds %union.anon, %union.anon* %9725, i64 0, i32 0
  %9746 = and i64 %9742, 4294967295
  store i64 %9746, i64* %9745, align 8
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9747, align 1
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9748, align 1
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9749, align 1
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9750, align 1
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9751, align 1
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9752, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %9737, %9741
  %9753 = phi %struct.Memory* [ %9740, %9737 ], [ %loadMem_4a9bad, %9741 ]
  store %struct.Memory* %9753, %struct.Memory** %MEMORY
  %loadMem_4a9baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 33
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 1
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %EAX.i245 = bitcast %union.anon* %9759 to i32*
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9761 = getelementptr inbounds %struct.GPR, %struct.GPR* %9760, i32 0, i32 15
  %9762 = getelementptr inbounds %struct.Reg, %struct.Reg* %9761, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %9762 to i64*
  %9763 = load i64, i64* %RBP.i246
  %9764 = sub i64 %9763, 7144
  %9765 = load i32, i32* %EAX.i245
  %9766 = zext i32 %9765 to i64
  %9767 = load i64, i64* %PC.i244
  %9768 = add i64 %9767, 6
  store i64 %9768, i64* %PC.i244
  %9769 = inttoptr i64 %9764 to i32*
  store i32 %9765, i32* %9769
  store %struct.Memory* %loadMem_4a9baf, %struct.Memory** %MEMORY
  %loadMem_4a9bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9771 = getelementptr inbounds %struct.GPR, %struct.GPR* %9770, i32 0, i32 33
  %9772 = getelementptr inbounds %struct.Reg, %struct.Reg* %9771, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %9772 to i64*
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9774 = getelementptr inbounds %struct.GPR, %struct.GPR* %9773, i32 0, i32 1
  %9775 = getelementptr inbounds %struct.Reg, %struct.Reg* %9774, i32 0, i32 0
  %RAX.i242 = bitcast %union.anon* %9775 to i64*
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9777 = getelementptr inbounds %struct.GPR, %struct.GPR* %9776, i32 0, i32 15
  %9778 = getelementptr inbounds %struct.Reg, %struct.Reg* %9777, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %9778 to i64*
  %9779 = load i64, i64* %RBP.i243
  %9780 = sub i64 %9779, 7144
  %9781 = load i64, i64* %PC.i241
  %9782 = add i64 %9781, 6
  store i64 %9782, i64* %PC.i241
  %9783 = inttoptr i64 %9780 to i32*
  %9784 = load i32, i32* %9783
  %9785 = zext i32 %9784 to i64
  store i64 %9785, i64* %RAX.i242, align 8
  store %struct.Memory* %loadMem_4a9bb5, %struct.Memory** %MEMORY
  %loadMem_4a9bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 33
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9788 to i64*
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9790 = getelementptr inbounds %struct.GPR, %struct.GPR* %9789, i32 0, i32 5
  %9791 = getelementptr inbounds %struct.Reg, %struct.Reg* %9790, i32 0, i32 0
  %RCX.i239 = bitcast %union.anon* %9791 to i64*
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9793 = getelementptr inbounds %struct.GPR, %struct.GPR* %9792, i32 0, i32 15
  %9794 = getelementptr inbounds %struct.Reg, %struct.Reg* %9793, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %9794 to i64*
  %9795 = load i64, i64* %RBP.i240
  %9796 = sub i64 %9795, 32
  %9797 = load i64, i64* %PC.i238
  %9798 = add i64 %9797, 4
  store i64 %9798, i64* %PC.i238
  %9799 = inttoptr i64 %9796 to i64*
  %9800 = load i64, i64* %9799
  store i64 %9800, i64* %RCX.i239, align 8
  store %struct.Memory* %loadMem_4a9bbb, %struct.Memory** %MEMORY
  %loadMem_4a9bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 33
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %9803 to i64*
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9805 = getelementptr inbounds %struct.GPR, %struct.GPR* %9804, i32 0, i32 1
  %9806 = getelementptr inbounds %struct.Reg, %struct.Reg* %9805, i32 0, i32 0
  %EAX.i236 = bitcast %union.anon* %9806 to i32*
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9808 = getelementptr inbounds %struct.GPR, %struct.GPR* %9807, i32 0, i32 5
  %9809 = getelementptr inbounds %struct.Reg, %struct.Reg* %9808, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %9809 to i64*
  %9810 = load i32, i32* %EAX.i236
  %9811 = zext i32 %9810 to i64
  %9812 = load i64, i64* %RCX.i237
  %9813 = add i64 %9812, 32
  %9814 = load i64, i64* %PC.i235
  %9815 = add i64 %9814, 3
  store i64 %9815, i64* %PC.i235
  %9816 = inttoptr i64 %9813 to i32*
  %9817 = load i32, i32* %9816
  %9818 = sub i32 %9810, %9817
  %9819 = icmp ult i32 %9810, %9817
  %9820 = zext i1 %9819 to i8
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9820, i8* %9821, align 1
  %9822 = and i32 %9818, 255
  %9823 = call i32 @llvm.ctpop.i32(i32 %9822)
  %9824 = trunc i32 %9823 to i8
  %9825 = and i8 %9824, 1
  %9826 = xor i8 %9825, 1
  %9827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9826, i8* %9827, align 1
  %9828 = xor i32 %9817, %9810
  %9829 = xor i32 %9828, %9818
  %9830 = lshr i32 %9829, 4
  %9831 = trunc i32 %9830 to i8
  %9832 = and i8 %9831, 1
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9832, i8* %9833, align 1
  %9834 = icmp eq i32 %9818, 0
  %9835 = zext i1 %9834 to i8
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9835, i8* %9836, align 1
  %9837 = lshr i32 %9818, 31
  %9838 = trunc i32 %9837 to i8
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9838, i8* %9839, align 1
  %9840 = lshr i32 %9810, 31
  %9841 = lshr i32 %9817, 31
  %9842 = xor i32 %9841, %9840
  %9843 = xor i32 %9837, %9840
  %9844 = add i32 %9843, %9842
  %9845 = icmp eq i32 %9844, 2
  %9846 = zext i1 %9845 to i8
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9846, i8* %9847, align 1
  store %struct.Memory* %loadMem_4a9bbf, %struct.Memory** %MEMORY
  %loadMem_4a9bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 33
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %9850 to i64*
  %9851 = load i64, i64* %PC.i234
  %9852 = add i64 %9851, 21
  %9853 = load i64, i64* %PC.i234
  %9854 = add i64 %9853, 6
  %9855 = load i64, i64* %PC.i234
  %9856 = add i64 %9855, 6
  store i64 %9856, i64* %PC.i234
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9858 = load i8, i8* %9857, align 1
  %9859 = icmp eq i8 %9858, 0
  %9860 = zext i1 %9859 to i8
  store i8 %9860, i8* %BRANCH_TAKEN, align 1
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9862 = select i1 %9859, i64 %9852, i64 %9854
  store i64 %9862, i64* %9861, align 8
  store %struct.Memory* %loadMem_4a9bc2, %struct.Memory** %MEMORY
  %loadBr_4a9bc2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9bc2 = icmp eq i8 %loadBr_4a9bc2, 1
  br i1 %cmpBr_4a9bc2, label %block_.L_4a9bd7, label %block_4a9bc8

block_4a9bc8:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_4a9bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 33
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %9865 to i64*
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9867 = getelementptr inbounds %struct.GPR, %struct.GPR* %9866, i32 0, i32 1
  %9868 = getelementptr inbounds %struct.Reg, %struct.Reg* %9867, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %9868 to i64*
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 15
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %RBP.i233 = bitcast %union.anon* %9871 to i64*
  %9872 = load i64, i64* %RBP.i233
  %9873 = sub i64 %9872, 7136
  %9874 = load i64, i64* %PC.i231
  %9875 = add i64 %9874, 6
  store i64 %9875, i64* %PC.i231
  %9876 = inttoptr i64 %9873 to i32*
  %9877 = load i32, i32* %9876
  %9878 = zext i32 %9877 to i64
  store i64 %9878, i64* %RAX.i232, align 8
  store %struct.Memory* %loadMem_4a9bc8, %struct.Memory** %MEMORY
  %loadMem_4a9bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 33
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %9881 to i64*
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 1
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %RAX.i230 = bitcast %union.anon* %9884 to i64*
  %9885 = load i64, i64* %RAX.i230
  %9886 = load i64, i64* %PC.i229
  %9887 = add i64 %9886, 3
  store i64 %9887, i64* %PC.i229
  %9888 = and i64 -3, %9885
  %9889 = trunc i64 %9888 to i32
  %9890 = and i64 %9888, 4294967295
  store i64 %9890, i64* %RAX.i230, align 8
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9891, align 1
  %9892 = and i32 %9889, 255
  %9893 = call i32 @llvm.ctpop.i32(i32 %9892)
  %9894 = trunc i32 %9893 to i8
  %9895 = and i8 %9894, 1
  %9896 = xor i8 %9895, 1
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9896, i8* %9897, align 1
  %9898 = icmp eq i32 %9889, 0
  %9899 = zext i1 %9898 to i8
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9899, i8* %9900, align 1
  %9901 = lshr i32 %9889, 31
  %9902 = trunc i32 %9901 to i8
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9902, i8* %9903, align 1
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9904, align 1
  %9905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9905, align 1
  store %struct.Memory* %loadMem_4a9bce, %struct.Memory** %MEMORY
  %loadMem_4a9bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9907 = getelementptr inbounds %struct.GPR, %struct.GPR* %9906, i32 0, i32 33
  %9908 = getelementptr inbounds %struct.Reg, %struct.Reg* %9907, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %9908 to i64*
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9910 = getelementptr inbounds %struct.GPR, %struct.GPR* %9909, i32 0, i32 1
  %9911 = getelementptr inbounds %struct.Reg, %struct.Reg* %9910, i32 0, i32 0
  %EAX.i227 = bitcast %union.anon* %9911 to i32*
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 15
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %9914 to i64*
  %9915 = load i64, i64* %RBP.i228
  %9916 = sub i64 %9915, 7136
  %9917 = load i32, i32* %EAX.i227
  %9918 = zext i32 %9917 to i64
  %9919 = load i64, i64* %PC.i226
  %9920 = add i64 %9919, 6
  store i64 %9920, i64* %PC.i226
  %9921 = inttoptr i64 %9916 to i32*
  store i32 %9917, i32* %9921
  store %struct.Memory* %loadMem_4a9bd1, %struct.Memory** %MEMORY
  br label %block_.L_4a9bd7

block_.L_4a9bd7:                                  ; preds = %block_4a9bc8, %routine_idivl__esi.exit
  %loadMem_4a9bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9923 = getelementptr inbounds %struct.GPR, %struct.GPR* %9922, i32 0, i32 33
  %9924 = getelementptr inbounds %struct.Reg, %struct.Reg* %9923, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9924 to i64*
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9926 = getelementptr inbounds %struct.GPR, %struct.GPR* %9925, i32 0, i32 1
  %9927 = getelementptr inbounds %struct.Reg, %struct.Reg* %9926, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %9927 to i64*
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9929 = getelementptr inbounds %struct.GPR, %struct.GPR* %9928, i32 0, i32 15
  %9930 = getelementptr inbounds %struct.Reg, %struct.Reg* %9929, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %9930 to i64*
  %9931 = load i64, i64* %RBP.i225
  %9932 = sub i64 %9931, 7144
  %9933 = load i64, i64* %PC.i223
  %9934 = add i64 %9933, 6
  store i64 %9934, i64* %PC.i223
  %9935 = inttoptr i64 %9932 to i32*
  %9936 = load i32, i32* %9935
  %9937 = zext i32 %9936 to i64
  store i64 %9937, i64* %RAX.i224, align 8
  store %struct.Memory* %loadMem_4a9bd7, %struct.Memory** %MEMORY
  %loadMem_4a9bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9939 = getelementptr inbounds %struct.GPR, %struct.GPR* %9938, i32 0, i32 33
  %9940 = getelementptr inbounds %struct.Reg, %struct.Reg* %9939, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %9940 to i64*
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9942 = getelementptr inbounds %struct.GPR, %struct.GPR* %9941, i32 0, i32 5
  %9943 = getelementptr inbounds %struct.Reg, %struct.Reg* %9942, i32 0, i32 0
  %RCX.i221 = bitcast %union.anon* %9943 to i64*
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 15
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %9946 to i64*
  %9947 = load i64, i64* %RBP.i222
  %9948 = sub i64 %9947, 32
  %9949 = load i64, i64* %PC.i220
  %9950 = add i64 %9949, 4
  store i64 %9950, i64* %PC.i220
  %9951 = inttoptr i64 %9948 to i64*
  %9952 = load i64, i64* %9951
  store i64 %9952, i64* %RCX.i221, align 8
  store %struct.Memory* %loadMem_4a9bdd, %struct.Memory** %MEMORY
  %loadMem_4a9be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 33
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %9955 to i64*
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9957 = getelementptr inbounds %struct.GPR, %struct.GPR* %9956, i32 0, i32 1
  %9958 = getelementptr inbounds %struct.Reg, %struct.Reg* %9957, i32 0, i32 0
  %EAX.i218 = bitcast %union.anon* %9958 to i32*
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 5
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %RCX.i219 = bitcast %union.anon* %9961 to i64*
  %9962 = load i32, i32* %EAX.i218
  %9963 = zext i32 %9962 to i64
  %9964 = load i64, i64* %RCX.i219
  %9965 = add i64 %9964, 24
  %9966 = load i64, i64* %PC.i217
  %9967 = add i64 %9966, 3
  store i64 %9967, i64* %PC.i217
  %9968 = inttoptr i64 %9965 to i32*
  %9969 = load i32, i32* %9968
  %9970 = sub i32 %9962, %9969
  %9971 = icmp ult i32 %9962, %9969
  %9972 = zext i1 %9971 to i8
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9972, i8* %9973, align 1
  %9974 = and i32 %9970, 255
  %9975 = call i32 @llvm.ctpop.i32(i32 %9974)
  %9976 = trunc i32 %9975 to i8
  %9977 = and i8 %9976, 1
  %9978 = xor i8 %9977, 1
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9978, i8* %9979, align 1
  %9980 = xor i32 %9969, %9962
  %9981 = xor i32 %9980, %9970
  %9982 = lshr i32 %9981, 4
  %9983 = trunc i32 %9982 to i8
  %9984 = and i8 %9983, 1
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9984, i8* %9985, align 1
  %9986 = icmp eq i32 %9970, 0
  %9987 = zext i1 %9986 to i8
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9987, i8* %9988, align 1
  %9989 = lshr i32 %9970, 31
  %9990 = trunc i32 %9989 to i8
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9990, i8* %9991, align 1
  %9992 = lshr i32 %9962, 31
  %9993 = lshr i32 %9969, 31
  %9994 = xor i32 %9993, %9992
  %9995 = xor i32 %9989, %9992
  %9996 = add i32 %9995, %9994
  %9997 = icmp eq i32 %9996, 2
  %9998 = zext i1 %9997 to i8
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9998, i8* %9999, align 1
  store %struct.Memory* %loadMem_4a9be1, %struct.Memory** %MEMORY
  %loadMem_4a9be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10001 = getelementptr inbounds %struct.GPR, %struct.GPR* %10000, i32 0, i32 33
  %10002 = getelementptr inbounds %struct.Reg, %struct.Reg* %10001, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %10002 to i64*
  %10003 = load i64, i64* %PC.i216
  %10004 = add i64 %10003, 21
  %10005 = load i64, i64* %PC.i216
  %10006 = add i64 %10005, 6
  %10007 = load i64, i64* %PC.i216
  %10008 = add i64 %10007, 6
  store i64 %10008, i64* %PC.i216
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10010 = load i8, i8* %10009, align 1
  %10011 = icmp eq i8 %10010, 0
  %10012 = zext i1 %10011 to i8
  store i8 %10012, i8* %BRANCH_TAKEN, align 1
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10014 = select i1 %10011, i64 %10004, i64 %10006
  store i64 %10014, i64* %10013, align 8
  store %struct.Memory* %loadMem_4a9be4, %struct.Memory** %MEMORY
  %loadBr_4a9be4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9be4 = icmp eq i8 %loadBr_4a9be4, 1
  br i1 %cmpBr_4a9be4, label %block_.L_4a9bf9, label %block_4a9bea

block_4a9bea:                                     ; preds = %block_.L_4a9bd7
  %loadMem_4a9bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 33
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %10017 to i64*
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 1
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %10020 to i64*
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 15
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %10023 to i64*
  %10024 = load i64, i64* %RBP.i215
  %10025 = sub i64 %10024, 7136
  %10026 = load i64, i64* %PC.i213
  %10027 = add i64 %10026, 6
  store i64 %10027, i64* %PC.i213
  %10028 = inttoptr i64 %10025 to i32*
  %10029 = load i32, i32* %10028
  %10030 = zext i32 %10029 to i64
  store i64 %10030, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_4a9bea, %struct.Memory** %MEMORY
  %loadMem_4a9bf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 33
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 1
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %10036 to i64*
  %10037 = load i64, i64* %RAX.i212
  %10038 = load i64, i64* %PC.i211
  %10039 = add i64 %10038, 3
  store i64 %10039, i64* %PC.i211
  %10040 = and i64 -2, %10037
  %10041 = trunc i64 %10040 to i32
  %10042 = and i64 %10040, 4294967295
  store i64 %10042, i64* %RAX.i212, align 8
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10043, align 1
  %10044 = and i32 %10041, 255
  %10045 = call i32 @llvm.ctpop.i32(i32 %10044)
  %10046 = trunc i32 %10045 to i8
  %10047 = and i8 %10046, 1
  %10048 = xor i8 %10047, 1
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10048, i8* %10049, align 1
  %10050 = icmp eq i32 %10041, 0
  %10051 = zext i1 %10050 to i8
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10051, i8* %10052, align 1
  %10053 = lshr i32 %10041, 31
  %10054 = trunc i32 %10053 to i8
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10054, i8* %10055, align 1
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10056, align 1
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10057, align 1
  store %struct.Memory* %loadMem_4a9bf0, %struct.Memory** %MEMORY
  %loadMem_4a9bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 33
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %10060 to i64*
  %10061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10062 = getelementptr inbounds %struct.GPR, %struct.GPR* %10061, i32 0, i32 1
  %10063 = getelementptr inbounds %struct.Reg, %struct.Reg* %10062, i32 0, i32 0
  %EAX.i209 = bitcast %union.anon* %10063 to i32*
  %10064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10065 = getelementptr inbounds %struct.GPR, %struct.GPR* %10064, i32 0, i32 15
  %10066 = getelementptr inbounds %struct.Reg, %struct.Reg* %10065, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %10066 to i64*
  %10067 = load i64, i64* %RBP.i210
  %10068 = sub i64 %10067, 7136
  %10069 = load i32, i32* %EAX.i209
  %10070 = zext i32 %10069 to i64
  %10071 = load i64, i64* %PC.i208
  %10072 = add i64 %10071, 6
  store i64 %10072, i64* %PC.i208
  %10073 = inttoptr i64 %10068 to i32*
  store i32 %10069, i32* %10073
  store %struct.Memory* %loadMem_4a9bf3, %struct.Memory** %MEMORY
  br label %block_.L_4a9bf9

block_.L_4a9bf9:                                  ; preds = %block_4a9bea, %block_.L_4a9bd7
  %loadMem_4a9bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10075 = getelementptr inbounds %struct.GPR, %struct.GPR* %10074, i32 0, i32 33
  %10076 = getelementptr inbounds %struct.Reg, %struct.Reg* %10075, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %10076 to i64*
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10078 = getelementptr inbounds %struct.GPR, %struct.GPR* %10077, i32 0, i32 1
  %10079 = getelementptr inbounds %struct.Reg, %struct.Reg* %10078, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %10079 to i64*
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10081 = getelementptr inbounds %struct.GPR, %struct.GPR* %10080, i32 0, i32 15
  %10082 = getelementptr inbounds %struct.Reg, %struct.Reg* %10081, i32 0, i32 0
  %RBP.i207 = bitcast %union.anon* %10082 to i64*
  %10083 = load i64, i64* %RBP.i207
  %10084 = sub i64 %10083, 7148
  %10085 = load i64, i64* %PC.i205
  %10086 = add i64 %10085, 6
  store i64 %10086, i64* %PC.i205
  %10087 = inttoptr i64 %10084 to i32*
  %10088 = load i32, i32* %10087
  %10089 = zext i32 %10088 to i64
  store i64 %10089, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_4a9bf9, %struct.Memory** %MEMORY
  %loadMem_4a9bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 33
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 5
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %RCX.i203 = bitcast %union.anon* %10095 to i64*
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10097 = getelementptr inbounds %struct.GPR, %struct.GPR* %10096, i32 0, i32 15
  %10098 = getelementptr inbounds %struct.Reg, %struct.Reg* %10097, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %10098 to i64*
  %10099 = load i64, i64* %RBP.i204
  %10100 = sub i64 %10099, 32
  %10101 = load i64, i64* %PC.i202
  %10102 = add i64 %10101, 4
  store i64 %10102, i64* %PC.i202
  %10103 = inttoptr i64 %10100 to i64*
  %10104 = load i64, i64* %10103
  store i64 %10104, i64* %RCX.i203, align 8
  store %struct.Memory* %loadMem_4a9bff, %struct.Memory** %MEMORY
  %loadMem_4a9c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10106 = getelementptr inbounds %struct.GPR, %struct.GPR* %10105, i32 0, i32 33
  %10107 = getelementptr inbounds %struct.Reg, %struct.Reg* %10106, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %10107 to i64*
  %10108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10109 = getelementptr inbounds %struct.GPR, %struct.GPR* %10108, i32 0, i32 1
  %10110 = getelementptr inbounds %struct.Reg, %struct.Reg* %10109, i32 0, i32 0
  %EAX.i200 = bitcast %union.anon* %10110 to i32*
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10112 = getelementptr inbounds %struct.GPR, %struct.GPR* %10111, i32 0, i32 5
  %10113 = getelementptr inbounds %struct.Reg, %struct.Reg* %10112, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %10113 to i64*
  %10114 = load i32, i32* %EAX.i200
  %10115 = zext i32 %10114 to i64
  %10116 = load i64, i64* %RCX.i201
  %10117 = add i64 %10116, 36
  %10118 = load i64, i64* %PC.i199
  %10119 = add i64 %10118, 3
  store i64 %10119, i64* %PC.i199
  %10120 = inttoptr i64 %10117 to i32*
  %10121 = load i32, i32* %10120
  %10122 = sub i32 %10114, %10121
  %10123 = icmp ult i32 %10114, %10121
  %10124 = zext i1 %10123 to i8
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10124, i8* %10125, align 1
  %10126 = and i32 %10122, 255
  %10127 = call i32 @llvm.ctpop.i32(i32 %10126)
  %10128 = trunc i32 %10127 to i8
  %10129 = and i8 %10128, 1
  %10130 = xor i8 %10129, 1
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10130, i8* %10131, align 1
  %10132 = xor i32 %10121, %10114
  %10133 = xor i32 %10132, %10122
  %10134 = lshr i32 %10133, 4
  %10135 = trunc i32 %10134 to i8
  %10136 = and i8 %10135, 1
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10136, i8* %10137, align 1
  %10138 = icmp eq i32 %10122, 0
  %10139 = zext i1 %10138 to i8
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10139, i8* %10140, align 1
  %10141 = lshr i32 %10122, 31
  %10142 = trunc i32 %10141 to i8
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10142, i8* %10143, align 1
  %10144 = lshr i32 %10114, 31
  %10145 = lshr i32 %10121, 31
  %10146 = xor i32 %10145, %10144
  %10147 = xor i32 %10141, %10144
  %10148 = add i32 %10147, %10146
  %10149 = icmp eq i32 %10148, 2
  %10150 = zext i1 %10149 to i8
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10150, i8* %10151, align 1
  store %struct.Memory* %loadMem_4a9c03, %struct.Memory** %MEMORY
  %loadMem_4a9c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10153 = getelementptr inbounds %struct.GPR, %struct.GPR* %10152, i32 0, i32 33
  %10154 = getelementptr inbounds %struct.Reg, %struct.Reg* %10153, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %10154 to i64*
  %10155 = load i64, i64* %PC.i198
  %10156 = add i64 %10155, 21
  %10157 = load i64, i64* %PC.i198
  %10158 = add i64 %10157, 6
  %10159 = load i64, i64* %PC.i198
  %10160 = add i64 %10159, 6
  store i64 %10160, i64* %PC.i198
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10162 = load i8, i8* %10161, align 1
  %10163 = icmp eq i8 %10162, 0
  %10164 = zext i1 %10163 to i8
  store i8 %10164, i8* %BRANCH_TAKEN, align 1
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10166 = select i1 %10163, i64 %10156, i64 %10158
  store i64 %10166, i64* %10165, align 8
  store %struct.Memory* %loadMem_4a9c06, %struct.Memory** %MEMORY
  %loadBr_4a9c06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9c06 = icmp eq i8 %loadBr_4a9c06, 1
  br i1 %cmpBr_4a9c06, label %block_.L_4a9c1b, label %block_4a9c0c

block_4a9c0c:                                     ; preds = %block_.L_4a9bf9
  %loadMem_4a9c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10168 = getelementptr inbounds %struct.GPR, %struct.GPR* %10167, i32 0, i32 33
  %10169 = getelementptr inbounds %struct.Reg, %struct.Reg* %10168, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %10169 to i64*
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 1
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %10172 to i64*
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10174 = getelementptr inbounds %struct.GPR, %struct.GPR* %10173, i32 0, i32 15
  %10175 = getelementptr inbounds %struct.Reg, %struct.Reg* %10174, i32 0, i32 0
  %RBP.i197 = bitcast %union.anon* %10175 to i64*
  %10176 = load i64, i64* %RBP.i197
  %10177 = sub i64 %10176, 7136
  %10178 = load i64, i64* %PC.i195
  %10179 = add i64 %10178, 6
  store i64 %10179, i64* %PC.i195
  %10180 = inttoptr i64 %10177 to i32*
  %10181 = load i32, i32* %10180
  %10182 = zext i32 %10181 to i64
  store i64 %10182, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_4a9c0c, %struct.Memory** %MEMORY
  %loadMem_4a9c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10184 = getelementptr inbounds %struct.GPR, %struct.GPR* %10183, i32 0, i32 33
  %10185 = getelementptr inbounds %struct.Reg, %struct.Reg* %10184, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %10185 to i64*
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 1
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %10188 to i64*
  %10189 = load i64, i64* %RAX.i194
  %10190 = load i64, i64* %PC.i193
  %10191 = add i64 %10190, 3
  store i64 %10191, i64* %PC.i193
  %10192 = and i64 -5, %10189
  %10193 = trunc i64 %10192 to i32
  %10194 = and i64 %10192, 4294967295
  store i64 %10194, i64* %RAX.i194, align 8
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10195, align 1
  %10196 = and i32 %10193, 255
  %10197 = call i32 @llvm.ctpop.i32(i32 %10196)
  %10198 = trunc i32 %10197 to i8
  %10199 = and i8 %10198, 1
  %10200 = xor i8 %10199, 1
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10200, i8* %10201, align 1
  %10202 = icmp eq i32 %10193, 0
  %10203 = zext i1 %10202 to i8
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10203, i8* %10204, align 1
  %10205 = lshr i32 %10193, 31
  %10206 = trunc i32 %10205 to i8
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10206, i8* %10207, align 1
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10208, align 1
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10209, align 1
  store %struct.Memory* %loadMem_4a9c12, %struct.Memory** %MEMORY
  %loadMem_4a9c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10211 = getelementptr inbounds %struct.GPR, %struct.GPR* %10210, i32 0, i32 33
  %10212 = getelementptr inbounds %struct.Reg, %struct.Reg* %10211, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %10212 to i64*
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10214 = getelementptr inbounds %struct.GPR, %struct.GPR* %10213, i32 0, i32 1
  %10215 = getelementptr inbounds %struct.Reg, %struct.Reg* %10214, i32 0, i32 0
  %EAX.i191 = bitcast %union.anon* %10215 to i32*
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 15
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %10218 to i64*
  %10219 = load i64, i64* %RBP.i192
  %10220 = sub i64 %10219, 7136
  %10221 = load i32, i32* %EAX.i191
  %10222 = zext i32 %10221 to i64
  %10223 = load i64, i64* %PC.i190
  %10224 = add i64 %10223, 6
  store i64 %10224, i64* %PC.i190
  %10225 = inttoptr i64 %10220 to i32*
  store i32 %10221, i32* %10225
  store %struct.Memory* %loadMem_4a9c15, %struct.Memory** %MEMORY
  br label %block_.L_4a9c1b

block_.L_4a9c1b:                                  ; preds = %block_4a9c0c, %block_.L_4a9bf9
  %loadMem_4a9c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10227 = getelementptr inbounds %struct.GPR, %struct.GPR* %10226, i32 0, i32 33
  %10228 = getelementptr inbounds %struct.Reg, %struct.Reg* %10227, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %10228 to i64*
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10230 = getelementptr inbounds %struct.GPR, %struct.GPR* %10229, i32 0, i32 1
  %10231 = getelementptr inbounds %struct.Reg, %struct.Reg* %10230, i32 0, i32 0
  %RAX.i188 = bitcast %union.anon* %10231 to i64*
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 15
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %RBP.i189 = bitcast %union.anon* %10234 to i64*
  %10235 = load i64, i64* %RBP.i189
  %10236 = sub i64 %10235, 7148
  %10237 = load i64, i64* %PC.i187
  %10238 = add i64 %10237, 6
  store i64 %10238, i64* %PC.i187
  %10239 = inttoptr i64 %10236 to i32*
  %10240 = load i32, i32* %10239
  %10241 = zext i32 %10240 to i64
  store i64 %10241, i64* %RAX.i188, align 8
  store %struct.Memory* %loadMem_4a9c1b, %struct.Memory** %MEMORY
  %loadMem_4a9c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10243 = getelementptr inbounds %struct.GPR, %struct.GPR* %10242, i32 0, i32 33
  %10244 = getelementptr inbounds %struct.Reg, %struct.Reg* %10243, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %10244 to i64*
  %10245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10246 = getelementptr inbounds %struct.GPR, %struct.GPR* %10245, i32 0, i32 5
  %10247 = getelementptr inbounds %struct.Reg, %struct.Reg* %10246, i32 0, i32 0
  %RCX.i185 = bitcast %union.anon* %10247 to i64*
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10249 = getelementptr inbounds %struct.GPR, %struct.GPR* %10248, i32 0, i32 15
  %10250 = getelementptr inbounds %struct.Reg, %struct.Reg* %10249, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %10250 to i64*
  %10251 = load i64, i64* %RBP.i186
  %10252 = sub i64 %10251, 32
  %10253 = load i64, i64* %PC.i184
  %10254 = add i64 %10253, 4
  store i64 %10254, i64* %PC.i184
  %10255 = inttoptr i64 %10252 to i64*
  %10256 = load i64, i64* %10255
  store i64 %10256, i64* %RCX.i185, align 8
  store %struct.Memory* %loadMem_4a9c21, %struct.Memory** %MEMORY
  %loadMem_4a9c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 33
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %10259 to i64*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 1
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %EAX.i182 = bitcast %union.anon* %10262 to i32*
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10264 = getelementptr inbounds %struct.GPR, %struct.GPR* %10263, i32 0, i32 5
  %10265 = getelementptr inbounds %struct.Reg, %struct.Reg* %10264, i32 0, i32 0
  %RCX.i183 = bitcast %union.anon* %10265 to i64*
  %10266 = load i32, i32* %EAX.i182
  %10267 = zext i32 %10266 to i64
  %10268 = load i64, i64* %RCX.i183
  %10269 = add i64 %10268, 28
  %10270 = load i64, i64* %PC.i181
  %10271 = add i64 %10270, 3
  store i64 %10271, i64* %PC.i181
  %10272 = inttoptr i64 %10269 to i32*
  %10273 = load i32, i32* %10272
  %10274 = sub i32 %10266, %10273
  %10275 = icmp ult i32 %10266, %10273
  %10276 = zext i1 %10275 to i8
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10276, i8* %10277, align 1
  %10278 = and i32 %10274, 255
  %10279 = call i32 @llvm.ctpop.i32(i32 %10278)
  %10280 = trunc i32 %10279 to i8
  %10281 = and i8 %10280, 1
  %10282 = xor i8 %10281, 1
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10282, i8* %10283, align 1
  %10284 = xor i32 %10273, %10266
  %10285 = xor i32 %10284, %10274
  %10286 = lshr i32 %10285, 4
  %10287 = trunc i32 %10286 to i8
  %10288 = and i8 %10287, 1
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10288, i8* %10289, align 1
  %10290 = icmp eq i32 %10274, 0
  %10291 = zext i1 %10290 to i8
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10291, i8* %10292, align 1
  %10293 = lshr i32 %10274, 31
  %10294 = trunc i32 %10293 to i8
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10294, i8* %10295, align 1
  %10296 = lshr i32 %10266, 31
  %10297 = lshr i32 %10273, 31
  %10298 = xor i32 %10297, %10296
  %10299 = xor i32 %10293, %10296
  %10300 = add i32 %10299, %10298
  %10301 = icmp eq i32 %10300, 2
  %10302 = zext i1 %10301 to i8
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10302, i8* %10303, align 1
  store %struct.Memory* %loadMem_4a9c25, %struct.Memory** %MEMORY
  %loadMem_4a9c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10305 = getelementptr inbounds %struct.GPR, %struct.GPR* %10304, i32 0, i32 33
  %10306 = getelementptr inbounds %struct.Reg, %struct.Reg* %10305, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %10306 to i64*
  %10307 = load i64, i64* %PC.i180
  %10308 = add i64 %10307, 21
  %10309 = load i64, i64* %PC.i180
  %10310 = add i64 %10309, 6
  %10311 = load i64, i64* %PC.i180
  %10312 = add i64 %10311, 6
  store i64 %10312, i64* %PC.i180
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10314 = load i8, i8* %10313, align 1
  %10315 = icmp eq i8 %10314, 0
  %10316 = zext i1 %10315 to i8
  store i8 %10316, i8* %BRANCH_TAKEN, align 1
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10318 = select i1 %10315, i64 %10308, i64 %10310
  store i64 %10318, i64* %10317, align 8
  store %struct.Memory* %loadMem_4a9c28, %struct.Memory** %MEMORY
  %loadBr_4a9c28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9c28 = icmp eq i8 %loadBr_4a9c28, 1
  br i1 %cmpBr_4a9c28, label %block_.L_4a9c3d, label %block_4a9c2e

block_4a9c2e:                                     ; preds = %block_.L_4a9c1b
  %loadMem_4a9c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10320 = getelementptr inbounds %struct.GPR, %struct.GPR* %10319, i32 0, i32 33
  %10321 = getelementptr inbounds %struct.Reg, %struct.Reg* %10320, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %10321 to i64*
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 1
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %RAX.i178 = bitcast %union.anon* %10324 to i64*
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10326 = getelementptr inbounds %struct.GPR, %struct.GPR* %10325, i32 0, i32 15
  %10327 = getelementptr inbounds %struct.Reg, %struct.Reg* %10326, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %10327 to i64*
  %10328 = load i64, i64* %RBP.i179
  %10329 = sub i64 %10328, 7136
  %10330 = load i64, i64* %PC.i177
  %10331 = add i64 %10330, 6
  store i64 %10331, i64* %PC.i177
  %10332 = inttoptr i64 %10329 to i32*
  %10333 = load i32, i32* %10332
  %10334 = zext i32 %10333 to i64
  store i64 %10334, i64* %RAX.i178, align 8
  store %struct.Memory* %loadMem_4a9c2e, %struct.Memory** %MEMORY
  %loadMem_4a9c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10336 = getelementptr inbounds %struct.GPR, %struct.GPR* %10335, i32 0, i32 33
  %10337 = getelementptr inbounds %struct.Reg, %struct.Reg* %10336, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %10337 to i64*
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10339 = getelementptr inbounds %struct.GPR, %struct.GPR* %10338, i32 0, i32 1
  %10340 = getelementptr inbounds %struct.Reg, %struct.Reg* %10339, i32 0, i32 0
  %RAX.i176 = bitcast %union.anon* %10340 to i64*
  %10341 = load i64, i64* %RAX.i176
  %10342 = load i64, i64* %PC.i175
  %10343 = add i64 %10342, 3
  store i64 %10343, i64* %PC.i175
  %10344 = and i64 -9, %10341
  %10345 = trunc i64 %10344 to i32
  %10346 = and i64 %10344, 4294967295
  store i64 %10346, i64* %RAX.i176, align 8
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10347, align 1
  %10348 = and i32 %10345, 255
  %10349 = call i32 @llvm.ctpop.i32(i32 %10348)
  %10350 = trunc i32 %10349 to i8
  %10351 = and i8 %10350, 1
  %10352 = xor i8 %10351, 1
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10352, i8* %10353, align 1
  %10354 = icmp eq i32 %10345, 0
  %10355 = zext i1 %10354 to i8
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10355, i8* %10356, align 1
  %10357 = lshr i32 %10345, 31
  %10358 = trunc i32 %10357 to i8
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10358, i8* %10359, align 1
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10360, align 1
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10361, align 1
  store %struct.Memory* %loadMem_4a9c34, %struct.Memory** %MEMORY
  %loadMem_4a9c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 33
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 1
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %EAX.i173 = bitcast %union.anon* %10367 to i32*
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10369 = getelementptr inbounds %struct.GPR, %struct.GPR* %10368, i32 0, i32 15
  %10370 = getelementptr inbounds %struct.Reg, %struct.Reg* %10369, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %10370 to i64*
  %10371 = load i64, i64* %RBP.i174
  %10372 = sub i64 %10371, 7136
  %10373 = load i32, i32* %EAX.i173
  %10374 = zext i32 %10373 to i64
  %10375 = load i64, i64* %PC.i172
  %10376 = add i64 %10375, 6
  store i64 %10376, i64* %PC.i172
  %10377 = inttoptr i64 %10372 to i32*
  store i32 %10373, i32* %10377
  store %struct.Memory* %loadMem_4a9c37, %struct.Memory** %MEMORY
  br label %block_.L_4a9c3d

block_.L_4a9c3d:                                  ; preds = %block_4a9c2e, %block_.L_4a9c1b
  %loadMem_4a9c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10379 = getelementptr inbounds %struct.GPR, %struct.GPR* %10378, i32 0, i32 33
  %10380 = getelementptr inbounds %struct.Reg, %struct.Reg* %10379, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %10380 to i64*
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10382 = getelementptr inbounds %struct.GPR, %struct.GPR* %10381, i32 0, i32 11
  %10383 = getelementptr inbounds %struct.Reg, %struct.Reg* %10382, i32 0, i32 0
  %RDI.i171 = bitcast %union.anon* %10383 to i64*
  %10384 = load i64, i64* %PC.i170
  %10385 = add i64 %10384, 10
  store i64 %10385, i64* %PC.i170
  store i64 ptrtoint (%G__0x588b2c_type* @G__0x588b2c to i64), i64* %RDI.i171, align 8
  store %struct.Memory* %loadMem_4a9c3d, %struct.Memory** %MEMORY
  %loadMem_4a9c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10387 = getelementptr inbounds %struct.GPR, %struct.GPR* %10386, i32 0, i32 33
  %10388 = getelementptr inbounds %struct.Reg, %struct.Reg* %10387, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %10388 to i64*
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10390 = getelementptr inbounds %struct.GPR, %struct.GPR* %10389, i32 0, i32 1
  %10391 = getelementptr inbounds %struct.Reg, %struct.Reg* %10390, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %10391 to i64*
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 15
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %RBP.i169 = bitcast %union.anon* %10394 to i64*
  %10395 = load i64, i64* %RBP.i169
  %10396 = sub i64 %10395, 7120
  %10397 = load i64, i64* %PC.i167
  %10398 = add i64 %10397, 7
  store i64 %10398, i64* %PC.i167
  store i64 %10396, i64* %RAX.i168, align 8
  store %struct.Memory* %loadMem_4a9c47, %struct.Memory** %MEMORY
  %loadMem_4a9c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 33
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 5
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RCX.i165 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 15
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %10407 to i64*
  %10408 = load i64, i64* %RBP.i166
  %10409 = sub i64 %10408, 7124
  %10410 = load i64, i64* %PC.i164
  %10411 = add i64 %10410, 6
  store i64 %10411, i64* %PC.i164
  %10412 = inttoptr i64 %10409 to i32*
  %10413 = load i32, i32* %10412
  %10414 = zext i32 %10413 to i64
  store i64 %10414, i64* %RCX.i165, align 8
  store %struct.Memory* %loadMem_4a9c4e, %struct.Memory** %MEMORY
  %loadMem_4a9c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 33
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %10417 to i64*
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 5
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %10420 to i64*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 15
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %10423 to i64*
  %10424 = load i64, i64* %RCX.i162
  %10425 = load i64, i64* %RBP.i163
  %10426 = sub i64 %10425, 7144
  %10427 = load i64, i64* %PC.i161
  %10428 = add i64 %10427, 6
  store i64 %10428, i64* %PC.i161
  %10429 = trunc i64 %10424 to i32
  %10430 = inttoptr i64 %10426 to i32*
  %10431 = load i32, i32* %10430
  %10432 = add i32 %10431, %10429
  %10433 = zext i32 %10432 to i64
  store i64 %10433, i64* %RCX.i162, align 8
  %10434 = icmp ult i32 %10432, %10429
  %10435 = icmp ult i32 %10432, %10431
  %10436 = or i1 %10434, %10435
  %10437 = zext i1 %10436 to i8
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10437, i8* %10438, align 1
  %10439 = and i32 %10432, 255
  %10440 = call i32 @llvm.ctpop.i32(i32 %10439)
  %10441 = trunc i32 %10440 to i8
  %10442 = and i8 %10441, 1
  %10443 = xor i8 %10442, 1
  %10444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10443, i8* %10444, align 1
  %10445 = xor i32 %10431, %10429
  %10446 = xor i32 %10445, %10432
  %10447 = lshr i32 %10446, 4
  %10448 = trunc i32 %10447 to i8
  %10449 = and i8 %10448, 1
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10449, i8* %10450, align 1
  %10451 = icmp eq i32 %10432, 0
  %10452 = zext i1 %10451 to i8
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10452, i8* %10453, align 1
  %10454 = lshr i32 %10432, 31
  %10455 = trunc i32 %10454 to i8
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10455, i8* %10456, align 1
  %10457 = lshr i32 %10429, 31
  %10458 = lshr i32 %10431, 31
  %10459 = xor i32 %10454, %10457
  %10460 = xor i32 %10454, %10458
  %10461 = add i32 %10459, %10460
  %10462 = icmp eq i32 %10461, 2
  %10463 = zext i1 %10462 to i8
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10463, i8* %10464, align 1
  store %struct.Memory* %loadMem_4a9c54, %struct.Memory** %MEMORY
  %loadMem_4a9c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 33
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %10467 to i64*
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 5
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %ECX.i159 = bitcast %union.anon* %10470 to i32*
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10472 = getelementptr inbounds %struct.GPR, %struct.GPR* %10471, i32 0, i32 7
  %10473 = getelementptr inbounds %struct.Reg, %struct.Reg* %10472, i32 0, i32 0
  %RDX.i160 = bitcast %union.anon* %10473 to i64*
  %10474 = load i32, i32* %ECX.i159
  %10475 = zext i32 %10474 to i64
  %10476 = load i64, i64* %PC.i158
  %10477 = add i64 %10476, 3
  store i64 %10477, i64* %PC.i158
  %10478 = shl i64 %10475, 32
  %10479 = ashr exact i64 %10478, 32
  store i64 %10479, i64* %RDX.i160, align 8
  store %struct.Memory* %loadMem_4a9c5a, %struct.Memory** %MEMORY
  %loadMem_4a9c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 33
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %10482 to i64*
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 7
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %RDX.i157 = bitcast %union.anon* %10485 to i64*
  %10486 = load i64, i64* %RDX.i157
  %10487 = load i64, i64* %PC.i156
  %10488 = add i64 %10487, 4
  store i64 %10488, i64* %PC.i156
  %10489 = sext i64 %10486 to i128
  %10490 = and i128 %10489, -18446744073709551616
  %10491 = zext i64 %10486 to i128
  %10492 = or i128 %10490, %10491
  %10493 = mul i128 84, %10492
  %10494 = trunc i128 %10493 to i64
  store i64 %10494, i64* %RDX.i157, align 8
  %10495 = sext i64 %10494 to i128
  %10496 = icmp ne i128 %10495, %10493
  %10497 = zext i1 %10496 to i8
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10497, i8* %10498, align 1
  %10499 = trunc i128 %10493 to i32
  %10500 = and i32 %10499, 255
  %10501 = call i32 @llvm.ctpop.i32(i32 %10500)
  %10502 = trunc i32 %10501 to i8
  %10503 = and i8 %10502, 1
  %10504 = xor i8 %10503, 1
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10504, i8* %10505, align 1
  %10506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10506, align 1
  %10507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10507, align 1
  %10508 = lshr i64 %10494, 63
  %10509 = trunc i64 %10508 to i8
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10509, i8* %10510, align 1
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10497, i8* %10511, align 1
  store %struct.Memory* %loadMem_4a9c5d, %struct.Memory** %MEMORY
  %loadMem_4a9c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10513 = getelementptr inbounds %struct.GPR, %struct.GPR* %10512, i32 0, i32 33
  %10514 = getelementptr inbounds %struct.Reg, %struct.Reg* %10513, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %10514 to i64*
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10516 = getelementptr inbounds %struct.GPR, %struct.GPR* %10515, i32 0, i32 1
  %10517 = getelementptr inbounds %struct.Reg, %struct.Reg* %10516, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %10517 to i64*
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10519 = getelementptr inbounds %struct.GPR, %struct.GPR* %10518, i32 0, i32 7
  %10520 = getelementptr inbounds %struct.Reg, %struct.Reg* %10519, i32 0, i32 0
  %RDX.i155 = bitcast %union.anon* %10520 to i64*
  %10521 = load i64, i64* %RAX.i154
  %10522 = load i64, i64* %RDX.i155
  %10523 = load i64, i64* %PC.i153
  %10524 = add i64 %10523, 3
  store i64 %10524, i64* %PC.i153
  %10525 = add i64 %10522, %10521
  store i64 %10525, i64* %RAX.i154, align 8
  %10526 = icmp ult i64 %10525, %10521
  %10527 = icmp ult i64 %10525, %10522
  %10528 = or i1 %10526, %10527
  %10529 = zext i1 %10528 to i8
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10529, i8* %10530, align 1
  %10531 = trunc i64 %10525 to i32
  %10532 = and i32 %10531, 255
  %10533 = call i32 @llvm.ctpop.i32(i32 %10532)
  %10534 = trunc i32 %10533 to i8
  %10535 = and i8 %10534, 1
  %10536 = xor i8 %10535, 1
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10536, i8* %10537, align 1
  %10538 = xor i64 %10522, %10521
  %10539 = xor i64 %10538, %10525
  %10540 = lshr i64 %10539, 4
  %10541 = trunc i64 %10540 to i8
  %10542 = and i8 %10541, 1
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10542, i8* %10543, align 1
  %10544 = icmp eq i64 %10525, 0
  %10545 = zext i1 %10544 to i8
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10545, i8* %10546, align 1
  %10547 = lshr i64 %10525, 63
  %10548 = trunc i64 %10547 to i8
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10548, i8* %10549, align 1
  %10550 = lshr i64 %10521, 63
  %10551 = lshr i64 %10522, 63
  %10552 = xor i64 %10547, %10550
  %10553 = xor i64 %10547, %10551
  %10554 = add i64 %10552, %10553
  %10555 = icmp eq i64 %10554, 2
  %10556 = zext i1 %10555 to i8
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10556, i8* %10557, align 1
  store %struct.Memory* %loadMem_4a9c61, %struct.Memory** %MEMORY
  %loadMem_4a9c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 33
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %10560 to i64*
  %10561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10562 = getelementptr inbounds %struct.GPR, %struct.GPR* %10561, i32 0, i32 5
  %10563 = getelementptr inbounds %struct.Reg, %struct.Reg* %10562, i32 0, i32 0
  %RCX.i151 = bitcast %union.anon* %10563 to i64*
  %10564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10565 = getelementptr inbounds %struct.GPR, %struct.GPR* %10564, i32 0, i32 15
  %10566 = getelementptr inbounds %struct.Reg, %struct.Reg* %10565, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %10566 to i64*
  %10567 = load i64, i64* %RBP.i152
  %10568 = sub i64 %10567, 7128
  %10569 = load i64, i64* %PC.i150
  %10570 = add i64 %10569, 6
  store i64 %10570, i64* %PC.i150
  %10571 = inttoptr i64 %10568 to i32*
  %10572 = load i32, i32* %10571
  %10573 = zext i32 %10572 to i64
  store i64 %10573, i64* %RCX.i151, align 8
  store %struct.Memory* %loadMem_4a9c64, %struct.Memory** %MEMORY
  %loadMem_4a9c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10575 = getelementptr inbounds %struct.GPR, %struct.GPR* %10574, i32 0, i32 33
  %10576 = getelementptr inbounds %struct.Reg, %struct.Reg* %10575, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %10576 to i64*
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10578 = getelementptr inbounds %struct.GPR, %struct.GPR* %10577, i32 0, i32 5
  %10579 = getelementptr inbounds %struct.Reg, %struct.Reg* %10578, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %10579 to i64*
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10581 = getelementptr inbounds %struct.GPR, %struct.GPR* %10580, i32 0, i32 15
  %10582 = getelementptr inbounds %struct.Reg, %struct.Reg* %10581, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %10582 to i64*
  %10583 = load i64, i64* %RCX.i148
  %10584 = load i64, i64* %RBP.i149
  %10585 = sub i64 %10584, 7148
  %10586 = load i64, i64* %PC.i147
  %10587 = add i64 %10586, 6
  store i64 %10587, i64* %PC.i147
  %10588 = trunc i64 %10583 to i32
  %10589 = inttoptr i64 %10585 to i32*
  %10590 = load i32, i32* %10589
  %10591 = add i32 %10590, %10588
  %10592 = zext i32 %10591 to i64
  store i64 %10592, i64* %RCX.i148, align 8
  %10593 = icmp ult i32 %10591, %10588
  %10594 = icmp ult i32 %10591, %10590
  %10595 = or i1 %10593, %10594
  %10596 = zext i1 %10595 to i8
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10596, i8* %10597, align 1
  %10598 = and i32 %10591, 255
  %10599 = call i32 @llvm.ctpop.i32(i32 %10598)
  %10600 = trunc i32 %10599 to i8
  %10601 = and i8 %10600, 1
  %10602 = xor i8 %10601, 1
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10602, i8* %10603, align 1
  %10604 = xor i32 %10590, %10588
  %10605 = xor i32 %10604, %10591
  %10606 = lshr i32 %10605, 4
  %10607 = trunc i32 %10606 to i8
  %10608 = and i8 %10607, 1
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10608, i8* %10609, align 1
  %10610 = icmp eq i32 %10591, 0
  %10611 = zext i1 %10610 to i8
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10611, i8* %10612, align 1
  %10613 = lshr i32 %10591, 31
  %10614 = trunc i32 %10613 to i8
  %10615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10614, i8* %10615, align 1
  %10616 = lshr i32 %10588, 31
  %10617 = lshr i32 %10590, 31
  %10618 = xor i32 %10613, %10616
  %10619 = xor i32 %10613, %10617
  %10620 = add i32 %10618, %10619
  %10621 = icmp eq i32 %10620, 2
  %10622 = zext i1 %10621 to i8
  %10623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10622, i8* %10623, align 1
  store %struct.Memory* %loadMem_4a9c6a, %struct.Memory** %MEMORY
  %loadMem_4a9c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 33
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %10626 to i64*
  %10627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10628 = getelementptr inbounds %struct.GPR, %struct.GPR* %10627, i32 0, i32 5
  %10629 = getelementptr inbounds %struct.Reg, %struct.Reg* %10628, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10629 to i32*
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 7
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %RDX.i146 = bitcast %union.anon* %10632 to i64*
  %10633 = load i32, i32* %ECX.i
  %10634 = zext i32 %10633 to i64
  %10635 = load i64, i64* %PC.i145
  %10636 = add i64 %10635, 3
  store i64 %10636, i64* %PC.i145
  %10637 = shl i64 %10634, 32
  %10638 = ashr exact i64 %10637, 32
  store i64 %10638, i64* %RDX.i146, align 8
  store %struct.Memory* %loadMem_4a9c70, %struct.Memory** %MEMORY
  %loadMem_4a9c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10640 = getelementptr inbounds %struct.GPR, %struct.GPR* %10639, i32 0, i32 33
  %10641 = getelementptr inbounds %struct.Reg, %struct.Reg* %10640, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %10641 to i64*
  %10642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10643 = getelementptr inbounds %struct.GPR, %struct.GPR* %10642, i32 0, i32 9
  %10644 = getelementptr inbounds %struct.Reg, %struct.Reg* %10643, i32 0, i32 0
  %10645 = bitcast %union.anon* %10644 to %struct.anon.2*
  %SIL.i142 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10645, i32 0, i32 0
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 1
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 7
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %RDX.i144 = bitcast %union.anon* %10651 to i64*
  %10652 = load i64, i64* %RAX.i143
  %10653 = load i64, i64* %RDX.i144
  %10654 = add i64 %10653, %10652
  %10655 = load i64, i64* %PC.i141
  %10656 = add i64 %10655, 4
  store i64 %10656, i64* %PC.i141
  %10657 = inttoptr i64 %10654 to i8*
  %10658 = load i8, i8* %10657
  store i8 %10658, i8* %SIL.i142, align 1
  store %struct.Memory* %loadMem_4a9c73, %struct.Memory** %MEMORY
  %loadMem_4a9c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10660 = getelementptr inbounds %struct.GPR, %struct.GPR* %10659, i32 0, i32 33
  %10661 = getelementptr inbounds %struct.Reg, %struct.Reg* %10660, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %10661 to i64*
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10663 = getelementptr inbounds %struct.GPR, %struct.GPR* %10662, i32 0, i32 1
  %10664 = getelementptr inbounds %struct.Reg, %struct.Reg* %10663, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %10664 to i64*
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10666 = getelementptr inbounds %struct.GPR, %struct.GPR* %10665, i32 0, i32 15
  %10667 = getelementptr inbounds %struct.Reg, %struct.Reg* %10666, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %10667 to i64*
  %10668 = load i64, i64* %RBP.i140
  %10669 = sub i64 %10668, 48
  %10670 = load i64, i64* %PC.i138
  %10671 = add i64 %10670, 4
  store i64 %10671, i64* %PC.i138
  %10672 = inttoptr i64 %10669 to i64*
  %10673 = load i64, i64* %10672
  store i64 %10673, i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_4a9c77, %struct.Memory** %MEMORY
  %loadMem_4a9c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10675 = getelementptr inbounds %struct.GPR, %struct.GPR* %10674, i32 0, i32 33
  %10676 = getelementptr inbounds %struct.Reg, %struct.Reg* %10675, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10676 to i64*
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10678 = getelementptr inbounds %struct.GPR, %struct.GPR* %10677, i32 0, i32 7
  %10679 = getelementptr inbounds %struct.Reg, %struct.Reg* %10678, i32 0, i32 0
  %RDX.i136 = bitcast %union.anon* %10679 to i64*
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 15
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %10682 to i64*
  %10683 = load i64, i64* %RBP.i137
  %10684 = sub i64 %10683, 7152
  %10685 = load i64, i64* %PC.i135
  %10686 = add i64 %10685, 7
  store i64 %10686, i64* %PC.i135
  %10687 = inttoptr i64 %10684 to i32*
  %10688 = load i32, i32* %10687
  %10689 = sext i32 %10688 to i64
  store i64 %10689, i64* %RDX.i136, align 8
  store %struct.Memory* %loadMem_4a9c7b, %struct.Memory** %MEMORY
  %loadMem_4a9c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10691 = getelementptr inbounds %struct.GPR, %struct.GPR* %10690, i32 0, i32 33
  %10692 = getelementptr inbounds %struct.Reg, %struct.Reg* %10691, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10692 to i64*
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10694 = getelementptr inbounds %struct.GPR, %struct.GPR* %10693, i32 0, i32 9
  %10695 = getelementptr inbounds %struct.Reg, %struct.Reg* %10694, i32 0, i32 0
  %10696 = bitcast %union.anon* %10695 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10696, i32 0, i32 0
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 1
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %10699 to i64*
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10701 = getelementptr inbounds %struct.GPR, %struct.GPR* %10700, i32 0, i32 7
  %10702 = getelementptr inbounds %struct.Reg, %struct.Reg* %10701, i32 0, i32 0
  %RDX.i134 = bitcast %union.anon* %10702 to i64*
  %10703 = load i64, i64* %RAX.i133
  %10704 = load i64, i64* %RDX.i134
  %10705 = add i64 %10704, %10703
  %10706 = load i8, i8* %SIL.i
  %10707 = zext i8 %10706 to i64
  %10708 = load i64, i64* %PC.i132
  %10709 = add i64 %10708, 4
  store i64 %10709, i64* %PC.i132
  %10710 = inttoptr i64 %10705 to i8*
  store i8 %10706, i8* %10710
  store %struct.Memory* %loadMem_4a9c82, %struct.Memory** %MEMORY
  %loadMem_4a9c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10712 = getelementptr inbounds %struct.GPR, %struct.GPR* %10711, i32 0, i32 33
  %10713 = getelementptr inbounds %struct.Reg, %struct.Reg* %10712, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %10713 to i64*
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10715 = getelementptr inbounds %struct.GPR, %struct.GPR* %10714, i32 0, i32 1
  %10716 = getelementptr inbounds %struct.Reg, %struct.Reg* %10715, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %10716 to i64*
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10718 = getelementptr inbounds %struct.GPR, %struct.GPR* %10717, i32 0, i32 15
  %10719 = getelementptr inbounds %struct.Reg, %struct.Reg* %10718, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %10719 to i64*
  %10720 = load i64, i64* %RBP.i131
  %10721 = sub i64 %10720, 48
  %10722 = load i64, i64* %PC.i129
  %10723 = add i64 %10722, 4
  store i64 %10723, i64* %PC.i129
  %10724 = inttoptr i64 %10721 to i64*
  %10725 = load i64, i64* %10724
  store i64 %10725, i64* %RAX.i130, align 8
  store %struct.Memory* %loadMem_4a9c86, %struct.Memory** %MEMORY
  %loadMem_4a9c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10727 = getelementptr inbounds %struct.GPR, %struct.GPR* %10726, i32 0, i32 33
  %10728 = getelementptr inbounds %struct.Reg, %struct.Reg* %10727, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %10728 to i64*
  %10729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10730 = getelementptr inbounds %struct.GPR, %struct.GPR* %10729, i32 0, i32 7
  %10731 = getelementptr inbounds %struct.Reg, %struct.Reg* %10730, i32 0, i32 0
  %RDX.i127 = bitcast %union.anon* %10731 to i64*
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10733 = getelementptr inbounds %struct.GPR, %struct.GPR* %10732, i32 0, i32 15
  %10734 = getelementptr inbounds %struct.Reg, %struct.Reg* %10733, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %10734 to i64*
  %10735 = load i64, i64* %RBP.i128
  %10736 = sub i64 %10735, 7152
  %10737 = load i64, i64* %PC.i126
  %10738 = add i64 %10737, 7
  store i64 %10738, i64* %PC.i126
  %10739 = inttoptr i64 %10736 to i32*
  %10740 = load i32, i32* %10739
  %10741 = sext i32 %10740 to i64
  store i64 %10741, i64* %RDX.i127, align 8
  store %struct.Memory* %loadMem_4a9c8a, %struct.Memory** %MEMORY
  %loadMem_4a9c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10743 = getelementptr inbounds %struct.GPR, %struct.GPR* %10742, i32 0, i32 33
  %10744 = getelementptr inbounds %struct.Reg, %struct.Reg* %10743, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10744 to i64*
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10746 = getelementptr inbounds %struct.GPR, %struct.GPR* %10745, i32 0, i32 1
  %10747 = getelementptr inbounds %struct.Reg, %struct.Reg* %10746, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %10747 to i64*
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10749 = getelementptr inbounds %struct.GPR, %struct.GPR* %10748, i32 0, i32 7
  %10750 = getelementptr inbounds %struct.Reg, %struct.Reg* %10749, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10750 to i64*
  %10751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10752 = getelementptr inbounds %struct.GPR, %struct.GPR* %10751, i32 0, i32 9
  %10753 = getelementptr inbounds %struct.Reg, %struct.Reg* %10752, i32 0, i32 0
  %RSI.i125 = bitcast %union.anon* %10753 to i64*
  %10754 = load i64, i64* %RAX.i124
  %10755 = load i64, i64* %RDX.i
  %10756 = add i64 %10755, %10754
  %10757 = load i64, i64* %PC.i123
  %10758 = add i64 %10757, 4
  store i64 %10758, i64* %PC.i123
  %10759 = inttoptr i64 %10756 to i8*
  %10760 = load i8, i8* %10759
  %10761 = sext i8 %10760 to i64
  %10762 = and i64 %10761, 4294967295
  store i64 %10762, i64* %RSI.i125, align 8
  store %struct.Memory* %loadMem_4a9c91, %struct.Memory** %MEMORY
  %loadMem1_4a9c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10764 = getelementptr inbounds %struct.GPR, %struct.GPR* %10763, i32 0, i32 33
  %10765 = getelementptr inbounds %struct.Reg, %struct.Reg* %10764, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %10765 to i64*
  %10766 = load i64, i64* %PC.i122
  %10767 = add i64 %10766, -691301
  %10768 = load i64, i64* %PC.i122
  %10769 = add i64 %10768, 5
  %10770 = load i64, i64* %PC.i122
  %10771 = add i64 %10770, 5
  store i64 %10771, i64* %PC.i122
  %10772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10773 = load i64, i64* %10772, align 8
  %10774 = add i64 %10773, -8
  %10775 = inttoptr i64 %10774 to i64*
  store i64 %10769, i64* %10775
  store i64 %10774, i64* %10772, align 8
  %10776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10767, i64* %10776, align 8
  store %struct.Memory* %loadMem1_4a9c95, %struct.Memory** %MEMORY
  %loadMem2_4a9c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9c95 = load i64, i64* %3
  %call2_4a9c95 = call %struct.Memory* @sub_401030.strchr_plt(%struct.State* %0, i64 %loadPC_4a9c95, %struct.Memory* %loadMem2_4a9c95)
  store %struct.Memory* %call2_4a9c95, %struct.Memory** %MEMORY
  %loadMem_4a9c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 1
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %10782 to i64*
  %10783 = load i64, i64* %RAX.i121
  %10784 = load i64, i64* %PC.i120
  %10785 = add i64 %10784, 4
  store i64 %10785, i64* %PC.i120
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10786, align 1
  %10787 = trunc i64 %10783 to i32
  %10788 = and i32 %10787, 255
  %10789 = call i32 @llvm.ctpop.i32(i32 %10788)
  %10790 = trunc i32 %10789 to i8
  %10791 = and i8 %10790, 1
  %10792 = xor i8 %10791, 1
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10792, i8* %10793, align 1
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10794, align 1
  %10795 = icmp eq i64 %10783, 0
  %10796 = zext i1 %10795 to i8
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10796, i8* %10797, align 1
  %10798 = lshr i64 %10783, 63
  %10799 = trunc i64 %10798 to i8
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10799, i8* %10800, align 1
  %10801 = lshr i64 %10783, 63
  %10802 = xor i64 %10798, %10801
  %10803 = add i64 %10802, %10801
  %10804 = icmp eq i64 %10803, 2
  %10805 = zext i1 %10804 to i8
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10805, i8* %10806, align 1
  store %struct.Memory* %loadMem_4a9c9a, %struct.Memory** %MEMORY
  %loadMem_4a9c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10808 = getelementptr inbounds %struct.GPR, %struct.GPR* %10807, i32 0, i32 33
  %10809 = getelementptr inbounds %struct.Reg, %struct.Reg* %10808, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %10809 to i64*
  %10810 = load i64, i64* %PC.i119
  %10811 = add i64 %10810, 21
  %10812 = load i64, i64* %PC.i119
  %10813 = add i64 %10812, 6
  %10814 = load i64, i64* %PC.i119
  %10815 = add i64 %10814, 6
  store i64 %10815, i64* %PC.i119
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10817 = load i8, i8* %10816, align 1
  store i8 %10817, i8* %BRANCH_TAKEN, align 1
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10819 = icmp ne i8 %10817, 0
  %10820 = select i1 %10819, i64 %10811, i64 %10813
  store i64 %10820, i64* %10818, align 8
  store %struct.Memory* %loadMem_4a9c9e, %struct.Memory** %MEMORY
  %loadBr_4a9c9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9c9e = icmp eq i8 %loadBr_4a9c9e, 1
  br i1 %cmpBr_4a9c9e, label %block_.L_4a9cb3, label %block_4a9ca4

block_4a9ca4:                                     ; preds = %block_.L_4a9c3d
  %loadMem_4a9ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10822 = getelementptr inbounds %struct.GPR, %struct.GPR* %10821, i32 0, i32 33
  %10823 = getelementptr inbounds %struct.Reg, %struct.Reg* %10822, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %10823 to i64*
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10825 = getelementptr inbounds %struct.GPR, %struct.GPR* %10824, i32 0, i32 1
  %10826 = getelementptr inbounds %struct.Reg, %struct.Reg* %10825, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %10826 to i64*
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10828 = getelementptr inbounds %struct.GPR, %struct.GPR* %10827, i32 0, i32 15
  %10829 = getelementptr inbounds %struct.Reg, %struct.Reg* %10828, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %10829 to i64*
  %10830 = load i64, i64* %RBP.i118
  %10831 = sub i64 %10830, 7140
  %10832 = load i64, i64* %PC.i116
  %10833 = add i64 %10832, 6
  store i64 %10833, i64* %PC.i116
  %10834 = inttoptr i64 %10831 to i32*
  %10835 = load i32, i32* %10834
  %10836 = zext i32 %10835 to i64
  store i64 %10836, i64* %RAX.i117, align 8
  store %struct.Memory* %loadMem_4a9ca4, %struct.Memory** %MEMORY
  %loadMem_4a9caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10838 = getelementptr inbounds %struct.GPR, %struct.GPR* %10837, i32 0, i32 33
  %10839 = getelementptr inbounds %struct.Reg, %struct.Reg* %10838, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %10839 to i64*
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 1
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %10842 to i64*
  %10843 = load i64, i64* %RAX.i115
  %10844 = load i64, i64* %PC.i114
  %10845 = add i64 %10844, 3
  store i64 %10845, i64* %PC.i114
  %10846 = trunc i64 %10843 to i32
  %10847 = add i32 -1, %10846
  %10848 = zext i32 %10847 to i64
  store i64 %10848, i64* %RAX.i115, align 8
  %10849 = icmp ult i32 %10847, %10846
  %10850 = icmp ult i32 %10847, -1
  %10851 = or i1 %10849, %10850
  %10852 = zext i1 %10851 to i8
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10852, i8* %10853, align 1
  %10854 = and i32 %10847, 255
  %10855 = call i32 @llvm.ctpop.i32(i32 %10854)
  %10856 = trunc i32 %10855 to i8
  %10857 = and i8 %10856, 1
  %10858 = xor i8 %10857, 1
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10858, i8* %10859, align 1
  %10860 = xor i64 -1, %10843
  %10861 = trunc i64 %10860 to i32
  %10862 = xor i32 %10861, %10847
  %10863 = lshr i32 %10862, 4
  %10864 = trunc i32 %10863 to i8
  %10865 = and i8 %10864, 1
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10865, i8* %10866, align 1
  %10867 = icmp eq i32 %10847, 0
  %10868 = zext i1 %10867 to i8
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10868, i8* %10869, align 1
  %10870 = lshr i32 %10847, 31
  %10871 = trunc i32 %10870 to i8
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10871, i8* %10872, align 1
  %10873 = lshr i32 %10846, 31
  %10874 = xor i32 %10870, %10873
  %10875 = xor i32 %10870, 1
  %10876 = add i32 %10874, %10875
  %10877 = icmp eq i32 %10876, 2
  %10878 = zext i1 %10877 to i8
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10878, i8* %10879, align 1
  store %struct.Memory* %loadMem_4a9caa, %struct.Memory** %MEMORY
  %loadMem_4a9cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10881 = getelementptr inbounds %struct.GPR, %struct.GPR* %10880, i32 0, i32 33
  %10882 = getelementptr inbounds %struct.Reg, %struct.Reg* %10881, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %10882 to i64*
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10884 = getelementptr inbounds %struct.GPR, %struct.GPR* %10883, i32 0, i32 1
  %10885 = getelementptr inbounds %struct.Reg, %struct.Reg* %10884, i32 0, i32 0
  %EAX.i112 = bitcast %union.anon* %10885 to i32*
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 15
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %10888 to i64*
  %10889 = load i64, i64* %RBP.i113
  %10890 = sub i64 %10889, 7140
  %10891 = load i32, i32* %EAX.i112
  %10892 = zext i32 %10891 to i64
  %10893 = load i64, i64* %PC.i111
  %10894 = add i64 %10893, 6
  store i64 %10894, i64* %PC.i111
  %10895 = inttoptr i64 %10890 to i32*
  store i32 %10891, i32* %10895
  store %struct.Memory* %loadMem_4a9cad, %struct.Memory** %MEMORY
  br label %block_.L_4a9cb3

block_.L_4a9cb3:                                  ; preds = %block_4a9ca4, %block_.L_4a9c3d
  %loadMem_4a9cb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10897 = getelementptr inbounds %struct.GPR, %struct.GPR* %10896, i32 0, i32 33
  %10898 = getelementptr inbounds %struct.Reg, %struct.Reg* %10897, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %10898 to i64*
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10900 = getelementptr inbounds %struct.GPR, %struct.GPR* %10899, i32 0, i32 11
  %10901 = getelementptr inbounds %struct.Reg, %struct.Reg* %10900, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %10901 to i64*
  %10902 = load i64, i64* %PC.i110
  %10903 = add i64 %10902, 10
  store i64 %10903, i64* %PC.i110
  store i64 ptrtoint (%G__0x588b35_type* @G__0x588b35 to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4a9cb3, %struct.Memory** %MEMORY
  %loadMem_4a9cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10905 = getelementptr inbounds %struct.GPR, %struct.GPR* %10904, i32 0, i32 33
  %10906 = getelementptr inbounds %struct.Reg, %struct.Reg* %10905, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %10906 to i64*
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10908 = getelementptr inbounds %struct.GPR, %struct.GPR* %10907, i32 0, i32 1
  %10909 = getelementptr inbounds %struct.Reg, %struct.Reg* %10908, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %10909 to i64*
  %10910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10911 = getelementptr inbounds %struct.GPR, %struct.GPR* %10910, i32 0, i32 15
  %10912 = getelementptr inbounds %struct.Reg, %struct.Reg* %10911, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %10912 to i64*
  %10913 = load i64, i64* %RBP.i109
  %10914 = sub i64 %10913, 48
  %10915 = load i64, i64* %PC.i107
  %10916 = add i64 %10915, 4
  store i64 %10916, i64* %PC.i107
  %10917 = inttoptr i64 %10914 to i64*
  %10918 = load i64, i64* %10917
  store i64 %10918, i64* %RAX.i108, align 8
  store %struct.Memory* %loadMem_4a9cbd, %struct.Memory** %MEMORY
  %loadMem_4a9cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10920 = getelementptr inbounds %struct.GPR, %struct.GPR* %10919, i32 0, i32 33
  %10921 = getelementptr inbounds %struct.Reg, %struct.Reg* %10920, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %10921 to i64*
  %10922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10923 = getelementptr inbounds %struct.GPR, %struct.GPR* %10922, i32 0, i32 5
  %10924 = getelementptr inbounds %struct.Reg, %struct.Reg* %10923, i32 0, i32 0
  %RCX.i105 = bitcast %union.anon* %10924 to i64*
  %10925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10926 = getelementptr inbounds %struct.GPR, %struct.GPR* %10925, i32 0, i32 15
  %10927 = getelementptr inbounds %struct.Reg, %struct.Reg* %10926, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %10927 to i64*
  %10928 = load i64, i64* %RBP.i106
  %10929 = sub i64 %10928, 7152
  %10930 = load i64, i64* %PC.i104
  %10931 = add i64 %10930, 7
  store i64 %10931, i64* %PC.i104
  %10932 = inttoptr i64 %10929 to i32*
  %10933 = load i32, i32* %10932
  %10934 = sext i32 %10933 to i64
  store i64 %10934, i64* %RCX.i105, align 8
  store %struct.Memory* %loadMem_4a9cc1, %struct.Memory** %MEMORY
  %loadMem_4a9cc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10936 = getelementptr inbounds %struct.GPR, %struct.GPR* %10935, i32 0, i32 33
  %10937 = getelementptr inbounds %struct.Reg, %struct.Reg* %10936, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %10937 to i64*
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 1
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %10940 to i64*
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10942 = getelementptr inbounds %struct.GPR, %struct.GPR* %10941, i32 0, i32 5
  %10943 = getelementptr inbounds %struct.Reg, %struct.Reg* %10942, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %10943 to i64*
  %10944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10945 = getelementptr inbounds %struct.GPR, %struct.GPR* %10944, i32 0, i32 9
  %10946 = getelementptr inbounds %struct.Reg, %struct.Reg* %10945, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10946 to i64*
  %10947 = load i64, i64* %RAX.i102
  %10948 = load i64, i64* %RCX.i103
  %10949 = add i64 %10948, %10947
  %10950 = load i64, i64* %PC.i101
  %10951 = add i64 %10950, 4
  store i64 %10951, i64* %PC.i101
  %10952 = inttoptr i64 %10949 to i8*
  %10953 = load i8, i8* %10952
  %10954 = sext i8 %10953 to i64
  %10955 = and i64 %10954, 4294967295
  store i64 %10955, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4a9cc8, %struct.Memory** %MEMORY
  %loadMem1_4a9ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10957 = getelementptr inbounds %struct.GPR, %struct.GPR* %10956, i32 0, i32 33
  %10958 = getelementptr inbounds %struct.Reg, %struct.Reg* %10957, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %10958 to i64*
  %10959 = load i64, i64* %PC.i100
  %10960 = add i64 %10959, -691356
  %10961 = load i64, i64* %PC.i100
  %10962 = add i64 %10961, 5
  %10963 = load i64, i64* %PC.i100
  %10964 = add i64 %10963, 5
  store i64 %10964, i64* %PC.i100
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10966 = load i64, i64* %10965, align 8
  %10967 = add i64 %10966, -8
  %10968 = inttoptr i64 %10967 to i64*
  store i64 %10962, i64* %10968
  store i64 %10967, i64* %10965, align 8
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10960, i64* %10969, align 8
  store %struct.Memory* %loadMem1_4a9ccc, %struct.Memory** %MEMORY
  %loadMem2_4a9ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4a9ccc = load i64, i64* %3
  %call2_4a9ccc = call %struct.Memory* @sub_401030.strchr_plt(%struct.State* %0, i64 %loadPC_4a9ccc, %struct.Memory* %loadMem2_4a9ccc)
  store %struct.Memory* %call2_4a9ccc, %struct.Memory** %MEMORY
  %loadMem_4a9cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 33
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %10972 to i64*
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 1
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %RAX.i99 = bitcast %union.anon* %10975 to i64*
  %10976 = load i64, i64* %RAX.i99
  %10977 = load i64, i64* %PC.i98
  %10978 = add i64 %10977, 4
  store i64 %10978, i64* %PC.i98
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10979, align 1
  %10980 = trunc i64 %10976 to i32
  %10981 = and i32 %10980, 255
  %10982 = call i32 @llvm.ctpop.i32(i32 %10981)
  %10983 = trunc i32 %10982 to i8
  %10984 = and i8 %10983, 1
  %10985 = xor i8 %10984, 1
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10985, i8* %10986, align 1
  %10987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10987, align 1
  %10988 = icmp eq i64 %10976, 0
  %10989 = zext i1 %10988 to i8
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10989, i8* %10990, align 1
  %10991 = lshr i64 %10976, 63
  %10992 = trunc i64 %10991 to i8
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10992, i8* %10993, align 1
  %10994 = lshr i64 %10976, 63
  %10995 = xor i64 %10991, %10994
  %10996 = add i64 %10995, %10994
  %10997 = icmp eq i64 %10996, 2
  %10998 = zext i1 %10997 to i8
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10998, i8* %10999, align 1
  store %struct.Memory* %loadMem_4a9cd1, %struct.Memory** %MEMORY
  %loadMem_4a9cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11001 = getelementptr inbounds %struct.GPR, %struct.GPR* %11000, i32 0, i32 33
  %11002 = getelementptr inbounds %struct.Reg, %struct.Reg* %11001, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %11002 to i64*
  %11003 = load i64, i64* %PC.i97
  %11004 = add i64 %11003, 147
  %11005 = load i64, i64* %PC.i97
  %11006 = add i64 %11005, 6
  %11007 = load i64, i64* %PC.i97
  %11008 = add i64 %11007, 6
  store i64 %11008, i64* %PC.i97
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11010 = load i8, i8* %11009, align 1
  store i8 %11010, i8* %BRANCH_TAKEN, align 1
  %11011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11012 = icmp ne i8 %11010, 0
  %11013 = select i1 %11012, i64 %11004, i64 %11006
  store i64 %11013, i64* %11011, align 8
  store %struct.Memory* %loadMem_4a9cd5, %struct.Memory** %MEMORY
  %loadBr_4a9cd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9cd5 = icmp eq i8 %loadBr_4a9cd5, 1
  br i1 %cmpBr_4a9cd5, label %block_.L_4a9d68, label %block_4a9cdb

block_4a9cdb:                                     ; preds = %block_.L_4a9cb3
  %loadMem_4a9cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11015 = getelementptr inbounds %struct.GPR, %struct.GPR* %11014, i32 0, i32 33
  %11016 = getelementptr inbounds %struct.Reg, %struct.Reg* %11015, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %11016 to i64*
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11018 = getelementptr inbounds %struct.GPR, %struct.GPR* %11017, i32 0, i32 1
  %11019 = getelementptr inbounds %struct.Reg, %struct.Reg* %11018, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %11019 to i64*
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 15
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %11022 to i64*
  %11023 = load i64, i64* %RBP.i96
  %11024 = sub i64 %11023, 7144
  %11025 = load i64, i64* %PC.i94
  %11026 = add i64 %11025, 6
  store i64 %11026, i64* %PC.i94
  %11027 = inttoptr i64 %11024 to i32*
  %11028 = load i32, i32* %11027
  %11029 = zext i32 %11028 to i64
  store i64 %11029, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_4a9cdb, %struct.Memory** %MEMORY
  %loadMem_4a9ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11031 = getelementptr inbounds %struct.GPR, %struct.GPR* %11030, i32 0, i32 33
  %11032 = getelementptr inbounds %struct.Reg, %struct.Reg* %11031, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %11032 to i64*
  %11033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11034 = getelementptr inbounds %struct.GPR, %struct.GPR* %11033, i32 0, i32 5
  %11035 = getelementptr inbounds %struct.Reg, %struct.Reg* %11034, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %11035 to i64*
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11037 = getelementptr inbounds %struct.GPR, %struct.GPR* %11036, i32 0, i32 15
  %11038 = getelementptr inbounds %struct.Reg, %struct.Reg* %11037, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %11038 to i64*
  %11039 = load i64, i64* %RBP.i93
  %11040 = sub i64 %11039, 32
  %11041 = load i64, i64* %PC.i91
  %11042 = add i64 %11041, 4
  store i64 %11042, i64* %PC.i91
  %11043 = inttoptr i64 %11040 to i64*
  %11044 = load i64, i64* %11043
  store i64 %11044, i64* %RCX.i92, align 8
  store %struct.Memory* %loadMem_4a9ce1, %struct.Memory** %MEMORY
  %loadMem_4a9ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11046 = getelementptr inbounds %struct.GPR, %struct.GPR* %11045, i32 0, i32 33
  %11047 = getelementptr inbounds %struct.Reg, %struct.Reg* %11046, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %11047 to i64*
  %11048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11049 = getelementptr inbounds %struct.GPR, %struct.GPR* %11048, i32 0, i32 1
  %11050 = getelementptr inbounds %struct.Reg, %struct.Reg* %11049, i32 0, i32 0
  %EAX.i89 = bitcast %union.anon* %11050 to i32*
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11052 = getelementptr inbounds %struct.GPR, %struct.GPR* %11051, i32 0, i32 5
  %11053 = getelementptr inbounds %struct.Reg, %struct.Reg* %11052, i32 0, i32 0
  %RCX.i90 = bitcast %union.anon* %11053 to i64*
  %11054 = load i32, i32* %EAX.i89
  %11055 = zext i32 %11054 to i64
  %11056 = load i64, i64* %RCX.i90
  %11057 = add i64 %11056, 32
  %11058 = load i64, i64* %PC.i88
  %11059 = add i64 %11058, 3
  store i64 %11059, i64* %PC.i88
  %11060 = inttoptr i64 %11057 to i32*
  %11061 = load i32, i32* %11060
  %11062 = sub i32 %11054, %11061
  %11063 = icmp ult i32 %11054, %11061
  %11064 = zext i1 %11063 to i8
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11064, i8* %11065, align 1
  %11066 = and i32 %11062, 255
  %11067 = call i32 @llvm.ctpop.i32(i32 %11066)
  %11068 = trunc i32 %11067 to i8
  %11069 = and i8 %11068, 1
  %11070 = xor i8 %11069, 1
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11070, i8* %11071, align 1
  %11072 = xor i32 %11061, %11054
  %11073 = xor i32 %11072, %11062
  %11074 = lshr i32 %11073, 4
  %11075 = trunc i32 %11074 to i8
  %11076 = and i8 %11075, 1
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11076, i8* %11077, align 1
  %11078 = icmp eq i32 %11062, 0
  %11079 = zext i1 %11078 to i8
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11079, i8* %11080, align 1
  %11081 = lshr i32 %11062, 31
  %11082 = trunc i32 %11081 to i8
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11082, i8* %11083, align 1
  %11084 = lshr i32 %11054, 31
  %11085 = lshr i32 %11061, 31
  %11086 = xor i32 %11085, %11084
  %11087 = xor i32 %11081, %11084
  %11088 = add i32 %11087, %11086
  %11089 = icmp eq i32 %11088, 2
  %11090 = zext i1 %11089 to i8
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11090, i8* %11091, align 1
  store %struct.Memory* %loadMem_4a9ce5, %struct.Memory** %MEMORY
  %loadMem_4a9ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11093 = getelementptr inbounds %struct.GPR, %struct.GPR* %11092, i32 0, i32 33
  %11094 = getelementptr inbounds %struct.Reg, %struct.Reg* %11093, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %11094 to i64*
  %11095 = load i64, i64* %PC.i87
  %11096 = add i64 %11095, 21
  %11097 = load i64, i64* %PC.i87
  %11098 = add i64 %11097, 6
  %11099 = load i64, i64* %PC.i87
  %11100 = add i64 %11099, 6
  store i64 %11100, i64* %PC.i87
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11102 = load i8, i8* %11101, align 1
  %11103 = icmp ne i8 %11102, 0
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11105 = load i8, i8* %11104, align 1
  %11106 = icmp ne i8 %11105, 0
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11108 = load i8, i8* %11107, align 1
  %11109 = icmp ne i8 %11108, 0
  %11110 = xor i1 %11106, %11109
  %11111 = or i1 %11103, %11110
  %11112 = zext i1 %11111 to i8
  store i8 %11112, i8* %BRANCH_TAKEN, align 1
  %11113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11114 = select i1 %11111, i64 %11096, i64 %11098
  store i64 %11114, i64* %11113, align 8
  store %struct.Memory* %loadMem_4a9ce8, %struct.Memory** %MEMORY
  %loadBr_4a9ce8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9ce8 = icmp eq i8 %loadBr_4a9ce8, 1
  br i1 %cmpBr_4a9ce8, label %block_.L_4a9cfd, label %block_4a9cee

block_4a9cee:                                     ; preds = %block_4a9cdb
  %loadMem_4a9cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 33
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %11117 to i64*
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11119 = getelementptr inbounds %struct.GPR, %struct.GPR* %11118, i32 0, i32 1
  %11120 = getelementptr inbounds %struct.Reg, %struct.Reg* %11119, i32 0, i32 0
  %RAX.i85 = bitcast %union.anon* %11120 to i64*
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 15
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %11123 to i64*
  %11124 = load i64, i64* %RBP.i86
  %11125 = sub i64 %11124, 7132
  %11126 = load i64, i64* %PC.i84
  %11127 = add i64 %11126, 6
  store i64 %11127, i64* %PC.i84
  %11128 = inttoptr i64 %11125 to i32*
  %11129 = load i32, i32* %11128
  %11130 = zext i32 %11129 to i64
  store i64 %11130, i64* %RAX.i85, align 8
  store %struct.Memory* %loadMem_4a9cee, %struct.Memory** %MEMORY
  %loadMem_4a9cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11132 = getelementptr inbounds %struct.GPR, %struct.GPR* %11131, i32 0, i32 33
  %11133 = getelementptr inbounds %struct.Reg, %struct.Reg* %11132, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %11133 to i64*
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 1
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %11136 to i64*
  %11137 = load i64, i64* %RAX.i83
  %11138 = load i64, i64* %PC.i82
  %11139 = add i64 %11138, 3
  store i64 %11139, i64* %PC.i82
  %11140 = and i64 -3, %11137
  %11141 = trunc i64 %11140 to i32
  %11142 = and i64 %11140, 4294967295
  store i64 %11142, i64* %RAX.i83, align 8
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11143, align 1
  %11144 = and i32 %11141, 255
  %11145 = call i32 @llvm.ctpop.i32(i32 %11144)
  %11146 = trunc i32 %11145 to i8
  %11147 = and i8 %11146, 1
  %11148 = xor i8 %11147, 1
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11148, i8* %11149, align 1
  %11150 = icmp eq i32 %11141, 0
  %11151 = zext i1 %11150 to i8
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11151, i8* %11152, align 1
  %11153 = lshr i32 %11141, 31
  %11154 = trunc i32 %11153 to i8
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11154, i8* %11155, align 1
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11156, align 1
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11157, align 1
  store %struct.Memory* %loadMem_4a9cf4, %struct.Memory** %MEMORY
  %loadMem_4a9cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 33
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 1
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %EAX.i80 = bitcast %union.anon* %11163 to i32*
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 15
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %11166 to i64*
  %11167 = load i64, i64* %RBP.i81
  %11168 = sub i64 %11167, 7132
  %11169 = load i32, i32* %EAX.i80
  %11170 = zext i32 %11169 to i64
  %11171 = load i64, i64* %PC.i79
  %11172 = add i64 %11171, 6
  store i64 %11172, i64* %PC.i79
  %11173 = inttoptr i64 %11168 to i32*
  store i32 %11169, i32* %11173
  store %struct.Memory* %loadMem_4a9cf7, %struct.Memory** %MEMORY
  br label %block_.L_4a9cfd

block_.L_4a9cfd:                                  ; preds = %block_4a9cee, %block_4a9cdb
  %loadMem_4a9cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11175 = getelementptr inbounds %struct.GPR, %struct.GPR* %11174, i32 0, i32 33
  %11176 = getelementptr inbounds %struct.Reg, %struct.Reg* %11175, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %11176 to i64*
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11178 = getelementptr inbounds %struct.GPR, %struct.GPR* %11177, i32 0, i32 1
  %11179 = getelementptr inbounds %struct.Reg, %struct.Reg* %11178, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %11179 to i64*
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11181 = getelementptr inbounds %struct.GPR, %struct.GPR* %11180, i32 0, i32 15
  %11182 = getelementptr inbounds %struct.Reg, %struct.Reg* %11181, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %11182 to i64*
  %11183 = load i64, i64* %RBP.i78
  %11184 = sub i64 %11183, 7144
  %11185 = load i64, i64* %PC.i76
  %11186 = add i64 %11185, 6
  store i64 %11186, i64* %PC.i76
  %11187 = inttoptr i64 %11184 to i32*
  %11188 = load i32, i32* %11187
  %11189 = zext i32 %11188 to i64
  store i64 %11189, i64* %RAX.i77, align 8
  store %struct.Memory* %loadMem_4a9cfd, %struct.Memory** %MEMORY
  %loadMem_4a9d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11191 = getelementptr inbounds %struct.GPR, %struct.GPR* %11190, i32 0, i32 33
  %11192 = getelementptr inbounds %struct.Reg, %struct.Reg* %11191, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %11192 to i64*
  %11193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11194 = getelementptr inbounds %struct.GPR, %struct.GPR* %11193, i32 0, i32 5
  %11195 = getelementptr inbounds %struct.Reg, %struct.Reg* %11194, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %11195 to i64*
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 15
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %11198 to i64*
  %11199 = load i64, i64* %RBP.i75
  %11200 = sub i64 %11199, 32
  %11201 = load i64, i64* %PC.i73
  %11202 = add i64 %11201, 4
  store i64 %11202, i64* %PC.i73
  %11203 = inttoptr i64 %11200 to i64*
  %11204 = load i64, i64* %11203
  store i64 %11204, i64* %RCX.i74, align 8
  store %struct.Memory* %loadMem_4a9d03, %struct.Memory** %MEMORY
  %loadMem_4a9d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11206 = getelementptr inbounds %struct.GPR, %struct.GPR* %11205, i32 0, i32 33
  %11207 = getelementptr inbounds %struct.Reg, %struct.Reg* %11206, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %11207 to i64*
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11209 = getelementptr inbounds %struct.GPR, %struct.GPR* %11208, i32 0, i32 1
  %11210 = getelementptr inbounds %struct.Reg, %struct.Reg* %11209, i32 0, i32 0
  %EAX.i71 = bitcast %union.anon* %11210 to i32*
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11212 = getelementptr inbounds %struct.GPR, %struct.GPR* %11211, i32 0, i32 5
  %11213 = getelementptr inbounds %struct.Reg, %struct.Reg* %11212, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %11213 to i64*
  %11214 = load i32, i32* %EAX.i71
  %11215 = zext i32 %11214 to i64
  %11216 = load i64, i64* %RCX.i72
  %11217 = add i64 %11216, 24
  %11218 = load i64, i64* %PC.i70
  %11219 = add i64 %11218, 3
  store i64 %11219, i64* %PC.i70
  %11220 = inttoptr i64 %11217 to i32*
  %11221 = load i32, i32* %11220
  %11222 = sub i32 %11214, %11221
  %11223 = icmp ult i32 %11214, %11221
  %11224 = zext i1 %11223 to i8
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11224, i8* %11225, align 1
  %11226 = and i32 %11222, 255
  %11227 = call i32 @llvm.ctpop.i32(i32 %11226)
  %11228 = trunc i32 %11227 to i8
  %11229 = and i8 %11228, 1
  %11230 = xor i8 %11229, 1
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11230, i8* %11231, align 1
  %11232 = xor i32 %11221, %11214
  %11233 = xor i32 %11232, %11222
  %11234 = lshr i32 %11233, 4
  %11235 = trunc i32 %11234 to i8
  %11236 = and i8 %11235, 1
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11236, i8* %11237, align 1
  %11238 = icmp eq i32 %11222, 0
  %11239 = zext i1 %11238 to i8
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11239, i8* %11240, align 1
  %11241 = lshr i32 %11222, 31
  %11242 = trunc i32 %11241 to i8
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11242, i8* %11243, align 1
  %11244 = lshr i32 %11214, 31
  %11245 = lshr i32 %11221, 31
  %11246 = xor i32 %11245, %11244
  %11247 = xor i32 %11241, %11244
  %11248 = add i32 %11247, %11246
  %11249 = icmp eq i32 %11248, 2
  %11250 = zext i1 %11249 to i8
  %11251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11250, i8* %11251, align 1
  store %struct.Memory* %loadMem_4a9d07, %struct.Memory** %MEMORY
  %loadMem_4a9d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 33
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %11254 to i64*
  %11255 = load i64, i64* %PC.i69
  %11256 = add i64 %11255, 21
  %11257 = load i64, i64* %PC.i69
  %11258 = add i64 %11257, 6
  %11259 = load i64, i64* %PC.i69
  %11260 = add i64 %11259, 6
  store i64 %11260, i64* %PC.i69
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11262 = load i8, i8* %11261, align 1
  %11263 = icmp ne i8 %11262, 0
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11265 = load i8, i8* %11264, align 1
  %11266 = icmp ne i8 %11265, 0
  %11267 = xor i1 %11263, %11266
  %11268 = xor i1 %11267, true
  %11269 = zext i1 %11268 to i8
  store i8 %11269, i8* %BRANCH_TAKEN, align 1
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11271 = select i1 %11267, i64 %11258, i64 %11256
  store i64 %11271, i64* %11270, align 8
  store %struct.Memory* %loadMem_4a9d0a, %struct.Memory** %MEMORY
  %loadBr_4a9d0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9d0a = icmp eq i8 %loadBr_4a9d0a, 1
  br i1 %cmpBr_4a9d0a, label %block_.L_4a9d1f, label %block_4a9d10

block_4a9d10:                                     ; preds = %block_.L_4a9cfd
  %loadMem_4a9d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11273 = getelementptr inbounds %struct.GPR, %struct.GPR* %11272, i32 0, i32 33
  %11274 = getelementptr inbounds %struct.Reg, %struct.Reg* %11273, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %11274 to i64*
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11276 = getelementptr inbounds %struct.GPR, %struct.GPR* %11275, i32 0, i32 1
  %11277 = getelementptr inbounds %struct.Reg, %struct.Reg* %11276, i32 0, i32 0
  %RAX.i67 = bitcast %union.anon* %11277 to i64*
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11279 = getelementptr inbounds %struct.GPR, %struct.GPR* %11278, i32 0, i32 15
  %11280 = getelementptr inbounds %struct.Reg, %struct.Reg* %11279, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %11280 to i64*
  %11281 = load i64, i64* %RBP.i68
  %11282 = sub i64 %11281, 7132
  %11283 = load i64, i64* %PC.i66
  %11284 = add i64 %11283, 6
  store i64 %11284, i64* %PC.i66
  %11285 = inttoptr i64 %11282 to i32*
  %11286 = load i32, i32* %11285
  %11287 = zext i32 %11286 to i64
  store i64 %11287, i64* %RAX.i67, align 8
  store %struct.Memory* %loadMem_4a9d10, %struct.Memory** %MEMORY
  %loadMem_4a9d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11289 = getelementptr inbounds %struct.GPR, %struct.GPR* %11288, i32 0, i32 33
  %11290 = getelementptr inbounds %struct.Reg, %struct.Reg* %11289, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %11290 to i64*
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11292 = getelementptr inbounds %struct.GPR, %struct.GPR* %11291, i32 0, i32 1
  %11293 = getelementptr inbounds %struct.Reg, %struct.Reg* %11292, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %11293 to i64*
  %11294 = load i64, i64* %RAX.i65
  %11295 = load i64, i64* %PC.i64
  %11296 = add i64 %11295, 3
  store i64 %11296, i64* %PC.i64
  %11297 = and i64 -2, %11294
  %11298 = trunc i64 %11297 to i32
  %11299 = and i64 %11297, 4294967295
  store i64 %11299, i64* %RAX.i65, align 8
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11300, align 1
  %11301 = and i32 %11298, 255
  %11302 = call i32 @llvm.ctpop.i32(i32 %11301)
  %11303 = trunc i32 %11302 to i8
  %11304 = and i8 %11303, 1
  %11305 = xor i8 %11304, 1
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11305, i8* %11306, align 1
  %11307 = icmp eq i32 %11298, 0
  %11308 = zext i1 %11307 to i8
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11308, i8* %11309, align 1
  %11310 = lshr i32 %11298, 31
  %11311 = trunc i32 %11310 to i8
  %11312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11311, i8* %11312, align 1
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11313, align 1
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11314, align 1
  store %struct.Memory* %loadMem_4a9d16, %struct.Memory** %MEMORY
  %loadMem_4a9d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11316 = getelementptr inbounds %struct.GPR, %struct.GPR* %11315, i32 0, i32 33
  %11317 = getelementptr inbounds %struct.Reg, %struct.Reg* %11316, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %11317 to i64*
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11319 = getelementptr inbounds %struct.GPR, %struct.GPR* %11318, i32 0, i32 1
  %11320 = getelementptr inbounds %struct.Reg, %struct.Reg* %11319, i32 0, i32 0
  %EAX.i62 = bitcast %union.anon* %11320 to i32*
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11322 = getelementptr inbounds %struct.GPR, %struct.GPR* %11321, i32 0, i32 15
  %11323 = getelementptr inbounds %struct.Reg, %struct.Reg* %11322, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %11323 to i64*
  %11324 = load i64, i64* %RBP.i63
  %11325 = sub i64 %11324, 7132
  %11326 = load i32, i32* %EAX.i62
  %11327 = zext i32 %11326 to i64
  %11328 = load i64, i64* %PC.i61
  %11329 = add i64 %11328, 6
  store i64 %11329, i64* %PC.i61
  %11330 = inttoptr i64 %11325 to i32*
  store i32 %11326, i32* %11330
  store %struct.Memory* %loadMem_4a9d19, %struct.Memory** %MEMORY
  br label %block_.L_4a9d1f

block_.L_4a9d1f:                                  ; preds = %block_4a9d10, %block_.L_4a9cfd
  %loadMem_4a9d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11332 = getelementptr inbounds %struct.GPR, %struct.GPR* %11331, i32 0, i32 33
  %11333 = getelementptr inbounds %struct.Reg, %struct.Reg* %11332, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %11333 to i64*
  %11334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11335 = getelementptr inbounds %struct.GPR, %struct.GPR* %11334, i32 0, i32 1
  %11336 = getelementptr inbounds %struct.Reg, %struct.Reg* %11335, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %11336 to i64*
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11338 = getelementptr inbounds %struct.GPR, %struct.GPR* %11337, i32 0, i32 15
  %11339 = getelementptr inbounds %struct.Reg, %struct.Reg* %11338, i32 0, i32 0
  %RBP.i60 = bitcast %union.anon* %11339 to i64*
  %11340 = load i64, i64* %RBP.i60
  %11341 = sub i64 %11340, 7148
  %11342 = load i64, i64* %PC.i58
  %11343 = add i64 %11342, 6
  store i64 %11343, i64* %PC.i58
  %11344 = inttoptr i64 %11341 to i32*
  %11345 = load i32, i32* %11344
  %11346 = zext i32 %11345 to i64
  store i64 %11346, i64* %RAX.i59, align 8
  store %struct.Memory* %loadMem_4a9d1f, %struct.Memory** %MEMORY
  %loadMem_4a9d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11348 = getelementptr inbounds %struct.GPR, %struct.GPR* %11347, i32 0, i32 33
  %11349 = getelementptr inbounds %struct.Reg, %struct.Reg* %11348, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %11349 to i64*
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11351 = getelementptr inbounds %struct.GPR, %struct.GPR* %11350, i32 0, i32 5
  %11352 = getelementptr inbounds %struct.Reg, %struct.Reg* %11351, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %11352 to i64*
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 15
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %11355 to i64*
  %11356 = load i64, i64* %RBP.i57
  %11357 = sub i64 %11356, 32
  %11358 = load i64, i64* %PC.i55
  %11359 = add i64 %11358, 4
  store i64 %11359, i64* %PC.i55
  %11360 = inttoptr i64 %11357 to i64*
  %11361 = load i64, i64* %11360
  store i64 %11361, i64* %RCX.i56, align 8
  store %struct.Memory* %loadMem_4a9d25, %struct.Memory** %MEMORY
  %loadMem_4a9d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11363 = getelementptr inbounds %struct.GPR, %struct.GPR* %11362, i32 0, i32 33
  %11364 = getelementptr inbounds %struct.Reg, %struct.Reg* %11363, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %11364 to i64*
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11366 = getelementptr inbounds %struct.GPR, %struct.GPR* %11365, i32 0, i32 1
  %11367 = getelementptr inbounds %struct.Reg, %struct.Reg* %11366, i32 0, i32 0
  %EAX.i53 = bitcast %union.anon* %11367 to i32*
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11369 = getelementptr inbounds %struct.GPR, %struct.GPR* %11368, i32 0, i32 5
  %11370 = getelementptr inbounds %struct.Reg, %struct.Reg* %11369, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %11370 to i64*
  %11371 = load i32, i32* %EAX.i53
  %11372 = zext i32 %11371 to i64
  %11373 = load i64, i64* %RCX.i54
  %11374 = add i64 %11373, 36
  %11375 = load i64, i64* %PC.i52
  %11376 = add i64 %11375, 3
  store i64 %11376, i64* %PC.i52
  %11377 = inttoptr i64 %11374 to i32*
  %11378 = load i32, i32* %11377
  %11379 = sub i32 %11371, %11378
  %11380 = icmp ult i32 %11371, %11378
  %11381 = zext i1 %11380 to i8
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11381, i8* %11382, align 1
  %11383 = and i32 %11379, 255
  %11384 = call i32 @llvm.ctpop.i32(i32 %11383)
  %11385 = trunc i32 %11384 to i8
  %11386 = and i8 %11385, 1
  %11387 = xor i8 %11386, 1
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11387, i8* %11388, align 1
  %11389 = xor i32 %11378, %11371
  %11390 = xor i32 %11389, %11379
  %11391 = lshr i32 %11390, 4
  %11392 = trunc i32 %11391 to i8
  %11393 = and i8 %11392, 1
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11393, i8* %11394, align 1
  %11395 = icmp eq i32 %11379, 0
  %11396 = zext i1 %11395 to i8
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11396, i8* %11397, align 1
  %11398 = lshr i32 %11379, 31
  %11399 = trunc i32 %11398 to i8
  %11400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11399, i8* %11400, align 1
  %11401 = lshr i32 %11371, 31
  %11402 = lshr i32 %11378, 31
  %11403 = xor i32 %11402, %11401
  %11404 = xor i32 %11398, %11401
  %11405 = add i32 %11404, %11403
  %11406 = icmp eq i32 %11405, 2
  %11407 = zext i1 %11406 to i8
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11407, i8* %11408, align 1
  store %struct.Memory* %loadMem_4a9d29, %struct.Memory** %MEMORY
  %loadMem_4a9d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11410 = getelementptr inbounds %struct.GPR, %struct.GPR* %11409, i32 0, i32 33
  %11411 = getelementptr inbounds %struct.Reg, %struct.Reg* %11410, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %11411 to i64*
  %11412 = load i64, i64* %PC.i51
  %11413 = add i64 %11412, 21
  %11414 = load i64, i64* %PC.i51
  %11415 = add i64 %11414, 6
  %11416 = load i64, i64* %PC.i51
  %11417 = add i64 %11416, 6
  store i64 %11417, i64* %PC.i51
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11419 = load i8, i8* %11418, align 1
  %11420 = icmp ne i8 %11419, 0
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11422 = load i8, i8* %11421, align 1
  %11423 = icmp ne i8 %11422, 0
  %11424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11425 = load i8, i8* %11424, align 1
  %11426 = icmp ne i8 %11425, 0
  %11427 = xor i1 %11423, %11426
  %11428 = or i1 %11420, %11427
  %11429 = zext i1 %11428 to i8
  store i8 %11429, i8* %BRANCH_TAKEN, align 1
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11431 = select i1 %11428, i64 %11413, i64 %11415
  store i64 %11431, i64* %11430, align 8
  store %struct.Memory* %loadMem_4a9d2c, %struct.Memory** %MEMORY
  %loadBr_4a9d2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9d2c = icmp eq i8 %loadBr_4a9d2c, 1
  br i1 %cmpBr_4a9d2c, label %block_.L_4a9d41, label %block_4a9d32

block_4a9d32:                                     ; preds = %block_.L_4a9d1f
  %loadMem_4a9d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11433 = getelementptr inbounds %struct.GPR, %struct.GPR* %11432, i32 0, i32 33
  %11434 = getelementptr inbounds %struct.Reg, %struct.Reg* %11433, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %11434 to i64*
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11436 = getelementptr inbounds %struct.GPR, %struct.GPR* %11435, i32 0, i32 1
  %11437 = getelementptr inbounds %struct.Reg, %struct.Reg* %11436, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %11437 to i64*
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11439 = getelementptr inbounds %struct.GPR, %struct.GPR* %11438, i32 0, i32 15
  %11440 = getelementptr inbounds %struct.Reg, %struct.Reg* %11439, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %11440 to i64*
  %11441 = load i64, i64* %RBP.i50
  %11442 = sub i64 %11441, 7132
  %11443 = load i64, i64* %PC.i48
  %11444 = add i64 %11443, 6
  store i64 %11444, i64* %PC.i48
  %11445 = inttoptr i64 %11442 to i32*
  %11446 = load i32, i32* %11445
  %11447 = zext i32 %11446 to i64
  store i64 %11447, i64* %RAX.i49, align 8
  store %struct.Memory* %loadMem_4a9d32, %struct.Memory** %MEMORY
  %loadMem_4a9d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11449 = getelementptr inbounds %struct.GPR, %struct.GPR* %11448, i32 0, i32 33
  %11450 = getelementptr inbounds %struct.Reg, %struct.Reg* %11449, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11450 to i64*
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11452 = getelementptr inbounds %struct.GPR, %struct.GPR* %11451, i32 0, i32 1
  %11453 = getelementptr inbounds %struct.Reg, %struct.Reg* %11452, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %11453 to i64*
  %11454 = load i64, i64* %RAX.i47
  %11455 = load i64, i64* %PC.i46
  %11456 = add i64 %11455, 3
  store i64 %11456, i64* %PC.i46
  %11457 = and i64 -5, %11454
  %11458 = trunc i64 %11457 to i32
  %11459 = and i64 %11457, 4294967295
  store i64 %11459, i64* %RAX.i47, align 8
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11460, align 1
  %11461 = and i32 %11458, 255
  %11462 = call i32 @llvm.ctpop.i32(i32 %11461)
  %11463 = trunc i32 %11462 to i8
  %11464 = and i8 %11463, 1
  %11465 = xor i8 %11464, 1
  %11466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11465, i8* %11466, align 1
  %11467 = icmp eq i32 %11458, 0
  %11468 = zext i1 %11467 to i8
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11468, i8* %11469, align 1
  %11470 = lshr i32 %11458, 31
  %11471 = trunc i32 %11470 to i8
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11471, i8* %11472, align 1
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11473, align 1
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11474, align 1
  store %struct.Memory* %loadMem_4a9d38, %struct.Memory** %MEMORY
  %loadMem_4a9d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11476 = getelementptr inbounds %struct.GPR, %struct.GPR* %11475, i32 0, i32 33
  %11477 = getelementptr inbounds %struct.Reg, %struct.Reg* %11476, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %11477 to i64*
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11479 = getelementptr inbounds %struct.GPR, %struct.GPR* %11478, i32 0, i32 1
  %11480 = getelementptr inbounds %struct.Reg, %struct.Reg* %11479, i32 0, i32 0
  %EAX.i44 = bitcast %union.anon* %11480 to i32*
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11482 = getelementptr inbounds %struct.GPR, %struct.GPR* %11481, i32 0, i32 15
  %11483 = getelementptr inbounds %struct.Reg, %struct.Reg* %11482, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %11483 to i64*
  %11484 = load i64, i64* %RBP.i45
  %11485 = sub i64 %11484, 7132
  %11486 = load i32, i32* %EAX.i44
  %11487 = zext i32 %11486 to i64
  %11488 = load i64, i64* %PC.i43
  %11489 = add i64 %11488, 6
  store i64 %11489, i64* %PC.i43
  %11490 = inttoptr i64 %11485 to i32*
  store i32 %11486, i32* %11490
  store %struct.Memory* %loadMem_4a9d3b, %struct.Memory** %MEMORY
  br label %block_.L_4a9d41

block_.L_4a9d41:                                  ; preds = %block_4a9d32, %block_.L_4a9d1f
  %loadMem_4a9d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11492 = getelementptr inbounds %struct.GPR, %struct.GPR* %11491, i32 0, i32 33
  %11493 = getelementptr inbounds %struct.Reg, %struct.Reg* %11492, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %11493 to i64*
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 1
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %RAX.i41 = bitcast %union.anon* %11496 to i64*
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 15
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %11499 to i64*
  %11500 = load i64, i64* %RBP.i42
  %11501 = sub i64 %11500, 7148
  %11502 = load i64, i64* %PC.i40
  %11503 = add i64 %11502, 6
  store i64 %11503, i64* %PC.i40
  %11504 = inttoptr i64 %11501 to i32*
  %11505 = load i32, i32* %11504
  %11506 = zext i32 %11505 to i64
  store i64 %11506, i64* %RAX.i41, align 8
  store %struct.Memory* %loadMem_4a9d41, %struct.Memory** %MEMORY
  %loadMem_4a9d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11508 = getelementptr inbounds %struct.GPR, %struct.GPR* %11507, i32 0, i32 33
  %11509 = getelementptr inbounds %struct.Reg, %struct.Reg* %11508, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %11509 to i64*
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 5
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %RCX.i38 = bitcast %union.anon* %11512 to i64*
  %11513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11514 = getelementptr inbounds %struct.GPR, %struct.GPR* %11513, i32 0, i32 15
  %11515 = getelementptr inbounds %struct.Reg, %struct.Reg* %11514, i32 0, i32 0
  %RBP.i39 = bitcast %union.anon* %11515 to i64*
  %11516 = load i64, i64* %RBP.i39
  %11517 = sub i64 %11516, 32
  %11518 = load i64, i64* %PC.i37
  %11519 = add i64 %11518, 4
  store i64 %11519, i64* %PC.i37
  %11520 = inttoptr i64 %11517 to i64*
  %11521 = load i64, i64* %11520
  store i64 %11521, i64* %RCX.i38, align 8
  store %struct.Memory* %loadMem_4a9d47, %struct.Memory** %MEMORY
  %loadMem_4a9d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11523 = getelementptr inbounds %struct.GPR, %struct.GPR* %11522, i32 0, i32 33
  %11524 = getelementptr inbounds %struct.Reg, %struct.Reg* %11523, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %11524 to i64*
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11526 = getelementptr inbounds %struct.GPR, %struct.GPR* %11525, i32 0, i32 1
  %11527 = getelementptr inbounds %struct.Reg, %struct.Reg* %11526, i32 0, i32 0
  %EAX.i35 = bitcast %union.anon* %11527 to i32*
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 5
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %RCX.i36 = bitcast %union.anon* %11530 to i64*
  %11531 = load i32, i32* %EAX.i35
  %11532 = zext i32 %11531 to i64
  %11533 = load i64, i64* %RCX.i36
  %11534 = add i64 %11533, 28
  %11535 = load i64, i64* %PC.i34
  %11536 = add i64 %11535, 3
  store i64 %11536, i64* %PC.i34
  %11537 = inttoptr i64 %11534 to i32*
  %11538 = load i32, i32* %11537
  %11539 = sub i32 %11531, %11538
  %11540 = icmp ult i32 %11531, %11538
  %11541 = zext i1 %11540 to i8
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11541, i8* %11542, align 1
  %11543 = and i32 %11539, 255
  %11544 = call i32 @llvm.ctpop.i32(i32 %11543)
  %11545 = trunc i32 %11544 to i8
  %11546 = and i8 %11545, 1
  %11547 = xor i8 %11546, 1
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11547, i8* %11548, align 1
  %11549 = xor i32 %11538, %11531
  %11550 = xor i32 %11549, %11539
  %11551 = lshr i32 %11550, 4
  %11552 = trunc i32 %11551 to i8
  %11553 = and i8 %11552, 1
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11553, i8* %11554, align 1
  %11555 = icmp eq i32 %11539, 0
  %11556 = zext i1 %11555 to i8
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11556, i8* %11557, align 1
  %11558 = lshr i32 %11539, 31
  %11559 = trunc i32 %11558 to i8
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11559, i8* %11560, align 1
  %11561 = lshr i32 %11531, 31
  %11562 = lshr i32 %11538, 31
  %11563 = xor i32 %11562, %11561
  %11564 = xor i32 %11558, %11561
  %11565 = add i32 %11564, %11563
  %11566 = icmp eq i32 %11565, 2
  %11567 = zext i1 %11566 to i8
  %11568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11567, i8* %11568, align 1
  store %struct.Memory* %loadMem_4a9d4b, %struct.Memory** %MEMORY
  %loadMem_4a9d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 33
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11571 to i64*
  %11572 = load i64, i64* %PC.i33
  %11573 = add i64 %11572, 21
  %11574 = load i64, i64* %PC.i33
  %11575 = add i64 %11574, 6
  %11576 = load i64, i64* %PC.i33
  %11577 = add i64 %11576, 6
  store i64 %11577, i64* %PC.i33
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11579 = load i8, i8* %11578, align 1
  %11580 = icmp ne i8 %11579, 0
  %11581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11582 = load i8, i8* %11581, align 1
  %11583 = icmp ne i8 %11582, 0
  %11584 = xor i1 %11580, %11583
  %11585 = xor i1 %11584, true
  %11586 = zext i1 %11585 to i8
  store i8 %11586, i8* %BRANCH_TAKEN, align 1
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11588 = select i1 %11584, i64 %11575, i64 %11573
  store i64 %11588, i64* %11587, align 8
  store %struct.Memory* %loadMem_4a9d4e, %struct.Memory** %MEMORY
  %loadBr_4a9d4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4a9d4e = icmp eq i8 %loadBr_4a9d4e, 1
  br i1 %cmpBr_4a9d4e, label %block_.L_4a9d63, label %block_4a9d54

block_4a9d54:                                     ; preds = %block_.L_4a9d41
  %loadMem_4a9d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11590 = getelementptr inbounds %struct.GPR, %struct.GPR* %11589, i32 0, i32 33
  %11591 = getelementptr inbounds %struct.Reg, %struct.Reg* %11590, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %11591 to i64*
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11593 = getelementptr inbounds %struct.GPR, %struct.GPR* %11592, i32 0, i32 1
  %11594 = getelementptr inbounds %struct.Reg, %struct.Reg* %11593, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %11594 to i64*
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11596 = getelementptr inbounds %struct.GPR, %struct.GPR* %11595, i32 0, i32 15
  %11597 = getelementptr inbounds %struct.Reg, %struct.Reg* %11596, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %11597 to i64*
  %11598 = load i64, i64* %RBP.i32
  %11599 = sub i64 %11598, 7132
  %11600 = load i64, i64* %PC.i30
  %11601 = add i64 %11600, 6
  store i64 %11601, i64* %PC.i30
  %11602 = inttoptr i64 %11599 to i32*
  %11603 = load i32, i32* %11602
  %11604 = zext i32 %11603 to i64
  store i64 %11604, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_4a9d54, %struct.Memory** %MEMORY
  %loadMem_4a9d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11606 = getelementptr inbounds %struct.GPR, %struct.GPR* %11605, i32 0, i32 33
  %11607 = getelementptr inbounds %struct.Reg, %struct.Reg* %11606, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %11607 to i64*
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11609 = getelementptr inbounds %struct.GPR, %struct.GPR* %11608, i32 0, i32 1
  %11610 = getelementptr inbounds %struct.Reg, %struct.Reg* %11609, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %11610 to i64*
  %11611 = load i64, i64* %RAX.i29
  %11612 = load i64, i64* %PC.i28
  %11613 = add i64 %11612, 3
  store i64 %11613, i64* %PC.i28
  %11614 = and i64 -9, %11611
  %11615 = trunc i64 %11614 to i32
  %11616 = and i64 %11614, 4294967295
  store i64 %11616, i64* %RAX.i29, align 8
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11617, align 1
  %11618 = and i32 %11615, 255
  %11619 = call i32 @llvm.ctpop.i32(i32 %11618)
  %11620 = trunc i32 %11619 to i8
  %11621 = and i8 %11620, 1
  %11622 = xor i8 %11621, 1
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11622, i8* %11623, align 1
  %11624 = icmp eq i32 %11615, 0
  %11625 = zext i1 %11624 to i8
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11625, i8* %11626, align 1
  %11627 = lshr i32 %11615, 31
  %11628 = trunc i32 %11627 to i8
  %11629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11628, i8* %11629, align 1
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11630, align 1
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11631, align 1
  store %struct.Memory* %loadMem_4a9d5a, %struct.Memory** %MEMORY
  %loadMem_4a9d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11633 = getelementptr inbounds %struct.GPR, %struct.GPR* %11632, i32 0, i32 33
  %11634 = getelementptr inbounds %struct.Reg, %struct.Reg* %11633, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %11634 to i64*
  %11635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11636 = getelementptr inbounds %struct.GPR, %struct.GPR* %11635, i32 0, i32 1
  %11637 = getelementptr inbounds %struct.Reg, %struct.Reg* %11636, i32 0, i32 0
  %EAX.i26 = bitcast %union.anon* %11637 to i32*
  %11638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11639 = getelementptr inbounds %struct.GPR, %struct.GPR* %11638, i32 0, i32 15
  %11640 = getelementptr inbounds %struct.Reg, %struct.Reg* %11639, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %11640 to i64*
  %11641 = load i64, i64* %RBP.i27
  %11642 = sub i64 %11641, 7132
  %11643 = load i32, i32* %EAX.i26
  %11644 = zext i32 %11643 to i64
  %11645 = load i64, i64* %PC.i25
  %11646 = add i64 %11645, 6
  store i64 %11646, i64* %PC.i25
  %11647 = inttoptr i64 %11642 to i32*
  store i32 %11643, i32* %11647
  store %struct.Memory* %loadMem_4a9d5d, %struct.Memory** %MEMORY
  br label %block_.L_4a9d63

block_.L_4a9d63:                                  ; preds = %block_4a9d54, %block_.L_4a9d41
  %loadMem_4a9d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11649 = getelementptr inbounds %struct.GPR, %struct.GPR* %11648, i32 0, i32 33
  %11650 = getelementptr inbounds %struct.Reg, %struct.Reg* %11649, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %11650 to i64*
  %11651 = load i64, i64* %PC.i24
  %11652 = add i64 %11651, 5
  %11653 = load i64, i64* %PC.i24
  %11654 = add i64 %11653, 5
  store i64 %11654, i64* %PC.i24
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11652, i64* %11655, align 8
  store %struct.Memory* %loadMem_4a9d63, %struct.Memory** %MEMORY
  br label %block_.L_4a9d68

block_.L_4a9d68:                                  ; preds = %block_.L_4a9d63, %block_.L_4a9cb3
  %loadMem_4a9d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11657 = getelementptr inbounds %struct.GPR, %struct.GPR* %11656, i32 0, i32 33
  %11658 = getelementptr inbounds %struct.Reg, %struct.Reg* %11657, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %11658 to i64*
  %11659 = load i64, i64* %PC.i23
  %11660 = add i64 %11659, 5
  %11661 = load i64, i64* %PC.i23
  %11662 = add i64 %11661, 5
  store i64 %11662, i64* %PC.i23
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11660, i64* %11663, align 8
  store %struct.Memory* %loadMem_4a9d68, %struct.Memory** %MEMORY
  br label %block_.L_4a9d6d

block_.L_4a9d6d:                                  ; preds = %block_.L_4a9d68
  %loadMem_4a9d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11665 = getelementptr inbounds %struct.GPR, %struct.GPR* %11664, i32 0, i32 33
  %11666 = getelementptr inbounds %struct.Reg, %struct.Reg* %11665, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %11666 to i64*
  %11667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11668 = getelementptr inbounds %struct.GPR, %struct.GPR* %11667, i32 0, i32 1
  %11669 = getelementptr inbounds %struct.Reg, %struct.Reg* %11668, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %11669 to i64*
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11671 = getelementptr inbounds %struct.GPR, %struct.GPR* %11670, i32 0, i32 15
  %11672 = getelementptr inbounds %struct.Reg, %struct.Reg* %11671, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %11672 to i64*
  %11673 = load i64, i64* %RBP.i22
  %11674 = sub i64 %11673, 7152
  %11675 = load i64, i64* %PC.i20
  %11676 = add i64 %11675, 6
  store i64 %11676, i64* %PC.i20
  %11677 = inttoptr i64 %11674 to i32*
  %11678 = load i32, i32* %11677
  %11679 = zext i32 %11678 to i64
  store i64 %11679, i64* %RAX.i21, align 8
  store %struct.Memory* %loadMem_4a9d6d, %struct.Memory** %MEMORY
  %loadMem_4a9d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 33
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %11682 to i64*
  %11683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11684 = getelementptr inbounds %struct.GPR, %struct.GPR* %11683, i32 0, i32 1
  %11685 = getelementptr inbounds %struct.Reg, %struct.Reg* %11684, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %11685 to i64*
  %11686 = load i64, i64* %RAX.i19
  %11687 = load i64, i64* %PC.i18
  %11688 = add i64 %11687, 3
  store i64 %11688, i64* %PC.i18
  %11689 = trunc i64 %11686 to i32
  %11690 = add i32 1, %11689
  %11691 = zext i32 %11690 to i64
  store i64 %11691, i64* %RAX.i19, align 8
  %11692 = icmp ult i32 %11690, %11689
  %11693 = icmp ult i32 %11690, 1
  %11694 = or i1 %11692, %11693
  %11695 = zext i1 %11694 to i8
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11695, i8* %11696, align 1
  %11697 = and i32 %11690, 255
  %11698 = call i32 @llvm.ctpop.i32(i32 %11697)
  %11699 = trunc i32 %11698 to i8
  %11700 = and i8 %11699, 1
  %11701 = xor i8 %11700, 1
  %11702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11701, i8* %11702, align 1
  %11703 = xor i64 1, %11686
  %11704 = trunc i64 %11703 to i32
  %11705 = xor i32 %11704, %11690
  %11706 = lshr i32 %11705, 4
  %11707 = trunc i32 %11706 to i8
  %11708 = and i8 %11707, 1
  %11709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11708, i8* %11709, align 1
  %11710 = icmp eq i32 %11690, 0
  %11711 = zext i1 %11710 to i8
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11711, i8* %11712, align 1
  %11713 = lshr i32 %11690, 31
  %11714 = trunc i32 %11713 to i8
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11714, i8* %11715, align 1
  %11716 = lshr i32 %11689, 31
  %11717 = xor i32 %11713, %11716
  %11718 = add i32 %11717, %11713
  %11719 = icmp eq i32 %11718, 2
  %11720 = zext i1 %11719 to i8
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11720, i8* %11721, align 1
  store %struct.Memory* %loadMem_4a9d73, %struct.Memory** %MEMORY
  %loadMem_4a9d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11723 = getelementptr inbounds %struct.GPR, %struct.GPR* %11722, i32 0, i32 33
  %11724 = getelementptr inbounds %struct.Reg, %struct.Reg* %11723, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %11724 to i64*
  %11725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11726 = getelementptr inbounds %struct.GPR, %struct.GPR* %11725, i32 0, i32 1
  %11727 = getelementptr inbounds %struct.Reg, %struct.Reg* %11726, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11727 to i32*
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11729 = getelementptr inbounds %struct.GPR, %struct.GPR* %11728, i32 0, i32 15
  %11730 = getelementptr inbounds %struct.Reg, %struct.Reg* %11729, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %11730 to i64*
  %11731 = load i64, i64* %RBP.i17
  %11732 = sub i64 %11731, 7152
  %11733 = load i32, i32* %EAX.i
  %11734 = zext i32 %11733 to i64
  %11735 = load i64, i64* %PC.i16
  %11736 = add i64 %11735, 6
  store i64 %11736, i64* %PC.i16
  %11737 = inttoptr i64 %11732 to i32*
  store i32 %11733, i32* %11737
  store %struct.Memory* %loadMem_4a9d76, %struct.Memory** %MEMORY
  %loadMem_4a9d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 33
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %11740 to i64*
  %11741 = load i64, i64* %PC.i15
  %11742 = add i64 %11741, -750
  %11743 = load i64, i64* %PC.i15
  %11744 = add i64 %11743, 5
  store i64 %11744, i64* %PC.i15
  %11745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11742, i64* %11745, align 8
  store %struct.Memory* %loadMem_4a9d7c, %struct.Memory** %MEMORY
  br label %block_.L_4a9a8e

block_.L_4a9d81:                                  ; preds = %block_4a9afc
  %loadMem_4a9d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11747 = getelementptr inbounds %struct.GPR, %struct.GPR* %11746, i32 0, i32 33
  %11748 = getelementptr inbounds %struct.Reg, %struct.Reg* %11747, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11748 to i64*
  %11749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11750 = getelementptr inbounds %struct.GPR, %struct.GPR* %11749, i32 0, i32 1
  %11751 = getelementptr inbounds %struct.Reg, %struct.Reg* %11750, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %11751 to i64*
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11753 = getelementptr inbounds %struct.GPR, %struct.GPR* %11752, i32 0, i32 15
  %11754 = getelementptr inbounds %struct.Reg, %struct.Reg* %11753, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %11754 to i64*
  %11755 = load i64, i64* %RBP.i14
  %11756 = sub i64 %11755, 48
  %11757 = load i64, i64* %PC.i12
  %11758 = add i64 %11757, 4
  store i64 %11758, i64* %PC.i12
  %11759 = inttoptr i64 %11756 to i64*
  %11760 = load i64, i64* %11759
  store i64 %11760, i64* %RAX.i13, align 8
  store %struct.Memory* %loadMem_4a9d81, %struct.Memory** %MEMORY
  %loadMem_4a9d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11762 = getelementptr inbounds %struct.GPR, %struct.GPR* %11761, i32 0, i32 33
  %11763 = getelementptr inbounds %struct.Reg, %struct.Reg* %11762, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %11763 to i64*
  %11764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11765 = getelementptr inbounds %struct.GPR, %struct.GPR* %11764, i32 0, i32 5
  %11766 = getelementptr inbounds %struct.Reg, %struct.Reg* %11765, i32 0, i32 0
  %RCX.i10 = bitcast %union.anon* %11766 to i64*
  %11767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11768 = getelementptr inbounds %struct.GPR, %struct.GPR* %11767, i32 0, i32 15
  %11769 = getelementptr inbounds %struct.Reg, %struct.Reg* %11768, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %11769 to i64*
  %11770 = load i64, i64* %RBP.i11
  %11771 = sub i64 %11770, 7152
  %11772 = load i64, i64* %PC.i9
  %11773 = add i64 %11772, 7
  store i64 %11773, i64* %PC.i9
  %11774 = inttoptr i64 %11771 to i32*
  %11775 = load i32, i32* %11774
  %11776 = sext i32 %11775 to i64
  store i64 %11776, i64* %RCX.i10, align 8
  store %struct.Memory* %loadMem_4a9d85, %struct.Memory** %MEMORY
  %loadMem_4a9d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11778 = getelementptr inbounds %struct.GPR, %struct.GPR* %11777, i32 0, i32 33
  %11779 = getelementptr inbounds %struct.Reg, %struct.Reg* %11778, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %11779 to i64*
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11781 = getelementptr inbounds %struct.GPR, %struct.GPR* %11780, i32 0, i32 1
  %11782 = getelementptr inbounds %struct.Reg, %struct.Reg* %11781, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11782 to i64*
  %11783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11784 = getelementptr inbounds %struct.GPR, %struct.GPR* %11783, i32 0, i32 5
  %11785 = getelementptr inbounds %struct.Reg, %struct.Reg* %11784, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11785 to i64*
  %11786 = load i64, i64* %RAX.i
  %11787 = load i64, i64* %RCX.i
  %11788 = add i64 %11787, %11786
  %11789 = load i64, i64* %PC.i8
  %11790 = add i64 %11789, 4
  store i64 %11790, i64* %PC.i8
  %11791 = inttoptr i64 %11788 to i8*
  store i8 0, i8* %11791
  store %struct.Memory* %loadMem_4a9d8c, %struct.Memory** %MEMORY
  %loadMem_4a9d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 33
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %11794 to i64*
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 13
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11797 to i64*
  %11798 = load i64, i64* %RSP.i
  %11799 = load i64, i64* %PC.i7
  %11800 = add i64 %11799, 7
  store i64 %11800, i64* %PC.i7
  %11801 = add i64 7208, %11798
  store i64 %11801, i64* %RSP.i, align 8
  %11802 = icmp ult i64 %11801, %11798
  %11803 = icmp ult i64 %11801, 7208
  %11804 = or i1 %11802, %11803
  %11805 = zext i1 %11804 to i8
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11805, i8* %11806, align 1
  %11807 = trunc i64 %11801 to i32
  %11808 = and i32 %11807, 255
  %11809 = call i32 @llvm.ctpop.i32(i32 %11808)
  %11810 = trunc i32 %11809 to i8
  %11811 = and i8 %11810, 1
  %11812 = xor i8 %11811, 1
  %11813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11812, i8* %11813, align 1
  %11814 = xor i64 7208, %11798
  %11815 = xor i64 %11814, %11801
  %11816 = lshr i64 %11815, 4
  %11817 = trunc i64 %11816 to i8
  %11818 = and i8 %11817, 1
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11818, i8* %11819, align 1
  %11820 = icmp eq i64 %11801, 0
  %11821 = zext i1 %11820 to i8
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11821, i8* %11822, align 1
  %11823 = lshr i64 %11801, 63
  %11824 = trunc i64 %11823 to i8
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11824, i8* %11825, align 1
  %11826 = lshr i64 %11798, 63
  %11827 = xor i64 %11823, %11826
  %11828 = add i64 %11827, %11823
  %11829 = icmp eq i64 %11828, 2
  %11830 = zext i1 %11829 to i8
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11830, i8* %11831, align 1
  store %struct.Memory* %loadMem_4a9d90, %struct.Memory** %MEMORY
  %loadMem_4a9d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11833 = getelementptr inbounds %struct.GPR, %struct.GPR* %11832, i32 0, i32 33
  %11834 = getelementptr inbounds %struct.Reg, %struct.Reg* %11833, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %11834 to i64*
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11836 = getelementptr inbounds %struct.GPR, %struct.GPR* %11835, i32 0, i32 3
  %11837 = getelementptr inbounds %struct.Reg, %struct.Reg* %11836, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %11837 to i64*
  %11838 = load i64, i64* %PC.i6
  %11839 = add i64 %11838, 1
  store i64 %11839, i64* %PC.i6
  %11840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11841 = load i64, i64* %11840, align 8
  %11842 = add i64 %11841, 8
  %11843 = inttoptr i64 %11841 to i64*
  %11844 = load i64, i64* %11843
  store i64 %11844, i64* %RBX.i, align 8
  store i64 %11842, i64* %11840, align 8
  store %struct.Memory* %loadMem_4a9d97, %struct.Memory** %MEMORY
  %loadMem_4a9d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 33
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11847 to i64*
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 29
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %R14.i = bitcast %union.anon* %11850 to i64*
  %11851 = load i64, i64* %PC.i5
  %11852 = add i64 %11851, 2
  store i64 %11852, i64* %PC.i5
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11854 = load i64, i64* %11853, align 8
  %11855 = add i64 %11854, 8
  %11856 = inttoptr i64 %11854 to i64*
  %11857 = load i64, i64* %11856
  store i64 %11857, i64* %R14.i, align 8
  store i64 %11855, i64* %11853, align 8
  store %struct.Memory* %loadMem_4a9d98, %struct.Memory** %MEMORY
  %loadMem_4a9d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11859 = getelementptr inbounds %struct.GPR, %struct.GPR* %11858, i32 0, i32 33
  %11860 = getelementptr inbounds %struct.Reg, %struct.Reg* %11859, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11860 to i64*
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11862 = getelementptr inbounds %struct.GPR, %struct.GPR* %11861, i32 0, i32 31
  %11863 = getelementptr inbounds %struct.Reg, %struct.Reg* %11862, i32 0, i32 0
  %R15.i = bitcast %union.anon* %11863 to i64*
  %11864 = load i64, i64* %PC.i4
  %11865 = add i64 %11864, 2
  store i64 %11865, i64* %PC.i4
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11867 = load i64, i64* %11866, align 8
  %11868 = add i64 %11867, 8
  %11869 = inttoptr i64 %11867 to i64*
  %11870 = load i64, i64* %11869
  store i64 %11870, i64* %R15.i, align 8
  store i64 %11868, i64* %11866, align 8
  store %struct.Memory* %loadMem_4a9d9a, %struct.Memory** %MEMORY
  %loadMem_4a9d9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11872 = getelementptr inbounds %struct.GPR, %struct.GPR* %11871, i32 0, i32 33
  %11873 = getelementptr inbounds %struct.Reg, %struct.Reg* %11872, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11873 to i64*
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11875 = getelementptr inbounds %struct.GPR, %struct.GPR* %11874, i32 0, i32 15
  %11876 = getelementptr inbounds %struct.Reg, %struct.Reg* %11875, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11876 to i64*
  %11877 = load i64, i64* %PC.i2
  %11878 = add i64 %11877, 1
  store i64 %11878, i64* %PC.i2
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11880 = load i64, i64* %11879, align 8
  %11881 = add i64 %11880, 8
  %11882 = inttoptr i64 %11880 to i64*
  %11883 = load i64, i64* %11882
  store i64 %11883, i64* %RBP.i3, align 8
  store i64 %11881, i64* %11879, align 8
  store %struct.Memory* %loadMem_4a9d9c, %struct.Memory** %MEMORY
  %loadMem_4a9d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11885 = getelementptr inbounds %struct.GPR, %struct.GPR* %11884, i32 0, i32 33
  %11886 = getelementptr inbounds %struct.Reg, %struct.Reg* %11885, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11886 to i64*
  %11887 = load i64, i64* %PC.i1
  %11888 = add i64 %11887, 1
  store i64 %11888, i64* %PC.i1
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11891 = load i64, i64* %11890, align 8
  %11892 = inttoptr i64 %11891 to i64*
  %11893 = load i64, i64* %11892
  store i64 %11893, i64* %11889, align 8
  %11894 = add i64 %11891, 8
  store i64 %11894, i64* %11890, align 8
  store %struct.Memory* %loadMem_4a9d9d, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4a9d9d
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x1c28___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 7208
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 7208
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 7208, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x23___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 35, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1b90___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 7056, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d___r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x1bd0__rbp____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__r10d___r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %11
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %9, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = and i32 %17, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %17, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %17, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6e4___r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R14D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 1764, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d___r15d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R15D to i64*
  %13 = load i32, i32* %R14D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2a___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 42, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 42
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 42, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1bd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1bd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7128
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r15___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 31
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R15 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R15
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x1c00__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7168
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rbx__MINUS0x1c08__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7176
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1c08__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bf8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1c00__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xaf3458(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4a92ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x588b0b___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x588b0b_type* @G__0x588b0b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x99c0a0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x99c0a0_type* @G_0x99c0a0 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c0c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3f__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 63
  %16 = icmp ult i32 %14, 63
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 63
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9367(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3f__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 63
  %16 = icmp ult i32 %14, 63
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 63
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a934e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x1bd0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1be8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x54___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 84, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1bec__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x24____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 36, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bec__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a930d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9353(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1be8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a92f6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1bd4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7144
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1bd4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9416(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x1c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1bd8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7148
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x24__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1bd8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a93fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x3f____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 63, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a93ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9402(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a937a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x30__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a94b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x20__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a94b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9497(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2d____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 45, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9456(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a949c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a943f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a94b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 4, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9554(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a954f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x24__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9536(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x7c____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 124, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a94f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a953b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a94d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9554(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 1, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a95f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x18__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a95f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x54__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 84
  %16 = icmp ult i32 %14, 84
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 84
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a95d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9596(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a95dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9571(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a95f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 8, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9754(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x20__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a96a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1c__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9689(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a963a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a968e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9612(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a974f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a974a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9731(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a96e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9736(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a96cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a974f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9754(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__0xaf3458(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %9 = sub i32 %8, 4
  %10 = icmp ult i32 %8, 4
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 4
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4a9882(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 20, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x40__MINUS0x1be8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 64
  %16 = icmp ult i32 %14, 64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9863(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 20, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x40__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 64
  %16 = icmp ult i32 %14, 64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9830(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1bd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 7124
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a97d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1bd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 7128
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x588897___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x588897_type* @G__0x588897 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9817(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x579d93___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x579d93_type* @G__0x579d93 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = sext i8 %21 to i64
  %23 = and i64 %22, 4294967295
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a981c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9783(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x586073___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x586073_type* @G__0x586073 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a976c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1bf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bf0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x8__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9932(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1bf0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_0x4e69c0___rcx_1____sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 5138880
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil__MINUS0x1bf1__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7153
  %15 = load i8, i8* %SIL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x1bf1__rbp____sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7153
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bd8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x4__rcx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RCX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = add i64 %17, %16
  %19 = load i8, i8* %SIL
  %20 = zext i8 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i8*
  store i8 %19, i8* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a988c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0xaf3458(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xaf3458_type* @G_0xaf3458 to i32*)
  %9 = sub i32 %8, 3
  %10 = icmp ult i32 %8, 3
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 3
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4a9a60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9a41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9a0e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a99b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a99f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a99fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9961(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a994a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1be4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7140
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1bdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7132
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xf__MINUS0x1be0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 15, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6e3__MINUS0x1bf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1763
  %16 = icmp ult i32 %14, 1763
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1763
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x1c2d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7213
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9aee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1be0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x1c2e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7214
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4a9ae2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1bdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9ae2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1be4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setg__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x1c2e__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7214
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x1c2d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7213
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x1c2d__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7213
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9b01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9d81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x54___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 84, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb8c050___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb8c050_type* @G__0xb8c050 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c34__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__edx__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7148
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2a__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 42
  %16 = icmp ult i32 %14, 42
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 42
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4a9b58(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x54___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 84
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 84
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 84, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffd6__MINUS0x1bec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 7148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -42
  %16 = icmp ult i32 %14, -42
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -42
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4a9b74(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x54___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 84, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 84
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 84, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1bec__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x20__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 32
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9bd7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1be0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0xfffffffd___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 -3, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1be0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x18__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9bf9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0xfffffffe___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 -2, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x24__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9c1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0xfffffffb___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 -5, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x1c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4a9c3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0xfffffff7___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 -9, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x588b2c___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x588b2c_type* @G__0x588b2c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1be8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x54___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 84, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1bec__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 7148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb___rax__rdx_1____sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 7
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RDX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  store i8 %22, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil____rax__rdx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 7
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RDX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = add i64 %17, %16
  %19 = load i8, i8* %SIL
  %20 = zext i8 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i8*
  store i8 %19, i8* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax__rdx_1____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = sext i8 %21 to i64
  %23 = and i64 %22, 4294967295
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.strchr_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 1
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i64 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %9, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %9, 63
  %28 = xor i64 %24, %27
  %29 = add i64 %28, %27
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9cb3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1be4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1be4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x588b35___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x588b35_type* @G__0x588b35 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1bf0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax__rcx_1____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = sext i8 %21 to i64
  %23 = and i64 %22, 4294967295
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4a9d68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4a9cfd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bdc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 7132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4a9d1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4a9d41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4a9d63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9d68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9d6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4a9a8e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  store i8 0, i8* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1c28___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 7208, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 7208
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 7208, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r15(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R15, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
