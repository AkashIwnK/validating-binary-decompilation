; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_455460.compute_connection_distances(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f840.findlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409930.dump_stack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_474e00.showboard(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45d150.print_connection_distances(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4141e0.find_origin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45d4c0.check_self_atari(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_46a930.attack_and_defend(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45d530.common_vulnerability(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f780.countlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f690.is_edge_vertex(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_414ab0.liberty_of_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4046f0.sgftreeAddComment(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x7ae438_type = type <{ [4 x i8] }>
@G_0x7ae438= global %G_0x7ae438_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0eec_type = type <{ [4 x i8] }>
@G_0xab0eec= global %G_0xab0eec_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0ef8_type = type <{ [8 x i8] }>
@G_0xab0ef8= global %G_0xab0ef8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xab0f28_type = type <{ [1 x i8] }>
@G_0xab0f28= global %G_0xab0f28_type <{ [1 x i8] c"\00" }>
%G__0x57f693_type = type <{ [8 x i8] }>
@G__0x57f693= global %G__0x57f693_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f6a3_type = type <{ [8 x i8] }>
@G__0x57f6a3= global %G__0x57f6a3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f6c1_type = type <{ [8 x i8] }>
@G__0x57f6c1= global %G__0x57f6c1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f6db_type = type <{ [8 x i8] }>
@G__0x57f6db= global %G__0x57f6db_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f6f4_type = type <{ [8 x i8] }>
@G__0x57f6f4= global %G__0x57f6f4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f718_type = type <{ [8 x i8] }>
@G__0x57f718= global %G__0x57f718_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f733_type = type <{ [8 x i8] }>
@G__0x57f733= global %G__0x57f733_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f770_type = type <{ [8 x i8] }>
@G__0x57f770= global %G__0x57f770_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f786_type = type <{ [8 x i8] }>
@G__0x57f786= global %G__0x57f786_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f7b3_type = type <{ [8 x i8] }>
@G__0x57f7b3= global %G__0x57f7b3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f7d8_type = type <{ [8 x i8] }>
@G__0x57f7d8= global %G__0x57f7d8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f7fd_type = type <{ [8 x i8] }>
@G__0x57f7fd= global %G__0x57f7fd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f81b_type = type <{ [8 x i8] }>
@G__0x57f81b= global %G__0x57f81b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f844_type = type <{ [8 x i8] }>
@G__0x57f844= global %G__0x57f844_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f888_type = type <{ [8 x i8] }>
@G__0x57f888= global %G__0x57f888_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f8c7_type = type <{ [8 x i8] }>
@G__0x57f8c7= global %G__0x57f8c7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f90b_type = type <{ [8 x i8] }>
@G__0x57f90b= global %G__0x57f90b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f930_type = type <{ [8 x i8] }>
@G__0x57f930= global %G__0x57f930_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f964_type = type <{ [8 x i8] }>
@G__0x57f964= global %G__0x57f964_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f975_type = type <{ [8 x i8] }>
@G__0x57f975= global %G__0x57f975_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f97f_type = type <{ [8 x i8] }>
@G__0x57f97f= global %G__0x57f97f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f983_type = type <{ [8 x i8] }>
@G__0x57f983= global %G__0x57f983_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f9a0_type = type <{ [8 x i8] }>
@G__0x57f9a0= global %G__0x57f9a0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x58898d_type = type <{ [8 x i8] }>
@G__0x58898d= global %G__0x58898d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @find_connection_moves(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .find_connection_moves:	 RIP: 453440	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 453440	 Bytes: 1
  %loadMem_453440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453440 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453440)
  store %struct.Memory* %call_453440, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 453441	 Bytes: 3
  %loadMem_453441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453441 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453441)
  store %struct.Memory* %call_453441, %struct.Memory** %MEMORY

  ; Code: pushq %r14	 RIP: 453444	 Bytes: 2
  %loadMem_453444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453444 = call %struct.Memory* @routine_pushq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453444)
  store %struct.Memory* %call_453444, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 453446	 Bytes: 1
  %loadMem_453446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453446 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453446)
  store %struct.Memory* %call_453446, %struct.Memory** %MEMORY

  ; Code: subq $0x5400, %rsp	 RIP: 453447	 Bytes: 7
  %loadMem_453447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453447 = call %struct.Memory* @routine_subq__0x5400___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453447)
  store %struct.Memory* %call_453447, %struct.Memory** %MEMORY

  ; Code: leaq -0x25c8(%rbp), %rax	 RIP: 45344e	 Bytes: 7
  %loadMem_45344e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45344e = call %struct.Memory* @routine_leaq_MINUS0x25c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45344e)
  store %struct.Memory* %call_45344e, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %r9d	 RIP: 453455	 Bytes: 6
  %loadMem_453455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453455 = call %struct.Memory* @routine_movl__0x3___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453455)
  store %struct.Memory* %call_453455, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x14(%rbp)	 RIP: 45345b	 Bytes: 3
  %loadMem_45345b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45345b = call %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45345b)
  store %struct.Memory* %call_45345b, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x18(%rbp)	 RIP: 45345e	 Bytes: 3
  %loadMem_45345e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45345e = call %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45345e)
  store %struct.Memory* %call_45345e, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c(%rbp)	 RIP: 453461	 Bytes: 3
  %loadMem_453461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453461 = call %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453461)
  store %struct.Memory* %call_453461, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x28(%rbp)	 RIP: 453464	 Bytes: 4
  %loadMem_453464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453464 = call %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453464)
  store %struct.Memory* %call_453464, %struct.Memory** %MEMORY

  ; Code: movq %r8, -0x30(%rbp)	 RIP: 453468	 Bytes: 4
  %loadMem_453468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453468 = call %struct.Memory* @routine_movq__r8__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453468)
  store %struct.Memory* %call_453468, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 45346c	 Bytes: 4
  %loadMem_45346c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45346c = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45346c)
  store %struct.Memory* %call_45346c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %edx	 RIP: 453470	 Bytes: 8
  %loadMem_453470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453470 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453470)
  store %struct.Memory* %call_453470, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x34(%rbp)	 RIP: 453478	 Bytes: 3
  %loadMem_453478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453478 = call %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453478)
  store %struct.Memory* %call_453478, %struct.Memory** %MEMORY

  ; Code: subl -0x34(%rbp), %r9d	 RIP: 45347b	 Bytes: 4
  %loadMem_45347b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45347b = call %struct.Memory* @routine_subl_MINUS0x34__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45347b)
  store %struct.Memory* %call_45347b, %struct.Memory** %MEMORY

  ; Code: movl %r9d, -0x38(%rbp)	 RIP: 45347f	 Bytes: 4
  %loadMem_45347f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45347f = call %struct.Memory* @routine_movl__r9d__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45347f)
  store %struct.Memory* %call_45347f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 453483	 Bytes: 3
  %loadMem_453483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453483 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453483)
  store %struct.Memory* %call_453483, %struct.Memory** %MEMORY

  ; Code: cmpl -0x34(%rbp), %edx	 RIP: 453486	 Bytes: 3
  %loadMem_453486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453486 = call %struct.Memory* @routine_cmpl_MINUS0x34__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453486)
  store %struct.Memory* %call_453486, %struct.Memory** %MEMORY

  ; Code: sete %r10b	 RIP: 453489	 Bytes: 4
  %loadMem_453489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453489 = call %struct.Memory* @routine_sete__r10b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453489)
  store %struct.Memory* %call_453489, %struct.Memory** %MEMORY

  ; Code: andb $0x1, %r10b	 RIP: 45348d	 Bytes: 4
  %loadMem_45348d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45348d = call %struct.Memory* @routine_andb__0x1___r10b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45348d)
  store %struct.Memory* %call_45348d, %struct.Memory** %MEMORY

  ; Code: movzbl %r10b, %edx	 RIP: 453491	 Bytes: 4
  %loadMem_453491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453491 = call %struct.Memory* @routine_movzbl__r10b___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453491)
  store %struct.Memory* %call_453491, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x3c(%rbp)	 RIP: 453495	 Bytes: 3
  %loadMem_453495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453495 = call %struct.Memory* @routine_movl__edx__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453495)
  store %struct.Memory* %call_453495, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5104(%rbp)	 RIP: 453498	 Bytes: 10
  %loadMem_453498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453498 = call %struct.Memory* @routine_movl__0x0__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453498)
  store %struct.Memory* %call_453498, %struct.Memory** %MEMORY

  ; Code: movq 0xab0ef8, %rcx	 RIP: 4534a2	 Bytes: 8
  %loadMem_4534a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534a2 = call %struct.Memory* @routine_movq_0xab0ef8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534a2)
  store %struct.Memory* %call_4534a2, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x5110(%rbp)	 RIP: 4534aa	 Bytes: 7
  %loadMem_4534aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534aa = call %struct.Memory* @routine_movq__rcx__MINUS0x5110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534aa)
  store %struct.Memory* %call_4534aa, %struct.Memory** %MEMORY

  ; Code: movl 0xab0eec, %edx	 RIP: 4534b1	 Bytes: 7
  %loadMem_4534b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534b1 = call %struct.Memory* @routine_movl_0xab0eec___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534b1)
  store %struct.Memory* %call_4534b1, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5114(%rbp)	 RIP: 4534b8	 Bytes: 6
  %loadMem_4534b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534b8 = call %struct.Memory* @routine_movl__edx__MINUS0x5114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534b8)
  store %struct.Memory* %call_4534b8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5118(%rbp)	 RIP: 4534be	 Bytes: 10
  %loadMem_4534be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534be = call %struct.Memory* @routine_movl__0x0__MINUS0x5118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534be)
  store %struct.Memory* %call_4534be, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x511c(%rbp)	 RIP: 4534c8	 Bytes: 10
  %loadMem_4534c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534c8 = call %struct.Memory* @routine_movl__0x0__MINUS0x511c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534c8)
  store %struct.Memory* %call_4534c8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5120(%rbp)	 RIP: 4534d2	 Bytes: 10
  %loadMem_4534d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534d2 = call %struct.Memory* @routine_movl__0x0__MINUS0x5120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534d2)
  store %struct.Memory* %call_4534d2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5124(%rbp)	 RIP: 4534dc	 Bytes: 10
  %loadMem_4534dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534dc = call %struct.Memory* @routine_movl__0x0__MINUS0x5124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534dc)
  store %struct.Memory* %call_4534dc, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0xab0ef8	 RIP: 4534e6	 Bytes: 12
  %loadMem_4534e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534e6 = call %struct.Memory* @routine_movq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534e6)
  store %struct.Memory* %call_4534e6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xab0eec	 RIP: 4534f2	 Bytes: 11
  %loadMem_4534f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534f2 = call %struct.Memory* @routine_movl__0x0__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534f2)
  store %struct.Memory* %call_4534f2, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %edi	 RIP: 4534fd	 Bytes: 3
  %loadMem_4534fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4534fd = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4534fd)
  store %struct.Memory* %call_4534fd, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 453500	 Bytes: 3
  %loadMem_453500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453500 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453500)
  store %struct.Memory* %call_453500, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 453503	 Bytes: 3
  %loadMem_453503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453503 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453503)
  store %struct.Memory* %call_453503, %struct.Memory** %MEMORY

  ; Code: callq .compute_connection_distances	 RIP: 453506	 Bytes: 5
  %loadMem1_453506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453506 = call %struct.Memory* @routine_callq_.compute_connection_distances(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453506, i64 8026, i64 5, i64 5)
  store %struct.Memory* %call1_453506, %struct.Memory** %MEMORY

  %loadMem2_453506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453506 = load i64, i64* %3
  %call2_453506 = call %struct.Memory* @sub_455460.compute_connection_distances(%struct.State* %0, i64  %loadPC_453506, %struct.Memory* %loadMem2_453506)
  store %struct.Memory* %call2_453506, %struct.Memory** %MEMORY

  ; Code: leaq -0x4b50(%rbp), %rdx	 RIP: 45350b	 Bytes: 7
  %loadMem_45350b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45350b = call %struct.Memory* @routine_leaq_MINUS0x4b50__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45350b)
  store %struct.Memory* %call_45350b, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 453512	 Bytes: 3
  %loadMem_453512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453512 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453512)
  store %struct.Memory* %call_453512, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 453515	 Bytes: 3
  %loadMem_453515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453515 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453515)
  store %struct.Memory* %call_453515, %struct.Memory** %MEMORY

  ; Code: callq .compute_connection_distances	 RIP: 453518	 Bytes: 5
  %loadMem1_453518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453518 = call %struct.Memory* @routine_callq_.compute_connection_distances(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453518, i64 8008, i64 5, i64 5)
  store %struct.Memory* %call1_453518, %struct.Memory** %MEMORY

  %loadMem2_453518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453518 = load i64, i64* %3
  %call2_453518 = call %struct.Memory* @sub_455460.compute_connection_distances(%struct.State* %0, i64  %loadPC_453518, %struct.Memory* %loadMem2_453518)
  store %struct.Memory* %call2_453518, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %esi	 RIP: 45351d	 Bytes: 5
  %loadMem_45351d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45351d = call %struct.Memory* @routine_movl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45351d)
  store %struct.Memory* %call_45351d, %struct.Memory** %MEMORY

  ; Code: leaq -0x5130(%rbp), %rdx	 RIP: 453522	 Bytes: 7
  %loadMem_453522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453522 = call %struct.Memory* @routine_leaq_MINUS0x5130__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453522)
  store %struct.Memory* %call_453522, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %edi	 RIP: 453529	 Bytes: 3
  %loadMem_453529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453529 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453529)
  store %struct.Memory* %call_453529, %struct.Memory** %MEMORY

  ; Code: callq .findlib	 RIP: 45352c	 Bytes: 5
  %loadMem1_45352c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45352c = call %struct.Memory* @routine_callq_.findlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45352c, i64 -277740, i64 5, i64 5)
  store %struct.Memory* %call1_45352c, %struct.Memory** %MEMORY

  %loadMem2_45352c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45352c = load i64, i64* %3
  %call2_45352c = call %struct.Memory* @sub_40f840.findlib(%struct.State* %0, i64  %loadPC_45352c, %struct.Memory* %loadMem2_45352c)
  store %struct.Memory* %call2_45352c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 453531	 Bytes: 3
  %loadMem_453531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453531 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453531)
  store %struct.Memory* %call_453531, %struct.Memory** %MEMORY

  ; Code: jne .L_453590	 RIP: 453534	 Bytes: 6
  %loadMem_453534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453534 = call %struct.Memory* @routine_jne_.L_453590(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453534, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_453534, %struct.Memory** %MEMORY

  %loadBr_453534 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453534 = icmp eq i8 %loadBr_453534, 1
  br i1 %cmpBr_453534, label %block_.L_453590, label %block_45353a

block_45353a:
  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 45353a	 Bytes: 7
  %loadMem_45353a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45353a = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45353a)
  store %struct.Memory* %call_45353a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x25c8(%rbp,%rax,4)	 RIP: 453541	 Bytes: 11
  %loadMem_453541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453541 = call %struct.Memory* @routine_movl__0x0__MINUS0x25c8__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453541)
  store %struct.Memory* %call_453541, %struct.Memory** %MEMORY

  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 45354c	 Bytes: 7
  %loadMem_45354c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45354c = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45354c)
  store %struct.Memory* %call_45354c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1948(%rbp,%rax,4)	 RIP: 453553	 Bytes: 11
  %loadMem_453553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453553 = call %struct.Memory* @routine_movl__0x0__MINUS0x1948__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453553)
  store %struct.Memory* %call_453553, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rax	 RIP: 45355e	 Bytes: 4
  %loadMem_45355e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45355e = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45355e)
  store %struct.Memory* %call_45355e, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 453562	 Bytes: 7
  %loadMem_453562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453562 = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453562)
  store %struct.Memory* %call_453562, %struct.Memory** %MEMORY

  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 453569	 Bytes: 7
  %loadMem_453569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453569 = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453569)
  store %struct.Memory* %call_453569, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x4b50(%rbp,%rax,4)	 RIP: 453570	 Bytes: 7
  %loadMem_453570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453570 = call %struct.Memory* @routine_movl__ecx__MINUS0x4b50__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453570)
  store %struct.Memory* %call_453570, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rax	 RIP: 453577	 Bytes: 4
  %loadMem_453577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453577 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453577)
  store %struct.Memory* %call_453577, %struct.Memory** %MEMORY

  ; Code: movl -0x1948(%rbp,%rax,4), %ecx	 RIP: 45357b	 Bytes: 7
  %loadMem_45357b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45357b = call %struct.Memory* @routine_movl_MINUS0x1948__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45357b)
  store %struct.Memory* %call_45357b, %struct.Memory** %MEMORY

  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 453582	 Bytes: 7
  %loadMem_453582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453582 = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453582)
  store %struct.Memory* %call_453582, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3ed0(%rbp,%rax,4)	 RIP: 453589	 Bytes: 7
  %loadMem_453589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453589 = call %struct.Memory* @routine_movl__ecx__MINUS0x3ed0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453589)
  store %struct.Memory* %call_453589, %struct.Memory** %MEMORY

  ; Code: .L_453590:	 RIP: 453590	 Bytes: 0
  br label %block_.L_453590
block_.L_453590:

  ; Code: movl $0x1, %esi	 RIP: 453590	 Bytes: 5
  %loadMem_453590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453590 = call %struct.Memory* @routine_movl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453590)
  store %struct.Memory* %call_453590, %struct.Memory** %MEMORY

  ; Code: leaq -0x5130(%rbp), %rdx	 RIP: 453595	 Bytes: 7
  %loadMem_453595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453595 = call %struct.Memory* @routine_leaq_MINUS0x5130__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453595)
  store %struct.Memory* %call_453595, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edi	 RIP: 45359c	 Bytes: 3
  %loadMem_45359c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45359c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45359c)
  store %struct.Memory* %call_45359c, %struct.Memory** %MEMORY

  ; Code: callq .findlib	 RIP: 45359f	 Bytes: 5
  %loadMem1_45359f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45359f = call %struct.Memory* @routine_callq_.findlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45359f, i64 -277855, i64 5, i64 5)
  store %struct.Memory* %call1_45359f, %struct.Memory** %MEMORY

  %loadMem2_45359f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45359f = load i64, i64* %3
  %call2_45359f = call %struct.Memory* @sub_40f840.findlib(%struct.State* %0, i64  %loadPC_45359f, %struct.Memory* %loadMem2_45359f)
  store %struct.Memory* %call2_45359f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 4535a4	 Bytes: 3
  %loadMem_4535a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535a4 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535a4)
  store %struct.Memory* %call_4535a4, %struct.Memory** %MEMORY

  ; Code: jne .L_4535d8	 RIP: 4535a7	 Bytes: 6
  %loadMem_4535a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535a7 = call %struct.Memory* @routine_jne_.L_4535d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535a7, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_4535a7, %struct.Memory** %MEMORY

  %loadBr_4535a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4535a7 = icmp eq i8 %loadBr_4535a7, 1
  br i1 %cmpBr_4535a7, label %block_.L_4535d8, label %block_4535ad

block_4535ad:
  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 4535ad	 Bytes: 7
  %loadMem_4535ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535ad = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535ad)
  store %struct.Memory* %call_4535ad, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4b50(%rbp,%rax,4)	 RIP: 4535b4	 Bytes: 11
  %loadMem_4535b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535b4 = call %struct.Memory* @routine_movl__0x0__MINUS0x4b50__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535b4)
  store %struct.Memory* %call_4535b4, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 4535bf	 Bytes: 4
  %loadMem_4535bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535bf = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535bf)
  store %struct.Memory* %call_4535bf, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 4535c3	 Bytes: 7
  %loadMem_4535c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535c3 = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535c3)
  store %struct.Memory* %call_4535c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x5130(%rbp), %rax	 RIP: 4535ca	 Bytes: 7
  %loadMem_4535ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535ca = call %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535ca)
  store %struct.Memory* %call_4535ca, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x25c8(%rbp,%rax,4)	 RIP: 4535d1	 Bytes: 7
  %loadMem_4535d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535d1 = call %struct.Memory* @routine_movl__ecx__MINUS0x25c8__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535d1)
  store %struct.Memory* %call_4535d1, %struct.Memory** %MEMORY

  ; Code: .L_4535d8:	 RIP: 4535d8	 Bytes: 0
  br label %block_.L_4535d8
block_.L_4535d8:

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 4535d8	 Bytes: 4
  %loadMem_4535d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535d8 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535d8)
  store %struct.Memory* %call_4535d8, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 4535dc	 Bytes: 7
  %loadMem_4535dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535dc = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535dc)
  store %struct.Memory* %call_4535dc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5128(%rbp)	 RIP: 4535e3	 Bytes: 6
  %loadMem_4535e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535e3 = call %struct.Memory* @routine_movl__ecx__MINUS0x5128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535e3)
  store %struct.Memory* %call_4535e3, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rax	 RIP: 4535e9	 Bytes: 4
  %loadMem_4535e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535e9 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535e9)
  store %struct.Memory* %call_4535e9, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 4535ed	 Bytes: 7
  %loadMem_4535ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535ed = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535ed)
  store %struct.Memory* %call_4535ed, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x512c(%rbp)	 RIP: 4535f4	 Bytes: 6
  %loadMem_4535f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535f4 = call %struct.Memory* @routine_movl__ecx__MINUS0x512c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535f4)
  store %struct.Memory* %call_4535f4, %struct.Memory** %MEMORY

  ; Code: movl -0x5128(%rbp), %ecx	 RIP: 4535fa	 Bytes: 6
  %loadMem_4535fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4535fa = call %struct.Memory* @routine_movl_MINUS0x5128__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4535fa)
  store %struct.Memory* %call_4535fa, %struct.Memory** %MEMORY

  ; Code: cmpl -0x512c(%rbp), %ecx	 RIP: 453600	 Bytes: 6
  %loadMem_453600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453600 = call %struct.Memory* @routine_cmpl_MINUS0x512c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453600)
  store %struct.Memory* %call_453600, %struct.Memory** %MEMORY

  ; Code: jge .L_45361d	 RIP: 453606	 Bytes: 6
  %loadMem_453606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453606 = call %struct.Memory* @routine_jge_.L_45361d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453606, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_453606, %struct.Memory** %MEMORY

  %loadBr_453606 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453606 = icmp eq i8 %loadBr_453606, 1
  br i1 %cmpBr_453606, label %block_.L_45361d, label %block_45360c

block_45360c:
  ; Code: movl -0x5128(%rbp), %eax	 RIP: 45360c	 Bytes: 6
  %loadMem_45360c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45360c = call %struct.Memory* @routine_movl_MINUS0x5128__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45360c)
  store %struct.Memory* %call_45360c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53a0(%rbp)	 RIP: 453612	 Bytes: 6
  %loadMem_453612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453612 = call %struct.Memory* @routine_movl__eax__MINUS0x53a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453612)
  store %struct.Memory* %call_453612, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453629	 RIP: 453618	 Bytes: 5
  %loadMem_453618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453618 = call %struct.Memory* @routine_jmpq_.L_453629(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453618, i64 17, i64 5)
  store %struct.Memory* %call_453618, %struct.Memory** %MEMORY

  br label %block_.L_453629

  ; Code: .L_45361d:	 RIP: 45361d	 Bytes: 0
block_.L_45361d:

  ; Code: movl -0x512c(%rbp), %eax	 RIP: 45361d	 Bytes: 6
  %loadMem_45361d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45361d = call %struct.Memory* @routine_movl_MINUS0x512c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45361d)
  store %struct.Memory* %call_45361d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53a0(%rbp)	 RIP: 453623	 Bytes: 6
  %loadMem_453623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453623 = call %struct.Memory* @routine_movl__eax__MINUS0x53a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453623)
  store %struct.Memory* %call_453623, %struct.Memory** %MEMORY

  ; Code: .L_453629:	 RIP: 453629	 Bytes: 0
  br label %block_.L_453629
block_.L_453629:

  ; Code: movl -0x53a0(%rbp), %eax	 RIP: 453629	 Bytes: 6
  %loadMem_453629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453629 = call %struct.Memory* @routine_movl_MINUS0x53a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453629)
  store %struct.Memory* %call_453629, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rcx	 RIP: 45362f	 Bytes: 4
  %loadMem_45362f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45362f = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45362f)
  store %struct.Memory* %call_45362f, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 453633	 Bytes: 2
  %loadMem_453633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453633 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453633)
  store %struct.Memory* %call_453633, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453635	 Bytes: 8
  %loadMem_453635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453635 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453635)
  store %struct.Memory* %call_453635, %struct.Memory** %MEMORY

  ; Code: jle .L_453684	 RIP: 45363d	 Bytes: 6
  %loadMem_45363d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45363d = call %struct.Memory* @routine_jle_.L_453684(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45363d, i8* %BRANCH_TAKEN, i64 71, i64 6, i64 6)
  store %struct.Memory* %call_45363d, %struct.Memory** %MEMORY

  %loadBr_45363d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45363d = icmp eq i8 %loadBr_45363d, 1
  br i1 %cmpBr_45363d, label %block_.L_453684, label %block_453643

block_453643:
  ; Code: movq $0x57f693, %rdi	 RIP: 453643	 Bytes: 10
  %loadMem_453643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453643 = call %struct.Memory* @routine_movq__0x57f693___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453643)
  store %struct.Memory* %call_453643, %struct.Memory** %MEMORY

  ; Code: movl -0x5114(%rbp), %esi	 RIP: 45364d	 Bytes: 6
  %loadMem_45364d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45364d = call %struct.Memory* @routine_movl_MINUS0x5114__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45364d)
  store %struct.Memory* %call_45364d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453653	 Bytes: 2
  %loadMem_453653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453653 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453653)
  store %struct.Memory* %call_453653, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453655	 Bytes: 5
  %loadMem1_453655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453655 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453655, i64 -6309, i64 5, i64 5)
  store %struct.Memory* %call1_453655, %struct.Memory** %MEMORY

  %loadMem2_453655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453655 = load i64, i64* %3
  %call2_453655 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453655, %struct.Memory* %loadMem2_453655)
  store %struct.Memory* %call2_453655, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53a4(%rbp)	 RIP: 45365a	 Bytes: 6
  %loadMem_45365a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45365a = call %struct.Memory* @routine_movl__eax__MINUS0x53a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45365a)
  store %struct.Memory* %call_45365a, %struct.Memory** %MEMORY

  ; Code: callq .dump_stack	 RIP: 453660	 Bytes: 5
  %loadMem1_453660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453660 = call %struct.Memory* @routine_callq_.dump_stack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453660, i64 -302384, i64 5, i64 5)
  store %struct.Memory* %call1_453660, %struct.Memory** %MEMORY

  %loadMem2_453660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453660 = load i64, i64* %3
  %call2_453660 = call %struct.Memory* @sub_409930.dump_stack(%struct.State* %0, i64  %loadPC_453660, %struct.Memory* %loadMem2_453660)
  store %struct.Memory* %call2_453660, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 453665	 Bytes: 2
  %loadMem_453665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453665 = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453665)
  store %struct.Memory* %call_453665, %struct.Memory** %MEMORY

  ; Code: callq .showboard	 RIP: 453667	 Bytes: 5
  %loadMem1_453667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453667 = call %struct.Memory* @routine_callq_.showboard(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453667, i64 137113, i64 5, i64 5)
  store %struct.Memory* %call1_453667, %struct.Memory** %MEMORY

  %loadMem2_453667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453667 = load i64, i64* %3
  %call2_453667 = call %struct.Memory* @sub_474e00.showboard(%struct.State* %0, i64  %loadPC_453667, %struct.Memory* %loadMem2_453667)
  store %struct.Memory* %call2_453667, %struct.Memory** %MEMORY

  ; Code: leaq -0x25c8(%rbp), %rdi	 RIP: 45366c	 Bytes: 7
  %loadMem_45366c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45366c = call %struct.Memory* @routine_leaq_MINUS0x25c8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45366c)
  store %struct.Memory* %call_45366c, %struct.Memory** %MEMORY

  ; Code: callq .print_connection_distances	 RIP: 453673	 Bytes: 5
  %loadMem1_453673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453673 = call %struct.Memory* @routine_callq_.print_connection_distances(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453673, i64 39645, i64 5, i64 5)
  store %struct.Memory* %call1_453673, %struct.Memory** %MEMORY

  %loadMem2_453673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453673 = load i64, i64* %3
  %call2_453673 = call %struct.Memory* @sub_45d150.print_connection_distances(%struct.State* %0, i64  %loadPC_453673, %struct.Memory* %loadMem2_453673)
  store %struct.Memory* %call2_453673, %struct.Memory** %MEMORY

  ; Code: leaq -0x4b50(%rbp), %rdi	 RIP: 453678	 Bytes: 7
  %loadMem_453678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453678 = call %struct.Memory* @routine_leaq_MINUS0x4b50__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453678)
  store %struct.Memory* %call_453678, %struct.Memory** %MEMORY

  ; Code: callq .print_connection_distances	 RIP: 45367f	 Bytes: 5
  %loadMem1_45367f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45367f = call %struct.Memory* @routine_callq_.print_connection_distances(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45367f, i64 39633, i64 5, i64 5)
  store %struct.Memory* %call1_45367f, %struct.Memory** %MEMORY

  %loadMem2_45367f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45367f = load i64, i64* %3
  %call2_45367f = call %struct.Memory* @sub_45d150.print_connection_distances(%struct.State* %0, i64  %loadPC_45367f, %struct.Memory* %loadMem2_45367f)
  store %struct.Memory* %call2_45367f, %struct.Memory** %MEMORY

  ; Code: .L_453684:	 RIP: 453684	 Bytes: 0
  br label %block_.L_453684
block_.L_453684:

  ; Code: movl $0x0, -0x40(%rbp)	 RIP: 453684	 Bytes: 7
  %loadMem_453684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453684 = call %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453684)
  store %struct.Memory* %call_453684, %struct.Memory** %MEMORY

  ; Code: .L_45368b:	 RIP: 45368b	 Bytes: 0
  br label %block_.L_45368b
block_.L_45368b:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 45368b	 Bytes: 3
  %loadMem_45368b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45368b = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45368b)
  store %struct.Memory* %call_45368b, %struct.Memory** %MEMORY

  ; Code: cmpl -0x44(%rbp), %eax	 RIP: 45368e	 Bytes: 3
  %loadMem_45368e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45368e = call %struct.Memory* @routine_cmpl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45368e)
  store %struct.Memory* %call_45368e, %struct.Memory** %MEMORY

  ; Code: jge .L_45419b	 RIP: 453691	 Bytes: 6
  %loadMem_453691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453691 = call %struct.Memory* @routine_jge_.L_45419b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453691, i8* %BRANCH_TAKEN, i64 2826, i64 6, i64 6)
  store %struct.Memory* %call_453691, %struct.Memory** %MEMORY

  %loadBr_453691 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453691 = icmp eq i8 %loadBr_453691, 1
  br i1 %cmpBr_453691, label %block_.L_45419b, label %block_453697

block_453697:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 453697	 Bytes: 4
  %loadMem_453697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453697 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453697)
  store %struct.Memory* %call_453697, %struct.Memory** %MEMORY

  ; Code: movl -0x688(%rbp,%rax,4), %ecx	 RIP: 45369b	 Bytes: 7
  %loadMem_45369b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45369b = call %struct.Memory* @routine_movl_MINUS0x688__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45369b)
  store %struct.Memory* %call_45369b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5140(%rbp)	 RIP: 4536a2	 Bytes: 6
  %loadMem_4536a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536a2 = call %struct.Memory* @routine_movl__ecx__MINUS0x5140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536a2)
  store %struct.Memory* %call_4536a2, %struct.Memory** %MEMORY

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4536a8	 Bytes: 7
  %loadMem_4536a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536a8 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536a8)
  store %struct.Memory* %call_4536a8, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 4536af	 Bytes: 7
  %loadMem_4536af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536af = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536af)
  store %struct.Memory* %call_4536af, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5144(%rbp)	 RIP: 4536b6	 Bytes: 6
  %loadMem_4536b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536b6 = call %struct.Memory* @routine_movl__ecx__MINUS0x5144__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536b6)
  store %struct.Memory* %call_4536b6, %struct.Memory** %MEMORY

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4536bc	 Bytes: 7
  %loadMem_4536bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536bc = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536bc)
  store %struct.Memory* %call_4536bc, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp,%rax,4), %ecx	 RIP: 4536c3	 Bytes: 7
  %loadMem_4536c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536c3 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536c3)
  store %struct.Memory* %call_4536c3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5148(%rbp)	 RIP: 4536ca	 Bytes: 6
  %loadMem_4536ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536ca = call %struct.Memory* @routine_movl__ecx__MINUS0x5148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536ca)
  store %struct.Memory* %call_4536ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4536d0	 Bytes: 7
  %loadMem_4536d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536d0 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536d0)
  store %struct.Memory* %call_4536d0, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 4536d7	 Bytes: 7
  %loadMem_4536d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536d7 = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536d7)
  store %struct.Memory* %call_4536d7, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x514c(%rbp)	 RIP: 4536de	 Bytes: 6
  %loadMem_4536de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536de = call %struct.Memory* @routine_movl__ecx__MINUS0x514c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536de)
  store %struct.Memory* %call_4536de, %struct.Memory** %MEMORY

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4536e4	 Bytes: 7
  %loadMem_4536e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536e4 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536e4)
  store %struct.Memory* %call_4536e4, %struct.Memory** %MEMORY

  ; Code: movl -0x4510(%rbp,%rax,4), %ecx	 RIP: 4536eb	 Bytes: 7
  %loadMem_4536eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536eb = call %struct.Memory* @routine_movl_MINUS0x4510__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536eb)
  store %struct.Memory* %call_4536eb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5150(%rbp)	 RIP: 4536f2	 Bytes: 6
  %loadMem_4536f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536f2 = call %struct.Memory* @routine_movl__ecx__MINUS0x5150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536f2)
  store %struct.Memory* %call_4536f2, %struct.Memory** %MEMORY

  ; Code: movl -0x5144(%rbp), %ecx	 RIP: 4536f8	 Bytes: 6
  %loadMem_4536f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536f8 = call %struct.Memory* @routine_movl_MINUS0x5144__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536f8)
  store %struct.Memory* %call_4536f8, %struct.Memory** %MEMORY

  ; Code: subl -0x5148(%rbp), %ecx	 RIP: 4536fe	 Bytes: 6
  %loadMem_4536fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4536fe = call %struct.Memory* @routine_subl_MINUS0x5148__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4536fe)
  store %struct.Memory* %call_4536fe, %struct.Memory** %MEMORY

  ; Code: addl -0x514c(%rbp), %ecx	 RIP: 453704	 Bytes: 6
  %loadMem_453704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453704 = call %struct.Memory* @routine_addl_MINUS0x514c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453704)
  store %struct.Memory* %call_453704, %struct.Memory** %MEMORY

  ; Code: subl -0x5150(%rbp), %ecx	 RIP: 45370a	 Bytes: 6
  %loadMem_45370a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45370a = call %struct.Memory* @routine_subl_MINUS0x5150__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45370a)
  store %struct.Memory* %call_45370a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9c4, %ecx	 RIP: 453710	 Bytes: 6
  %loadMem_453710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453710 = call %struct.Memory* @routine_cmpl__0x9c4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453710)
  store %struct.Memory* %call_453710, %struct.Memory** %MEMORY

  ; Code: jg .L_453750	 RIP: 453716	 Bytes: 6
  %loadMem_453716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453716 = call %struct.Memory* @routine_jg_.L_453750(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453716, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_453716, %struct.Memory** %MEMORY

  %loadBr_453716 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453716 = icmp eq i8 %loadBr_453716, 1
  br i1 %cmpBr_453716, label %block_.L_453750, label %block_45371c

block_45371c:
  ; Code: movl -0x5144(%rbp), %eax	 RIP: 45371c	 Bytes: 6
  %loadMem_45371c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45371c = call %struct.Memory* @routine_movl_MINUS0x5144__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45371c)
  store %struct.Memory* %call_45371c, %struct.Memory** %MEMORY

  ; Code: movl -0x5128(%rbp), %ecx	 RIP: 453722	 Bytes: 6
  %loadMem_453722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453722 = call %struct.Memory* @routine_movl_MINUS0x5128__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453722)
  store %struct.Memory* %call_453722, %struct.Memory** %MEMORY

  ; Code: addl $0xc8, %ecx	 RIP: 453728	 Bytes: 6
  %loadMem_453728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453728 = call %struct.Memory* @routine_addl__0xc8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453728)
  store %struct.Memory* %call_453728, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 45372e	 Bytes: 2
  %loadMem_45372e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45372e = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45372e)
  store %struct.Memory* %call_45372e, %struct.Memory** %MEMORY

  ; Code: jg .L_453750	 RIP: 453730	 Bytes: 6
  %loadMem_453730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453730 = call %struct.Memory* @routine_jg_.L_453750(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453730, i8* %BRANCH_TAKEN, i64 32, i64 6, i64 6)
  store %struct.Memory* %call_453730, %struct.Memory** %MEMORY

  %loadBr_453730 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453730 = icmp eq i8 %loadBr_453730, 1
  br i1 %cmpBr_453730, label %block_.L_453750, label %block_453736

block_453736:
  ; Code: movl -0x514c(%rbp), %eax	 RIP: 453736	 Bytes: 6
  %loadMem_453736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453736 = call %struct.Memory* @routine_movl_MINUS0x514c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453736)
  store %struct.Memory* %call_453736, %struct.Memory** %MEMORY

  ; Code: movl -0x512c(%rbp), %ecx	 RIP: 45373c	 Bytes: 6
  %loadMem_45373c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45373c = call %struct.Memory* @routine_movl_MINUS0x512c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45373c)
  store %struct.Memory* %call_45373c, %struct.Memory** %MEMORY

  ; Code: addl $0xc8, %ecx	 RIP: 453742	 Bytes: 6
  %loadMem_453742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453742 = call %struct.Memory* @routine_addl__0xc8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453742)
  store %struct.Memory* %call_453742, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 453748	 Bytes: 2
  %loadMem_453748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453748 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453748)
  store %struct.Memory* %call_453748, %struct.Memory** %MEMORY

  ; Code: jle .L_453755	 RIP: 45374a	 Bytes: 6
  %loadMem_45374a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45374a = call %struct.Memory* @routine_jle_.L_453755(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45374a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_45374a, %struct.Memory** %MEMORY

  %loadBr_45374a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45374a = icmp eq i8 %loadBr_45374a, 1
  br i1 %cmpBr_45374a, label %block_.L_453755, label %block_.L_453750

  ; Code: .L_453750:	 RIP: 453750	 Bytes: 0
block_.L_453750:

  ; Code: jmpq .L_45418d	 RIP: 453750	 Bytes: 5
  %loadMem_453750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453750 = call %struct.Memory* @routine_jmpq_.L_45418d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453750, i64 2621, i64 5)
  store %struct.Memory* %call_453750, %struct.Memory** %MEMORY

  br label %block_.L_45418d

  ; Code: .L_453755:	 RIP: 453755	 Bytes: 0
block_.L_453755:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453755	 Bytes: 7
  %loadMem_453755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453755 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453755)
  store %struct.Memory* %call_453755, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 45375c	 Bytes: 8
  %loadMem_45375c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45375c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45375c)
  store %struct.Memory* %call_45375c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 453764	 Bytes: 3
  %loadMem_453764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453764 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453764)
  store %struct.Memory* %call_453764, %struct.Memory** %MEMORY

  ; Code: je .L_453785	 RIP: 453767	 Bytes: 6
  %loadMem_453767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453767 = call %struct.Memory* @routine_je_.L_453785(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453767, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_453767, %struct.Memory** %MEMORY

  %loadBr_453767 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453767 = icmp eq i8 %loadBr_453767, 1
  br i1 %cmpBr_453767, label %block_.L_453785, label %block_45376d

block_45376d:
  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 45376d	 Bytes: 7
  %loadMem_45376d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45376d = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45376d)
  store %struct.Memory* %call_45376d, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 453774	 Bytes: 8
  %loadMem_453774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453774 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453774)
  store %struct.Memory* %call_453774, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 45377c	 Bytes: 3
  %loadMem_45377c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45377c = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45377c)
  store %struct.Memory* %call_45377c, %struct.Memory** %MEMORY

  ; Code: jne .L_4537a1	 RIP: 45377f	 Bytes: 6
  %loadMem_45377f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45377f = call %struct.Memory* @routine_jne_.L_4537a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45377f, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_45377f, %struct.Memory** %MEMORY

  %loadBr_45377f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45377f = icmp eq i8 %loadBr_45377f, 1
  br i1 %cmpBr_45377f, label %block_.L_4537a1, label %block_.L_453785

  ; Code: .L_453785:	 RIP: 453785	 Bytes: 0
block_.L_453785:

  ; Code: movl -0x5140(%rbp), %edi	 RIP: 453785	 Bytes: 6
  %loadMem_453785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453785 = call %struct.Memory* @routine_movl_MINUS0x5140__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453785)
  store %struct.Memory* %call_453785, %struct.Memory** %MEMORY

  ; Code: callq .find_origin	 RIP: 45378b	 Bytes: 5
  %loadMem1_45378b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45378b = call %struct.Memory* @routine_callq_.find_origin(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45378b, i64 -259499, i64 5, i64 5)
  store %struct.Memory* %call1_45378b, %struct.Memory** %MEMORY

  %loadMem2_45378b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45378b = load i64, i64* %3
  %call2_45378b = call %struct.Memory* @sub_4141e0.find_origin(%struct.State* %0, i64  %loadPC_45378b, %struct.Memory* %loadMem2_45378b)
  store %struct.Memory* %call2_45378b, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5140(%rbp), %eax	 RIP: 453790	 Bytes: 6
  %loadMem_453790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453790 = call %struct.Memory* @routine_cmpl_MINUS0x5140__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453790)
  store %struct.Memory* %call_453790, %struct.Memory** %MEMORY

  ; Code: je .L_4537a1	 RIP: 453796	 Bytes: 6
  %loadMem_453796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453796 = call %struct.Memory* @routine_je_.L_4537a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453796, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_453796, %struct.Memory** %MEMORY

  %loadBr_453796 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453796 = icmp eq i8 %loadBr_453796, 1
  br i1 %cmpBr_453796, label %block_.L_4537a1, label %block_45379c

block_45379c:
  ; Code: jmpq .L_45418d	 RIP: 45379c	 Bytes: 5
  %loadMem_45379c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45379c = call %struct.Memory* @routine_jmpq_.L_45418d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45379c, i64 2545, i64 5)
  store %struct.Memory* %call_45379c, %struct.Memory** %MEMORY

  br label %block_.L_45418d

  ; Code: .L_4537a1:	 RIP: 4537a1	 Bytes: 0
block_.L_4537a1:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4537a1	 Bytes: 8
  %loadMem_4537a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537a1 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537a1)
  store %struct.Memory* %call_4537a1, %struct.Memory** %MEMORY

  ; Code: jle .L_4537e6	 RIP: 4537a9	 Bytes: 6
  %loadMem_4537a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537a9 = call %struct.Memory* @routine_jle_.L_4537e6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537a9, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4537a9, %struct.Memory** %MEMORY

  %loadBr_4537a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4537a9 = icmp eq i8 %loadBr_4537a9, 1
  br i1 %cmpBr_4537a9, label %block_.L_4537e6, label %block_4537af

block_4537af:
  ; Code: movq $0x57f6a3, %rdi	 RIP: 4537af	 Bytes: 10
  %loadMem_4537af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537af = call %struct.Memory* @routine_movq__0x57f6a3___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537af)
  store %struct.Memory* %call_4537af, %struct.Memory** %MEMORY

  ; Code: movl -0x5140(%rbp), %esi	 RIP: 4537b9	 Bytes: 6
  %loadMem_4537b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537b9 = call %struct.Memory* @routine_movl_MINUS0x5140__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537b9)
  store %struct.Memory* %call_4537b9, %struct.Memory** %MEMORY

  ; Code: movl -0x5144(%rbp), %edx	 RIP: 4537bf	 Bytes: 6
  %loadMem_4537bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537bf = call %struct.Memory* @routine_movl_MINUS0x5144__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537bf)
  store %struct.Memory* %call_4537bf, %struct.Memory** %MEMORY

  ; Code: movl -0x5148(%rbp), %ecx	 RIP: 4537c5	 Bytes: 6
  %loadMem_4537c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537c5 = call %struct.Memory* @routine_movl_MINUS0x5148__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537c5)
  store %struct.Memory* %call_4537c5, %struct.Memory** %MEMORY

  ; Code: movl -0x514c(%rbp), %r8d	 RIP: 4537cb	 Bytes: 7
  %loadMem_4537cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537cb = call %struct.Memory* @routine_movl_MINUS0x514c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537cb)
  store %struct.Memory* %call_4537cb, %struct.Memory** %MEMORY

  ; Code: movl -0x5150(%rbp), %r9d	 RIP: 4537d2	 Bytes: 7
  %loadMem_4537d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537d2 = call %struct.Memory* @routine_movl_MINUS0x5150__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537d2)
  store %struct.Memory* %call_4537d2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4537d9	 Bytes: 2
  %loadMem_4537d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537d9 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537d9)
  store %struct.Memory* %call_4537d9, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4537db	 Bytes: 5
  %loadMem1_4537db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4537db = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4537db, i64 -6699, i64 5, i64 5)
  store %struct.Memory* %call1_4537db, %struct.Memory** %MEMORY

  %loadMem2_4537db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4537db = load i64, i64* %3
  %call2_4537db = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4537db, %struct.Memory* %loadMem2_4537db)
  store %struct.Memory* %call2_4537db, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53a8(%rbp)	 RIP: 4537e0	 Bytes: 6
  %loadMem_4537e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537e0 = call %struct.Memory* @routine_movl__eax__MINUS0x53a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537e0)
  store %struct.Memory* %call_4537e0, %struct.Memory** %MEMORY

  ; Code: .L_4537e6:	 RIP: 4537e6	 Bytes: 0
  br label %block_.L_4537e6
block_.L_4537e6:

  ; Code: movl -0x5144(%rbp), %eax	 RIP: 4537e6	 Bytes: 6
  %loadMem_4537e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537e6 = call %struct.Memory* @routine_movl_MINUS0x5144__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537e6)
  store %struct.Memory* %call_4537e6, %struct.Memory** %MEMORY

  ; Code: subl -0x5148(%rbp), %eax	 RIP: 4537ec	 Bytes: 6
  %loadMem_4537ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537ec = call %struct.Memory* @routine_subl_MINUS0x5148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537ec)
  store %struct.Memory* %call_4537ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5154(%rbp)	 RIP: 4537f2	 Bytes: 6
  %loadMem_4537f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537f2 = call %struct.Memory* @routine_movl__eax__MINUS0x5154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537f2)
  store %struct.Memory* %call_4537f2, %struct.Memory** %MEMORY

  ; Code: movl -0x514c(%rbp), %eax	 RIP: 4537f8	 Bytes: 6
  %loadMem_4537f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537f8 = call %struct.Memory* @routine_movl_MINUS0x514c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537f8)
  store %struct.Memory* %call_4537f8, %struct.Memory** %MEMORY

  ; Code: subl -0x5150(%rbp), %eax	 RIP: 4537fe	 Bytes: 6
  %loadMem_4537fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4537fe = call %struct.Memory* @routine_subl_MINUS0x5150__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4537fe)
  store %struct.Memory* %call_4537fe, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5158(%rbp)	 RIP: 453804	 Bytes: 6
  %loadMem_453804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453804 = call %struct.Memory* @routine_movl__eax__MINUS0x5158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453804)
  store %struct.Memory* %call_453804, %struct.Memory** %MEMORY

  ; Code: movl -0x5154(%rbp), %eax	 RIP: 45380a	 Bytes: 6
  %loadMem_45380a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45380a = call %struct.Memory* @routine_movl_MINUS0x5154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45380a)
  store %struct.Memory* %call_45380a, %struct.Memory** %MEMORY

  ; Code: addl -0x5158(%rbp), %eax	 RIP: 453810	 Bytes: 6
  %loadMem_453810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453810 = call %struct.Memory* @routine_addl_MINUS0x5158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453810)
  store %struct.Memory* %call_453810, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x515c(%rbp)	 RIP: 453816	 Bytes: 6
  %loadMem_453816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453816 = call %struct.Memory* @routine_movl__eax__MINUS0x515c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453816)
  store %struct.Memory* %call_453816, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 45381c	 Bytes: 8
  %loadMem_45381c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45381c = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45381c)
  store %struct.Memory* %call_45381c, %struct.Memory** %MEMORY

  ; Code: jle .L_453847	 RIP: 453824	 Bytes: 6
  %loadMem_453824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453824 = call %struct.Memory* @routine_jle_.L_453847(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453824, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_453824, %struct.Memory** %MEMORY

  %loadBr_453824 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453824 = icmp eq i8 %loadBr_453824, 1
  br i1 %cmpBr_453824, label %block_.L_453847, label %block_45382a

block_45382a:
  ; Code: movq $0x57f6c1, %rdi	 RIP: 45382a	 Bytes: 10
  %loadMem_45382a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45382a = call %struct.Memory* @routine_movq__0x57f6c1___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45382a)
  store %struct.Memory* %call_45382a, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %esi	 RIP: 453834	 Bytes: 6
  %loadMem_453834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453834 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453834)
  store %struct.Memory* %call_453834, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 45383a	 Bytes: 2
  %loadMem_45383a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45383a = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45383a)
  store %struct.Memory* %call_45383a, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 45383c	 Bytes: 5
  %loadMem1_45383c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45383c = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45383c, i64 -6796, i64 5, i64 5)
  store %struct.Memory* %call1_45383c, %struct.Memory** %MEMORY

  %loadMem2_45383c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45383c = load i64, i64* %3
  %call2_45383c = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_45383c, %struct.Memory* %loadMem2_45383c)
  store %struct.Memory* %call2_45383c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53ac(%rbp)	 RIP: 453841	 Bytes: 6
  %loadMem_453841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453841 = call %struct.Memory* @routine_movl__eax__MINUS0x53ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453841)
  store %struct.Memory* %call_453841, %struct.Memory** %MEMORY

  ; Code: .L_453847:	 RIP: 453847	 Bytes: 0
  br label %block_.L_453847
block_.L_453847:

  ; Code: imull $0x3, -0x5154(%rbp), %eax	 RIP: 453847	 Bytes: 7
  %loadMem_453847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453847 = call %struct.Memory* @routine_imull__0x3__MINUS0x5154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453847)
  store %struct.Memory* %call_453847, %struct.Memory** %MEMORY

  ; Code: movl -0x5158(%rbp), %ecx	 RIP: 45384e	 Bytes: 6
  %loadMem_45384e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45384e = call %struct.Memory* @routine_movl_MINUS0x5158__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45384e)
  store %struct.Memory* %call_45384e, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 453854	 Bytes: 3
  %loadMem_453854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453854 = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453854)
  store %struct.Memory* %call_453854, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 453857	 Bytes: 2
  %loadMem_453857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453857 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453857)
  store %struct.Memory* %call_453857, %struct.Memory** %MEMORY

  ; Code: jle .L_4538b0	 RIP: 453859	 Bytes: 6
  %loadMem_453859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453859 = call %struct.Memory* @routine_jle_.L_4538b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453859, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_453859, %struct.Memory** %MEMORY

  %loadBr_453859 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453859 = icmp eq i8 %loadBr_453859, 1
  br i1 %cmpBr_453859, label %block_.L_4538b0, label %block_45385f

block_45385f:
  ; Code: imull $0x3, -0x5158(%rbp), %eax	 RIP: 45385f	 Bytes: 7
  %loadMem_45385f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45385f = call %struct.Memory* @routine_imull__0x3__MINUS0x5158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45385f)
  store %struct.Memory* %call_45385f, %struct.Memory** %MEMORY

  ; Code: movl -0x5154(%rbp), %ecx	 RIP: 453866	 Bytes: 6
  %loadMem_453866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453866 = call %struct.Memory* @routine_movl_MINUS0x5154__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453866)
  store %struct.Memory* %call_453866, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 45386c	 Bytes: 3
  %loadMem_45386c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45386c = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45386c)
  store %struct.Memory* %call_45386c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 45386f	 Bytes: 2
  %loadMem_45386f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45386f = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45386f)
  store %struct.Memory* %call_45386f, %struct.Memory** %MEMORY

  ; Code: jle .L_4538b0	 RIP: 453871	 Bytes: 6
  %loadMem_453871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453871 = call %struct.Memory* @routine_jle_.L_4538b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453871, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_453871, %struct.Memory** %MEMORY

  %loadBr_453871 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453871 = icmp eq i8 %loadBr_453871, 1
  br i1 %cmpBr_453871, label %block_.L_4538b0, label %block_453877

block_453877:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453877	 Bytes: 6
  %loadMem_453877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453877 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453877)
  store %struct.Memory* %call_453877, %struct.Memory** %MEMORY

  ; Code: subl $0x64, %eax	 RIP: 45387d	 Bytes: 3
  %loadMem_45387d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45387d = call %struct.Memory* @routine_subl__0x64___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45387d)
  store %struct.Memory* %call_45387d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x515c(%rbp)	 RIP: 453880	 Bytes: 6
  %loadMem_453880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453880 = call %struct.Memory* @routine_movl__eax__MINUS0x515c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453880)
  store %struct.Memory* %call_453880, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453886	 Bytes: 8
  %loadMem_453886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453886 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453886)
  store %struct.Memory* %call_453886, %struct.Memory** %MEMORY

  ; Code: jle .L_4538ab	 RIP: 45388e	 Bytes: 6
  %loadMem_45388e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45388e = call %struct.Memory* @routine_jle_.L_4538ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45388e, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_45388e, %struct.Memory** %MEMORY

  %loadBr_45388e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45388e = icmp eq i8 %loadBr_45388e, 1
  br i1 %cmpBr_45388e, label %block_.L_4538ab, label %block_453894

block_453894:
  ; Code: movq $0x57f6db, %rdi	 RIP: 453894	 Bytes: 10
  %loadMem_453894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453894 = call %struct.Memory* @routine_movq__0x57f6db___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453894)
  store %struct.Memory* %call_453894, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 45389e	 Bytes: 2
  %loadMem_45389e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45389e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45389e)
  store %struct.Memory* %call_45389e, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4538a0	 Bytes: 5
  %loadMem1_4538a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4538a0 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4538a0, i64 -6896, i64 5, i64 5)
  store %struct.Memory* %call1_4538a0, %struct.Memory** %MEMORY

  %loadMem2_4538a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4538a0 = load i64, i64* %3
  %call2_4538a0 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4538a0, %struct.Memory* %loadMem2_4538a0)
  store %struct.Memory* %call2_4538a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53b0(%rbp)	 RIP: 4538a5	 Bytes: 6
  %loadMem_4538a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538a5 = call %struct.Memory* @routine_movl__eax__MINUS0x53b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538a5)
  store %struct.Memory* %call_4538a5, %struct.Memory** %MEMORY

  ; Code: .L_4538ab:	 RIP: 4538ab	 Bytes: 0
  br label %block_.L_4538ab
block_.L_4538ab:

  ; Code: jmpq .L_4538b0	 RIP: 4538ab	 Bytes: 5
  %loadMem_4538ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538ab = call %struct.Memory* @routine_jmpq_.L_4538b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538ab, i64 5, i64 5)
  store %struct.Memory* %call_4538ab, %struct.Memory** %MEMORY

  br label %block_.L_4538b0

  ; Code: .L_4538b0:	 RIP: 4538b0	 Bytes: 0
block_.L_4538b0:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4538b0	 Bytes: 7
  %loadMem_4538b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538b0 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538b0)
  store %struct.Memory* %call_4538b0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1948(%rbp,%rax,4)	 RIP: 4538b7	 Bytes: 8
  %loadMem_4538b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538b7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1948__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538b7)
  store %struct.Memory* %call_4538b7, %struct.Memory** %MEMORY

  ; Code: je .L_453911	 RIP: 4538bf	 Bytes: 6
  %loadMem_4538bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538bf = call %struct.Memory* @routine_je_.L_453911(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538bf, i8* %BRANCH_TAKEN, i64 82, i64 6, i64 6)
  store %struct.Memory* %call_4538bf, %struct.Memory** %MEMORY

  %loadBr_4538bf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4538bf = icmp eq i8 %loadBr_4538bf, 1
  br i1 %cmpBr_4538bf, label %block_.L_453911, label %block_4538c5

block_4538c5:
  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4538c5	 Bytes: 7
  %loadMem_4538c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538c5 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538c5)
  store %struct.Memory* %call_4538c5, %struct.Memory** %MEMORY

  ; Code: movl -0x1948(%rbp,%rax,4), %ecx	 RIP: 4538cc	 Bytes: 7
  %loadMem_4538cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538cc = call %struct.Memory* @routine_movl_MINUS0x1948__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538cc)
  store %struct.Memory* %call_4538cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 4538d3	 Bytes: 7
  %loadMem_4538d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538d3 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538d3)
  store %struct.Memory* %call_4538d3, %struct.Memory** %MEMORY

  ; Code: cmpl -0x3ed0(%rbp,%rax,4), %ecx	 RIP: 4538da	 Bytes: 7
  %loadMem_4538da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538da = call %struct.Memory* @routine_cmpl_MINUS0x3ed0__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538da)
  store %struct.Memory* %call_4538da, %struct.Memory** %MEMORY

  ; Code: jne .L_453911	 RIP: 4538e1	 Bytes: 6
  %loadMem_4538e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538e1 = call %struct.Memory* @routine_jne_.L_453911(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538e1, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_4538e1, %struct.Memory** %MEMORY

  %loadBr_4538e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4538e1 = icmp eq i8 %loadBr_4538e1, 1
  br i1 %cmpBr_4538e1, label %block_.L_453911, label %block_4538e7

block_4538e7:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4538e7	 Bytes: 8
  %loadMem_4538e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538e7 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538e7)
  store %struct.Memory* %call_4538e7, %struct.Memory** %MEMORY

  ; Code: jle .L_45390c	 RIP: 4538ef	 Bytes: 6
  %loadMem_4538ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538ef = call %struct.Memory* @routine_jle_.L_45390c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538ef, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_4538ef, %struct.Memory** %MEMORY

  %loadBr_4538ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4538ef = icmp eq i8 %loadBr_4538ef, 1
  br i1 %cmpBr_4538ef, label %block_.L_45390c, label %block_4538f5

block_4538f5:
  ; Code: movq $0x57f6f4, %rdi	 RIP: 4538f5	 Bytes: 10
  %loadMem_4538f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538f5 = call %struct.Memory* @routine_movq__0x57f6f4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538f5)
  store %struct.Memory* %call_4538f5, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4538ff	 Bytes: 2
  %loadMem_4538ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4538ff = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4538ff)
  store %struct.Memory* %call_4538ff, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453901	 Bytes: 5
  %loadMem1_453901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453901 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453901, i64 -6993, i64 5, i64 5)
  store %struct.Memory* %call1_453901, %struct.Memory** %MEMORY

  %loadMem2_453901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453901 = load i64, i64* %3
  %call2_453901 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453901, %struct.Memory* %loadMem2_453901)
  store %struct.Memory* %call2_453901, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53b4(%rbp)	 RIP: 453906	 Bytes: 6
  %loadMem_453906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453906 = call %struct.Memory* @routine_movl__eax__MINUS0x53b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453906)
  store %struct.Memory* %call_453906, %struct.Memory** %MEMORY

  ; Code: .L_45390c:	 RIP: 45390c	 Bytes: 0
  br label %block_.L_45390c
block_.L_45390c:

  ; Code: jmpq .L_45418d	 RIP: 45390c	 Bytes: 5
  %loadMem_45390c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45390c = call %struct.Memory* @routine_jmpq_.L_45418d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45390c, i64 2177, i64 5)
  store %struct.Memory* %call_45390c, %struct.Memory** %MEMORY

  br label %block_.L_45418d

  ; Code: .L_453911:	 RIP: 453911	 Bytes: 0
block_.L_453911:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453911	 Bytes: 7
  %loadMem_453911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453911 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453911)
  store %struct.Memory* %call_453911, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 453918	 Bytes: 8
  %loadMem_453918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453918 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453918)
  store %struct.Memory* %call_453918, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 453920	 Bytes: 3
  %loadMem_453920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453920 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453920)
  store %struct.Memory* %call_453920, %struct.Memory** %MEMORY

  ; Code: jne .L_453a59	 RIP: 453923	 Bytes: 6
  %loadMem_453923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453923 = call %struct.Memory* @routine_jne_.L_453a59(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453923, i8* %BRANCH_TAKEN, i64 310, i64 6, i64 6)
  store %struct.Memory* %call_453923, %struct.Memory** %MEMORY

  %loadBr_453923 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453923 = icmp eq i8 %loadBr_453923, 1
  br i1 %cmpBr_453923, label %block_.L_453a59, label %block_453929

block_453929:
  ; Code: movl -0x5140(%rbp), %edi	 RIP: 453929	 Bytes: 6
  %loadMem_453929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453929 = call %struct.Memory* @routine_movl_MINUS0x5140__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453929)
  store %struct.Memory* %call_453929, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 45392f	 Bytes: 3
  %loadMem_45392f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45392f = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45392f)
  store %struct.Memory* %call_45392f, %struct.Memory** %MEMORY

  ; Code: callq .check_self_atari	 RIP: 453932	 Bytes: 5
  %loadMem1_453932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453932 = call %struct.Memory* @routine_callq_.check_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453932, i64 39822, i64 5, i64 5)
  store %struct.Memory* %call1_453932, %struct.Memory** %MEMORY

  %loadMem2_453932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453932 = load i64, i64* %3
  %call2_453932 = call %struct.Memory* @sub_45d4c0.check_self_atari(%struct.State* %0, i64  %loadPC_453932, %struct.Memory* %loadMem2_453932)
  store %struct.Memory* %call2_453932, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 453937	 Bytes: 3
  %loadMem_453937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453937 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453937)
  store %struct.Memory* %call_453937, %struct.Memory** %MEMORY

  ; Code: je .L_453a2a	 RIP: 45393a	 Bytes: 6
  %loadMem_45393a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45393a = call %struct.Memory* @routine_je_.L_453a2a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45393a, i8* %BRANCH_TAKEN, i64 240, i64 6, i64 6)
  store %struct.Memory* %call_45393a, %struct.Memory** %MEMORY

  %loadBr_45393a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45393a = icmp eq i8 %loadBr_45393a, 1
  br i1 %cmpBr_45393a, label %block_.L_453a2a, label %block_453940

block_453940:
  ; Code: jmpq .L_453945	 RIP: 453940	 Bytes: 5
  %loadMem_453940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453940 = call %struct.Memory* @routine_jmpq_.L_453945(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453940, i64 5, i64 5)
  store %struct.Memory* %call_453940, %struct.Memory** %MEMORY

  br label %block_.L_453945

  ; Code: .L_453945:	 RIP: 453945	 Bytes: 0
block_.L_453945:

  ; Code: movl $0x0, -0x5160(%rbp)	 RIP: 453945	 Bytes: 10
  %loadMem_453945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453945 = call %struct.Memory* @routine_movl__0x0__MINUS0x5160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453945)
  store %struct.Memory* %call_453945, %struct.Memory** %MEMORY

  ; Code: .L_45394f:	 RIP: 45394f	 Bytes: 0
  br label %block_.L_45394f
block_.L_45394f:

  ; Code: movl -0x5160(%rbp), %eax	 RIP: 45394f	 Bytes: 6
  %loadMem_45394f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45394f = call %struct.Memory* @routine_movl_MINUS0x5160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45394f)
  store %struct.Memory* %call_45394f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453955	 Bytes: 6
  %loadMem_453955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453955 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453955)
  store %struct.Memory* %call_453955, %struct.Memory** %MEMORY

  ; Code: jge .L_4539c7	 RIP: 45395b	 Bytes: 6
  %loadMem_45395b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45395b = call %struct.Memory* @routine_jge_.L_4539c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45395b, i8* %BRANCH_TAKEN, i64 108, i64 6, i64 6)
  store %struct.Memory* %call_45395b, %struct.Memory** %MEMORY

  %loadBr_45395b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45395b = icmp eq i8 %loadBr_45395b, 1
  br i1 %cmpBr_45395b, label %block_.L_4539c7, label %block_453961

block_453961:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 453961	 Bytes: 4
  %loadMem_453961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453961 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453961)
  store %struct.Memory* %call_453961, %struct.Memory** %MEMORY

  ; Code: movslq -0x5160(%rbp), %rcx	 RIP: 453965	 Bytes: 7
  %loadMem_453965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453965 = call %struct.Memory* @routine_movslq_MINUS0x5160__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453965)
  store %struct.Memory* %call_453965, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 45396c	 Bytes: 3
  %loadMem_45396c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45396c = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45396c)
  store %struct.Memory* %call_45396c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5140(%rbp), %edx	 RIP: 45396f	 Bytes: 6
  %loadMem_45396f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45396f = call %struct.Memory* @routine_cmpl_MINUS0x5140__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45396f)
  store %struct.Memory* %call_45396f, %struct.Memory** %MEMORY

  ; Code: jne .L_4539ae	 RIP: 453975	 Bytes: 6
  %loadMem_453975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453975 = call %struct.Memory* @routine_jne_.L_4539ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453975, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_453975, %struct.Memory** %MEMORY

  %loadBr_453975 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453975 = icmp eq i8 %loadBr_453975, 1
  br i1 %cmpBr_453975, label %block_.L_4539ae, label %block_45397b

block_45397b:
  ; Code: movslq -0x5160(%rbp), %rax	 RIP: 45397b	 Bytes: 7
  %loadMem_45397b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45397b = call %struct.Memory* @routine_movslq_MINUS0x5160__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45397b)
  store %struct.Memory* %call_45397b, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 453982	 Bytes: 7
  %loadMem_453982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453982 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453982)
  store %struct.Memory* %call_453982, %struct.Memory** %MEMORY

  ; Code: cmpl -0x515c(%rbp), %ecx	 RIP: 453989	 Bytes: 6
  %loadMem_453989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453989 = call %struct.Memory* @routine_cmpl_MINUS0x515c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453989)
  store %struct.Memory* %call_453989, %struct.Memory** %MEMORY

  ; Code: jle .L_4539a9	 RIP: 45398f	 Bytes: 6
  %loadMem_45398f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45398f = call %struct.Memory* @routine_jle_.L_4539a9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45398f, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_45398f, %struct.Memory** %MEMORY

  %loadBr_45398f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45398f = icmp eq i8 %loadBr_45398f, 1
  br i1 %cmpBr_45398f, label %block_.L_4539a9, label %block_453995

block_453995:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453995	 Bytes: 6
  %loadMem_453995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453995 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453995)
  store %struct.Memory* %call_453995, %struct.Memory** %MEMORY

  ; Code: movslq -0x5160(%rbp), %rcx	 RIP: 45399b	 Bytes: 7
  %loadMem_45399b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45399b = call %struct.Memory* @routine_movslq_MINUS0x5160__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45399b)
  store %struct.Memory* %call_45399b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 4539a2	 Bytes: 7
  %loadMem_4539a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539a2 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539a2)
  store %struct.Memory* %call_4539a2, %struct.Memory** %MEMORY

  ; Code: .L_4539a9:	 RIP: 4539a9	 Bytes: 0
  br label %block_.L_4539a9
block_.L_4539a9:

  ; Code: jmpq .L_4539c7	 RIP: 4539a9	 Bytes: 5
  %loadMem_4539a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539a9 = call %struct.Memory* @routine_jmpq_.L_4539c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539a9, i64 30, i64 5)
  store %struct.Memory* %call_4539a9, %struct.Memory** %MEMORY

  br label %block_.L_4539c7

  ; Code: .L_4539ae:	 RIP: 4539ae	 Bytes: 0
block_.L_4539ae:

  ; Code: jmpq .L_4539b3	 RIP: 4539ae	 Bytes: 5
  %loadMem_4539ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539ae = call %struct.Memory* @routine_jmpq_.L_4539b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539ae, i64 5, i64 5)
  store %struct.Memory* %call_4539ae, %struct.Memory** %MEMORY

  br label %block_.L_4539b3

  ; Code: .L_4539b3:	 RIP: 4539b3	 Bytes: 0
block_.L_4539b3:

  ; Code: movl -0x5160(%rbp), %eax	 RIP: 4539b3	 Bytes: 6
  %loadMem_4539b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539b3 = call %struct.Memory* @routine_movl_MINUS0x5160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539b3)
  store %struct.Memory* %call_4539b3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4539b9	 Bytes: 3
  %loadMem_4539b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539b9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539b9)
  store %struct.Memory* %call_4539b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5160(%rbp)	 RIP: 4539bc	 Bytes: 6
  %loadMem_4539bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539bc = call %struct.Memory* @routine_movl__eax__MINUS0x5160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539bc)
  store %struct.Memory* %call_4539bc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_45394f	 RIP: 4539c2	 Bytes: 5
  %loadMem_4539c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539c2 = call %struct.Memory* @routine_jmpq_.L_45394f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539c2, i64 -115, i64 5)
  store %struct.Memory* %call_4539c2, %struct.Memory** %MEMORY

  br label %block_.L_45394f

  ; Code: .L_4539c7:	 RIP: 4539c7	 Bytes: 0
block_.L_4539c7:

  ; Code: movl -0x5160(%rbp), %eax	 RIP: 4539c7	 Bytes: 6
  %loadMem_4539c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539c7 = call %struct.Memory* @routine_movl_MINUS0x5160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539c7)
  store %struct.Memory* %call_4539c7, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 4539cd	 Bytes: 6
  %loadMem_4539cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539cd = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539cd)
  store %struct.Memory* %call_4539cd, %struct.Memory** %MEMORY

  ; Code: jne .L_453a20	 RIP: 4539d3	 Bytes: 6
  %loadMem_4539d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539d3 = call %struct.Memory* @routine_jne_.L_453a20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539d3, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_4539d3, %struct.Memory** %MEMORY

  %loadBr_4539d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4539d3 = icmp eq i8 %loadBr_4539d3, 1
  br i1 %cmpBr_4539d3, label %block_.L_453a20, label %block_4539d9

block_4539d9:
  ; Code: cmpl $0x16a, -0x5104(%rbp)	 RIP: 4539d9	 Bytes: 10
  %loadMem_4539d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539d9 = call %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539d9)
  store %struct.Memory* %call_4539d9, %struct.Memory** %MEMORY

  ; Code: jge .L_453a20	 RIP: 4539e3	 Bytes: 6
  %loadMem_4539e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539e3 = call %struct.Memory* @routine_jge_.L_453a20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539e3, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4539e3, %struct.Memory** %MEMORY

  %loadBr_4539e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4539e3 = icmp eq i8 %loadBr_4539e3, 1
  br i1 %cmpBr_4539e3, label %block_.L_453a20, label %block_4539e9

block_4539e9:
  ; Code: movl -0x5140(%rbp), %eax	 RIP: 4539e9	 Bytes: 6
  %loadMem_4539e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539e9 = call %struct.Memory* @routine_movl_MINUS0x5140__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539e9)
  store %struct.Memory* %call_4539e9, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 4539ef	 Bytes: 4
  %loadMem_4539ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539ef = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539ef)
  store %struct.Memory* %call_4539ef, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rdx	 RIP: 4539f3	 Bytes: 7
  %loadMem_4539f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539f3 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539f3)
  store %struct.Memory* %call_4539f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 4539fa	 Bytes: 3
  %loadMem_4539fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539fa = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539fa)
  store %struct.Memory* %call_4539fa, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %eax	 RIP: 4539fd	 Bytes: 6
  %loadMem_4539fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4539fd = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4539fd)
  store %struct.Memory* %call_4539fd, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rcx	 RIP: 453a03	 Bytes: 7
  %loadMem_453a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a03 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a03)
  store %struct.Memory* %call_453a03, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453a0a	 Bytes: 7
  %loadMem_453a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a0a = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a0a)
  store %struct.Memory* %call_453a0a, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 453a11	 Bytes: 6
  %loadMem_453a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a11 = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a11)
  store %struct.Memory* %call_453a11, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453a17	 Bytes: 3
  %loadMem_453a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a17 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a17)
  store %struct.Memory* %call_453a17, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 453a1a	 Bytes: 6
  %loadMem_453a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a1a = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a1a)
  store %struct.Memory* %call_453a1a, %struct.Memory** %MEMORY

  ; Code: .L_453a20:	 RIP: 453a20	 Bytes: 0
  br label %block_.L_453a20
block_.L_453a20:

  ; Code: jmpq .L_453a25	 RIP: 453a20	 Bytes: 5
  %loadMem_453a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a20 = call %struct.Memory* @routine_jmpq_.L_453a25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a20, i64 5, i64 5)
  store %struct.Memory* %call_453a20, %struct.Memory** %MEMORY

  br label %block_.L_453a25

  ; Code: .L_453a25:	 RIP: 453a25	 Bytes: 0
block_.L_453a25:

  ; Code: jmpq .L_453a54	 RIP: 453a25	 Bytes: 5
  %loadMem_453a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a25 = call %struct.Memory* @routine_jmpq_.L_453a54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a25, i64 47, i64 5)
  store %struct.Memory* %call_453a25, %struct.Memory** %MEMORY

  br label %block_.L_453a54

  ; Code: .L_453a2a:	 RIP: 453a2a	 Bytes: 0
block_.L_453a2a:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453a2a	 Bytes: 8
  %loadMem_453a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a2a = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a2a)
  store %struct.Memory* %call_453a2a, %struct.Memory** %MEMORY

  ; Code: jle .L_453a4f	 RIP: 453a32	 Bytes: 6
  %loadMem_453a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a32 = call %struct.Memory* @routine_jle_.L_453a4f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a32, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_453a32, %struct.Memory** %MEMORY

  %loadBr_453a32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453a32 = icmp eq i8 %loadBr_453a32, 1
  br i1 %cmpBr_453a32, label %block_.L_453a4f, label %block_453a38

block_453a38:
  ; Code: movq $0x57f718, %rdi	 RIP: 453a38	 Bytes: 10
  %loadMem_453a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a38 = call %struct.Memory* @routine_movq__0x57f718___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a38)
  store %struct.Memory* %call_453a38, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453a42	 Bytes: 2
  %loadMem_453a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a42 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a42)
  store %struct.Memory* %call_453a42, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453a44	 Bytes: 5
  %loadMem1_453a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453a44 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453a44, i64 -7316, i64 5, i64 5)
  store %struct.Memory* %call1_453a44, %struct.Memory** %MEMORY

  %loadMem2_453a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453a44 = load i64, i64* %3
  %call2_453a44 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453a44, %struct.Memory* %loadMem2_453a44)
  store %struct.Memory* %call2_453a44, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53b8(%rbp)	 RIP: 453a49	 Bytes: 6
  %loadMem_453a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a49 = call %struct.Memory* @routine_movl__eax__MINUS0x53b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a49)
  store %struct.Memory* %call_453a49, %struct.Memory** %MEMORY

  ; Code: .L_453a4f:	 RIP: 453a4f	 Bytes: 0
  br label %block_.L_453a4f
block_.L_453a4f:

  ; Code: jmpq .L_453a54	 RIP: 453a4f	 Bytes: 5
  %loadMem_453a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a4f = call %struct.Memory* @routine_jmpq_.L_453a54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a4f, i64 5, i64 5)
  store %struct.Memory* %call_453a4f, %struct.Memory** %MEMORY

  br label %block_.L_453a54

  ; Code: .L_453a54:	 RIP: 453a54	 Bytes: 0
block_.L_453a54:

  ; Code: jmpq .L_454188	 RIP: 453a54	 Bytes: 5
  %loadMem_453a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a54 = call %struct.Memory* @routine_jmpq_.L_454188(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a54, i64 1844, i64 5)
  store %struct.Memory* %call_453a54, %struct.Memory** %MEMORY

  br label %block_.L_454188

  ; Code: .L_453a59:	 RIP: 453a59	 Bytes: 0
block_.L_453a59:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453a59	 Bytes: 7
  %loadMem_453a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a59 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a59)
  store %struct.Memory* %call_453a59, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 453a60	 Bytes: 8
  %loadMem_453a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a60 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a60)
  store %struct.Memory* %call_453a60, %struct.Memory** %MEMORY

  ; Code: cmpl -0x38(%rbp), %ecx	 RIP: 453a68	 Bytes: 3
  %loadMem_453a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a68 = call %struct.Memory* @routine_cmpl_MINUS0x38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a68)
  store %struct.Memory* %call_453a68, %struct.Memory** %MEMORY

  ; Code: jne .L_453e27	 RIP: 453a6b	 Bytes: 6
  %loadMem_453a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a6b = call %struct.Memory* @routine_jne_.L_453e27(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a6b, i8* %BRANCH_TAKEN, i64 956, i64 6, i64 6)
  store %struct.Memory* %call_453a6b, %struct.Memory** %MEMORY

  %loadBr_453a6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453a6b = icmp eq i8 %loadBr_453a6b, 1
  br i1 %cmpBr_453a6b, label %block_.L_453e27, label %block_453a71

block_453a71:
  ; Code: leaq -0x5118(%rbp), %rsi	 RIP: 453a71	 Bytes: 7
  %loadMem_453a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a71 = call %struct.Memory* @routine_leaq_MINUS0x5118__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a71)
  store %struct.Memory* %call_453a71, %struct.Memory** %MEMORY

  ; Code: leaq -0x511c(%rbp), %rdx	 RIP: 453a78	 Bytes: 7
  %loadMem_453a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a78 = call %struct.Memory* @routine_leaq_MINUS0x511c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a78)
  store %struct.Memory* %call_453a78, %struct.Memory** %MEMORY

  ; Code: leaq -0x5120(%rbp), %rcx	 RIP: 453a7f	 Bytes: 7
  %loadMem_453a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a7f = call %struct.Memory* @routine_leaq_MINUS0x5120__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a7f)
  store %struct.Memory* %call_453a7f, %struct.Memory** %MEMORY

  ; Code: leaq -0x5124(%rbp), %r8	 RIP: 453a86	 Bytes: 7
  %loadMem_453a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a86 = call %struct.Memory* @routine_leaq_MINUS0x5124__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a86)
  store %struct.Memory* %call_453a86, %struct.Memory** %MEMORY

  ; Code: movl -0x5140(%rbp), %edi	 RIP: 453a8d	 Bytes: 6
  %loadMem_453a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a8d = call %struct.Memory* @routine_movl_MINUS0x5140__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a8d)
  store %struct.Memory* %call_453a8d, %struct.Memory** %MEMORY

  ; Code: callq .attack_and_defend	 RIP: 453a93	 Bytes: 5
  %loadMem1_453a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453a93 = call %struct.Memory* @routine_callq_.attack_and_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453a93, i64 93853, i64 5, i64 5)
  store %struct.Memory* %call1_453a93, %struct.Memory** %MEMORY

  %loadMem2_453a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453a93 = load i64, i64* %3
  %call2_453a93 = call %struct.Memory* @sub_46a930.attack_and_defend(%struct.State* %0, i64  %loadPC_453a93, %struct.Memory* %loadMem2_453a93)
  store %struct.Memory* %call2_453a93, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453a98	 Bytes: 8
  %loadMem_453a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453a98 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453a98)
  store %struct.Memory* %call_453a98, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53bc(%rbp)	 RIP: 453aa0	 Bytes: 6
  %loadMem_453aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453aa0 = call %struct.Memory* @routine_movl__eax__MINUS0x53bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453aa0)
  store %struct.Memory* %call_453aa0, %struct.Memory** %MEMORY

  ; Code: jle .L_453adc	 RIP: 453aa6	 Bytes: 6
  %loadMem_453aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453aa6 = call %struct.Memory* @routine_jle_.L_453adc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453aa6, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_453aa6, %struct.Memory** %MEMORY

  %loadBr_453aa6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453aa6 = icmp eq i8 %loadBr_453aa6, 1
  br i1 %cmpBr_453aa6, label %block_.L_453adc, label %block_453aac

block_453aac:
  ; Code: movq $0x57f733, %rdi	 RIP: 453aac	 Bytes: 10
  %loadMem_453aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453aac = call %struct.Memory* @routine_movq__0x57f733___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453aac)
  store %struct.Memory* %call_453aac, %struct.Memory** %MEMORY

  ; Code: movl -0x5118(%rbp), %esi	 RIP: 453ab6	 Bytes: 6
  %loadMem_453ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ab6 = call %struct.Memory* @routine_movl_MINUS0x5118__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ab6)
  store %struct.Memory* %call_453ab6, %struct.Memory** %MEMORY

  ; Code: movl -0x511c(%rbp), %edx	 RIP: 453abc	 Bytes: 6
  %loadMem_453abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453abc = call %struct.Memory* @routine_movl_MINUS0x511c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453abc)
  store %struct.Memory* %call_453abc, %struct.Memory** %MEMORY

  ; Code: movl -0x5120(%rbp), %ecx	 RIP: 453ac2	 Bytes: 6
  %loadMem_453ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ac2 = call %struct.Memory* @routine_movl_MINUS0x5120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ac2)
  store %struct.Memory* %call_453ac2, %struct.Memory** %MEMORY

  ; Code: movl -0x5124(%rbp), %r8d	 RIP: 453ac8	 Bytes: 7
  %loadMem_453ac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ac8 = call %struct.Memory* @routine_movl_MINUS0x5124__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ac8)
  store %struct.Memory* %call_453ac8, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453acf	 Bytes: 2
  %loadMem_453acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453acf = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453acf)
  store %struct.Memory* %call_453acf, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453ad1	 Bytes: 5
  %loadMem1_453ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453ad1 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453ad1, i64 -7457, i64 5, i64 5)
  store %struct.Memory* %call1_453ad1, %struct.Memory** %MEMORY

  %loadMem2_453ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453ad1 = load i64, i64* %3
  %call2_453ad1 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453ad1, %struct.Memory* %loadMem2_453ad1)
  store %struct.Memory* %call2_453ad1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53c0(%rbp)	 RIP: 453ad6	 Bytes: 6
  %loadMem_453ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ad6 = call %struct.Memory* @routine_movl__eax__MINUS0x53c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ad6)
  store %struct.Memory* %call_453ad6, %struct.Memory** %MEMORY

  ; Code: .L_453adc:	 RIP: 453adc	 Bytes: 0
  br label %block_.L_453adc
block_.L_453adc:

  ; Code: cmpl $0x0, -0x3c(%rbp)	 RIP: 453adc	 Bytes: 4
  %loadMem_453adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453adc = call %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453adc)
  store %struct.Memory* %call_453adc, %struct.Memory** %MEMORY

  ; Code: je .L_453cd2	 RIP: 453ae0	 Bytes: 6
  %loadMem_453ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ae0 = call %struct.Memory* @routine_je_.L_453cd2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ae0, i8* %BRANCH_TAKEN, i64 498, i64 6, i64 6)
  store %struct.Memory* %call_453ae0, %struct.Memory** %MEMORY

  %loadBr_453ae0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453ae0 = icmp eq i8 %loadBr_453ae0, 1
  br i1 %cmpBr_453ae0, label %block_.L_453cd2, label %block_453ae6

block_453ae6:
  ; Code: cmpl $0x0, -0x5118(%rbp)	 RIP: 453ae6	 Bytes: 7
  %loadMem_453ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ae6 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ae6)
  store %struct.Memory* %call_453ae6, %struct.Memory** %MEMORY

  ; Code: je .L_453cd2	 RIP: 453aed	 Bytes: 6
  %loadMem_453aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453aed = call %struct.Memory* @routine_je_.L_453cd2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453aed, i8* %BRANCH_TAKEN, i64 485, i64 6, i64 6)
  store %struct.Memory* %call_453aed, %struct.Memory** %MEMORY

  %loadBr_453aed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453aed = icmp eq i8 %loadBr_453aed, 1
  br i1 %cmpBr_453aed, label %block_.L_453cd2, label %block_453af3

block_453af3:
  ; Code: cmpl $0x0, -0x5120(%rbp)	 RIP: 453af3	 Bytes: 7
  %loadMem_453af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453af3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453af3)
  store %struct.Memory* %call_453af3, %struct.Memory** %MEMORY

  ; Code: jne .L_453b3b	 RIP: 453afa	 Bytes: 6
  %loadMem_453afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453afa = call %struct.Memory* @routine_jne_.L_453b3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453afa, i8* %BRANCH_TAKEN, i64 65, i64 6, i64 6)
  store %struct.Memory* %call_453afa, %struct.Memory** %MEMORY

  %loadBr_453afa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453afa = icmp eq i8 %loadBr_453afa, 1
  br i1 %cmpBr_453afa, label %block_.L_453b3b, label %block_453b00

block_453b00:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453b00	 Bytes: 6
  %loadMem_453b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b00 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b00)
  store %struct.Memory* %call_453b00, %struct.Memory** %MEMORY

  ; Code: addl $0x1f4, %eax	 RIP: 453b06	 Bytes: 5
  %loadMem_453b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b06 = call %struct.Memory* @routine_addl__0x1f4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b06)
  store %struct.Memory* %call_453b06, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x515c(%rbp)	 RIP: 453b0b	 Bytes: 6
  %loadMem_453b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b0b = call %struct.Memory* @routine_movl__eax__MINUS0x515c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b0b)
  store %struct.Memory* %call_453b0b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453b11	 Bytes: 8
  %loadMem_453b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b11 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b11)
  store %struct.Memory* %call_453b11, %struct.Memory** %MEMORY

  ; Code: jle .L_453b36	 RIP: 453b19	 Bytes: 6
  %loadMem_453b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b19 = call %struct.Memory* @routine_jle_.L_453b36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b19, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_453b19, %struct.Memory** %MEMORY

  %loadBr_453b19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453b19 = icmp eq i8 %loadBr_453b19, 1
  br i1 %cmpBr_453b19, label %block_.L_453b36, label %block_453b1f

block_453b1f:
  ; Code: movq $0x57f770, %rdi	 RIP: 453b1f	 Bytes: 10
  %loadMem_453b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b1f = call %struct.Memory* @routine_movq__0x57f770___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b1f)
  store %struct.Memory* %call_453b1f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453b29	 Bytes: 2
  %loadMem_453b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b29 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b29)
  store %struct.Memory* %call_453b29, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453b2b	 Bytes: 5
  %loadMem1_453b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453b2b = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453b2b, i64 -7547, i64 5, i64 5)
  store %struct.Memory* %call1_453b2b, %struct.Memory** %MEMORY

  %loadMem2_453b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453b2b = load i64, i64* %3
  %call2_453b2b = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453b2b, %struct.Memory* %loadMem2_453b2b)
  store %struct.Memory* %call2_453b2b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53c4(%rbp)	 RIP: 453b30	 Bytes: 6
  %loadMem_453b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b30 = call %struct.Memory* @routine_movl__eax__MINUS0x53c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b30)
  store %struct.Memory* %call_453b30, %struct.Memory** %MEMORY

  ; Code: .L_453b36:	 RIP: 453b36	 Bytes: 0
  br label %block_.L_453b36
block_.L_453b36:

  ; Code: jmpq .L_453bab	 RIP: 453b36	 Bytes: 5
  %loadMem_453b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b36 = call %struct.Memory* @routine_jmpq_.L_453bab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b36, i64 117, i64 5)
  store %struct.Memory* %call_453b36, %struct.Memory** %MEMORY

  br label %block_.L_453bab

  ; Code: .L_453b3b:	 RIP: 453b3b	 Bytes: 0
block_.L_453b3b:

  ; Code: movslq -0x511c(%rbp), %rax	 RIP: 453b3b	 Bytes: 7
  %loadMem_453b3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b3b = call %struct.Memory* @routine_movslq_MINUS0x511c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b3b)
  store %struct.Memory* %call_453b3b, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 453b42	 Bytes: 7
  %loadMem_453b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b42 = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b42)
  store %struct.Memory* %call_453b42, %struct.Memory** %MEMORY

  ; Code: movslq -0x511c(%rbp), %rax	 RIP: 453b49	 Bytes: 7
  %loadMem_453b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b49 = call %struct.Memory* @routine_movslq_MINUS0x511c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b49)
  store %struct.Memory* %call_453b49, %struct.Memory** %MEMORY

  ; Code: addl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 453b50	 Bytes: 7
  %loadMem_453b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b50 = call %struct.Memory* @routine_addl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b50)
  store %struct.Memory* %call_453b50, %struct.Memory** %MEMORY

  ; Code: movl -0x5144(%rbp), %edx	 RIP: 453b57	 Bytes: 6
  %loadMem_453b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b57 = call %struct.Memory* @routine_movl_MINUS0x5144__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b57)
  store %struct.Memory* %call_453b57, %struct.Memory** %MEMORY

  ; Code: addl -0x514c(%rbp), %edx	 RIP: 453b5d	 Bytes: 6
  %loadMem_453b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b5d = call %struct.Memory* @routine_addl_MINUS0x514c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b5d)
  store %struct.Memory* %call_453b5d, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 453b63	 Bytes: 2
  %loadMem_453b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b63 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b63)
  store %struct.Memory* %call_453b63, %struct.Memory** %MEMORY

  ; Code: jle .L_453ba6	 RIP: 453b65	 Bytes: 6
  %loadMem_453b65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b65 = call %struct.Memory* @routine_jle_.L_453ba6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b65, i8* %BRANCH_TAKEN, i64 65, i64 6, i64 6)
  store %struct.Memory* %call_453b65, %struct.Memory** %MEMORY

  %loadBr_453b65 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453b65 = icmp eq i8 %loadBr_453b65, 1
  br i1 %cmpBr_453b65, label %block_.L_453ba6, label %block_453b6b

block_453b6b:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453b6b	 Bytes: 6
  %loadMem_453b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b6b = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b6b)
  store %struct.Memory* %call_453b6b, %struct.Memory** %MEMORY

  ; Code: addl $0x1f4, %eax	 RIP: 453b71	 Bytes: 5
  %loadMem_453b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b71 = call %struct.Memory* @routine_addl__0x1f4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b71)
  store %struct.Memory* %call_453b71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x515c(%rbp)	 RIP: 453b76	 Bytes: 6
  %loadMem_453b76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b76 = call %struct.Memory* @routine_movl__eax__MINUS0x515c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b76)
  store %struct.Memory* %call_453b76, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453b7c	 Bytes: 8
  %loadMem_453b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b7c = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b7c)
  store %struct.Memory* %call_453b7c, %struct.Memory** %MEMORY

  ; Code: jle .L_453ba1	 RIP: 453b84	 Bytes: 6
  %loadMem_453b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b84 = call %struct.Memory* @routine_jle_.L_453ba1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b84, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_453b84, %struct.Memory** %MEMORY

  %loadBr_453b84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453b84 = icmp eq i8 %loadBr_453b84, 1
  br i1 %cmpBr_453b84, label %block_.L_453ba1, label %block_453b8a

block_453b8a:
  ; Code: movq $0x57f786, %rdi	 RIP: 453b8a	 Bytes: 10
  %loadMem_453b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b8a = call %struct.Memory* @routine_movq__0x57f786___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b8a)
  store %struct.Memory* %call_453b8a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453b94	 Bytes: 2
  %loadMem_453b94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b94 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b94)
  store %struct.Memory* %call_453b94, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453b96	 Bytes: 5
  %loadMem1_453b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453b96 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453b96, i64 -7654, i64 5, i64 5)
  store %struct.Memory* %call1_453b96, %struct.Memory** %MEMORY

  %loadMem2_453b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453b96 = load i64, i64* %3
  %call2_453b96 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453b96, %struct.Memory* %loadMem2_453b96)
  store %struct.Memory* %call2_453b96, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53c8(%rbp)	 RIP: 453b9b	 Bytes: 6
  %loadMem_453b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453b9b = call %struct.Memory* @routine_movl__eax__MINUS0x53c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453b9b)
  store %struct.Memory* %call_453b9b, %struct.Memory** %MEMORY

  ; Code: .L_453ba1:	 RIP: 453ba1	 Bytes: 0
  br label %block_.L_453ba1
block_.L_453ba1:

  ; Code: jmpq .L_453ba6	 RIP: 453ba1	 Bytes: 5
  %loadMem_453ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ba1 = call %struct.Memory* @routine_jmpq_.L_453ba6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ba1, i64 5, i64 5)
  store %struct.Memory* %call_453ba1, %struct.Memory** %MEMORY

  br label %block_.L_453ba6

  ; Code: .L_453ba6:	 RIP: 453ba6	 Bytes: 0
block_.L_453ba6:

  ; Code: jmpq .L_453bab	 RIP: 453ba6	 Bytes: 5
  %loadMem_453ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ba6 = call %struct.Memory* @routine_jmpq_.L_453bab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ba6, i64 5, i64 5)
  store %struct.Memory* %call_453ba6, %struct.Memory** %MEMORY

  br label %block_.L_453bab

  ; Code: .L_453bab:	 RIP: 453bab	 Bytes: 0
block_.L_453bab:

  ; Code: jmpq .L_453bb0	 RIP: 453bab	 Bytes: 5
  %loadMem_453bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bab = call %struct.Memory* @routine_jmpq_.L_453bb0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bab, i64 5, i64 5)
  store %struct.Memory* %call_453bab, %struct.Memory** %MEMORY

  br label %block_.L_453bb0

  ; Code: .L_453bb0:	 RIP: 453bb0	 Bytes: 0
block_.L_453bb0:

  ; Code: movl $0x0, -0x5164(%rbp)	 RIP: 453bb0	 Bytes: 10
  %loadMem_453bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bb0 = call %struct.Memory* @routine_movl__0x0__MINUS0x5164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bb0)
  store %struct.Memory* %call_453bb0, %struct.Memory** %MEMORY

  ; Code: .L_453bba:	 RIP: 453bba	 Bytes: 0
  br label %block_.L_453bba
block_.L_453bba:

  ; Code: movl -0x5164(%rbp), %eax	 RIP: 453bba	 Bytes: 6
  %loadMem_453bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bba = call %struct.Memory* @routine_movl_MINUS0x5164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bba)
  store %struct.Memory* %call_453bba, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453bc0	 Bytes: 6
  %loadMem_453bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bc0 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bc0)
  store %struct.Memory* %call_453bc0, %struct.Memory** %MEMORY

  ; Code: jge .L_453c3f	 RIP: 453bc6	 Bytes: 6
  %loadMem_453bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bc6 = call %struct.Memory* @routine_jge_.L_453c3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bc6, i8* %BRANCH_TAKEN, i64 121, i64 6, i64 6)
  store %struct.Memory* %call_453bc6, %struct.Memory** %MEMORY

  %loadBr_453bc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453bc6 = icmp eq i8 %loadBr_453bc6, 1
  br i1 %cmpBr_453bc6, label %block_.L_453c3f, label %block_453bcc

block_453bcc:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 453bcc	 Bytes: 4
  %loadMem_453bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bcc = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bcc)
  store %struct.Memory* %call_453bcc, %struct.Memory** %MEMORY

  ; Code: movslq -0x5164(%rbp), %rcx	 RIP: 453bd0	 Bytes: 7
  %loadMem_453bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bd0 = call %struct.Memory* @routine_movslq_MINUS0x5164__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bd0)
  store %struct.Memory* %call_453bd0, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 453bd7	 Bytes: 3
  %loadMem_453bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bd7 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bd7)
  store %struct.Memory* %call_453bd7, %struct.Memory** %MEMORY

  ; Code: cmpl -0x511c(%rbp), %edx	 RIP: 453bda	 Bytes: 6
  %loadMem_453bda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bda = call %struct.Memory* @routine_cmpl_MINUS0x511c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bda)
  store %struct.Memory* %call_453bda, %struct.Memory** %MEMORY

  ; Code: jne .L_453c26	 RIP: 453be0	 Bytes: 6
  %loadMem_453be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453be0 = call %struct.Memory* @routine_jne_.L_453c26(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453be0, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_453be0, %struct.Memory** %MEMORY

  %loadBr_453be0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453be0 = icmp eq i8 %loadBr_453be0, 1
  br i1 %cmpBr_453be0, label %block_.L_453c26, label %block_453be6

block_453be6:
  ; Code: movslq -0x5164(%rbp), %rax	 RIP: 453be6	 Bytes: 7
  %loadMem_453be6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453be6 = call %struct.Memory* @routine_movslq_MINUS0x5164__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453be6)
  store %struct.Memory* %call_453be6, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 453bed	 Bytes: 7
  %loadMem_453bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bed = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bed)
  store %struct.Memory* %call_453bed, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %edx	 RIP: 453bf4	 Bytes: 6
  %loadMem_453bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bf4 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bf4)
  store %struct.Memory* %call_453bf4, %struct.Memory** %MEMORY

  ; Code: subl $0x96, %edx	 RIP: 453bfa	 Bytes: 6
  %loadMem_453bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453bfa = call %struct.Memory* @routine_subl__0x96___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453bfa)
  store %struct.Memory* %call_453bfa, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 453c00	 Bytes: 2
  %loadMem_453c00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c00 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c00)
  store %struct.Memory* %call_453c00, %struct.Memory** %MEMORY

  ; Code: jle .L_453c21	 RIP: 453c02	 Bytes: 6
  %loadMem_453c02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c02 = call %struct.Memory* @routine_jle_.L_453c21(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c02, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_453c02, %struct.Memory** %MEMORY

  %loadBr_453c02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453c02 = icmp eq i8 %loadBr_453c02, 1
  br i1 %cmpBr_453c02, label %block_.L_453c21, label %block_453c08

block_453c08:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453c08	 Bytes: 6
  %loadMem_453c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c08 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c08)
  store %struct.Memory* %call_453c08, %struct.Memory** %MEMORY

  ; Code: subl $0x96, %eax	 RIP: 453c0e	 Bytes: 5
  %loadMem_453c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c0e = call %struct.Memory* @routine_subl__0x96___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c0e)
  store %struct.Memory* %call_453c0e, %struct.Memory** %MEMORY

  ; Code: movslq -0x5164(%rbp), %rcx	 RIP: 453c13	 Bytes: 7
  %loadMem_453c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c13 = call %struct.Memory* @routine_movslq_MINUS0x5164__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c13)
  store %struct.Memory* %call_453c13, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453c1a	 Bytes: 7
  %loadMem_453c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c1a = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c1a)
  store %struct.Memory* %call_453c1a, %struct.Memory** %MEMORY

  ; Code: .L_453c21:	 RIP: 453c21	 Bytes: 0
  br label %block_.L_453c21
block_.L_453c21:

  ; Code: jmpq .L_453c3f	 RIP: 453c21	 Bytes: 5
  %loadMem_453c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c21 = call %struct.Memory* @routine_jmpq_.L_453c3f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c21, i64 30, i64 5)
  store %struct.Memory* %call_453c21, %struct.Memory** %MEMORY

  br label %block_.L_453c3f

  ; Code: .L_453c26:	 RIP: 453c26	 Bytes: 0
block_.L_453c26:

  ; Code: jmpq .L_453c2b	 RIP: 453c26	 Bytes: 5
  %loadMem_453c26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c26 = call %struct.Memory* @routine_jmpq_.L_453c2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c26, i64 5, i64 5)
  store %struct.Memory* %call_453c26, %struct.Memory** %MEMORY

  br label %block_.L_453c2b

  ; Code: .L_453c2b:	 RIP: 453c2b	 Bytes: 0
block_.L_453c2b:

  ; Code: movl -0x5164(%rbp), %eax	 RIP: 453c2b	 Bytes: 6
  %loadMem_453c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c2b = call %struct.Memory* @routine_movl_MINUS0x5164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c2b)
  store %struct.Memory* %call_453c2b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453c31	 Bytes: 3
  %loadMem_453c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c31 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c31)
  store %struct.Memory* %call_453c31, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5164(%rbp)	 RIP: 453c34	 Bytes: 6
  %loadMem_453c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c34 = call %struct.Memory* @routine_movl__eax__MINUS0x5164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c34)
  store %struct.Memory* %call_453c34, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453bba	 RIP: 453c3a	 Bytes: 5
  %loadMem_453c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c3a = call %struct.Memory* @routine_jmpq_.L_453bba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c3a, i64 -128, i64 5)
  store %struct.Memory* %call_453c3a, %struct.Memory** %MEMORY

  br label %block_.L_453bba

  ; Code: .L_453c3f:	 RIP: 453c3f	 Bytes: 0
block_.L_453c3f:

  ; Code: movl -0x5164(%rbp), %eax	 RIP: 453c3f	 Bytes: 6
  %loadMem_453c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c3f = call %struct.Memory* @routine_movl_MINUS0x5164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c3f)
  store %struct.Memory* %call_453c3f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453c45	 Bytes: 6
  %loadMem_453c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c45 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c45)
  store %struct.Memory* %call_453c45, %struct.Memory** %MEMORY

  ; Code: jne .L_453c9d	 RIP: 453c4b	 Bytes: 6
  %loadMem_453c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c4b = call %struct.Memory* @routine_jne_.L_453c9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c4b, i8* %BRANCH_TAKEN, i64 82, i64 6, i64 6)
  store %struct.Memory* %call_453c4b, %struct.Memory** %MEMORY

  %loadBr_453c4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453c4b = icmp eq i8 %loadBr_453c4b, 1
  br i1 %cmpBr_453c4b, label %block_.L_453c9d, label %block_453c51

block_453c51:
  ; Code: cmpl $0x16a, -0x5104(%rbp)	 RIP: 453c51	 Bytes: 10
  %loadMem_453c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c51 = call %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c51)
  store %struct.Memory* %call_453c51, %struct.Memory** %MEMORY

  ; Code: jge .L_453c9d	 RIP: 453c5b	 Bytes: 6
  %loadMem_453c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c5b = call %struct.Memory* @routine_jge_.L_453c9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c5b, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_453c5b, %struct.Memory** %MEMORY

  %loadBr_453c5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453c5b = icmp eq i8 %loadBr_453c5b, 1
  br i1 %cmpBr_453c5b, label %block_.L_453c9d, label %block_453c61

block_453c61:
  ; Code: movl -0x511c(%rbp), %eax	 RIP: 453c61	 Bytes: 6
  %loadMem_453c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c61 = call %struct.Memory* @routine_movl_MINUS0x511c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c61)
  store %struct.Memory* %call_453c61, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 453c67	 Bytes: 4
  %loadMem_453c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c67 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c67)
  store %struct.Memory* %call_453c67, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rdx	 RIP: 453c6b	 Bytes: 7
  %loadMem_453c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c6b = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c6b)
  store %struct.Memory* %call_453c6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 453c72	 Bytes: 3
  %loadMem_453c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c72 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c72)
  store %struct.Memory* %call_453c72, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453c75	 Bytes: 6
  %loadMem_453c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c75 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c75)
  store %struct.Memory* %call_453c75, %struct.Memory** %MEMORY

  ; Code: subl $0x96, %eax	 RIP: 453c7b	 Bytes: 5
  %loadMem_453c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c7b = call %struct.Memory* @routine_subl__0x96___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c7b)
  store %struct.Memory* %call_453c7b, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rcx	 RIP: 453c80	 Bytes: 7
  %loadMem_453c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c80 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c80)
  store %struct.Memory* %call_453c80, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453c87	 Bytes: 7
  %loadMem_453c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c87 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c87)
  store %struct.Memory* %call_453c87, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 453c8e	 Bytes: 6
  %loadMem_453c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c8e = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c8e)
  store %struct.Memory* %call_453c8e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453c94	 Bytes: 3
  %loadMem_453c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c94 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c94)
  store %struct.Memory* %call_453c94, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 453c97	 Bytes: 6
  %loadMem_453c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c97 = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c97)
  store %struct.Memory* %call_453c97, %struct.Memory** %MEMORY

  ; Code: .L_453c9d:	 RIP: 453c9d	 Bytes: 0
  br label %block_.L_453c9d
block_.L_453c9d:

  ; Code: jmpq .L_453ca2	 RIP: 453c9d	 Bytes: 5
  %loadMem_453c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453c9d = call %struct.Memory* @routine_jmpq_.L_453ca2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453c9d, i64 5, i64 5)
  store %struct.Memory* %call_453c9d, %struct.Memory** %MEMORY

  br label %block_.L_453ca2

  ; Code: .L_453ca2:	 RIP: 453ca2	 Bytes: 0
block_.L_453ca2:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453ca2	 Bytes: 8
  %loadMem_453ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ca2 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ca2)
  store %struct.Memory* %call_453ca2, %struct.Memory** %MEMORY

  ; Code: jle .L_453ccd	 RIP: 453caa	 Bytes: 6
  %loadMem_453caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453caa = call %struct.Memory* @routine_jle_.L_453ccd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453caa, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_453caa, %struct.Memory** %MEMORY

  %loadBr_453caa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453caa = icmp eq i8 %loadBr_453caa, 1
  br i1 %cmpBr_453caa, label %block_.L_453ccd, label %block_453cb0

block_453cb0:
  ; Code: movq $0x57f7b3, %rdi	 RIP: 453cb0	 Bytes: 10
  %loadMem_453cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cb0 = call %struct.Memory* @routine_movq__0x57f7b3___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cb0)
  store %struct.Memory* %call_453cb0, %struct.Memory** %MEMORY

  ; Code: movl -0x511c(%rbp), %esi	 RIP: 453cba	 Bytes: 6
  %loadMem_453cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cba = call %struct.Memory* @routine_movl_MINUS0x511c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cba)
  store %struct.Memory* %call_453cba, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453cc0	 Bytes: 2
  %loadMem_453cc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cc0 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cc0)
  store %struct.Memory* %call_453cc0, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453cc2	 Bytes: 5
  %loadMem1_453cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453cc2 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453cc2, i64 -7954, i64 5, i64 5)
  store %struct.Memory* %call1_453cc2, %struct.Memory** %MEMORY

  %loadMem2_453cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453cc2 = load i64, i64* %3
  %call2_453cc2 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453cc2, %struct.Memory* %loadMem2_453cc2)
  store %struct.Memory* %call2_453cc2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53cc(%rbp)	 RIP: 453cc7	 Bytes: 6
  %loadMem_453cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cc7 = call %struct.Memory* @routine_movl__eax__MINUS0x53cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cc7)
  store %struct.Memory* %call_453cc7, %struct.Memory** %MEMORY

  ; Code: .L_453ccd:	 RIP: 453ccd	 Bytes: 0
  br label %block_.L_453ccd
block_.L_453ccd:

  ; Code: jmpq .L_453e22	 RIP: 453ccd	 Bytes: 5
  %loadMem_453ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ccd = call %struct.Memory* @routine_jmpq_.L_453e22(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ccd, i64 341, i64 5)
  store %struct.Memory* %call_453ccd, %struct.Memory** %MEMORY

  br label %block_.L_453e22

  ; Code: .L_453cd2:	 RIP: 453cd2	 Bytes: 0
block_.L_453cd2:

  ; Code: cmpl $0x0, -0x3c(%rbp)	 RIP: 453cd2	 Bytes: 4
  %loadMem_453cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cd2 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cd2)
  store %struct.Memory* %call_453cd2, %struct.Memory** %MEMORY

  ; Code: jne .L_453e1d	 RIP: 453cd6	 Bytes: 6
  %loadMem_453cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cd6 = call %struct.Memory* @routine_jne_.L_453e1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cd6, i8* %BRANCH_TAKEN, i64 327, i64 6, i64 6)
  store %struct.Memory* %call_453cd6, %struct.Memory** %MEMORY

  %loadBr_453cd6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453cd6 = icmp eq i8 %loadBr_453cd6, 1
  br i1 %cmpBr_453cd6, label %block_.L_453e1d, label %block_453cdc

block_453cdc:
  ; Code: cmpl $0x0, -0x5118(%rbp)	 RIP: 453cdc	 Bytes: 7
  %loadMem_453cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cdc = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cdc)
  store %struct.Memory* %call_453cdc, %struct.Memory** %MEMORY

  ; Code: je .L_453e1d	 RIP: 453ce3	 Bytes: 6
  %loadMem_453ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ce3 = call %struct.Memory* @routine_je_.L_453e1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ce3, i8* %BRANCH_TAKEN, i64 314, i64 6, i64 6)
  store %struct.Memory* %call_453ce3, %struct.Memory** %MEMORY

  %loadBr_453ce3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453ce3 = icmp eq i8 %loadBr_453ce3, 1
  br i1 %cmpBr_453ce3, label %block_.L_453e1d, label %block_453ce9

block_453ce9:
  ; Code: cmpl $0x0, -0x5120(%rbp)	 RIP: 453ce9	 Bytes: 7
  %loadMem_453ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ce9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ce9)
  store %struct.Memory* %call_453ce9, %struct.Memory** %MEMORY

  ; Code: je .L_453e1d	 RIP: 453cf0	 Bytes: 6
  %loadMem_453cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cf0 = call %struct.Memory* @routine_je_.L_453e1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cf0, i8* %BRANCH_TAKEN, i64 301, i64 6, i64 6)
  store %struct.Memory* %call_453cf0, %struct.Memory** %MEMORY

  %loadBr_453cf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453cf0 = icmp eq i8 %loadBr_453cf0, 1
  br i1 %cmpBr_453cf0, label %block_.L_453e1d, label %block_453cf6

block_453cf6:
  ; Code: jmpq .L_453cfb	 RIP: 453cf6	 Bytes: 5
  %loadMem_453cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cf6 = call %struct.Memory* @routine_jmpq_.L_453cfb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cf6, i64 5, i64 5)
  store %struct.Memory* %call_453cf6, %struct.Memory** %MEMORY

  br label %block_.L_453cfb

  ; Code: .L_453cfb:	 RIP: 453cfb	 Bytes: 0
block_.L_453cfb:

  ; Code: movl $0x0, -0x5168(%rbp)	 RIP: 453cfb	 Bytes: 10
  %loadMem_453cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453cfb = call %struct.Memory* @routine_movl__0x0__MINUS0x5168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453cfb)
  store %struct.Memory* %call_453cfb, %struct.Memory** %MEMORY

  ; Code: .L_453d05:	 RIP: 453d05	 Bytes: 0
  br label %block_.L_453d05
block_.L_453d05:

  ; Code: movl -0x5168(%rbp), %eax	 RIP: 453d05	 Bytes: 6
  %loadMem_453d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d05 = call %struct.Memory* @routine_movl_MINUS0x5168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d05)
  store %struct.Memory* %call_453d05, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453d0b	 Bytes: 6
  %loadMem_453d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d0b = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d0b)
  store %struct.Memory* %call_453d0b, %struct.Memory** %MEMORY

  ; Code: jge .L_453d8a	 RIP: 453d11	 Bytes: 6
  %loadMem_453d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d11 = call %struct.Memory* @routine_jge_.L_453d8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d11, i8* %BRANCH_TAKEN, i64 121, i64 6, i64 6)
  store %struct.Memory* %call_453d11, %struct.Memory** %MEMORY

  %loadBr_453d11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453d11 = icmp eq i8 %loadBr_453d11, 1
  br i1 %cmpBr_453d11, label %block_.L_453d8a, label %block_453d17

block_453d17:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 453d17	 Bytes: 4
  %loadMem_453d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d17 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d17)
  store %struct.Memory* %call_453d17, %struct.Memory** %MEMORY

  ; Code: movslq -0x5168(%rbp), %rcx	 RIP: 453d1b	 Bytes: 7
  %loadMem_453d1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d1b = call %struct.Memory* @routine_movslq_MINUS0x5168__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d1b)
  store %struct.Memory* %call_453d1b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 453d22	 Bytes: 3
  %loadMem_453d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d22 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d22)
  store %struct.Memory* %call_453d22, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5124(%rbp), %edx	 RIP: 453d25	 Bytes: 6
  %loadMem_453d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d25 = call %struct.Memory* @routine_cmpl_MINUS0x5124__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d25)
  store %struct.Memory* %call_453d25, %struct.Memory** %MEMORY

  ; Code: jne .L_453d71	 RIP: 453d2b	 Bytes: 6
  %loadMem_453d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d2b = call %struct.Memory* @routine_jne_.L_453d71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d2b, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_453d2b, %struct.Memory** %MEMORY

  %loadBr_453d2b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453d2b = icmp eq i8 %loadBr_453d2b, 1
  br i1 %cmpBr_453d2b, label %block_.L_453d71, label %block_453d31

block_453d31:
  ; Code: movslq -0x5168(%rbp), %rax	 RIP: 453d31	 Bytes: 7
  %loadMem_453d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d31 = call %struct.Memory* @routine_movslq_MINUS0x5168__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d31)
  store %struct.Memory* %call_453d31, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 453d38	 Bytes: 7
  %loadMem_453d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d38 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d38)
  store %struct.Memory* %call_453d38, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %edx	 RIP: 453d3f	 Bytes: 6
  %loadMem_453d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d3f = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d3f)
  store %struct.Memory* %call_453d3f, %struct.Memory** %MEMORY

  ; Code: subl $0x1f4, %edx	 RIP: 453d45	 Bytes: 6
  %loadMem_453d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d45 = call %struct.Memory* @routine_subl__0x1f4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d45)
  store %struct.Memory* %call_453d45, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 453d4b	 Bytes: 2
  %loadMem_453d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d4b = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d4b)
  store %struct.Memory* %call_453d4b, %struct.Memory** %MEMORY

  ; Code: jle .L_453d6c	 RIP: 453d4d	 Bytes: 6
  %loadMem_453d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d4d = call %struct.Memory* @routine_jle_.L_453d6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d4d, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_453d4d, %struct.Memory** %MEMORY

  %loadBr_453d4d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453d4d = icmp eq i8 %loadBr_453d4d, 1
  br i1 %cmpBr_453d4d, label %block_.L_453d6c, label %block_453d53

block_453d53:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453d53	 Bytes: 6
  %loadMem_453d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d53 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d53)
  store %struct.Memory* %call_453d53, %struct.Memory** %MEMORY

  ; Code: subl $0x1f4, %eax	 RIP: 453d59	 Bytes: 5
  %loadMem_453d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d59 = call %struct.Memory* @routine_subl__0x1f4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d59)
  store %struct.Memory* %call_453d59, %struct.Memory** %MEMORY

  ; Code: movslq -0x5168(%rbp), %rcx	 RIP: 453d5e	 Bytes: 7
  %loadMem_453d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d5e = call %struct.Memory* @routine_movslq_MINUS0x5168__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d5e)
  store %struct.Memory* %call_453d5e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453d65	 Bytes: 7
  %loadMem_453d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d65 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d65)
  store %struct.Memory* %call_453d65, %struct.Memory** %MEMORY

  ; Code: .L_453d6c:	 RIP: 453d6c	 Bytes: 0
  br label %block_.L_453d6c
block_.L_453d6c:

  ; Code: jmpq .L_453d8a	 RIP: 453d6c	 Bytes: 5
  %loadMem_453d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d6c = call %struct.Memory* @routine_jmpq_.L_453d8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d6c, i64 30, i64 5)
  store %struct.Memory* %call_453d6c, %struct.Memory** %MEMORY

  br label %block_.L_453d8a

  ; Code: .L_453d71:	 RIP: 453d71	 Bytes: 0
block_.L_453d71:

  ; Code: jmpq .L_453d76	 RIP: 453d71	 Bytes: 5
  %loadMem_453d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d71 = call %struct.Memory* @routine_jmpq_.L_453d76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d71, i64 5, i64 5)
  store %struct.Memory* %call_453d71, %struct.Memory** %MEMORY

  br label %block_.L_453d76

  ; Code: .L_453d76:	 RIP: 453d76	 Bytes: 0
block_.L_453d76:

  ; Code: movl -0x5168(%rbp), %eax	 RIP: 453d76	 Bytes: 6
  %loadMem_453d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d76 = call %struct.Memory* @routine_movl_MINUS0x5168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d76)
  store %struct.Memory* %call_453d76, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453d7c	 Bytes: 3
  %loadMem_453d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d7c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d7c)
  store %struct.Memory* %call_453d7c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5168(%rbp)	 RIP: 453d7f	 Bytes: 6
  %loadMem_453d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d7f = call %struct.Memory* @routine_movl__eax__MINUS0x5168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d7f)
  store %struct.Memory* %call_453d7f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453d05	 RIP: 453d85	 Bytes: 5
  %loadMem_453d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d85 = call %struct.Memory* @routine_jmpq_.L_453d05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d85, i64 -128, i64 5)
  store %struct.Memory* %call_453d85, %struct.Memory** %MEMORY

  br label %block_.L_453d05

  ; Code: .L_453d8a:	 RIP: 453d8a	 Bytes: 0
block_.L_453d8a:

  ; Code: movl -0x5168(%rbp), %eax	 RIP: 453d8a	 Bytes: 6
  %loadMem_453d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d8a = call %struct.Memory* @routine_movl_MINUS0x5168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d8a)
  store %struct.Memory* %call_453d8a, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453d90	 Bytes: 6
  %loadMem_453d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d90 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d90)
  store %struct.Memory* %call_453d90, %struct.Memory** %MEMORY

  ; Code: jne .L_453de8	 RIP: 453d96	 Bytes: 6
  %loadMem_453d96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d96 = call %struct.Memory* @routine_jne_.L_453de8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d96, i8* %BRANCH_TAKEN, i64 82, i64 6, i64 6)
  store %struct.Memory* %call_453d96, %struct.Memory** %MEMORY

  %loadBr_453d96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453d96 = icmp eq i8 %loadBr_453d96, 1
  br i1 %cmpBr_453d96, label %block_.L_453de8, label %block_453d9c

block_453d9c:
  ; Code: cmpl $0x16a, -0x5104(%rbp)	 RIP: 453d9c	 Bytes: 10
  %loadMem_453d9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453d9c = call %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453d9c)
  store %struct.Memory* %call_453d9c, %struct.Memory** %MEMORY

  ; Code: jge .L_453de8	 RIP: 453da6	 Bytes: 6
  %loadMem_453da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453da6 = call %struct.Memory* @routine_jge_.L_453de8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453da6, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_453da6, %struct.Memory** %MEMORY

  %loadBr_453da6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453da6 = icmp eq i8 %loadBr_453da6, 1
  br i1 %cmpBr_453da6, label %block_.L_453de8, label %block_453dac

block_453dac:
  ; Code: movl -0x5124(%rbp), %eax	 RIP: 453dac	 Bytes: 6
  %loadMem_453dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dac = call %struct.Memory* @routine_movl_MINUS0x5124__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dac)
  store %struct.Memory* %call_453dac, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 453db2	 Bytes: 4
  %loadMem_453db2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453db2 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453db2)
  store %struct.Memory* %call_453db2, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rdx	 RIP: 453db6	 Bytes: 7
  %loadMem_453db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453db6 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453db6)
  store %struct.Memory* %call_453db6, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 453dbd	 Bytes: 3
  %loadMem_453dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dbd = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dbd)
  store %struct.Memory* %call_453dbd, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453dc0	 Bytes: 6
  %loadMem_453dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dc0 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dc0)
  store %struct.Memory* %call_453dc0, %struct.Memory** %MEMORY

  ; Code: subl $0x1f4, %eax	 RIP: 453dc6	 Bytes: 5
  %loadMem_453dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dc6 = call %struct.Memory* @routine_subl__0x1f4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dc6)
  store %struct.Memory* %call_453dc6, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rcx	 RIP: 453dcb	 Bytes: 7
  %loadMem_453dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dcb = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dcb)
  store %struct.Memory* %call_453dcb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453dd2	 Bytes: 7
  %loadMem_453dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dd2 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dd2)
  store %struct.Memory* %call_453dd2, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 453dd9	 Bytes: 6
  %loadMem_453dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dd9 = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dd9)
  store %struct.Memory* %call_453dd9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453ddf	 Bytes: 3
  %loadMem_453ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ddf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ddf)
  store %struct.Memory* %call_453ddf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 453de2	 Bytes: 6
  %loadMem_453de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453de2 = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453de2)
  store %struct.Memory* %call_453de2, %struct.Memory** %MEMORY

  ; Code: .L_453de8:	 RIP: 453de8	 Bytes: 0
  br label %block_.L_453de8
block_.L_453de8:

  ; Code: jmpq .L_453ded	 RIP: 453de8	 Bytes: 5
  %loadMem_453de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453de8 = call %struct.Memory* @routine_jmpq_.L_453ded(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453de8, i64 5, i64 5)
  store %struct.Memory* %call_453de8, %struct.Memory** %MEMORY

  br label %block_.L_453ded

  ; Code: .L_453ded:	 RIP: 453ded	 Bytes: 0
block_.L_453ded:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453ded	 Bytes: 8
  %loadMem_453ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ded = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ded)
  store %struct.Memory* %call_453ded, %struct.Memory** %MEMORY

  ; Code: jle .L_453e18	 RIP: 453df5	 Bytes: 6
  %loadMem_453df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453df5 = call %struct.Memory* @routine_jle_.L_453e18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453df5, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_453df5, %struct.Memory** %MEMORY

  %loadBr_453df5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453df5 = icmp eq i8 %loadBr_453df5, 1
  br i1 %cmpBr_453df5, label %block_.L_453e18, label %block_453dfb

block_453dfb:
  ; Code: movq $0x57f7d8, %rdi	 RIP: 453dfb	 Bytes: 10
  %loadMem_453dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453dfb = call %struct.Memory* @routine_movq__0x57f7d8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453dfb)
  store %struct.Memory* %call_453dfb, %struct.Memory** %MEMORY

  ; Code: movl -0x5124(%rbp), %esi	 RIP: 453e05	 Bytes: 6
  %loadMem_453e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e05 = call %struct.Memory* @routine_movl_MINUS0x5124__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e05)
  store %struct.Memory* %call_453e05, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 453e0b	 Bytes: 2
  %loadMem_453e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e0b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e0b)
  store %struct.Memory* %call_453e0b, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 453e0d	 Bytes: 5
  %loadMem1_453e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453e0d = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453e0d, i64 -8285, i64 5, i64 5)
  store %struct.Memory* %call1_453e0d, %struct.Memory** %MEMORY

  %loadMem2_453e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453e0d = load i64, i64* %3
  %call2_453e0d = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_453e0d, %struct.Memory* %loadMem2_453e0d)
  store %struct.Memory* %call2_453e0d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53d0(%rbp)	 RIP: 453e12	 Bytes: 6
  %loadMem_453e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e12 = call %struct.Memory* @routine_movl__eax__MINUS0x53d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e12)
  store %struct.Memory* %call_453e12, %struct.Memory** %MEMORY

  ; Code: .L_453e18:	 RIP: 453e18	 Bytes: 0
  br label %block_.L_453e18
block_.L_453e18:

  ; Code: jmpq .L_453e1d	 RIP: 453e18	 Bytes: 5
  %loadMem_453e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e18 = call %struct.Memory* @routine_jmpq_.L_453e1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e18, i64 5, i64 5)
  store %struct.Memory* %call_453e18, %struct.Memory** %MEMORY

  br label %block_.L_453e1d

  ; Code: .L_453e1d:	 RIP: 453e1d	 Bytes: 0
block_.L_453e1d:

  ; Code: jmpq .L_453e22	 RIP: 453e1d	 Bytes: 5
  %loadMem_453e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e1d = call %struct.Memory* @routine_jmpq_.L_453e22(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e1d, i64 5, i64 5)
  store %struct.Memory* %call_453e1d, %struct.Memory** %MEMORY

  br label %block_.L_453e22

  ; Code: .L_453e22:	 RIP: 453e22	 Bytes: 0
block_.L_453e22:

  ; Code: jmpq .L_454183	 RIP: 453e22	 Bytes: 5
  %loadMem_453e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e22 = call %struct.Memory* @routine_jmpq_.L_454183(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e22, i64 865, i64 5)
  store %struct.Memory* %call_453e22, %struct.Memory** %MEMORY

  br label %block_.L_454183

  ; Code: .L_453e27:	 RIP: 453e27	 Bytes: 0
block_.L_453e27:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453e27	 Bytes: 7
  %loadMem_453e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e27 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e27)
  store %struct.Memory* %call_453e27, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 453e2e	 Bytes: 8
  %loadMem_453e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e2e = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e2e)
  store %struct.Memory* %call_453e2e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x34(%rbp), %ecx	 RIP: 453e36	 Bytes: 3
  %loadMem_453e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e36 = call %struct.Memory* @routine_cmpl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e36)
  store %struct.Memory* %call_453e36, %struct.Memory** %MEMORY

  ; Code: jne .L_45417e	 RIP: 453e39	 Bytes: 6
  %loadMem_453e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e39 = call %struct.Memory* @routine_jne_.L_45417e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e39, i8* %BRANCH_TAKEN, i64 837, i64 6, i64 6)
  store %struct.Memory* %call_453e39, %struct.Memory** %MEMORY

  %loadBr_453e39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453e39 = icmp eq i8 %loadBr_453e39, 1
  br i1 %cmpBr_453e39, label %block_.L_45417e, label %block_453e3f

block_453e3f:
  ; Code: movl $0x0, -0x5134(%rbp)	 RIP: 453e3f	 Bytes: 10
  %loadMem_453e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e3f = call %struct.Memory* @routine_movl__0x0__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e3f)
  store %struct.Memory* %call_453e3f, %struct.Memory** %MEMORY

  ; Code: .L_453e49:	 RIP: 453e49	 Bytes: 0
  br label %block_.L_453e49
block_.L_453e49:

  ; Code: cmpl $0x4, -0x5134(%rbp)	 RIP: 453e49	 Bytes: 7
  %loadMem_453e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e49 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e49)
  store %struct.Memory* %call_453e49, %struct.Memory** %MEMORY

  ; Code: jge .L_454179	 RIP: 453e50	 Bytes: 6
  %loadMem_453e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e50 = call %struct.Memory* @routine_jge_.L_454179(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e50, i8* %BRANCH_TAKEN, i64 809, i64 6, i64 6)
  store %struct.Memory* %call_453e50, %struct.Memory** %MEMORY

  %loadBr_453e50 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453e50 = icmp eq i8 %loadBr_453e50, 1
  br i1 %cmpBr_453e50, label %block_.L_454179, label %block_453e56

block_453e56:
  ; Code: movl -0x5134(%rbp), %eax	 RIP: 453e56	 Bytes: 6
  %loadMem_453e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e56 = call %struct.Memory* @routine_movl_MINUS0x5134__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e56)
  store %struct.Memory* %call_453e56, %struct.Memory** %MEMORY

  ; Code: andl $0x1, %eax	 RIP: 453e5c	 Bytes: 3
  %loadMem_453e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e5c = call %struct.Memory* @routine_andl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e5c)
  store %struct.Memory* %call_453e5c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 453e5f	 Bytes: 3
  %loadMem_453e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e5f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e5f)
  store %struct.Memory* %call_453e5f, %struct.Memory** %MEMORY

  ; Code: je .L_453e81	 RIP: 453e62	 Bytes: 6
  %loadMem_453e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e62 = call %struct.Memory* @routine_je_.L_453e81(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e62, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_453e62, %struct.Memory** %MEMORY

  %loadBr_453e62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453e62 = icmp eq i8 %loadBr_453e62, 1
  br i1 %cmpBr_453e62, label %block_.L_453e81, label %block_453e68

block_453e68:
  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453e68	 Bytes: 7
  %loadMem_453e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e68 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e68)
  store %struct.Memory* %call_453e68, %struct.Memory** %MEMORY

  ; Code: movl -0x1308(%rbp,%rax,4), %ecx	 RIP: 453e6f	 Bytes: 7
  %loadMem_453e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e6f = call %struct.Memory* @routine_movl_MINUS0x1308__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e6f)
  store %struct.Memory* %call_453e6f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x516c(%rbp)	 RIP: 453e76	 Bytes: 6
  %loadMem_453e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e76 = call %struct.Memory* @routine_movl__ecx__MINUS0x516c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e76)
  store %struct.Memory* %call_453e76, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453e95	 RIP: 453e7c	 Bytes: 5
  %loadMem_453e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e7c = call %struct.Memory* @routine_jmpq_.L_453e95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e7c, i64 25, i64 5)
  store %struct.Memory* %call_453e7c, %struct.Memory** %MEMORY

  br label %block_.L_453e95

  ; Code: .L_453e81:	 RIP: 453e81	 Bytes: 0
block_.L_453e81:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453e81	 Bytes: 7
  %loadMem_453e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e81 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e81)
  store %struct.Memory* %call_453e81, %struct.Memory** %MEMORY

  ; Code: movl -0xcc8(%rbp,%rax,4), %ecx	 RIP: 453e88	 Bytes: 7
  %loadMem_453e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e88 = call %struct.Memory* @routine_movl_MINUS0xcc8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e88)
  store %struct.Memory* %call_453e88, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x516c(%rbp)	 RIP: 453e8f	 Bytes: 6
  %loadMem_453e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e8f = call %struct.Memory* @routine_movl__ecx__MINUS0x516c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e8f)
  store %struct.Memory* %call_453e8f, %struct.Memory** %MEMORY

  ; Code: .L_453e95:	 RIP: 453e95	 Bytes: 0
  br label %block_.L_453e95
block_.L_453e95:

  ; Code: movl -0x5134(%rbp), %eax	 RIP: 453e95	 Bytes: 6
  %loadMem_453e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e95 = call %struct.Memory* @routine_movl_MINUS0x5134__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e95)
  store %struct.Memory* %call_453e95, %struct.Memory** %MEMORY

  ; Code: andl $0x2, %eax	 RIP: 453e9b	 Bytes: 3
  %loadMem_453e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e9b = call %struct.Memory* @routine_andl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e9b)
  store %struct.Memory* %call_453e9b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 453e9e	 Bytes: 3
  %loadMem_453e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453e9e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453e9e)
  store %struct.Memory* %call_453e9e, %struct.Memory** %MEMORY

  ; Code: je .L_453ec0	 RIP: 453ea1	 Bytes: 6
  %loadMem_453ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ea1 = call %struct.Memory* @routine_je_.L_453ec0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ea1, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_453ea1, %struct.Memory** %MEMORY

  %loadBr_453ea1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453ea1 = icmp eq i8 %loadBr_453ea1, 1
  br i1 %cmpBr_453ea1, label %block_.L_453ec0, label %block_453ea7

block_453ea7:
  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453ea7	 Bytes: 7
  %loadMem_453ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ea7 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ea7)
  store %struct.Memory* %call_453ea7, %struct.Memory** %MEMORY

  ; Code: movl -0x3890(%rbp,%rax,4), %ecx	 RIP: 453eae	 Bytes: 7
  %loadMem_453eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453eae = call %struct.Memory* @routine_movl_MINUS0x3890__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453eae)
  store %struct.Memory* %call_453eae, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5170(%rbp)	 RIP: 453eb5	 Bytes: 6
  %loadMem_453eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453eb5 = call %struct.Memory* @routine_movl__ecx__MINUS0x5170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453eb5)
  store %struct.Memory* %call_453eb5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453ed4	 RIP: 453ebb	 Bytes: 5
  %loadMem_453ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ebb = call %struct.Memory* @routine_jmpq_.L_453ed4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ebb, i64 25, i64 5)
  store %struct.Memory* %call_453ebb, %struct.Memory** %MEMORY

  br label %block_.L_453ed4

  ; Code: .L_453ec0:	 RIP: 453ec0	 Bytes: 0
block_.L_453ec0:

  ; Code: movslq -0x5140(%rbp), %rax	 RIP: 453ec0	 Bytes: 7
  %loadMem_453ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ec0 = call %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ec0)
  store %struct.Memory* %call_453ec0, %struct.Memory** %MEMORY

  ; Code: movl -0x3250(%rbp,%rax,4), %ecx	 RIP: 453ec7	 Bytes: 7
  %loadMem_453ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ec7 = call %struct.Memory* @routine_movl_MINUS0x3250__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ec7)
  store %struct.Memory* %call_453ec7, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5170(%rbp)	 RIP: 453ece	 Bytes: 6
  %loadMem_453ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ece = call %struct.Memory* @routine_movl__ecx__MINUS0x5170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ece)
  store %struct.Memory* %call_453ece, %struct.Memory** %MEMORY

  ; Code: .L_453ed4:	 RIP: 453ed4	 Bytes: 0
  br label %block_.L_453ed4
block_.L_453ed4:

  ; Code: movl -0x516c(%rbp), %edi	 RIP: 453ed4	 Bytes: 6
  %loadMem_453ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ed4 = call %struct.Memory* @routine_movl_MINUS0x516c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ed4)
  store %struct.Memory* %call_453ed4, %struct.Memory** %MEMORY

  ; Code: movl -0x5170(%rbp), %esi	 RIP: 453eda	 Bytes: 6
  %loadMem_453eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453eda = call %struct.Memory* @routine_movl_MINUS0x5170__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453eda)
  store %struct.Memory* %call_453eda, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %edx	 RIP: 453ee0	 Bytes: 3
  %loadMem_453ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ee0 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ee0)
  store %struct.Memory* %call_453ee0, %struct.Memory** %MEMORY

  ; Code: callq .common_vulnerability	 RIP: 453ee3	 Bytes: 5
  %loadMem1_453ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453ee3 = call %struct.Memory* @routine_callq_.common_vulnerability(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453ee3, i64 38477, i64 5, i64 5)
  store %struct.Memory* %call1_453ee3, %struct.Memory** %MEMORY

  %loadMem2_453ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453ee3 = load i64, i64* %3
  %call2_453ee3 = call %struct.Memory* @sub_45d530.common_vulnerability(%struct.State* %0, i64  %loadPC_453ee3, %struct.Memory* %loadMem2_453ee3)
  store %struct.Memory* %call2_453ee3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 453ee8	 Bytes: 3
  %loadMem_453ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ee8 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ee8)
  store %struct.Memory* %call_453ee8, %struct.Memory** %MEMORY

  ; Code: je .L_454160	 RIP: 453eeb	 Bytes: 6
  %loadMem_453eeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453eeb = call %struct.Memory* @routine_je_.L_454160(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453eeb, i8* %BRANCH_TAKEN, i64 629, i64 6, i64 6)
  store %struct.Memory* %call_453eeb, %struct.Memory** %MEMORY

  %loadBr_453eeb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453eeb = icmp eq i8 %loadBr_453eeb, 1
  br i1 %cmpBr_453eeb, label %block_.L_454160, label %block_453ef1

block_453ef1:
  ; Code: movl -0x516c(%rbp), %edi	 RIP: 453ef1	 Bytes: 6
  %loadMem_453ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ef1 = call %struct.Memory* @routine_movl_MINUS0x516c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ef1)
  store %struct.Memory* %call_453ef1, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 453ef7	 Bytes: 3
  %loadMem_453ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ef7 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ef7)
  store %struct.Memory* %call_453ef7, %struct.Memory** %MEMORY

  ; Code: callq .check_self_atari	 RIP: 453efa	 Bytes: 5
  %loadMem1_453efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_453efa = call %struct.Memory* @routine_callq_.check_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_453efa, i64 38342, i64 5, i64 5)
  store %struct.Memory* %call1_453efa, %struct.Memory** %MEMORY

  %loadMem2_453efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_453efa = load i64, i64* %3
  %call2_453efa = call %struct.Memory* @sub_45d4c0.check_self_atari(%struct.State* %0, i64  %loadPC_453efa, %struct.Memory* %loadMem2_453efa)
  store %struct.Memory* %call2_453efa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 453eff	 Bytes: 3
  %loadMem_453eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453eff = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453eff)
  store %struct.Memory* %call_453eff, %struct.Memory** %MEMORY

  ; Code: je .L_45401d	 RIP: 453f02	 Bytes: 6
  %loadMem_453f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f02 = call %struct.Memory* @routine_je_.L_45401d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f02, i8* %BRANCH_TAKEN, i64 283, i64 6, i64 6)
  store %struct.Memory* %call_453f02, %struct.Memory** %MEMORY

  %loadBr_453f02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453f02 = icmp eq i8 %loadBr_453f02, 1
  br i1 %cmpBr_453f02, label %block_.L_45401d, label %block_453f08

block_453f08:
  ; Code: jmpq .L_453f0d	 RIP: 453f08	 Bytes: 5
  %loadMem_453f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f08 = call %struct.Memory* @routine_jmpq_.L_453f0d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f08, i64 5, i64 5)
  store %struct.Memory* %call_453f08, %struct.Memory** %MEMORY

  br label %block_.L_453f0d

  ; Code: .L_453f0d:	 RIP: 453f0d	 Bytes: 0
block_.L_453f0d:

  ; Code: movl $0x0, -0x5174(%rbp)	 RIP: 453f0d	 Bytes: 10
  %loadMem_453f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f0d = call %struct.Memory* @routine_movl__0x0__MINUS0x5174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f0d)
  store %struct.Memory* %call_453f0d, %struct.Memory** %MEMORY

  ; Code: .L_453f17:	 RIP: 453f17	 Bytes: 0
  br label %block_.L_453f17
block_.L_453f17:

  ; Code: movl -0x5174(%rbp), %eax	 RIP: 453f17	 Bytes: 6
  %loadMem_453f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f17 = call %struct.Memory* @routine_movl_MINUS0x5174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f17)
  store %struct.Memory* %call_453f17, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453f1d	 Bytes: 6
  %loadMem_453f1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f1d = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f1d)
  store %struct.Memory* %call_453f1d, %struct.Memory** %MEMORY

  ; Code: jge .L_453f8f	 RIP: 453f23	 Bytes: 6
  %loadMem_453f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f23 = call %struct.Memory* @routine_jge_.L_453f8f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f23, i8* %BRANCH_TAKEN, i64 108, i64 6, i64 6)
  store %struct.Memory* %call_453f23, %struct.Memory** %MEMORY

  %loadBr_453f23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453f23 = icmp eq i8 %loadBr_453f23, 1
  br i1 %cmpBr_453f23, label %block_.L_453f8f, label %block_453f29

block_453f29:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 453f29	 Bytes: 4
  %loadMem_453f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f29 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f29)
  store %struct.Memory* %call_453f29, %struct.Memory** %MEMORY

  ; Code: movslq -0x5174(%rbp), %rcx	 RIP: 453f2d	 Bytes: 7
  %loadMem_453f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f2d = call %struct.Memory* @routine_movslq_MINUS0x5174__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f2d)
  store %struct.Memory* %call_453f2d, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 453f34	 Bytes: 3
  %loadMem_453f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f34 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f34)
  store %struct.Memory* %call_453f34, %struct.Memory** %MEMORY

  ; Code: cmpl -0x516c(%rbp), %edx	 RIP: 453f37	 Bytes: 6
  %loadMem_453f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f37 = call %struct.Memory* @routine_cmpl_MINUS0x516c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f37)
  store %struct.Memory* %call_453f37, %struct.Memory** %MEMORY

  ; Code: jne .L_453f76	 RIP: 453f3d	 Bytes: 6
  %loadMem_453f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f3d = call %struct.Memory* @routine_jne_.L_453f76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f3d, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_453f3d, %struct.Memory** %MEMORY

  %loadBr_453f3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453f3d = icmp eq i8 %loadBr_453f3d, 1
  br i1 %cmpBr_453f3d, label %block_.L_453f76, label %block_453f43

block_453f43:
  ; Code: movslq -0x5174(%rbp), %rax	 RIP: 453f43	 Bytes: 7
  %loadMem_453f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f43 = call %struct.Memory* @routine_movslq_MINUS0x5174__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f43)
  store %struct.Memory* %call_453f43, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 453f4a	 Bytes: 7
  %loadMem_453f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f4a = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f4a)
  store %struct.Memory* %call_453f4a, %struct.Memory** %MEMORY

  ; Code: cmpl -0x515c(%rbp), %ecx	 RIP: 453f51	 Bytes: 6
  %loadMem_453f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f51 = call %struct.Memory* @routine_cmpl_MINUS0x515c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f51)
  store %struct.Memory* %call_453f51, %struct.Memory** %MEMORY

  ; Code: jle .L_453f71	 RIP: 453f57	 Bytes: 6
  %loadMem_453f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f57 = call %struct.Memory* @routine_jle_.L_453f71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f57, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_453f57, %struct.Memory** %MEMORY

  %loadBr_453f57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453f57 = icmp eq i8 %loadBr_453f57, 1
  br i1 %cmpBr_453f57, label %block_.L_453f71, label %block_453f5d

block_453f5d:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453f5d	 Bytes: 6
  %loadMem_453f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f5d = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f5d)
  store %struct.Memory* %call_453f5d, %struct.Memory** %MEMORY

  ; Code: movslq -0x5174(%rbp), %rcx	 RIP: 453f63	 Bytes: 7
  %loadMem_453f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f63 = call %struct.Memory* @routine_movslq_MINUS0x5174__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f63)
  store %struct.Memory* %call_453f63, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453f6a	 Bytes: 7
  %loadMem_453f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f6a = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f6a)
  store %struct.Memory* %call_453f6a, %struct.Memory** %MEMORY

  ; Code: .L_453f71:	 RIP: 453f71	 Bytes: 0
  br label %block_.L_453f71
block_.L_453f71:

  ; Code: jmpq .L_453f8f	 RIP: 453f71	 Bytes: 5
  %loadMem_453f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f71 = call %struct.Memory* @routine_jmpq_.L_453f8f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f71, i64 30, i64 5)
  store %struct.Memory* %call_453f71, %struct.Memory** %MEMORY

  br label %block_.L_453f8f

  ; Code: .L_453f76:	 RIP: 453f76	 Bytes: 0
block_.L_453f76:

  ; Code: jmpq .L_453f7b	 RIP: 453f76	 Bytes: 5
  %loadMem_453f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f76 = call %struct.Memory* @routine_jmpq_.L_453f7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f76, i64 5, i64 5)
  store %struct.Memory* %call_453f76, %struct.Memory** %MEMORY

  br label %block_.L_453f7b

  ; Code: .L_453f7b:	 RIP: 453f7b	 Bytes: 0
block_.L_453f7b:

  ; Code: movl -0x5174(%rbp), %eax	 RIP: 453f7b	 Bytes: 6
  %loadMem_453f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f7b = call %struct.Memory* @routine_movl_MINUS0x5174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f7b)
  store %struct.Memory* %call_453f7b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453f81	 Bytes: 3
  %loadMem_453f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f81 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f81)
  store %struct.Memory* %call_453f81, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5174(%rbp)	 RIP: 453f84	 Bytes: 6
  %loadMem_453f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f84 = call %struct.Memory* @routine_movl__eax__MINUS0x5174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f84)
  store %struct.Memory* %call_453f84, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453f17	 RIP: 453f8a	 Bytes: 5
  %loadMem_453f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f8a = call %struct.Memory* @routine_jmpq_.L_453f17(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f8a, i64 -115, i64 5)
  store %struct.Memory* %call_453f8a, %struct.Memory** %MEMORY

  br label %block_.L_453f17

  ; Code: .L_453f8f:	 RIP: 453f8f	 Bytes: 0
block_.L_453f8f:

  ; Code: movl -0x5174(%rbp), %eax	 RIP: 453f8f	 Bytes: 6
  %loadMem_453f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f8f = call %struct.Memory* @routine_movl_MINUS0x5174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f8f)
  store %struct.Memory* %call_453f8f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 453f95	 Bytes: 6
  %loadMem_453f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f95 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f95)
  store %struct.Memory* %call_453f95, %struct.Memory** %MEMORY

  ; Code: jne .L_453fe8	 RIP: 453f9b	 Bytes: 6
  %loadMem_453f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453f9b = call %struct.Memory* @routine_jne_.L_453fe8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453f9b, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_453f9b, %struct.Memory** %MEMORY

  %loadBr_453f9b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453f9b = icmp eq i8 %loadBr_453f9b, 1
  br i1 %cmpBr_453f9b, label %block_.L_453fe8, label %block_453fa1

block_453fa1:
  ; Code: cmpl $0x16a, -0x5104(%rbp)	 RIP: 453fa1	 Bytes: 10
  %loadMem_453fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fa1 = call %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fa1)
  store %struct.Memory* %call_453fa1, %struct.Memory** %MEMORY

  ; Code: jge .L_453fe8	 RIP: 453fab	 Bytes: 6
  %loadMem_453fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fab = call %struct.Memory* @routine_jge_.L_453fe8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fab, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_453fab, %struct.Memory** %MEMORY

  %loadBr_453fab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453fab = icmp eq i8 %loadBr_453fab, 1
  br i1 %cmpBr_453fab, label %block_.L_453fe8, label %block_453fb1

block_453fb1:
  ; Code: movl -0x516c(%rbp), %eax	 RIP: 453fb1	 Bytes: 6
  %loadMem_453fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fb1 = call %struct.Memory* @routine_movl_MINUS0x516c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fb1)
  store %struct.Memory* %call_453fb1, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 453fb7	 Bytes: 4
  %loadMem_453fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fb7 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fb7)
  store %struct.Memory* %call_453fb7, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rdx	 RIP: 453fbb	 Bytes: 7
  %loadMem_453fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fbb = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fbb)
  store %struct.Memory* %call_453fbb, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 453fc2	 Bytes: 3
  %loadMem_453fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fc2 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fc2)
  store %struct.Memory* %call_453fc2, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %eax	 RIP: 453fc5	 Bytes: 6
  %loadMem_453fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fc5 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fc5)
  store %struct.Memory* %call_453fc5, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rcx	 RIP: 453fcb	 Bytes: 7
  %loadMem_453fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fcb = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fcb)
  store %struct.Memory* %call_453fcb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 453fd2	 Bytes: 7
  %loadMem_453fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fd2 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fd2)
  store %struct.Memory* %call_453fd2, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 453fd9	 Bytes: 6
  %loadMem_453fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fd9 = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fd9)
  store %struct.Memory* %call_453fd9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 453fdf	 Bytes: 3
  %loadMem_453fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fdf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fdf)
  store %struct.Memory* %call_453fdf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 453fe2	 Bytes: 6
  %loadMem_453fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fe2 = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fe2)
  store %struct.Memory* %call_453fe2, %struct.Memory** %MEMORY

  ; Code: .L_453fe8:	 RIP: 453fe8	 Bytes: 0
  br label %block_.L_453fe8
block_.L_453fe8:

  ; Code: jmpq .L_453fed	 RIP: 453fe8	 Bytes: 5
  %loadMem_453fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fe8 = call %struct.Memory* @routine_jmpq_.L_453fed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fe8, i64 5, i64 5)
  store %struct.Memory* %call_453fe8, %struct.Memory** %MEMORY

  br label %block_.L_453fed

  ; Code: .L_453fed:	 RIP: 453fed	 Bytes: 0
block_.L_453fed:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 453fed	 Bytes: 8
  %loadMem_453fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453fed = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453fed)
  store %struct.Memory* %call_453fed, %struct.Memory** %MEMORY

  ; Code: jle .L_454018	 RIP: 453ff5	 Bytes: 6
  %loadMem_453ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ff5 = call %struct.Memory* @routine_jle_.L_454018(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ff5, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_453ff5, %struct.Memory** %MEMORY

  %loadBr_453ff5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_453ff5 = icmp eq i8 %loadBr_453ff5, 1
  br i1 %cmpBr_453ff5, label %block_.L_454018, label %block_453ffb

block_453ffb:
  ; Code: movq $0x57f7fd, %rdi	 RIP: 453ffb	 Bytes: 10
  %loadMem_453ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_453ffb = call %struct.Memory* @routine_movq__0x57f7fd___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_453ffb)
  store %struct.Memory* %call_453ffb, %struct.Memory** %MEMORY

  ; Code: movl -0x516c(%rbp), %esi	 RIP: 454005	 Bytes: 6
  %loadMem_454005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454005 = call %struct.Memory* @routine_movl_MINUS0x516c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454005)
  store %struct.Memory* %call_454005, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 45400b	 Bytes: 2
  %loadMem_45400b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45400b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45400b)
  store %struct.Memory* %call_45400b, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 45400d	 Bytes: 5
  %loadMem1_45400d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45400d = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45400d, i64 -8797, i64 5, i64 5)
  store %struct.Memory* %call1_45400d, %struct.Memory** %MEMORY

  %loadMem2_45400d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45400d = load i64, i64* %3
  %call2_45400d = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_45400d, %struct.Memory* %loadMem2_45400d)
  store %struct.Memory* %call2_45400d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53d4(%rbp)	 RIP: 454012	 Bytes: 6
  %loadMem_454012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454012 = call %struct.Memory* @routine_movl__eax__MINUS0x53d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454012)
  store %struct.Memory* %call_454012, %struct.Memory** %MEMORY

  ; Code: .L_454018:	 RIP: 454018	 Bytes: 0
  br label %block_.L_454018
block_.L_454018:

  ; Code: jmpq .L_45401d	 RIP: 454018	 Bytes: 5
  %loadMem_454018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454018 = call %struct.Memory* @routine_jmpq_.L_45401d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454018, i64 5, i64 5)
  store %struct.Memory* %call_454018, %struct.Memory** %MEMORY

  br label %block_.L_45401d

  ; Code: .L_45401d:	 RIP: 45401d	 Bytes: 0
block_.L_45401d:

  ; Code: movl -0x5170(%rbp), %eax	 RIP: 45401d	 Bytes: 6
  %loadMem_45401d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45401d = call %struct.Memory* @routine_movl_MINUS0x5170__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45401d)
  store %struct.Memory* %call_45401d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x516c(%rbp), %eax	 RIP: 454023	 Bytes: 6
  %loadMem_454023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454023 = call %struct.Memory* @routine_cmpl_MINUS0x516c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454023)
  store %struct.Memory* %call_454023, %struct.Memory** %MEMORY

  ; Code: je .L_45415b	 RIP: 454029	 Bytes: 6
  %loadMem_454029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454029 = call %struct.Memory* @routine_je_.L_45415b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454029, i8* %BRANCH_TAKEN, i64 306, i64 6, i64 6)
  store %struct.Memory* %call_454029, %struct.Memory** %MEMORY

  %loadBr_454029 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454029 = icmp eq i8 %loadBr_454029, 1
  br i1 %cmpBr_454029, label %block_.L_45415b, label %block_45402f

block_45402f:
  ; Code: movl -0x5170(%rbp), %edi	 RIP: 45402f	 Bytes: 6
  %loadMem_45402f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45402f = call %struct.Memory* @routine_movl_MINUS0x5170__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45402f)
  store %struct.Memory* %call_45402f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 454035	 Bytes: 3
  %loadMem_454035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454035 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454035)
  store %struct.Memory* %call_454035, %struct.Memory** %MEMORY

  ; Code: callq .check_self_atari	 RIP: 454038	 Bytes: 5
  %loadMem1_454038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454038 = call %struct.Memory* @routine_callq_.check_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454038, i64 38024, i64 5, i64 5)
  store %struct.Memory* %call1_454038, %struct.Memory** %MEMORY

  %loadMem2_454038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454038 = load i64, i64* %3
  %call2_454038 = call %struct.Memory* @sub_45d4c0.check_self_atari(%struct.State* %0, i64  %loadPC_454038, %struct.Memory* %loadMem2_454038)
  store %struct.Memory* %call2_454038, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 45403d	 Bytes: 3
  %loadMem_45403d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45403d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45403d)
  store %struct.Memory* %call_45403d, %struct.Memory** %MEMORY

  ; Code: je .L_45415b	 RIP: 454040	 Bytes: 6
  %loadMem_454040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454040 = call %struct.Memory* @routine_je_.L_45415b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454040, i8* %BRANCH_TAKEN, i64 283, i64 6, i64 6)
  store %struct.Memory* %call_454040, %struct.Memory** %MEMORY

  %loadBr_454040 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454040 = icmp eq i8 %loadBr_454040, 1
  br i1 %cmpBr_454040, label %block_.L_45415b, label %block_454046

block_454046:
  ; Code: jmpq .L_45404b	 RIP: 454046	 Bytes: 5
  %loadMem_454046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454046 = call %struct.Memory* @routine_jmpq_.L_45404b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454046, i64 5, i64 5)
  store %struct.Memory* %call_454046, %struct.Memory** %MEMORY

  br label %block_.L_45404b

  ; Code: .L_45404b:	 RIP: 45404b	 Bytes: 0
block_.L_45404b:

  ; Code: movl $0x0, -0x5178(%rbp)	 RIP: 45404b	 Bytes: 10
  %loadMem_45404b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45404b = call %struct.Memory* @routine_movl__0x0__MINUS0x5178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45404b)
  store %struct.Memory* %call_45404b, %struct.Memory** %MEMORY

  ; Code: .L_454055:	 RIP: 454055	 Bytes: 0
  br label %block_.L_454055
block_.L_454055:

  ; Code: movl -0x5178(%rbp), %eax	 RIP: 454055	 Bytes: 6
  %loadMem_454055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454055 = call %struct.Memory* @routine_movl_MINUS0x5178__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454055)
  store %struct.Memory* %call_454055, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 45405b	 Bytes: 6
  %loadMem_45405b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45405b = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45405b)
  store %struct.Memory* %call_45405b, %struct.Memory** %MEMORY

  ; Code: jge .L_4540cd	 RIP: 454061	 Bytes: 6
  %loadMem_454061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454061 = call %struct.Memory* @routine_jge_.L_4540cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454061, i8* %BRANCH_TAKEN, i64 108, i64 6, i64 6)
  store %struct.Memory* %call_454061, %struct.Memory** %MEMORY

  %loadBr_454061 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454061 = icmp eq i8 %loadBr_454061, 1
  br i1 %cmpBr_454061, label %block_.L_4540cd, label %block_454067

block_454067:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 454067	 Bytes: 4
  %loadMem_454067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454067 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454067)
  store %struct.Memory* %call_454067, %struct.Memory** %MEMORY

  ; Code: movslq -0x5178(%rbp), %rcx	 RIP: 45406b	 Bytes: 7
  %loadMem_45406b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45406b = call %struct.Memory* @routine_movslq_MINUS0x5178__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45406b)
  store %struct.Memory* %call_45406b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 454072	 Bytes: 3
  %loadMem_454072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454072 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454072)
  store %struct.Memory* %call_454072, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5170(%rbp), %edx	 RIP: 454075	 Bytes: 6
  %loadMem_454075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454075 = call %struct.Memory* @routine_cmpl_MINUS0x5170__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454075)
  store %struct.Memory* %call_454075, %struct.Memory** %MEMORY

  ; Code: jne .L_4540b4	 RIP: 45407b	 Bytes: 6
  %loadMem_45407b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45407b = call %struct.Memory* @routine_jne_.L_4540b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45407b, i8* %BRANCH_TAKEN, i64 57, i64 6, i64 6)
  store %struct.Memory* %call_45407b, %struct.Memory** %MEMORY

  %loadBr_45407b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45407b = icmp eq i8 %loadBr_45407b, 1
  br i1 %cmpBr_45407b, label %block_.L_4540b4, label %block_454081

block_454081:
  ; Code: movslq -0x5178(%rbp), %rax	 RIP: 454081	 Bytes: 7
  %loadMem_454081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454081 = call %struct.Memory* @routine_movslq_MINUS0x5178__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454081)
  store %struct.Memory* %call_454081, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 454088	 Bytes: 7
  %loadMem_454088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454088 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454088)
  store %struct.Memory* %call_454088, %struct.Memory** %MEMORY

  ; Code: cmpl -0x515c(%rbp), %ecx	 RIP: 45408f	 Bytes: 6
  %loadMem_45408f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45408f = call %struct.Memory* @routine_cmpl_MINUS0x515c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45408f)
  store %struct.Memory* %call_45408f, %struct.Memory** %MEMORY

  ; Code: jle .L_4540af	 RIP: 454095	 Bytes: 6
  %loadMem_454095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454095 = call %struct.Memory* @routine_jle_.L_4540af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454095, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_454095, %struct.Memory** %MEMORY

  %loadBr_454095 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454095 = icmp eq i8 %loadBr_454095, 1
  br i1 %cmpBr_454095, label %block_.L_4540af, label %block_45409b

block_45409b:
  ; Code: movl -0x515c(%rbp), %eax	 RIP: 45409b	 Bytes: 6
  %loadMem_45409b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45409b = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45409b)
  store %struct.Memory* %call_45409b, %struct.Memory** %MEMORY

  ; Code: movslq -0x5178(%rbp), %rcx	 RIP: 4540a1	 Bytes: 7
  %loadMem_4540a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540a1 = call %struct.Memory* @routine_movslq_MINUS0x5178__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540a1)
  store %struct.Memory* %call_4540a1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 4540a8	 Bytes: 7
  %loadMem_4540a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540a8 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540a8)
  store %struct.Memory* %call_4540a8, %struct.Memory** %MEMORY

  ; Code: .L_4540af:	 RIP: 4540af	 Bytes: 0
  br label %block_.L_4540af
block_.L_4540af:

  ; Code: jmpq .L_4540cd	 RIP: 4540af	 Bytes: 5
  %loadMem_4540af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540af = call %struct.Memory* @routine_jmpq_.L_4540cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540af, i64 30, i64 5)
  store %struct.Memory* %call_4540af, %struct.Memory** %MEMORY

  br label %block_.L_4540cd

  ; Code: .L_4540b4:	 RIP: 4540b4	 Bytes: 0
block_.L_4540b4:

  ; Code: jmpq .L_4540b9	 RIP: 4540b4	 Bytes: 5
  %loadMem_4540b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540b4 = call %struct.Memory* @routine_jmpq_.L_4540b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540b4, i64 5, i64 5)
  store %struct.Memory* %call_4540b4, %struct.Memory** %MEMORY

  br label %block_.L_4540b9

  ; Code: .L_4540b9:	 RIP: 4540b9	 Bytes: 0
block_.L_4540b9:

  ; Code: movl -0x5178(%rbp), %eax	 RIP: 4540b9	 Bytes: 6
  %loadMem_4540b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540b9 = call %struct.Memory* @routine_movl_MINUS0x5178__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540b9)
  store %struct.Memory* %call_4540b9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4540bf	 Bytes: 3
  %loadMem_4540bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540bf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540bf)
  store %struct.Memory* %call_4540bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5178(%rbp)	 RIP: 4540c2	 Bytes: 6
  %loadMem_4540c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540c2 = call %struct.Memory* @routine_movl__eax__MINUS0x5178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540c2)
  store %struct.Memory* %call_4540c2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_454055	 RIP: 4540c8	 Bytes: 5
  %loadMem_4540c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540c8 = call %struct.Memory* @routine_jmpq_.L_454055(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540c8, i64 -115, i64 5)
  store %struct.Memory* %call_4540c8, %struct.Memory** %MEMORY

  br label %block_.L_454055

  ; Code: .L_4540cd:	 RIP: 4540cd	 Bytes: 0
block_.L_4540cd:

  ; Code: movl -0x5178(%rbp), %eax	 RIP: 4540cd	 Bytes: 6
  %loadMem_4540cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540cd = call %struct.Memory* @routine_movl_MINUS0x5178__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540cd)
  store %struct.Memory* %call_4540cd, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 4540d3	 Bytes: 6
  %loadMem_4540d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540d3 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540d3)
  store %struct.Memory* %call_4540d3, %struct.Memory** %MEMORY

  ; Code: jne .L_454126	 RIP: 4540d9	 Bytes: 6
  %loadMem_4540d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540d9 = call %struct.Memory* @routine_jne_.L_454126(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540d9, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_4540d9, %struct.Memory** %MEMORY

  %loadBr_4540d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4540d9 = icmp eq i8 %loadBr_4540d9, 1
  br i1 %cmpBr_4540d9, label %block_.L_454126, label %block_4540df

block_4540df:
  ; Code: cmpl $0x16a, -0x5104(%rbp)	 RIP: 4540df	 Bytes: 10
  %loadMem_4540df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540df = call %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540df)
  store %struct.Memory* %call_4540df, %struct.Memory** %MEMORY

  ; Code: jge .L_454126	 RIP: 4540e9	 Bytes: 6
  %loadMem_4540e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540e9 = call %struct.Memory* @routine_jge_.L_454126(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540e9, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4540e9, %struct.Memory** %MEMORY

  %loadBr_4540e9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4540e9 = icmp eq i8 %loadBr_4540e9, 1
  br i1 %cmpBr_4540e9, label %block_.L_454126, label %block_4540ef

block_4540ef:
  ; Code: movl -0x5170(%rbp), %eax	 RIP: 4540ef	 Bytes: 6
  %loadMem_4540ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540ef = call %struct.Memory* @routine_movl_MINUS0x5170__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540ef)
  store %struct.Memory* %call_4540ef, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 4540f5	 Bytes: 4
  %loadMem_4540f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540f5 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540f5)
  store %struct.Memory* %call_4540f5, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rdx	 RIP: 4540f9	 Bytes: 7
  %loadMem_4540f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4540f9 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4540f9)
  store %struct.Memory* %call_4540f9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 454100	 Bytes: 3
  %loadMem_454100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454100 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454100)
  store %struct.Memory* %call_454100, %struct.Memory** %MEMORY

  ; Code: movl -0x515c(%rbp), %eax	 RIP: 454103	 Bytes: 6
  %loadMem_454103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454103 = call %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454103)
  store %struct.Memory* %call_454103, %struct.Memory** %MEMORY

  ; Code: movslq -0x5104(%rbp), %rcx	 RIP: 454109	 Bytes: 7
  %loadMem_454109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454109 = call %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454109)
  store %struct.Memory* %call_454109, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5100(%rbp,%rcx,4)	 RIP: 454110	 Bytes: 7
  %loadMem_454110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454110 = call %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454110)
  store %struct.Memory* %call_454110, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 454117	 Bytes: 6
  %loadMem_454117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454117 = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454117)
  store %struct.Memory* %call_454117, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 45411d	 Bytes: 3
  %loadMem_45411d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45411d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45411d)
  store %struct.Memory* %call_45411d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 454120	 Bytes: 6
  %loadMem_454120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454120 = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454120)
  store %struct.Memory* %call_454120, %struct.Memory** %MEMORY

  ; Code: .L_454126:	 RIP: 454126	 Bytes: 0
  br label %block_.L_454126
block_.L_454126:

  ; Code: jmpq .L_45412b	 RIP: 454126	 Bytes: 5
  %loadMem_454126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454126 = call %struct.Memory* @routine_jmpq_.L_45412b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454126, i64 5, i64 5)
  store %struct.Memory* %call_454126, %struct.Memory** %MEMORY

  br label %block_.L_45412b

  ; Code: .L_45412b:	 RIP: 45412b	 Bytes: 0
block_.L_45412b:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 45412b	 Bytes: 8
  %loadMem_45412b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45412b = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45412b)
  store %struct.Memory* %call_45412b, %struct.Memory** %MEMORY

  ; Code: jle .L_454156	 RIP: 454133	 Bytes: 6
  %loadMem_454133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454133 = call %struct.Memory* @routine_jle_.L_454156(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454133, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_454133, %struct.Memory** %MEMORY

  %loadBr_454133 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454133 = icmp eq i8 %loadBr_454133, 1
  br i1 %cmpBr_454133, label %block_.L_454156, label %block_454139

block_454139:
  ; Code: movq $0x57f7fd, %rdi	 RIP: 454139	 Bytes: 10
  %loadMem_454139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454139 = call %struct.Memory* @routine_movq__0x57f7fd___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454139)
  store %struct.Memory* %call_454139, %struct.Memory** %MEMORY

  ; Code: movl -0x5170(%rbp), %esi	 RIP: 454143	 Bytes: 6
  %loadMem_454143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454143 = call %struct.Memory* @routine_movl_MINUS0x5170__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454143)
  store %struct.Memory* %call_454143, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 454149	 Bytes: 2
  %loadMem_454149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454149 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454149)
  store %struct.Memory* %call_454149, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 45414b	 Bytes: 5
  %loadMem1_45414b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45414b = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45414b, i64 -9115, i64 5, i64 5)
  store %struct.Memory* %call1_45414b, %struct.Memory** %MEMORY

  %loadMem2_45414b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45414b = load i64, i64* %3
  %call2_45414b = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_45414b, %struct.Memory* %loadMem2_45414b)
  store %struct.Memory* %call2_45414b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53d8(%rbp)	 RIP: 454150	 Bytes: 6
  %loadMem_454150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454150 = call %struct.Memory* @routine_movl__eax__MINUS0x53d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454150)
  store %struct.Memory* %call_454150, %struct.Memory** %MEMORY

  ; Code: .L_454156:	 RIP: 454156	 Bytes: 0
  br label %block_.L_454156
block_.L_454156:

  ; Code: jmpq .L_45415b	 RIP: 454156	 Bytes: 5
  %loadMem_454156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454156 = call %struct.Memory* @routine_jmpq_.L_45415b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454156, i64 5, i64 5)
  store %struct.Memory* %call_454156, %struct.Memory** %MEMORY

  br label %block_.L_45415b

  ; Code: .L_45415b:	 RIP: 45415b	 Bytes: 0
block_.L_45415b:

  ; Code: jmpq .L_454160	 RIP: 45415b	 Bytes: 5
  %loadMem_45415b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45415b = call %struct.Memory* @routine_jmpq_.L_454160(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45415b, i64 5, i64 5)
  store %struct.Memory* %call_45415b, %struct.Memory** %MEMORY

  br label %block_.L_454160

  ; Code: .L_454160:	 RIP: 454160	 Bytes: 0
block_.L_454160:

  ; Code: jmpq .L_454165	 RIP: 454160	 Bytes: 5
  %loadMem_454160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454160 = call %struct.Memory* @routine_jmpq_.L_454165(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454160, i64 5, i64 5)
  store %struct.Memory* %call_454160, %struct.Memory** %MEMORY

  br label %block_.L_454165

  ; Code: .L_454165:	 RIP: 454165	 Bytes: 0
block_.L_454165:

  ; Code: movl -0x5134(%rbp), %eax	 RIP: 454165	 Bytes: 6
  %loadMem_454165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454165 = call %struct.Memory* @routine_movl_MINUS0x5134__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454165)
  store %struct.Memory* %call_454165, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 45416b	 Bytes: 3
  %loadMem_45416b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45416b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45416b)
  store %struct.Memory* %call_45416b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5134(%rbp)	 RIP: 45416e	 Bytes: 6
  %loadMem_45416e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45416e = call %struct.Memory* @routine_movl__eax__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45416e)
  store %struct.Memory* %call_45416e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_453e49	 RIP: 454174	 Bytes: 5
  %loadMem_454174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454174 = call %struct.Memory* @routine_jmpq_.L_453e49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454174, i64 -811, i64 5)
  store %struct.Memory* %call_454174, %struct.Memory** %MEMORY

  br label %block_.L_453e49

  ; Code: .L_454179:	 RIP: 454179	 Bytes: 0
block_.L_454179:

  ; Code: jmpq .L_45417e	 RIP: 454179	 Bytes: 5
  %loadMem_454179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454179 = call %struct.Memory* @routine_jmpq_.L_45417e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454179, i64 5, i64 5)
  store %struct.Memory* %call_454179, %struct.Memory** %MEMORY

  br label %block_.L_45417e

  ; Code: .L_45417e:	 RIP: 45417e	 Bytes: 0
block_.L_45417e:

  ; Code: jmpq .L_454183	 RIP: 45417e	 Bytes: 5
  %loadMem_45417e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45417e = call %struct.Memory* @routine_jmpq_.L_454183(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45417e, i64 5, i64 5)
  store %struct.Memory* %call_45417e, %struct.Memory** %MEMORY

  br label %block_.L_454183

  ; Code: .L_454183:	 RIP: 454183	 Bytes: 0
block_.L_454183:

  ; Code: jmpq .L_454188	 RIP: 454183	 Bytes: 5
  %loadMem_454183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454183 = call %struct.Memory* @routine_jmpq_.L_454188(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454183, i64 5, i64 5)
  store %struct.Memory* %call_454183, %struct.Memory** %MEMORY

  br label %block_.L_454188

  ; Code: .L_454188:	 RIP: 454188	 Bytes: 0
block_.L_454188:

  ; Code: jmpq .L_45418d	 RIP: 454188	 Bytes: 5
  %loadMem_454188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454188 = call %struct.Memory* @routine_jmpq_.L_45418d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454188, i64 5, i64 5)
  store %struct.Memory* %call_454188, %struct.Memory** %MEMORY

  br label %block_.L_45418d

  ; Code: .L_45418d:	 RIP: 45418d	 Bytes: 0
block_.L_45418d:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 45418d	 Bytes: 3
  %loadMem_45418d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45418d = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45418d)
  store %struct.Memory* %call_45418d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454190	 Bytes: 3
  %loadMem_454190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454190 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454190)
  store %struct.Memory* %call_454190, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 454193	 Bytes: 3
  %loadMem_454193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454193 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454193)
  store %struct.Memory* %call_454193, %struct.Memory** %MEMORY

  ; Code: jmpq .L_45368b	 RIP: 454196	 Bytes: 5
  %loadMem_454196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454196 = call %struct.Memory* @routine_jmpq_.L_45368b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454196, i64 -2827, i64 5)
  store %struct.Memory* %call_454196, %struct.Memory** %MEMORY

  br label %block_.L_45368b

  ; Code: .L_45419b:	 RIP: 45419b	 Bytes: 0
block_.L_45419b:

  ; Code: movq -0x5110(%rbp), %rax	 RIP: 45419b	 Bytes: 7
  %loadMem_45419b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45419b = call %struct.Memory* @routine_movq_MINUS0x5110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45419b)
  store %struct.Memory* %call_45419b, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 4541a2	 Bytes: 8
  %loadMem_4541a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541a2 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541a2)
  store %struct.Memory* %call_4541a2, %struct.Memory** %MEMORY

  ; Code: movl -0x5114(%rbp), %ecx	 RIP: 4541aa	 Bytes: 6
  %loadMem_4541aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541aa = call %struct.Memory* @routine_movl_MINUS0x5114__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541aa)
  store %struct.Memory* %call_4541aa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 4541b0	 Bytes: 7
  %loadMem_4541b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541b0 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541b0)
  store %struct.Memory* %call_4541b0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x40(%rbp)	 RIP: 4541b7	 Bytes: 7
  %loadMem_4541b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541b7 = call %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541b7)
  store %struct.Memory* %call_4541b7, %struct.Memory** %MEMORY

  ; Code: .L_4541be:	 RIP: 4541be	 Bytes: 0
  br label %block_.L_4541be
block_.L_4541be:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 4541be	 Bytes: 3
  %loadMem_4541be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541be = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541be)
  store %struct.Memory* %call_4541be, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 4541c1	 Bytes: 6
  %loadMem_4541c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541c1 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541c1)
  store %struct.Memory* %call_4541c1, %struct.Memory** %MEMORY

  ; Code: jge .L_4545ac	 RIP: 4541c7	 Bytes: 6
  %loadMem_4541c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541c7 = call %struct.Memory* @routine_jge_.L_4545ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541c7, i8* %BRANCH_TAKEN, i64 997, i64 6, i64 6)
  store %struct.Memory* %call_4541c7, %struct.Memory** %MEMORY

  %loadBr_4541c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4541c7 = icmp eq i8 %loadBr_4541c7, 1
  br i1 %cmpBr_4541c7, label %block_.L_4545ac, label %block_4541cd

block_4541cd:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 4541cd	 Bytes: 4
  %loadMem_4541cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541cd = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541cd)
  store %struct.Memory* %call_4541cd, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rcx	 RIP: 4541d1	 Bytes: 4
  %loadMem_4541d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541d1 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541d1)
  store %struct.Memory* %call_4541d1, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4541d5	 Bytes: 3
  %loadMem_4541d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541d5 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541d5)
  store %struct.Memory* %call_4541d5, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x517c(%rbp)	 RIP: 4541d8	 Bytes: 6
  %loadMem_4541d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541d8 = call %struct.Memory* @routine_movl__edx__MINUS0x517c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541d8)
  store %struct.Memory* %call_4541d8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5180(%rbp)	 RIP: 4541de	 Bytes: 10
  %loadMem_4541de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541de = call %struct.Memory* @routine_movl__0x0__MINUS0x5180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541de)
  store %struct.Memory* %call_4541de, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5134(%rbp)	 RIP: 4541e8	 Bytes: 10
  %loadMem_4541e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541e8)
  store %struct.Memory* %call_4541e8, %struct.Memory** %MEMORY

  ; Code: .L_4541f2:	 RIP: 4541f2	 Bytes: 0
  br label %block_.L_4541f2
block_.L_4541f2:

  ; Code: cmpl $0x4, -0x5134(%rbp)	 RIP: 4541f2	 Bytes: 7
  %loadMem_4541f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541f2 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541f2)
  store %struct.Memory* %call_4541f2, %struct.Memory** %MEMORY

  ; Code: jge .L_454492	 RIP: 4541f9	 Bytes: 6
  %loadMem_4541f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541f9 = call %struct.Memory* @routine_jge_.L_454492(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541f9, i8* %BRANCH_TAKEN, i64 665, i64 6, i64 6)
  store %struct.Memory* %call_4541f9, %struct.Memory** %MEMORY

  %loadBr_4541f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4541f9 = icmp eq i8 %loadBr_4541f9, 1
  br i1 %cmpBr_4541f9, label %block_.L_454492, label %block_4541ff

block_4541ff:
  ; Code: movl -0x517c(%rbp), %eax	 RIP: 4541ff	 Bytes: 6
  %loadMem_4541ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4541ff = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4541ff)
  store %struct.Memory* %call_4541ff, %struct.Memory** %MEMORY

  ; Code: movslq -0x5134(%rbp), %rcx	 RIP: 454205	 Bytes: 7
  %loadMem_454205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454205 = call %struct.Memory* @routine_movslq_MINUS0x5134__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454205)
  store %struct.Memory* %call_454205, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 45420c	 Bytes: 7
  %loadMem_45420c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45420c = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45420c)
  store %struct.Memory* %call_45420c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5184(%rbp)	 RIP: 454213	 Bytes: 6
  %loadMem_454213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454213 = call %struct.Memory* @routine_movl__eax__MINUS0x5184__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454213)
  store %struct.Memory* %call_454213, %struct.Memory** %MEMORY

  ; Code: movslq -0x5184(%rbp), %rcx	 RIP: 454219	 Bytes: 7
  %loadMem_454219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454219 = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454219)
  store %struct.Memory* %call_454219, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 454220	 Bytes: 8
  %loadMem_454220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454220 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454220)
  store %struct.Memory* %call_454220, %struct.Memory** %MEMORY

  ; Code: cmpl -0x38(%rbp), %eax	 RIP: 454228	 Bytes: 3
  %loadMem_454228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454228 = call %struct.Memory* @routine_cmpl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454228)
  store %struct.Memory* %call_454228, %struct.Memory** %MEMORY

  ; Code: jne .L_4543fb	 RIP: 45422b	 Bytes: 6
  %loadMem_45422b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45422b = call %struct.Memory* @routine_jne_.L_4543fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45422b, i8* %BRANCH_TAKEN, i64 464, i64 6, i64 6)
  store %struct.Memory* %call_45422b, %struct.Memory** %MEMORY

  %loadBr_45422b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45422b = icmp eq i8 %loadBr_45422b, 1
  br i1 %cmpBr_45422b, label %block_.L_4543fb, label %block_454231

block_454231:
  ; Code: movl $0x1, -0x5180(%rbp)	 RIP: 454231	 Bytes: 10
  %loadMem_454231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454231 = call %struct.Memory* @routine_movl__0x1__MINUS0x5180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454231)
  store %struct.Memory* %call_454231, %struct.Memory** %MEMORY

  ; Code: movslq -0x40(%rbp), %rax	 RIP: 45423b	 Bytes: 4
  %loadMem_45423b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45423b = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45423b)
  store %struct.Memory* %call_45423b, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 45423f	 Bytes: 7
  %loadMem_45423f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45423f = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45423f)
  store %struct.Memory* %call_45423f, %struct.Memory** %MEMORY

  ; Code: subl $0x96, %ecx	 RIP: 454246	 Bytes: 6
  %loadMem_454246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454246 = call %struct.Memory* @routine_subl__0x96___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454246)
  store %struct.Memory* %call_454246, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 45424c	 Bytes: 7
  %loadMem_45424c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45424c = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45424c)
  store %struct.Memory* %call_45424c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 454253	 Bytes: 8
  %loadMem_454253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454253 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454253)
  store %struct.Memory* %call_454253, %struct.Memory** %MEMORY

  ; Code: jle .L_45427e	 RIP: 45425b	 Bytes: 6
  %loadMem_45425b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45425b = call %struct.Memory* @routine_jle_.L_45427e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45425b, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_45425b, %struct.Memory** %MEMORY

  %loadBr_45425b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45425b = icmp eq i8 %loadBr_45425b, 1
  br i1 %cmpBr_45425b, label %block_.L_45427e, label %block_454261

block_454261:
  ; Code: movq $0x57f81b, %rdi	 RIP: 454261	 Bytes: 10
  %loadMem_454261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454261 = call %struct.Memory* @routine_movq__0x57f81b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454261)
  store %struct.Memory* %call_454261, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 45426b	 Bytes: 6
  %loadMem_45426b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45426b = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45426b)
  store %struct.Memory* %call_45426b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 454271	 Bytes: 2
  %loadMem_454271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454271 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454271)
  store %struct.Memory* %call_454271, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 454273	 Bytes: 5
  %loadMem1_454273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454273 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454273, i64 -9411, i64 5, i64 5)
  store %struct.Memory* %call1_454273, %struct.Memory** %MEMORY

  %loadMem2_454273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454273 = load i64, i64* %3
  %call2_454273 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_454273, %struct.Memory* %loadMem2_454273)
  store %struct.Memory* %call2_454273, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53dc(%rbp)	 RIP: 454278	 Bytes: 6
  %loadMem_454278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454278 = call %struct.Memory* @routine_movl__eax__MINUS0x53dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454278)
  store %struct.Memory* %call_454278, %struct.Memory** %MEMORY

  ; Code: .L_45427e:	 RIP: 45427e	 Bytes: 0
  br label %block_.L_45427e
block_.L_45427e:

  ; Code: movl -0x5184(%rbp), %edi	 RIP: 45427e	 Bytes: 6
  %loadMem_45427e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45427e = call %struct.Memory* @routine_movl_MINUS0x5184__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45427e)
  store %struct.Memory* %call_45427e, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 454284	 Bytes: 5
  %loadMem1_454284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454284 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454284, i64 -281348, i64 5, i64 5)
  store %struct.Memory* %call1_454284, %struct.Memory** %MEMORY

  %loadMem2_454284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454284 = load i64, i64* %3
  %call2_454284 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_454284, %struct.Memory* %loadMem2_454284)
  store %struct.Memory* %call2_454284, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 454289	 Bytes: 3
  %loadMem_454289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454289 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454289)
  store %struct.Memory* %call_454289, %struct.Memory** %MEMORY

  ; Code: jg .L_4543f6	 RIP: 45428c	 Bytes: 6
  %loadMem_45428c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45428c = call %struct.Memory* @routine_jg_.L_4543f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45428c, i8* %BRANCH_TAKEN, i64 362, i64 6, i64 6)
  store %struct.Memory* %call_45428c, %struct.Memory** %MEMORY

  %loadBr_45428c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45428c = icmp eq i8 %loadBr_45428c, 1
  br i1 %cmpBr_45428c, label %block_.L_4543f6, label %block_454292

block_454292:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 454292	 Bytes: 4
  %loadMem_454292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454292 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454292)
  store %struct.Memory* %call_454292, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 454296	 Bytes: 7
  %loadMem_454296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454296 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454296)
  store %struct.Memory* %call_454296, %struct.Memory** %MEMORY

  ; Code: subl $0xc8, %ecx	 RIP: 45429d	 Bytes: 6
  %loadMem_45429d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45429d = call %struct.Memory* @routine_subl__0xc8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45429d)
  store %struct.Memory* %call_45429d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 4542a3	 Bytes: 7
  %loadMem_4542a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542a3 = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542a3)
  store %struct.Memory* %call_4542a3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4542aa	 Bytes: 8
  %loadMem_4542aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542aa = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542aa)
  store %struct.Memory* %call_4542aa, %struct.Memory** %MEMORY

  ; Code: jle .L_4542d5	 RIP: 4542b2	 Bytes: 6
  %loadMem_4542b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542b2 = call %struct.Memory* @routine_jle_.L_4542d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542b2, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_4542b2, %struct.Memory** %MEMORY

  %loadBr_4542b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4542b2 = icmp eq i8 %loadBr_4542b2, 1
  br i1 %cmpBr_4542b2, label %block_.L_4542d5, label %block_4542b8

block_4542b8:
  ; Code: movq $0x57f844, %rdi	 RIP: 4542b8	 Bytes: 10
  %loadMem_4542b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542b8 = call %struct.Memory* @routine_movq__0x57f844___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542b8)
  store %struct.Memory* %call_4542b8, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 4542c2	 Bytes: 6
  %loadMem_4542c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542c2 = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542c2)
  store %struct.Memory* %call_4542c2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4542c8	 Bytes: 2
  %loadMem_4542c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542c8 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542c8)
  store %struct.Memory* %call_4542c8, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4542ca	 Bytes: 5
  %loadMem1_4542ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4542ca = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4542ca, i64 -9498, i64 5, i64 5)
  store %struct.Memory* %call1_4542ca, %struct.Memory** %MEMORY

  %loadMem2_4542ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4542ca = load i64, i64* %3
  %call2_4542ca = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4542ca, %struct.Memory* %loadMem2_4542ca)
  store %struct.Memory* %call2_4542ca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53e0(%rbp)	 RIP: 4542cf	 Bytes: 6
  %loadMem_4542cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542cf = call %struct.Memory* @routine_movl__eax__MINUS0x53e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542cf)
  store %struct.Memory* %call_4542cf, %struct.Memory** %MEMORY

  ; Code: .L_4542d5:	 RIP: 4542d5	 Bytes: 0
  br label %block_.L_4542d5
block_.L_4542d5:

  ; Code: movslq -0x517c(%rbp), %rax	 RIP: 4542d5	 Bytes: 7
  %loadMem_4542d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542d5 = call %struct.Memory* @routine_movslq_MINUS0x517c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542d5)
  store %struct.Memory* %call_4542d5, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 4542dc	 Bytes: 7
  %loadMem_4542dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542dc = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542dc)
  store %struct.Memory* %call_4542dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x517c(%rbp), %rax	 RIP: 4542e3	 Bytes: 7
  %loadMem_4542e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542e3 = call %struct.Memory* @routine_movslq_MINUS0x517c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542e3)
  store %struct.Memory* %call_4542e3, %struct.Memory** %MEMORY

  ; Code: subl -0x1f88(%rbp,%rax,4), %ecx	 RIP: 4542ea	 Bytes: 7
  %loadMem_4542ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542ea = call %struct.Memory* @routine_subl_MINUS0x1f88__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542ea)
  store %struct.Memory* %call_4542ea, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1f4, %ecx	 RIP: 4542f1	 Bytes: 6
  %loadMem_4542f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542f1 = call %struct.Memory* @routine_cmpl__0x1f4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542f1)
  store %struct.Memory* %call_4542f1, %struct.Memory** %MEMORY

  ; Code: jle .L_454325	 RIP: 4542f7	 Bytes: 6
  %loadMem_4542f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542f7 = call %struct.Memory* @routine_jle_.L_454325(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542f7, i8* %BRANCH_TAKEN, i64 46, i64 6, i64 6)
  store %struct.Memory* %call_4542f7, %struct.Memory** %MEMORY

  %loadBr_4542f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4542f7 = icmp eq i8 %loadBr_4542f7, 1
  br i1 %cmpBr_4542f7, label %block_.L_454325, label %block_4542fd

block_4542fd:
  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 4542fd	 Bytes: 7
  %loadMem_4542fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4542fd = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4542fd)
  store %struct.Memory* %call_4542fd, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 454304	 Bytes: 7
  %loadMem_454304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454304 = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454304)
  store %struct.Memory* %call_454304, %struct.Memory** %MEMORY

  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 45430b	 Bytes: 7
  %loadMem_45430b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45430b = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45430b)
  store %struct.Memory* %call_45430b, %struct.Memory** %MEMORY

  ; Code: subl -0x1f88(%rbp,%rax,4), %ecx	 RIP: 454312	 Bytes: 7
  %loadMem_454312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454312 = call %struct.Memory* @routine_subl_MINUS0x1f88__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454312)
  store %struct.Memory* %call_454312, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1f4, %ecx	 RIP: 454319	 Bytes: 6
  %loadMem_454319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454319 = call %struct.Memory* @routine_cmpl__0x1f4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454319)
  store %struct.Memory* %call_454319, %struct.Memory** %MEMORY

  ; Code: jg .L_4543f1	 RIP: 45431f	 Bytes: 6
  %loadMem_45431f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45431f = call %struct.Memory* @routine_jg_.L_4543f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45431f, i8* %BRANCH_TAKEN, i64 210, i64 6, i64 6)
  store %struct.Memory* %call_45431f, %struct.Memory** %MEMORY

  %loadBr_45431f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45431f = icmp eq i8 %loadBr_45431f, 1
  br i1 %cmpBr_45431f, label %block_.L_4543f1, label %block_.L_454325

  ; Code: .L_454325:	 RIP: 454325	 Bytes: 0
block_.L_454325:

  ; Code: movslq -0x517c(%rbp), %rax	 RIP: 454325	 Bytes: 7
  %loadMem_454325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454325 = call %struct.Memory* @routine_movslq_MINUS0x517c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454325)
  store %struct.Memory* %call_454325, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 45432c	 Bytes: 7
  %loadMem_45432c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45432c = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45432c)
  store %struct.Memory* %call_45432c, %struct.Memory** %MEMORY

  ; Code: movslq -0x517c(%rbp), %rax	 RIP: 454333	 Bytes: 7
  %loadMem_454333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454333 = call %struct.Memory* @routine_movslq_MINUS0x517c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454333)
  store %struct.Memory* %call_454333, %struct.Memory** %MEMORY

  ; Code: subl -0x4510(%rbp,%rax,4), %ecx	 RIP: 45433a	 Bytes: 7
  %loadMem_45433a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45433a = call %struct.Memory* @routine_subl_MINUS0x4510__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45433a)
  store %struct.Memory* %call_45433a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1f4, %ecx	 RIP: 454341	 Bytes: 6
  %loadMem_454341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454341 = call %struct.Memory* @routine_cmpl__0x1f4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454341)
  store %struct.Memory* %call_454341, %struct.Memory** %MEMORY

  ; Code: jle .L_454375	 RIP: 454347	 Bytes: 6
  %loadMem_454347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454347 = call %struct.Memory* @routine_jle_.L_454375(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454347, i8* %BRANCH_TAKEN, i64 46, i64 6, i64 6)
  store %struct.Memory* %call_454347, %struct.Memory** %MEMORY

  %loadBr_454347 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454347 = icmp eq i8 %loadBr_454347, 1
  br i1 %cmpBr_454347, label %block_.L_454375, label %block_45434d

block_45434d:
  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 45434d	 Bytes: 7
  %loadMem_45434d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45434d = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45434d)
  store %struct.Memory* %call_45434d, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 454354	 Bytes: 7
  %loadMem_454354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454354 = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454354)
  store %struct.Memory* %call_454354, %struct.Memory** %MEMORY

  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 45435b	 Bytes: 7
  %loadMem_45435b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45435b = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45435b)
  store %struct.Memory* %call_45435b, %struct.Memory** %MEMORY

  ; Code: subl -0x4510(%rbp,%rax,4), %ecx	 RIP: 454362	 Bytes: 7
  %loadMem_454362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454362 = call %struct.Memory* @routine_subl_MINUS0x4510__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454362)
  store %struct.Memory* %call_454362, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1f4, %ecx	 RIP: 454369	 Bytes: 6
  %loadMem_454369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454369 = call %struct.Memory* @routine_cmpl__0x1f4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454369)
  store %struct.Memory* %call_454369, %struct.Memory** %MEMORY

  ; Code: jg .L_4543f1	 RIP: 45436f	 Bytes: 6
  %loadMem_45436f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45436f = call %struct.Memory* @routine_jg_.L_4543f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45436f, i8* %BRANCH_TAKEN, i64 130, i64 6, i64 6)
  store %struct.Memory* %call_45436f, %struct.Memory** %MEMORY

  %loadBr_45436f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45436f = icmp eq i8 %loadBr_45436f, 1
  br i1 %cmpBr_45436f, label %block_.L_4543f1, label %block_.L_454375

  ; Code: .L_454375:	 RIP: 454375	 Bytes: 0
block_.L_454375:

  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 454375	 Bytes: 7
  %loadMem_454375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454375 = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454375)
  store %struct.Memory* %call_454375, %struct.Memory** %MEMORY

  ; Code: movl -0x25c8(%rbp,%rax,4), %ecx	 RIP: 45437c	 Bytes: 7
  %loadMem_45437c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45437c = call %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45437c)
  store %struct.Memory* %call_45437c, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rax	 RIP: 454383	 Bytes: 4
  %loadMem_454383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454383 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454383)
  store %struct.Memory* %call_454383, %struct.Memory** %MEMORY

  ; Code: cmpl (%rax), %ecx	 RIP: 454387	 Bytes: 2
  %loadMem_454387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454387 = call %struct.Memory* @routine_cmpl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454387)
  store %struct.Memory* %call_454387, %struct.Memory** %MEMORY

  ; Code: jge .L_4543f1	 RIP: 454389	 Bytes: 6
  %loadMem_454389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454389 = call %struct.Memory* @routine_jge_.L_4543f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454389, i8* %BRANCH_TAKEN, i64 104, i64 6, i64 6)
  store %struct.Memory* %call_454389, %struct.Memory** %MEMORY

  %loadBr_454389 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454389 = icmp eq i8 %loadBr_454389, 1
  br i1 %cmpBr_454389, label %block_.L_4543f1, label %block_45438f

block_45438f:
  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 45438f	 Bytes: 7
  %loadMem_45438f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45438f = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45438f)
  store %struct.Memory* %call_45438f, %struct.Memory** %MEMORY

  ; Code: movl -0x4b50(%rbp,%rax,4), %ecx	 RIP: 454396	 Bytes: 7
  %loadMem_454396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454396 = call %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454396)
  store %struct.Memory* %call_454396, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rax	 RIP: 45439d	 Bytes: 4
  %loadMem_45439d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45439d = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45439d)
  store %struct.Memory* %call_45439d, %struct.Memory** %MEMORY

  ; Code: cmpl (%rax), %ecx	 RIP: 4543a1	 Bytes: 2
  %loadMem_4543a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543a1 = call %struct.Memory* @routine_cmpl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543a1)
  store %struct.Memory* %call_4543a1, %struct.Memory** %MEMORY

  ; Code: jge .L_4543f1	 RIP: 4543a3	 Bytes: 6
  %loadMem_4543a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543a3 = call %struct.Memory* @routine_jge_.L_4543f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543a3, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_4543a3, %struct.Memory** %MEMORY

  %loadBr_4543a3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4543a3 = icmp eq i8 %loadBr_4543a3, 1
  br i1 %cmpBr_4543a3, label %block_.L_4543f1, label %block_4543a9

block_4543a9:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 4543a9	 Bytes: 4
  %loadMem_4543a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543a9 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543a9)
  store %struct.Memory* %call_4543a9, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 4543ad	 Bytes: 7
  %loadMem_4543ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543ad = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543ad)
  store %struct.Memory* %call_4543ad, %struct.Memory** %MEMORY

  ; Code: subl $0x2bc, %ecx	 RIP: 4543b4	 Bytes: 6
  %loadMem_4543b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543b4 = call %struct.Memory* @routine_subl__0x2bc___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543b4)
  store %struct.Memory* %call_4543b4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 4543ba	 Bytes: 7
  %loadMem_4543ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543ba = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543ba)
  store %struct.Memory* %call_4543ba, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4543c1	 Bytes: 8
  %loadMem_4543c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543c1 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543c1)
  store %struct.Memory* %call_4543c1, %struct.Memory** %MEMORY

  ; Code: jle .L_4543ec	 RIP: 4543c9	 Bytes: 6
  %loadMem_4543c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543c9 = call %struct.Memory* @routine_jle_.L_4543ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543c9, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_4543c9, %struct.Memory** %MEMORY

  %loadBr_4543c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4543c9 = icmp eq i8 %loadBr_4543c9, 1
  br i1 %cmpBr_4543c9, label %block_.L_4543ec, label %block_4543cf

block_4543cf:
  ; Code: movq $0x57f888, %rdi	 RIP: 4543cf	 Bytes: 10
  %loadMem_4543cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543cf = call %struct.Memory* @routine_movq__0x57f888___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543cf)
  store %struct.Memory* %call_4543cf, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 4543d9	 Bytes: 6
  %loadMem_4543d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543d9 = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543d9)
  store %struct.Memory* %call_4543d9, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4543df	 Bytes: 2
  %loadMem_4543df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543df = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543df)
  store %struct.Memory* %call_4543df, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4543e1	 Bytes: 5
  %loadMem1_4543e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4543e1 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4543e1, i64 -9777, i64 5, i64 5)
  store %struct.Memory* %call1_4543e1, %struct.Memory** %MEMORY

  %loadMem2_4543e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4543e1 = load i64, i64* %3
  %call2_4543e1 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4543e1, %struct.Memory* %loadMem2_4543e1)
  store %struct.Memory* %call2_4543e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53e4(%rbp)	 RIP: 4543e6	 Bytes: 6
  %loadMem_4543e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543e6 = call %struct.Memory* @routine_movl__eax__MINUS0x53e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543e6)
  store %struct.Memory* %call_4543e6, %struct.Memory** %MEMORY

  ; Code: .L_4543ec:	 RIP: 4543ec	 Bytes: 0
  br label %block_.L_4543ec
block_.L_4543ec:

  ; Code: jmpq .L_4543f1	 RIP: 4543ec	 Bytes: 5
  %loadMem_4543ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543ec = call %struct.Memory* @routine_jmpq_.L_4543f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543ec, i64 5, i64 5)
  store %struct.Memory* %call_4543ec, %struct.Memory** %MEMORY

  br label %block_.L_4543f1

  ; Code: .L_4543f1:	 RIP: 4543f1	 Bytes: 0
block_.L_4543f1:

  ; Code: jmpq .L_4543f6	 RIP: 4543f1	 Bytes: 5
  %loadMem_4543f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543f1 = call %struct.Memory* @routine_jmpq_.L_4543f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543f1, i64 5, i64 5)
  store %struct.Memory* %call_4543f1, %struct.Memory** %MEMORY

  br label %block_.L_4543f6

  ; Code: .L_4543f6:	 RIP: 4543f6	 Bytes: 0
block_.L_4543f6:

  ; Code: jmpq .L_454479	 RIP: 4543f6	 Bytes: 5
  %loadMem_4543f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543f6 = call %struct.Memory* @routine_jmpq_.L_454479(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543f6, i64 131, i64 5)
  store %struct.Memory* %call_4543f6, %struct.Memory** %MEMORY

  br label %block_.L_454479

  ; Code: .L_4543fb:	 RIP: 4543fb	 Bytes: 0
block_.L_4543fb:

  ; Code: movslq -0x5184(%rbp), %rax	 RIP: 4543fb	 Bytes: 7
  %loadMem_4543fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4543fb = call %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4543fb)
  store %struct.Memory* %call_4543fb, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 454402	 Bytes: 8
  %loadMem_454402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454402 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454402)
  store %struct.Memory* %call_454402, %struct.Memory** %MEMORY

  ; Code: cmpl -0x34(%rbp), %ecx	 RIP: 45440a	 Bytes: 3
  %loadMem_45440a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45440a = call %struct.Memory* @routine_cmpl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45440a)
  store %struct.Memory* %call_45440a, %struct.Memory** %MEMORY

  ; Code: jne .L_454474	 RIP: 45440d	 Bytes: 6
  %loadMem_45440d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45440d = call %struct.Memory* @routine_jne_.L_454474(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45440d, i8* %BRANCH_TAKEN, i64 103, i64 6, i64 6)
  store %struct.Memory* %call_45440d, %struct.Memory** %MEMORY

  %loadBr_45440d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45440d = icmp eq i8 %loadBr_45440d, 1
  br i1 %cmpBr_45440d, label %block_.L_454474, label %block_454413

block_454413:
  ; Code: movl -0x5184(%rbp), %edi	 RIP: 454413	 Bytes: 6
  %loadMem_454413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454413 = call %struct.Memory* @routine_movl_MINUS0x5184__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454413)
  store %struct.Memory* %call_454413, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 454419	 Bytes: 5
  %loadMem1_454419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454419 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454419, i64 -281753, i64 5, i64 5)
  store %struct.Memory* %call1_454419, %struct.Memory** %MEMORY

  %loadMem2_454419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454419 = load i64, i64* %3
  %call2_454419 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_454419, %struct.Memory* %loadMem2_454419)
  store %struct.Memory* %call2_454419, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 45441e	 Bytes: 3
  %loadMem_45441e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45441e = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45441e)
  store %struct.Memory* %call_45441e, %struct.Memory** %MEMORY

  ; Code: jg .L_45446f	 RIP: 454421	 Bytes: 6
  %loadMem_454421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454421 = call %struct.Memory* @routine_jg_.L_45446f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454421, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_454421, %struct.Memory** %MEMORY

  %loadBr_454421 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454421 = icmp eq i8 %loadBr_454421, 1
  br i1 %cmpBr_454421, label %block_.L_45446f, label %block_454427

block_454427:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 454427	 Bytes: 4
  %loadMem_454427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454427 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454427)
  store %struct.Memory* %call_454427, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 45442b	 Bytes: 7
  %loadMem_45442b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45442b = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45442b)
  store %struct.Memory* %call_45442b, %struct.Memory** %MEMORY

  ; Code: subl $0xc8, %ecx	 RIP: 454432	 Bytes: 6
  %loadMem_454432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454432 = call %struct.Memory* @routine_subl__0xc8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454432)
  store %struct.Memory* %call_454432, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 454438	 Bytes: 7
  %loadMem_454438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454438 = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454438)
  store %struct.Memory* %call_454438, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 45443f	 Bytes: 8
  %loadMem_45443f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45443f = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45443f)
  store %struct.Memory* %call_45443f, %struct.Memory** %MEMORY

  ; Code: jle .L_45446a	 RIP: 454447	 Bytes: 6
  %loadMem_454447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454447 = call %struct.Memory* @routine_jle_.L_45446a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454447, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_454447, %struct.Memory** %MEMORY

  %loadBr_454447 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454447 = icmp eq i8 %loadBr_454447, 1
  br i1 %cmpBr_454447, label %block_.L_45446a, label %block_45444d

block_45444d:
  ; Code: movq $0x57f8c7, %rdi	 RIP: 45444d	 Bytes: 10
  %loadMem_45444d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45444d = call %struct.Memory* @routine_movq__0x57f8c7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45444d)
  store %struct.Memory* %call_45444d, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 454457	 Bytes: 6
  %loadMem_454457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454457 = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454457)
  store %struct.Memory* %call_454457, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 45445d	 Bytes: 2
  %loadMem_45445d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45445d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45445d)
  store %struct.Memory* %call_45445d, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 45445f	 Bytes: 5
  %loadMem1_45445f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45445f = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45445f, i64 -9903, i64 5, i64 5)
  store %struct.Memory* %call1_45445f, %struct.Memory** %MEMORY

  %loadMem2_45445f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45445f = load i64, i64* %3
  %call2_45445f = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_45445f, %struct.Memory* %loadMem2_45445f)
  store %struct.Memory* %call2_45445f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53e8(%rbp)	 RIP: 454464	 Bytes: 6
  %loadMem_454464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454464 = call %struct.Memory* @routine_movl__eax__MINUS0x53e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454464)
  store %struct.Memory* %call_454464, %struct.Memory** %MEMORY

  ; Code: .L_45446a:	 RIP: 45446a	 Bytes: 0
  br label %block_.L_45446a
block_.L_45446a:

  ; Code: jmpq .L_45446f	 RIP: 45446a	 Bytes: 5
  %loadMem_45446a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45446a = call %struct.Memory* @routine_jmpq_.L_45446f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45446a, i64 5, i64 5)
  store %struct.Memory* %call_45446a, %struct.Memory** %MEMORY

  br label %block_.L_45446f

  ; Code: .L_45446f:	 RIP: 45446f	 Bytes: 0
block_.L_45446f:

  ; Code: jmpq .L_454474	 RIP: 45446f	 Bytes: 5
  %loadMem_45446f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45446f = call %struct.Memory* @routine_jmpq_.L_454474(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45446f, i64 5, i64 5)
  store %struct.Memory* %call_45446f, %struct.Memory** %MEMORY

  br label %block_.L_454474

  ; Code: .L_454474:	 RIP: 454474	 Bytes: 0
block_.L_454474:

  ; Code: jmpq .L_454479	 RIP: 454474	 Bytes: 5
  %loadMem_454474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454474 = call %struct.Memory* @routine_jmpq_.L_454479(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454474, i64 5, i64 5)
  store %struct.Memory* %call_454474, %struct.Memory** %MEMORY

  br label %block_.L_454479

  ; Code: .L_454479:	 RIP: 454479	 Bytes: 0
block_.L_454479:

  ; Code: jmpq .L_45447e	 RIP: 454479	 Bytes: 5
  %loadMem_454479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454479 = call %struct.Memory* @routine_jmpq_.L_45447e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454479, i64 5, i64 5)
  store %struct.Memory* %call_454479, %struct.Memory** %MEMORY

  br label %block_.L_45447e

  ; Code: .L_45447e:	 RIP: 45447e	 Bytes: 0
block_.L_45447e:

  ; Code: movl -0x5134(%rbp), %eax	 RIP: 45447e	 Bytes: 6
  %loadMem_45447e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45447e = call %struct.Memory* @routine_movl_MINUS0x5134__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45447e)
  store %struct.Memory* %call_45447e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454484	 Bytes: 3
  %loadMem_454484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454484 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454484)
  store %struct.Memory* %call_454484, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5134(%rbp)	 RIP: 454487	 Bytes: 6
  %loadMem_454487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454487 = call %struct.Memory* @routine_movl__eax__MINUS0x5134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454487)
  store %struct.Memory* %call_454487, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4541f2	 RIP: 45448d	 Bytes: 5
  %loadMem_45448d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45448d = call %struct.Memory* @routine_jmpq_.L_4541f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45448d, i64 -667, i64 5)
  store %struct.Memory* %call_45448d, %struct.Memory** %MEMORY

  br label %block_.L_4541f2

  ; Code: .L_454492:	 RIP: 454492	 Bytes: 0
block_.L_454492:

  ; Code: cmpl $0x0, -0x5180(%rbp)	 RIP: 454492	 Bytes: 7
  %loadMem_454492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454492 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x5180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454492)
  store %struct.Memory* %call_454492, %struct.Memory** %MEMORY

  ; Code: je .L_454504	 RIP: 454499	 Bytes: 6
  %loadMem_454499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454499 = call %struct.Memory* @routine_je_.L_454504(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454499, i8* %BRANCH_TAKEN, i64 107, i64 6, i64 6)
  store %struct.Memory* %call_454499, %struct.Memory** %MEMORY

  %loadBr_454499 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454499 = icmp eq i8 %loadBr_454499, 1
  br i1 %cmpBr_454499, label %block_.L_454504, label %block_45449f

block_45449f:
  ; Code: movl -0x34(%rbp), %eax	 RIP: 45449f	 Bytes: 3
  %loadMem_45449f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45449f = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45449f)
  store %struct.Memory* %call_45449f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1c(%rbp), %eax	 RIP: 4544a2	 Bytes: 3
  %loadMem_4544a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544a2 = call %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544a2)
  store %struct.Memory* %call_4544a2, %struct.Memory** %MEMORY

  ; Code: je .L_454504	 RIP: 4544a5	 Bytes: 6
  %loadMem_4544a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544a5 = call %struct.Memory* @routine_je_.L_454504(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544a5, i8* %BRANCH_TAKEN, i64 95, i64 6, i64 6)
  store %struct.Memory* %call_4544a5, %struct.Memory** %MEMORY

  %loadBr_4544a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4544a5 = icmp eq i8 %loadBr_4544a5, 1
  br i1 %cmpBr_4544a5, label %block_.L_454504, label %block_4544ab

block_4544ab:
  ; Code: movl -0x517c(%rbp), %edi	 RIP: 4544ab	 Bytes: 6
  %loadMem_4544ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544ab = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544ab)
  store %struct.Memory* %call_4544ab, %struct.Memory** %MEMORY

  ; Code: callq .is_edge_vertex	 RIP: 4544b1	 Bytes: 5
  %loadMem1_4544b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4544b1 = call %struct.Memory* @routine_callq_.is_edge_vertex(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4544b1, i64 -282145, i64 5, i64 5)
  store %struct.Memory* %call1_4544b1, %struct.Memory** %MEMORY

  %loadMem2_4544b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4544b1 = load i64, i64* %3
  %call2_4544b1 = call %struct.Memory* @sub_40f690.is_edge_vertex(%struct.State* %0, i64  %loadPC_4544b1, %struct.Memory* %loadMem2_4544b1)
  store %struct.Memory* %call2_4544b1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4544b6	 Bytes: 3
  %loadMem_4544b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544b6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544b6)
  store %struct.Memory* %call_4544b6, %struct.Memory** %MEMORY

  ; Code: je .L_454504	 RIP: 4544b9	 Bytes: 6
  %loadMem_4544b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544b9 = call %struct.Memory* @routine_je_.L_454504(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544b9, i8* %BRANCH_TAKEN, i64 75, i64 6, i64 6)
  store %struct.Memory* %call_4544b9, %struct.Memory** %MEMORY

  %loadBr_4544b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4544b9 = icmp eq i8 %loadBr_4544b9, 1
  br i1 %cmpBr_4544b9, label %block_.L_454504, label %block_4544bf

block_4544bf:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 4544bf	 Bytes: 4
  %loadMem_4544bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544bf = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544bf)
  store %struct.Memory* %call_4544bf, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 4544c3	 Bytes: 7
  %loadMem_4544c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544c3 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544c3)
  store %struct.Memory* %call_4544c3, %struct.Memory** %MEMORY

  ; Code: subl $0x64, %ecx	 RIP: 4544ca	 Bytes: 3
  %loadMem_4544ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544ca = call %struct.Memory* @routine_subl__0x64___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544ca)
  store %struct.Memory* %call_4544ca, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 4544cd	 Bytes: 7
  %loadMem_4544cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544cd = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544cd)
  store %struct.Memory* %call_4544cd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4544d4	 Bytes: 8
  %loadMem_4544d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544d4 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544d4)
  store %struct.Memory* %call_4544d4, %struct.Memory** %MEMORY

  ; Code: jle .L_4544ff	 RIP: 4544dc	 Bytes: 6
  %loadMem_4544dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544dc = call %struct.Memory* @routine_jle_.L_4544ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544dc, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_4544dc, %struct.Memory** %MEMORY

  %loadBr_4544dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4544dc = icmp eq i8 %loadBr_4544dc, 1
  br i1 %cmpBr_4544dc, label %block_.L_4544ff, label %block_4544e2

block_4544e2:
  ; Code: movq $0x57f90b, %rdi	 RIP: 4544e2	 Bytes: 10
  %loadMem_4544e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544e2 = call %struct.Memory* @routine_movq__0x57f90b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544e2)
  store %struct.Memory* %call_4544e2, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 4544ec	 Bytes: 6
  %loadMem_4544ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544ec = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544ec)
  store %struct.Memory* %call_4544ec, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4544f2	 Bytes: 2
  %loadMem_4544f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544f2 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544f2)
  store %struct.Memory* %call_4544f2, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4544f4	 Bytes: 5
  %loadMem1_4544f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4544f4 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4544f4, i64 -10052, i64 5, i64 5)
  store %struct.Memory* %call1_4544f4, %struct.Memory** %MEMORY

  %loadMem2_4544f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4544f4 = load i64, i64* %3
  %call2_4544f4 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4544f4, %struct.Memory* %loadMem2_4544f4)
  store %struct.Memory* %call2_4544f4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53ec(%rbp)	 RIP: 4544f9	 Bytes: 6
  %loadMem_4544f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544f9 = call %struct.Memory* @routine_movl__eax__MINUS0x53ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544f9)
  store %struct.Memory* %call_4544f9, %struct.Memory** %MEMORY

  ; Code: .L_4544ff:	 RIP: 4544ff	 Bytes: 0
  br label %block_.L_4544ff
block_.L_4544ff:

  ; Code: jmpq .L_454504	 RIP: 4544ff	 Bytes: 5
  %loadMem_4544ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4544ff = call %struct.Memory* @routine_jmpq_.L_454504(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4544ff, i64 5, i64 5)
  store %struct.Memory* %call_4544ff, %struct.Memory** %MEMORY

  br label %block_.L_454504

  ; Code: .L_454504:	 RIP: 454504	 Bytes: 0
block_.L_454504:

  ; Code: movl -0x517c(%rbp), %edi	 RIP: 454504	 Bytes: 6
  %loadMem_454504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454504 = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454504)
  store %struct.Memory* %call_454504, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 45450a	 Bytes: 3
  %loadMem_45450a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45450a = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45450a)
  store %struct.Memory* %call_45450a, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_string	 RIP: 45450d	 Bytes: 5
  %loadMem1_45450d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45450d = call %struct.Memory* @routine_callq_.liberty_of_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45450d, i64 -260701, i64 5, i64 5)
  store %struct.Memory* %call1_45450d, %struct.Memory** %MEMORY

  %loadMem2_45450d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45450d = load i64, i64* %3
  %call2_45450d = call %struct.Memory* @sub_414ab0.liberty_of_string(%struct.State* %0, i64  %loadPC_45450d, %struct.Memory* %loadMem2_45450d)
  store %struct.Memory* %call2_45450d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 454512	 Bytes: 3
  %loadMem_454512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454512 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454512)
  store %struct.Memory* %call_454512, %struct.Memory** %MEMORY

  ; Code: je .L_45452c	 RIP: 454515	 Bytes: 6
  %loadMem_454515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454515 = call %struct.Memory* @routine_je_.L_45452c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454515, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_454515, %struct.Memory** %MEMORY

  %loadBr_454515 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454515 = icmp eq i8 %loadBr_454515, 1
  br i1 %cmpBr_454515, label %block_.L_45452c, label %block_45451b

block_45451b:
  ; Code: movl -0x14(%rbp), %edi	 RIP: 45451b	 Bytes: 3
  %loadMem_45451b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45451b = call %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45451b)
  store %struct.Memory* %call_45451b, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 45451e	 Bytes: 5
  %loadMem1_45451e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_45451e = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_45451e, i64 -282014, i64 5, i64 5)
  store %struct.Memory* %call1_45451e, %struct.Memory** %MEMORY

  %loadMem2_45451e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_45451e = load i64, i64* %3
  %call2_45451e = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_45451e, %struct.Memory* %loadMem2_45451e)
  store %struct.Memory* %call2_45451e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 454523	 Bytes: 3
  %loadMem_454523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454523 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454523)
  store %struct.Memory* %call_454523, %struct.Memory** %MEMORY

  ; Code: je .L_454554	 RIP: 454526	 Bytes: 6
  %loadMem_454526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454526 = call %struct.Memory* @routine_je_.L_454554(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454526, i8* %BRANCH_TAKEN, i64 46, i64 6, i64 6)
  store %struct.Memory* %call_454526, %struct.Memory** %MEMORY

  %loadBr_454526 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454526 = icmp eq i8 %loadBr_454526, 1
  br i1 %cmpBr_454526, label %block_.L_454554, label %block_.L_45452c

  ; Code: .L_45452c:	 RIP: 45452c	 Bytes: 0
block_.L_45452c:

  ; Code: movl -0x517c(%rbp), %edi	 RIP: 45452c	 Bytes: 6
  %loadMem_45452c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45452c = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45452c)
  store %struct.Memory* %call_45452c, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 454532	 Bytes: 3
  %loadMem_454532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454532 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454532)
  store %struct.Memory* %call_454532, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_string	 RIP: 454535	 Bytes: 5
  %loadMem1_454535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454535 = call %struct.Memory* @routine_callq_.liberty_of_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454535, i64 -260741, i64 5, i64 5)
  store %struct.Memory* %call1_454535, %struct.Memory** %MEMORY

  %loadMem2_454535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454535 = load i64, i64* %3
  %call2_454535 = call %struct.Memory* @sub_414ab0.liberty_of_string(%struct.State* %0, i64  %loadPC_454535, %struct.Memory* %loadMem2_454535)
  store %struct.Memory* %call2_454535, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 45453a	 Bytes: 3
  %loadMem_45453a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45453a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45453a)
  store %struct.Memory* %call_45453a, %struct.Memory** %MEMORY

  ; Code: je .L_454599	 RIP: 45453d	 Bytes: 6
  %loadMem_45453d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45453d = call %struct.Memory* @routine_je_.L_454599(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45453d, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_45453d, %struct.Memory** %MEMORY

  %loadBr_45453d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45453d = icmp eq i8 %loadBr_45453d, 1
  br i1 %cmpBr_45453d, label %block_.L_454599, label %block_454543

block_454543:
  ; Code: movl -0x18(%rbp), %edi	 RIP: 454543	 Bytes: 3
  %loadMem_454543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454543 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454543)
  store %struct.Memory* %call_454543, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 454546	 Bytes: 5
  %loadMem1_454546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454546 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454546, i64 -282054, i64 5, i64 5)
  store %struct.Memory* %call1_454546, %struct.Memory** %MEMORY

  %loadMem2_454546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454546 = load i64, i64* %3
  %call2_454546 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_454546, %struct.Memory* %loadMem2_454546)
  store %struct.Memory* %call2_454546, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 45454b	 Bytes: 3
  %loadMem_45454b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45454b = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45454b)
  store %struct.Memory* %call_45454b, %struct.Memory** %MEMORY

  ; Code: jne .L_454599	 RIP: 45454e	 Bytes: 6
  %loadMem_45454e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45454e = call %struct.Memory* @routine_jne_.L_454599(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45454e, i8* %BRANCH_TAKEN, i64 75, i64 6, i64 6)
  store %struct.Memory* %call_45454e, %struct.Memory** %MEMORY

  %loadBr_45454e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45454e = icmp eq i8 %loadBr_45454e, 1
  br i1 %cmpBr_45454e, label %block_.L_454599, label %block_.L_454554

  ; Code: .L_454554:	 RIP: 454554	 Bytes: 0
block_.L_454554:

  ; Code: movslq -0x40(%rbp), %rax	 RIP: 454554	 Bytes: 4
  %loadMem_454554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454554 = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454554)
  store %struct.Memory* %call_454554, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 454558	 Bytes: 7
  %loadMem_454558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454558 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454558)
  store %struct.Memory* %call_454558, %struct.Memory** %MEMORY

  ; Code: subl $0x64, %ecx	 RIP: 45455f	 Bytes: 3
  %loadMem_45455f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45455f = call %struct.Memory* @routine_subl__0x64___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45455f)
  store %struct.Memory* %call_45455f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5100(%rbp,%rax,4)	 RIP: 454562	 Bytes: 7
  %loadMem_454562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454562 = call %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454562)
  store %struct.Memory* %call_454562, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 454569	 Bytes: 8
  %loadMem_454569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454569 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454569)
  store %struct.Memory* %call_454569, %struct.Memory** %MEMORY

  ; Code: jle .L_454594	 RIP: 454571	 Bytes: 6
  %loadMem_454571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454571 = call %struct.Memory* @routine_jle_.L_454594(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454571, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_454571, %struct.Memory** %MEMORY

  %loadBr_454571 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454571 = icmp eq i8 %loadBr_454571, 1
  br i1 %cmpBr_454571, label %block_.L_454594, label %block_454577

block_454577:
  ; Code: movq $0x57f930, %rdi	 RIP: 454577	 Bytes: 10
  %loadMem_454577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454577 = call %struct.Memory* @routine_movq__0x57f930___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454577)
  store %struct.Memory* %call_454577, %struct.Memory** %MEMORY

  ; Code: movl -0x517c(%rbp), %esi	 RIP: 454581	 Bytes: 6
  %loadMem_454581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454581 = call %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454581)
  store %struct.Memory* %call_454581, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 454587	 Bytes: 2
  %loadMem_454587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454587 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454587)
  store %struct.Memory* %call_454587, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 454589	 Bytes: 5
  %loadMem1_454589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454589 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454589, i64 -10201, i64 5, i64 5)
  store %struct.Memory* %call1_454589, %struct.Memory** %MEMORY

  %loadMem2_454589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454589 = load i64, i64* %3
  %call2_454589 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_454589, %struct.Memory* %loadMem2_454589)
  store %struct.Memory* %call2_454589, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53f0(%rbp)	 RIP: 45458e	 Bytes: 6
  %loadMem_45458e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45458e = call %struct.Memory* @routine_movl__eax__MINUS0x53f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45458e)
  store %struct.Memory* %call_45458e, %struct.Memory** %MEMORY

  ; Code: .L_454594:	 RIP: 454594	 Bytes: 0
  br label %block_.L_454594
block_.L_454594:

  ; Code: jmpq .L_454599	 RIP: 454594	 Bytes: 5
  %loadMem_454594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454594 = call %struct.Memory* @routine_jmpq_.L_454599(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454594, i64 5, i64 5)
  store %struct.Memory* %call_454594, %struct.Memory** %MEMORY

  br label %block_.L_454599

  ; Code: .L_454599:	 RIP: 454599	 Bytes: 0
block_.L_454599:

  ; Code: jmpq .L_45459e	 RIP: 454599	 Bytes: 5
  %loadMem_454599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454599 = call %struct.Memory* @routine_jmpq_.L_45459e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454599, i64 5, i64 5)
  store %struct.Memory* %call_454599, %struct.Memory** %MEMORY

  br label %block_.L_45459e

  ; Code: .L_45459e:	 RIP: 45459e	 Bytes: 0
block_.L_45459e:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 45459e	 Bytes: 3
  %loadMem_45459e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45459e = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45459e)
  store %struct.Memory* %call_45459e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4545a1	 Bytes: 3
  %loadMem_4545a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545a1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545a1)
  store %struct.Memory* %call_4545a1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 4545a4	 Bytes: 3
  %loadMem_4545a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545a4 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545a4)
  store %struct.Memory* %call_4545a4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4541be	 RIP: 4545a7	 Bytes: 5
  %loadMem_4545a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545a7 = call %struct.Memory* @routine_jmpq_.L_4541be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545a7, i64 -1001, i64 5)
  store %struct.Memory* %call_4545a7, %struct.Memory** %MEMORY

  br label %block_.L_4541be

  ; Code: .L_4545ac:	 RIP: 4545ac	 Bytes: 0
block_.L_4545ac:

  ; Code: movl $0x0, -0x5138(%rbp)	 RIP: 4545ac	 Bytes: 10
  %loadMem_4545ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545ac = call %struct.Memory* @routine_movl__0x0__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545ac)
  store %struct.Memory* %call_4545ac, %struct.Memory** %MEMORY

  ; Code: .L_4545b6:	 RIP: 4545b6	 Bytes: 0
  br label %block_.L_4545b6
block_.L_4545b6:

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 4545b6	 Bytes: 6
  %loadMem_4545b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545b6 = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545b6)
  store %struct.Memory* %call_4545b6, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 4545bc	 Bytes: 6
  %loadMem_4545bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545bc = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545bc)
  store %struct.Memory* %call_4545bc, %struct.Memory** %MEMORY

  ; Code: jge .L_45470f	 RIP: 4545c2	 Bytes: 6
  %loadMem_4545c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545c2 = call %struct.Memory* @routine_jge_.L_45470f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545c2, i8* %BRANCH_TAKEN, i64 333, i64 6, i64 6)
  store %struct.Memory* %call_4545c2, %struct.Memory** %MEMORY

  %loadBr_4545c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4545c2 = icmp eq i8 %loadBr_4545c2, 1
  br i1 %cmpBr_4545c2, label %block_.L_45470f, label %block_4545c8

block_4545c8:
  ; Code: movslq -0x5138(%rbp), %rax	 RIP: 4545c8	 Bytes: 7
  %loadMem_4545c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545c8 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545c8)
  store %struct.Memory* %call_4545c8, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 4545cf	 Bytes: 7
  %loadMem_4545cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545cf = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545cf)
  store %struct.Memory* %call_4545cf, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5188(%rbp)	 RIP: 4545d6	 Bytes: 6
  %loadMem_4545d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545d6 = call %struct.Memory* @routine_movl__ecx__MINUS0x5188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545d6)
  store %struct.Memory* %call_4545d6, %struct.Memory** %MEMORY

  ; Code: movl -0x5138(%rbp), %ecx	 RIP: 4545dc	 Bytes: 6
  %loadMem_4545dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545dc = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545dc)
  store %struct.Memory* %call_4545dc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x518c(%rbp)	 RIP: 4545e2	 Bytes: 6
  %loadMem_4545e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545e2 = call %struct.Memory* @routine_movl__ecx__MINUS0x518c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545e2)
  store %struct.Memory* %call_4545e2, %struct.Memory** %MEMORY

  ; Code: movl -0x5138(%rbp), %ecx	 RIP: 4545e8	 Bytes: 6
  %loadMem_4545e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545e8 = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545e8)
  store %struct.Memory* %call_4545e8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 4545ee	 Bytes: 3
  %loadMem_4545ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545ee = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545ee)
  store %struct.Memory* %call_4545ee, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x513c(%rbp)	 RIP: 4545f1	 Bytes: 6
  %loadMem_4545f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545f1 = call %struct.Memory* @routine_movl__ecx__MINUS0x513c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545f1)
  store %struct.Memory* %call_4545f1, %struct.Memory** %MEMORY

  ; Code: .L_4545f7:	 RIP: 4545f7	 Bytes: 0
  br label %block_.L_4545f7
block_.L_4545f7:

  ; Code: movl -0x513c(%rbp), %eax	 RIP: 4545f7	 Bytes: 6
  %loadMem_4545f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545f7 = call %struct.Memory* @routine_movl_MINUS0x513c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545f7)
  store %struct.Memory* %call_4545f7, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 4545fd	 Bytes: 6
  %loadMem_4545fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4545fd = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4545fd)
  store %struct.Memory* %call_4545fd, %struct.Memory** %MEMORY

  ; Code: jge .L_45465c	 RIP: 454603	 Bytes: 6
  %loadMem_454603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454603 = call %struct.Memory* @routine_jge_.L_45465c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454603, i8* %BRANCH_TAKEN, i64 89, i64 6, i64 6)
  store %struct.Memory* %call_454603, %struct.Memory** %MEMORY

  %loadBr_454603 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454603 = icmp eq i8 %loadBr_454603, 1
  br i1 %cmpBr_454603, label %block_.L_45465c, label %block_454609

block_454609:
  ; Code: movslq -0x513c(%rbp), %rax	 RIP: 454609	 Bytes: 7
  %loadMem_454609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454609 = call %struct.Memory* @routine_movslq_MINUS0x513c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454609)
  store %struct.Memory* %call_454609, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 454610	 Bytes: 7
  %loadMem_454610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454610 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454610)
  store %struct.Memory* %call_454610, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5188(%rbp), %ecx	 RIP: 454617	 Bytes: 6
  %loadMem_454617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454617 = call %struct.Memory* @routine_cmpl_MINUS0x5188__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454617)
  store %struct.Memory* %call_454617, %struct.Memory** %MEMORY

  ; Code: jge .L_454643	 RIP: 45461d	 Bytes: 6
  %loadMem_45461d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45461d = call %struct.Memory* @routine_jge_.L_454643(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45461d, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_45461d, %struct.Memory** %MEMORY

  %loadBr_45461d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45461d = icmp eq i8 %loadBr_45461d, 1
  br i1 %cmpBr_45461d, label %block_.L_454643, label %block_454623

block_454623:
  ; Code: movslq -0x513c(%rbp), %rax	 RIP: 454623	 Bytes: 7
  %loadMem_454623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454623 = call %struct.Memory* @routine_movslq_MINUS0x513c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454623)
  store %struct.Memory* %call_454623, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 45462a	 Bytes: 7
  %loadMem_45462a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45462a = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45462a)
  store %struct.Memory* %call_45462a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x5188(%rbp)	 RIP: 454631	 Bytes: 6
  %loadMem_454631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454631 = call %struct.Memory* @routine_movl__ecx__MINUS0x5188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454631)
  store %struct.Memory* %call_454631, %struct.Memory** %MEMORY

  ; Code: movl -0x513c(%rbp), %ecx	 RIP: 454637	 Bytes: 6
  %loadMem_454637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454637 = call %struct.Memory* @routine_movl_MINUS0x513c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454637)
  store %struct.Memory* %call_454637, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x518c(%rbp)	 RIP: 45463d	 Bytes: 6
  %loadMem_45463d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45463d = call %struct.Memory* @routine_movl__ecx__MINUS0x518c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45463d)
  store %struct.Memory* %call_45463d, %struct.Memory** %MEMORY

  ; Code: .L_454643:	 RIP: 454643	 Bytes: 0
  br label %block_.L_454643
block_.L_454643:

  ; Code: jmpq .L_454648	 RIP: 454643	 Bytes: 5
  %loadMem_454643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454643 = call %struct.Memory* @routine_jmpq_.L_454648(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454643, i64 5, i64 5)
  store %struct.Memory* %call_454643, %struct.Memory** %MEMORY

  br label %block_.L_454648

  ; Code: .L_454648:	 RIP: 454648	 Bytes: 0
block_.L_454648:

  ; Code: movl -0x513c(%rbp), %eax	 RIP: 454648	 Bytes: 6
  %loadMem_454648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454648 = call %struct.Memory* @routine_movl_MINUS0x513c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454648)
  store %struct.Memory* %call_454648, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 45464e	 Bytes: 3
  %loadMem_45464e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45464e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45464e)
  store %struct.Memory* %call_45464e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x513c(%rbp)	 RIP: 454651	 Bytes: 6
  %loadMem_454651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454651 = call %struct.Memory* @routine_movl__eax__MINUS0x513c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454651)
  store %struct.Memory* %call_454651, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4545f7	 RIP: 454657	 Bytes: 5
  %loadMem_454657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454657 = call %struct.Memory* @routine_jmpq_.L_4545f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454657, i64 -96, i64 5)
  store %struct.Memory* %call_454657, %struct.Memory** %MEMORY

  br label %block_.L_4545f7

  ; Code: .L_45465c:	 RIP: 45465c	 Bytes: 0
block_.L_45465c:

  ; Code: movl -0x518c(%rbp), %eax	 RIP: 45465c	 Bytes: 6
  %loadMem_45465c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45465c = call %struct.Memory* @routine_movl_MINUS0x518c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45465c)
  store %struct.Memory* %call_45465c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5138(%rbp), %eax	 RIP: 454662	 Bytes: 6
  %loadMem_454662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454662 = call %struct.Memory* @routine_cmpl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454662)
  store %struct.Memory* %call_454662, %struct.Memory** %MEMORY

  ; Code: je .L_4546f6	 RIP: 454668	 Bytes: 6
  %loadMem_454668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454668 = call %struct.Memory* @routine_je_.L_4546f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454668, i8* %BRANCH_TAKEN, i64 142, i64 6, i64 6)
  store %struct.Memory* %call_454668, %struct.Memory** %MEMORY

  %loadBr_454668 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454668 = icmp eq i8 %loadBr_454668, 1
  br i1 %cmpBr_454668, label %block_.L_4546f6, label %block_45466e

block_45466e:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 45466e	 Bytes: 4
  %loadMem_45466e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45466e = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45466e)
  store %struct.Memory* %call_45466e, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rcx	 RIP: 454672	 Bytes: 7
  %loadMem_454672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454672 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454672)
  store %struct.Memory* %call_454672, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 454679	 Bytes: 3
  %loadMem_454679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454679 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454679)
  store %struct.Memory* %call_454679, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5190(%rbp)	 RIP: 45467c	 Bytes: 6
  %loadMem_45467c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45467c = call %struct.Memory* @routine_movl__edx__MINUS0x5190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45467c)
  store %struct.Memory* %call_45467c, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rax	 RIP: 454682	 Bytes: 7
  %loadMem_454682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454682 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454682)
  store %struct.Memory* %call_454682, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %edx	 RIP: 454689	 Bytes: 7
  %loadMem_454689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454689 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454689)
  store %struct.Memory* %call_454689, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5194(%rbp)	 RIP: 454690	 Bytes: 6
  %loadMem_454690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454690 = call %struct.Memory* @routine_movl__edx__MINUS0x5194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454690)
  store %struct.Memory* %call_454690, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 454696	 Bytes: 4
  %loadMem_454696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454696 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454696)
  store %struct.Memory* %call_454696, %struct.Memory** %MEMORY

  ; Code: movslq -0x518c(%rbp), %rcx	 RIP: 45469a	 Bytes: 7
  %loadMem_45469a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45469a = call %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45469a)
  store %struct.Memory* %call_45469a, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4546a1	 Bytes: 3
  %loadMem_4546a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546a1 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546a1)
  store %struct.Memory* %call_4546a1, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 4546a4	 Bytes: 4
  %loadMem_4546a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546a4 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546a4)
  store %struct.Memory* %call_4546a4, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rcx	 RIP: 4546a8	 Bytes: 7
  %loadMem_4546a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546a8 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546a8)
  store %struct.Memory* %call_4546a8, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4546af	 Bytes: 3
  %loadMem_4546af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546af = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546af)
  store %struct.Memory* %call_4546af, %struct.Memory** %MEMORY

  ; Code: movslq -0x518c(%rbp), %rax	 RIP: 4546b2	 Bytes: 7
  %loadMem_4546b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546b2 = call %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546b2)
  store %struct.Memory* %call_4546b2, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %edx	 RIP: 4546b9	 Bytes: 7
  %loadMem_4546b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546b9 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546b9)
  store %struct.Memory* %call_4546b9, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rax	 RIP: 4546c0	 Bytes: 7
  %loadMem_4546c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546c0 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546c0)
  store %struct.Memory* %call_4546c0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5100(%rbp,%rax,4)	 RIP: 4546c7	 Bytes: 7
  %loadMem_4546c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546c7 = call %struct.Memory* @routine_movl__edx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546c7)
  store %struct.Memory* %call_4546c7, %struct.Memory** %MEMORY

  ; Code: movl -0x5190(%rbp), %edx	 RIP: 4546ce	 Bytes: 6
  %loadMem_4546ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546ce = call %struct.Memory* @routine_movl_MINUS0x5190__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546ce)
  store %struct.Memory* %call_4546ce, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 4546d4	 Bytes: 4
  %loadMem_4546d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546d4 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546d4)
  store %struct.Memory* %call_4546d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x518c(%rbp), %rcx	 RIP: 4546d8	 Bytes: 7
  %loadMem_4546d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546d8 = call %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546d8)
  store %struct.Memory* %call_4546d8, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4546df	 Bytes: 3
  %loadMem_4546df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546df = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546df)
  store %struct.Memory* %call_4546df, %struct.Memory** %MEMORY

  ; Code: movl -0x5194(%rbp), %edx	 RIP: 4546e2	 Bytes: 6
  %loadMem_4546e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546e2 = call %struct.Memory* @routine_movl_MINUS0x5194__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546e2)
  store %struct.Memory* %call_4546e2, %struct.Memory** %MEMORY

  ; Code: movslq -0x518c(%rbp), %rax	 RIP: 4546e8	 Bytes: 7
  %loadMem_4546e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546e8 = call %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546e8)
  store %struct.Memory* %call_4546e8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5100(%rbp,%rax,4)	 RIP: 4546ef	 Bytes: 7
  %loadMem_4546ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546ef = call %struct.Memory* @routine_movl__edx__MINUS0x5100__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546ef)
  store %struct.Memory* %call_4546ef, %struct.Memory** %MEMORY

  ; Code: .L_4546f6:	 RIP: 4546f6	 Bytes: 0
  br label %block_.L_4546f6
block_.L_4546f6:

  ; Code: jmpq .L_4546fb	 RIP: 4546f6	 Bytes: 5
  %loadMem_4546f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546f6 = call %struct.Memory* @routine_jmpq_.L_4546fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546f6, i64 5, i64 5)
  store %struct.Memory* %call_4546f6, %struct.Memory** %MEMORY

  br label %block_.L_4546fb

  ; Code: .L_4546fb:	 RIP: 4546fb	 Bytes: 0
block_.L_4546fb:

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 4546fb	 Bytes: 6
  %loadMem_4546fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4546fb = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4546fb)
  store %struct.Memory* %call_4546fb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454701	 Bytes: 3
  %loadMem_454701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454701 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454701)
  store %struct.Memory* %call_454701, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5138(%rbp)	 RIP: 454704	 Bytes: 6
  %loadMem_454704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454704 = call %struct.Memory* @routine_movl__eax__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454704)
  store %struct.Memory* %call_454704, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4545b6	 RIP: 45470a	 Bytes: 5
  %loadMem_45470a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45470a = call %struct.Memory* @routine_jmpq_.L_4545b6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45470a, i64 -340, i64 5)
  store %struct.Memory* %call_45470a, %struct.Memory** %MEMORY

  br label %block_.L_4545b6

  ; Code: .L_45470f:	 RIP: 45470f	 Bytes: 0
block_.L_45470f:

  ; Code: cmpl $0x0, 0xab0f28	 RIP: 45470f	 Bytes: 8
  %loadMem_45470f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45470f = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45470f)
  store %struct.Memory* %call_45470f, %struct.Memory** %MEMORY

  ; Code: jle .L_45479c	 RIP: 454717	 Bytes: 6
  %loadMem_454717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454717 = call %struct.Memory* @routine_jle_.L_45479c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454717, i8* %BRANCH_TAKEN, i64 133, i64 6, i64 6)
  store %struct.Memory* %call_454717, %struct.Memory** %MEMORY

  %loadBr_454717 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454717 = icmp eq i8 %loadBr_454717, 1
  br i1 %cmpBr_454717, label %block_.L_45479c, label %block_45471d

block_45471d:
  ; Code: movq $0x57f964, %rdi	 RIP: 45471d	 Bytes: 10
  %loadMem_45471d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45471d = call %struct.Memory* @routine_movq__0x57f964___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45471d)
  store %struct.Memory* %call_45471d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 454727	 Bytes: 2
  %loadMem_454727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454727 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454727)
  store %struct.Memory* %call_454727, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 454729	 Bytes: 5
  %loadMem1_454729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454729 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454729, i64 -10617, i64 5, i64 5)
  store %struct.Memory* %call1_454729, %struct.Memory** %MEMORY

  %loadMem2_454729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454729 = load i64, i64* %3
  %call2_454729 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_454729, %struct.Memory* %loadMem2_454729)
  store %struct.Memory* %call2_454729, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5138(%rbp)	 RIP: 45472e	 Bytes: 10
  %loadMem_45472e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45472e = call %struct.Memory* @routine_movl__0x0__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45472e)
  store %struct.Memory* %call_45472e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53f4(%rbp)	 RIP: 454738	 Bytes: 6
  %loadMem_454738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454738 = call %struct.Memory* @routine_movl__eax__MINUS0x53f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454738)
  store %struct.Memory* %call_454738, %struct.Memory** %MEMORY

  ; Code: .L_45473e:	 RIP: 45473e	 Bytes: 0
  br label %block_.L_45473e
block_.L_45473e:

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 45473e	 Bytes: 6
  %loadMem_45473e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45473e = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45473e)
  store %struct.Memory* %call_45473e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 454744	 Bytes: 6
  %loadMem_454744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454744 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454744)
  store %struct.Memory* %call_454744, %struct.Memory** %MEMORY

  ; Code: jge .L_454797	 RIP: 45474a	 Bytes: 6
  %loadMem_45474a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45474a = call %struct.Memory* @routine_jge_.L_454797(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45474a, i8* %BRANCH_TAKEN, i64 77, i64 6, i64 6)
  store %struct.Memory* %call_45474a, %struct.Memory** %MEMORY

  %loadBr_45474a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45474a = icmp eq i8 %loadBr_45474a, 1
  br i1 %cmpBr_45474a, label %block_.L_454797, label %block_454750

block_454750:
  ; Code: movq $0x57f975, %rdi	 RIP: 454750	 Bytes: 10
  %loadMem_454750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454750 = call %struct.Memory* @routine_movq__0x57f975___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454750)
  store %struct.Memory* %call_454750, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 45475a	 Bytes: 4
  %loadMem_45475a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45475a = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45475a)
  store %struct.Memory* %call_45475a, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rcx	 RIP: 45475e	 Bytes: 7
  %loadMem_45475e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45475e = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45475e)
  store %struct.Memory* %call_45475e, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %esi	 RIP: 454765	 Bytes: 3
  %loadMem_454765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454765 = call %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454765)
  store %struct.Memory* %call_454765, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rax	 RIP: 454768	 Bytes: 7
  %loadMem_454768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454768 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454768)
  store %struct.Memory* %call_454768, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %edx	 RIP: 45476f	 Bytes: 7
  %loadMem_45476f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45476f = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45476f)
  store %struct.Memory* %call_45476f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 454776	 Bytes: 2
  %loadMem_454776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454776 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454776)
  store %struct.Memory* %call_454776, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 454778	 Bytes: 5
  %loadMem1_454778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454778 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454778, i64 -10696, i64 5, i64 5)
  store %struct.Memory* %call1_454778, %struct.Memory** %MEMORY

  %loadMem2_454778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454778 = load i64, i64* %3
  %call2_454778 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_454778, %struct.Memory* %loadMem2_454778)
  store %struct.Memory* %call2_454778, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53f8(%rbp)	 RIP: 45477d	 Bytes: 6
  %loadMem_45477d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45477d = call %struct.Memory* @routine_movl__eax__MINUS0x53f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45477d)
  store %struct.Memory* %call_45477d, %struct.Memory** %MEMORY

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 454783	 Bytes: 6
  %loadMem_454783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454783 = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454783)
  store %struct.Memory* %call_454783, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454789	 Bytes: 3
  %loadMem_454789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454789 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454789)
  store %struct.Memory* %call_454789, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5138(%rbp)	 RIP: 45478c	 Bytes: 6
  %loadMem_45478c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45478c = call %struct.Memory* @routine_movl__eax__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45478c)
  store %struct.Memory* %call_45478c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_45473e	 RIP: 454792	 Bytes: 5
  %loadMem_454792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454792 = call %struct.Memory* @routine_jmpq_.L_45473e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454792, i64 -84, i64 5)
  store %struct.Memory* %call_454792, %struct.Memory** %MEMORY

  br label %block_.L_45473e

  ; Code: .L_454797:	 RIP: 454797	 Bytes: 0
block_.L_454797:

  ; Code: jmpq .L_45479c	 RIP: 454797	 Bytes: 5
  %loadMem_454797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454797 = call %struct.Memory* @routine_jmpq_.L_45479c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454797, i64 5, i64 5)
  store %struct.Memory* %call_454797, %struct.Memory** %MEMORY

  br label %block_.L_45479c

  ; Code: .L_45479c:	 RIP: 45479c	 Bytes: 0
block_.L_45479c:

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 45479c	 Bytes: 9
  %loadMem_45479c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45479c = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45479c)
  store %struct.Memory* %call_45479c, %struct.Memory** %MEMORY

  ; Code: je .L_454936	 RIP: 4547a5	 Bytes: 6
  %loadMem_4547a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547a5 = call %struct.Memory* @routine_je_.L_454936(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547a5, i8* %BRANCH_TAKEN, i64 401, i64 6, i64 6)
  store %struct.Memory* %call_4547a5, %struct.Memory** %MEMORY

  %loadBr_4547a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4547a5 = icmp eq i8 %loadBr_4547a5, 1
  br i1 %cmpBr_4547a5, label %block_.L_454936, label %block_4547ab

block_4547ab:
  ; Code: movq $0x57f983, %rsi	 RIP: 4547ab	 Bytes: 10
  %loadMem_4547ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547ab = call %struct.Memory* @routine_movq__0x57f983___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547ab)
  store %struct.Memory* %call_4547ab, %struct.Memory** %MEMORY

  ; Code: leaq -0x539c(%rbp), %rcx	 RIP: 4547b5	 Bytes: 7
  %loadMem_4547b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547b5 = call %struct.Memory* @routine_leaq_MINUS0x539c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547b5)
  store %struct.Memory* %call_4547b5, %struct.Memory** %MEMORY

  ; Code: movq $0x57f97f, %rax	 RIP: 4547bc	 Bytes: 10
  %loadMem_4547bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547bc = call %struct.Memory* @routine_movq__0x57f97f___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547bc)
  store %struct.Memory* %call_4547bc, %struct.Memory** %MEMORY

  ; Code: movq $0x58898d, %rdx	 RIP: 4547c6	 Bytes: 10
  %loadMem_4547c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547c6 = call %struct.Memory* @routine_movq__0x58898d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547c6)
  store %struct.Memory* %call_4547c6, %struct.Memory** %MEMORY

  ; Code: leaq -0x5390(%rbp), %rdi	 RIP: 4547d0	 Bytes: 7
  %loadMem_4547d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547d0 = call %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547d0)
  store %struct.Memory* %call_4547d0, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 4547d7	 Bytes: 4
  %loadMem_4547d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547d7 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547d7)
  store %struct.Memory* %call_4547d7, %struct.Memory** %MEMORY

  ; Code: cmpl -0x34(%rbp), %r8d	 RIP: 4547db	 Bytes: 4
  %loadMem_4547db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547db = call %struct.Memory* @routine_cmpl_MINUS0x34__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547db)
  store %struct.Memory* %call_4547db, %struct.Memory** %MEMORY

  ; Code: cmoveq %rdx, %rax	 RIP: 4547df	 Bytes: 4
  %loadMem_4547df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547df = call %struct.Memory* @routine_cmoveq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547df)
  store %struct.Memory* %call_4547df, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 4547e3	 Bytes: 3
  %loadMem_4547e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547e3 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547e3)
  store %struct.Memory* %call_4547e3, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4547e6	 Bytes: 2
  %loadMem_4547e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547e6 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547e6)
  store %struct.Memory* %call_4547e6, %struct.Memory** %MEMORY

  ; Code: callq .sprintf_plt	 RIP: 4547e8	 Bytes: 5
  %loadMem1_4547e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4547e8 = call %struct.Memory* @routine_callq_.sprintf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4547e8, i64 -341528, i64 5, i64 5)
  store %struct.Memory* %call1_4547e8, %struct.Memory** %MEMORY

  %loadMem2_4547e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4547e8 = load i64, i64* %3
  %call2_4547e8 = call %struct.Memory* @ext_sprintf(%struct.State* %0, i64  %loadPC_4547e8, %struct.Memory* %loadMem2_4547e8)
  store %struct.Memory* %call2_4547e8, %struct.Memory** %MEMORY

  ; Code: leaq -0x5390(%rbp), %rcx	 RIP: 4547ed	 Bytes: 7
  %loadMem_4547ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547ed = call %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547ed)
  store %struct.Memory* %call_4547ed, %struct.Memory** %MEMORY

  ; Code: movslq -0x539c(%rbp), %rdx	 RIP: 4547f4	 Bytes: 7
  %loadMem_4547f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547f4 = call %struct.Memory* @routine_movslq_MINUS0x539c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547f4)
  store %struct.Memory* %call_4547f4, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4547fb	 Bytes: 3
  %loadMem_4547fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547fb = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547fb)
  store %struct.Memory* %call_4547fb, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x5398(%rbp)	 RIP: 4547fe	 Bytes: 7
  %loadMem_4547fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4547fe = call %struct.Memory* @routine_movq__rcx__MINUS0x5398__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4547fe)
  store %struct.Memory* %call_4547fe, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x5138(%rbp)	 RIP: 454805	 Bytes: 10
  %loadMem_454805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454805 = call %struct.Memory* @routine_movl__0x0__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454805)
  store %struct.Memory* %call_454805, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x53fc(%rbp)	 RIP: 45480f	 Bytes: 6
  %loadMem_45480f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45480f = call %struct.Memory* @routine_movl__eax__MINUS0x53fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45480f)
  store %struct.Memory* %call_45480f, %struct.Memory** %MEMORY

  ; Code: .L_454815:	 RIP: 454815	 Bytes: 0
  br label %block_.L_454815
block_.L_454815:

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 454815	 Bytes: 6
  %loadMem_454815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454815 = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454815)
  store %struct.Memory* %call_454815, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 45481b	 Bytes: 6
  %loadMem_45481b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45481b = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45481b)
  store %struct.Memory* %call_45481b, %struct.Memory** %MEMORY

  ; Code: jge .L_454922	 RIP: 454821	 Bytes: 6
  %loadMem_454821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454821 = call %struct.Memory* @routine_jge_.L_454922(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454821, i8* %BRANCH_TAKEN, i64 257, i64 6, i64 6)
  store %struct.Memory* %call_454821, %struct.Memory** %MEMORY

  %loadBr_454821 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454821 = icmp eq i8 %loadBr_454821, 1
  br i1 %cmpBr_454821, label %block_.L_454922, label %block_454827

block_454827:
  ; Code: movq $0x57f9a0, %rsi	 RIP: 454827	 Bytes: 10
  %loadMem_454827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454827 = call %struct.Memory* @routine_movq__0x57f9a0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454827)
  store %struct.Memory* %call_454827, %struct.Memory** %MEMORY

  ; Code: leaq -0x539c(%rbp), %r9	 RIP: 454831	 Bytes: 7
  %loadMem_454831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454831 = call %struct.Memory* @routine_leaq_MINUS0x539c__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454831)
  store %struct.Memory* %call_454831, %struct.Memory** %MEMORY

  ; Code: movl $0x14, %eax	 RIP: 454838	 Bytes: 5
  %loadMem_454838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454838 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454838)
  store %struct.Memory* %call_454838, %struct.Memory** %MEMORY

  ; Code: movq -0x5398(%rbp), %rdi	 RIP: 45483d	 Bytes: 7
  %loadMem_45483d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45483d = call %struct.Memory* @routine_movq_MINUS0x5398__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45483d)
  store %struct.Memory* %call_45483d, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 454844	 Bytes: 4
  %loadMem_454844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454844 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454844)
  store %struct.Memory* %call_454844, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rdx	 RIP: 454848	 Bytes: 7
  %loadMem_454848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454848 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454848)
  store %struct.Memory* %call_454848, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %r8d	 RIP: 45484f	 Bytes: 4
  %loadMem_45484f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45484f = call %struct.Memory* @routine_movl___rcx__rdx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45484f)
  store %struct.Memory* %call_45484f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5400(%rbp)	 RIP: 454853	 Bytes: 6
  %loadMem_454853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454853 = call %struct.Memory* @routine_movl__eax__MINUS0x5400__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454853)
  store %struct.Memory* %call_454853, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %eax	 RIP: 454859	 Bytes: 3
  %loadMem_454859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454859 = call %struct.Memory* @routine_movl__r8d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454859)
  store %struct.Memory* %call_454859, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 45485c	 Bytes: 1
  %loadMem_45485c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45485c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45485c)
  store %struct.Memory* %call_45485c, %struct.Memory** %MEMORY

  ; Code: movl -0x5400(%rbp), %r8d	 RIP: 45485d	 Bytes: 7
  %loadMem_45485d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45485d = call %struct.Memory* @routine_movl_MINUS0x5400__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45485d)
  store %struct.Memory* %call_45485d, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 454864	 Bytes: 3
  %loadMem_454864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454864 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454864)
  store %struct.Memory* %call_454864, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 454867	 Bytes: 3
  %loadMem_454867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454867 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454867)
  store %struct.Memory* %call_454867, %struct.Memory** %MEMORY

  ; Code: addl $0x41, %edx	 RIP: 45486a	 Bytes: 3
  %loadMem_45486a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45486a = call %struct.Memory* @routine_addl__0x41___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45486a)
  store %struct.Memory* %call_45486a, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 45486d	 Bytes: 4
  %loadMem_45486d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45486d = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45486d)
  store %struct.Memory* %call_45486d, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %r10	 RIP: 454871	 Bytes: 7
  %loadMem_454871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454871 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454871)
  store %struct.Memory* %call_454871, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%r10,4), %r11d	 RIP: 454878	 Bytes: 4
  %loadMem_454878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454878 = call %struct.Memory* @routine_movl___rcx__r10_4____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454878)
  store %struct.Memory* %call_454878, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %eax	 RIP: 45487c	 Bytes: 3
  %loadMem_45487c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45487c = call %struct.Memory* @routine_movl__r11d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45487c)
  store %struct.Memory* %call_45487c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5404(%rbp)	 RIP: 45487f	 Bytes: 6
  %loadMem_45487f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45487f = call %struct.Memory* @routine_movl__edx__MINUS0x5404__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45487f)
  store %struct.Memory* %call_45487f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 454885	 Bytes: 1
  %loadMem_454885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454885 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454885)
  store %struct.Memory* %call_454885, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 454886	 Bytes: 3
  %loadMem_454886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454886 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454886)
  store %struct.Memory* %call_454886, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 454889	 Bytes: 3
  %loadMem_454889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454889 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454889)
  store %struct.Memory* %call_454889, %struct.Memory** %MEMORY

  ; Code: cmpl $0x8, %edx	 RIP: 45488c	 Bytes: 3
  %loadMem_45488c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45488c = call %struct.Memory* @routine_cmpl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45488c)
  store %struct.Memory* %call_45488c, %struct.Memory** %MEMORY

  ; Code: setge %bl	 RIP: 45488f	 Bytes: 3
  %loadMem_45488f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45488f = call %struct.Memory* @routine_setge__bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45488f)
  store %struct.Memory* %call_45488f, %struct.Memory** %MEMORY

  ; Code: andb $0x1, %bl	 RIP: 454892	 Bytes: 3
  %loadMem_454892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454892 = call %struct.Memory* @routine_andb__0x1___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454892)
  store %struct.Memory* %call_454892, %struct.Memory** %MEMORY

  ; Code: movzbl %bl, %edx	 RIP: 454895	 Bytes: 3
  %loadMem_454895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454895 = call %struct.Memory* @routine_movzbl__bl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454895)
  store %struct.Memory* %call_454895, %struct.Memory** %MEMORY

  ; Code: movl -0x5404(%rbp), %r11d	 RIP: 454898	 Bytes: 7
  %loadMem_454898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454898 = call %struct.Memory* @routine_movl_MINUS0x5404__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454898)
  store %struct.Memory* %call_454898, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r11d	 RIP: 45489f	 Bytes: 3
  %loadMem_45489f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45489f = call %struct.Memory* @routine_addl__edx___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45489f)
  store %struct.Memory* %call_45489f, %struct.Memory** %MEMORY

  ; Code: movl 0x7ae438, %edx	 RIP: 4548a2	 Bytes: 7
  %loadMem_4548a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548a2 = call %struct.Memory* @routine_movl_0x7ae438___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548a2)
  store %struct.Memory* %call_4548a2, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 4548a9	 Bytes: 4
  %loadMem_4548a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548a9 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548a9)
  store %struct.Memory* %call_4548a9, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %r10	 RIP: 4548ad	 Bytes: 7
  %loadMem_4548ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548ad = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548ad)
  store %struct.Memory* %call_4548ad, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%r10,4), %r14d	 RIP: 4548b4	 Bytes: 4
  %loadMem_4548b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548b4 = call %struct.Memory* @routine_movl___rcx__r10_4____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548b4)
  store %struct.Memory* %call_4548b4, %struct.Memory** %MEMORY

  ; Code: movl %r14d, %eax	 RIP: 4548b8	 Bytes: 3
  %loadMem_4548b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548b8 = call %struct.Memory* @routine_movl__r14d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548b8)
  store %struct.Memory* %call_4548b8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x5408(%rbp)	 RIP: 4548bb	 Bytes: 6
  %loadMem_4548bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548bb = call %struct.Memory* @routine_movl__edx__MINUS0x5408__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548bb)
  store %struct.Memory* %call_4548bb, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4548c1	 Bytes: 1
  %loadMem_4548c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548c1 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548c1)
  store %struct.Memory* %call_4548c1, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 4548c2	 Bytes: 3
  %loadMem_4548c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548c2 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548c2)
  store %struct.Memory* %call_4548c2, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 4548c5	 Bytes: 3
  %loadMem_4548c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548c5 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548c5)
  store %struct.Memory* %call_4548c5, %struct.Memory** %MEMORY

  ; Code: movl -0x5408(%rbp), %r14d	 RIP: 4548c8	 Bytes: 7
  %loadMem_4548c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548c8 = call %struct.Memory* @routine_movl_MINUS0x5408__rbp____r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548c8)
  store %struct.Memory* %call_4548c8, %struct.Memory** %MEMORY

  ; Code: subl %eax, %r14d	 RIP: 4548cf	 Bytes: 3
  %loadMem_4548cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548cf = call %struct.Memory* @routine_subl__eax___r14d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548cf)
  store %struct.Memory* %call_4548cf, %struct.Memory** %MEMORY

  ; Code: movslq -0x5138(%rbp), %rcx	 RIP: 4548d2	 Bytes: 7
  %loadMem_4548d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548d2 = call %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548d2)
  store %struct.Memory* %call_4548d2, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rcx,4), %r8d	 RIP: 4548d9	 Bytes: 8
  %loadMem_4548d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548d9 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rcx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548d9)
  store %struct.Memory* %call_4548d9, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %edx	 RIP: 4548e1	 Bytes: 3
  %loadMem_4548e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548e1 = call %struct.Memory* @routine_movl__r11d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548e1)
  store %struct.Memory* %call_4548e1, %struct.Memory** %MEMORY

  ; Code: movl %r14d, %ecx	 RIP: 4548e4	 Bytes: 3
  %loadMem_4548e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548e4 = call %struct.Memory* @routine_movl__r14d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548e4)
  store %struct.Memory* %call_4548e4, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4548e7	 Bytes: 2
  %loadMem_4548e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548e7 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548e7)
  store %struct.Memory* %call_4548e7, %struct.Memory** %MEMORY

  ; Code: callq .sprintf_plt	 RIP: 4548e9	 Bytes: 5
  %loadMem1_4548e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4548e9 = call %struct.Memory* @routine_callq_.sprintf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4548e9, i64 -341785, i64 5, i64 5)
  store %struct.Memory* %call1_4548e9, %struct.Memory** %MEMORY

  %loadMem2_4548e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4548e9 = load i64, i64* %3
  %call2_4548e9 = call %struct.Memory* @ext_sprintf(%struct.State* %0, i64  %loadPC_4548e9, %struct.Memory* %loadMem2_4548e9)
  store %struct.Memory* %call2_4548e9, %struct.Memory** %MEMORY

  ; Code: movl -0x539c(%rbp), %ecx	 RIP: 4548ee	 Bytes: 6
  %loadMem_4548ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548ee = call %struct.Memory* @routine_movl_MINUS0x539c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548ee)
  store %struct.Memory* %call_4548ee, %struct.Memory** %MEMORY

  ; Code: movq -0x5398(%rbp), %rsi	 RIP: 4548f4	 Bytes: 7
  %loadMem_4548f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548f4 = call %struct.Memory* @routine_movq_MINUS0x5398__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548f4)
  store %struct.Memory* %call_4548f4, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdi	 RIP: 4548fb	 Bytes: 3
  %loadMem_4548fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548fb = call %struct.Memory* @routine_movslq__ecx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548fb)
  store %struct.Memory* %call_4548fb, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4548fe	 Bytes: 3
  %loadMem_4548fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4548fe = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4548fe)
  store %struct.Memory* %call_4548fe, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x5398(%rbp)	 RIP: 454901	 Bytes: 7
  %loadMem_454901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454901 = call %struct.Memory* @routine_movq__rsi__MINUS0x5398__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454901)
  store %struct.Memory* %call_454901, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x540c(%rbp)	 RIP: 454908	 Bytes: 6
  %loadMem_454908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454908 = call %struct.Memory* @routine_movl__eax__MINUS0x540c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454908)
  store %struct.Memory* %call_454908, %struct.Memory** %MEMORY

  ; Code: movl -0x5138(%rbp), %eax	 RIP: 45490e	 Bytes: 6
  %loadMem_45490e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45490e = call %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45490e)
  store %struct.Memory* %call_45490e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454914	 Bytes: 3
  %loadMem_454914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454914 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454914)
  store %struct.Memory* %call_454914, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5138(%rbp)	 RIP: 454917	 Bytes: 6
  %loadMem_454917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454917 = call %struct.Memory* @routine_movl__eax__MINUS0x5138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454917)
  store %struct.Memory* %call_454917, %struct.Memory** %MEMORY

  ; Code: jmpq .L_454815	 RIP: 45491d	 Bytes: 5
  %loadMem_45491d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45491d = call %struct.Memory* @routine_jmpq_.L_454815(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45491d, i64 -264, i64 5)
  store %struct.Memory* %call_45491d, %struct.Memory** %MEMORY

  br label %block_.L_454815

  ; Code: .L_454922:	 RIP: 454922	 Bytes: 0
block_.L_454922:

  ; Code: leaq -0x5390(%rbp), %rsi	 RIP: 454922	 Bytes: 7
  %loadMem_454922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454922 = call %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454922)
  store %struct.Memory* %call_454922, %struct.Memory** %MEMORY

  ; Code: movq 0xab0ef8, %rdi	 RIP: 454929	 Bytes: 8
  %loadMem_454929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454929 = call %struct.Memory* @routine_movq_0xab0ef8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454929)
  store %struct.Memory* %call_454929, %struct.Memory** %MEMORY

  ; Code: callq .sgftreeAddComment	 RIP: 454931	 Bytes: 5
  %loadMem1_454931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_454931 = call %struct.Memory* @routine_callq_.sgftreeAddComment(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_454931, i64 -328257, i64 5, i64 5)
  store %struct.Memory* %call1_454931, %struct.Memory** %MEMORY

  %loadMem2_454931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_454931 = load i64, i64* %3
  %call2_454931 = call %struct.Memory* @sub_4046f0.sgftreeAddComment(%struct.State* %0, i64  %loadPC_454931, %struct.Memory* %loadMem2_454931)
  store %struct.Memory* %call2_454931, %struct.Memory** %MEMORY

  ; Code: .L_454936:	 RIP: 454936	 Bytes: 0
  br label %block_.L_454936
block_.L_454936:

  ; Code: movl $0x0, -0x40(%rbp)	 RIP: 454936	 Bytes: 7
  %loadMem_454936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454936 = call %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454936)
  store %struct.Memory* %call_454936, %struct.Memory** %MEMORY

  ; Code: .L_45493d:	 RIP: 45493d	 Bytes: 0
  br label %block_.L_45493d
block_.L_45493d:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 45493d	 Bytes: 3
  %loadMem_45493d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45493d = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45493d)
  store %struct.Memory* %call_45493d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x5104(%rbp), %eax	 RIP: 454940	 Bytes: 6
  %loadMem_454940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454940 = call %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454940)
  store %struct.Memory* %call_454940, %struct.Memory** %MEMORY

  ; Code: jge .L_454983	 RIP: 454946	 Bytes: 6
  %loadMem_454946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454946 = call %struct.Memory* @routine_jge_.L_454983(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454946, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_454946, %struct.Memory** %MEMORY

  %loadBr_454946 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454946 = icmp eq i8 %loadBr_454946, 1
  br i1 %cmpBr_454946, label %block_.L_454983, label %block_45494c

block_45494c:
  ; Code: movslq -0x40(%rbp), %rax	 RIP: 45494c	 Bytes: 4
  %loadMem_45494c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45494c = call %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45494c)
  store %struct.Memory* %call_45494c, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp,%rax,4), %ecx	 RIP: 454950	 Bytes: 7
  %loadMem_454950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454950 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454950)
  store %struct.Memory* %call_454950, %struct.Memory** %MEMORY

  ; Code: movl -0x5100(%rbp), %edx	 RIP: 454957	 Bytes: 6
  %loadMem_454957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454957 = call %struct.Memory* @routine_movl_MINUS0x5100__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454957)
  store %struct.Memory* %call_454957, %struct.Memory** %MEMORY

  ; Code: addl $0x5dc, %edx	 RIP: 45495d	 Bytes: 6
  %loadMem_45495d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45495d = call %struct.Memory* @routine_addl__0x5dc___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45495d)
  store %struct.Memory* %call_45495d, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 454963	 Bytes: 2
  %loadMem_454963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454963 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454963)
  store %struct.Memory* %call_454963, %struct.Memory** %MEMORY

  ; Code: jle .L_454970	 RIP: 454965	 Bytes: 6
  %loadMem_454965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454965 = call %struct.Memory* @routine_jle_.L_454970(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454965, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_454965, %struct.Memory** %MEMORY

  %loadBr_454965 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_454965 = icmp eq i8 %loadBr_454965, 1
  br i1 %cmpBr_454965, label %block_.L_454970, label %block_45496b

block_45496b:
  ; Code: jmpq .L_454983	 RIP: 45496b	 Bytes: 5
  %loadMem_45496b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45496b = call %struct.Memory* @routine_jmpq_.L_454983(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45496b, i64 24, i64 5)
  store %struct.Memory* %call_45496b, %struct.Memory** %MEMORY

  br label %block_.L_454983

  ; Code: .L_454970:	 RIP: 454970	 Bytes: 0
block_.L_454970:

  ; Code: jmpq .L_454975	 RIP: 454970	 Bytes: 5
  %loadMem_454970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454970 = call %struct.Memory* @routine_jmpq_.L_454975(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454970, i64 5, i64 5)
  store %struct.Memory* %call_454970, %struct.Memory** %MEMORY

  br label %block_.L_454975

  ; Code: .L_454975:	 RIP: 454975	 Bytes: 0
block_.L_454975:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 454975	 Bytes: 3
  %loadMem_454975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454975 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454975)
  store %struct.Memory* %call_454975, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 454978	 Bytes: 3
  %loadMem_454978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454978 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454978)
  store %struct.Memory* %call_454978, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 45497b	 Bytes: 3
  %loadMem_45497b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45497b = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45497b)
  store %struct.Memory* %call_45497b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_45493d	 RIP: 45497e	 Bytes: 5
  %loadMem_45497e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45497e = call %struct.Memory* @routine_jmpq_.L_45493d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45497e, i64 -65, i64 5)
  store %struct.Memory* %call_45497e, %struct.Memory** %MEMORY

  br label %block_.L_45493d

  ; Code: .L_454983:	 RIP: 454983	 Bytes: 0
block_.L_454983:

  ; Code: movl -0x40(%rbp), %eax	 RIP: 454983	 Bytes: 3
  %loadMem_454983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454983 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454983)
  store %struct.Memory* %call_454983, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5104(%rbp)	 RIP: 454986	 Bytes: 6
  %loadMem_454986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454986 = call %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454986)
  store %struct.Memory* %call_454986, %struct.Memory** %MEMORY

  ; Code: movl -0x5104(%rbp), %eax	 RIP: 45498c	 Bytes: 6
  %loadMem_45498c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45498c = call %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45498c)
  store %struct.Memory* %call_45498c, %struct.Memory** %MEMORY

  ; Code: addq $0x5400, %rsp	 RIP: 454992	 Bytes: 7
  %loadMem_454992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454992 = call %struct.Memory* @routine_addq__0x5400___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454992)
  store %struct.Memory* %call_454992, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 454999	 Bytes: 1
  %loadMem_454999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_454999 = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_454999)
  store %struct.Memory* %call_454999, %struct.Memory** %MEMORY

  ; Code: popq %r14	 RIP: 45499a	 Bytes: 2
  %loadMem_45499a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45499a = call %struct.Memory* @routine_popq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45499a)
  store %struct.Memory* %call_45499a, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 45499c	 Bytes: 1
  %loadMem_45499c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45499c = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45499c)
  store %struct.Memory* %call_45499c, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 45499d	 Bytes: 1
  %loadMem_45499d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_45499d = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_45499d)
  store %struct.Memory* %call_45499d, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_45499d
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x5400___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 21504)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x25c8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 9672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x3___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 3)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r8__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x34__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 52
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r9d__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x34__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4SETZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sete__r10b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4SETZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %R10B)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i8
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %6 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andb__0x1___r10b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %R10B
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %R10B, i64 %11, i64 1)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 255
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl__r10b___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %R10B
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20740
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0xab0ef8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rcx__MINUS0x5110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20752
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0xab0eec___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__edx__MINUS0x5114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20756
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20760
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x511c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20764
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20768
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20772
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x0__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0xab0eec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.compute_connection_distances(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x4b50__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x5130__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.findlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_453590(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5130__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0__MINUS0x25c8__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -9672
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl__0x0__MINUS0x1948__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -6472
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -19280
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__ecx__MINUS0x4b50__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -19280
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_movl_MINUS0x1948__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -6472
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__ecx__MINUS0x3ed0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -16080
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}












define %struct.Memory* @routine_jne_.L_4535d8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x0__MINUS0x4b50__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -19280
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x25c8__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -9672
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__ecx__MINUS0x25c8__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -9672
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}






define %struct.Memory* @routine_movl__ecx__MINUS0x5128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20776
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__ecx__MINUS0x512c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20780
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5128__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x512c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20780
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_45361d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5128__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x53a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_453629(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x512c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20780
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x53a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0f28_type* @G_0xab0f28 to i64), i64 0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_453684(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x57f693___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f693_type* @G__0x57f693 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x5114__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20756
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.gprintf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x53a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.dump_stack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__edi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.showboard(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x25c8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 9672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.print_connection_distances(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x4b50__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x44__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 68
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_45419b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x688__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1672
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20800
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x5140__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x5144__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20804
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1f88__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -8072
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20808
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__ecx__MINUS0x514c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20812
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x4510__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -17680
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20816
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5144__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x5148__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x514c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20812
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x5150__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20816
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x9c4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2500)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_453750(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5144__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0xc8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 200)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x514c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20812
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x512c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20780
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_453755(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_45418d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_453785(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4537a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5140__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.find_origin(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl_MINUS0x5140__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20800
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_4537a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_4537e6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f6a3___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f6a3_type* @G__0x57f6a3 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x5140__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5144__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5148__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20808
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x514c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20812
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x5150__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20816
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__eax__MINUS0x53a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subl_MINUS0x5148__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x5154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20820
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subl_MINUS0x5150__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20816
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x5158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20824
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5154__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20820
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x5158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20824
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x515c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20828
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jle_.L_453847(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f6c1___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f6c1_type* @G__0x57f6c1 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x515c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20828
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x53ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x3__MINUS0x5154__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20820
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 3)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5158__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_4538b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__0x3__MINUS0x5158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 3)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5154__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20820
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x515c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20828
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x64___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 100)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_4538ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f6db___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f6db_type* @G__0x57f6db to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x53b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4538b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x1948__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -6472
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_453911(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl_MINUS0x3ed0__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %RBP
  %18 = load i64, i64* %RAX
  %19 = mul i64 %18, 4
  %20 = add i64 %17, -16080
  %21 = add i64 %20, %19
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_jne_.L_453911(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_45390c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f6f4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f6f4_type* @G__0x57f6f4 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x53b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21428
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_453a59(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.check_self_atari(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_453a2a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_453945(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20832
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5160__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x5104__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20740
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4539c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x5160__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_cmpl_MINUS0x5140__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20800
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_4539ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5160__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -20736
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_cmpl_MINUS0x515c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20828
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4539a9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x5100__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -20736
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_jmpq_.L_4539c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4539b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x5160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20832
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_45394f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_453a20(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x16a__MINUS0x5104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20740
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 362)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_453a20(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5140__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movslq_MINUS0x5104__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x5104__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x5104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20740
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453a25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_453a54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_453a4f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f718___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f718_type* @G__0x57f718 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x53b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_454188(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl_MINUS0x38__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 56
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_453e27(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x5118__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x511c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x5120__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x5124__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.attack_and_defend(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x53bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_453adc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f733___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f733_type* @G__0x57f733 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x5118__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x511c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5120__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5124__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20772
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__eax__MINUS0x53c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_453cd2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x5118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20760
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x5120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20768
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_453b3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addl__0x1f4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 500)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_453b36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f770___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f770_type* @G__0x57f770 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x53c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453bab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x511c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addl_MINUS0x4b50__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -19280
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_addl_MINUS0x514c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20812
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_453ba6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jle_.L_453ba1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f786___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f786_type* @G__0x57f786 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x53c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453ba6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_453bb0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20836
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5164__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20836
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_453c3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5164__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20836
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x511c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20764
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_453c26(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5164__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20836
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x515c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20828
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x96___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 150)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_453c21(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x96___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 150)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_453c3f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_453c2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20836
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453bba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_453c9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_453c9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x511c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jmpq_.L_453ca2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_453ccd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f7b3___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f7b3_type* @G__0x57f7b3 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x511c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x53cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453e22(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_453e1d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_453e1d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_453cfb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20840
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5168__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_453d8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5168__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x5124__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20772
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_453d71(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5168__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subl__0x1f4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 500)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_453d6c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x1f4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 500)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_453d8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_453d76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20840
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453d05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_453de8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_453de8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5124__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jmpq_.L_453ded(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_453e18(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f7d8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f7d8_type* @G__0x57f7d8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x5124__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x53d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453e1d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_454183(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl_MINUS0x34__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_45417e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20788
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x5134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20788
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_454179(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5134__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20788
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_453e81(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x1308__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -4872
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x516c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20844
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453e95(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0xcc8__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -3272
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_andl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_453ec0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x3890__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -14480
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20848
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453ed4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x3250__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -12880
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl_MINUS0x516c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20844
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5170__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.common_vulnerability(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_454160(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_45401d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_453f0d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20852
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5174__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_453f8f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5174__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x516c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20844
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_453f76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5174__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_453f71(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_453f8f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_453f7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20852
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453f17(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_453fe8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_453fe8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x516c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20844
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jmpq_.L_453fed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_454018(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f7fd___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f7fd_type* @G__0x57f7fd to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x516c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20844
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x53d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_45401d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x5170__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x516c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20844
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_45415b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5170__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_45404b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20856
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5178__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20856
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4540cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5178__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20856
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x5170__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20848
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_4540b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5178__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20856
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_4540af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_4540cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4540b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20856
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_454055(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_454126(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_454126(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_jmpq_.L_45412b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_454156(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x53d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_45415b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_454160(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_454165(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20788
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_453e49(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_45417e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_45368b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x5110__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5114__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20756
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64), i64 %10)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jge_.L_4545ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x517c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20860
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20864
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_454492(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x517c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x5134__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20788
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x5184__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20868
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20868
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x38__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 56
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_4543fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x5180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20864
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_subl__0x96___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 150)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x5100__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -20736
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_jle_.L_45427e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f81b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f81b_type* @G__0x57f81b to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x517c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x53dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5184__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20868
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.countlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jg_.L_4543f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl__0xc8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 200)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_4542d5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f844___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f844_type* @G__0x57f844 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x517c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subl_MINUS0x1f88__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -8072
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_cmpl__0x1f4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 500)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_454325(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5184__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20868
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jg_.L_4543f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_subl_MINUS0x4510__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -17680
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_jle_.L_454375(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl___rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_4543f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_subl__0x2bc___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 700)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_4543ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f888___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f888_type* @G__0x57f888 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4543f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4543f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_454479(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_454474(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jg_.L_45446f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jle_.L_45446a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f8c7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f8c7_type* @G__0x57f8c7 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21480
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_45446f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_454474(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_45447e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4541f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x5180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20864
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_454504(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x517c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.is_edge_vertex(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_subl__0x64___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 100)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jle_.L_4544ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f90b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f90b_type* @G__0x57f90b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_454504(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_callq_.liberty_of_string(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_45452c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_454554(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_454599(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_454599(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jle_.L_454594(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f930___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f930_type* @G__0x57f930 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_454599(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_45459e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4541be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x5138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20792
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x5138__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_45470f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x5188__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20872
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x5138__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x518c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20876
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x513c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20796
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x513c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_45465c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x513c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x5188__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20872
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_454643(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x513c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_454648(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x513c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20796
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4545f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x518c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x5138__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20792
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_4546f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x5190__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20880
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x5100__rbp__rax_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -20736
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__edx__MINUS0x5194__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20884
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movslq_MINUS0x518c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edx__MINUS0x5100__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -20736
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl_MINUS0x5190__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20880
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x5194__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20884
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jmpq_.L_4546fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x5138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4545b6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_45479c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f964___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f964_type* @G__0x57f964 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x53f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_454797(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f975___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57f975_type* @G__0x57f975 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}










define %struct.Memory* @routine_movl__eax__MINUS0x53f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21496
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_45473e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_45479c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_454936(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f983___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57f983_type* @G__0x57f983 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x539c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x57f97f___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x57f97f_type* @G__0x57f97f to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x58898d___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x58898d_type* @G__0x58898d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl_MINUS0x34__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  %8 = load i64, i64* %2, align 8
  %9 = select i1 %7, i64 %3, i64 %8
  store i64 %9, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmoveq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5CMOVZI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_callq_.sprintf_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x539c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__MINUS0x5398__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21400
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x53fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21500
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_454922(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f9a0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57f9a0_type* @G__0x57f9a0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x539c__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 20)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x5398__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x5138__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rcx__rdx_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x5400__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21504
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x5400__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 21504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x41___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 65)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x5138__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rcx__r10_4____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R11D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__r11d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x5404__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21508
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_cmpl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNLI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = xor i1 %6, %9
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setge__bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNLI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %BL)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_andb__0x1___bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %BL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %BL, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movzbl__bl___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %BL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x5404__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 21508
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__edx___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_0x7ae438___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x7ae438_type* @G_0x7ae438 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl___rcx__r10_4____r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R14D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__r14d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x5408__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21512
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x5408__rbp____r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 21512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__eax___r14d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i32, i32* %R14D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl_MINUS0x5100__rbp__rcx_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -20736
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl__r11d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r14d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R14D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x539c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x5398__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rdi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rsi__MINUS0x5398__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21400
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x540c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21516
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_454815(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x5390__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 21392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0xab0ef8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_callq_.sgftreeAddComment(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_454983(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x5100__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x5dc___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1500)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jle_.L_454970(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_454983(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_454975(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_45493d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x5400___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 21504)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R14)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

