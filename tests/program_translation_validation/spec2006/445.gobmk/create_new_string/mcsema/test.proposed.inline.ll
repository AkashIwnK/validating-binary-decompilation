; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99da00_type = type <{ [4 x i8] }>
%G_0x99da08_type = type <{ [4 x i8] }>
%G_0xa0e710_type = type <{ [8 x i8] }>
%G__0x99da00_type = type <{ [8 x i8] }>
%G__0xa7f430_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99da00 = global %G_0x99da00_type zeroinitializer
@G_0x99da08 = global %G_0x99da08_type zeroinitializer
@G_0xa0e710 = global %G_0xa0e710_type zeroinitializer
@G__0x99da00 = global %G__0x99da00_type zeroinitializer
@G__0xa7f430 = global %G__0xa7f430_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @create_new_string(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40a850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40a850, %struct.Memory** %MEMORY
  %loadMem_40a851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i
  %27 = load i64, i64* %PC.i1312
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1312
  store i64 %26, i64* %RBP.i1313, align 8
  store %struct.Memory* %loadMem_40a851, %struct.Memory** %MEMORY
  %loadMem_40a854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 1
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RAX.i1311 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %PC.i1310
  %36 = add i64 %35, 10
  store i64 %36, i64* %PC.i1310
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1311, align 8
  store %struct.Memory* %loadMem_40a854, %struct.Memory** %MEMORY
  %loadMem_40a85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 33
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 5
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RCX.i1309 = bitcast %union.anon* %42 to i64*
  %43 = load i64, i64* %PC.i1308
  %44 = add i64 %43, 10
  store i64 %44, i64* %PC.i1308
  store i64 ptrtoint (%G__0x99da00_type* @G__0x99da00 to i64), i64* %RCX.i1309, align 8
  store %struct.Memory* %loadMem_40a85e, %struct.Memory** %MEMORY
  %loadMem_40a868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 33
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 7
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %RDX.i1307 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %PC.i1306
  %52 = add i64 %51, 5
  store i64 %52, i64* %PC.i1306
  store i64 3, i64* %RDX.i1307, align 8
  store %struct.Memory* %loadMem_40a868, %struct.Memory** %MEMORY
  %loadMem_40a86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %54 = getelementptr inbounds %struct.GPR, %struct.GPR* %53, i32 0, i32 33
  %55 = getelementptr inbounds %struct.Reg, %struct.Reg* %54, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %55 to i64*
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %57 = getelementptr inbounds %struct.GPR, %struct.GPR* %56, i32 0, i32 11
  %58 = getelementptr inbounds %struct.Reg, %struct.Reg* %57, i32 0, i32 0
  %EDI.i1304 = bitcast %union.anon* %58 to i32*
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 15
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %61 to i64*
  %62 = load i64, i64* %RBP.i1305
  %63 = sub i64 %62, 4
  %64 = load i32, i32* %EDI.i1304
  %65 = zext i32 %64 to i64
  %66 = load i64, i64* %PC.i1303
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC.i1303
  %68 = inttoptr i64 %63 to i32*
  store i32 %64, i32* %68
  store %struct.Memory* %loadMem_40a86d, %struct.Memory** %MEMORY
  %loadMem_40a870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %69 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %70 = getelementptr inbounds %struct.GPR, %struct.GPR* %69, i32 0, i32 33
  %71 = getelementptr inbounds %struct.Reg, %struct.Reg* %70, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %71 to i64*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %73 = getelementptr inbounds %struct.GPR, %struct.GPR* %72, i32 0, i32 9
  %74 = getelementptr inbounds %struct.Reg, %struct.Reg* %73, i32 0, i32 0
  %RSI.i1301 = bitcast %union.anon* %74 to i64*
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 15
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %RBP.i1302 = bitcast %union.anon* %77 to i64*
  %78 = load i64, i64* %RBP.i1302
  %79 = sub i64 %78, 4
  %80 = load i64, i64* %PC.i1300
  %81 = add i64 %80, 4
  store i64 %81, i64* %PC.i1300
  %82 = inttoptr i64 %79 to i32*
  %83 = load i32, i32* %82
  %84 = sext i32 %83 to i64
  store i64 %84, i64* %RSI.i1301, align 8
  store %struct.Memory* %loadMem_40a870, %struct.Memory** %MEMORY
  %loadMem_40a874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 33
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %87 to i64*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 9
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RSI.i1298 = bitcast %union.anon* %90 to i64*
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %92 = getelementptr inbounds %struct.GPR, %struct.GPR* %91, i32 0, i32 11
  %93 = getelementptr inbounds %struct.Reg, %struct.Reg* %92, i32 0, i32 0
  %RDI.i1299 = bitcast %union.anon* %93 to i64*
  %94 = load i64, i64* %RSI.i1298
  %95 = add i64 %94, 12099168
  %96 = load i64, i64* %PC.i1297
  %97 = add i64 %96, 8
  store i64 %97, i64* %PC.i1297
  %98 = inttoptr i64 %95 to i8*
  %99 = load i8, i8* %98
  %100 = zext i8 %99 to i64
  store i64 %100, i64* %RDI.i1299, align 8
  store %struct.Memory* %loadMem_40a874, %struct.Memory** %MEMORY
  %loadMem_40a87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 33
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %103 to i64*
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 11
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %EDI.i1295 = bitcast %union.anon* %106 to i32*
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 15
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %RBP.i1296 = bitcast %union.anon* %109 to i64*
  %110 = load i64, i64* %RBP.i1296
  %111 = sub i64 %110, 12
  %112 = load i32, i32* %EDI.i1295
  %113 = zext i32 %112 to i64
  %114 = load i64, i64* %PC.i1294
  %115 = add i64 %114, 3
  store i64 %115, i64* %PC.i1294
  %116 = inttoptr i64 %111 to i32*
  store i32 %112, i32* %116
  store %struct.Memory* %loadMem_40a87c, %struct.Memory** %MEMORY
  %loadMem_40a87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 33
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %119 to i64*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 7
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RDX.i1292 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1293 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %RDX.i1292
  %127 = load i64, i64* %RBP.i1293
  %128 = sub i64 %127, 12
  %129 = load i64, i64* %PC.i1291
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC.i1291
  %131 = trunc i64 %126 to i32
  %132 = inttoptr i64 %128 to i32*
  %133 = load i32, i32* %132
  %134 = sub i32 %131, %133
  %135 = zext i32 %134 to i64
  store i64 %135, i64* %RDX.i1292, align 8
  %136 = icmp ult i32 %131, %133
  %137 = zext i1 %136 to i8
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %137, i8* %138, align 1
  %139 = and i32 %134, 255
  %140 = call i32 @llvm.ctpop.i32(i32 %139)
  %141 = trunc i32 %140 to i8
  %142 = and i8 %141, 1
  %143 = xor i8 %142, 1
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %143, i8* %144, align 1
  %145 = xor i32 %133, %131
  %146 = xor i32 %145, %134
  %147 = lshr i32 %146, 4
  %148 = trunc i32 %147 to i8
  %149 = and i8 %148, 1
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %149, i8* %150, align 1
  %151 = icmp eq i32 %134, 0
  %152 = zext i1 %151 to i8
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %152, i8* %153, align 1
  %154 = lshr i32 %134, 31
  %155 = trunc i32 %154 to i8
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %155, i8* %156, align 1
  %157 = lshr i32 %131, 31
  %158 = lshr i32 %133, 31
  %159 = xor i32 %158, %157
  %160 = xor i32 %154, %157
  %161 = add i32 %160, %159
  %162 = icmp eq i32 %161, 2
  %163 = zext i1 %162 to i8
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %163, i8* %164, align 1
  store %struct.Memory* %loadMem_40a87f, %struct.Memory** %MEMORY
  %loadMem_40a882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 33
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %167 to i64*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 7
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %EDX.i1289 = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 15
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %RBP.i1290 = bitcast %union.anon* %173 to i64*
  %174 = load i64, i64* %RBP.i1290
  %175 = sub i64 %174, 16
  %176 = load i32, i32* %EDX.i1289
  %177 = zext i32 %176 to i64
  %178 = load i64, i64* %PC.i1288
  %179 = add i64 %178, 3
  store i64 %179, i64* %PC.i1288
  %180 = inttoptr i64 %175 to i32*
  store i32 %176, i32* %180
  store %struct.Memory* %loadMem_40a882, %struct.Memory** %MEMORY
  %loadMem_40a885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 33
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %183 to i64*
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 9
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %RSI.i1287 = bitcast %union.anon* %186 to i64*
  %187 = load i64, i64* %PC.i1286
  %188 = add i64 %187, 8
  store i64 %188, i64* %PC.i1286
  %189 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %189, i64* %RSI.i1287, align 8
  store %struct.Memory* %loadMem_40a885, %struct.Memory** %MEMORY
  %loadMem_40a88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 5
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %RCX.i1284 = bitcast %union.anon* %195 to i64*
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %197 = getelementptr inbounds %struct.GPR, %struct.GPR* %196, i32 0, i32 9
  %198 = getelementptr inbounds %struct.Reg, %struct.Reg* %197, i32 0, i32 0
  %RSI.i1285 = bitcast %union.anon* %198 to i64*
  %199 = load i64, i64* %RSI.i1285
  %200 = load i64, i64* %RCX.i1284
  %201 = load i64, i64* %PC.i1283
  %202 = add i64 %201, 3
  store i64 %202, i64* %PC.i1283
  %203 = inttoptr i64 %199 to i64*
  store i64 %200, i64* %203
  store %struct.Memory* %loadMem_40a88d, %struct.Memory** %MEMORY
  %loadMem_40a890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 33
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 7
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RDX.i1282 = bitcast %union.anon* %209 to i64*
  %210 = load i64, i64* %PC.i1281
  %211 = add i64 %210, 7
  store i64 %211, i64* %PC.i1281
  %212 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %213 = zext i32 %212 to i64
  store i64 %213, i64* %RDX.i1282, align 8
  store %struct.Memory* %loadMem_40a890, %struct.Memory** %MEMORY
  %loadMem_40a897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 33
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %216 to i64*
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 5
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %RCX.i1280 = bitcast %union.anon* %219 to i64*
  %220 = load i64, i64* %PC.i1279
  %221 = add i64 %220, 8
  store i64 %221, i64* %PC.i1279
  %222 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %222, i64* %RCX.i1280, align 8
  store %struct.Memory* %loadMem_40a897, %struct.Memory** %MEMORY
  %loadMem_40a89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %224 = getelementptr inbounds %struct.GPR, %struct.GPR* %223, i32 0, i32 33
  %225 = getelementptr inbounds %struct.Reg, %struct.Reg* %224, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %225 to i64*
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 5
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %RCX.i1277 = bitcast %union.anon* %228 to i64*
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 9
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %RSI.i1278 = bitcast %union.anon* %231 to i64*
  %232 = load i64, i64* %RCX.i1277
  %233 = load i64, i64* %PC.i1276
  %234 = add i64 %233, 3
  store i64 %234, i64* %PC.i1276
  store i64 %232, i64* %RSI.i1278, align 8
  store %struct.Memory* %loadMem_40a89f, %struct.Memory** %MEMORY
  %loadMem_40a8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 33
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %237 to i64*
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %239 = getelementptr inbounds %struct.GPR, %struct.GPR* %238, i32 0, i32 9
  %240 = getelementptr inbounds %struct.Reg, %struct.Reg* %239, i32 0, i32 0
  %RSI.i1275 = bitcast %union.anon* %240 to i64*
  %241 = load i64, i64* %RSI.i1275
  %242 = load i64, i64* %PC.i1274
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC.i1274
  %244 = add i64 16, %241
  store i64 %244, i64* %RSI.i1275, align 8
  %245 = icmp ult i64 %244, %241
  %246 = icmp ult i64 %244, 16
  %247 = or i1 %245, %246
  %248 = zext i1 %247 to i8
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %248, i8* %249, align 1
  %250 = trunc i64 %244 to i32
  %251 = and i32 %250, 255
  %252 = call i32 @llvm.ctpop.i32(i32 %251)
  %253 = trunc i32 %252 to i8
  %254 = and i8 %253, 1
  %255 = xor i8 %254, 1
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %255, i8* %256, align 1
  %257 = xor i64 16, %241
  %258 = xor i64 %257, %244
  %259 = lshr i64 %258, 4
  %260 = trunc i64 %259 to i8
  %261 = and i8 %260, 1
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %261, i8* %262, align 1
  %263 = icmp eq i64 %244, 0
  %264 = zext i1 %263 to i8
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %264, i8* %265, align 1
  %266 = lshr i64 %244, 63
  %267 = trunc i64 %266 to i8
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %267, i8* %268, align 1
  %269 = lshr i64 %241, 63
  %270 = xor i64 %266, %269
  %271 = add i64 %270, %266
  %272 = icmp eq i64 %271, 2
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %273, i8* %274, align 1
  store %struct.Memory* %loadMem_40a8a2, %struct.Memory** %MEMORY
  %loadMem_40a8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 9
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RSI.i1273 = bitcast %union.anon* %280 to i64*
  %281 = load i64, i64* %RSI.i1273
  %282 = load i64, i64* %PC.i1272
  %283 = add i64 %282, 8
  store i64 %283, i64* %PC.i1272
  store i64 %281, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40a8a6, %struct.Memory** %MEMORY
  %loadMem_40a8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 33
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %286 to i64*
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 7
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %EDX.i1270 = bitcast %union.anon* %289 to i32*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 5
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %RCX.i1271 = bitcast %union.anon* %292 to i64*
  %293 = load i64, i64* %RCX.i1271
  %294 = add i64 %293, 8
  %295 = load i32, i32* %EDX.i1270
  %296 = zext i32 %295 to i64
  %297 = load i64, i64* %PC.i1269
  %298 = add i64 %297, 3
  store i64 %298, i64* %PC.i1269
  %299 = inttoptr i64 %294 to i32*
  store i32 %295, i32* %299
  store %struct.Memory* %loadMem_40a8ae, %struct.Memory** %MEMORY
  %loadMem_40a8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 33
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %302 to i64*
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 7
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %RDX.i1268 = bitcast %union.anon* %305 to i64*
  %306 = load i64, i64* %PC.i1267
  %307 = add i64 %306, 7
  store i64 %307, i64* %PC.i1267
  %308 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %309 = zext i32 %308 to i64
  store i64 %309, i64* %RDX.i1268, align 8
  store %struct.Memory* %loadMem_40a8b1, %struct.Memory** %MEMORY
  %loadMem_40a8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 33
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %312 to i64*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 7
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %EDX.i1265 = bitcast %union.anon* %315 to i32*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 11
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %RDI.i1266 = bitcast %union.anon* %318 to i64*
  %319 = load i32, i32* %EDX.i1265
  %320 = zext i32 %319 to i64
  %321 = load i64, i64* %PC.i1264
  %322 = add i64 %321, 2
  store i64 %322, i64* %PC.i1264
  %323 = and i64 %320, 4294967295
  store i64 %323, i64* %RDI.i1266, align 8
  store %struct.Memory* %loadMem_40a8b8, %struct.Memory** %MEMORY
  %loadMem_40a8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %325 = getelementptr inbounds %struct.GPR, %struct.GPR* %324, i32 0, i32 33
  %326 = getelementptr inbounds %struct.Reg, %struct.Reg* %325, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %326 to i64*
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 11
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %RDI.i1263 = bitcast %union.anon* %329 to i64*
  %330 = load i64, i64* %RDI.i1263
  %331 = load i64, i64* %PC.i1262
  %332 = add i64 %331, 3
  store i64 %332, i64* %PC.i1262
  %333 = trunc i64 %330 to i32
  %334 = add i32 1, %333
  %335 = zext i32 %334 to i64
  store i64 %335, i64* %RDI.i1263, align 8
  %336 = icmp ult i32 %334, %333
  %337 = icmp ult i32 %334, 1
  %338 = or i1 %336, %337
  %339 = zext i1 %338 to i8
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %339, i8* %340, align 1
  %341 = and i32 %334, 255
  %342 = call i32 @llvm.ctpop.i32(i32 %341)
  %343 = trunc i32 %342 to i8
  %344 = and i8 %343, 1
  %345 = xor i8 %344, 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %345, i8* %346, align 1
  %347 = xor i64 1, %330
  %348 = trunc i64 %347 to i32
  %349 = xor i32 %348, %334
  %350 = lshr i32 %349, 4
  %351 = trunc i32 %350 to i8
  %352 = and i8 %351, 1
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %352, i8* %353, align 1
  %354 = icmp eq i32 %334, 0
  %355 = zext i1 %354 to i8
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %355, i8* %356, align 1
  %357 = lshr i32 %334, 31
  %358 = trunc i32 %357 to i8
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %358, i8* %359, align 1
  %360 = lshr i32 %333, 31
  %361 = xor i32 %357, %360
  %362 = add i32 %361, %357
  %363 = icmp eq i32 %362, 2
  %364 = zext i1 %363 to i8
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %364, i8* %365, align 1
  store %struct.Memory* %loadMem_40a8ba, %struct.Memory** %MEMORY
  %loadMem_40a8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %367 = getelementptr inbounds %struct.GPR, %struct.GPR* %366, i32 0, i32 33
  %368 = getelementptr inbounds %struct.Reg, %struct.Reg* %367, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %368 to i64*
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 11
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %371 to i32*
  %372 = load i32, i32* %EDI.i
  %373 = zext i32 %372 to i64
  %374 = load i64, i64* %PC.i1261
  %375 = add i64 %374, 7
  store i64 %375, i64* %PC.i1261
  store i32 %372, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  store %struct.Memory* %loadMem_40a8bd, %struct.Memory** %MEMORY
  %loadMem_40a8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %377 = getelementptr inbounds %struct.GPR, %struct.GPR* %376, i32 0, i32 33
  %378 = getelementptr inbounds %struct.Reg, %struct.Reg* %377, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %378 to i64*
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %380 = getelementptr inbounds %struct.GPR, %struct.GPR* %379, i32 0, i32 7
  %381 = getelementptr inbounds %struct.Reg, %struct.Reg* %380, i32 0, i32 0
  %EDX.i1259 = bitcast %union.anon* %381 to i32*
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 15
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %RBP.i1260 = bitcast %union.anon* %384 to i64*
  %385 = load i64, i64* %RBP.i1260
  %386 = sub i64 %385, 8
  %387 = load i32, i32* %EDX.i1259
  %388 = zext i32 %387 to i64
  %389 = load i64, i64* %PC.i1258
  %390 = add i64 %389, 3
  store i64 %390, i64* %PC.i1258
  %391 = inttoptr i64 %386 to i32*
  store i32 %387, i32* %391
  store %struct.Memory* %loadMem_40a8c4, %struct.Memory** %MEMORY
  %loadMem_40a8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 33
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %394 to i64*
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 7
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %RDX.i1256 = bitcast %union.anon* %397 to i64*
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 15
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %400 to i64*
  %401 = load i64, i64* %RBP.i1257
  %402 = sub i64 %401, 8
  %403 = load i64, i64* %PC.i1255
  %404 = add i64 %403, 3
  store i64 %404, i64* %PC.i1255
  %405 = inttoptr i64 %402 to i32*
  %406 = load i32, i32* %405
  %407 = zext i32 %406 to i64
  store i64 %407, i64* %RDX.i1256, align 8
  store %struct.Memory* %loadMem_40a8c7, %struct.Memory** %MEMORY
  %loadMem_40a8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 33
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %410 to i64*
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %412 = getelementptr inbounds %struct.GPR, %struct.GPR* %411, i32 0, i32 5
  %413 = getelementptr inbounds %struct.Reg, %struct.Reg* %412, i32 0, i32 0
  %RCX.i1253 = bitcast %union.anon* %413 to i64*
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %415 = getelementptr inbounds %struct.GPR, %struct.GPR* %414, i32 0, i32 15
  %416 = getelementptr inbounds %struct.Reg, %struct.Reg* %415, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %416 to i64*
  %417 = load i64, i64* %RBP.i1254
  %418 = sub i64 %417, 4
  %419 = load i64, i64* %PC.i1252
  %420 = add i64 %419, 4
  store i64 %420, i64* %PC.i1252
  %421 = inttoptr i64 %418 to i32*
  %422 = load i32, i32* %421
  %423 = sext i32 %422 to i64
  store i64 %423, i64* %RCX.i1253, align 8
  store %struct.Memory* %loadMem_40a8ca, %struct.Memory** %MEMORY
  %loadMem_40a8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 33
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 7
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %EDX.i1250 = bitcast %union.anon* %429 to i32*
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %431 = getelementptr inbounds %struct.GPR, %struct.GPR* %430, i32 0, i32 5
  %432 = getelementptr inbounds %struct.Reg, %struct.Reg* %431, i32 0, i32 0
  %RCX.i1251 = bitcast %union.anon* %432 to i64*
  %433 = load i64, i64* %RCX.i1251
  %434 = mul i64 %433, 4
  %435 = add i64 %434, 11187184
  %436 = load i32, i32* %EDX.i1250
  %437 = zext i32 %436 to i64
  %438 = load i64, i64* %PC.i1249
  %439 = add i64 %438, 7
  store i64 %439, i64* %PC.i1249
  %440 = inttoptr i64 %435 to i32*
  store i32 %436, i32* %440
  store %struct.Memory* %loadMem_40a8ce, %struct.Memory** %MEMORY
  %loadMem_40a8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 33
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 7
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %RDX.i1247 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 15
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %449 to i64*
  %450 = load i64, i64* %RBP.i1248
  %451 = sub i64 %450, 4
  %452 = load i64, i64* %PC.i1246
  %453 = add i64 %452, 3
  store i64 %453, i64* %PC.i1246
  %454 = inttoptr i64 %451 to i32*
  %455 = load i32, i32* %454
  %456 = zext i32 %455 to i64
  store i64 %456, i64* %RDX.i1247, align 8
  store %struct.Memory* %loadMem_40a8d5, %struct.Memory** %MEMORY
  %loadMem_40a8d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 33
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %459 to i64*
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 5
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %RCX.i1244 = bitcast %union.anon* %462 to i64*
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %464 = getelementptr inbounds %struct.GPR, %struct.GPR* %463, i32 0, i32 15
  %465 = getelementptr inbounds %struct.Reg, %struct.Reg* %464, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %465 to i64*
  %466 = load i64, i64* %RBP.i1245
  %467 = sub i64 %466, 4
  %468 = load i64, i64* %PC.i1243
  %469 = add i64 %468, 4
  store i64 %469, i64* %PC.i1243
  %470 = inttoptr i64 %467 to i32*
  %471 = load i32, i32* %470
  %472 = sext i32 %471 to i64
  store i64 %472, i64* %RCX.i1244, align 8
  store %struct.Memory* %loadMem_40a8d8, %struct.Memory** %MEMORY
  %loadMem_40a8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 33
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 7
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %EDX.i1241 = bitcast %union.anon* %478 to i32*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 5
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RCX.i1242 = bitcast %union.anon* %481 to i64*
  %482 = load i64, i64* %RCX.i1242
  %483 = mul i64 %482, 4
  %484 = add i64 %483, 11188784
  %485 = load i32, i32* %EDX.i1241
  %486 = zext i32 %485 to i64
  %487 = load i64, i64* %PC.i1240
  %488 = add i64 %487, 7
  store i64 %488, i64* %PC.i1240
  %489 = inttoptr i64 %484 to i32*
  store i32 %485, i32* %489
  store %struct.Memory* %loadMem_40a8dc, %struct.Memory** %MEMORY
  %loadMem_40a8e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 33
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %492 to i64*
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %494 = getelementptr inbounds %struct.GPR, %struct.GPR* %493, i32 0, i32 7
  %495 = getelementptr inbounds %struct.Reg, %struct.Reg* %494, i32 0, i32 0
  %RDX.i1238 = bitcast %union.anon* %495 to i64*
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 15
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %498 to i64*
  %499 = load i64, i64* %RBP.i1239
  %500 = sub i64 %499, 12
  %501 = load i64, i64* %PC.i1237
  %502 = add i64 %501, 3
  store i64 %502, i64* %PC.i1237
  %503 = inttoptr i64 %500 to i32*
  %504 = load i32, i32* %503
  %505 = zext i32 %504 to i64
  store i64 %505, i64* %RDX.i1238, align 8
  store %struct.Memory* %loadMem_40a8e3, %struct.Memory** %MEMORY
  %loadMem_40a8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %507 = getelementptr inbounds %struct.GPR, %struct.GPR* %506, i32 0, i32 33
  %508 = getelementptr inbounds %struct.Reg, %struct.Reg* %507, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %508 to i64*
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %510 = getelementptr inbounds %struct.GPR, %struct.GPR* %509, i32 0, i32 5
  %511 = getelementptr inbounds %struct.Reg, %struct.Reg* %510, i32 0, i32 0
  %RCX.i1235 = bitcast %union.anon* %511 to i64*
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 15
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %514 to i64*
  %515 = load i64, i64* %RBP.i1236
  %516 = sub i64 %515, 8
  %517 = load i64, i64* %PC.i1234
  %518 = add i64 %517, 4
  store i64 %518, i64* %PC.i1234
  %519 = inttoptr i64 %516 to i32*
  %520 = load i32, i32* %519
  %521 = sext i32 %520 to i64
  store i64 %521, i64* %RCX.i1235, align 8
  store %struct.Memory* %loadMem_40a8e6, %struct.Memory** %MEMORY
  %loadMem_40a8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %523 = getelementptr inbounds %struct.GPR, %struct.GPR* %522, i32 0, i32 33
  %524 = getelementptr inbounds %struct.Reg, %struct.Reg* %523, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %524 to i64*
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 5
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %RCX.i1233 = bitcast %union.anon* %527 to i64*
  %528 = load i64, i64* %RCX.i1233
  %529 = load i64, i64* %PC.i1232
  %530 = add i64 %529, 7
  store i64 %530, i64* %PC.i1232
  %531 = sext i64 %528 to i128
  %532 = and i128 %531, -18446744073709551616
  %533 = zext i64 %528 to i128
  %534 = or i128 %532, %533
  %535 = mul i128 744, %534
  %536 = trunc i128 %535 to i64
  store i64 %536, i64* %RCX.i1233, align 8
  %537 = sext i64 %536 to i128
  %538 = icmp ne i128 %537, %535
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %539, i8* %540, align 1
  %541 = trunc i128 %535 to i32
  %542 = and i32 %541, 255
  %543 = call i32 @llvm.ctpop.i32(i32 %542)
  %544 = trunc i32 %543 to i8
  %545 = and i8 %544, 1
  %546 = xor i8 %545, 1
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %546, i8* %547, align 1
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %548, align 1
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %549, align 1
  %550 = lshr i64 %536, 63
  %551 = trunc i64 %550 to i8
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %551, i8* %552, align 1
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %539, i8* %553, align 1
  store %struct.Memory* %loadMem_40a8ea, %struct.Memory** %MEMORY
  %loadMem_40a8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 33
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %556 to i64*
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %558 = getelementptr inbounds %struct.GPR, %struct.GPR* %557, i32 0, i32 1
  %559 = getelementptr inbounds %struct.Reg, %struct.Reg* %558, i32 0, i32 0
  %RAX.i1230 = bitcast %union.anon* %559 to i64*
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 9
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %RSI.i1231 = bitcast %union.anon* %562 to i64*
  %563 = load i64, i64* %RAX.i1230
  %564 = load i64, i64* %PC.i1229
  %565 = add i64 %564, 3
  store i64 %565, i64* %PC.i1229
  store i64 %563, i64* %RSI.i1231, align 8
  store %struct.Memory* %loadMem_40a8f1, %struct.Memory** %MEMORY
  %loadMem_40a8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 33
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %568 to i64*
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 5
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %571 to i64*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 9
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RSI.i1228 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %RSI.i1228
  %576 = load i64, i64* %RCX.i1227
  %577 = load i64, i64* %PC.i1226
  %578 = add i64 %577, 3
  store i64 %578, i64* %PC.i1226
  %579 = add i64 %576, %575
  store i64 %579, i64* %RSI.i1228, align 8
  %580 = icmp ult i64 %579, %575
  %581 = icmp ult i64 %579, %576
  %582 = or i1 %580, %581
  %583 = zext i1 %582 to i8
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %583, i8* %584, align 1
  %585 = trunc i64 %579 to i32
  %586 = and i32 %585, 255
  %587 = call i32 @llvm.ctpop.i32(i32 %586)
  %588 = trunc i32 %587 to i8
  %589 = and i8 %588, 1
  %590 = xor i8 %589, 1
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %590, i8* %591, align 1
  %592 = xor i64 %576, %575
  %593 = xor i64 %592, %579
  %594 = lshr i64 %593, 4
  %595 = trunc i64 %594 to i8
  %596 = and i8 %595, 1
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %596, i8* %597, align 1
  %598 = icmp eq i64 %579, 0
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %599, i8* %600, align 1
  %601 = lshr i64 %579, 63
  %602 = trunc i64 %601 to i8
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %602, i8* %603, align 1
  %604 = lshr i64 %575, 63
  %605 = lshr i64 %576, 63
  %606 = xor i64 %601, %604
  %607 = xor i64 %601, %605
  %608 = add i64 %606, %607
  %609 = icmp eq i64 %608, 2
  %610 = zext i1 %609 to i8
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %610, i8* %611, align 1
  store %struct.Memory* %loadMem_40a8f4, %struct.Memory** %MEMORY
  %loadMem_40a8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %613 = getelementptr inbounds %struct.GPR, %struct.GPR* %612, i32 0, i32 33
  %614 = getelementptr inbounds %struct.Reg, %struct.Reg* %613, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %614 to i64*
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %616 = getelementptr inbounds %struct.GPR, %struct.GPR* %615, i32 0, i32 7
  %617 = getelementptr inbounds %struct.Reg, %struct.Reg* %616, i32 0, i32 0
  %EDX.i1224 = bitcast %union.anon* %617 to i32*
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 9
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %RSI.i1225 = bitcast %union.anon* %620 to i64*
  %621 = load i64, i64* %RSI.i1225
  %622 = load i32, i32* %EDX.i1224
  %623 = zext i32 %622 to i64
  %624 = load i64, i64* %PC.i1223
  %625 = add i64 %624, 2
  store i64 %625, i64* %PC.i1223
  %626 = inttoptr i64 %621 to i32*
  store i32 %622, i32* %626
  store %struct.Memory* %loadMem_40a8f7, %struct.Memory** %MEMORY
  %loadMem_40a8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 33
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %629 to i64*
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %631 = getelementptr inbounds %struct.GPR, %struct.GPR* %630, i32 0, i32 5
  %632 = getelementptr inbounds %struct.Reg, %struct.Reg* %631, i32 0, i32 0
  %RCX.i1221 = bitcast %union.anon* %632 to i64*
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 15
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %635 to i64*
  %636 = load i64, i64* %RBP.i1222
  %637 = sub i64 %636, 8
  %638 = load i64, i64* %PC.i1220
  %639 = add i64 %638, 4
  store i64 %639, i64* %PC.i1220
  %640 = inttoptr i64 %637 to i32*
  %641 = load i32, i32* %640
  %642 = sext i32 %641 to i64
  store i64 %642, i64* %RCX.i1221, align 8
  store %struct.Memory* %loadMem_40a8f9, %struct.Memory** %MEMORY
  %loadMem_40a8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 33
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %645 to i64*
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %647 = getelementptr inbounds %struct.GPR, %struct.GPR* %646, i32 0, i32 5
  %648 = getelementptr inbounds %struct.Reg, %struct.Reg* %647, i32 0, i32 0
  %RCX.i1219 = bitcast %union.anon* %648 to i64*
  %649 = load i64, i64* %RCX.i1219
  %650 = load i64, i64* %PC.i1218
  %651 = add i64 %650, 7
  store i64 %651, i64* %PC.i1218
  %652 = sext i64 %649 to i128
  %653 = and i128 %652, -18446744073709551616
  %654 = zext i64 %649 to i128
  %655 = or i128 %653, %654
  %656 = mul i128 744, %655
  %657 = trunc i128 %656 to i64
  store i64 %657, i64* %RCX.i1219, align 8
  %658 = sext i64 %657 to i128
  %659 = icmp ne i128 %658, %656
  %660 = zext i1 %659 to i8
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %660, i8* %661, align 1
  %662 = trunc i128 %656 to i32
  %663 = and i32 %662, 255
  %664 = call i32 @llvm.ctpop.i32(i32 %663)
  %665 = trunc i32 %664 to i8
  %666 = and i8 %665, 1
  %667 = xor i8 %666, 1
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %667, i8* %668, align 1
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %669, align 1
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %670, align 1
  %671 = lshr i64 %657, 63
  %672 = trunc i64 %671 to i8
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %672, i8* %673, align 1
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %660, i8* %674, align 1
  store %struct.Memory* %loadMem_40a8fd, %struct.Memory** %MEMORY
  %loadMem_40a904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 33
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %677 to i64*
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %679 = getelementptr inbounds %struct.GPR, %struct.GPR* %678, i32 0, i32 1
  %680 = getelementptr inbounds %struct.Reg, %struct.Reg* %679, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %680 to i64*
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 9
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %RSI.i1217 = bitcast %union.anon* %683 to i64*
  %684 = load i64, i64* %RAX.i1216
  %685 = load i64, i64* %PC.i1215
  %686 = add i64 %685, 3
  store i64 %686, i64* %PC.i1215
  store i64 %684, i64* %RSI.i1217, align 8
  store %struct.Memory* %loadMem_40a904, %struct.Memory** %MEMORY
  %loadMem_40a907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 33
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 5
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RCX.i1213 = bitcast %union.anon* %692 to i64*
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 9
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %RSI.i1214 = bitcast %union.anon* %695 to i64*
  %696 = load i64, i64* %RSI.i1214
  %697 = load i64, i64* %RCX.i1213
  %698 = load i64, i64* %PC.i1212
  %699 = add i64 %698, 3
  store i64 %699, i64* %PC.i1212
  %700 = add i64 %697, %696
  store i64 %700, i64* %RSI.i1214, align 8
  %701 = icmp ult i64 %700, %696
  %702 = icmp ult i64 %700, %697
  %703 = or i1 %701, %702
  %704 = zext i1 %703 to i8
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %704, i8* %705, align 1
  %706 = trunc i64 %700 to i32
  %707 = and i32 %706, 255
  %708 = call i32 @llvm.ctpop.i32(i32 %707)
  %709 = trunc i32 %708 to i8
  %710 = and i8 %709, 1
  %711 = xor i8 %710, 1
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %711, i8* %712, align 1
  %713 = xor i64 %697, %696
  %714 = xor i64 %713, %700
  %715 = lshr i64 %714, 4
  %716 = trunc i64 %715 to i8
  %717 = and i8 %716, 1
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %717, i8* %718, align 1
  %719 = icmp eq i64 %700, 0
  %720 = zext i1 %719 to i8
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %720, i8* %721, align 1
  %722 = lshr i64 %700, 63
  %723 = trunc i64 %722 to i8
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %723, i8* %724, align 1
  %725 = lshr i64 %696, 63
  %726 = lshr i64 %697, 63
  %727 = xor i64 %722, %725
  %728 = xor i64 %722, %726
  %729 = add i64 %727, %728
  %730 = icmp eq i64 %729, 2
  %731 = zext i1 %730 to i8
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %731, i8* %732, align 1
  store %struct.Memory* %loadMem_40a907, %struct.Memory** %MEMORY
  %loadMem_40a90a = load %struct.Memory*, %struct.Memory** %MEMORY
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 33
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %735 to i64*
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %737 = getelementptr inbounds %struct.GPR, %struct.GPR* %736, i32 0, i32 9
  %738 = getelementptr inbounds %struct.Reg, %struct.Reg* %737, i32 0, i32 0
  %RSI.i1211 = bitcast %union.anon* %738 to i64*
  %739 = load i64, i64* %RSI.i1211
  %740 = add i64 %739, 4
  %741 = load i64, i64* %PC.i1210
  %742 = add i64 %741, 7
  store i64 %742, i64* %PC.i1210
  %743 = inttoptr i64 %740 to i32*
  store i32 1, i32* %743
  store %struct.Memory* %loadMem_40a90a, %struct.Memory** %MEMORY
  %loadMem_40a911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 33
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %746 to i64*
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 7
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %RDX.i1208 = bitcast %union.anon* %749 to i64*
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %751 = getelementptr inbounds %struct.GPR, %struct.GPR* %750, i32 0, i32 15
  %752 = getelementptr inbounds %struct.Reg, %struct.Reg* %751, i32 0, i32 0
  %RBP.i1209 = bitcast %union.anon* %752 to i64*
  %753 = load i64, i64* %RBP.i1209
  %754 = sub i64 %753, 4
  %755 = load i64, i64* %PC.i1207
  %756 = add i64 %755, 3
  store i64 %756, i64* %PC.i1207
  %757 = inttoptr i64 %754 to i32*
  %758 = load i32, i32* %757
  %759 = zext i32 %758 to i64
  store i64 %759, i64* %RDX.i1208, align 8
  store %struct.Memory* %loadMem_40a911, %struct.Memory** %MEMORY
  %loadMem_40a914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %761 = getelementptr inbounds %struct.GPR, %struct.GPR* %760, i32 0, i32 33
  %762 = getelementptr inbounds %struct.Reg, %struct.Reg* %761, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %762 to i64*
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %764 = getelementptr inbounds %struct.GPR, %struct.GPR* %763, i32 0, i32 5
  %765 = getelementptr inbounds %struct.Reg, %struct.Reg* %764, i32 0, i32 0
  %RCX.i1205 = bitcast %union.anon* %765 to i64*
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %767 = getelementptr inbounds %struct.GPR, %struct.GPR* %766, i32 0, i32 15
  %768 = getelementptr inbounds %struct.Reg, %struct.Reg* %767, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %768 to i64*
  %769 = load i64, i64* %RBP.i1206
  %770 = sub i64 %769, 8
  %771 = load i64, i64* %PC.i1204
  %772 = add i64 %771, 4
  store i64 %772, i64* %PC.i1204
  %773 = inttoptr i64 %770 to i32*
  %774 = load i32, i32* %773
  %775 = sext i32 %774 to i64
  store i64 %775, i64* %RCX.i1205, align 8
  store %struct.Memory* %loadMem_40a914, %struct.Memory** %MEMORY
  %loadMem_40a918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 33
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %778 to i64*
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 5
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %781 to i64*
  %782 = load i64, i64* %RCX.i1203
  %783 = load i64, i64* %PC.i1202
  %784 = add i64 %783, 7
  store i64 %784, i64* %PC.i1202
  %785 = sext i64 %782 to i128
  %786 = and i128 %785, -18446744073709551616
  %787 = zext i64 %782 to i128
  %788 = or i128 %786, %787
  %789 = mul i128 744, %788
  %790 = trunc i128 %789 to i64
  store i64 %790, i64* %RCX.i1203, align 8
  %791 = sext i64 %790 to i128
  %792 = icmp ne i128 %791, %789
  %793 = zext i1 %792 to i8
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %793, i8* %794, align 1
  %795 = trunc i128 %789 to i32
  %796 = and i32 %795, 255
  %797 = call i32 @llvm.ctpop.i32(i32 %796)
  %798 = trunc i32 %797 to i8
  %799 = and i8 %798, 1
  %800 = xor i8 %799, 1
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %800, i8* %801, align 1
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %802, align 1
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %803, align 1
  %804 = lshr i64 %790, 63
  %805 = trunc i64 %804 to i8
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %805, i8* %806, align 1
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %793, i8* %807, align 1
  store %struct.Memory* %loadMem_40a918, %struct.Memory** %MEMORY
  %loadMem_40a91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 33
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 1
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %RAX.i1200 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 9
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RSI.i1201 = bitcast %union.anon* %816 to i64*
  %817 = load i64, i64* %RAX.i1200
  %818 = load i64, i64* %PC.i1199
  %819 = add i64 %818, 3
  store i64 %819, i64* %PC.i1199
  store i64 %817, i64* %RSI.i1201, align 8
  store %struct.Memory* %loadMem_40a91f, %struct.Memory** %MEMORY
  %loadMem_40a922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 33
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %822 to i64*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 5
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %825 to i64*
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %827 = getelementptr inbounds %struct.GPR, %struct.GPR* %826, i32 0, i32 9
  %828 = getelementptr inbounds %struct.Reg, %struct.Reg* %827, i32 0, i32 0
  %RSI.i1198 = bitcast %union.anon* %828 to i64*
  %829 = load i64, i64* %RSI.i1198
  %830 = load i64, i64* %RCX.i1197
  %831 = load i64, i64* %PC.i1196
  %832 = add i64 %831, 3
  store i64 %832, i64* %PC.i1196
  %833 = add i64 %830, %829
  store i64 %833, i64* %RSI.i1198, align 8
  %834 = icmp ult i64 %833, %829
  %835 = icmp ult i64 %833, %830
  %836 = or i1 %834, %835
  %837 = zext i1 %836 to i8
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %837, i8* %838, align 1
  %839 = trunc i64 %833 to i32
  %840 = and i32 %839, 255
  %841 = call i32 @llvm.ctpop.i32(i32 %840)
  %842 = trunc i32 %841 to i8
  %843 = and i8 %842, 1
  %844 = xor i8 %843, 1
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %844, i8* %845, align 1
  %846 = xor i64 %830, %829
  %847 = xor i64 %846, %833
  %848 = lshr i64 %847, 4
  %849 = trunc i64 %848 to i8
  %850 = and i8 %849, 1
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %850, i8* %851, align 1
  %852 = icmp eq i64 %833, 0
  %853 = zext i1 %852 to i8
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %853, i8* %854, align 1
  %855 = lshr i64 %833, 63
  %856 = trunc i64 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %856, i8* %857, align 1
  %858 = lshr i64 %829, 63
  %859 = lshr i64 %830, 63
  %860 = xor i64 %855, %858
  %861 = xor i64 %855, %859
  %862 = add i64 %860, %861
  %863 = icmp eq i64 %862, 2
  %864 = zext i1 %863 to i8
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %864, i8* %865, align 1
  store %struct.Memory* %loadMem_40a922, %struct.Memory** %MEMORY
  %loadMem_40a925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 33
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 7
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %EDX.i1194 = bitcast %union.anon* %871 to i32*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 9
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %RSI.i1195 = bitcast %union.anon* %874 to i64*
  %875 = load i64, i64* %RSI.i1195
  %876 = add i64 %875, 8
  %877 = load i32, i32* %EDX.i1194
  %878 = zext i32 %877 to i64
  %879 = load i64, i64* %PC.i1193
  %880 = add i64 %879, 3
  store i64 %880, i64* %PC.i1193
  %881 = inttoptr i64 %876 to i32*
  store i32 %877, i32* %881
  store %struct.Memory* %loadMem_40a925, %struct.Memory** %MEMORY
  %loadMem_40a928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 33
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %884 to i64*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 5
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %RCX.i1191 = bitcast %union.anon* %887 to i64*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 15
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %890 to i64*
  %891 = load i64, i64* %RBP.i1192
  %892 = sub i64 %891, 8
  %893 = load i64, i64* %PC.i1190
  %894 = add i64 %893, 4
  store i64 %894, i64* %PC.i1190
  %895 = inttoptr i64 %892 to i32*
  %896 = load i32, i32* %895
  %897 = sext i32 %896 to i64
  store i64 %897, i64* %RCX.i1191, align 8
  store %struct.Memory* %loadMem_40a928, %struct.Memory** %MEMORY
  %loadMem_40a92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %900 to i64*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 5
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %RCX.i1189 = bitcast %union.anon* %903 to i64*
  %904 = load i64, i64* %RCX.i1189
  %905 = load i64, i64* %PC.i1188
  %906 = add i64 %905, 7
  store i64 %906, i64* %PC.i1188
  %907 = sext i64 %904 to i128
  %908 = and i128 %907, -18446744073709551616
  %909 = zext i64 %904 to i128
  %910 = or i128 %908, %909
  %911 = mul i128 744, %910
  %912 = trunc i128 %911 to i64
  store i64 %912, i64* %RCX.i1189, align 8
  %913 = sext i64 %912 to i128
  %914 = icmp ne i128 %913, %911
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %915, i8* %916, align 1
  %917 = trunc i128 %911 to i32
  %918 = and i32 %917, 255
  %919 = call i32 @llvm.ctpop.i32(i32 %918)
  %920 = trunc i32 %919 to i8
  %921 = and i8 %920, 1
  %922 = xor i8 %921, 1
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %922, i8* %923, align 1
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %924, align 1
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %925, align 1
  %926 = lshr i64 %912, 63
  %927 = trunc i64 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %927, i8* %928, align 1
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %915, i8* %929, align 1
  store %struct.Memory* %loadMem_40a92c, %struct.Memory** %MEMORY
  %loadMem_40a933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %931 = getelementptr inbounds %struct.GPR, %struct.GPR* %930, i32 0, i32 33
  %932 = getelementptr inbounds %struct.Reg, %struct.Reg* %931, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %932 to i64*
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %934 = getelementptr inbounds %struct.GPR, %struct.GPR* %933, i32 0, i32 1
  %935 = getelementptr inbounds %struct.Reg, %struct.Reg* %934, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %935 to i64*
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 9
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %RSI.i1187 = bitcast %union.anon* %938 to i64*
  %939 = load i64, i64* %RAX.i1186
  %940 = load i64, i64* %PC.i1185
  %941 = add i64 %940, 3
  store i64 %941, i64* %PC.i1185
  store i64 %939, i64* %RSI.i1187, align 8
  store %struct.Memory* %loadMem_40a933, %struct.Memory** %MEMORY
  %loadMem_40a936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 33
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %944 to i64*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %946 = getelementptr inbounds %struct.GPR, %struct.GPR* %945, i32 0, i32 5
  %947 = getelementptr inbounds %struct.Reg, %struct.Reg* %946, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %947 to i64*
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 9
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %RSI.i1184 = bitcast %union.anon* %950 to i64*
  %951 = load i64, i64* %RSI.i1184
  %952 = load i64, i64* %RCX.i1183
  %953 = load i64, i64* %PC.i1182
  %954 = add i64 %953, 3
  store i64 %954, i64* %PC.i1182
  %955 = add i64 %952, %951
  store i64 %955, i64* %RSI.i1184, align 8
  %956 = icmp ult i64 %955, %951
  %957 = icmp ult i64 %955, %952
  %958 = or i1 %956, %957
  %959 = zext i1 %958 to i8
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %959, i8* %960, align 1
  %961 = trunc i64 %955 to i32
  %962 = and i32 %961, 255
  %963 = call i32 @llvm.ctpop.i32(i32 %962)
  %964 = trunc i32 %963 to i8
  %965 = and i8 %964, 1
  %966 = xor i8 %965, 1
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %966, i8* %967, align 1
  %968 = xor i64 %952, %951
  %969 = xor i64 %968, %955
  %970 = lshr i64 %969, 4
  %971 = trunc i64 %970 to i8
  %972 = and i8 %971, 1
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %972, i8* %973, align 1
  %974 = icmp eq i64 %955, 0
  %975 = zext i1 %974 to i8
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %975, i8* %976, align 1
  %977 = lshr i64 %955, 63
  %978 = trunc i64 %977 to i8
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %978, i8* %979, align 1
  %980 = lshr i64 %951, 63
  %981 = lshr i64 %952, 63
  %982 = xor i64 %977, %980
  %983 = xor i64 %977, %981
  %984 = add i64 %982, %983
  %985 = icmp eq i64 %984, 2
  %986 = zext i1 %985 to i8
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %986, i8* %987, align 1
  store %struct.Memory* %loadMem_40a936, %struct.Memory** %MEMORY
  %loadMem_40a939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %989 = getelementptr inbounds %struct.GPR, %struct.GPR* %988, i32 0, i32 33
  %990 = getelementptr inbounds %struct.Reg, %struct.Reg* %989, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %990 to i64*
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %992 = getelementptr inbounds %struct.GPR, %struct.GPR* %991, i32 0, i32 9
  %993 = getelementptr inbounds %struct.Reg, %struct.Reg* %992, i32 0, i32 0
  %RSI.i1181 = bitcast %union.anon* %993 to i64*
  %994 = load i64, i64* %RSI.i1181
  %995 = add i64 %994, 12
  %996 = load i64, i64* %PC.i1180
  %997 = add i64 %996, 7
  store i64 %997, i64* %PC.i1180
  %998 = inttoptr i64 %995 to i32*
  store i32 0, i32* %998
  store %struct.Memory* %loadMem_40a939, %struct.Memory** %MEMORY
  %loadMem_40a940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1000 = getelementptr inbounds %struct.GPR, %struct.GPR* %999, i32 0, i32 33
  %1001 = getelementptr inbounds %struct.Reg, %struct.Reg* %1000, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %1001 to i64*
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 5
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %RCX.i1178 = bitcast %union.anon* %1004 to i64*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1006 = getelementptr inbounds %struct.GPR, %struct.GPR* %1005, i32 0, i32 15
  %1007 = getelementptr inbounds %struct.Reg, %struct.Reg* %1006, i32 0, i32 0
  %RBP.i1179 = bitcast %union.anon* %1007 to i64*
  %1008 = load i64, i64* %RBP.i1179
  %1009 = sub i64 %1008, 8
  %1010 = load i64, i64* %PC.i1177
  %1011 = add i64 %1010, 4
  store i64 %1011, i64* %PC.i1177
  %1012 = inttoptr i64 %1009 to i32*
  %1013 = load i32, i32* %1012
  %1014 = sext i32 %1013 to i64
  store i64 %1014, i64* %RCX.i1178, align 8
  store %struct.Memory* %loadMem_40a940, %struct.Memory** %MEMORY
  %loadMem_40a944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 33
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %1017 to i64*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 5
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %RCX.i1176 = bitcast %union.anon* %1020 to i64*
  %1021 = load i64, i64* %RCX.i1176
  %1022 = load i64, i64* %PC.i1175
  %1023 = add i64 %1022, 7
  store i64 %1023, i64* %PC.i1175
  %1024 = sext i64 %1021 to i128
  %1025 = and i128 %1024, -18446744073709551616
  %1026 = zext i64 %1021 to i128
  %1027 = or i128 %1025, %1026
  %1028 = mul i128 744, %1027
  %1029 = trunc i128 %1028 to i64
  store i64 %1029, i64* %RCX.i1176, align 8
  %1030 = sext i64 %1029 to i128
  %1031 = icmp ne i128 %1030, %1028
  %1032 = zext i1 %1031 to i8
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1032, i8* %1033, align 1
  %1034 = trunc i128 %1028 to i32
  %1035 = and i32 %1034, 255
  %1036 = call i32 @llvm.ctpop.i32(i32 %1035)
  %1037 = trunc i32 %1036 to i8
  %1038 = and i8 %1037, 1
  %1039 = xor i8 %1038, 1
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1039, i8* %1040, align 1
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1041, align 1
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1042, align 1
  %1043 = lshr i64 %1029, 63
  %1044 = trunc i64 %1043 to i8
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1044, i8* %1045, align 1
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1032, i8* %1046, align 1
  store %struct.Memory* %loadMem_40a944, %struct.Memory** %MEMORY
  %loadMem_40a94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 33
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %1049 to i64*
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1051 = getelementptr inbounds %struct.GPR, %struct.GPR* %1050, i32 0, i32 1
  %1052 = getelementptr inbounds %struct.Reg, %struct.Reg* %1051, i32 0, i32 0
  %RAX.i1173 = bitcast %union.anon* %1052 to i64*
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 9
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %RSI.i1174 = bitcast %union.anon* %1055 to i64*
  %1056 = load i64, i64* %RAX.i1173
  %1057 = load i64, i64* %PC.i1172
  %1058 = add i64 %1057, 3
  store i64 %1058, i64* %PC.i1172
  store i64 %1056, i64* %RSI.i1174, align 8
  store %struct.Memory* %loadMem_40a94b, %struct.Memory** %MEMORY
  %loadMem_40a94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 33
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %1061 to i64*
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 5
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 9
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RSI.i1171 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RSI.i1171
  %1069 = load i64, i64* %RCX.i1170
  %1070 = load i64, i64* %PC.i1169
  %1071 = add i64 %1070, 3
  store i64 %1071, i64* %PC.i1169
  %1072 = add i64 %1069, %1068
  store i64 %1072, i64* %RSI.i1171, align 8
  %1073 = icmp ult i64 %1072, %1068
  %1074 = icmp ult i64 %1072, %1069
  %1075 = or i1 %1073, %1074
  %1076 = zext i1 %1075 to i8
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1076, i8* %1077, align 1
  %1078 = trunc i64 %1072 to i32
  %1079 = and i32 %1078, 255
  %1080 = call i32 @llvm.ctpop.i32(i32 %1079)
  %1081 = trunc i32 %1080 to i8
  %1082 = and i8 %1081, 1
  %1083 = xor i8 %1082, 1
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1083, i8* %1084, align 1
  %1085 = xor i64 %1069, %1068
  %1086 = xor i64 %1085, %1072
  %1087 = lshr i64 %1086, 4
  %1088 = trunc i64 %1087 to i8
  %1089 = and i8 %1088, 1
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1089, i8* %1090, align 1
  %1091 = icmp eq i64 %1072, 0
  %1092 = zext i1 %1091 to i8
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1092, i8* %1093, align 1
  %1094 = lshr i64 %1072, 63
  %1095 = trunc i64 %1094 to i8
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1095, i8* %1096, align 1
  %1097 = lshr i64 %1068, 63
  %1098 = lshr i64 %1069, 63
  %1099 = xor i64 %1094, %1097
  %1100 = xor i64 %1094, %1098
  %1101 = add i64 %1099, %1100
  %1102 = icmp eq i64 %1101, 2
  %1103 = zext i1 %1102 to i8
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1103, i8* %1104, align 1
  store %struct.Memory* %loadMem_40a94e, %struct.Memory** %MEMORY
  %loadMem_40a951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 33
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %1107 to i64*
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 9
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %RSI.i1168 = bitcast %union.anon* %1110 to i64*
  %1111 = load i64, i64* %RSI.i1168
  %1112 = add i64 %1111, 96
  %1113 = load i64, i64* %PC.i1167
  %1114 = add i64 %1113, 7
  store i64 %1114, i64* %PC.i1167
  %1115 = inttoptr i64 %1112 to i32*
  store i32 0, i32* %1115
  store %struct.Memory* %loadMem_40a951, %struct.Memory** %MEMORY
  %loadMem_40a958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 33
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %1118 to i64*
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 5
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %RCX.i1165 = bitcast %union.anon* %1121 to i64*
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1123 = getelementptr inbounds %struct.GPR, %struct.GPR* %1122, i32 0, i32 15
  %1124 = getelementptr inbounds %struct.Reg, %struct.Reg* %1123, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %1124 to i64*
  %1125 = load i64, i64* %RBP.i1166
  %1126 = sub i64 %1125, 8
  %1127 = load i64, i64* %PC.i1164
  %1128 = add i64 %1127, 4
  store i64 %1128, i64* %PC.i1164
  %1129 = inttoptr i64 %1126 to i32*
  %1130 = load i32, i32* %1129
  %1131 = sext i32 %1130 to i64
  store i64 %1131, i64* %RCX.i1165, align 8
  store %struct.Memory* %loadMem_40a958, %struct.Memory** %MEMORY
  %loadMem_40a95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 33
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 5
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RCX.i1163 = bitcast %union.anon* %1137 to i64*
  %1138 = load i64, i64* %RCX.i1163
  %1139 = load i64, i64* %PC.i1162
  %1140 = add i64 %1139, 7
  store i64 %1140, i64* %PC.i1162
  %1141 = sext i64 %1138 to i128
  %1142 = and i128 %1141, -18446744073709551616
  %1143 = zext i64 %1138 to i128
  %1144 = or i128 %1142, %1143
  %1145 = mul i128 744, %1144
  %1146 = trunc i128 %1145 to i64
  store i64 %1146, i64* %RCX.i1163, align 8
  %1147 = sext i64 %1146 to i128
  %1148 = icmp ne i128 %1147, %1145
  %1149 = zext i1 %1148 to i8
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1149, i8* %1150, align 1
  %1151 = trunc i128 %1145 to i32
  %1152 = and i32 %1151, 255
  %1153 = call i32 @llvm.ctpop.i32(i32 %1152)
  %1154 = trunc i32 %1153 to i8
  %1155 = and i8 %1154, 1
  %1156 = xor i8 %1155, 1
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1156, i8* %1157, align 1
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1158, align 1
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1159, align 1
  %1160 = lshr i64 %1146, 63
  %1161 = trunc i64 %1160 to i8
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1161, i8* %1162, align 1
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1149, i8* %1163, align 1
  store %struct.Memory* %loadMem_40a95c, %struct.Memory** %MEMORY
  %loadMem_40a963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 33
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %1166 to i64*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 1
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 5
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %1172 to i64*
  %1173 = load i64, i64* %RAX.i1160
  %1174 = load i64, i64* %RCX.i1161
  %1175 = load i64, i64* %PC.i1159
  %1176 = add i64 %1175, 3
  store i64 %1176, i64* %PC.i1159
  %1177 = add i64 %1174, %1173
  store i64 %1177, i64* %RAX.i1160, align 8
  %1178 = icmp ult i64 %1177, %1173
  %1179 = icmp ult i64 %1177, %1174
  %1180 = or i1 %1178, %1179
  %1181 = zext i1 %1180 to i8
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1181, i8* %1182, align 1
  %1183 = trunc i64 %1177 to i32
  %1184 = and i32 %1183, 255
  %1185 = call i32 @llvm.ctpop.i32(i32 %1184)
  %1186 = trunc i32 %1185 to i8
  %1187 = and i8 %1186, 1
  %1188 = xor i8 %1187, 1
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1188, i8* %1189, align 1
  %1190 = xor i64 %1174, %1173
  %1191 = xor i64 %1190, %1177
  %1192 = lshr i64 %1191, 4
  %1193 = trunc i64 %1192 to i8
  %1194 = and i8 %1193, 1
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1194, i8* %1195, align 1
  %1196 = icmp eq i64 %1177, 0
  %1197 = zext i1 %1196 to i8
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1197, i8* %1198, align 1
  %1199 = lshr i64 %1177, 63
  %1200 = trunc i64 %1199 to i8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1200, i8* %1201, align 1
  %1202 = lshr i64 %1173, 63
  %1203 = lshr i64 %1174, 63
  %1204 = xor i64 %1199, %1202
  %1205 = xor i64 %1199, %1203
  %1206 = add i64 %1204, %1205
  %1207 = icmp eq i64 %1206, 2
  %1208 = zext i1 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1208, i8* %1209, align 1
  store %struct.Memory* %loadMem_40a963, %struct.Memory** %MEMORY
  %loadMem_40a966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 33
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %1212 to i64*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 1
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %1215 to i64*
  %1216 = load i64, i64* %RAX.i1158
  %1217 = add i64 %1216, 740
  %1218 = load i64, i64* %PC.i1157
  %1219 = add i64 %1218, 10
  store i64 %1219, i64* %PC.i1157
  %1220 = inttoptr i64 %1217 to i32*
  store i32 0, i32* %1220
  store %struct.Memory* %loadMem_40a966, %struct.Memory** %MEMORY
  %loadMem_40a970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 33
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %1223 to i64*
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1225 = getelementptr inbounds %struct.GPR, %struct.GPR* %1224, i32 0, i32 7
  %1226 = getelementptr inbounds %struct.Reg, %struct.Reg* %1225, i32 0, i32 0
  %RDX.i1156 = bitcast %union.anon* %1226 to i64*
  %1227 = load i64, i64* %PC.i1155
  %1228 = add i64 %1227, 7
  store i64 %1228, i64* %PC.i1155
  %1229 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %1230 = zext i32 %1229 to i64
  store i64 %1230, i64* %RDX.i1156, align 8
  store %struct.Memory* %loadMem_40a970, %struct.Memory** %MEMORY
  %loadMem_40a977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 33
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %1233 to i64*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 7
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %RDX.i1154 = bitcast %union.anon* %1236 to i64*
  %1237 = load i64, i64* %RDX.i1154
  %1238 = load i64, i64* %PC.i1153
  %1239 = add i64 %1238, 3
  store i64 %1239, i64* %PC.i1153
  %1240 = trunc i64 %1237 to i32
  %1241 = add i32 1, %1240
  %1242 = zext i32 %1241 to i64
  store i64 %1242, i64* %RDX.i1154, align 8
  %1243 = icmp ult i32 %1241, %1240
  %1244 = icmp ult i32 %1241, 1
  %1245 = or i1 %1243, %1244
  %1246 = zext i1 %1245 to i8
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1246, i8* %1247, align 1
  %1248 = and i32 %1241, 255
  %1249 = call i32 @llvm.ctpop.i32(i32 %1248)
  %1250 = trunc i32 %1249 to i8
  %1251 = and i8 %1250, 1
  %1252 = xor i8 %1251, 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1252, i8* %1253, align 1
  %1254 = xor i64 1, %1237
  %1255 = trunc i64 %1254 to i32
  %1256 = xor i32 %1255, %1241
  %1257 = lshr i32 %1256, 4
  %1258 = trunc i32 %1257 to i8
  %1259 = and i8 %1258, 1
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1259, i8* %1260, align 1
  %1261 = icmp eq i32 %1241, 0
  %1262 = zext i1 %1261 to i8
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1262, i8* %1263, align 1
  %1264 = lshr i32 %1241, 31
  %1265 = trunc i32 %1264 to i8
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1265, i8* %1266, align 1
  %1267 = lshr i32 %1240, 31
  %1268 = xor i32 %1264, %1267
  %1269 = add i32 %1268, %1264
  %1270 = icmp eq i32 %1269, 2
  %1271 = zext i1 %1270 to i8
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1271, i8* %1272, align 1
  store %struct.Memory* %loadMem_40a977, %struct.Memory** %MEMORY
  %loadMem_40a97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 33
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %1275 to i64*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 7
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %EDX.i1152 = bitcast %union.anon* %1278 to i32*
  %1279 = load i32, i32* %EDX.i1152
  %1280 = zext i32 %1279 to i64
  %1281 = load i64, i64* %PC.i1151
  %1282 = add i64 %1281, 7
  store i64 %1282, i64* %PC.i1151
  store i32 %1279, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  store %struct.Memory* %loadMem_40a97a, %struct.Memory** %MEMORY
  %loadMem_40a981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1284 = getelementptr inbounds %struct.GPR, %struct.GPR* %1283, i32 0, i32 33
  %1285 = getelementptr inbounds %struct.Reg, %struct.Reg* %1284, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %1285 to i64*
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 7
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %RDX.i1149 = bitcast %union.anon* %1288 to i64*
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 15
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %1291 to i64*
  %1292 = load i64, i64* %RBP.i1150
  %1293 = sub i64 %1292, 4
  %1294 = load i64, i64* %PC.i1148
  %1295 = add i64 %1294, 3
  store i64 %1295, i64* %PC.i1148
  %1296 = inttoptr i64 %1293 to i32*
  %1297 = load i32, i32* %1296
  %1298 = zext i32 %1297 to i64
  store i64 %1298, i64* %RDX.i1149, align 8
  store %struct.Memory* %loadMem_40a981, %struct.Memory** %MEMORY
  %loadMem_40a984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1300 = getelementptr inbounds %struct.GPR, %struct.GPR* %1299, i32 0, i32 33
  %1301 = getelementptr inbounds %struct.Reg, %struct.Reg* %1300, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %1301 to i64*
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 7
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %RDX.i1147 = bitcast %union.anon* %1304 to i64*
  %1305 = load i64, i64* %RDX.i1147
  %1306 = load i64, i64* %PC.i1146
  %1307 = add i64 %1306, 3
  store i64 %1307, i64* %PC.i1146
  %1308 = trunc i64 %1305 to i32
  %1309 = add i32 20, %1308
  %1310 = zext i32 %1309 to i64
  store i64 %1310, i64* %RDX.i1147, align 8
  %1311 = icmp ult i32 %1309, %1308
  %1312 = icmp ult i32 %1309, 20
  %1313 = or i1 %1311, %1312
  %1314 = zext i1 %1313 to i8
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1314, i8* %1315, align 1
  %1316 = and i32 %1309, 255
  %1317 = call i32 @llvm.ctpop.i32(i32 %1316)
  %1318 = trunc i32 %1317 to i8
  %1319 = and i8 %1318, 1
  %1320 = xor i8 %1319, 1
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1320, i8* %1321, align 1
  %1322 = xor i64 20, %1305
  %1323 = trunc i64 %1322 to i32
  %1324 = xor i32 %1323, %1309
  %1325 = lshr i32 %1324, 4
  %1326 = trunc i32 %1325 to i8
  %1327 = and i8 %1326, 1
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1327, i8* %1328, align 1
  %1329 = icmp eq i32 %1309, 0
  %1330 = zext i1 %1329 to i8
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1330, i8* %1331, align 1
  %1332 = lshr i32 %1309, 31
  %1333 = trunc i32 %1332 to i8
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1333, i8* %1334, align 1
  %1335 = lshr i32 %1308, 31
  %1336 = xor i32 %1332, %1335
  %1337 = add i32 %1336, %1332
  %1338 = icmp eq i32 %1337, 2
  %1339 = zext i1 %1338 to i8
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1339, i8* %1340, align 1
  store %struct.Memory* %loadMem_40a984, %struct.Memory** %MEMORY
  %loadMem_40a987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 33
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 7
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %EDX.i1144 = bitcast %union.anon* %1346 to i32*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 1
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %1349 to i64*
  %1350 = load i32, i32* %EDX.i1144
  %1351 = zext i32 %1350 to i64
  %1352 = load i64, i64* %PC.i1143
  %1353 = add i64 %1352, 3
  store i64 %1353, i64* %PC.i1143
  %1354 = shl i64 %1351, 32
  %1355 = ashr exact i64 %1354, 32
  store i64 %1355, i64* %RAX.i1145, align 8
  store %struct.Memory* %loadMem_40a987, %struct.Memory** %MEMORY
  %loadMem_40a98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 33
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %1358 to i64*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 1
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 7
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %RDX.i1142 = bitcast %union.anon* %1364 to i64*
  %1365 = load i64, i64* %RAX.i1141
  %1366 = add i64 %1365, 12099168
  %1367 = load i64, i64* %PC.i1140
  %1368 = add i64 %1367, 8
  store i64 %1368, i64* %PC.i1140
  %1369 = inttoptr i64 %1366 to i8*
  %1370 = load i8, i8* %1369
  %1371 = zext i8 %1370 to i64
  store i64 %1371, i64* %RDX.i1142, align 8
  store %struct.Memory* %loadMem_40a98a, %struct.Memory** %MEMORY
  %loadMem_40a992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 33
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 7
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %EDX.i1139 = bitcast %union.anon* %1377 to i32*
  %1378 = load i32, i32* %EDX.i1139
  %1379 = zext i32 %1378 to i64
  %1380 = load i64, i64* %PC.i1138
  %1381 = add i64 %1380, 3
  store i64 %1381, i64* %PC.i1138
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1382, align 1
  %1383 = and i32 %1378, 255
  %1384 = call i32 @llvm.ctpop.i32(i32 %1383)
  %1385 = trunc i32 %1384 to i8
  %1386 = and i8 %1385, 1
  %1387 = xor i8 %1386, 1
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1387, i8* %1388, align 1
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1389, align 1
  %1390 = icmp eq i32 %1378, 0
  %1391 = zext i1 %1390 to i8
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1391, i8* %1392, align 1
  %1393 = lshr i32 %1378, 31
  %1394 = trunc i32 %1393 to i8
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1394, i8* %1395, align 1
  %1396 = lshr i32 %1378, 31
  %1397 = xor i32 %1393, %1396
  %1398 = add i32 %1397, %1396
  %1399 = icmp eq i32 %1398, 2
  %1400 = zext i1 %1399 to i8
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1400, i8* %1401, align 1
  store %struct.Memory* %loadMem_40a992, %struct.Memory** %MEMORY
  %loadMem_40a995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 33
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %1404 to i64*
  %1405 = load i64, i64* %PC.i1137
  %1406 = add i64 %1405, 138
  %1407 = load i64, i64* %PC.i1137
  %1408 = add i64 %1407, 6
  %1409 = load i64, i64* %PC.i1137
  %1410 = add i64 %1409, 6
  store i64 %1410, i64* %PC.i1137
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1412 = load i8, i8* %1411, align 1
  %1413 = icmp eq i8 %1412, 0
  %1414 = zext i1 %1413 to i8
  store i8 %1414, i8* %BRANCH_TAKEN, align 1
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1416 = select i1 %1413, i64 %1406, i64 %1408
  store i64 %1416, i64* %1415, align 8
  store %struct.Memory* %loadMem_40a995, %struct.Memory** %MEMORY
  %loadBr_40a995 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40a995 = icmp eq i8 %loadBr_40a995, 1
  br i1 %cmpBr_40a995, label %block_.L_40aa1f, label %block_40a99b

block_40a99b:                                     ; preds = %entry
  %loadMem_40a99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 33
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %1419 to i64*
  %1420 = load i64, i64* %PC.i1136
  %1421 = add i64 %1420, 5
  %1422 = load i64, i64* %PC.i1136
  %1423 = add i64 %1422, 5
  store i64 %1423, i64* %PC.i1136
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1421, i64* %1424, align 8
  store %struct.Memory* %loadMem_40a99b, %struct.Memory** %MEMORY
  br label %block_.L_40a9a0

block_.L_40a9a0:                                  ; preds = %block_40a99b
  %loadMem_40a9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 33
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %1427 to i64*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 1
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %RAX.i1135 = bitcast %union.anon* %1430 to i64*
  %1431 = load i64, i64* %PC.i1134
  %1432 = add i64 %1431, 10
  store i64 %1432, i64* %PC.i1134
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1135, align 8
  store %struct.Memory* %loadMem_40a9a0, %struct.Memory** %MEMORY
  %loadMem_40a9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1434 = getelementptr inbounds %struct.GPR, %struct.GPR* %1433, i32 0, i32 33
  %1435 = getelementptr inbounds %struct.Reg, %struct.Reg* %1434, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %1435 to i64*
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1437 = getelementptr inbounds %struct.GPR, %struct.GPR* %1436, i32 0, i32 5
  %1438 = getelementptr inbounds %struct.Reg, %struct.Reg* %1437, i32 0, i32 0
  %RCX.i1132 = bitcast %union.anon* %1438 to i64*
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1440 = getelementptr inbounds %struct.GPR, %struct.GPR* %1439, i32 0, i32 15
  %1441 = getelementptr inbounds %struct.Reg, %struct.Reg* %1440, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %1441 to i64*
  %1442 = load i64, i64* %RBP.i1133
  %1443 = sub i64 %1442, 8
  %1444 = load i64, i64* %PC.i1131
  %1445 = add i64 %1444, 4
  store i64 %1445, i64* %PC.i1131
  %1446 = inttoptr i64 %1443 to i32*
  %1447 = load i32, i32* %1446
  %1448 = sext i32 %1447 to i64
  store i64 %1448, i64* %RCX.i1132, align 8
  store %struct.Memory* %loadMem_40a9aa, %struct.Memory** %MEMORY
  %loadMem_40a9ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 33
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %1451 to i64*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 5
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %RCX.i1130 = bitcast %union.anon* %1454 to i64*
  %1455 = load i64, i64* %RCX.i1130
  %1456 = load i64, i64* %PC.i1129
  %1457 = add i64 %1456, 7
  store i64 %1457, i64* %PC.i1129
  %1458 = sext i64 %1455 to i128
  %1459 = and i128 %1458, -18446744073709551616
  %1460 = zext i64 %1455 to i128
  %1461 = or i128 %1459, %1460
  %1462 = mul i128 744, %1461
  %1463 = trunc i128 %1462 to i64
  store i64 %1463, i64* %RCX.i1130, align 8
  %1464 = sext i64 %1463 to i128
  %1465 = icmp ne i128 %1464, %1462
  %1466 = zext i1 %1465 to i8
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1466, i8* %1467, align 1
  %1468 = trunc i128 %1462 to i32
  %1469 = and i32 %1468, 255
  %1470 = call i32 @llvm.ctpop.i32(i32 %1469)
  %1471 = trunc i32 %1470 to i8
  %1472 = and i8 %1471, 1
  %1473 = xor i8 %1472, 1
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1473, i8* %1474, align 1
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1475, align 1
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1476, align 1
  %1477 = lshr i64 %1463, 63
  %1478 = trunc i64 %1477 to i8
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1478, i8* %1479, align 1
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1466, i8* %1480, align 1
  store %struct.Memory* %loadMem_40a9ae, %struct.Memory** %MEMORY
  %loadMem_40a9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 33
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %1483 to i64*
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1485 = getelementptr inbounds %struct.GPR, %struct.GPR* %1484, i32 0, i32 1
  %1486 = getelementptr inbounds %struct.Reg, %struct.Reg* %1485, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %1486 to i64*
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 5
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %RCX.i1128 = bitcast %union.anon* %1489 to i64*
  %1490 = load i64, i64* %RAX.i1127
  %1491 = load i64, i64* %RCX.i1128
  %1492 = load i64, i64* %PC.i1126
  %1493 = add i64 %1492, 3
  store i64 %1493, i64* %PC.i1126
  %1494 = add i64 %1491, %1490
  store i64 %1494, i64* %RAX.i1127, align 8
  %1495 = icmp ult i64 %1494, %1490
  %1496 = icmp ult i64 %1494, %1491
  %1497 = or i1 %1495, %1496
  %1498 = zext i1 %1497 to i8
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1498, i8* %1499, align 1
  %1500 = trunc i64 %1494 to i32
  %1501 = and i32 %1500, 255
  %1502 = call i32 @llvm.ctpop.i32(i32 %1501)
  %1503 = trunc i32 %1502 to i8
  %1504 = and i8 %1503, 1
  %1505 = xor i8 %1504, 1
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1505, i8* %1506, align 1
  %1507 = xor i64 %1491, %1490
  %1508 = xor i64 %1507, %1494
  %1509 = lshr i64 %1508, 4
  %1510 = trunc i64 %1509 to i8
  %1511 = and i8 %1510, 1
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1511, i8* %1512, align 1
  %1513 = icmp eq i64 %1494, 0
  %1514 = zext i1 %1513 to i8
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1514, i8* %1515, align 1
  %1516 = lshr i64 %1494, 63
  %1517 = trunc i64 %1516 to i8
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1517, i8* %1518, align 1
  %1519 = lshr i64 %1490, 63
  %1520 = lshr i64 %1491, 63
  %1521 = xor i64 %1516, %1519
  %1522 = xor i64 %1516, %1520
  %1523 = add i64 %1521, %1522
  %1524 = icmp eq i64 %1523, 2
  %1525 = zext i1 %1524 to i8
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1525, i8* %1526, align 1
  store %struct.Memory* %loadMem_40a9b5, %struct.Memory** %MEMORY
  %loadMem_40a9b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1528 = getelementptr inbounds %struct.GPR, %struct.GPR* %1527, i32 0, i32 33
  %1529 = getelementptr inbounds %struct.Reg, %struct.Reg* %1528, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1529 to i64*
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1531 = getelementptr inbounds %struct.GPR, %struct.GPR* %1530, i32 0, i32 1
  %1532 = getelementptr inbounds %struct.Reg, %struct.Reg* %1531, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %1532 to i64*
  %1533 = load i64, i64* %RAX.i1125
  %1534 = add i64 %1533, 12
  %1535 = load i64, i64* %PC.i1124
  %1536 = add i64 %1535, 4
  store i64 %1536, i64* %PC.i1124
  %1537 = inttoptr i64 %1534 to i32*
  %1538 = load i32, i32* %1537
  %1539 = sub i32 %1538, 20
  %1540 = icmp ult i32 %1538, 20
  %1541 = zext i1 %1540 to i8
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1541, i8* %1542, align 1
  %1543 = and i32 %1539, 255
  %1544 = call i32 @llvm.ctpop.i32(i32 %1543)
  %1545 = trunc i32 %1544 to i8
  %1546 = and i8 %1545, 1
  %1547 = xor i8 %1546, 1
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1547, i8* %1548, align 1
  %1549 = xor i32 %1538, 20
  %1550 = xor i32 %1549, %1539
  %1551 = lshr i32 %1550, 4
  %1552 = trunc i32 %1551 to i8
  %1553 = and i8 %1552, 1
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1553, i8* %1554, align 1
  %1555 = icmp eq i32 %1539, 0
  %1556 = zext i1 %1555 to i8
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1556, i8* %1557, align 1
  %1558 = lshr i32 %1539, 31
  %1559 = trunc i32 %1558 to i8
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1559, i8* %1560, align 1
  %1561 = lshr i32 %1538, 31
  %1562 = xor i32 %1558, %1561
  %1563 = add i32 %1562, %1561
  %1564 = icmp eq i32 %1563, 2
  %1565 = zext i1 %1564 to i8
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1565, i8* %1566, align 1
  store %struct.Memory* %loadMem_40a9b8, %struct.Memory** %MEMORY
  %loadMem_40a9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1568 = getelementptr inbounds %struct.GPR, %struct.GPR* %1567, i32 0, i32 33
  %1569 = getelementptr inbounds %struct.Reg, %struct.Reg* %1568, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %1569 to i64*
  %1570 = load i64, i64* %PC.i1123
  %1571 = add i64 %1570, 61
  %1572 = load i64, i64* %PC.i1123
  %1573 = add i64 %1572, 6
  %1574 = load i64, i64* %PC.i1123
  %1575 = add i64 %1574, 6
  store i64 %1575, i64* %PC.i1123
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1577 = load i8, i8* %1576, align 1
  %1578 = icmp ne i8 %1577, 0
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1580 = load i8, i8* %1579, align 1
  %1581 = icmp ne i8 %1580, 0
  %1582 = xor i1 %1578, %1581
  %1583 = xor i1 %1582, true
  %1584 = zext i1 %1583 to i8
  store i8 %1584, i8* %BRANCH_TAKEN, align 1
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1586 = select i1 %1582, i64 %1573, i64 %1571
  store i64 %1586, i64* %1585, align 8
  store %struct.Memory* %loadMem_40a9bc, %struct.Memory** %MEMORY
  %loadBr_40a9bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40a9bc = icmp eq i8 %loadBr_40a9bc, 1
  br i1 %cmpBr_40a9bc, label %block_.L_40a9f9, label %block_40a9c2

block_40a9c2:                                     ; preds = %block_.L_40a9a0
  %loadMem_40a9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 33
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %1589 to i64*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 1
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %1592 to i64*
  %1593 = load i64, i64* %PC.i1121
  %1594 = add i64 %1593, 10
  store i64 %1594, i64* %PC.i1121
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_40a9c2, %struct.Memory** %MEMORY
  %loadMem_40a9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 33
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %1597 to i64*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 5
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RCX.i1119 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 15
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RBP.i1120 = bitcast %union.anon* %1603 to i64*
  %1604 = load i64, i64* %RBP.i1120
  %1605 = sub i64 %1604, 4
  %1606 = load i64, i64* %PC.i1118
  %1607 = add i64 %1606, 3
  store i64 %1607, i64* %PC.i1118
  %1608 = inttoptr i64 %1605 to i32*
  %1609 = load i32, i32* %1608
  %1610 = zext i32 %1609 to i64
  store i64 %1610, i64* %RCX.i1119, align 8
  store %struct.Memory* %loadMem_40a9cc, %struct.Memory** %MEMORY
  %loadMem_40a9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 33
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1613 to i64*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 5
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %RCX.i1117 = bitcast %union.anon* %1616 to i64*
  %1617 = load i64, i64* %RCX.i1117
  %1618 = load i64, i64* %PC.i1116
  %1619 = add i64 %1618, 3
  store i64 %1619, i64* %PC.i1116
  %1620 = trunc i64 %1617 to i32
  %1621 = add i32 20, %1620
  %1622 = zext i32 %1621 to i64
  store i64 %1622, i64* %RCX.i1117, align 8
  %1623 = icmp ult i32 %1621, %1620
  %1624 = icmp ult i32 %1621, 20
  %1625 = or i1 %1623, %1624
  %1626 = zext i1 %1625 to i8
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1626, i8* %1627, align 1
  %1628 = and i32 %1621, 255
  %1629 = call i32 @llvm.ctpop.i32(i32 %1628)
  %1630 = trunc i32 %1629 to i8
  %1631 = and i8 %1630, 1
  %1632 = xor i8 %1631, 1
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1632, i8* %1633, align 1
  %1634 = xor i64 20, %1617
  %1635 = trunc i64 %1634 to i32
  %1636 = xor i32 %1635, %1621
  %1637 = lshr i32 %1636, 4
  %1638 = trunc i32 %1637 to i8
  %1639 = and i8 %1638, 1
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1639, i8* %1640, align 1
  %1641 = icmp eq i32 %1621, 0
  %1642 = zext i1 %1641 to i8
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1642, i8* %1643, align 1
  %1644 = lshr i32 %1621, 31
  %1645 = trunc i32 %1644 to i8
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1645, i8* %1646, align 1
  %1647 = lshr i32 %1620, 31
  %1648 = xor i32 %1644, %1647
  %1649 = add i32 %1648, %1644
  %1650 = icmp eq i32 %1649, 2
  %1651 = zext i1 %1650 to i8
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1651, i8* %1652, align 1
  store %struct.Memory* %loadMem_40a9cf, %struct.Memory** %MEMORY
  %loadMem_40a9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 33
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1655 to i64*
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 7
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %RDX.i1114 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 15
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %1661 to i64*
  %1662 = load i64, i64* %RBP.i1115
  %1663 = sub i64 %1662, 8
  %1664 = load i64, i64* %PC.i1113
  %1665 = add i64 %1664, 4
  store i64 %1665, i64* %PC.i1113
  %1666 = inttoptr i64 %1663 to i32*
  %1667 = load i32, i32* %1666
  %1668 = sext i32 %1667 to i64
  store i64 %1668, i64* %RDX.i1114, align 8
  store %struct.Memory* %loadMem_40a9d2, %struct.Memory** %MEMORY
  %loadMem_40a9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 33
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %1671 to i64*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 7
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %RDX.i1112 = bitcast %union.anon* %1674 to i64*
  %1675 = load i64, i64* %RDX.i1112
  %1676 = load i64, i64* %PC.i1111
  %1677 = add i64 %1676, 7
  store i64 %1677, i64* %PC.i1111
  %1678 = sext i64 %1675 to i128
  %1679 = and i128 %1678, -18446744073709551616
  %1680 = zext i64 %1675 to i128
  %1681 = or i128 %1679, %1680
  %1682 = mul i128 744, %1681
  %1683 = trunc i128 %1682 to i64
  store i64 %1683, i64* %RDX.i1112, align 8
  %1684 = sext i64 %1683 to i128
  %1685 = icmp ne i128 %1684, %1682
  %1686 = zext i1 %1685 to i8
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1686, i8* %1687, align 1
  %1688 = trunc i128 %1682 to i32
  %1689 = and i32 %1688, 255
  %1690 = call i32 @llvm.ctpop.i32(i32 %1689)
  %1691 = trunc i32 %1690 to i8
  %1692 = and i8 %1691, 1
  %1693 = xor i8 %1692, 1
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1693, i8* %1694, align 1
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1695, align 1
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1696, align 1
  %1697 = lshr i64 %1683, 63
  %1698 = trunc i64 %1697 to i8
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1698, i8* %1699, align 1
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1686, i8* %1700, align 1
  store %struct.Memory* %loadMem_40a9d6, %struct.Memory** %MEMORY
  %loadMem_40a9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 1
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %1706 to i64*
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 9
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %RSI.i1110 = bitcast %union.anon* %1709 to i64*
  %1710 = load i64, i64* %RAX.i1109
  %1711 = load i64, i64* %PC.i1108
  %1712 = add i64 %1711, 3
  store i64 %1712, i64* %PC.i1108
  store i64 %1710, i64* %RSI.i1110, align 8
  store %struct.Memory* %loadMem_40a9dd, %struct.Memory** %MEMORY
  %loadMem_40a9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 33
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %1715 to i64*
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1717 = getelementptr inbounds %struct.GPR, %struct.GPR* %1716, i32 0, i32 7
  %1718 = getelementptr inbounds %struct.Reg, %struct.Reg* %1717, i32 0, i32 0
  %RDX.i1106 = bitcast %union.anon* %1718 to i64*
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1720 = getelementptr inbounds %struct.GPR, %struct.GPR* %1719, i32 0, i32 9
  %1721 = getelementptr inbounds %struct.Reg, %struct.Reg* %1720, i32 0, i32 0
  %RSI.i1107 = bitcast %union.anon* %1721 to i64*
  %1722 = load i64, i64* %RSI.i1107
  %1723 = load i64, i64* %RDX.i1106
  %1724 = load i64, i64* %PC.i1105
  %1725 = add i64 %1724, 3
  store i64 %1725, i64* %PC.i1105
  %1726 = add i64 %1723, %1722
  store i64 %1726, i64* %RSI.i1107, align 8
  %1727 = icmp ult i64 %1726, %1722
  %1728 = icmp ult i64 %1726, %1723
  %1729 = or i1 %1727, %1728
  %1730 = zext i1 %1729 to i8
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1730, i8* %1731, align 1
  %1732 = trunc i64 %1726 to i32
  %1733 = and i32 %1732, 255
  %1734 = call i32 @llvm.ctpop.i32(i32 %1733)
  %1735 = trunc i32 %1734 to i8
  %1736 = and i8 %1735, 1
  %1737 = xor i8 %1736, 1
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1737, i8* %1738, align 1
  %1739 = xor i64 %1723, %1722
  %1740 = xor i64 %1739, %1726
  %1741 = lshr i64 %1740, 4
  %1742 = trunc i64 %1741 to i8
  %1743 = and i8 %1742, 1
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1743, i8* %1744, align 1
  %1745 = icmp eq i64 %1726, 0
  %1746 = zext i1 %1745 to i8
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1746, i8* %1747, align 1
  %1748 = lshr i64 %1726, 63
  %1749 = trunc i64 %1748 to i8
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1749, i8* %1750, align 1
  %1751 = lshr i64 %1722, 63
  %1752 = lshr i64 %1723, 63
  %1753 = xor i64 %1748, %1751
  %1754 = xor i64 %1748, %1752
  %1755 = add i64 %1753, %1754
  %1756 = icmp eq i64 %1755, 2
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1757, i8* %1758, align 1
  store %struct.Memory* %loadMem_40a9e0, %struct.Memory** %MEMORY
  %loadMem_40a9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 7
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %RDX.i1103 = bitcast %union.anon* %1764 to i64*
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 15
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %1767 to i64*
  %1768 = load i64, i64* %RBP.i1104
  %1769 = sub i64 %1768, 8
  %1770 = load i64, i64* %PC.i1102
  %1771 = add i64 %1770, 4
  store i64 %1771, i64* %PC.i1102
  %1772 = inttoptr i64 %1769 to i32*
  %1773 = load i32, i32* %1772
  %1774 = sext i32 %1773 to i64
  store i64 %1774, i64* %RDX.i1103, align 8
  store %struct.Memory* %loadMem_40a9e3, %struct.Memory** %MEMORY
  %loadMem_40a9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 33
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %1777 to i64*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 7
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %RDX.i1101 = bitcast %union.anon* %1780 to i64*
  %1781 = load i64, i64* %RDX.i1101
  %1782 = load i64, i64* %PC.i1100
  %1783 = add i64 %1782, 7
  store i64 %1783, i64* %PC.i1100
  %1784 = sext i64 %1781 to i128
  %1785 = and i128 %1784, -18446744073709551616
  %1786 = zext i64 %1781 to i128
  %1787 = or i128 %1785, %1786
  %1788 = mul i128 744, %1787
  %1789 = trunc i128 %1788 to i64
  store i64 %1789, i64* %RDX.i1101, align 8
  %1790 = sext i64 %1789 to i128
  %1791 = icmp ne i128 %1790, %1788
  %1792 = zext i1 %1791 to i8
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1792, i8* %1793, align 1
  %1794 = trunc i128 %1788 to i32
  %1795 = and i32 %1794, 255
  %1796 = call i32 @llvm.ctpop.i32(i32 %1795)
  %1797 = trunc i32 %1796 to i8
  %1798 = and i8 %1797, 1
  %1799 = xor i8 %1798, 1
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1799, i8* %1800, align 1
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1801, align 1
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1802, align 1
  %1803 = lshr i64 %1789, 63
  %1804 = trunc i64 %1803 to i8
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1804, i8* %1805, align 1
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1792, i8* %1806, align 1
  store %struct.Memory* %loadMem_40a9e7, %struct.Memory** %MEMORY
  %loadMem_40a9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 33
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %1809 to i64*
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 1
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %1812 to i64*
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1814 = getelementptr inbounds %struct.GPR, %struct.GPR* %1813, i32 0, i32 7
  %1815 = getelementptr inbounds %struct.Reg, %struct.Reg* %1814, i32 0, i32 0
  %RDX.i1099 = bitcast %union.anon* %1815 to i64*
  %1816 = load i64, i64* %RAX.i1098
  %1817 = load i64, i64* %RDX.i1099
  %1818 = load i64, i64* %PC.i1097
  %1819 = add i64 %1818, 3
  store i64 %1819, i64* %PC.i1097
  %1820 = add i64 %1817, %1816
  store i64 %1820, i64* %RAX.i1098, align 8
  %1821 = icmp ult i64 %1820, %1816
  %1822 = icmp ult i64 %1820, %1817
  %1823 = or i1 %1821, %1822
  %1824 = zext i1 %1823 to i8
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1824, i8* %1825, align 1
  %1826 = trunc i64 %1820 to i32
  %1827 = and i32 %1826, 255
  %1828 = call i32 @llvm.ctpop.i32(i32 %1827)
  %1829 = trunc i32 %1828 to i8
  %1830 = and i8 %1829, 1
  %1831 = xor i8 %1830, 1
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1831, i8* %1832, align 1
  %1833 = xor i64 %1817, %1816
  %1834 = xor i64 %1833, %1820
  %1835 = lshr i64 %1834, 4
  %1836 = trunc i64 %1835 to i8
  %1837 = and i8 %1836, 1
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1837, i8* %1838, align 1
  %1839 = icmp eq i64 %1820, 0
  %1840 = zext i1 %1839 to i8
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1840, i8* %1841, align 1
  %1842 = lshr i64 %1820, 63
  %1843 = trunc i64 %1842 to i8
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1843, i8* %1844, align 1
  %1845 = lshr i64 %1816, 63
  %1846 = lshr i64 %1817, 63
  %1847 = xor i64 %1842, %1845
  %1848 = xor i64 %1842, %1846
  %1849 = add i64 %1847, %1848
  %1850 = icmp eq i64 %1849, 2
  %1851 = zext i1 %1850 to i8
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1851, i8* %1852, align 1
  store %struct.Memory* %loadMem_40a9ee, %struct.Memory** %MEMORY
  %loadMem_40a9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 33
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %1855 to i64*
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 1
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %1858 to i64*
  %1859 = load i64, i64* %RAX.i1096
  %1860 = add i64 %1859, 12
  %1861 = load i64, i64* %PC.i1095
  %1862 = add i64 %1861, 4
  store i64 %1862, i64* %PC.i1095
  %1863 = inttoptr i64 %1860 to i32*
  %1864 = load i32, i32* %1863
  %1865 = sext i32 %1864 to i64
  store i64 %1865, i64* %RAX.i1096, align 8
  store %struct.Memory* %loadMem_40a9f1, %struct.Memory** %MEMORY
  %loadMem_40a9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1867 = getelementptr inbounds %struct.GPR, %struct.GPR* %1866, i32 0, i32 33
  %1868 = getelementptr inbounds %struct.Reg, %struct.Reg* %1867, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1868 to i64*
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1870 = getelementptr inbounds %struct.GPR, %struct.GPR* %1869, i32 0, i32 5
  %1871 = getelementptr inbounds %struct.Reg, %struct.Reg* %1870, i32 0, i32 0
  %ECX.i1092 = bitcast %union.anon* %1871 to i32*
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 1
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %RAX.i1093 = bitcast %union.anon* %1874 to i64*
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 9
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %RSI.i1094 = bitcast %union.anon* %1877 to i64*
  %1878 = load i64, i64* %RSI.i1094
  %1879 = load i64, i64* %RAX.i1093
  %1880 = mul i64 %1879, 4
  %1881 = add i64 %1878, 16
  %1882 = add i64 %1881, %1880
  %1883 = load i32, i32* %ECX.i1092
  %1884 = zext i32 %1883 to i64
  %1885 = load i64, i64* %PC.i1091
  %1886 = add i64 %1885, 4
  store i64 %1886, i64* %PC.i1091
  %1887 = inttoptr i64 %1882 to i32*
  store i32 %1883, i32* %1887
  store %struct.Memory* %loadMem_40a9f5, %struct.Memory** %MEMORY
  br label %block_.L_40a9f9

block_.L_40a9f9:                                  ; preds = %block_40a9c2, %block_.L_40a9a0
  %loadMem_40a9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1889 = getelementptr inbounds %struct.GPR, %struct.GPR* %1888, i32 0, i32 33
  %1890 = getelementptr inbounds %struct.Reg, %struct.Reg* %1889, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1890 to i64*
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1892 = getelementptr inbounds %struct.GPR, %struct.GPR* %1891, i32 0, i32 1
  %1893 = getelementptr inbounds %struct.Reg, %struct.Reg* %1892, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %1893 to i64*
  %1894 = load i64, i64* %PC.i1089
  %1895 = add i64 %1894, 10
  store i64 %1895, i64* %PC.i1089
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1090, align 8
  store %struct.Memory* %loadMem_40a9f9, %struct.Memory** %MEMORY
  %loadMem_40aa03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 33
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 5
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RCX.i1087 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 15
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %1904 to i64*
  %1905 = load i64, i64* %RBP.i1088
  %1906 = sub i64 %1905, 8
  %1907 = load i64, i64* %PC.i1086
  %1908 = add i64 %1907, 4
  store i64 %1908, i64* %PC.i1086
  %1909 = inttoptr i64 %1906 to i32*
  %1910 = load i32, i32* %1909
  %1911 = sext i32 %1910 to i64
  store i64 %1911, i64* %RCX.i1087, align 8
  store %struct.Memory* %loadMem_40aa03, %struct.Memory** %MEMORY
  %loadMem_40aa07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 33
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1914 to i64*
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1916 = getelementptr inbounds %struct.GPR, %struct.GPR* %1915, i32 0, i32 5
  %1917 = getelementptr inbounds %struct.Reg, %struct.Reg* %1916, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %1917 to i64*
  %1918 = load i64, i64* %RCX.i1085
  %1919 = load i64, i64* %PC.i1084
  %1920 = add i64 %1919, 7
  store i64 %1920, i64* %PC.i1084
  %1921 = sext i64 %1918 to i128
  %1922 = and i128 %1921, -18446744073709551616
  %1923 = zext i64 %1918 to i128
  %1924 = or i128 %1922, %1923
  %1925 = mul i128 744, %1924
  %1926 = trunc i128 %1925 to i64
  store i64 %1926, i64* %RCX.i1085, align 8
  %1927 = sext i64 %1926 to i128
  %1928 = icmp ne i128 %1927, %1925
  %1929 = zext i1 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1929, i8* %1930, align 1
  %1931 = trunc i128 %1925 to i32
  %1932 = and i32 %1931, 255
  %1933 = call i32 @llvm.ctpop.i32(i32 %1932)
  %1934 = trunc i32 %1933 to i8
  %1935 = and i8 %1934, 1
  %1936 = xor i8 %1935, 1
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1936, i8* %1937, align 1
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1938, align 1
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1939, align 1
  %1940 = lshr i64 %1926, 63
  %1941 = trunc i64 %1940 to i8
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1941, i8* %1942, align 1
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1929, i8* %1943, align 1
  store %struct.Memory* %loadMem_40aa07, %struct.Memory** %MEMORY
  %loadMem_40aa0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 33
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 1
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %1949 to i64*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 5
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %1952 to i64*
  %1953 = load i64, i64* %RAX.i1082
  %1954 = load i64, i64* %RCX.i1083
  %1955 = load i64, i64* %PC.i1081
  %1956 = add i64 %1955, 3
  store i64 %1956, i64* %PC.i1081
  %1957 = add i64 %1954, %1953
  store i64 %1957, i64* %RAX.i1082, align 8
  %1958 = icmp ult i64 %1957, %1953
  %1959 = icmp ult i64 %1957, %1954
  %1960 = or i1 %1958, %1959
  %1961 = zext i1 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1961, i8* %1962, align 1
  %1963 = trunc i64 %1957 to i32
  %1964 = and i32 %1963, 255
  %1965 = call i32 @llvm.ctpop.i32(i32 %1964)
  %1966 = trunc i32 %1965 to i8
  %1967 = and i8 %1966, 1
  %1968 = xor i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1968, i8* %1969, align 1
  %1970 = xor i64 %1954, %1953
  %1971 = xor i64 %1970, %1957
  %1972 = lshr i64 %1971, 4
  %1973 = trunc i64 %1972 to i8
  %1974 = and i8 %1973, 1
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1974, i8* %1975, align 1
  %1976 = icmp eq i64 %1957, 0
  %1977 = zext i1 %1976 to i8
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1977, i8* %1978, align 1
  %1979 = lshr i64 %1957, 63
  %1980 = trunc i64 %1979 to i8
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1980, i8* %1981, align 1
  %1982 = lshr i64 %1953, 63
  %1983 = lshr i64 %1954, 63
  %1984 = xor i64 %1979, %1982
  %1985 = xor i64 %1979, %1983
  %1986 = add i64 %1984, %1985
  %1987 = icmp eq i64 %1986, 2
  %1988 = zext i1 %1987 to i8
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1988, i8* %1989, align 1
  store %struct.Memory* %loadMem_40aa0e, %struct.Memory** %MEMORY
  %loadMem_40aa11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 33
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %1992 to i64*
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 1
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %RAX.i1079 = bitcast %union.anon* %1995 to i64*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 7
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %RDX.i1080 = bitcast %union.anon* %1998 to i64*
  %1999 = load i64, i64* %RAX.i1079
  %2000 = add i64 %1999, 12
  %2001 = load i64, i64* %PC.i1078
  %2002 = add i64 %2001, 3
  store i64 %2002, i64* %PC.i1078
  %2003 = inttoptr i64 %2000 to i32*
  %2004 = load i32, i32* %2003
  %2005 = zext i32 %2004 to i64
  store i64 %2005, i64* %RDX.i1080, align 8
  store %struct.Memory* %loadMem_40aa11, %struct.Memory** %MEMORY
  %loadMem_40aa14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 33
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %2008 to i64*
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 7
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %RDX.i1077 = bitcast %union.anon* %2011 to i64*
  %2012 = load i64, i64* %RDX.i1077
  %2013 = load i64, i64* %PC.i1076
  %2014 = add i64 %2013, 3
  store i64 %2014, i64* %PC.i1076
  %2015 = trunc i64 %2012 to i32
  %2016 = add i32 1, %2015
  %2017 = zext i32 %2016 to i64
  store i64 %2017, i64* %RDX.i1077, align 8
  %2018 = icmp ult i32 %2016, %2015
  %2019 = icmp ult i32 %2016, 1
  %2020 = or i1 %2018, %2019
  %2021 = zext i1 %2020 to i8
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2021, i8* %2022, align 1
  %2023 = and i32 %2016, 255
  %2024 = call i32 @llvm.ctpop.i32(i32 %2023)
  %2025 = trunc i32 %2024 to i8
  %2026 = and i8 %2025, 1
  %2027 = xor i8 %2026, 1
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2027, i8* %2028, align 1
  %2029 = xor i64 1, %2012
  %2030 = trunc i64 %2029 to i32
  %2031 = xor i32 %2030, %2016
  %2032 = lshr i32 %2031, 4
  %2033 = trunc i32 %2032 to i8
  %2034 = and i8 %2033, 1
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2034, i8* %2035, align 1
  %2036 = icmp eq i32 %2016, 0
  %2037 = zext i1 %2036 to i8
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2037, i8* %2038, align 1
  %2039 = lshr i32 %2016, 31
  %2040 = trunc i32 %2039 to i8
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2040, i8* %2041, align 1
  %2042 = lshr i32 %2015, 31
  %2043 = xor i32 %2039, %2042
  %2044 = add i32 %2043, %2039
  %2045 = icmp eq i32 %2044, 2
  %2046 = zext i1 %2045 to i8
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2046, i8* %2047, align 1
  store %struct.Memory* %loadMem_40aa14, %struct.Memory** %MEMORY
  %loadMem_40aa17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 33
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %2050 to i64*
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2052 = getelementptr inbounds %struct.GPR, %struct.GPR* %2051, i32 0, i32 7
  %2053 = getelementptr inbounds %struct.Reg, %struct.Reg* %2052, i32 0, i32 0
  %EDX.i1074 = bitcast %union.anon* %2053 to i32*
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 1
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %RAX.i1075 = bitcast %union.anon* %2056 to i64*
  %2057 = load i64, i64* %RAX.i1075
  %2058 = add i64 %2057, 12
  %2059 = load i32, i32* %EDX.i1074
  %2060 = zext i32 %2059 to i64
  %2061 = load i64, i64* %PC.i1073
  %2062 = add i64 %2061, 3
  store i64 %2062, i64* %PC.i1073
  %2063 = inttoptr i64 %2058 to i32*
  store i32 %2059, i32* %2063
  store %struct.Memory* %loadMem_40aa17, %struct.Memory** %MEMORY
  %loadMem_40aa1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 33
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %2066 to i64*
  %2067 = load i64, i64* %PC.i1072
  %2068 = add i64 %2067, 380
  %2069 = load i64, i64* %PC.i1072
  %2070 = add i64 %2069, 5
  store i64 %2070, i64* %PC.i1072
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2068, i64* %2071, align 8
  store %struct.Memory* %loadMem_40aa1a, %struct.Memory** %MEMORY
  br label %block_.L_40ab96

block_.L_40aa1f:                                  ; preds = %entry
  %loadMem_40aa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 33
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %2074 to i64*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 1
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2079 = getelementptr inbounds %struct.GPR, %struct.GPR* %2078, i32 0, i32 15
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %RBP.i1071 = bitcast %union.anon* %2080 to i64*
  %2081 = load i64, i64* %RBP.i1071
  %2082 = sub i64 %2081, 4
  %2083 = load i64, i64* %PC.i1069
  %2084 = add i64 %2083, 3
  store i64 %2084, i64* %PC.i1069
  %2085 = inttoptr i64 %2082 to i32*
  %2086 = load i32, i32* %2085
  %2087 = zext i32 %2086 to i64
  store i64 %2087, i64* %RAX.i1070, align 8
  store %struct.Memory* %loadMem_40aa1f, %struct.Memory** %MEMORY
  %loadMem_40aa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 33
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 1
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %2093 to i64*
  %2094 = load i64, i64* %RAX.i1068
  %2095 = load i64, i64* %PC.i1067
  %2096 = add i64 %2095, 3
  store i64 %2096, i64* %PC.i1067
  %2097 = trunc i64 %2094 to i32
  %2098 = add i32 20, %2097
  %2099 = zext i32 %2098 to i64
  store i64 %2099, i64* %RAX.i1068, align 8
  %2100 = icmp ult i32 %2098, %2097
  %2101 = icmp ult i32 %2098, 20
  %2102 = or i1 %2100, %2101
  %2103 = zext i1 %2102 to i8
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2103, i8* %2104, align 1
  %2105 = and i32 %2098, 255
  %2106 = call i32 @llvm.ctpop.i32(i32 %2105)
  %2107 = trunc i32 %2106 to i8
  %2108 = and i8 %2107, 1
  %2109 = xor i8 %2108, 1
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2109, i8* %2110, align 1
  %2111 = xor i64 20, %2094
  %2112 = trunc i64 %2111 to i32
  %2113 = xor i32 %2112, %2098
  %2114 = lshr i32 %2113, 4
  %2115 = trunc i32 %2114 to i8
  %2116 = and i8 %2115, 1
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2116, i8* %2117, align 1
  %2118 = icmp eq i32 %2098, 0
  %2119 = zext i1 %2118 to i8
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2119, i8* %2120, align 1
  %2121 = lshr i32 %2098, 31
  %2122 = trunc i32 %2121 to i8
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2122, i8* %2123, align 1
  %2124 = lshr i32 %2097, 31
  %2125 = xor i32 %2121, %2124
  %2126 = add i32 %2125, %2121
  %2127 = icmp eq i32 %2126, 2
  %2128 = zext i1 %2127 to i8
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2128, i8* %2129, align 1
  store %struct.Memory* %loadMem_40aa22, %struct.Memory** %MEMORY
  %loadMem_40aa25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2131 = getelementptr inbounds %struct.GPR, %struct.GPR* %2130, i32 0, i32 33
  %2132 = getelementptr inbounds %struct.Reg, %struct.Reg* %2131, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %2132 to i64*
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2134 = getelementptr inbounds %struct.GPR, %struct.GPR* %2133, i32 0, i32 1
  %2135 = getelementptr inbounds %struct.Reg, %struct.Reg* %2134, i32 0, i32 0
  %EAX.i1065 = bitcast %union.anon* %2135 to i32*
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2137 = getelementptr inbounds %struct.GPR, %struct.GPR* %2136, i32 0, i32 5
  %2138 = getelementptr inbounds %struct.Reg, %struct.Reg* %2137, i32 0, i32 0
  %RCX.i1066 = bitcast %union.anon* %2138 to i64*
  %2139 = load i32, i32* %EAX.i1065
  %2140 = zext i32 %2139 to i64
  %2141 = load i64, i64* %PC.i1064
  %2142 = add i64 %2141, 3
  store i64 %2142, i64* %PC.i1064
  %2143 = shl i64 %2140, 32
  %2144 = ashr exact i64 %2143, 32
  store i64 %2144, i64* %RCX.i1066, align 8
  store %struct.Memory* %loadMem_40aa25, %struct.Memory** %MEMORY
  %loadMem_40aa28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 33
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %2147 to i64*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 1
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %2150 to i64*
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 5
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %RCX.i1063 = bitcast %union.anon* %2153 to i64*
  %2154 = load i64, i64* %RCX.i1063
  %2155 = add i64 %2154, 12099168
  %2156 = load i64, i64* %PC.i1061
  %2157 = add i64 %2156, 8
  store i64 %2157, i64* %PC.i1061
  %2158 = inttoptr i64 %2155 to i8*
  %2159 = load i8, i8* %2158
  %2160 = zext i8 %2159 to i64
  store i64 %2160, i64* %RAX.i1062, align 8
  store %struct.Memory* %loadMem_40aa28, %struct.Memory** %MEMORY
  %loadMem_40aa30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2162 = getelementptr inbounds %struct.GPR, %struct.GPR* %2161, i32 0, i32 33
  %2163 = getelementptr inbounds %struct.Reg, %struct.Reg* %2162, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %2163 to i64*
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2165 = getelementptr inbounds %struct.GPR, %struct.GPR* %2164, i32 0, i32 1
  %2166 = getelementptr inbounds %struct.Reg, %struct.Reg* %2165, i32 0, i32 0
  %EAX.i1059 = bitcast %union.anon* %2166 to i32*
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2168 = getelementptr inbounds %struct.GPR, %struct.GPR* %2167, i32 0, i32 15
  %2169 = getelementptr inbounds %struct.Reg, %struct.Reg* %2168, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %2169 to i64*
  %2170 = load i32, i32* %EAX.i1059
  %2171 = zext i32 %2170 to i64
  %2172 = load i64, i64* %RBP.i1060
  %2173 = sub i64 %2172, 16
  %2174 = load i64, i64* %PC.i1058
  %2175 = add i64 %2174, 3
  store i64 %2175, i64* %PC.i1058
  %2176 = inttoptr i64 %2173 to i32*
  %2177 = load i32, i32* %2176
  %2178 = sub i32 %2170, %2177
  %2179 = icmp ult i32 %2170, %2177
  %2180 = zext i1 %2179 to i8
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2180, i8* %2181, align 1
  %2182 = and i32 %2178, 255
  %2183 = call i32 @llvm.ctpop.i32(i32 %2182)
  %2184 = trunc i32 %2183 to i8
  %2185 = and i8 %2184, 1
  %2186 = xor i8 %2185, 1
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2186, i8* %2187, align 1
  %2188 = xor i32 %2177, %2170
  %2189 = xor i32 %2188, %2178
  %2190 = lshr i32 %2189, 4
  %2191 = trunc i32 %2190 to i8
  %2192 = and i8 %2191, 1
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2192, i8* %2193, align 1
  %2194 = icmp eq i32 %2178, 0
  %2195 = zext i1 %2194 to i8
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2195, i8* %2196, align 1
  %2197 = lshr i32 %2178, 31
  %2198 = trunc i32 %2197 to i8
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2198, i8* %2199, align 1
  %2200 = lshr i32 %2170, 31
  %2201 = lshr i32 %2177, 31
  %2202 = xor i32 %2201, %2200
  %2203 = xor i32 %2197, %2200
  %2204 = add i32 %2203, %2202
  %2205 = icmp eq i32 %2204, 2
  %2206 = zext i1 %2205 to i8
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2206, i8* %2207, align 1
  store %struct.Memory* %loadMem_40aa30, %struct.Memory** %MEMORY
  %loadMem_40aa33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 33
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %2210 to i64*
  %2211 = load i64, i64* %PC.i1057
  %2212 = add i64 %2211, 350
  %2213 = load i64, i64* %PC.i1057
  %2214 = add i64 %2213, 6
  %2215 = load i64, i64* %PC.i1057
  %2216 = add i64 %2215, 6
  store i64 %2216, i64* %PC.i1057
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2218 = load i8, i8* %2217, align 1
  %2219 = icmp eq i8 %2218, 0
  %2220 = zext i1 %2219 to i8
  store i8 %2220, i8* %BRANCH_TAKEN, align 1
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2222 = select i1 %2219, i64 %2212, i64 %2214
  store i64 %2222, i64* %2221, align 8
  store %struct.Memory* %loadMem_40aa33, %struct.Memory** %MEMORY
  %loadBr_40aa33 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40aa33 = icmp eq i8 %loadBr_40aa33, 1
  br i1 %cmpBr_40aa33, label %block_.L_40ab91, label %block_40aa39

block_40aa39:                                     ; preds = %block_.L_40aa1f
  %loadMem_40aa39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 1
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %RAX.i1056 = bitcast %union.anon* %2228 to i64*
  %2229 = load i64, i64* %PC.i1055
  %2230 = add i64 %2229, 10
  store i64 %2230, i64* %PC.i1055
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1056, align 8
  store %struct.Memory* %loadMem_40aa39, %struct.Memory** %MEMORY
  %loadMem_40aa43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 33
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %2233 to i64*
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2235 = getelementptr inbounds %struct.GPR, %struct.GPR* %2234, i32 0, i32 5
  %2236 = getelementptr inbounds %struct.Reg, %struct.Reg* %2235, i32 0, i32 0
  %RCX.i1053 = bitcast %union.anon* %2236 to i64*
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 15
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %2239 to i64*
  %2240 = load i64, i64* %RBP.i1054
  %2241 = sub i64 %2240, 4
  %2242 = load i64, i64* %PC.i1052
  %2243 = add i64 %2242, 3
  store i64 %2243, i64* %PC.i1052
  %2244 = inttoptr i64 %2241 to i32*
  %2245 = load i32, i32* %2244
  %2246 = zext i32 %2245 to i64
  store i64 %2246, i64* %RCX.i1053, align 8
  store %struct.Memory* %loadMem_40aa43, %struct.Memory** %MEMORY
  %loadMem_40aa46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %2249 to i64*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 5
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RCX.i1051 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %RCX.i1051
  %2254 = load i64, i64* %PC.i1050
  %2255 = add i64 %2254, 3
  store i64 %2255, i64* %PC.i1050
  %2256 = trunc i64 %2253 to i32
  %2257 = add i32 20, %2256
  %2258 = zext i32 %2257 to i64
  store i64 %2258, i64* %RCX.i1051, align 8
  %2259 = icmp ult i32 %2257, %2256
  %2260 = icmp ult i32 %2257, 20
  %2261 = or i1 %2259, %2260
  %2262 = zext i1 %2261 to i8
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2262, i8* %2263, align 1
  %2264 = and i32 %2257, 255
  %2265 = call i32 @llvm.ctpop.i32(i32 %2264)
  %2266 = trunc i32 %2265 to i8
  %2267 = and i8 %2266, 1
  %2268 = xor i8 %2267, 1
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2268, i8* %2269, align 1
  %2270 = xor i64 20, %2253
  %2271 = trunc i64 %2270 to i32
  %2272 = xor i32 %2271, %2257
  %2273 = lshr i32 %2272, 4
  %2274 = trunc i32 %2273 to i8
  %2275 = and i8 %2274, 1
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2275, i8* %2276, align 1
  %2277 = icmp eq i32 %2257, 0
  %2278 = zext i1 %2277 to i8
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2278, i8* %2279, align 1
  %2280 = lshr i32 %2257, 31
  %2281 = trunc i32 %2280 to i8
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2281, i8* %2282, align 1
  %2283 = lshr i32 %2256, 31
  %2284 = xor i32 %2280, %2283
  %2285 = add i32 %2284, %2280
  %2286 = icmp eq i32 %2285, 2
  %2287 = zext i1 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2287, i8* %2288, align 1
  store %struct.Memory* %loadMem_40aa46, %struct.Memory** %MEMORY
  %loadMem_40aa49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 5
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %ECX.i1048 = bitcast %union.anon* %2294 to i32*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 7
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %RDX.i1049 = bitcast %union.anon* %2297 to i64*
  %2298 = load i32, i32* %ECX.i1048
  %2299 = zext i32 %2298 to i64
  %2300 = load i64, i64* %PC.i1047
  %2301 = add i64 %2300, 3
  store i64 %2301, i64* %PC.i1047
  %2302 = shl i64 %2299, 32
  %2303 = ashr exact i64 %2302, 32
  store i64 %2303, i64* %RDX.i1049, align 8
  store %struct.Memory* %loadMem_40aa49, %struct.Memory** %MEMORY
  %loadMem_40aa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2305 = getelementptr inbounds %struct.GPR, %struct.GPR* %2304, i32 0, i32 33
  %2306 = getelementptr inbounds %struct.Reg, %struct.Reg* %2305, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %2306 to i64*
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2308 = getelementptr inbounds %struct.GPR, %struct.GPR* %2307, i32 0, i32 7
  %2309 = getelementptr inbounds %struct.Reg, %struct.Reg* %2308, i32 0, i32 0
  %RDX.i1046 = bitcast %union.anon* %2309 to i64*
  %2310 = load i64, i64* %RDX.i1046
  %2311 = mul i64 %2310, 4
  %2312 = add i64 %2311, 11187184
  %2313 = load i64, i64* %PC.i1045
  %2314 = add i64 %2313, 8
  store i64 %2314, i64* %PC.i1045
  %2315 = inttoptr i64 %2312 to i32*
  %2316 = load i32, i32* %2315
  %2317 = sext i32 %2316 to i64
  store i64 %2317, i64* %RDX.i1046, align 8
  store %struct.Memory* %loadMem_40aa4c, %struct.Memory** %MEMORY
  %loadMem_40aa54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2319 = getelementptr inbounds %struct.GPR, %struct.GPR* %2318, i32 0, i32 33
  %2320 = getelementptr inbounds %struct.Reg, %struct.Reg* %2319, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %2320 to i64*
  %2321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2322 = getelementptr inbounds %struct.GPR, %struct.GPR* %2321, i32 0, i32 7
  %2323 = getelementptr inbounds %struct.Reg, %struct.Reg* %2322, i32 0, i32 0
  %RDX.i1044 = bitcast %union.anon* %2323 to i64*
  %2324 = load i64, i64* %RDX.i1044
  %2325 = load i64, i64* %PC.i1043
  %2326 = add i64 %2325, 7
  store i64 %2326, i64* %PC.i1043
  %2327 = sext i64 %2324 to i128
  %2328 = and i128 %2327, -18446744073709551616
  %2329 = zext i64 %2324 to i128
  %2330 = or i128 %2328, %2329
  %2331 = mul i128 744, %2330
  %2332 = trunc i128 %2331 to i64
  store i64 %2332, i64* %RDX.i1044, align 8
  %2333 = sext i64 %2332 to i128
  %2334 = icmp ne i128 %2333, %2331
  %2335 = zext i1 %2334 to i8
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2335, i8* %2336, align 1
  %2337 = trunc i128 %2331 to i32
  %2338 = and i32 %2337, 255
  %2339 = call i32 @llvm.ctpop.i32(i32 %2338)
  %2340 = trunc i32 %2339 to i8
  %2341 = and i8 %2340, 1
  %2342 = xor i8 %2341, 1
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2342, i8* %2343, align 1
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2344, align 1
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2345, align 1
  %2346 = lshr i64 %2332, 63
  %2347 = trunc i64 %2346 to i8
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2347, i8* %2348, align 1
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2335, i8* %2349, align 1
  store %struct.Memory* %loadMem_40aa54, %struct.Memory** %MEMORY
  %loadMem_40aa5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2351 = getelementptr inbounds %struct.GPR, %struct.GPR* %2350, i32 0, i32 33
  %2352 = getelementptr inbounds %struct.Reg, %struct.Reg* %2351, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %2352 to i64*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2354 = getelementptr inbounds %struct.GPR, %struct.GPR* %2353, i32 0, i32 1
  %2355 = getelementptr inbounds %struct.Reg, %struct.Reg* %2354, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %2355 to i64*
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2357 = getelementptr inbounds %struct.GPR, %struct.GPR* %2356, i32 0, i32 7
  %2358 = getelementptr inbounds %struct.Reg, %struct.Reg* %2357, i32 0, i32 0
  %RDX.i1042 = bitcast %union.anon* %2358 to i64*
  %2359 = load i64, i64* %RAX.i1041
  %2360 = load i64, i64* %RDX.i1042
  %2361 = load i64, i64* %PC.i1040
  %2362 = add i64 %2361, 3
  store i64 %2362, i64* %PC.i1040
  %2363 = add i64 %2360, %2359
  store i64 %2363, i64* %RAX.i1041, align 8
  %2364 = icmp ult i64 %2363, %2359
  %2365 = icmp ult i64 %2363, %2360
  %2366 = or i1 %2364, %2365
  %2367 = zext i1 %2366 to i8
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2367, i8* %2368, align 1
  %2369 = trunc i64 %2363 to i32
  %2370 = and i32 %2369, 255
  %2371 = call i32 @llvm.ctpop.i32(i32 %2370)
  %2372 = trunc i32 %2371 to i8
  %2373 = and i8 %2372, 1
  %2374 = xor i8 %2373, 1
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2374, i8* %2375, align 1
  %2376 = xor i64 %2360, %2359
  %2377 = xor i64 %2376, %2363
  %2378 = lshr i64 %2377, 4
  %2379 = trunc i64 %2378 to i8
  %2380 = and i8 %2379, 1
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2380, i8* %2381, align 1
  %2382 = icmp eq i64 %2363, 0
  %2383 = zext i1 %2382 to i8
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2383, i8* %2384, align 1
  %2385 = lshr i64 %2363, 63
  %2386 = trunc i64 %2385 to i8
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2386, i8* %2387, align 1
  %2388 = lshr i64 %2359, 63
  %2389 = lshr i64 %2360, 63
  %2390 = xor i64 %2385, %2388
  %2391 = xor i64 %2385, %2389
  %2392 = add i64 %2390, %2391
  %2393 = icmp eq i64 %2392, 2
  %2394 = zext i1 %2393 to i8
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2394, i8* %2395, align 1
  store %struct.Memory* %loadMem_40aa5b, %struct.Memory** %MEMORY
  %loadMem_40aa5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2397 = getelementptr inbounds %struct.GPR, %struct.GPR* %2396, i32 0, i32 33
  %2398 = getelementptr inbounds %struct.Reg, %struct.Reg* %2397, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %2398 to i64*
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 1
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %2401 to i64*
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 5
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %RCX.i1039 = bitcast %union.anon* %2404 to i64*
  %2405 = load i64, i64* %RAX.i1038
  %2406 = add i64 %2405, 740
  %2407 = load i64, i64* %PC.i1037
  %2408 = add i64 %2407, 6
  store i64 %2408, i64* %PC.i1037
  %2409 = inttoptr i64 %2406 to i32*
  %2410 = load i32, i32* %2409
  %2411 = zext i32 %2410 to i64
  store i64 %2411, i64* %RCX.i1039, align 8
  store %struct.Memory* %loadMem_40aa5e, %struct.Memory** %MEMORY
  %loadMem_40aa64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 33
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %2414 to i64*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 5
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %ECX.i1036 = bitcast %union.anon* %2417 to i32*
  %2418 = load i32, i32* %ECX.i1036
  %2419 = zext i32 %2418 to i64
  %2420 = load i64, i64* %PC.i1035
  %2421 = add i64 %2420, 7
  store i64 %2421, i64* %PC.i1035
  %2422 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %2423 = sub i32 %2418, %2422
  %2424 = icmp ult i32 %2418, %2422
  %2425 = zext i1 %2424 to i8
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2425, i8* %2426, align 1
  %2427 = and i32 %2423, 255
  %2428 = call i32 @llvm.ctpop.i32(i32 %2427)
  %2429 = trunc i32 %2428 to i8
  %2430 = and i8 %2429, 1
  %2431 = xor i8 %2430, 1
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2431, i8* %2432, align 1
  %2433 = xor i32 %2422, %2418
  %2434 = xor i32 %2433, %2423
  %2435 = lshr i32 %2434, 4
  %2436 = trunc i32 %2435 to i8
  %2437 = and i8 %2436, 1
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2437, i8* %2438, align 1
  %2439 = icmp eq i32 %2423, 0
  %2440 = zext i1 %2439 to i8
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2440, i8* %2441, align 1
  %2442 = lshr i32 %2423, 31
  %2443 = trunc i32 %2442 to i8
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2443, i8* %2444, align 1
  %2445 = lshr i32 %2418, 31
  %2446 = lshr i32 %2422, 31
  %2447 = xor i32 %2446, %2445
  %2448 = xor i32 %2442, %2445
  %2449 = add i32 %2448, %2447
  %2450 = icmp eq i32 %2449, 2
  %2451 = zext i1 %2450 to i8
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2451, i8* %2452, align 1
  store %struct.Memory* %loadMem_40aa64, %struct.Memory** %MEMORY
  %loadMem_40aa6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 33
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %2455 to i64*
  %2456 = load i64, i64* %PC.i1034
  %2457 = add i64 %2456, 294
  %2458 = load i64, i64* %PC.i1034
  %2459 = add i64 %2458, 6
  %2460 = load i64, i64* %PC.i1034
  %2461 = add i64 %2460, 6
  store i64 %2461, i64* %PC.i1034
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2463 = load i8, i8* %2462, align 1
  store i8 %2463, i8* %BRANCH_TAKEN, align 1
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2465 = icmp ne i8 %2463, 0
  %2466 = select i1 %2465, i64 %2457, i64 %2459
  store i64 %2466, i64* %2464, align 8
  store %struct.Memory* %loadMem_40aa6b, %struct.Memory** %MEMORY
  %loadBr_40aa6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40aa6b = icmp eq i8 %loadBr_40aa6b, 1
  br i1 %cmpBr_40aa6b, label %block_.L_40ab91, label %block_40aa71

block_40aa71:                                     ; preds = %block_40aa39
  %loadMem_40aa71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 33
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %2469 to i64*
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 1
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %2472 to i64*
  %2473 = load i64, i64* %PC.i1032
  %2474 = add i64 %2473, 10
  store i64 %2474, i64* %PC.i1032
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1033, align 8
  store %struct.Memory* %loadMem_40aa71, %struct.Memory** %MEMORY
  %loadMem_40aa7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 33
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %2477 to i64*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 5
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %2480 to i64*
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 15
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %2483 to i64*
  %2484 = load i64, i64* %RBP.i1031
  %2485 = sub i64 %2484, 4
  %2486 = load i64, i64* %PC.i1029
  %2487 = add i64 %2486, 3
  store i64 %2487, i64* %PC.i1029
  %2488 = inttoptr i64 %2485 to i32*
  %2489 = load i32, i32* %2488
  %2490 = zext i32 %2489 to i64
  store i64 %2490, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_40aa7b, %struct.Memory** %MEMORY
  %loadMem_40aa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 33
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 5
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %2496 to i64*
  %2497 = load i64, i64* %RCX.i1028
  %2498 = load i64, i64* %PC.i1027
  %2499 = add i64 %2498, 3
  store i64 %2499, i64* %PC.i1027
  %2500 = trunc i64 %2497 to i32
  %2501 = add i32 20, %2500
  %2502 = zext i32 %2501 to i64
  store i64 %2502, i64* %RCX.i1028, align 8
  %2503 = icmp ult i32 %2501, %2500
  %2504 = icmp ult i32 %2501, 20
  %2505 = or i1 %2503, %2504
  %2506 = zext i1 %2505 to i8
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2506, i8* %2507, align 1
  %2508 = and i32 %2501, 255
  %2509 = call i32 @llvm.ctpop.i32(i32 %2508)
  %2510 = trunc i32 %2509 to i8
  %2511 = and i8 %2510, 1
  %2512 = xor i8 %2511, 1
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2512, i8* %2513, align 1
  %2514 = xor i64 20, %2497
  %2515 = trunc i64 %2514 to i32
  %2516 = xor i32 %2515, %2501
  %2517 = lshr i32 %2516, 4
  %2518 = trunc i32 %2517 to i8
  %2519 = and i8 %2518, 1
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2519, i8* %2520, align 1
  %2521 = icmp eq i32 %2501, 0
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2522, i8* %2523, align 1
  %2524 = lshr i32 %2501, 31
  %2525 = trunc i32 %2524 to i8
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2525, i8* %2526, align 1
  %2527 = lshr i32 %2500, 31
  %2528 = xor i32 %2524, %2527
  %2529 = add i32 %2528, %2524
  %2530 = icmp eq i32 %2529, 2
  %2531 = zext i1 %2530 to i8
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2531, i8* %2532, align 1
  store %struct.Memory* %loadMem_40aa7e, %struct.Memory** %MEMORY
  %loadMem_40aa81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 33
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %2535 to i64*
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2537 = getelementptr inbounds %struct.GPR, %struct.GPR* %2536, i32 0, i32 5
  %2538 = getelementptr inbounds %struct.Reg, %struct.Reg* %2537, i32 0, i32 0
  %ECX.i1025 = bitcast %union.anon* %2538 to i32*
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 7
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %2541 to i64*
  %2542 = load i32, i32* %ECX.i1025
  %2543 = zext i32 %2542 to i64
  %2544 = load i64, i64* %PC.i1024
  %2545 = add i64 %2544, 3
  store i64 %2545, i64* %PC.i1024
  %2546 = shl i64 %2543, 32
  %2547 = ashr exact i64 %2546, 32
  store i64 %2547, i64* %RDX.i1026, align 8
  store %struct.Memory* %loadMem_40aa81, %struct.Memory** %MEMORY
  %loadMem_40aa84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 33
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %2550 to i64*
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 5
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %RCX.i1022 = bitcast %union.anon* %2553 to i64*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 7
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %RDX.i1023 = bitcast %union.anon* %2556 to i64*
  %2557 = load i64, i64* %RDX.i1023
  %2558 = mul i64 %2557, 4
  %2559 = add i64 %2558, 11187184
  %2560 = load i64, i64* %PC.i1021
  %2561 = add i64 %2560, 7
  store i64 %2561, i64* %PC.i1021
  %2562 = inttoptr i64 %2559 to i32*
  %2563 = load i32, i32* %2562
  %2564 = zext i32 %2563 to i64
  store i64 %2564, i64* %RCX.i1022, align 8
  store %struct.Memory* %loadMem_40aa84, %struct.Memory** %MEMORY
  %loadMem_40aa8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2566 = getelementptr inbounds %struct.GPR, %struct.GPR* %2565, i32 0, i32 33
  %2567 = getelementptr inbounds %struct.Reg, %struct.Reg* %2566, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2567 to i64*
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 5
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %ECX.i1019 = bitcast %union.anon* %2570 to i32*
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 15
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %2573 to i64*
  %2574 = load i64, i64* %RBP.i1020
  %2575 = sub i64 %2574, 20
  %2576 = load i32, i32* %ECX.i1019
  %2577 = zext i32 %2576 to i64
  %2578 = load i64, i64* %PC.i1018
  %2579 = add i64 %2578, 3
  store i64 %2579, i64* %PC.i1018
  %2580 = inttoptr i64 %2575 to i32*
  store i32 %2576, i32* %2580
  store %struct.Memory* %loadMem_40aa8b, %struct.Memory** %MEMORY
  %loadMem_40aa8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 33
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %2583 to i64*
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 5
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %RCX.i1016 = bitcast %union.anon* %2586 to i64*
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 15
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %2589 to i64*
  %2590 = load i64, i64* %RBP.i1017
  %2591 = sub i64 %2590, 4
  %2592 = load i64, i64* %PC.i1015
  %2593 = add i64 %2592, 3
  store i64 %2593, i64* %PC.i1015
  %2594 = inttoptr i64 %2591 to i32*
  %2595 = load i32, i32* %2594
  %2596 = zext i32 %2595 to i64
  store i64 %2596, i64* %RCX.i1016, align 8
  store %struct.Memory* %loadMem_40aa8e, %struct.Memory** %MEMORY
  %loadMem_40aa91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2598 = getelementptr inbounds %struct.GPR, %struct.GPR* %2597, i32 0, i32 33
  %2599 = getelementptr inbounds %struct.Reg, %struct.Reg* %2598, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %2599 to i64*
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2601 = getelementptr inbounds %struct.GPR, %struct.GPR* %2600, i32 0, i32 5
  %2602 = getelementptr inbounds %struct.Reg, %struct.Reg* %2601, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %2602 to i64*
  %2603 = load i64, i64* %RCX.i1014
  %2604 = load i64, i64* %PC.i1013
  %2605 = add i64 %2604, 3
  store i64 %2605, i64* %PC.i1013
  %2606 = trunc i64 %2603 to i32
  %2607 = add i32 20, %2606
  %2608 = zext i32 %2607 to i64
  store i64 %2608, i64* %RCX.i1014, align 8
  %2609 = icmp ult i32 %2607, %2606
  %2610 = icmp ult i32 %2607, 20
  %2611 = or i1 %2609, %2610
  %2612 = zext i1 %2611 to i8
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2612, i8* %2613, align 1
  %2614 = and i32 %2607, 255
  %2615 = call i32 @llvm.ctpop.i32(i32 %2614)
  %2616 = trunc i32 %2615 to i8
  %2617 = and i8 %2616, 1
  %2618 = xor i8 %2617, 1
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2618, i8* %2619, align 1
  %2620 = xor i64 20, %2603
  %2621 = trunc i64 %2620 to i32
  %2622 = xor i32 %2621, %2607
  %2623 = lshr i32 %2622, 4
  %2624 = trunc i32 %2623 to i8
  %2625 = and i8 %2624, 1
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2625, i8* %2626, align 1
  %2627 = icmp eq i32 %2607, 0
  %2628 = zext i1 %2627 to i8
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2628, i8* %2629, align 1
  %2630 = lshr i32 %2607, 31
  %2631 = trunc i32 %2630 to i8
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2631, i8* %2632, align 1
  %2633 = lshr i32 %2606, 31
  %2634 = xor i32 %2630, %2633
  %2635 = add i32 %2634, %2630
  %2636 = icmp eq i32 %2635, 2
  %2637 = zext i1 %2636 to i8
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2637, i8* %2638, align 1
  store %struct.Memory* %loadMem_40aa91, %struct.Memory** %MEMORY
  %loadMem_40aa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 33
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %2641 to i64*
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2643 = getelementptr inbounds %struct.GPR, %struct.GPR* %2642, i32 0, i32 5
  %2644 = getelementptr inbounds %struct.Reg, %struct.Reg* %2643, i32 0, i32 0
  %ECX.i1011 = bitcast %union.anon* %2644 to i32*
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2646 = getelementptr inbounds %struct.GPR, %struct.GPR* %2645, i32 0, i32 7
  %2647 = getelementptr inbounds %struct.Reg, %struct.Reg* %2646, i32 0, i32 0
  %RDX.i1012 = bitcast %union.anon* %2647 to i64*
  %2648 = load i32, i32* %ECX.i1011
  %2649 = zext i32 %2648 to i64
  %2650 = load i64, i64* %PC.i1010
  %2651 = add i64 %2650, 3
  store i64 %2651, i64* %PC.i1010
  %2652 = shl i64 %2649, 32
  %2653 = ashr exact i64 %2652, 32
  store i64 %2653, i64* %RDX.i1012, align 8
  store %struct.Memory* %loadMem_40aa94, %struct.Memory** %MEMORY
  %loadMem_40aa97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 33
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %2656 to i64*
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2658 = getelementptr inbounds %struct.GPR, %struct.GPR* %2657, i32 0, i32 5
  %2659 = getelementptr inbounds %struct.Reg, %struct.Reg* %2658, i32 0, i32 0
  %RCX.i1008 = bitcast %union.anon* %2659 to i64*
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2661 = getelementptr inbounds %struct.GPR, %struct.GPR* %2660, i32 0, i32 7
  %2662 = getelementptr inbounds %struct.Reg, %struct.Reg* %2661, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %2662 to i64*
  %2663 = load i64, i64* %RDX.i1009
  %2664 = mul i64 %2663, 4
  %2665 = add i64 %2664, 11187184
  %2666 = load i64, i64* %PC.i1007
  %2667 = add i64 %2666, 7
  store i64 %2667, i64* %PC.i1007
  %2668 = inttoptr i64 %2665 to i32*
  %2669 = load i32, i32* %2668
  %2670 = zext i32 %2669 to i64
  store i64 %2670, i64* %RCX.i1008, align 8
  store %struct.Memory* %loadMem_40aa97, %struct.Memory** %MEMORY
  %loadMem_40aa9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 33
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %2673 to i64*
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 7
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %RDX.i1005 = bitcast %union.anon* %2676 to i64*
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 15
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %2679 to i64*
  %2680 = load i64, i64* %RBP.i1006
  %2681 = sub i64 %2680, 8
  %2682 = load i64, i64* %PC.i1004
  %2683 = add i64 %2682, 4
  store i64 %2683, i64* %PC.i1004
  %2684 = inttoptr i64 %2681 to i32*
  %2685 = load i32, i32* %2684
  %2686 = sext i32 %2685 to i64
  store i64 %2686, i64* %RDX.i1005, align 8
  store %struct.Memory* %loadMem_40aa9e, %struct.Memory** %MEMORY
  %loadMem_40aaa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 33
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %2689 to i64*
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 7
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %RDX.i1003 = bitcast %union.anon* %2692 to i64*
  %2693 = load i64, i64* %RDX.i1003
  %2694 = load i64, i64* %PC.i1002
  %2695 = add i64 %2694, 7
  store i64 %2695, i64* %PC.i1002
  %2696 = sext i64 %2693 to i128
  %2697 = and i128 %2696, -18446744073709551616
  %2698 = zext i64 %2693 to i128
  %2699 = or i128 %2697, %2698
  %2700 = mul i128 744, %2699
  %2701 = trunc i128 %2700 to i64
  store i64 %2701, i64* %RDX.i1003, align 8
  %2702 = sext i64 %2701 to i128
  %2703 = icmp ne i128 %2702, %2700
  %2704 = zext i1 %2703 to i8
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2704, i8* %2705, align 1
  %2706 = trunc i128 %2700 to i32
  %2707 = and i32 %2706, 255
  %2708 = call i32 @llvm.ctpop.i32(i32 %2707)
  %2709 = trunc i32 %2708 to i8
  %2710 = and i8 %2709, 1
  %2711 = xor i8 %2710, 1
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2711, i8* %2712, align 1
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2713, align 1
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2714, align 1
  %2715 = lshr i64 %2701, 63
  %2716 = trunc i64 %2715 to i8
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2716, i8* %2717, align 1
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2704, i8* %2718, align 1
  store %struct.Memory* %loadMem_40aaa2, %struct.Memory** %MEMORY
  %loadMem_40aaa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 33
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 1
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %2724 to i64*
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2726 = getelementptr inbounds %struct.GPR, %struct.GPR* %2725, i32 0, i32 9
  %2727 = getelementptr inbounds %struct.Reg, %struct.Reg* %2726, i32 0, i32 0
  %RSI.i1001 = bitcast %union.anon* %2727 to i64*
  %2728 = load i64, i64* %RAX.i1000
  %2729 = load i64, i64* %PC.i999
  %2730 = add i64 %2729, 3
  store i64 %2730, i64* %PC.i999
  store i64 %2728, i64* %RSI.i1001, align 8
  store %struct.Memory* %loadMem_40aaa9, %struct.Memory** %MEMORY
  %loadMem_40aaac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 33
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %2733 to i64*
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2735 = getelementptr inbounds %struct.GPR, %struct.GPR* %2734, i32 0, i32 7
  %2736 = getelementptr inbounds %struct.Reg, %struct.Reg* %2735, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %2736 to i64*
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 9
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %RSI.i998 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %RSI.i998
  %2741 = load i64, i64* %RDX.i997
  %2742 = load i64, i64* %PC.i996
  %2743 = add i64 %2742, 3
  store i64 %2743, i64* %PC.i996
  %2744 = add i64 %2741, %2740
  store i64 %2744, i64* %RSI.i998, align 8
  %2745 = icmp ult i64 %2744, %2740
  %2746 = icmp ult i64 %2744, %2741
  %2747 = or i1 %2745, %2746
  %2748 = zext i1 %2747 to i8
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2748, i8* %2749, align 1
  %2750 = trunc i64 %2744 to i32
  %2751 = and i32 %2750, 255
  %2752 = call i32 @llvm.ctpop.i32(i32 %2751)
  %2753 = trunc i32 %2752 to i8
  %2754 = and i8 %2753, 1
  %2755 = xor i8 %2754, 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2755, i8* %2756, align 1
  %2757 = xor i64 %2741, %2740
  %2758 = xor i64 %2757, %2744
  %2759 = lshr i64 %2758, 4
  %2760 = trunc i64 %2759 to i8
  %2761 = and i8 %2760, 1
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2761, i8* %2762, align 1
  %2763 = icmp eq i64 %2744, 0
  %2764 = zext i1 %2763 to i8
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2764, i8* %2765, align 1
  %2766 = lshr i64 %2744, 63
  %2767 = trunc i64 %2766 to i8
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2767, i8* %2768, align 1
  %2769 = lshr i64 %2740, 63
  %2770 = lshr i64 %2741, 63
  %2771 = xor i64 %2766, %2769
  %2772 = xor i64 %2766, %2770
  %2773 = add i64 %2771, %2772
  %2774 = icmp eq i64 %2773, 2
  %2775 = zext i1 %2774 to i8
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2775, i8* %2776, align 1
  store %struct.Memory* %loadMem_40aaac, %struct.Memory** %MEMORY
  %loadMem_40aaaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 33
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %2779 to i64*
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 7
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %RDX.i994 = bitcast %union.anon* %2782 to i64*
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2784 = getelementptr inbounds %struct.GPR, %struct.GPR* %2783, i32 0, i32 15
  %2785 = getelementptr inbounds %struct.Reg, %struct.Reg* %2784, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %2785 to i64*
  %2786 = load i64, i64* %RBP.i995
  %2787 = sub i64 %2786, 8
  %2788 = load i64, i64* %PC.i993
  %2789 = add i64 %2788, 4
  store i64 %2789, i64* %PC.i993
  %2790 = inttoptr i64 %2787 to i32*
  %2791 = load i32, i32* %2790
  %2792 = sext i32 %2791 to i64
  store i64 %2792, i64* %RDX.i994, align 8
  store %struct.Memory* %loadMem_40aaaf, %struct.Memory** %MEMORY
  %loadMem_40aab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2794 = getelementptr inbounds %struct.GPR, %struct.GPR* %2793, i32 0, i32 33
  %2795 = getelementptr inbounds %struct.Reg, %struct.Reg* %2794, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %2795 to i64*
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2797 = getelementptr inbounds %struct.GPR, %struct.GPR* %2796, i32 0, i32 7
  %2798 = getelementptr inbounds %struct.Reg, %struct.Reg* %2797, i32 0, i32 0
  %RDX.i992 = bitcast %union.anon* %2798 to i64*
  %2799 = load i64, i64* %RDX.i992
  %2800 = load i64, i64* %PC.i991
  %2801 = add i64 %2800, 7
  store i64 %2801, i64* %PC.i991
  %2802 = sext i64 %2799 to i128
  %2803 = and i128 %2802, -18446744073709551616
  %2804 = zext i64 %2799 to i128
  %2805 = or i128 %2803, %2804
  %2806 = mul i128 744, %2805
  %2807 = trunc i128 %2806 to i64
  store i64 %2807, i64* %RDX.i992, align 8
  %2808 = sext i64 %2807 to i128
  %2809 = icmp ne i128 %2808, %2806
  %2810 = zext i1 %2809 to i8
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2810, i8* %2811, align 1
  %2812 = trunc i128 %2806 to i32
  %2813 = and i32 %2812, 255
  %2814 = call i32 @llvm.ctpop.i32(i32 %2813)
  %2815 = trunc i32 %2814 to i8
  %2816 = and i8 %2815, 1
  %2817 = xor i8 %2816, 1
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2817, i8* %2818, align 1
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2819, align 1
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2820, align 1
  %2821 = lshr i64 %2807, 63
  %2822 = trunc i64 %2821 to i8
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2822, i8* %2823, align 1
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2810, i8* %2824, align 1
  store %struct.Memory* %loadMem_40aab3, %struct.Memory** %MEMORY
  %loadMem_40aaba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 33
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %2827 to i64*
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2829 = getelementptr inbounds %struct.GPR, %struct.GPR* %2828, i32 0, i32 1
  %2830 = getelementptr inbounds %struct.Reg, %struct.Reg* %2829, i32 0, i32 0
  %RAX.i989 = bitcast %union.anon* %2830 to i64*
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 11
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %RDI.i990 = bitcast %union.anon* %2833 to i64*
  %2834 = load i64, i64* %RAX.i989
  %2835 = load i64, i64* %PC.i988
  %2836 = add i64 %2835, 3
  store i64 %2836, i64* %PC.i988
  store i64 %2834, i64* %RDI.i990, align 8
  store %struct.Memory* %loadMem_40aaba, %struct.Memory** %MEMORY
  %loadMem_40aabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 33
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %2839 to i64*
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 7
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %2842 to i64*
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2844 = getelementptr inbounds %struct.GPR, %struct.GPR* %2843, i32 0, i32 11
  %2845 = getelementptr inbounds %struct.Reg, %struct.Reg* %2844, i32 0, i32 0
  %RDI.i987 = bitcast %union.anon* %2845 to i64*
  %2846 = load i64, i64* %RDI.i987
  %2847 = load i64, i64* %RDX.i986
  %2848 = load i64, i64* %PC.i985
  %2849 = add i64 %2848, 3
  store i64 %2849, i64* %PC.i985
  %2850 = add i64 %2847, %2846
  store i64 %2850, i64* %RDI.i987, align 8
  %2851 = icmp ult i64 %2850, %2846
  %2852 = icmp ult i64 %2850, %2847
  %2853 = or i1 %2851, %2852
  %2854 = zext i1 %2853 to i8
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2854, i8* %2855, align 1
  %2856 = trunc i64 %2850 to i32
  %2857 = and i32 %2856, 255
  %2858 = call i32 @llvm.ctpop.i32(i32 %2857)
  %2859 = trunc i32 %2858 to i8
  %2860 = and i8 %2859, 1
  %2861 = xor i8 %2860, 1
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2861, i8* %2862, align 1
  %2863 = xor i64 %2847, %2846
  %2864 = xor i64 %2863, %2850
  %2865 = lshr i64 %2864, 4
  %2866 = trunc i64 %2865 to i8
  %2867 = and i8 %2866, 1
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2867, i8* %2868, align 1
  %2869 = icmp eq i64 %2850, 0
  %2870 = zext i1 %2869 to i8
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2870, i8* %2871, align 1
  %2872 = lshr i64 %2850, 63
  %2873 = trunc i64 %2872 to i8
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2873, i8* %2874, align 1
  %2875 = lshr i64 %2846, 63
  %2876 = lshr i64 %2847, 63
  %2877 = xor i64 %2872, %2875
  %2878 = xor i64 %2872, %2876
  %2879 = add i64 %2877, %2878
  %2880 = icmp eq i64 %2879, 2
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2881, i8* %2882, align 1
  store %struct.Memory* %loadMem_40aabd, %struct.Memory** %MEMORY
  %loadMem_40aac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2884 = getelementptr inbounds %struct.GPR, %struct.GPR* %2883, i32 0, i32 33
  %2885 = getelementptr inbounds %struct.Reg, %struct.Reg* %2884, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %2885 to i64*
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2887 = getelementptr inbounds %struct.GPR, %struct.GPR* %2886, i32 0, i32 17
  %2888 = getelementptr inbounds %struct.Reg, %struct.Reg* %2887, i32 0, i32 0
  %R8D.i983 = bitcast %union.anon* %2888 to i32*
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 11
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %RDI.i984 = bitcast %union.anon* %2891 to i64*
  %2892 = bitcast i32* %R8D.i983 to i64*
  %2893 = load i64, i64* %RDI.i984
  %2894 = add i64 %2893, 96
  %2895 = load i64, i64* %PC.i982
  %2896 = add i64 %2895, 4
  store i64 %2896, i64* %PC.i982
  %2897 = inttoptr i64 %2894 to i32*
  %2898 = load i32, i32* %2897
  %2899 = zext i32 %2898 to i64
  store i64 %2899, i64* %2892, align 8
  store %struct.Memory* %loadMem_40aac0, %struct.Memory** %MEMORY
  %loadMem_40aac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 33
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 17
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %R8D.i980 = bitcast %union.anon* %2905 to i32*
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2907 = getelementptr inbounds %struct.GPR, %struct.GPR* %2906, i32 0, i32 19
  %2908 = getelementptr inbounds %struct.Reg, %struct.Reg* %2907, i32 0, i32 0
  %R9D.i981 = bitcast %union.anon* %2908 to i32*
  %2909 = bitcast i32* %R9D.i981 to i64*
  %2910 = load i32, i32* %R8D.i980
  %2911 = zext i32 %2910 to i64
  %2912 = load i64, i64* %PC.i979
  %2913 = add i64 %2912, 3
  store i64 %2913, i64* %PC.i979
  %2914 = and i64 %2911, 4294967295
  store i64 %2914, i64* %2909, align 8
  store %struct.Memory* %loadMem_40aac4, %struct.Memory** %MEMORY
  %loadMem_40aac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 33
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2917 to i64*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 19
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %R9D.i978 = bitcast %union.anon* %2920 to i32*
  %2921 = bitcast i32* %R9D.i978 to i64*
  %2922 = load i32, i32* %R9D.i978
  %2923 = zext i32 %2922 to i64
  %2924 = load i64, i64* %PC.i977
  %2925 = add i64 %2924, 4
  store i64 %2925, i64* %PC.i977
  %2926 = add i32 1, %2922
  %2927 = zext i32 %2926 to i64
  store i64 %2927, i64* %2921, align 8
  %2928 = icmp ult i32 %2926, %2922
  %2929 = icmp ult i32 %2926, 1
  %2930 = or i1 %2928, %2929
  %2931 = zext i1 %2930 to i8
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2931, i8* %2932, align 1
  %2933 = and i32 %2926, 255
  %2934 = call i32 @llvm.ctpop.i32(i32 %2933)
  %2935 = trunc i32 %2934 to i8
  %2936 = and i8 %2935, 1
  %2937 = xor i8 %2936, 1
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2937, i8* %2938, align 1
  %2939 = xor i64 1, %2923
  %2940 = trunc i64 %2939 to i32
  %2941 = xor i32 %2940, %2926
  %2942 = lshr i32 %2941, 4
  %2943 = trunc i32 %2942 to i8
  %2944 = and i8 %2943, 1
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2944, i8* %2945, align 1
  %2946 = icmp eq i32 %2926, 0
  %2947 = zext i1 %2946 to i8
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2947, i8* %2948, align 1
  %2949 = lshr i32 %2926, 31
  %2950 = trunc i32 %2949 to i8
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2950, i8* %2951, align 1
  %2952 = lshr i32 %2922, 31
  %2953 = xor i32 %2949, %2952
  %2954 = add i32 %2953, %2949
  %2955 = icmp eq i32 %2954, 2
  %2956 = zext i1 %2955 to i8
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2956, i8* %2957, align 1
  store %struct.Memory* %loadMem_40aac7, %struct.Memory** %MEMORY
  %loadMem_40aacb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 19
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %R9D.i975 = bitcast %union.anon* %2963 to i32*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2965 = getelementptr inbounds %struct.GPR, %struct.GPR* %2964, i32 0, i32 11
  %2966 = getelementptr inbounds %struct.Reg, %struct.Reg* %2965, i32 0, i32 0
  %RDI.i976 = bitcast %union.anon* %2966 to i64*
  %2967 = load i64, i64* %RDI.i976
  %2968 = add i64 %2967, 96
  %2969 = load i32, i32* %R9D.i975
  %2970 = zext i32 %2969 to i64
  %2971 = load i64, i64* %PC.i974
  %2972 = add i64 %2971, 4
  store i64 %2972, i64* %PC.i974
  %2973 = inttoptr i64 %2968 to i32*
  store i32 %2969, i32* %2973
  store %struct.Memory* %loadMem_40aacb, %struct.Memory** %MEMORY
  %loadMem_40aacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 33
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %2976 to i64*
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2978 = getelementptr inbounds %struct.GPR, %struct.GPR* %2977, i32 0, i32 17
  %2979 = getelementptr inbounds %struct.Reg, %struct.Reg* %2978, i32 0, i32 0
  %R8D.i972 = bitcast %union.anon* %2979 to i32*
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2981 = getelementptr inbounds %struct.GPR, %struct.GPR* %2980, i32 0, i32 7
  %2982 = getelementptr inbounds %struct.Reg, %struct.Reg* %2981, i32 0, i32 0
  %RDX.i973 = bitcast %union.anon* %2982 to i64*
  %2983 = load i32, i32* %R8D.i972
  %2984 = zext i32 %2983 to i64
  %2985 = load i64, i64* %PC.i971
  %2986 = add i64 %2985, 3
  store i64 %2986, i64* %PC.i971
  %2987 = shl i64 %2984, 32
  %2988 = ashr exact i64 %2987, 32
  store i64 %2988, i64* %RDX.i973, align 8
  store %struct.Memory* %loadMem_40aacf, %struct.Memory** %MEMORY
  %loadMem_40aad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 33
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %2991 to i64*
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2993 = getelementptr inbounds %struct.GPR, %struct.GPR* %2992, i32 0, i32 5
  %2994 = getelementptr inbounds %struct.Reg, %struct.Reg* %2993, i32 0, i32 0
  %ECX.i968 = bitcast %union.anon* %2994 to i32*
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2996 = getelementptr inbounds %struct.GPR, %struct.GPR* %2995, i32 0, i32 7
  %2997 = getelementptr inbounds %struct.Reg, %struct.Reg* %2996, i32 0, i32 0
  %RDX.i969 = bitcast %union.anon* %2997 to i64*
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 9
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %RSI.i970 = bitcast %union.anon* %3000 to i64*
  %3001 = load i64, i64* %RSI.i970
  %3002 = load i64, i64* %RDX.i969
  %3003 = mul i64 %3002, 4
  %3004 = add i64 %3001, 100
  %3005 = add i64 %3004, %3003
  %3006 = load i32, i32* %ECX.i968
  %3007 = zext i32 %3006 to i64
  %3008 = load i64, i64* %PC.i967
  %3009 = add i64 %3008, 4
  store i64 %3009, i64* %PC.i967
  %3010 = inttoptr i64 %3005 to i32*
  store i32 %3006, i32* %3010
  store %struct.Memory* %loadMem_40aad2, %struct.Memory** %MEMORY
  %loadMem_40aad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 33
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %3013 to i64*
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 7
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %RDX.i965 = bitcast %union.anon* %3016 to i64*
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 15
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %3019 to i64*
  %3020 = load i64, i64* %RBP.i966
  %3021 = sub i64 %3020, 20
  %3022 = load i64, i64* %PC.i964
  %3023 = add i64 %3022, 4
  store i64 %3023, i64* %PC.i964
  %3024 = inttoptr i64 %3021 to i32*
  %3025 = load i32, i32* %3024
  %3026 = sext i32 %3025 to i64
  store i64 %3026, i64* %RDX.i965, align 8
  store %struct.Memory* %loadMem_40aad6, %struct.Memory** %MEMORY
  %loadMem_40aada = load %struct.Memory*, %struct.Memory** %MEMORY
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3028 = getelementptr inbounds %struct.GPR, %struct.GPR* %3027, i32 0, i32 33
  %3029 = getelementptr inbounds %struct.Reg, %struct.Reg* %3028, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %3029 to i64*
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 7
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %RDX.i963 = bitcast %union.anon* %3032 to i64*
  %3033 = load i64, i64* %RDX.i963
  %3034 = load i64, i64* %PC.i962
  %3035 = add i64 %3034, 7
  store i64 %3035, i64* %PC.i962
  %3036 = sext i64 %3033 to i128
  %3037 = and i128 %3036, -18446744073709551616
  %3038 = zext i64 %3033 to i128
  %3039 = or i128 %3037, %3038
  %3040 = mul i128 744, %3039
  %3041 = trunc i128 %3040 to i64
  store i64 %3041, i64* %RDX.i963, align 8
  %3042 = sext i64 %3041 to i128
  %3043 = icmp ne i128 %3042, %3040
  %3044 = zext i1 %3043 to i8
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3044, i8* %3045, align 1
  %3046 = trunc i128 %3040 to i32
  %3047 = and i32 %3046, 255
  %3048 = call i32 @llvm.ctpop.i32(i32 %3047)
  %3049 = trunc i32 %3048 to i8
  %3050 = and i8 %3049, 1
  %3051 = xor i8 %3050, 1
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3051, i8* %3052, align 1
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3053, align 1
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3054, align 1
  %3055 = lshr i64 %3041, 63
  %3056 = trunc i64 %3055 to i8
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3056, i8* %3057, align 1
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3044, i8* %3058, align 1
  store %struct.Memory* %loadMem_40aada, %struct.Memory** %MEMORY
  %loadMem_40aae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 33
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %3061 to i64*
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 1
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 9
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %RSI.i961 = bitcast %union.anon* %3067 to i64*
  %3068 = load i64, i64* %RAX.i960
  %3069 = load i64, i64* %PC.i959
  %3070 = add i64 %3069, 3
  store i64 %3070, i64* %PC.i959
  store i64 %3068, i64* %RSI.i961, align 8
  store %struct.Memory* %loadMem_40aae1, %struct.Memory** %MEMORY
  %loadMem_40aae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3072 = getelementptr inbounds %struct.GPR, %struct.GPR* %3071, i32 0, i32 33
  %3073 = getelementptr inbounds %struct.Reg, %struct.Reg* %3072, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %3073 to i64*
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3075 = getelementptr inbounds %struct.GPR, %struct.GPR* %3074, i32 0, i32 7
  %3076 = getelementptr inbounds %struct.Reg, %struct.Reg* %3075, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %3076 to i64*
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 9
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %RSI.i958 = bitcast %union.anon* %3079 to i64*
  %3080 = load i64, i64* %RSI.i958
  %3081 = load i64, i64* %RDX.i957
  %3082 = load i64, i64* %PC.i956
  %3083 = add i64 %3082, 3
  store i64 %3083, i64* %PC.i956
  %3084 = add i64 %3081, %3080
  store i64 %3084, i64* %RSI.i958, align 8
  %3085 = icmp ult i64 %3084, %3080
  %3086 = icmp ult i64 %3084, %3081
  %3087 = or i1 %3085, %3086
  %3088 = zext i1 %3087 to i8
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3088, i8* %3089, align 1
  %3090 = trunc i64 %3084 to i32
  %3091 = and i32 %3090, 255
  %3092 = call i32 @llvm.ctpop.i32(i32 %3091)
  %3093 = trunc i32 %3092 to i8
  %3094 = and i8 %3093, 1
  %3095 = xor i8 %3094, 1
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3095, i8* %3096, align 1
  %3097 = xor i64 %3081, %3080
  %3098 = xor i64 %3097, %3084
  %3099 = lshr i64 %3098, 4
  %3100 = trunc i64 %3099 to i8
  %3101 = and i8 %3100, 1
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3101, i8* %3102, align 1
  %3103 = icmp eq i64 %3084, 0
  %3104 = zext i1 %3103 to i8
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3104, i8* %3105, align 1
  %3106 = lshr i64 %3084, 63
  %3107 = trunc i64 %3106 to i8
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3107, i8* %3108, align 1
  %3109 = lshr i64 %3080, 63
  %3110 = lshr i64 %3081, 63
  %3111 = xor i64 %3106, %3109
  %3112 = xor i64 %3106, %3110
  %3113 = add i64 %3111, %3112
  %3114 = icmp eq i64 %3113, 2
  %3115 = zext i1 %3114 to i8
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3115, i8* %3116, align 1
  store %struct.Memory* %loadMem_40aae4, %struct.Memory** %MEMORY
  %loadMem_40aae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 33
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %3119 to i64*
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3121 = getelementptr inbounds %struct.GPR, %struct.GPR* %3120, i32 0, i32 9
  %3122 = getelementptr inbounds %struct.Reg, %struct.Reg* %3121, i32 0, i32 0
  %RSI.i955 = bitcast %union.anon* %3122 to i64*
  %3123 = load i64, i64* %RSI.i955
  %3124 = load i64, i64* %PC.i954
  %3125 = add i64 %3124, 4
  store i64 %3125, i64* %PC.i954
  %3126 = add i64 96, %3123
  store i64 %3126, i64* %RSI.i955, align 8
  %3127 = icmp ult i64 %3126, %3123
  %3128 = icmp ult i64 %3126, 96
  %3129 = or i1 %3127, %3128
  %3130 = zext i1 %3129 to i8
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3130, i8* %3131, align 1
  %3132 = trunc i64 %3126 to i32
  %3133 = and i32 %3132, 255
  %3134 = call i32 @llvm.ctpop.i32(i32 %3133)
  %3135 = trunc i32 %3134 to i8
  %3136 = and i8 %3135, 1
  %3137 = xor i8 %3136, 1
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3137, i8* %3138, align 1
  %3139 = xor i64 96, %3123
  %3140 = xor i64 %3139, %3126
  %3141 = lshr i64 %3140, 4
  %3142 = trunc i64 %3141 to i8
  %3143 = and i8 %3142, 1
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3143, i8* %3144, align 1
  %3145 = icmp eq i64 %3126, 0
  %3146 = zext i1 %3145 to i8
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3146, i8* %3147, align 1
  %3148 = lshr i64 %3126, 63
  %3149 = trunc i64 %3148 to i8
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3149, i8* %3150, align 1
  %3151 = lshr i64 %3123, 63
  %3152 = xor i64 %3148, %3151
  %3153 = add i64 %3152, %3148
  %3154 = icmp eq i64 %3153, 2
  %3155 = zext i1 %3154 to i8
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3155, i8* %3156, align 1
  store %struct.Memory* %loadMem_40aae7, %struct.Memory** %MEMORY
  %loadMem_40aaeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 7
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %3162 to i64*
  %3163 = load i64, i64* %PC.i952
  %3164 = add i64 %3163, 8
  store i64 %3164, i64* %PC.i952
  %3165 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %3165, i64* %RDX.i953, align 8
  store %struct.Memory* %loadMem_40aaeb, %struct.Memory** %MEMORY
  %loadMem_40aaf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 7
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RDX.i950 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 9
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RSI.i951 = bitcast %union.anon* %3174 to i64*
  %3175 = load i64, i64* %RDX.i950
  %3176 = load i64, i64* %RSI.i951
  %3177 = load i64, i64* %PC.i949
  %3178 = add i64 %3177, 3
  store i64 %3178, i64* %PC.i949
  %3179 = inttoptr i64 %3175 to i64*
  store i64 %3176, i64* %3179
  store %struct.Memory* %loadMem_40aaf3, %struct.Memory** %MEMORY
  %loadMem_40aaf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3181 = getelementptr inbounds %struct.GPR, %struct.GPR* %3180, i32 0, i32 33
  %3182 = getelementptr inbounds %struct.Reg, %struct.Reg* %3181, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %3182 to i64*
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3184 = getelementptr inbounds %struct.GPR, %struct.GPR* %3183, i32 0, i32 7
  %3185 = getelementptr inbounds %struct.Reg, %struct.Reg* %3184, i32 0, i32 0
  %RDX.i947 = bitcast %union.anon* %3185 to i64*
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3187 = getelementptr inbounds %struct.GPR, %struct.GPR* %3186, i32 0, i32 15
  %3188 = getelementptr inbounds %struct.Reg, %struct.Reg* %3187, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %3188 to i64*
  %3189 = load i64, i64* %RBP.i948
  %3190 = sub i64 %3189, 20
  %3191 = load i64, i64* %PC.i946
  %3192 = add i64 %3191, 4
  store i64 %3192, i64* %PC.i946
  %3193 = inttoptr i64 %3190 to i32*
  %3194 = load i32, i32* %3193
  %3195 = sext i32 %3194 to i64
  store i64 %3195, i64* %RDX.i947, align 8
  store %struct.Memory* %loadMem_40aaf6, %struct.Memory** %MEMORY
  %loadMem_40aafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3197 = getelementptr inbounds %struct.GPR, %struct.GPR* %3196, i32 0, i32 33
  %3198 = getelementptr inbounds %struct.Reg, %struct.Reg* %3197, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %3198 to i64*
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3200 = getelementptr inbounds %struct.GPR, %struct.GPR* %3199, i32 0, i32 7
  %3201 = getelementptr inbounds %struct.Reg, %struct.Reg* %3200, i32 0, i32 0
  %RDX.i945 = bitcast %union.anon* %3201 to i64*
  %3202 = load i64, i64* %RDX.i945
  %3203 = load i64, i64* %PC.i944
  %3204 = add i64 %3203, 7
  store i64 %3204, i64* %PC.i944
  %3205 = sext i64 %3202 to i128
  %3206 = and i128 %3205, -18446744073709551616
  %3207 = zext i64 %3202 to i128
  %3208 = or i128 %3206, %3207
  %3209 = mul i128 744, %3208
  %3210 = trunc i128 %3209 to i64
  store i64 %3210, i64* %RDX.i945, align 8
  %3211 = sext i64 %3210 to i128
  %3212 = icmp ne i128 %3211, %3209
  %3213 = zext i1 %3212 to i8
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3213, i8* %3214, align 1
  %3215 = trunc i128 %3209 to i32
  %3216 = and i32 %3215, 255
  %3217 = call i32 @llvm.ctpop.i32(i32 %3216)
  %3218 = trunc i32 %3217 to i8
  %3219 = and i8 %3218, 1
  %3220 = xor i8 %3219, 1
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3220, i8* %3221, align 1
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3222, align 1
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3223, align 1
  %3224 = lshr i64 %3210, 63
  %3225 = trunc i64 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3225, i8* %3226, align 1
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3213, i8* %3227, align 1
  store %struct.Memory* %loadMem_40aafa, %struct.Memory** %MEMORY
  %loadMem_40ab01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3229 = getelementptr inbounds %struct.GPR, %struct.GPR* %3228, i32 0, i32 33
  %3230 = getelementptr inbounds %struct.Reg, %struct.Reg* %3229, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %3230 to i64*
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 1
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %RAX.i942 = bitcast %union.anon* %3233 to i64*
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 9
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %RSI.i943 = bitcast %union.anon* %3236 to i64*
  %3237 = load i64, i64* %RAX.i942
  %3238 = load i64, i64* %PC.i941
  %3239 = add i64 %3238, 3
  store i64 %3239, i64* %PC.i941
  store i64 %3237, i64* %RSI.i943, align 8
  store %struct.Memory* %loadMem_40ab01, %struct.Memory** %MEMORY
  %loadMem_40ab04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 7
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 9
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RSI.i940 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RSI.i940
  %3250 = load i64, i64* %RDX.i939
  %3251 = load i64, i64* %PC.i938
  %3252 = add i64 %3251, 3
  store i64 %3252, i64* %PC.i938
  %3253 = add i64 %3250, %3249
  store i64 %3253, i64* %RSI.i940, align 8
  %3254 = icmp ult i64 %3253, %3249
  %3255 = icmp ult i64 %3253, %3250
  %3256 = or i1 %3254, %3255
  %3257 = zext i1 %3256 to i8
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3257, i8* %3258, align 1
  %3259 = trunc i64 %3253 to i32
  %3260 = and i32 %3259, 255
  %3261 = call i32 @llvm.ctpop.i32(i32 %3260)
  %3262 = trunc i32 %3261 to i8
  %3263 = and i8 %3262, 1
  %3264 = xor i8 %3263, 1
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3264, i8* %3265, align 1
  %3266 = xor i64 %3250, %3249
  %3267 = xor i64 %3266, %3253
  %3268 = lshr i64 %3267, 4
  %3269 = trunc i64 %3268 to i8
  %3270 = and i8 %3269, 1
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3270, i8* %3271, align 1
  %3272 = icmp eq i64 %3253, 0
  %3273 = zext i1 %3272 to i8
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3273, i8* %3274, align 1
  %3275 = lshr i64 %3253, 63
  %3276 = trunc i64 %3275 to i8
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3276, i8* %3277, align 1
  %3278 = lshr i64 %3249, 63
  %3279 = lshr i64 %3250, 63
  %3280 = xor i64 %3275, %3278
  %3281 = xor i64 %3275, %3279
  %3282 = add i64 %3280, %3281
  %3283 = icmp eq i64 %3282, 2
  %3284 = zext i1 %3283 to i8
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3284, i8* %3285, align 1
  store %struct.Memory* %loadMem_40ab04, %struct.Memory** %MEMORY
  %loadMem_40ab07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3287 = getelementptr inbounds %struct.GPR, %struct.GPR* %3286, i32 0, i32 33
  %3288 = getelementptr inbounds %struct.Reg, %struct.Reg* %3287, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %3288 to i64*
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 5
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %RCX.i936 = bitcast %union.anon* %3291 to i64*
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 9
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %RSI.i937 = bitcast %union.anon* %3294 to i64*
  %3295 = load i64, i64* %RSI.i937
  %3296 = add i64 %3295, 96
  %3297 = load i64, i64* %PC.i935
  %3298 = add i64 %3297, 3
  store i64 %3298, i64* %PC.i935
  %3299 = inttoptr i64 %3296 to i32*
  %3300 = load i32, i32* %3299
  %3301 = zext i32 %3300 to i64
  store i64 %3301, i64* %RCX.i936, align 8
  store %struct.Memory* %loadMem_40ab07, %struct.Memory** %MEMORY
  %loadMem_40ab0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3303 = getelementptr inbounds %struct.GPR, %struct.GPR* %3302, i32 0, i32 33
  %3304 = getelementptr inbounds %struct.Reg, %struct.Reg* %3303, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %3304 to i64*
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 7
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %RDX.i934 = bitcast %union.anon* %3307 to i64*
  %3308 = load i64, i64* %PC.i933
  %3309 = add i64 %3308, 8
  store i64 %3309, i64* %PC.i933
  %3310 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %3310, i64* %RDX.i934, align 8
  store %struct.Memory* %loadMem_40ab0a, %struct.Memory** %MEMORY
  %loadMem_40ab12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 33
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %3313 to i64*
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 7
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %3316 to i64*
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3318 = getelementptr inbounds %struct.GPR, %struct.GPR* %3317, i32 0, i32 9
  %3319 = getelementptr inbounds %struct.Reg, %struct.Reg* %3318, i32 0, i32 0
  %RSI.i932 = bitcast %union.anon* %3319 to i64*
  %3320 = load i64, i64* %RDX.i931
  %3321 = load i64, i64* %PC.i930
  %3322 = add i64 %3321, 3
  store i64 %3322, i64* %PC.i930
  store i64 %3320, i64* %RSI.i932, align 8
  store %struct.Memory* %loadMem_40ab12, %struct.Memory** %MEMORY
  %loadMem_40ab15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 33
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %3325 to i64*
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 9
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %RSI.i929 = bitcast %union.anon* %3328 to i64*
  %3329 = load i64, i64* %RSI.i929
  %3330 = load i64, i64* %PC.i928
  %3331 = add i64 %3330, 4
  store i64 %3331, i64* %PC.i928
  %3332 = add i64 16, %3329
  store i64 %3332, i64* %RSI.i929, align 8
  %3333 = icmp ult i64 %3332, %3329
  %3334 = icmp ult i64 %3332, 16
  %3335 = or i1 %3333, %3334
  %3336 = zext i1 %3335 to i8
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3336, i8* %3337, align 1
  %3338 = trunc i64 %3332 to i32
  %3339 = and i32 %3338, 255
  %3340 = call i32 @llvm.ctpop.i32(i32 %3339)
  %3341 = trunc i32 %3340 to i8
  %3342 = and i8 %3341, 1
  %3343 = xor i8 %3342, 1
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3343, i8* %3344, align 1
  %3345 = xor i64 16, %3329
  %3346 = xor i64 %3345, %3332
  %3347 = lshr i64 %3346, 4
  %3348 = trunc i64 %3347 to i8
  %3349 = and i8 %3348, 1
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3349, i8* %3350, align 1
  %3351 = icmp eq i64 %3332, 0
  %3352 = zext i1 %3351 to i8
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3352, i8* %3353, align 1
  %3354 = lshr i64 %3332, 63
  %3355 = trunc i64 %3354 to i8
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3355, i8* %3356, align 1
  %3357 = lshr i64 %3329, 63
  %3358 = xor i64 %3354, %3357
  %3359 = add i64 %3358, %3354
  %3360 = icmp eq i64 %3359, 2
  %3361 = zext i1 %3360 to i8
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3361, i8* %3362, align 1
  store %struct.Memory* %loadMem_40ab15, %struct.Memory** %MEMORY
  %loadMem_40ab19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 33
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 9
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RSI.i927 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %RSI.i927
  %3370 = load i64, i64* %PC.i926
  %3371 = add i64 %3370, 8
  store i64 %3371, i64* %PC.i926
  store i64 %3369, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40ab19, %struct.Memory** %MEMORY
  %loadMem_40ab21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 33
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %3374 to i64*
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3376 = getelementptr inbounds %struct.GPR, %struct.GPR* %3375, i32 0, i32 5
  %3377 = getelementptr inbounds %struct.Reg, %struct.Reg* %3376, i32 0, i32 0
  %ECX.i924 = bitcast %union.anon* %3377 to i32*
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 7
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %3380 to i64*
  %3381 = load i64, i64* %RDX.i925
  %3382 = add i64 %3381, 8
  %3383 = load i32, i32* %ECX.i924
  %3384 = zext i32 %3383 to i64
  %3385 = load i64, i64* %PC.i923
  %3386 = add i64 %3385, 3
  store i64 %3386, i64* %PC.i923
  %3387 = inttoptr i64 %3382 to i32*
  store i32 %3383, i32* %3387
  store %struct.Memory* %loadMem_40ab21, %struct.Memory** %MEMORY
  %loadMem_40ab24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 33
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %3390 to i64*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 7
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %RDX.i921 = bitcast %union.anon* %3393 to i64*
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 15
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %3396 to i64*
  %3397 = load i64, i64* %RBP.i922
  %3398 = sub i64 %3397, 4
  %3399 = load i64, i64* %PC.i920
  %3400 = add i64 %3399, 4
  store i64 %3400, i64* %PC.i920
  %3401 = inttoptr i64 %3398 to i32*
  %3402 = load i32, i32* %3401
  %3403 = sext i32 %3402 to i64
  store i64 %3403, i64* %RDX.i921, align 8
  store %struct.Memory* %loadMem_40ab24, %struct.Memory** %MEMORY
  %loadMem_40ab28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 33
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %3406 to i64*
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3408 = getelementptr inbounds %struct.GPR, %struct.GPR* %3407, i32 0, i32 5
  %3409 = getelementptr inbounds %struct.Reg, %struct.Reg* %3408, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %3409 to i64*
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 7
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %3412 to i64*
  %3413 = load i64, i64* %RDX.i919
  %3414 = mul i64 %3413, 4
  %3415 = add i64 %3414, 11187184
  %3416 = load i64, i64* %PC.i917
  %3417 = add i64 %3416, 7
  store i64 %3417, i64* %PC.i917
  %3418 = inttoptr i64 %3415 to i32*
  %3419 = load i32, i32* %3418
  %3420 = zext i32 %3419 to i64
  store i64 %3420, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_40ab28, %struct.Memory** %MEMORY
  %loadMem_40ab2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 33
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %3423 to i64*
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3425 = getelementptr inbounds %struct.GPR, %struct.GPR* %3424, i32 0, i32 7
  %3426 = getelementptr inbounds %struct.Reg, %struct.Reg* %3425, i32 0, i32 0
  %RDX.i915 = bitcast %union.anon* %3426 to i64*
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3428 = getelementptr inbounds %struct.GPR, %struct.GPR* %3427, i32 0, i32 15
  %3429 = getelementptr inbounds %struct.Reg, %struct.Reg* %3428, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %3429 to i64*
  %3430 = load i64, i64* %RBP.i916
  %3431 = sub i64 %3430, 20
  %3432 = load i64, i64* %PC.i914
  %3433 = add i64 %3432, 4
  store i64 %3433, i64* %PC.i914
  %3434 = inttoptr i64 %3431 to i32*
  %3435 = load i32, i32* %3434
  %3436 = sext i32 %3435 to i64
  store i64 %3436, i64* %RDX.i915, align 8
  store %struct.Memory* %loadMem_40ab2f, %struct.Memory** %MEMORY
  %loadMem_40ab33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 33
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3439 to i64*
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 7
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %RDX.i913 = bitcast %union.anon* %3442 to i64*
  %3443 = load i64, i64* %RDX.i913
  %3444 = load i64, i64* %PC.i912
  %3445 = add i64 %3444, 7
  store i64 %3445, i64* %PC.i912
  %3446 = sext i64 %3443 to i128
  %3447 = and i128 %3446, -18446744073709551616
  %3448 = zext i64 %3443 to i128
  %3449 = or i128 %3447, %3448
  %3450 = mul i128 744, %3449
  %3451 = trunc i128 %3450 to i64
  store i64 %3451, i64* %RDX.i913, align 8
  %3452 = sext i64 %3451 to i128
  %3453 = icmp ne i128 %3452, %3450
  %3454 = zext i1 %3453 to i8
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3454, i8* %3455, align 1
  %3456 = trunc i128 %3450 to i32
  %3457 = and i32 %3456, 255
  %3458 = call i32 @llvm.ctpop.i32(i32 %3457)
  %3459 = trunc i32 %3458 to i8
  %3460 = and i8 %3459, 1
  %3461 = xor i8 %3460, 1
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3461, i8* %3462, align 1
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3463, align 1
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3464, align 1
  %3465 = lshr i64 %3451, 63
  %3466 = trunc i64 %3465 to i8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3466, i8* %3467, align 1
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3454, i8* %3468, align 1
  store %struct.Memory* %loadMem_40ab33, %struct.Memory** %MEMORY
  %loadMem_40ab3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3470 = getelementptr inbounds %struct.GPR, %struct.GPR* %3469, i32 0, i32 33
  %3471 = getelementptr inbounds %struct.Reg, %struct.Reg* %3470, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3471 to i64*
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3473 = getelementptr inbounds %struct.GPR, %struct.GPR* %3472, i32 0, i32 1
  %3474 = getelementptr inbounds %struct.Reg, %struct.Reg* %3473, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %3474 to i64*
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 9
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %RSI.i911 = bitcast %union.anon* %3477 to i64*
  %3478 = load i64, i64* %RAX.i910
  %3479 = load i64, i64* %PC.i909
  %3480 = add i64 %3479, 3
  store i64 %3480, i64* %PC.i909
  store i64 %3478, i64* %RSI.i911, align 8
  store %struct.Memory* %loadMem_40ab3a, %struct.Memory** %MEMORY
  %loadMem_40ab3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3482 = getelementptr inbounds %struct.GPR, %struct.GPR* %3481, i32 0, i32 33
  %3483 = getelementptr inbounds %struct.Reg, %struct.Reg* %3482, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %3483 to i64*
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3485 = getelementptr inbounds %struct.GPR, %struct.GPR* %3484, i32 0, i32 7
  %3486 = getelementptr inbounds %struct.Reg, %struct.Reg* %3485, i32 0, i32 0
  %RDX.i907 = bitcast %union.anon* %3486 to i64*
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 9
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %RSI.i908 = bitcast %union.anon* %3489 to i64*
  %3490 = load i64, i64* %RSI.i908
  %3491 = load i64, i64* %RDX.i907
  %3492 = load i64, i64* %PC.i906
  %3493 = add i64 %3492, 3
  store i64 %3493, i64* %PC.i906
  %3494 = add i64 %3491, %3490
  store i64 %3494, i64* %RSI.i908, align 8
  %3495 = icmp ult i64 %3494, %3490
  %3496 = icmp ult i64 %3494, %3491
  %3497 = or i1 %3495, %3496
  %3498 = zext i1 %3497 to i8
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3498, i8* %3499, align 1
  %3500 = trunc i64 %3494 to i32
  %3501 = and i32 %3500, 255
  %3502 = call i32 @llvm.ctpop.i32(i32 %3501)
  %3503 = trunc i32 %3502 to i8
  %3504 = and i8 %3503, 1
  %3505 = xor i8 %3504, 1
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3505, i8* %3506, align 1
  %3507 = xor i64 %3491, %3490
  %3508 = xor i64 %3507, %3494
  %3509 = lshr i64 %3508, 4
  %3510 = trunc i64 %3509 to i8
  %3511 = and i8 %3510, 1
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3511, i8* %3512, align 1
  %3513 = icmp eq i64 %3494, 0
  %3514 = zext i1 %3513 to i8
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3514, i8* %3515, align 1
  %3516 = lshr i64 %3494, 63
  %3517 = trunc i64 %3516 to i8
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3517, i8* %3518, align 1
  %3519 = lshr i64 %3490, 63
  %3520 = lshr i64 %3491, 63
  %3521 = xor i64 %3516, %3519
  %3522 = xor i64 %3516, %3520
  %3523 = add i64 %3521, %3522
  %3524 = icmp eq i64 %3523, 2
  %3525 = zext i1 %3524 to i8
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3525, i8* %3526, align 1
  store %struct.Memory* %loadMem_40ab3d, %struct.Memory** %MEMORY
  %loadMem_40ab40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 33
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %3529 to i64*
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 7
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %RDX.i904 = bitcast %union.anon* %3532 to i64*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 15
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %3535 to i64*
  %3536 = load i64, i64* %RBP.i905
  %3537 = sub i64 %3536, 20
  %3538 = load i64, i64* %PC.i903
  %3539 = add i64 %3538, 4
  store i64 %3539, i64* %PC.i903
  %3540 = inttoptr i64 %3537 to i32*
  %3541 = load i32, i32* %3540
  %3542 = sext i32 %3541 to i64
  store i64 %3542, i64* %RDX.i904, align 8
  store %struct.Memory* %loadMem_40ab40, %struct.Memory** %MEMORY
  %loadMem_40ab44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 33
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %3545 to i64*
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 7
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %3548 to i64*
  %3549 = load i64, i64* %RDX.i902
  %3550 = load i64, i64* %PC.i901
  %3551 = add i64 %3550, 7
  store i64 %3551, i64* %PC.i901
  %3552 = sext i64 %3549 to i128
  %3553 = and i128 %3552, -18446744073709551616
  %3554 = zext i64 %3549 to i128
  %3555 = or i128 %3553, %3554
  %3556 = mul i128 744, %3555
  %3557 = trunc i128 %3556 to i64
  store i64 %3557, i64* %RDX.i902, align 8
  %3558 = sext i64 %3557 to i128
  %3559 = icmp ne i128 %3558, %3556
  %3560 = zext i1 %3559 to i8
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3560, i8* %3561, align 1
  %3562 = trunc i128 %3556 to i32
  %3563 = and i32 %3562, 255
  %3564 = call i32 @llvm.ctpop.i32(i32 %3563)
  %3565 = trunc i32 %3564 to i8
  %3566 = and i8 %3565, 1
  %3567 = xor i8 %3566, 1
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3567, i8* %3568, align 1
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3569, align 1
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3570, align 1
  %3571 = lshr i64 %3557, 63
  %3572 = trunc i64 %3571 to i8
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3572, i8* %3573, align 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3560, i8* %3574, align 1
  store %struct.Memory* %loadMem_40ab44, %struct.Memory** %MEMORY
  %loadMem_40ab4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 33
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %3577 to i64*
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 1
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %RAX.i899 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 11
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RDI.i900 = bitcast %union.anon* %3583 to i64*
  %3584 = load i64, i64* %RAX.i899
  %3585 = load i64, i64* %PC.i898
  %3586 = add i64 %3585, 3
  store i64 %3586, i64* %PC.i898
  store i64 %3584, i64* %RDI.i900, align 8
  store %struct.Memory* %loadMem_40ab4b, %struct.Memory** %MEMORY
  %loadMem_40ab4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3588 = getelementptr inbounds %struct.GPR, %struct.GPR* %3587, i32 0, i32 33
  %3589 = getelementptr inbounds %struct.Reg, %struct.Reg* %3588, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %3589 to i64*
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 7
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %RDX.i896 = bitcast %union.anon* %3592 to i64*
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 11
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %RDI.i897 = bitcast %union.anon* %3595 to i64*
  %3596 = load i64, i64* %RDI.i897
  %3597 = load i64, i64* %RDX.i896
  %3598 = load i64, i64* %PC.i895
  %3599 = add i64 %3598, 3
  store i64 %3599, i64* %PC.i895
  %3600 = add i64 %3597, %3596
  store i64 %3600, i64* %RDI.i897, align 8
  %3601 = icmp ult i64 %3600, %3596
  %3602 = icmp ult i64 %3600, %3597
  %3603 = or i1 %3601, %3602
  %3604 = zext i1 %3603 to i8
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3604, i8* %3605, align 1
  %3606 = trunc i64 %3600 to i32
  %3607 = and i32 %3606, 255
  %3608 = call i32 @llvm.ctpop.i32(i32 %3607)
  %3609 = trunc i32 %3608 to i8
  %3610 = and i8 %3609, 1
  %3611 = xor i8 %3610, 1
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3611, i8* %3612, align 1
  %3613 = xor i64 %3597, %3596
  %3614 = xor i64 %3613, %3600
  %3615 = lshr i64 %3614, 4
  %3616 = trunc i64 %3615 to i8
  %3617 = and i8 %3616, 1
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3617, i8* %3618, align 1
  %3619 = icmp eq i64 %3600, 0
  %3620 = zext i1 %3619 to i8
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3620, i8* %3621, align 1
  %3622 = lshr i64 %3600, 63
  %3623 = trunc i64 %3622 to i8
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3623, i8* %3624, align 1
  %3625 = lshr i64 %3596, 63
  %3626 = lshr i64 %3597, 63
  %3627 = xor i64 %3622, %3625
  %3628 = xor i64 %3622, %3626
  %3629 = add i64 %3627, %3628
  %3630 = icmp eq i64 %3629, 2
  %3631 = zext i1 %3630 to i8
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3631, i8* %3632, align 1
  store %struct.Memory* %loadMem_40ab4e, %struct.Memory** %MEMORY
  %loadMem_40ab51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 33
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %3635 to i64*
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3637 = getelementptr inbounds %struct.GPR, %struct.GPR* %3636, i32 0, i32 17
  %3638 = getelementptr inbounds %struct.Reg, %struct.Reg* %3637, i32 0, i32 0
  %R8D.i893 = bitcast %union.anon* %3638 to i32*
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 11
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %RDI.i894 = bitcast %union.anon* %3641 to i64*
  %3642 = bitcast i32* %R8D.i893 to i64*
  %3643 = load i64, i64* %RDI.i894
  %3644 = add i64 %3643, 96
  %3645 = load i64, i64* %PC.i892
  %3646 = add i64 %3645, 4
  store i64 %3646, i64* %PC.i892
  %3647 = inttoptr i64 %3644 to i32*
  %3648 = load i32, i32* %3647
  %3649 = zext i32 %3648 to i64
  store i64 %3649, i64* %3642, align 8
  store %struct.Memory* %loadMem_40ab51, %struct.Memory** %MEMORY
  %loadMem_40ab55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 33
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %3652 to i64*
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 17
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %R8D.i890 = bitcast %union.anon* %3655 to i32*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 19
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %R9D.i891 = bitcast %union.anon* %3658 to i32*
  %3659 = bitcast i32* %R9D.i891 to i64*
  %3660 = load i32, i32* %R8D.i890
  %3661 = zext i32 %3660 to i64
  %3662 = load i64, i64* %PC.i889
  %3663 = add i64 %3662, 3
  store i64 %3663, i64* %PC.i889
  %3664 = and i64 %3661, 4294967295
  store i64 %3664, i64* %3659, align 8
  store %struct.Memory* %loadMem_40ab55, %struct.Memory** %MEMORY
  %loadMem_40ab58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3666 = getelementptr inbounds %struct.GPR, %struct.GPR* %3665, i32 0, i32 33
  %3667 = getelementptr inbounds %struct.Reg, %struct.Reg* %3666, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %3667 to i64*
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 19
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %R9D.i888 = bitcast %union.anon* %3670 to i32*
  %3671 = bitcast i32* %R9D.i888 to i64*
  %3672 = load i32, i32* %R9D.i888
  %3673 = zext i32 %3672 to i64
  %3674 = load i64, i64* %PC.i887
  %3675 = add i64 %3674, 4
  store i64 %3675, i64* %PC.i887
  %3676 = add i32 1, %3672
  %3677 = zext i32 %3676 to i64
  store i64 %3677, i64* %3671, align 8
  %3678 = icmp ult i32 %3676, %3672
  %3679 = icmp ult i32 %3676, 1
  %3680 = or i1 %3678, %3679
  %3681 = zext i1 %3680 to i8
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3681, i8* %3682, align 1
  %3683 = and i32 %3676, 255
  %3684 = call i32 @llvm.ctpop.i32(i32 %3683)
  %3685 = trunc i32 %3684 to i8
  %3686 = and i8 %3685, 1
  %3687 = xor i8 %3686, 1
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3687, i8* %3688, align 1
  %3689 = xor i64 1, %3673
  %3690 = trunc i64 %3689 to i32
  %3691 = xor i32 %3690, %3676
  %3692 = lshr i32 %3691, 4
  %3693 = trunc i32 %3692 to i8
  %3694 = and i8 %3693, 1
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3694, i8* %3695, align 1
  %3696 = icmp eq i32 %3676, 0
  %3697 = zext i1 %3696 to i8
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3697, i8* %3698, align 1
  %3699 = lshr i32 %3676, 31
  %3700 = trunc i32 %3699 to i8
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3700, i8* %3701, align 1
  %3702 = lshr i32 %3672, 31
  %3703 = xor i32 %3699, %3702
  %3704 = add i32 %3703, %3699
  %3705 = icmp eq i32 %3704, 2
  %3706 = zext i1 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3706, i8* %3707, align 1
  store %struct.Memory* %loadMem_40ab58, %struct.Memory** %MEMORY
  %loadMem_40ab5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 33
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %3710 to i64*
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3712 = getelementptr inbounds %struct.GPR, %struct.GPR* %3711, i32 0, i32 19
  %3713 = getelementptr inbounds %struct.Reg, %struct.Reg* %3712, i32 0, i32 0
  %R9D.i885 = bitcast %union.anon* %3713 to i32*
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 11
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %RDI.i886 = bitcast %union.anon* %3716 to i64*
  %3717 = load i64, i64* %RDI.i886
  %3718 = add i64 %3717, 96
  %3719 = load i32, i32* %R9D.i885
  %3720 = zext i32 %3719 to i64
  %3721 = load i64, i64* %PC.i884
  %3722 = add i64 %3721, 4
  store i64 %3722, i64* %PC.i884
  %3723 = inttoptr i64 %3718 to i32*
  store i32 %3719, i32* %3723
  store %struct.Memory* %loadMem_40ab5c, %struct.Memory** %MEMORY
  %loadMem_40ab60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 33
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %3726 to i64*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 17
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %R8D.i882 = bitcast %union.anon* %3729 to i32*
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 7
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %RDX.i883 = bitcast %union.anon* %3732 to i64*
  %3733 = load i32, i32* %R8D.i882
  %3734 = zext i32 %3733 to i64
  %3735 = load i64, i64* %PC.i881
  %3736 = add i64 %3735, 3
  store i64 %3736, i64* %PC.i881
  %3737 = shl i64 %3734, 32
  %3738 = ashr exact i64 %3737, 32
  store i64 %3738, i64* %RDX.i883, align 8
  store %struct.Memory* %loadMem_40ab60, %struct.Memory** %MEMORY
  %loadMem_40ab63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3740 = getelementptr inbounds %struct.GPR, %struct.GPR* %3739, i32 0, i32 33
  %3741 = getelementptr inbounds %struct.Reg, %struct.Reg* %3740, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %3741 to i64*
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3743 = getelementptr inbounds %struct.GPR, %struct.GPR* %3742, i32 0, i32 5
  %3744 = getelementptr inbounds %struct.Reg, %struct.Reg* %3743, i32 0, i32 0
  %ECX.i878 = bitcast %union.anon* %3744 to i32*
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 7
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %RDX.i879 = bitcast %union.anon* %3747 to i64*
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 9
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %RSI.i880 = bitcast %union.anon* %3750 to i64*
  %3751 = load i64, i64* %RSI.i880
  %3752 = load i64, i64* %RDX.i879
  %3753 = mul i64 %3752, 4
  %3754 = add i64 %3751, 100
  %3755 = add i64 %3754, %3753
  %3756 = load i32, i32* %ECX.i878
  %3757 = zext i32 %3756 to i64
  %3758 = load i64, i64* %PC.i877
  %3759 = add i64 %3758, 4
  store i64 %3759, i64* %PC.i877
  %3760 = inttoptr i64 %3755 to i32*
  store i32 %3756, i32* %3760
  store %struct.Memory* %loadMem_40ab63, %struct.Memory** %MEMORY
  %loadMem_40ab67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 33
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3763 to i64*
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 5
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %RCX.i876 = bitcast %union.anon* %3766 to i64*
  %3767 = load i64, i64* %PC.i875
  %3768 = add i64 %3767, 7
  store i64 %3768, i64* %PC.i875
  %3769 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %3770 = zext i32 %3769 to i64
  store i64 %3770, i64* %RCX.i876, align 8
  store %struct.Memory* %loadMem_40ab67, %struct.Memory** %MEMORY
  %loadMem_40ab6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 33
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %3773 to i64*
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 17
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %R8D.i873 = bitcast %union.anon* %3776 to i32*
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 15
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %3779 to i64*
  %3780 = bitcast i32* %R8D.i873 to i64*
  %3781 = load i64, i64* %RBP.i874
  %3782 = sub i64 %3781, 4
  %3783 = load i64, i64* %PC.i872
  %3784 = add i64 %3783, 4
  store i64 %3784, i64* %PC.i872
  %3785 = inttoptr i64 %3782 to i32*
  %3786 = load i32, i32* %3785
  %3787 = zext i32 %3786 to i64
  store i64 %3787, i64* %3780, align 8
  store %struct.Memory* %loadMem_40ab6e, %struct.Memory** %MEMORY
  %loadMem_40ab72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 33
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 17
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %R8D.i871 = bitcast %union.anon* %3793 to i32*
  %3794 = bitcast i32* %R8D.i871 to i64*
  %3795 = load i32, i32* %R8D.i871
  %3796 = zext i32 %3795 to i64
  %3797 = load i64, i64* %PC.i870
  %3798 = add i64 %3797, 4
  store i64 %3798, i64* %PC.i870
  %3799 = add i32 20, %3795
  %3800 = zext i32 %3799 to i64
  store i64 %3800, i64* %3794, align 8
  %3801 = icmp ult i32 %3799, %3795
  %3802 = icmp ult i32 %3799, 20
  %3803 = or i1 %3801, %3802
  %3804 = zext i1 %3803 to i8
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3804, i8* %3805, align 1
  %3806 = and i32 %3799, 255
  %3807 = call i32 @llvm.ctpop.i32(i32 %3806)
  %3808 = trunc i32 %3807 to i8
  %3809 = and i8 %3808, 1
  %3810 = xor i8 %3809, 1
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3810, i8* %3811, align 1
  %3812 = xor i64 20, %3796
  %3813 = trunc i64 %3812 to i32
  %3814 = xor i32 %3813, %3799
  %3815 = lshr i32 %3814, 4
  %3816 = trunc i32 %3815 to i8
  %3817 = and i8 %3816, 1
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3817, i8* %3818, align 1
  %3819 = icmp eq i32 %3799, 0
  %3820 = zext i1 %3819 to i8
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3820, i8* %3821, align 1
  %3822 = lshr i32 %3799, 31
  %3823 = trunc i32 %3822 to i8
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3823, i8* %3824, align 1
  %3825 = lshr i32 %3795, 31
  %3826 = xor i32 %3822, %3825
  %3827 = add i32 %3826, %3822
  %3828 = icmp eq i32 %3827, 2
  %3829 = zext i1 %3828 to i8
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3829, i8* %3830, align 1
  store %struct.Memory* %loadMem_40ab72, %struct.Memory** %MEMORY
  %loadMem_40ab76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 33
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %3833 to i64*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 17
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %R8D.i868 = bitcast %union.anon* %3836 to i32*
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 7
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %RDX.i869 = bitcast %union.anon* %3839 to i64*
  %3840 = load i32, i32* %R8D.i868
  %3841 = zext i32 %3840 to i64
  %3842 = load i64, i64* %PC.i867
  %3843 = add i64 %3842, 3
  store i64 %3843, i64* %PC.i867
  %3844 = shl i64 %3841, 32
  %3845 = ashr exact i64 %3844, 32
  store i64 %3845, i64* %RDX.i869, align 8
  store %struct.Memory* %loadMem_40ab76, %struct.Memory** %MEMORY
  %loadMem_40ab79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3847 = getelementptr inbounds %struct.GPR, %struct.GPR* %3846, i32 0, i32 33
  %3848 = getelementptr inbounds %struct.Reg, %struct.Reg* %3847, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3848 to i64*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 7
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %RDX.i866 = bitcast %union.anon* %3851 to i64*
  %3852 = load i64, i64* %RDX.i866
  %3853 = mul i64 %3852, 4
  %3854 = add i64 %3853, 11187184
  %3855 = load i64, i64* %PC.i865
  %3856 = add i64 %3855, 8
  store i64 %3856, i64* %PC.i865
  %3857 = inttoptr i64 %3854 to i32*
  %3858 = load i32, i32* %3857
  %3859 = sext i32 %3858 to i64
  store i64 %3859, i64* %RDX.i866, align 8
  store %struct.Memory* %loadMem_40ab79, %struct.Memory** %MEMORY
  %loadMem_40ab81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3861 = getelementptr inbounds %struct.GPR, %struct.GPR* %3860, i32 0, i32 33
  %3862 = getelementptr inbounds %struct.Reg, %struct.Reg* %3861, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %3862 to i64*
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3864 = getelementptr inbounds %struct.GPR, %struct.GPR* %3863, i32 0, i32 7
  %3865 = getelementptr inbounds %struct.Reg, %struct.Reg* %3864, i32 0, i32 0
  %RDX.i864 = bitcast %union.anon* %3865 to i64*
  %3866 = load i64, i64* %RDX.i864
  %3867 = load i64, i64* %PC.i863
  %3868 = add i64 %3867, 7
  store i64 %3868, i64* %PC.i863
  %3869 = sext i64 %3866 to i128
  %3870 = and i128 %3869, -18446744073709551616
  %3871 = zext i64 %3866 to i128
  %3872 = or i128 %3870, %3871
  %3873 = mul i128 744, %3872
  %3874 = trunc i128 %3873 to i64
  store i64 %3874, i64* %RDX.i864, align 8
  %3875 = sext i64 %3874 to i128
  %3876 = icmp ne i128 %3875, %3873
  %3877 = zext i1 %3876 to i8
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3877, i8* %3878, align 1
  %3879 = trunc i128 %3873 to i32
  %3880 = and i32 %3879, 255
  %3881 = call i32 @llvm.ctpop.i32(i32 %3880)
  %3882 = trunc i32 %3881 to i8
  %3883 = and i8 %3882, 1
  %3884 = xor i8 %3883, 1
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3884, i8* %3885, align 1
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3886, align 1
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3887, align 1
  %3888 = lshr i64 %3874, 63
  %3889 = trunc i64 %3888 to i8
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3889, i8* %3890, align 1
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3877, i8* %3891, align 1
  store %struct.Memory* %loadMem_40ab81, %struct.Memory** %MEMORY
  %loadMem_40ab88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 33
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %3894 to i64*
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3896 = getelementptr inbounds %struct.GPR, %struct.GPR* %3895, i32 0, i32 1
  %3897 = getelementptr inbounds %struct.Reg, %struct.Reg* %3896, i32 0, i32 0
  %RAX.i861 = bitcast %union.anon* %3897 to i64*
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 7
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %3900 to i64*
  %3901 = load i64, i64* %RAX.i861
  %3902 = load i64, i64* %RDX.i862
  %3903 = load i64, i64* %PC.i860
  %3904 = add i64 %3903, 3
  store i64 %3904, i64* %PC.i860
  %3905 = add i64 %3902, %3901
  store i64 %3905, i64* %RAX.i861, align 8
  %3906 = icmp ult i64 %3905, %3901
  %3907 = icmp ult i64 %3905, %3902
  %3908 = or i1 %3906, %3907
  %3909 = zext i1 %3908 to i8
  %3910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3909, i8* %3910, align 1
  %3911 = trunc i64 %3905 to i32
  %3912 = and i32 %3911, 255
  %3913 = call i32 @llvm.ctpop.i32(i32 %3912)
  %3914 = trunc i32 %3913 to i8
  %3915 = and i8 %3914, 1
  %3916 = xor i8 %3915, 1
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3916, i8* %3917, align 1
  %3918 = xor i64 %3902, %3901
  %3919 = xor i64 %3918, %3905
  %3920 = lshr i64 %3919, 4
  %3921 = trunc i64 %3920 to i8
  %3922 = and i8 %3921, 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3922, i8* %3923, align 1
  %3924 = icmp eq i64 %3905, 0
  %3925 = zext i1 %3924 to i8
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3925, i8* %3926, align 1
  %3927 = lshr i64 %3905, 63
  %3928 = trunc i64 %3927 to i8
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3928, i8* %3929, align 1
  %3930 = lshr i64 %3901, 63
  %3931 = lshr i64 %3902, 63
  %3932 = xor i64 %3927, %3930
  %3933 = xor i64 %3927, %3931
  %3934 = add i64 %3932, %3933
  %3935 = icmp eq i64 %3934, 2
  %3936 = zext i1 %3935 to i8
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3936, i8* %3937, align 1
  store %struct.Memory* %loadMem_40ab88, %struct.Memory** %MEMORY
  %loadMem_40ab8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3939 = getelementptr inbounds %struct.GPR, %struct.GPR* %3938, i32 0, i32 33
  %3940 = getelementptr inbounds %struct.Reg, %struct.Reg* %3939, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %3940 to i64*
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 5
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %ECX.i858 = bitcast %union.anon* %3943 to i32*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 1
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %3946 to i64*
  %3947 = load i64, i64* %RAX.i859
  %3948 = add i64 %3947, 740
  %3949 = load i32, i32* %ECX.i858
  %3950 = zext i32 %3949 to i64
  %3951 = load i64, i64* %PC.i857
  %3952 = add i64 %3951, 6
  store i64 %3952, i64* %PC.i857
  %3953 = inttoptr i64 %3948 to i32*
  store i32 %3949, i32* %3953
  store %struct.Memory* %loadMem_40ab8b, %struct.Memory** %MEMORY
  br label %block_.L_40ab91

block_.L_40ab91:                                  ; preds = %block_40aa71, %block_40aa39, %block_.L_40aa1f
  %loadMem_40ab91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3955 = getelementptr inbounds %struct.GPR, %struct.GPR* %3954, i32 0, i32 33
  %3956 = getelementptr inbounds %struct.Reg, %struct.Reg* %3955, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %3956 to i64*
  %3957 = load i64, i64* %PC.i856
  %3958 = add i64 %3957, 5
  %3959 = load i64, i64* %PC.i856
  %3960 = add i64 %3959, 5
  store i64 %3960, i64* %PC.i856
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3958, i64* %3961, align 8
  store %struct.Memory* %loadMem_40ab91, %struct.Memory** %MEMORY
  br label %block_.L_40ab96

block_.L_40ab96:                                  ; preds = %block_.L_40ab91, %block_.L_40a9f9
  %loadMem_40ab96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 33
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 1
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %3967 to i64*
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 15
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %3970 to i64*
  %3971 = load i64, i64* %RBP.i855
  %3972 = sub i64 %3971, 4
  %3973 = load i64, i64* %PC.i853
  %3974 = add i64 %3973, 3
  store i64 %3974, i64* %PC.i853
  %3975 = inttoptr i64 %3972 to i32*
  %3976 = load i32, i32* %3975
  %3977 = zext i32 %3976 to i64
  store i64 %3977, i64* %RAX.i854, align 8
  store %struct.Memory* %loadMem_40ab96, %struct.Memory** %MEMORY
  %loadMem_40ab99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 33
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %3980 to i64*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 1
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %3983 to i64*
  %3984 = load i64, i64* %RAX.i852
  %3985 = load i64, i64* %PC.i851
  %3986 = add i64 %3985, 3
  store i64 %3986, i64* %PC.i851
  %3987 = trunc i64 %3984 to i32
  %3988 = sub i32 %3987, 1
  %3989 = zext i32 %3988 to i64
  store i64 %3989, i64* %RAX.i852, align 8
  %3990 = icmp ult i32 %3987, 1
  %3991 = zext i1 %3990 to i8
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3991, i8* %3992, align 1
  %3993 = and i32 %3988, 255
  %3994 = call i32 @llvm.ctpop.i32(i32 %3993)
  %3995 = trunc i32 %3994 to i8
  %3996 = and i8 %3995, 1
  %3997 = xor i8 %3996, 1
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3997, i8* %3998, align 1
  %3999 = xor i64 1, %3984
  %4000 = trunc i64 %3999 to i32
  %4001 = xor i32 %4000, %3988
  %4002 = lshr i32 %4001, 4
  %4003 = trunc i32 %4002 to i8
  %4004 = and i8 %4003, 1
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4004, i8* %4005, align 1
  %4006 = icmp eq i32 %3988, 0
  %4007 = zext i1 %4006 to i8
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4007, i8* %4008, align 1
  %4009 = lshr i32 %3988, 31
  %4010 = trunc i32 %4009 to i8
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4010, i8* %4011, align 1
  %4012 = lshr i32 %3987, 31
  %4013 = xor i32 %4009, %4012
  %4014 = add i32 %4013, %4012
  %4015 = icmp eq i32 %4014, 2
  %4016 = zext i1 %4015 to i8
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4016, i8* %4017, align 1
  store %struct.Memory* %loadMem_40ab99, %struct.Memory** %MEMORY
  %loadMem_40ab9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 33
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %4020 to i64*
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 1
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %EAX.i849 = bitcast %union.anon* %4023 to i32*
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4025 = getelementptr inbounds %struct.GPR, %struct.GPR* %4024, i32 0, i32 5
  %4026 = getelementptr inbounds %struct.Reg, %struct.Reg* %4025, i32 0, i32 0
  %RCX.i850 = bitcast %union.anon* %4026 to i64*
  %4027 = load i32, i32* %EAX.i849
  %4028 = zext i32 %4027 to i64
  %4029 = load i64, i64* %PC.i848
  %4030 = add i64 %4029, 3
  store i64 %4030, i64* %PC.i848
  %4031 = shl i64 %4028, 32
  %4032 = ashr exact i64 %4031, 32
  store i64 %4032, i64* %RCX.i850, align 8
  store %struct.Memory* %loadMem_40ab9c, %struct.Memory** %MEMORY
  %loadMem_40ab9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 33
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %4035 to i64*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 1
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %4038 to i64*
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4040 = getelementptr inbounds %struct.GPR, %struct.GPR* %4039, i32 0, i32 5
  %4041 = getelementptr inbounds %struct.Reg, %struct.Reg* %4040, i32 0, i32 0
  %RCX.i847 = bitcast %union.anon* %4041 to i64*
  %4042 = load i64, i64* %RCX.i847
  %4043 = add i64 %4042, 12099168
  %4044 = load i64, i64* %PC.i845
  %4045 = add i64 %4044, 8
  store i64 %4045, i64* %PC.i845
  %4046 = inttoptr i64 %4043 to i8*
  %4047 = load i8, i8* %4046
  %4048 = zext i8 %4047 to i64
  store i64 %4048, i64* %RAX.i846, align 8
  store %struct.Memory* %loadMem_40ab9f, %struct.Memory** %MEMORY
  %loadMem_40aba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 33
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %4051 to i64*
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4053 = getelementptr inbounds %struct.GPR, %struct.GPR* %4052, i32 0, i32 1
  %4054 = getelementptr inbounds %struct.Reg, %struct.Reg* %4053, i32 0, i32 0
  %EAX.i844 = bitcast %union.anon* %4054 to i32*
  %4055 = load i32, i32* %EAX.i844
  %4056 = zext i32 %4055 to i64
  %4057 = load i64, i64* %PC.i843
  %4058 = add i64 %4057, 3
  store i64 %4058, i64* %PC.i843
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4059, align 1
  %4060 = and i32 %4055, 255
  %4061 = call i32 @llvm.ctpop.i32(i32 %4060)
  %4062 = trunc i32 %4061 to i8
  %4063 = and i8 %4062, 1
  %4064 = xor i8 %4063, 1
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4064, i8* %4065, align 1
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4066, align 1
  %4067 = icmp eq i32 %4055, 0
  %4068 = zext i1 %4067 to i8
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4068, i8* %4069, align 1
  %4070 = lshr i32 %4055, 31
  %4071 = trunc i32 %4070 to i8
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4071, i8* %4072, align 1
  %4073 = lshr i32 %4055, 31
  %4074 = xor i32 %4070, %4073
  %4075 = add i32 %4074, %4073
  %4076 = icmp eq i32 %4075, 2
  %4077 = zext i1 %4076 to i8
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4077, i8* %4078, align 1
  store %struct.Memory* %loadMem_40aba7, %struct.Memory** %MEMORY
  %loadMem_40abaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4080 = getelementptr inbounds %struct.GPR, %struct.GPR* %4079, i32 0, i32 33
  %4081 = getelementptr inbounds %struct.Reg, %struct.Reg* %4080, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %4081 to i64*
  %4082 = load i64, i64* %PC.i842
  %4083 = add i64 %4082, 138
  %4084 = load i64, i64* %PC.i842
  %4085 = add i64 %4084, 6
  %4086 = load i64, i64* %PC.i842
  %4087 = add i64 %4086, 6
  store i64 %4087, i64* %PC.i842
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4089 = load i8, i8* %4088, align 1
  %4090 = icmp eq i8 %4089, 0
  %4091 = zext i1 %4090 to i8
  store i8 %4091, i8* %BRANCH_TAKEN, align 1
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4093 = select i1 %4090, i64 %4083, i64 %4085
  store i64 %4093, i64* %4092, align 8
  store %struct.Memory* %loadMem_40abaa, %struct.Memory** %MEMORY
  %loadBr_40abaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40abaa = icmp eq i8 %loadBr_40abaa, 1
  br i1 %cmpBr_40abaa, label %block_.L_40ac34, label %block_40abb0

block_40abb0:                                     ; preds = %block_.L_40ab96
  %loadMem_40abb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 33
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %4096 to i64*
  %4097 = load i64, i64* %PC.i841
  %4098 = add i64 %4097, 5
  %4099 = load i64, i64* %PC.i841
  %4100 = add i64 %4099, 5
  store i64 %4100, i64* %PC.i841
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4098, i64* %4101, align 8
  store %struct.Memory* %loadMem_40abb0, %struct.Memory** %MEMORY
  br label %block_.L_40abb5

block_.L_40abb5:                                  ; preds = %block_40abb0
  %loadMem_40abb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4103 = getelementptr inbounds %struct.GPR, %struct.GPR* %4102, i32 0, i32 33
  %4104 = getelementptr inbounds %struct.Reg, %struct.Reg* %4103, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %4104 to i64*
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 1
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %RAX.i840 = bitcast %union.anon* %4107 to i64*
  %4108 = load i64, i64* %PC.i839
  %4109 = add i64 %4108, 10
  store i64 %4109, i64* %PC.i839
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i840, align 8
  store %struct.Memory* %loadMem_40abb5, %struct.Memory** %MEMORY
  %loadMem_40abbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 33
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %4112 to i64*
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 5
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %4115 to i64*
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 15
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %RBP.i838 = bitcast %union.anon* %4118 to i64*
  %4119 = load i64, i64* %RBP.i838
  %4120 = sub i64 %4119, 8
  %4121 = load i64, i64* %PC.i836
  %4122 = add i64 %4121, 4
  store i64 %4122, i64* %PC.i836
  %4123 = inttoptr i64 %4120 to i32*
  %4124 = load i32, i32* %4123
  %4125 = sext i32 %4124 to i64
  store i64 %4125, i64* %RCX.i837, align 8
  store %struct.Memory* %loadMem_40abbf, %struct.Memory** %MEMORY
  %loadMem_40abc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 33
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %4128 to i64*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 5
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RCX.i835 = bitcast %union.anon* %4131 to i64*
  %4132 = load i64, i64* %RCX.i835
  %4133 = load i64, i64* %PC.i834
  %4134 = add i64 %4133, 7
  store i64 %4134, i64* %PC.i834
  %4135 = sext i64 %4132 to i128
  %4136 = and i128 %4135, -18446744073709551616
  %4137 = zext i64 %4132 to i128
  %4138 = or i128 %4136, %4137
  %4139 = mul i128 744, %4138
  %4140 = trunc i128 %4139 to i64
  store i64 %4140, i64* %RCX.i835, align 8
  %4141 = sext i64 %4140 to i128
  %4142 = icmp ne i128 %4141, %4139
  %4143 = zext i1 %4142 to i8
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4143, i8* %4144, align 1
  %4145 = trunc i128 %4139 to i32
  %4146 = and i32 %4145, 255
  %4147 = call i32 @llvm.ctpop.i32(i32 %4146)
  %4148 = trunc i32 %4147 to i8
  %4149 = and i8 %4148, 1
  %4150 = xor i8 %4149, 1
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4150, i8* %4151, align 1
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4152, align 1
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4153, align 1
  %4154 = lshr i64 %4140, 63
  %4155 = trunc i64 %4154 to i8
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4155, i8* %4156, align 1
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4143, i8* %4157, align 1
  store %struct.Memory* %loadMem_40abc3, %struct.Memory** %MEMORY
  %loadMem_40abca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4159 = getelementptr inbounds %struct.GPR, %struct.GPR* %4158, i32 0, i32 33
  %4160 = getelementptr inbounds %struct.Reg, %struct.Reg* %4159, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %4160 to i64*
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 1
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %4163 to i64*
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 5
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %RCX.i833 = bitcast %union.anon* %4166 to i64*
  %4167 = load i64, i64* %RAX.i832
  %4168 = load i64, i64* %RCX.i833
  %4169 = load i64, i64* %PC.i831
  %4170 = add i64 %4169, 3
  store i64 %4170, i64* %PC.i831
  %4171 = add i64 %4168, %4167
  store i64 %4171, i64* %RAX.i832, align 8
  %4172 = icmp ult i64 %4171, %4167
  %4173 = icmp ult i64 %4171, %4168
  %4174 = or i1 %4172, %4173
  %4175 = zext i1 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4175, i8* %4176, align 1
  %4177 = trunc i64 %4171 to i32
  %4178 = and i32 %4177, 255
  %4179 = call i32 @llvm.ctpop.i32(i32 %4178)
  %4180 = trunc i32 %4179 to i8
  %4181 = and i8 %4180, 1
  %4182 = xor i8 %4181, 1
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4182, i8* %4183, align 1
  %4184 = xor i64 %4168, %4167
  %4185 = xor i64 %4184, %4171
  %4186 = lshr i64 %4185, 4
  %4187 = trunc i64 %4186 to i8
  %4188 = and i8 %4187, 1
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4188, i8* %4189, align 1
  %4190 = icmp eq i64 %4171, 0
  %4191 = zext i1 %4190 to i8
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4191, i8* %4192, align 1
  %4193 = lshr i64 %4171, 63
  %4194 = trunc i64 %4193 to i8
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4194, i8* %4195, align 1
  %4196 = lshr i64 %4167, 63
  %4197 = lshr i64 %4168, 63
  %4198 = xor i64 %4193, %4196
  %4199 = xor i64 %4193, %4197
  %4200 = add i64 %4198, %4199
  %4201 = icmp eq i64 %4200, 2
  %4202 = zext i1 %4201 to i8
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4202, i8* %4203, align 1
  store %struct.Memory* %loadMem_40abca, %struct.Memory** %MEMORY
  %loadMem_40abcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4205 = getelementptr inbounds %struct.GPR, %struct.GPR* %4204, i32 0, i32 33
  %4206 = getelementptr inbounds %struct.Reg, %struct.Reg* %4205, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %4206 to i64*
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4208 = getelementptr inbounds %struct.GPR, %struct.GPR* %4207, i32 0, i32 1
  %4209 = getelementptr inbounds %struct.Reg, %struct.Reg* %4208, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %4209 to i64*
  %4210 = load i64, i64* %RAX.i830
  %4211 = add i64 %4210, 12
  %4212 = load i64, i64* %PC.i829
  %4213 = add i64 %4212, 4
  store i64 %4213, i64* %PC.i829
  %4214 = inttoptr i64 %4211 to i32*
  %4215 = load i32, i32* %4214
  %4216 = sub i32 %4215, 20
  %4217 = icmp ult i32 %4215, 20
  %4218 = zext i1 %4217 to i8
  %4219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4218, i8* %4219, align 1
  %4220 = and i32 %4216, 255
  %4221 = call i32 @llvm.ctpop.i32(i32 %4220)
  %4222 = trunc i32 %4221 to i8
  %4223 = and i8 %4222, 1
  %4224 = xor i8 %4223, 1
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4224, i8* %4225, align 1
  %4226 = xor i32 %4215, 20
  %4227 = xor i32 %4226, %4216
  %4228 = lshr i32 %4227, 4
  %4229 = trunc i32 %4228 to i8
  %4230 = and i8 %4229, 1
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4230, i8* %4231, align 1
  %4232 = icmp eq i32 %4216, 0
  %4233 = zext i1 %4232 to i8
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4233, i8* %4234, align 1
  %4235 = lshr i32 %4216, 31
  %4236 = trunc i32 %4235 to i8
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4236, i8* %4237, align 1
  %4238 = lshr i32 %4215, 31
  %4239 = xor i32 %4235, %4238
  %4240 = add i32 %4239, %4238
  %4241 = icmp eq i32 %4240, 2
  %4242 = zext i1 %4241 to i8
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4242, i8* %4243, align 1
  store %struct.Memory* %loadMem_40abcd, %struct.Memory** %MEMORY
  %loadMem_40abd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 33
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %4246 to i64*
  %4247 = load i64, i64* %PC.i828
  %4248 = add i64 %4247, 61
  %4249 = load i64, i64* %PC.i828
  %4250 = add i64 %4249, 6
  %4251 = load i64, i64* %PC.i828
  %4252 = add i64 %4251, 6
  store i64 %4252, i64* %PC.i828
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4254 = load i8, i8* %4253, align 1
  %4255 = icmp ne i8 %4254, 0
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4257 = load i8, i8* %4256, align 1
  %4258 = icmp ne i8 %4257, 0
  %4259 = xor i1 %4255, %4258
  %4260 = xor i1 %4259, true
  %4261 = zext i1 %4260 to i8
  store i8 %4261, i8* %BRANCH_TAKEN, align 1
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4263 = select i1 %4259, i64 %4250, i64 %4248
  store i64 %4263, i64* %4262, align 8
  store %struct.Memory* %loadMem_40abd1, %struct.Memory** %MEMORY
  %loadBr_40abd1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40abd1 = icmp eq i8 %loadBr_40abd1, 1
  br i1 %cmpBr_40abd1, label %block_.L_40ac0e, label %block_40abd7

block_40abd7:                                     ; preds = %block_.L_40abb5
  %loadMem_40abd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 33
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %4266 to i64*
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 1
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %4269 to i64*
  %4270 = load i64, i64* %PC.i826
  %4271 = add i64 %4270, 10
  store i64 %4271, i64* %PC.i826
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_40abd7, %struct.Memory** %MEMORY
  %loadMem_40abe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 33
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %4274 to i64*
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 5
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %RCX.i824 = bitcast %union.anon* %4277 to i64*
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 15
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %4280 to i64*
  %4281 = load i64, i64* %RBP.i825
  %4282 = sub i64 %4281, 4
  %4283 = load i64, i64* %PC.i823
  %4284 = add i64 %4283, 3
  store i64 %4284, i64* %PC.i823
  %4285 = inttoptr i64 %4282 to i32*
  %4286 = load i32, i32* %4285
  %4287 = zext i32 %4286 to i64
  store i64 %4287, i64* %RCX.i824, align 8
  store %struct.Memory* %loadMem_40abe1, %struct.Memory** %MEMORY
  %loadMem_40abe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4289 = getelementptr inbounds %struct.GPR, %struct.GPR* %4288, i32 0, i32 33
  %4290 = getelementptr inbounds %struct.Reg, %struct.Reg* %4289, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %4290 to i64*
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 5
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %RCX.i822 = bitcast %union.anon* %4293 to i64*
  %4294 = load i64, i64* %RCX.i822
  %4295 = load i64, i64* %PC.i821
  %4296 = add i64 %4295, 3
  store i64 %4296, i64* %PC.i821
  %4297 = trunc i64 %4294 to i32
  %4298 = sub i32 %4297, 1
  %4299 = zext i32 %4298 to i64
  store i64 %4299, i64* %RCX.i822, align 8
  %4300 = icmp ult i32 %4297, 1
  %4301 = zext i1 %4300 to i8
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4301, i8* %4302, align 1
  %4303 = and i32 %4298, 255
  %4304 = call i32 @llvm.ctpop.i32(i32 %4303)
  %4305 = trunc i32 %4304 to i8
  %4306 = and i8 %4305, 1
  %4307 = xor i8 %4306, 1
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4307, i8* %4308, align 1
  %4309 = xor i64 1, %4294
  %4310 = trunc i64 %4309 to i32
  %4311 = xor i32 %4310, %4298
  %4312 = lshr i32 %4311, 4
  %4313 = trunc i32 %4312 to i8
  %4314 = and i8 %4313, 1
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4314, i8* %4315, align 1
  %4316 = icmp eq i32 %4298, 0
  %4317 = zext i1 %4316 to i8
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4317, i8* %4318, align 1
  %4319 = lshr i32 %4298, 31
  %4320 = trunc i32 %4319 to i8
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4320, i8* %4321, align 1
  %4322 = lshr i32 %4297, 31
  %4323 = xor i32 %4319, %4322
  %4324 = add i32 %4323, %4322
  %4325 = icmp eq i32 %4324, 2
  %4326 = zext i1 %4325 to i8
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4326, i8* %4327, align 1
  store %struct.Memory* %loadMem_40abe4, %struct.Memory** %MEMORY
  %loadMem_40abe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 33
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 7
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RDX.i819 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 15
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %4336 to i64*
  %4337 = load i64, i64* %RBP.i820
  %4338 = sub i64 %4337, 8
  %4339 = load i64, i64* %PC.i818
  %4340 = add i64 %4339, 4
  store i64 %4340, i64* %PC.i818
  %4341 = inttoptr i64 %4338 to i32*
  %4342 = load i32, i32* %4341
  %4343 = sext i32 %4342 to i64
  store i64 %4343, i64* %RDX.i819, align 8
  store %struct.Memory* %loadMem_40abe7, %struct.Memory** %MEMORY
  %loadMem_40abeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 33
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %4346 to i64*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 7
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %RDX.i817 = bitcast %union.anon* %4349 to i64*
  %4350 = load i64, i64* %RDX.i817
  %4351 = load i64, i64* %PC.i816
  %4352 = add i64 %4351, 7
  store i64 %4352, i64* %PC.i816
  %4353 = sext i64 %4350 to i128
  %4354 = and i128 %4353, -18446744073709551616
  %4355 = zext i64 %4350 to i128
  %4356 = or i128 %4354, %4355
  %4357 = mul i128 744, %4356
  %4358 = trunc i128 %4357 to i64
  store i64 %4358, i64* %RDX.i817, align 8
  %4359 = sext i64 %4358 to i128
  %4360 = icmp ne i128 %4359, %4357
  %4361 = zext i1 %4360 to i8
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4361, i8* %4362, align 1
  %4363 = trunc i128 %4357 to i32
  %4364 = and i32 %4363, 255
  %4365 = call i32 @llvm.ctpop.i32(i32 %4364)
  %4366 = trunc i32 %4365 to i8
  %4367 = and i8 %4366, 1
  %4368 = xor i8 %4367, 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4368, i8* %4369, align 1
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4370, align 1
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4371, align 1
  %4372 = lshr i64 %4358, 63
  %4373 = trunc i64 %4372 to i8
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4373, i8* %4374, align 1
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4361, i8* %4375, align 1
  store %struct.Memory* %loadMem_40abeb, %struct.Memory** %MEMORY
  %loadMem_40abf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 33
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %4378 to i64*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 1
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %4381 to i64*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 9
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %RSI.i815 = bitcast %union.anon* %4384 to i64*
  %4385 = load i64, i64* %RAX.i814
  %4386 = load i64, i64* %PC.i813
  %4387 = add i64 %4386, 3
  store i64 %4387, i64* %PC.i813
  store i64 %4385, i64* %RSI.i815, align 8
  store %struct.Memory* %loadMem_40abf2, %struct.Memory** %MEMORY
  %loadMem_40abf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4389 = getelementptr inbounds %struct.GPR, %struct.GPR* %4388, i32 0, i32 33
  %4390 = getelementptr inbounds %struct.Reg, %struct.Reg* %4389, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %4390 to i64*
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4392 = getelementptr inbounds %struct.GPR, %struct.GPR* %4391, i32 0, i32 7
  %4393 = getelementptr inbounds %struct.Reg, %struct.Reg* %4392, i32 0, i32 0
  %RDX.i811 = bitcast %union.anon* %4393 to i64*
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 9
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %RSI.i812 = bitcast %union.anon* %4396 to i64*
  %4397 = load i64, i64* %RSI.i812
  %4398 = load i64, i64* %RDX.i811
  %4399 = load i64, i64* %PC.i810
  %4400 = add i64 %4399, 3
  store i64 %4400, i64* %PC.i810
  %4401 = add i64 %4398, %4397
  store i64 %4401, i64* %RSI.i812, align 8
  %4402 = icmp ult i64 %4401, %4397
  %4403 = icmp ult i64 %4401, %4398
  %4404 = or i1 %4402, %4403
  %4405 = zext i1 %4404 to i8
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4405, i8* %4406, align 1
  %4407 = trunc i64 %4401 to i32
  %4408 = and i32 %4407, 255
  %4409 = call i32 @llvm.ctpop.i32(i32 %4408)
  %4410 = trunc i32 %4409 to i8
  %4411 = and i8 %4410, 1
  %4412 = xor i8 %4411, 1
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4412, i8* %4413, align 1
  %4414 = xor i64 %4398, %4397
  %4415 = xor i64 %4414, %4401
  %4416 = lshr i64 %4415, 4
  %4417 = trunc i64 %4416 to i8
  %4418 = and i8 %4417, 1
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4418, i8* %4419, align 1
  %4420 = icmp eq i64 %4401, 0
  %4421 = zext i1 %4420 to i8
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4421, i8* %4422, align 1
  %4423 = lshr i64 %4401, 63
  %4424 = trunc i64 %4423 to i8
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4424, i8* %4425, align 1
  %4426 = lshr i64 %4397, 63
  %4427 = lshr i64 %4398, 63
  %4428 = xor i64 %4423, %4426
  %4429 = xor i64 %4423, %4427
  %4430 = add i64 %4428, %4429
  %4431 = icmp eq i64 %4430, 2
  %4432 = zext i1 %4431 to i8
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4432, i8* %4433, align 1
  store %struct.Memory* %loadMem_40abf5, %struct.Memory** %MEMORY
  %loadMem_40abf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4435 = getelementptr inbounds %struct.GPR, %struct.GPR* %4434, i32 0, i32 33
  %4436 = getelementptr inbounds %struct.Reg, %struct.Reg* %4435, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %4436 to i64*
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 7
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %RDX.i808 = bitcast %union.anon* %4439 to i64*
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 15
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %4442 to i64*
  %4443 = load i64, i64* %RBP.i809
  %4444 = sub i64 %4443, 8
  %4445 = load i64, i64* %PC.i807
  %4446 = add i64 %4445, 4
  store i64 %4446, i64* %PC.i807
  %4447 = inttoptr i64 %4444 to i32*
  %4448 = load i32, i32* %4447
  %4449 = sext i32 %4448 to i64
  store i64 %4449, i64* %RDX.i808, align 8
  store %struct.Memory* %loadMem_40abf8, %struct.Memory** %MEMORY
  %loadMem_40abfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 33
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %4452 to i64*
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 7
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %RDX.i806 = bitcast %union.anon* %4455 to i64*
  %4456 = load i64, i64* %RDX.i806
  %4457 = load i64, i64* %PC.i805
  %4458 = add i64 %4457, 7
  store i64 %4458, i64* %PC.i805
  %4459 = sext i64 %4456 to i128
  %4460 = and i128 %4459, -18446744073709551616
  %4461 = zext i64 %4456 to i128
  %4462 = or i128 %4460, %4461
  %4463 = mul i128 744, %4462
  %4464 = trunc i128 %4463 to i64
  store i64 %4464, i64* %RDX.i806, align 8
  %4465 = sext i64 %4464 to i128
  %4466 = icmp ne i128 %4465, %4463
  %4467 = zext i1 %4466 to i8
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4467, i8* %4468, align 1
  %4469 = trunc i128 %4463 to i32
  %4470 = and i32 %4469, 255
  %4471 = call i32 @llvm.ctpop.i32(i32 %4470)
  %4472 = trunc i32 %4471 to i8
  %4473 = and i8 %4472, 1
  %4474 = xor i8 %4473, 1
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4474, i8* %4475, align 1
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4476, align 1
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4477, align 1
  %4478 = lshr i64 %4464, 63
  %4479 = trunc i64 %4478 to i8
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4479, i8* %4480, align 1
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4467, i8* %4481, align 1
  store %struct.Memory* %loadMem_40abfc, %struct.Memory** %MEMORY
  %loadMem_40ac03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 33
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %4484 to i64*
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 1
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 7
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %RDX.i804 = bitcast %union.anon* %4490 to i64*
  %4491 = load i64, i64* %RAX.i803
  %4492 = load i64, i64* %RDX.i804
  %4493 = load i64, i64* %PC.i802
  %4494 = add i64 %4493, 3
  store i64 %4494, i64* %PC.i802
  %4495 = add i64 %4492, %4491
  store i64 %4495, i64* %RAX.i803, align 8
  %4496 = icmp ult i64 %4495, %4491
  %4497 = icmp ult i64 %4495, %4492
  %4498 = or i1 %4496, %4497
  %4499 = zext i1 %4498 to i8
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4499, i8* %4500, align 1
  %4501 = trunc i64 %4495 to i32
  %4502 = and i32 %4501, 255
  %4503 = call i32 @llvm.ctpop.i32(i32 %4502)
  %4504 = trunc i32 %4503 to i8
  %4505 = and i8 %4504, 1
  %4506 = xor i8 %4505, 1
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4506, i8* %4507, align 1
  %4508 = xor i64 %4492, %4491
  %4509 = xor i64 %4508, %4495
  %4510 = lshr i64 %4509, 4
  %4511 = trunc i64 %4510 to i8
  %4512 = and i8 %4511, 1
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4512, i8* %4513, align 1
  %4514 = icmp eq i64 %4495, 0
  %4515 = zext i1 %4514 to i8
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4515, i8* %4516, align 1
  %4517 = lshr i64 %4495, 63
  %4518 = trunc i64 %4517 to i8
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4518, i8* %4519, align 1
  %4520 = lshr i64 %4491, 63
  %4521 = lshr i64 %4492, 63
  %4522 = xor i64 %4517, %4520
  %4523 = xor i64 %4517, %4521
  %4524 = add i64 %4522, %4523
  %4525 = icmp eq i64 %4524, 2
  %4526 = zext i1 %4525 to i8
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4526, i8* %4527, align 1
  store %struct.Memory* %loadMem_40ac03, %struct.Memory** %MEMORY
  %loadMem_40ac06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4529 = getelementptr inbounds %struct.GPR, %struct.GPR* %4528, i32 0, i32 33
  %4530 = getelementptr inbounds %struct.Reg, %struct.Reg* %4529, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %4530 to i64*
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 1
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %4533 to i64*
  %4534 = load i64, i64* %RAX.i801
  %4535 = add i64 %4534, 12
  %4536 = load i64, i64* %PC.i800
  %4537 = add i64 %4536, 4
  store i64 %4537, i64* %PC.i800
  %4538 = inttoptr i64 %4535 to i32*
  %4539 = load i32, i32* %4538
  %4540 = sext i32 %4539 to i64
  store i64 %4540, i64* %RAX.i801, align 8
  store %struct.Memory* %loadMem_40ac06, %struct.Memory** %MEMORY
  %loadMem_40ac0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 33
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %4543 to i64*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 5
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %ECX.i797 = bitcast %union.anon* %4546 to i32*
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 1
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 9
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RSI.i799 = bitcast %union.anon* %4552 to i64*
  %4553 = load i64, i64* %RSI.i799
  %4554 = load i64, i64* %RAX.i798
  %4555 = mul i64 %4554, 4
  %4556 = add i64 %4553, 16
  %4557 = add i64 %4556, %4555
  %4558 = load i32, i32* %ECX.i797
  %4559 = zext i32 %4558 to i64
  %4560 = load i64, i64* %PC.i796
  %4561 = add i64 %4560, 4
  store i64 %4561, i64* %PC.i796
  %4562 = inttoptr i64 %4557 to i32*
  store i32 %4558, i32* %4562
  store %struct.Memory* %loadMem_40ac0a, %struct.Memory** %MEMORY
  br label %block_.L_40ac0e

block_.L_40ac0e:                                  ; preds = %block_40abd7, %block_.L_40abb5
  %loadMem_40ac0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 33
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 1
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %4568 to i64*
  %4569 = load i64, i64* %PC.i794
  %4570 = add i64 %4569, 10
  store i64 %4570, i64* %PC.i794
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i795, align 8
  store %struct.Memory* %loadMem_40ac0e, %struct.Memory** %MEMORY
  %loadMem_40ac18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4572 = getelementptr inbounds %struct.GPR, %struct.GPR* %4571, i32 0, i32 33
  %4573 = getelementptr inbounds %struct.Reg, %struct.Reg* %4572, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %4573 to i64*
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 5
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %4576 to i64*
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 15
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %4579 to i64*
  %4580 = load i64, i64* %RBP.i793
  %4581 = sub i64 %4580, 8
  %4582 = load i64, i64* %PC.i791
  %4583 = add i64 %4582, 4
  store i64 %4583, i64* %PC.i791
  %4584 = inttoptr i64 %4581 to i32*
  %4585 = load i32, i32* %4584
  %4586 = sext i32 %4585 to i64
  store i64 %4586, i64* %RCX.i792, align 8
  store %struct.Memory* %loadMem_40ac18, %struct.Memory** %MEMORY
  %loadMem_40ac1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 33
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 5
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %4592 to i64*
  %4593 = load i64, i64* %RCX.i790
  %4594 = load i64, i64* %PC.i789
  %4595 = add i64 %4594, 7
  store i64 %4595, i64* %PC.i789
  %4596 = sext i64 %4593 to i128
  %4597 = and i128 %4596, -18446744073709551616
  %4598 = zext i64 %4593 to i128
  %4599 = or i128 %4597, %4598
  %4600 = mul i128 744, %4599
  %4601 = trunc i128 %4600 to i64
  store i64 %4601, i64* %RCX.i790, align 8
  %4602 = sext i64 %4601 to i128
  %4603 = icmp ne i128 %4602, %4600
  %4604 = zext i1 %4603 to i8
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4604, i8* %4605, align 1
  %4606 = trunc i128 %4600 to i32
  %4607 = and i32 %4606, 255
  %4608 = call i32 @llvm.ctpop.i32(i32 %4607)
  %4609 = trunc i32 %4608 to i8
  %4610 = and i8 %4609, 1
  %4611 = xor i8 %4610, 1
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4611, i8* %4612, align 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4613, align 1
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4614, align 1
  %4615 = lshr i64 %4601, 63
  %4616 = trunc i64 %4615 to i8
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4616, i8* %4617, align 1
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4604, i8* %4618, align 1
  store %struct.Memory* %loadMem_40ac1c, %struct.Memory** %MEMORY
  %loadMem_40ac23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 33
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %4621 to i64*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 1
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %4624 to i64*
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 5
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %4627 to i64*
  %4628 = load i64, i64* %RAX.i787
  %4629 = load i64, i64* %RCX.i788
  %4630 = load i64, i64* %PC.i786
  %4631 = add i64 %4630, 3
  store i64 %4631, i64* %PC.i786
  %4632 = add i64 %4629, %4628
  store i64 %4632, i64* %RAX.i787, align 8
  %4633 = icmp ult i64 %4632, %4628
  %4634 = icmp ult i64 %4632, %4629
  %4635 = or i1 %4633, %4634
  %4636 = zext i1 %4635 to i8
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4636, i8* %4637, align 1
  %4638 = trunc i64 %4632 to i32
  %4639 = and i32 %4638, 255
  %4640 = call i32 @llvm.ctpop.i32(i32 %4639)
  %4641 = trunc i32 %4640 to i8
  %4642 = and i8 %4641, 1
  %4643 = xor i8 %4642, 1
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4643, i8* %4644, align 1
  %4645 = xor i64 %4629, %4628
  %4646 = xor i64 %4645, %4632
  %4647 = lshr i64 %4646, 4
  %4648 = trunc i64 %4647 to i8
  %4649 = and i8 %4648, 1
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4649, i8* %4650, align 1
  %4651 = icmp eq i64 %4632, 0
  %4652 = zext i1 %4651 to i8
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4652, i8* %4653, align 1
  %4654 = lshr i64 %4632, 63
  %4655 = trunc i64 %4654 to i8
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4655, i8* %4656, align 1
  %4657 = lshr i64 %4628, 63
  %4658 = lshr i64 %4629, 63
  %4659 = xor i64 %4654, %4657
  %4660 = xor i64 %4654, %4658
  %4661 = add i64 %4659, %4660
  %4662 = icmp eq i64 %4661, 2
  %4663 = zext i1 %4662 to i8
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4663, i8* %4664, align 1
  store %struct.Memory* %loadMem_40ac23, %struct.Memory** %MEMORY
  %loadMem_40ac26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4666 = getelementptr inbounds %struct.GPR, %struct.GPR* %4665, i32 0, i32 33
  %4667 = getelementptr inbounds %struct.Reg, %struct.Reg* %4666, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %4667 to i64*
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4669 = getelementptr inbounds %struct.GPR, %struct.GPR* %4668, i32 0, i32 1
  %4670 = getelementptr inbounds %struct.Reg, %struct.Reg* %4669, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %4670 to i64*
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4672 = getelementptr inbounds %struct.GPR, %struct.GPR* %4671, i32 0, i32 7
  %4673 = getelementptr inbounds %struct.Reg, %struct.Reg* %4672, i32 0, i32 0
  %RDX.i785 = bitcast %union.anon* %4673 to i64*
  %4674 = load i64, i64* %RAX.i784
  %4675 = add i64 %4674, 12
  %4676 = load i64, i64* %PC.i783
  %4677 = add i64 %4676, 3
  store i64 %4677, i64* %PC.i783
  %4678 = inttoptr i64 %4675 to i32*
  %4679 = load i32, i32* %4678
  %4680 = zext i32 %4679 to i64
  store i64 %4680, i64* %RDX.i785, align 8
  store %struct.Memory* %loadMem_40ac26, %struct.Memory** %MEMORY
  %loadMem_40ac29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 33
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %4683 to i64*
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 7
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %RDX.i782 = bitcast %union.anon* %4686 to i64*
  %4687 = load i64, i64* %RDX.i782
  %4688 = load i64, i64* %PC.i781
  %4689 = add i64 %4688, 3
  store i64 %4689, i64* %PC.i781
  %4690 = trunc i64 %4687 to i32
  %4691 = add i32 1, %4690
  %4692 = zext i32 %4691 to i64
  store i64 %4692, i64* %RDX.i782, align 8
  %4693 = icmp ult i32 %4691, %4690
  %4694 = icmp ult i32 %4691, 1
  %4695 = or i1 %4693, %4694
  %4696 = zext i1 %4695 to i8
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4696, i8* %4697, align 1
  %4698 = and i32 %4691, 255
  %4699 = call i32 @llvm.ctpop.i32(i32 %4698)
  %4700 = trunc i32 %4699 to i8
  %4701 = and i8 %4700, 1
  %4702 = xor i8 %4701, 1
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4702, i8* %4703, align 1
  %4704 = xor i64 1, %4687
  %4705 = trunc i64 %4704 to i32
  %4706 = xor i32 %4705, %4691
  %4707 = lshr i32 %4706, 4
  %4708 = trunc i32 %4707 to i8
  %4709 = and i8 %4708, 1
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4709, i8* %4710, align 1
  %4711 = icmp eq i32 %4691, 0
  %4712 = zext i1 %4711 to i8
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4712, i8* %4713, align 1
  %4714 = lshr i32 %4691, 31
  %4715 = trunc i32 %4714 to i8
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4715, i8* %4716, align 1
  %4717 = lshr i32 %4690, 31
  %4718 = xor i32 %4714, %4717
  %4719 = add i32 %4718, %4714
  %4720 = icmp eq i32 %4719, 2
  %4721 = zext i1 %4720 to i8
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4721, i8* %4722, align 1
  store %struct.Memory* %loadMem_40ac29, %struct.Memory** %MEMORY
  %loadMem_40ac2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4724 = getelementptr inbounds %struct.GPR, %struct.GPR* %4723, i32 0, i32 33
  %4725 = getelementptr inbounds %struct.Reg, %struct.Reg* %4724, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %4725 to i64*
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4727 = getelementptr inbounds %struct.GPR, %struct.GPR* %4726, i32 0, i32 7
  %4728 = getelementptr inbounds %struct.Reg, %struct.Reg* %4727, i32 0, i32 0
  %EDX.i779 = bitcast %union.anon* %4728 to i32*
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 1
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %RAX.i780 = bitcast %union.anon* %4731 to i64*
  %4732 = load i64, i64* %RAX.i780
  %4733 = add i64 %4732, 12
  %4734 = load i32, i32* %EDX.i779
  %4735 = zext i32 %4734 to i64
  %4736 = load i64, i64* %PC.i778
  %4737 = add i64 %4736, 3
  store i64 %4737, i64* %PC.i778
  %4738 = inttoptr i64 %4733 to i32*
  store i32 %4734, i32* %4738
  store %struct.Memory* %loadMem_40ac2c, %struct.Memory** %MEMORY
  %loadMem_40ac2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4740 = getelementptr inbounds %struct.GPR, %struct.GPR* %4739, i32 0, i32 33
  %4741 = getelementptr inbounds %struct.Reg, %struct.Reg* %4740, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %4741 to i64*
  %4742 = load i64, i64* %PC.i777
  %4743 = add i64 %4742, 380
  %4744 = load i64, i64* %PC.i777
  %4745 = add i64 %4744, 5
  store i64 %4745, i64* %PC.i777
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4743, i64* %4746, align 8
  store %struct.Memory* %loadMem_40ac2f, %struct.Memory** %MEMORY
  br label %block_.L_40adab

block_.L_40ac34:                                  ; preds = %block_.L_40ab96
  %loadMem_40ac34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 33
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %4749 to i64*
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 1
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %4752 to i64*
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4754 = getelementptr inbounds %struct.GPR, %struct.GPR* %4753, i32 0, i32 15
  %4755 = getelementptr inbounds %struct.Reg, %struct.Reg* %4754, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %4755 to i64*
  %4756 = load i64, i64* %RBP.i776
  %4757 = sub i64 %4756, 4
  %4758 = load i64, i64* %PC.i774
  %4759 = add i64 %4758, 3
  store i64 %4759, i64* %PC.i774
  %4760 = inttoptr i64 %4757 to i32*
  %4761 = load i32, i32* %4760
  %4762 = zext i32 %4761 to i64
  store i64 %4762, i64* %RAX.i775, align 8
  store %struct.Memory* %loadMem_40ac34, %struct.Memory** %MEMORY
  %loadMem_40ac37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 33
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %4765 to i64*
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4767 = getelementptr inbounds %struct.GPR, %struct.GPR* %4766, i32 0, i32 1
  %4768 = getelementptr inbounds %struct.Reg, %struct.Reg* %4767, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %4768 to i64*
  %4769 = load i64, i64* %RAX.i773
  %4770 = load i64, i64* %PC.i772
  %4771 = add i64 %4770, 3
  store i64 %4771, i64* %PC.i772
  %4772 = trunc i64 %4769 to i32
  %4773 = sub i32 %4772, 1
  %4774 = zext i32 %4773 to i64
  store i64 %4774, i64* %RAX.i773, align 8
  %4775 = icmp ult i32 %4772, 1
  %4776 = zext i1 %4775 to i8
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4776, i8* %4777, align 1
  %4778 = and i32 %4773, 255
  %4779 = call i32 @llvm.ctpop.i32(i32 %4778)
  %4780 = trunc i32 %4779 to i8
  %4781 = and i8 %4780, 1
  %4782 = xor i8 %4781, 1
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4782, i8* %4783, align 1
  %4784 = xor i64 1, %4769
  %4785 = trunc i64 %4784 to i32
  %4786 = xor i32 %4785, %4773
  %4787 = lshr i32 %4786, 4
  %4788 = trunc i32 %4787 to i8
  %4789 = and i8 %4788, 1
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4789, i8* %4790, align 1
  %4791 = icmp eq i32 %4773, 0
  %4792 = zext i1 %4791 to i8
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4792, i8* %4793, align 1
  %4794 = lshr i32 %4773, 31
  %4795 = trunc i32 %4794 to i8
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4795, i8* %4796, align 1
  %4797 = lshr i32 %4772, 31
  %4798 = xor i32 %4794, %4797
  %4799 = add i32 %4798, %4797
  %4800 = icmp eq i32 %4799, 2
  %4801 = zext i1 %4800 to i8
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4801, i8* %4802, align 1
  store %struct.Memory* %loadMem_40ac37, %struct.Memory** %MEMORY
  %loadMem_40ac3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4804 = getelementptr inbounds %struct.GPR, %struct.GPR* %4803, i32 0, i32 33
  %4805 = getelementptr inbounds %struct.Reg, %struct.Reg* %4804, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %4805 to i64*
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 1
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %EAX.i770 = bitcast %union.anon* %4808 to i32*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 5
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RCX.i771 = bitcast %union.anon* %4811 to i64*
  %4812 = load i32, i32* %EAX.i770
  %4813 = zext i32 %4812 to i64
  %4814 = load i64, i64* %PC.i769
  %4815 = add i64 %4814, 3
  store i64 %4815, i64* %PC.i769
  %4816 = shl i64 %4813, 32
  %4817 = ashr exact i64 %4816, 32
  store i64 %4817, i64* %RCX.i771, align 8
  store %struct.Memory* %loadMem_40ac3a, %struct.Memory** %MEMORY
  %loadMem_40ac3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 33
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %4820 to i64*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 1
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %4823 to i64*
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 5
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %RCX.i768 = bitcast %union.anon* %4826 to i64*
  %4827 = load i64, i64* %RCX.i768
  %4828 = add i64 %4827, 12099168
  %4829 = load i64, i64* %PC.i766
  %4830 = add i64 %4829, 8
  store i64 %4830, i64* %PC.i766
  %4831 = inttoptr i64 %4828 to i8*
  %4832 = load i8, i8* %4831
  %4833 = zext i8 %4832 to i64
  store i64 %4833, i64* %RAX.i767, align 8
  store %struct.Memory* %loadMem_40ac3d, %struct.Memory** %MEMORY
  %loadMem_40ac45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 1
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %EAX.i764 = bitcast %union.anon* %4839 to i32*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 15
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RBP.i765 = bitcast %union.anon* %4842 to i64*
  %4843 = load i32, i32* %EAX.i764
  %4844 = zext i32 %4843 to i64
  %4845 = load i64, i64* %RBP.i765
  %4846 = sub i64 %4845, 16
  %4847 = load i64, i64* %PC.i763
  %4848 = add i64 %4847, 3
  store i64 %4848, i64* %PC.i763
  %4849 = inttoptr i64 %4846 to i32*
  %4850 = load i32, i32* %4849
  %4851 = sub i32 %4843, %4850
  %4852 = icmp ult i32 %4843, %4850
  %4853 = zext i1 %4852 to i8
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4853, i8* %4854, align 1
  %4855 = and i32 %4851, 255
  %4856 = call i32 @llvm.ctpop.i32(i32 %4855)
  %4857 = trunc i32 %4856 to i8
  %4858 = and i8 %4857, 1
  %4859 = xor i8 %4858, 1
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4859, i8* %4860, align 1
  %4861 = xor i32 %4850, %4843
  %4862 = xor i32 %4861, %4851
  %4863 = lshr i32 %4862, 4
  %4864 = trunc i32 %4863 to i8
  %4865 = and i8 %4864, 1
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4865, i8* %4866, align 1
  %4867 = icmp eq i32 %4851, 0
  %4868 = zext i1 %4867 to i8
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4868, i8* %4869, align 1
  %4870 = lshr i32 %4851, 31
  %4871 = trunc i32 %4870 to i8
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4871, i8* %4872, align 1
  %4873 = lshr i32 %4843, 31
  %4874 = lshr i32 %4850, 31
  %4875 = xor i32 %4874, %4873
  %4876 = xor i32 %4870, %4873
  %4877 = add i32 %4876, %4875
  %4878 = icmp eq i32 %4877, 2
  %4879 = zext i1 %4878 to i8
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4879, i8* %4880, align 1
  store %struct.Memory* %loadMem_40ac45, %struct.Memory** %MEMORY
  %loadMem_40ac48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4882 = getelementptr inbounds %struct.GPR, %struct.GPR* %4881, i32 0, i32 33
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %4883 to i64*
  %4884 = load i64, i64* %PC.i762
  %4885 = add i64 %4884, 350
  %4886 = load i64, i64* %PC.i762
  %4887 = add i64 %4886, 6
  %4888 = load i64, i64* %PC.i762
  %4889 = add i64 %4888, 6
  store i64 %4889, i64* %PC.i762
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4891 = load i8, i8* %4890, align 1
  %4892 = icmp eq i8 %4891, 0
  %4893 = zext i1 %4892 to i8
  store i8 %4893, i8* %BRANCH_TAKEN, align 1
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4895 = select i1 %4892, i64 %4885, i64 %4887
  store i64 %4895, i64* %4894, align 8
  store %struct.Memory* %loadMem_40ac48, %struct.Memory** %MEMORY
  %loadBr_40ac48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ac48 = icmp eq i8 %loadBr_40ac48, 1
  br i1 %cmpBr_40ac48, label %block_.L_40ada6, label %block_40ac4e

block_40ac4e:                                     ; preds = %block_.L_40ac34
  %loadMem_40ac4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 33
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %4898 to i64*
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 1
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %4901 to i64*
  %4902 = load i64, i64* %PC.i760
  %4903 = add i64 %4902, 10
  store i64 %4903, i64* %PC.i760
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_40ac4e, %struct.Memory** %MEMORY
  %loadMem_40ac58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 33
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %4906 to i64*
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 5
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %RCX.i758 = bitcast %union.anon* %4909 to i64*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4911 = getelementptr inbounds %struct.GPR, %struct.GPR* %4910, i32 0, i32 15
  %4912 = getelementptr inbounds %struct.Reg, %struct.Reg* %4911, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %4912 to i64*
  %4913 = load i64, i64* %RBP.i759
  %4914 = sub i64 %4913, 4
  %4915 = load i64, i64* %PC.i757
  %4916 = add i64 %4915, 3
  store i64 %4916, i64* %PC.i757
  %4917 = inttoptr i64 %4914 to i32*
  %4918 = load i32, i32* %4917
  %4919 = zext i32 %4918 to i64
  store i64 %4919, i64* %RCX.i758, align 8
  store %struct.Memory* %loadMem_40ac58, %struct.Memory** %MEMORY
  %loadMem_40ac5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 33
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %4922 to i64*
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4924 = getelementptr inbounds %struct.GPR, %struct.GPR* %4923, i32 0, i32 5
  %4925 = getelementptr inbounds %struct.Reg, %struct.Reg* %4924, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %4925 to i64*
  %4926 = load i64, i64* %RCX.i756
  %4927 = load i64, i64* %PC.i755
  %4928 = add i64 %4927, 3
  store i64 %4928, i64* %PC.i755
  %4929 = trunc i64 %4926 to i32
  %4930 = sub i32 %4929, 1
  %4931 = zext i32 %4930 to i64
  store i64 %4931, i64* %RCX.i756, align 8
  %4932 = icmp ult i32 %4929, 1
  %4933 = zext i1 %4932 to i8
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4933, i8* %4934, align 1
  %4935 = and i32 %4930, 255
  %4936 = call i32 @llvm.ctpop.i32(i32 %4935)
  %4937 = trunc i32 %4936 to i8
  %4938 = and i8 %4937, 1
  %4939 = xor i8 %4938, 1
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4939, i8* %4940, align 1
  %4941 = xor i64 1, %4926
  %4942 = trunc i64 %4941 to i32
  %4943 = xor i32 %4942, %4930
  %4944 = lshr i32 %4943, 4
  %4945 = trunc i32 %4944 to i8
  %4946 = and i8 %4945, 1
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4946, i8* %4947, align 1
  %4948 = icmp eq i32 %4930, 0
  %4949 = zext i1 %4948 to i8
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4949, i8* %4950, align 1
  %4951 = lshr i32 %4930, 31
  %4952 = trunc i32 %4951 to i8
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4952, i8* %4953, align 1
  %4954 = lshr i32 %4929, 31
  %4955 = xor i32 %4951, %4954
  %4956 = add i32 %4955, %4954
  %4957 = icmp eq i32 %4956, 2
  %4958 = zext i1 %4957 to i8
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4958, i8* %4959, align 1
  store %struct.Memory* %loadMem_40ac5b, %struct.Memory** %MEMORY
  %loadMem_40ac5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 33
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 5
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %ECX.i753 = bitcast %union.anon* %4965 to i32*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 7
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %RDX.i754 = bitcast %union.anon* %4968 to i64*
  %4969 = load i32, i32* %ECX.i753
  %4970 = zext i32 %4969 to i64
  %4971 = load i64, i64* %PC.i752
  %4972 = add i64 %4971, 3
  store i64 %4972, i64* %PC.i752
  %4973 = shl i64 %4970, 32
  %4974 = ashr exact i64 %4973, 32
  store i64 %4974, i64* %RDX.i754, align 8
  store %struct.Memory* %loadMem_40ac5e, %struct.Memory** %MEMORY
  %loadMem_40ac61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 33
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %4977 to i64*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 7
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %RDX.i751 = bitcast %union.anon* %4980 to i64*
  %4981 = load i64, i64* %RDX.i751
  %4982 = mul i64 %4981, 4
  %4983 = add i64 %4982, 11187184
  %4984 = load i64, i64* %PC.i750
  %4985 = add i64 %4984, 8
  store i64 %4985, i64* %PC.i750
  %4986 = inttoptr i64 %4983 to i32*
  %4987 = load i32, i32* %4986
  %4988 = sext i32 %4987 to i64
  store i64 %4988, i64* %RDX.i751, align 8
  store %struct.Memory* %loadMem_40ac61, %struct.Memory** %MEMORY
  %loadMem_40ac69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4990 = getelementptr inbounds %struct.GPR, %struct.GPR* %4989, i32 0, i32 33
  %4991 = getelementptr inbounds %struct.Reg, %struct.Reg* %4990, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %4991 to i64*
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 7
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %RDX.i749 = bitcast %union.anon* %4994 to i64*
  %4995 = load i64, i64* %RDX.i749
  %4996 = load i64, i64* %PC.i748
  %4997 = add i64 %4996, 7
  store i64 %4997, i64* %PC.i748
  %4998 = sext i64 %4995 to i128
  %4999 = and i128 %4998, -18446744073709551616
  %5000 = zext i64 %4995 to i128
  %5001 = or i128 %4999, %5000
  %5002 = mul i128 744, %5001
  %5003 = trunc i128 %5002 to i64
  store i64 %5003, i64* %RDX.i749, align 8
  %5004 = sext i64 %5003 to i128
  %5005 = icmp ne i128 %5004, %5002
  %5006 = zext i1 %5005 to i8
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5006, i8* %5007, align 1
  %5008 = trunc i128 %5002 to i32
  %5009 = and i32 %5008, 255
  %5010 = call i32 @llvm.ctpop.i32(i32 %5009)
  %5011 = trunc i32 %5010 to i8
  %5012 = and i8 %5011, 1
  %5013 = xor i8 %5012, 1
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5013, i8* %5014, align 1
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5015, align 1
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5016, align 1
  %5017 = lshr i64 %5003, 63
  %5018 = trunc i64 %5017 to i8
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5018, i8* %5019, align 1
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5006, i8* %5020, align 1
  store %struct.Memory* %loadMem_40ac69, %struct.Memory** %MEMORY
  %loadMem_40ac70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5022 = getelementptr inbounds %struct.GPR, %struct.GPR* %5021, i32 0, i32 33
  %5023 = getelementptr inbounds %struct.Reg, %struct.Reg* %5022, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %5023 to i64*
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 1
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %5026 to i64*
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 7
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %5029 to i64*
  %5030 = load i64, i64* %RAX.i746
  %5031 = load i64, i64* %RDX.i747
  %5032 = load i64, i64* %PC.i745
  %5033 = add i64 %5032, 3
  store i64 %5033, i64* %PC.i745
  %5034 = add i64 %5031, %5030
  store i64 %5034, i64* %RAX.i746, align 8
  %5035 = icmp ult i64 %5034, %5030
  %5036 = icmp ult i64 %5034, %5031
  %5037 = or i1 %5035, %5036
  %5038 = zext i1 %5037 to i8
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5038, i8* %5039, align 1
  %5040 = trunc i64 %5034 to i32
  %5041 = and i32 %5040, 255
  %5042 = call i32 @llvm.ctpop.i32(i32 %5041)
  %5043 = trunc i32 %5042 to i8
  %5044 = and i8 %5043, 1
  %5045 = xor i8 %5044, 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5045, i8* %5046, align 1
  %5047 = xor i64 %5031, %5030
  %5048 = xor i64 %5047, %5034
  %5049 = lshr i64 %5048, 4
  %5050 = trunc i64 %5049 to i8
  %5051 = and i8 %5050, 1
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5051, i8* %5052, align 1
  %5053 = icmp eq i64 %5034, 0
  %5054 = zext i1 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5054, i8* %5055, align 1
  %5056 = lshr i64 %5034, 63
  %5057 = trunc i64 %5056 to i8
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5057, i8* %5058, align 1
  %5059 = lshr i64 %5030, 63
  %5060 = lshr i64 %5031, 63
  %5061 = xor i64 %5056, %5059
  %5062 = xor i64 %5056, %5060
  %5063 = add i64 %5061, %5062
  %5064 = icmp eq i64 %5063, 2
  %5065 = zext i1 %5064 to i8
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5065, i8* %5066, align 1
  store %struct.Memory* %loadMem_40ac70, %struct.Memory** %MEMORY
  %loadMem_40ac73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 33
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %5069 to i64*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 1
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %5072 to i64*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 5
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %5075 to i64*
  %5076 = load i64, i64* %RAX.i743
  %5077 = add i64 %5076, 740
  %5078 = load i64, i64* %PC.i742
  %5079 = add i64 %5078, 6
  store i64 %5079, i64* %PC.i742
  %5080 = inttoptr i64 %5077 to i32*
  %5081 = load i32, i32* %5080
  %5082 = zext i32 %5081 to i64
  store i64 %5082, i64* %RCX.i744, align 8
  store %struct.Memory* %loadMem_40ac73, %struct.Memory** %MEMORY
  %loadMem_40ac79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 33
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %5085 to i64*
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 5
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %ECX.i741 = bitcast %union.anon* %5088 to i32*
  %5089 = load i32, i32* %ECX.i741
  %5090 = zext i32 %5089 to i64
  %5091 = load i64, i64* %PC.i740
  %5092 = add i64 %5091, 7
  store i64 %5092, i64* %PC.i740
  %5093 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %5094 = sub i32 %5089, %5093
  %5095 = icmp ult i32 %5089, %5093
  %5096 = zext i1 %5095 to i8
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5096, i8* %5097, align 1
  %5098 = and i32 %5094, 255
  %5099 = call i32 @llvm.ctpop.i32(i32 %5098)
  %5100 = trunc i32 %5099 to i8
  %5101 = and i8 %5100, 1
  %5102 = xor i8 %5101, 1
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5102, i8* %5103, align 1
  %5104 = xor i32 %5093, %5089
  %5105 = xor i32 %5104, %5094
  %5106 = lshr i32 %5105, 4
  %5107 = trunc i32 %5106 to i8
  %5108 = and i8 %5107, 1
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5108, i8* %5109, align 1
  %5110 = icmp eq i32 %5094, 0
  %5111 = zext i1 %5110 to i8
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5111, i8* %5112, align 1
  %5113 = lshr i32 %5094, 31
  %5114 = trunc i32 %5113 to i8
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5114, i8* %5115, align 1
  %5116 = lshr i32 %5089, 31
  %5117 = lshr i32 %5093, 31
  %5118 = xor i32 %5117, %5116
  %5119 = xor i32 %5113, %5116
  %5120 = add i32 %5119, %5118
  %5121 = icmp eq i32 %5120, 2
  %5122 = zext i1 %5121 to i8
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5122, i8* %5123, align 1
  store %struct.Memory* %loadMem_40ac79, %struct.Memory** %MEMORY
  %loadMem_40ac80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 33
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %5126 to i64*
  %5127 = load i64, i64* %PC.i739
  %5128 = add i64 %5127, 294
  %5129 = load i64, i64* %PC.i739
  %5130 = add i64 %5129, 6
  %5131 = load i64, i64* %PC.i739
  %5132 = add i64 %5131, 6
  store i64 %5132, i64* %PC.i739
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5134 = load i8, i8* %5133, align 1
  store i8 %5134, i8* %BRANCH_TAKEN, align 1
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5136 = icmp ne i8 %5134, 0
  %5137 = select i1 %5136, i64 %5128, i64 %5130
  store i64 %5137, i64* %5135, align 8
  store %struct.Memory* %loadMem_40ac80, %struct.Memory** %MEMORY
  %loadBr_40ac80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ac80 = icmp eq i8 %loadBr_40ac80, 1
  br i1 %cmpBr_40ac80, label %block_.L_40ada6, label %block_40ac86

block_40ac86:                                     ; preds = %block_40ac4e
  %loadMem_40ac86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 33
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %5140 to i64*
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 1
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %5143 to i64*
  %5144 = load i64, i64* %PC.i737
  %5145 = add i64 %5144, 10
  store i64 %5145, i64* %PC.i737
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i738, align 8
  store %struct.Memory* %loadMem_40ac86, %struct.Memory** %MEMORY
  %loadMem_40ac90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5147 = getelementptr inbounds %struct.GPR, %struct.GPR* %5146, i32 0, i32 33
  %5148 = getelementptr inbounds %struct.Reg, %struct.Reg* %5147, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %5148 to i64*
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 5
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %RCX.i735 = bitcast %union.anon* %5151 to i64*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 15
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %5154 to i64*
  %5155 = load i64, i64* %RBP.i736
  %5156 = sub i64 %5155, 4
  %5157 = load i64, i64* %PC.i734
  %5158 = add i64 %5157, 3
  store i64 %5158, i64* %PC.i734
  %5159 = inttoptr i64 %5156 to i32*
  %5160 = load i32, i32* %5159
  %5161 = zext i32 %5160 to i64
  store i64 %5161, i64* %RCX.i735, align 8
  store %struct.Memory* %loadMem_40ac90, %struct.Memory** %MEMORY
  %loadMem_40ac93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5163 = getelementptr inbounds %struct.GPR, %struct.GPR* %5162, i32 0, i32 33
  %5164 = getelementptr inbounds %struct.Reg, %struct.Reg* %5163, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %5164 to i64*
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 5
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %RCX.i733 = bitcast %union.anon* %5167 to i64*
  %5168 = load i64, i64* %RCX.i733
  %5169 = load i64, i64* %PC.i732
  %5170 = add i64 %5169, 3
  store i64 %5170, i64* %PC.i732
  %5171 = trunc i64 %5168 to i32
  %5172 = sub i32 %5171, 1
  %5173 = zext i32 %5172 to i64
  store i64 %5173, i64* %RCX.i733, align 8
  %5174 = icmp ult i32 %5171, 1
  %5175 = zext i1 %5174 to i8
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5175, i8* %5176, align 1
  %5177 = and i32 %5172, 255
  %5178 = call i32 @llvm.ctpop.i32(i32 %5177)
  %5179 = trunc i32 %5178 to i8
  %5180 = and i8 %5179, 1
  %5181 = xor i8 %5180, 1
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5181, i8* %5182, align 1
  %5183 = xor i64 1, %5168
  %5184 = trunc i64 %5183 to i32
  %5185 = xor i32 %5184, %5172
  %5186 = lshr i32 %5185, 4
  %5187 = trunc i32 %5186 to i8
  %5188 = and i8 %5187, 1
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5188, i8* %5189, align 1
  %5190 = icmp eq i32 %5172, 0
  %5191 = zext i1 %5190 to i8
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5191, i8* %5192, align 1
  %5193 = lshr i32 %5172, 31
  %5194 = trunc i32 %5193 to i8
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5194, i8* %5195, align 1
  %5196 = lshr i32 %5171, 31
  %5197 = xor i32 %5193, %5196
  %5198 = add i32 %5197, %5196
  %5199 = icmp eq i32 %5198, 2
  %5200 = zext i1 %5199 to i8
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5200, i8* %5201, align 1
  store %struct.Memory* %loadMem_40ac93, %struct.Memory** %MEMORY
  %loadMem_40ac96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 33
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %5204 to i64*
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5206 = getelementptr inbounds %struct.GPR, %struct.GPR* %5205, i32 0, i32 5
  %5207 = getelementptr inbounds %struct.Reg, %struct.Reg* %5206, i32 0, i32 0
  %ECX.i730 = bitcast %union.anon* %5207 to i32*
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5209 = getelementptr inbounds %struct.GPR, %struct.GPR* %5208, i32 0, i32 7
  %5210 = getelementptr inbounds %struct.Reg, %struct.Reg* %5209, i32 0, i32 0
  %RDX.i731 = bitcast %union.anon* %5210 to i64*
  %5211 = load i32, i32* %ECX.i730
  %5212 = zext i32 %5211 to i64
  %5213 = load i64, i64* %PC.i729
  %5214 = add i64 %5213, 3
  store i64 %5214, i64* %PC.i729
  %5215 = shl i64 %5212, 32
  %5216 = ashr exact i64 %5215, 32
  store i64 %5216, i64* %RDX.i731, align 8
  store %struct.Memory* %loadMem_40ac96, %struct.Memory** %MEMORY
  %loadMem_40ac99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5218 = getelementptr inbounds %struct.GPR, %struct.GPR* %5217, i32 0, i32 33
  %5219 = getelementptr inbounds %struct.Reg, %struct.Reg* %5218, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %5219 to i64*
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5221 = getelementptr inbounds %struct.GPR, %struct.GPR* %5220, i32 0, i32 5
  %5222 = getelementptr inbounds %struct.Reg, %struct.Reg* %5221, i32 0, i32 0
  %RCX.i727 = bitcast %union.anon* %5222 to i64*
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 7
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %RDX.i728 = bitcast %union.anon* %5225 to i64*
  %5226 = load i64, i64* %RDX.i728
  %5227 = mul i64 %5226, 4
  %5228 = add i64 %5227, 11187184
  %5229 = load i64, i64* %PC.i726
  %5230 = add i64 %5229, 7
  store i64 %5230, i64* %PC.i726
  %5231 = inttoptr i64 %5228 to i32*
  %5232 = load i32, i32* %5231
  %5233 = zext i32 %5232 to i64
  store i64 %5233, i64* %RCX.i727, align 8
  store %struct.Memory* %loadMem_40ac99, %struct.Memory** %MEMORY
  %loadMem_40aca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 33
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %5236 to i64*
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 5
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %ECX.i724 = bitcast %union.anon* %5239 to i32*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5241 = getelementptr inbounds %struct.GPR, %struct.GPR* %5240, i32 0, i32 15
  %5242 = getelementptr inbounds %struct.Reg, %struct.Reg* %5241, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %5242 to i64*
  %5243 = load i64, i64* %RBP.i725
  %5244 = sub i64 %5243, 24
  %5245 = load i32, i32* %ECX.i724
  %5246 = zext i32 %5245 to i64
  %5247 = load i64, i64* %PC.i723
  %5248 = add i64 %5247, 3
  store i64 %5248, i64* %PC.i723
  %5249 = inttoptr i64 %5244 to i32*
  store i32 %5245, i32* %5249
  store %struct.Memory* %loadMem_40aca0, %struct.Memory** %MEMORY
  %loadMem_40aca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5251 = getelementptr inbounds %struct.GPR, %struct.GPR* %5250, i32 0, i32 33
  %5252 = getelementptr inbounds %struct.Reg, %struct.Reg* %5251, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %5252 to i64*
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5254 = getelementptr inbounds %struct.GPR, %struct.GPR* %5253, i32 0, i32 5
  %5255 = getelementptr inbounds %struct.Reg, %struct.Reg* %5254, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %5255 to i64*
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 15
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %RBP.i722 = bitcast %union.anon* %5258 to i64*
  %5259 = load i64, i64* %RBP.i722
  %5260 = sub i64 %5259, 4
  %5261 = load i64, i64* %PC.i720
  %5262 = add i64 %5261, 3
  store i64 %5262, i64* %PC.i720
  %5263 = inttoptr i64 %5260 to i32*
  %5264 = load i32, i32* %5263
  %5265 = zext i32 %5264 to i64
  store i64 %5265, i64* %RCX.i721, align 8
  store %struct.Memory* %loadMem_40aca3, %struct.Memory** %MEMORY
  %loadMem_40aca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 33
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %5268 to i64*
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 5
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %5271 to i64*
  %5272 = load i64, i64* %RCX.i719
  %5273 = load i64, i64* %PC.i718
  %5274 = add i64 %5273, 3
  store i64 %5274, i64* %PC.i718
  %5275 = trunc i64 %5272 to i32
  %5276 = sub i32 %5275, 1
  %5277 = zext i32 %5276 to i64
  store i64 %5277, i64* %RCX.i719, align 8
  %5278 = icmp ult i32 %5275, 1
  %5279 = zext i1 %5278 to i8
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5279, i8* %5280, align 1
  %5281 = and i32 %5276, 255
  %5282 = call i32 @llvm.ctpop.i32(i32 %5281)
  %5283 = trunc i32 %5282 to i8
  %5284 = and i8 %5283, 1
  %5285 = xor i8 %5284, 1
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5285, i8* %5286, align 1
  %5287 = xor i64 1, %5272
  %5288 = trunc i64 %5287 to i32
  %5289 = xor i32 %5288, %5276
  %5290 = lshr i32 %5289, 4
  %5291 = trunc i32 %5290 to i8
  %5292 = and i8 %5291, 1
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5292, i8* %5293, align 1
  %5294 = icmp eq i32 %5276, 0
  %5295 = zext i1 %5294 to i8
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5295, i8* %5296, align 1
  %5297 = lshr i32 %5276, 31
  %5298 = trunc i32 %5297 to i8
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5298, i8* %5299, align 1
  %5300 = lshr i32 %5275, 31
  %5301 = xor i32 %5297, %5300
  %5302 = add i32 %5301, %5300
  %5303 = icmp eq i32 %5302, 2
  %5304 = zext i1 %5303 to i8
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5304, i8* %5305, align 1
  store %struct.Memory* %loadMem_40aca6, %struct.Memory** %MEMORY
  %loadMem_40aca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 33
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %5308 to i64*
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 5
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %ECX.i716 = bitcast %union.anon* %5311 to i32*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 7
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %RDX.i717 = bitcast %union.anon* %5314 to i64*
  %5315 = load i32, i32* %ECX.i716
  %5316 = zext i32 %5315 to i64
  %5317 = load i64, i64* %PC.i715
  %5318 = add i64 %5317, 3
  store i64 %5318, i64* %PC.i715
  %5319 = shl i64 %5316, 32
  %5320 = ashr exact i64 %5319, 32
  store i64 %5320, i64* %RDX.i717, align 8
  store %struct.Memory* %loadMem_40aca9, %struct.Memory** %MEMORY
  %loadMem_40acac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 33
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %5323 to i64*
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5325 = getelementptr inbounds %struct.GPR, %struct.GPR* %5324, i32 0, i32 5
  %5326 = getelementptr inbounds %struct.Reg, %struct.Reg* %5325, i32 0, i32 0
  %RCX.i713 = bitcast %union.anon* %5326 to i64*
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5328 = getelementptr inbounds %struct.GPR, %struct.GPR* %5327, i32 0, i32 7
  %5329 = getelementptr inbounds %struct.Reg, %struct.Reg* %5328, i32 0, i32 0
  %RDX.i714 = bitcast %union.anon* %5329 to i64*
  %5330 = load i64, i64* %RDX.i714
  %5331 = mul i64 %5330, 4
  %5332 = add i64 %5331, 11187184
  %5333 = load i64, i64* %PC.i712
  %5334 = add i64 %5333, 7
  store i64 %5334, i64* %PC.i712
  %5335 = inttoptr i64 %5332 to i32*
  %5336 = load i32, i32* %5335
  %5337 = zext i32 %5336 to i64
  store i64 %5337, i64* %RCX.i713, align 8
  store %struct.Memory* %loadMem_40acac, %struct.Memory** %MEMORY
  %loadMem_40acb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 7
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RDX.i710 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 15
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RBP.i711
  %5348 = sub i64 %5347, 8
  %5349 = load i64, i64* %PC.i709
  %5350 = add i64 %5349, 4
  store i64 %5350, i64* %PC.i709
  %5351 = inttoptr i64 %5348 to i32*
  %5352 = load i32, i32* %5351
  %5353 = sext i32 %5352 to i64
  store i64 %5353, i64* %RDX.i710, align 8
  store %struct.Memory* %loadMem_40acb3, %struct.Memory** %MEMORY
  %loadMem_40acb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5355 = getelementptr inbounds %struct.GPR, %struct.GPR* %5354, i32 0, i32 33
  %5356 = getelementptr inbounds %struct.Reg, %struct.Reg* %5355, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %5356 to i64*
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5358 = getelementptr inbounds %struct.GPR, %struct.GPR* %5357, i32 0, i32 7
  %5359 = getelementptr inbounds %struct.Reg, %struct.Reg* %5358, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %5359 to i64*
  %5360 = load i64, i64* %RDX.i708
  %5361 = load i64, i64* %PC.i707
  %5362 = add i64 %5361, 7
  store i64 %5362, i64* %PC.i707
  %5363 = sext i64 %5360 to i128
  %5364 = and i128 %5363, -18446744073709551616
  %5365 = zext i64 %5360 to i128
  %5366 = or i128 %5364, %5365
  %5367 = mul i128 744, %5366
  %5368 = trunc i128 %5367 to i64
  store i64 %5368, i64* %RDX.i708, align 8
  %5369 = sext i64 %5368 to i128
  %5370 = icmp ne i128 %5369, %5367
  %5371 = zext i1 %5370 to i8
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5371, i8* %5372, align 1
  %5373 = trunc i128 %5367 to i32
  %5374 = and i32 %5373, 255
  %5375 = call i32 @llvm.ctpop.i32(i32 %5374)
  %5376 = trunc i32 %5375 to i8
  %5377 = and i8 %5376, 1
  %5378 = xor i8 %5377, 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5378, i8* %5379, align 1
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5380, align 1
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5381, align 1
  %5382 = lshr i64 %5368, 63
  %5383 = trunc i64 %5382 to i8
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5383, i8* %5384, align 1
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5371, i8* %5385, align 1
  store %struct.Memory* %loadMem_40acb7, %struct.Memory** %MEMORY
  %loadMem_40acbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5387 = getelementptr inbounds %struct.GPR, %struct.GPR* %5386, i32 0, i32 33
  %5388 = getelementptr inbounds %struct.Reg, %struct.Reg* %5387, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %5388 to i64*
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 1
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %5391 to i64*
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5393 = getelementptr inbounds %struct.GPR, %struct.GPR* %5392, i32 0, i32 9
  %5394 = getelementptr inbounds %struct.Reg, %struct.Reg* %5393, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %5394 to i64*
  %5395 = load i64, i64* %RAX.i705
  %5396 = load i64, i64* %PC.i704
  %5397 = add i64 %5396, 3
  store i64 %5397, i64* %PC.i704
  store i64 %5395, i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_40acbe, %struct.Memory** %MEMORY
  %loadMem_40acc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 33
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %5400 to i64*
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 7
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %RDX.i702 = bitcast %union.anon* %5403 to i64*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 9
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %RSI.i703 = bitcast %union.anon* %5406 to i64*
  %5407 = load i64, i64* %RSI.i703
  %5408 = load i64, i64* %RDX.i702
  %5409 = load i64, i64* %PC.i701
  %5410 = add i64 %5409, 3
  store i64 %5410, i64* %PC.i701
  %5411 = add i64 %5408, %5407
  store i64 %5411, i64* %RSI.i703, align 8
  %5412 = icmp ult i64 %5411, %5407
  %5413 = icmp ult i64 %5411, %5408
  %5414 = or i1 %5412, %5413
  %5415 = zext i1 %5414 to i8
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5415, i8* %5416, align 1
  %5417 = trunc i64 %5411 to i32
  %5418 = and i32 %5417, 255
  %5419 = call i32 @llvm.ctpop.i32(i32 %5418)
  %5420 = trunc i32 %5419 to i8
  %5421 = and i8 %5420, 1
  %5422 = xor i8 %5421, 1
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5422, i8* %5423, align 1
  %5424 = xor i64 %5408, %5407
  %5425 = xor i64 %5424, %5411
  %5426 = lshr i64 %5425, 4
  %5427 = trunc i64 %5426 to i8
  %5428 = and i8 %5427, 1
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5428, i8* %5429, align 1
  %5430 = icmp eq i64 %5411, 0
  %5431 = zext i1 %5430 to i8
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5431, i8* %5432, align 1
  %5433 = lshr i64 %5411, 63
  %5434 = trunc i64 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5434, i8* %5435, align 1
  %5436 = lshr i64 %5407, 63
  %5437 = lshr i64 %5408, 63
  %5438 = xor i64 %5433, %5436
  %5439 = xor i64 %5433, %5437
  %5440 = add i64 %5438, %5439
  %5441 = icmp eq i64 %5440, 2
  %5442 = zext i1 %5441 to i8
  %5443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5442, i8* %5443, align 1
  store %struct.Memory* %loadMem_40acc1, %struct.Memory** %MEMORY
  %loadMem_40acc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5445 = getelementptr inbounds %struct.GPR, %struct.GPR* %5444, i32 0, i32 33
  %5446 = getelementptr inbounds %struct.Reg, %struct.Reg* %5445, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %5446 to i64*
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5448 = getelementptr inbounds %struct.GPR, %struct.GPR* %5447, i32 0, i32 7
  %5449 = getelementptr inbounds %struct.Reg, %struct.Reg* %5448, i32 0, i32 0
  %RDX.i699 = bitcast %union.anon* %5449 to i64*
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5451 = getelementptr inbounds %struct.GPR, %struct.GPR* %5450, i32 0, i32 15
  %5452 = getelementptr inbounds %struct.Reg, %struct.Reg* %5451, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %5452 to i64*
  %5453 = load i64, i64* %RBP.i700
  %5454 = sub i64 %5453, 8
  %5455 = load i64, i64* %PC.i698
  %5456 = add i64 %5455, 4
  store i64 %5456, i64* %PC.i698
  %5457 = inttoptr i64 %5454 to i32*
  %5458 = load i32, i32* %5457
  %5459 = sext i32 %5458 to i64
  store i64 %5459, i64* %RDX.i699, align 8
  store %struct.Memory* %loadMem_40acc4, %struct.Memory** %MEMORY
  %loadMem_40acc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 33
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %5462 to i64*
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5464 = getelementptr inbounds %struct.GPR, %struct.GPR* %5463, i32 0, i32 7
  %5465 = getelementptr inbounds %struct.Reg, %struct.Reg* %5464, i32 0, i32 0
  %RDX.i697 = bitcast %union.anon* %5465 to i64*
  %5466 = load i64, i64* %RDX.i697
  %5467 = load i64, i64* %PC.i696
  %5468 = add i64 %5467, 7
  store i64 %5468, i64* %PC.i696
  %5469 = sext i64 %5466 to i128
  %5470 = and i128 %5469, -18446744073709551616
  %5471 = zext i64 %5466 to i128
  %5472 = or i128 %5470, %5471
  %5473 = mul i128 744, %5472
  %5474 = trunc i128 %5473 to i64
  store i64 %5474, i64* %RDX.i697, align 8
  %5475 = sext i64 %5474 to i128
  %5476 = icmp ne i128 %5475, %5473
  %5477 = zext i1 %5476 to i8
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5477, i8* %5478, align 1
  %5479 = trunc i128 %5473 to i32
  %5480 = and i32 %5479, 255
  %5481 = call i32 @llvm.ctpop.i32(i32 %5480)
  %5482 = trunc i32 %5481 to i8
  %5483 = and i8 %5482, 1
  %5484 = xor i8 %5483, 1
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5484, i8* %5485, align 1
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5486, align 1
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5487, align 1
  %5488 = lshr i64 %5474, 63
  %5489 = trunc i64 %5488 to i8
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5489, i8* %5490, align 1
  %5491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5477, i8* %5491, align 1
  store %struct.Memory* %loadMem_40acc8, %struct.Memory** %MEMORY
  %loadMem_40accf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 33
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %5494 to i64*
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5496 = getelementptr inbounds %struct.GPR, %struct.GPR* %5495, i32 0, i32 1
  %5497 = getelementptr inbounds %struct.Reg, %struct.Reg* %5496, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %5497 to i64*
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5499 = getelementptr inbounds %struct.GPR, %struct.GPR* %5498, i32 0, i32 11
  %5500 = getelementptr inbounds %struct.Reg, %struct.Reg* %5499, i32 0, i32 0
  %RDI.i695 = bitcast %union.anon* %5500 to i64*
  %5501 = load i64, i64* %RAX.i694
  %5502 = load i64, i64* %PC.i693
  %5503 = add i64 %5502, 3
  store i64 %5503, i64* %PC.i693
  store i64 %5501, i64* %RDI.i695, align 8
  store %struct.Memory* %loadMem_40accf, %struct.Memory** %MEMORY
  %loadMem_40acd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5505 = getelementptr inbounds %struct.GPR, %struct.GPR* %5504, i32 0, i32 33
  %5506 = getelementptr inbounds %struct.Reg, %struct.Reg* %5505, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %5506 to i64*
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5508 = getelementptr inbounds %struct.GPR, %struct.GPR* %5507, i32 0, i32 7
  %5509 = getelementptr inbounds %struct.Reg, %struct.Reg* %5508, i32 0, i32 0
  %RDX.i691 = bitcast %union.anon* %5509 to i64*
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 11
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %RDI.i692 = bitcast %union.anon* %5512 to i64*
  %5513 = load i64, i64* %RDI.i692
  %5514 = load i64, i64* %RDX.i691
  %5515 = load i64, i64* %PC.i690
  %5516 = add i64 %5515, 3
  store i64 %5516, i64* %PC.i690
  %5517 = add i64 %5514, %5513
  store i64 %5517, i64* %RDI.i692, align 8
  %5518 = icmp ult i64 %5517, %5513
  %5519 = icmp ult i64 %5517, %5514
  %5520 = or i1 %5518, %5519
  %5521 = zext i1 %5520 to i8
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5521, i8* %5522, align 1
  %5523 = trunc i64 %5517 to i32
  %5524 = and i32 %5523, 255
  %5525 = call i32 @llvm.ctpop.i32(i32 %5524)
  %5526 = trunc i32 %5525 to i8
  %5527 = and i8 %5526, 1
  %5528 = xor i8 %5527, 1
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5528, i8* %5529, align 1
  %5530 = xor i64 %5514, %5513
  %5531 = xor i64 %5530, %5517
  %5532 = lshr i64 %5531, 4
  %5533 = trunc i64 %5532 to i8
  %5534 = and i8 %5533, 1
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5534, i8* %5535, align 1
  %5536 = icmp eq i64 %5517, 0
  %5537 = zext i1 %5536 to i8
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5537, i8* %5538, align 1
  %5539 = lshr i64 %5517, 63
  %5540 = trunc i64 %5539 to i8
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5540, i8* %5541, align 1
  %5542 = lshr i64 %5513, 63
  %5543 = lshr i64 %5514, 63
  %5544 = xor i64 %5539, %5542
  %5545 = xor i64 %5539, %5543
  %5546 = add i64 %5544, %5545
  %5547 = icmp eq i64 %5546, 2
  %5548 = zext i1 %5547 to i8
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5548, i8* %5549, align 1
  store %struct.Memory* %loadMem_40acd2, %struct.Memory** %MEMORY
  %loadMem_40acd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 33
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %5552 to i64*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 17
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %R8D.i688 = bitcast %union.anon* %5555 to i32*
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5557 = getelementptr inbounds %struct.GPR, %struct.GPR* %5556, i32 0, i32 11
  %5558 = getelementptr inbounds %struct.Reg, %struct.Reg* %5557, i32 0, i32 0
  %RDI.i689 = bitcast %union.anon* %5558 to i64*
  %5559 = bitcast i32* %R8D.i688 to i64*
  %5560 = load i64, i64* %RDI.i689
  %5561 = add i64 %5560, 96
  %5562 = load i64, i64* %PC.i687
  %5563 = add i64 %5562, 4
  store i64 %5563, i64* %PC.i687
  %5564 = inttoptr i64 %5561 to i32*
  %5565 = load i32, i32* %5564
  %5566 = zext i32 %5565 to i64
  store i64 %5566, i64* %5559, align 8
  store %struct.Memory* %loadMem_40acd5, %struct.Memory** %MEMORY
  %loadMem_40acd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5568 = getelementptr inbounds %struct.GPR, %struct.GPR* %5567, i32 0, i32 33
  %5569 = getelementptr inbounds %struct.Reg, %struct.Reg* %5568, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %5569 to i64*
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 17
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %R8D.i685 = bitcast %union.anon* %5572 to i32*
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 19
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %R9D.i686 = bitcast %union.anon* %5575 to i32*
  %5576 = bitcast i32* %R9D.i686 to i64*
  %5577 = load i32, i32* %R8D.i685
  %5578 = zext i32 %5577 to i64
  %5579 = load i64, i64* %PC.i684
  %5580 = add i64 %5579, 3
  store i64 %5580, i64* %PC.i684
  %5581 = and i64 %5578, 4294967295
  store i64 %5581, i64* %5576, align 8
  store %struct.Memory* %loadMem_40acd9, %struct.Memory** %MEMORY
  %loadMem_40acdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 33
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %5584 to i64*
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5586 = getelementptr inbounds %struct.GPR, %struct.GPR* %5585, i32 0, i32 19
  %5587 = getelementptr inbounds %struct.Reg, %struct.Reg* %5586, i32 0, i32 0
  %R9D.i683 = bitcast %union.anon* %5587 to i32*
  %5588 = bitcast i32* %R9D.i683 to i64*
  %5589 = load i32, i32* %R9D.i683
  %5590 = zext i32 %5589 to i64
  %5591 = load i64, i64* %PC.i682
  %5592 = add i64 %5591, 4
  store i64 %5592, i64* %PC.i682
  %5593 = add i32 1, %5589
  %5594 = zext i32 %5593 to i64
  store i64 %5594, i64* %5588, align 8
  %5595 = icmp ult i32 %5593, %5589
  %5596 = icmp ult i32 %5593, 1
  %5597 = or i1 %5595, %5596
  %5598 = zext i1 %5597 to i8
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5598, i8* %5599, align 1
  %5600 = and i32 %5593, 255
  %5601 = call i32 @llvm.ctpop.i32(i32 %5600)
  %5602 = trunc i32 %5601 to i8
  %5603 = and i8 %5602, 1
  %5604 = xor i8 %5603, 1
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5604, i8* %5605, align 1
  %5606 = xor i64 1, %5590
  %5607 = trunc i64 %5606 to i32
  %5608 = xor i32 %5607, %5593
  %5609 = lshr i32 %5608, 4
  %5610 = trunc i32 %5609 to i8
  %5611 = and i8 %5610, 1
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5611, i8* %5612, align 1
  %5613 = icmp eq i32 %5593, 0
  %5614 = zext i1 %5613 to i8
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5614, i8* %5615, align 1
  %5616 = lshr i32 %5593, 31
  %5617 = trunc i32 %5616 to i8
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5617, i8* %5618, align 1
  %5619 = lshr i32 %5589, 31
  %5620 = xor i32 %5616, %5619
  %5621 = add i32 %5620, %5616
  %5622 = icmp eq i32 %5621, 2
  %5623 = zext i1 %5622 to i8
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5623, i8* %5624, align 1
  store %struct.Memory* %loadMem_40acdc, %struct.Memory** %MEMORY
  %loadMem_40ace0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 33
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %5627 to i64*
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 19
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %R9D.i680 = bitcast %union.anon* %5630 to i32*
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 11
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %RDI.i681 = bitcast %union.anon* %5633 to i64*
  %5634 = load i64, i64* %RDI.i681
  %5635 = add i64 %5634, 96
  %5636 = load i32, i32* %R9D.i680
  %5637 = zext i32 %5636 to i64
  %5638 = load i64, i64* %PC.i679
  %5639 = add i64 %5638, 4
  store i64 %5639, i64* %PC.i679
  %5640 = inttoptr i64 %5635 to i32*
  store i32 %5636, i32* %5640
  store %struct.Memory* %loadMem_40ace0, %struct.Memory** %MEMORY
  %loadMem_40ace4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 33
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %5643 to i64*
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 17
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %R8D.i677 = bitcast %union.anon* %5646 to i32*
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5648 = getelementptr inbounds %struct.GPR, %struct.GPR* %5647, i32 0, i32 7
  %5649 = getelementptr inbounds %struct.Reg, %struct.Reg* %5648, i32 0, i32 0
  %RDX.i678 = bitcast %union.anon* %5649 to i64*
  %5650 = load i32, i32* %R8D.i677
  %5651 = zext i32 %5650 to i64
  %5652 = load i64, i64* %PC.i676
  %5653 = add i64 %5652, 3
  store i64 %5653, i64* %PC.i676
  %5654 = shl i64 %5651, 32
  %5655 = ashr exact i64 %5654, 32
  store i64 %5655, i64* %RDX.i678, align 8
  store %struct.Memory* %loadMem_40ace4, %struct.Memory** %MEMORY
  %loadMem_40ace7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 33
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %5658 to i64*
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 5
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %ECX.i673 = bitcast %union.anon* %5661 to i32*
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 7
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %RDX.i674 = bitcast %union.anon* %5664 to i64*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 9
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RSI.i675 = bitcast %union.anon* %5667 to i64*
  %5668 = load i64, i64* %RSI.i675
  %5669 = load i64, i64* %RDX.i674
  %5670 = mul i64 %5669, 4
  %5671 = add i64 %5668, 100
  %5672 = add i64 %5671, %5670
  %5673 = load i32, i32* %ECX.i673
  %5674 = zext i32 %5673 to i64
  %5675 = load i64, i64* %PC.i672
  %5676 = add i64 %5675, 4
  store i64 %5676, i64* %PC.i672
  %5677 = inttoptr i64 %5672 to i32*
  store i32 %5673, i32* %5677
  store %struct.Memory* %loadMem_40ace7, %struct.Memory** %MEMORY
  %loadMem_40aceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 33
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %5680 to i64*
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 7
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %5683 to i64*
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 15
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %5686 to i64*
  %5687 = load i64, i64* %RBP.i671
  %5688 = sub i64 %5687, 24
  %5689 = load i64, i64* %PC.i669
  %5690 = add i64 %5689, 4
  store i64 %5690, i64* %PC.i669
  %5691 = inttoptr i64 %5688 to i32*
  %5692 = load i32, i32* %5691
  %5693 = sext i32 %5692 to i64
  store i64 %5693, i64* %RDX.i670, align 8
  store %struct.Memory* %loadMem_40aceb, %struct.Memory** %MEMORY
  %loadMem_40acef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 33
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %5696 to i64*
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 7
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %RDX.i668 = bitcast %union.anon* %5699 to i64*
  %5700 = load i64, i64* %RDX.i668
  %5701 = load i64, i64* %PC.i667
  %5702 = add i64 %5701, 7
  store i64 %5702, i64* %PC.i667
  %5703 = sext i64 %5700 to i128
  %5704 = and i128 %5703, -18446744073709551616
  %5705 = zext i64 %5700 to i128
  %5706 = or i128 %5704, %5705
  %5707 = mul i128 744, %5706
  %5708 = trunc i128 %5707 to i64
  store i64 %5708, i64* %RDX.i668, align 8
  %5709 = sext i64 %5708 to i128
  %5710 = icmp ne i128 %5709, %5707
  %5711 = zext i1 %5710 to i8
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5711, i8* %5712, align 1
  %5713 = trunc i128 %5707 to i32
  %5714 = and i32 %5713, 255
  %5715 = call i32 @llvm.ctpop.i32(i32 %5714)
  %5716 = trunc i32 %5715 to i8
  %5717 = and i8 %5716, 1
  %5718 = xor i8 %5717, 1
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5718, i8* %5719, align 1
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5720, align 1
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5721, align 1
  %5722 = lshr i64 %5708, 63
  %5723 = trunc i64 %5722 to i8
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5723, i8* %5724, align 1
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5711, i8* %5725, align 1
  store %struct.Memory* %loadMem_40acef, %struct.Memory** %MEMORY
  %loadMem_40acf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 33
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %5728 to i64*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 1
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %5731 to i64*
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 9
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %RSI.i666 = bitcast %union.anon* %5734 to i64*
  %5735 = load i64, i64* %RAX.i665
  %5736 = load i64, i64* %PC.i664
  %5737 = add i64 %5736, 3
  store i64 %5737, i64* %PC.i664
  store i64 %5735, i64* %RSI.i666, align 8
  store %struct.Memory* %loadMem_40acf6, %struct.Memory** %MEMORY
  %loadMem_40acf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 33
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %5740 to i64*
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 7
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %RDX.i662 = bitcast %union.anon* %5743 to i64*
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5745 = getelementptr inbounds %struct.GPR, %struct.GPR* %5744, i32 0, i32 9
  %5746 = getelementptr inbounds %struct.Reg, %struct.Reg* %5745, i32 0, i32 0
  %RSI.i663 = bitcast %union.anon* %5746 to i64*
  %5747 = load i64, i64* %RSI.i663
  %5748 = load i64, i64* %RDX.i662
  %5749 = load i64, i64* %PC.i661
  %5750 = add i64 %5749, 3
  store i64 %5750, i64* %PC.i661
  %5751 = add i64 %5748, %5747
  store i64 %5751, i64* %RSI.i663, align 8
  %5752 = icmp ult i64 %5751, %5747
  %5753 = icmp ult i64 %5751, %5748
  %5754 = or i1 %5752, %5753
  %5755 = zext i1 %5754 to i8
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5755, i8* %5756, align 1
  %5757 = trunc i64 %5751 to i32
  %5758 = and i32 %5757, 255
  %5759 = call i32 @llvm.ctpop.i32(i32 %5758)
  %5760 = trunc i32 %5759 to i8
  %5761 = and i8 %5760, 1
  %5762 = xor i8 %5761, 1
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5762, i8* %5763, align 1
  %5764 = xor i64 %5748, %5747
  %5765 = xor i64 %5764, %5751
  %5766 = lshr i64 %5765, 4
  %5767 = trunc i64 %5766 to i8
  %5768 = and i8 %5767, 1
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5768, i8* %5769, align 1
  %5770 = icmp eq i64 %5751, 0
  %5771 = zext i1 %5770 to i8
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5771, i8* %5772, align 1
  %5773 = lshr i64 %5751, 63
  %5774 = trunc i64 %5773 to i8
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5774, i8* %5775, align 1
  %5776 = lshr i64 %5747, 63
  %5777 = lshr i64 %5748, 63
  %5778 = xor i64 %5773, %5776
  %5779 = xor i64 %5773, %5777
  %5780 = add i64 %5778, %5779
  %5781 = icmp eq i64 %5780, 2
  %5782 = zext i1 %5781 to i8
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5782, i8* %5783, align 1
  store %struct.Memory* %loadMem_40acf9, %struct.Memory** %MEMORY
  %loadMem_40acfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5785 = getelementptr inbounds %struct.GPR, %struct.GPR* %5784, i32 0, i32 33
  %5786 = getelementptr inbounds %struct.Reg, %struct.Reg* %5785, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5786 to i64*
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5788 = getelementptr inbounds %struct.GPR, %struct.GPR* %5787, i32 0, i32 9
  %5789 = getelementptr inbounds %struct.Reg, %struct.Reg* %5788, i32 0, i32 0
  %RSI.i660 = bitcast %union.anon* %5789 to i64*
  %5790 = load i64, i64* %RSI.i660
  %5791 = load i64, i64* %PC.i659
  %5792 = add i64 %5791, 4
  store i64 %5792, i64* %PC.i659
  %5793 = add i64 96, %5790
  store i64 %5793, i64* %RSI.i660, align 8
  %5794 = icmp ult i64 %5793, %5790
  %5795 = icmp ult i64 %5793, 96
  %5796 = or i1 %5794, %5795
  %5797 = zext i1 %5796 to i8
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5797, i8* %5798, align 1
  %5799 = trunc i64 %5793 to i32
  %5800 = and i32 %5799, 255
  %5801 = call i32 @llvm.ctpop.i32(i32 %5800)
  %5802 = trunc i32 %5801 to i8
  %5803 = and i8 %5802, 1
  %5804 = xor i8 %5803, 1
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5804, i8* %5805, align 1
  %5806 = xor i64 96, %5790
  %5807 = xor i64 %5806, %5793
  %5808 = lshr i64 %5807, 4
  %5809 = trunc i64 %5808 to i8
  %5810 = and i8 %5809, 1
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5810, i8* %5811, align 1
  %5812 = icmp eq i64 %5793, 0
  %5813 = zext i1 %5812 to i8
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5813, i8* %5814, align 1
  %5815 = lshr i64 %5793, 63
  %5816 = trunc i64 %5815 to i8
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5816, i8* %5817, align 1
  %5818 = lshr i64 %5790, 63
  %5819 = xor i64 %5815, %5818
  %5820 = add i64 %5819, %5815
  %5821 = icmp eq i64 %5820, 2
  %5822 = zext i1 %5821 to i8
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5822, i8* %5823, align 1
  store %struct.Memory* %loadMem_40acfc, %struct.Memory** %MEMORY
  %loadMem_40ad00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 33
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %5826 to i64*
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5828 = getelementptr inbounds %struct.GPR, %struct.GPR* %5827, i32 0, i32 7
  %5829 = getelementptr inbounds %struct.Reg, %struct.Reg* %5828, i32 0, i32 0
  %RDX.i658 = bitcast %union.anon* %5829 to i64*
  %5830 = load i64, i64* %PC.i657
  %5831 = add i64 %5830, 8
  store i64 %5831, i64* %PC.i657
  %5832 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %5832, i64* %RDX.i658, align 8
  store %struct.Memory* %loadMem_40ad00, %struct.Memory** %MEMORY
  %loadMem_40ad08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 33
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5835 to i64*
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 7
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %RDX.i655 = bitcast %union.anon* %5838 to i64*
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 9
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %RSI.i656 = bitcast %union.anon* %5841 to i64*
  %5842 = load i64, i64* %RDX.i655
  %5843 = load i64, i64* %RSI.i656
  %5844 = load i64, i64* %PC.i654
  %5845 = add i64 %5844, 3
  store i64 %5845, i64* %PC.i654
  %5846 = inttoptr i64 %5842 to i64*
  store i64 %5843, i64* %5846
  store %struct.Memory* %loadMem_40ad08, %struct.Memory** %MEMORY
  %loadMem_40ad0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 33
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 7
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RDX.i652 = bitcast %union.anon* %5852 to i64*
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 15
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %5855 to i64*
  %5856 = load i64, i64* %RBP.i653
  %5857 = sub i64 %5856, 24
  %5858 = load i64, i64* %PC.i651
  %5859 = add i64 %5858, 4
  store i64 %5859, i64* %PC.i651
  %5860 = inttoptr i64 %5857 to i32*
  %5861 = load i32, i32* %5860
  %5862 = sext i32 %5861 to i64
  store i64 %5862, i64* %RDX.i652, align 8
  store %struct.Memory* %loadMem_40ad0b, %struct.Memory** %MEMORY
  %loadMem_40ad0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 33
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5865 to i64*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 7
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %RDX.i650 = bitcast %union.anon* %5868 to i64*
  %5869 = load i64, i64* %RDX.i650
  %5870 = load i64, i64* %PC.i649
  %5871 = add i64 %5870, 7
  store i64 %5871, i64* %PC.i649
  %5872 = sext i64 %5869 to i128
  %5873 = and i128 %5872, -18446744073709551616
  %5874 = zext i64 %5869 to i128
  %5875 = or i128 %5873, %5874
  %5876 = mul i128 744, %5875
  %5877 = trunc i128 %5876 to i64
  store i64 %5877, i64* %RDX.i650, align 8
  %5878 = sext i64 %5877 to i128
  %5879 = icmp ne i128 %5878, %5876
  %5880 = zext i1 %5879 to i8
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5880, i8* %5881, align 1
  %5882 = trunc i128 %5876 to i32
  %5883 = and i32 %5882, 255
  %5884 = call i32 @llvm.ctpop.i32(i32 %5883)
  %5885 = trunc i32 %5884 to i8
  %5886 = and i8 %5885, 1
  %5887 = xor i8 %5886, 1
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5887, i8* %5888, align 1
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5889, align 1
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5890, align 1
  %5891 = lshr i64 %5877, 63
  %5892 = trunc i64 %5891 to i8
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5892, i8* %5893, align 1
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5880, i8* %5894, align 1
  store %struct.Memory* %loadMem_40ad0f, %struct.Memory** %MEMORY
  %loadMem_40ad16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5896 = getelementptr inbounds %struct.GPR, %struct.GPR* %5895, i32 0, i32 33
  %5897 = getelementptr inbounds %struct.Reg, %struct.Reg* %5896, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %5897 to i64*
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 1
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %5900 to i64*
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 9
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %RSI.i648 = bitcast %union.anon* %5903 to i64*
  %5904 = load i64, i64* %RAX.i647
  %5905 = load i64, i64* %PC.i646
  %5906 = add i64 %5905, 3
  store i64 %5906, i64* %PC.i646
  store i64 %5904, i64* %RSI.i648, align 8
  store %struct.Memory* %loadMem_40ad16, %struct.Memory** %MEMORY
  %loadMem_40ad19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 33
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %5909 to i64*
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5911 = getelementptr inbounds %struct.GPR, %struct.GPR* %5910, i32 0, i32 7
  %5912 = getelementptr inbounds %struct.Reg, %struct.Reg* %5911, i32 0, i32 0
  %RDX.i644 = bitcast %union.anon* %5912 to i64*
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 9
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %RSI.i645 = bitcast %union.anon* %5915 to i64*
  %5916 = load i64, i64* %RSI.i645
  %5917 = load i64, i64* %RDX.i644
  %5918 = load i64, i64* %PC.i643
  %5919 = add i64 %5918, 3
  store i64 %5919, i64* %PC.i643
  %5920 = add i64 %5917, %5916
  store i64 %5920, i64* %RSI.i645, align 8
  %5921 = icmp ult i64 %5920, %5916
  %5922 = icmp ult i64 %5920, %5917
  %5923 = or i1 %5921, %5922
  %5924 = zext i1 %5923 to i8
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5924, i8* %5925, align 1
  %5926 = trunc i64 %5920 to i32
  %5927 = and i32 %5926, 255
  %5928 = call i32 @llvm.ctpop.i32(i32 %5927)
  %5929 = trunc i32 %5928 to i8
  %5930 = and i8 %5929, 1
  %5931 = xor i8 %5930, 1
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5931, i8* %5932, align 1
  %5933 = xor i64 %5917, %5916
  %5934 = xor i64 %5933, %5920
  %5935 = lshr i64 %5934, 4
  %5936 = trunc i64 %5935 to i8
  %5937 = and i8 %5936, 1
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5937, i8* %5938, align 1
  %5939 = icmp eq i64 %5920, 0
  %5940 = zext i1 %5939 to i8
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5940, i8* %5941, align 1
  %5942 = lshr i64 %5920, 63
  %5943 = trunc i64 %5942 to i8
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5943, i8* %5944, align 1
  %5945 = lshr i64 %5916, 63
  %5946 = lshr i64 %5917, 63
  %5947 = xor i64 %5942, %5945
  %5948 = xor i64 %5942, %5946
  %5949 = add i64 %5947, %5948
  %5950 = icmp eq i64 %5949, 2
  %5951 = zext i1 %5950 to i8
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5951, i8* %5952, align 1
  store %struct.Memory* %loadMem_40ad19, %struct.Memory** %MEMORY
  %loadMem_40ad1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5954 = getelementptr inbounds %struct.GPR, %struct.GPR* %5953, i32 0, i32 33
  %5955 = getelementptr inbounds %struct.Reg, %struct.Reg* %5954, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %5955 to i64*
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5957 = getelementptr inbounds %struct.GPR, %struct.GPR* %5956, i32 0, i32 5
  %5958 = getelementptr inbounds %struct.Reg, %struct.Reg* %5957, i32 0, i32 0
  %RCX.i641 = bitcast %union.anon* %5958 to i64*
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 9
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %RSI.i642 = bitcast %union.anon* %5961 to i64*
  %5962 = load i64, i64* %RSI.i642
  %5963 = add i64 %5962, 96
  %5964 = load i64, i64* %PC.i640
  %5965 = add i64 %5964, 3
  store i64 %5965, i64* %PC.i640
  %5966 = inttoptr i64 %5963 to i32*
  %5967 = load i32, i32* %5966
  %5968 = zext i32 %5967 to i64
  store i64 %5968, i64* %RCX.i641, align 8
  store %struct.Memory* %loadMem_40ad1c, %struct.Memory** %MEMORY
  %loadMem_40ad1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 33
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %5971 to i64*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 7
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RDX.i639 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %PC.i638
  %5976 = add i64 %5975, 8
  store i64 %5976, i64* %PC.i638
  %5977 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %5977, i64* %RDX.i639, align 8
  store %struct.Memory* %loadMem_40ad1f, %struct.Memory** %MEMORY
  %loadMem_40ad27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 33
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %5980 to i64*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5982 = getelementptr inbounds %struct.GPR, %struct.GPR* %5981, i32 0, i32 7
  %5983 = getelementptr inbounds %struct.Reg, %struct.Reg* %5982, i32 0, i32 0
  %RDX.i636 = bitcast %union.anon* %5983 to i64*
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5985 = getelementptr inbounds %struct.GPR, %struct.GPR* %5984, i32 0, i32 9
  %5986 = getelementptr inbounds %struct.Reg, %struct.Reg* %5985, i32 0, i32 0
  %RSI.i637 = bitcast %union.anon* %5986 to i64*
  %5987 = load i64, i64* %RDX.i636
  %5988 = load i64, i64* %PC.i635
  %5989 = add i64 %5988, 3
  store i64 %5989, i64* %PC.i635
  store i64 %5987, i64* %RSI.i637, align 8
  store %struct.Memory* %loadMem_40ad27, %struct.Memory** %MEMORY
  %loadMem_40ad2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5991 = getelementptr inbounds %struct.GPR, %struct.GPR* %5990, i32 0, i32 33
  %5992 = getelementptr inbounds %struct.Reg, %struct.Reg* %5991, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %5992 to i64*
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5994 = getelementptr inbounds %struct.GPR, %struct.GPR* %5993, i32 0, i32 9
  %5995 = getelementptr inbounds %struct.Reg, %struct.Reg* %5994, i32 0, i32 0
  %RSI.i634 = bitcast %union.anon* %5995 to i64*
  %5996 = load i64, i64* %RSI.i634
  %5997 = load i64, i64* %PC.i633
  %5998 = add i64 %5997, 4
  store i64 %5998, i64* %PC.i633
  %5999 = add i64 16, %5996
  store i64 %5999, i64* %RSI.i634, align 8
  %6000 = icmp ult i64 %5999, %5996
  %6001 = icmp ult i64 %5999, 16
  %6002 = or i1 %6000, %6001
  %6003 = zext i1 %6002 to i8
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6003, i8* %6004, align 1
  %6005 = trunc i64 %5999 to i32
  %6006 = and i32 %6005, 255
  %6007 = call i32 @llvm.ctpop.i32(i32 %6006)
  %6008 = trunc i32 %6007 to i8
  %6009 = and i8 %6008, 1
  %6010 = xor i8 %6009, 1
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6010, i8* %6011, align 1
  %6012 = xor i64 16, %5996
  %6013 = xor i64 %6012, %5999
  %6014 = lshr i64 %6013, 4
  %6015 = trunc i64 %6014 to i8
  %6016 = and i8 %6015, 1
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6016, i8* %6017, align 1
  %6018 = icmp eq i64 %5999, 0
  %6019 = zext i1 %6018 to i8
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6019, i8* %6020, align 1
  %6021 = lshr i64 %5999, 63
  %6022 = trunc i64 %6021 to i8
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6022, i8* %6023, align 1
  %6024 = lshr i64 %5996, 63
  %6025 = xor i64 %6021, %6024
  %6026 = add i64 %6025, %6021
  %6027 = icmp eq i64 %6026, 2
  %6028 = zext i1 %6027 to i8
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6028, i8* %6029, align 1
  store %struct.Memory* %loadMem_40ad2a, %struct.Memory** %MEMORY
  %loadMem_40ad2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6031 = getelementptr inbounds %struct.GPR, %struct.GPR* %6030, i32 0, i32 33
  %6032 = getelementptr inbounds %struct.Reg, %struct.Reg* %6031, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %6032 to i64*
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6034 = getelementptr inbounds %struct.GPR, %struct.GPR* %6033, i32 0, i32 9
  %6035 = getelementptr inbounds %struct.Reg, %struct.Reg* %6034, i32 0, i32 0
  %RSI.i632 = bitcast %union.anon* %6035 to i64*
  %6036 = load i64, i64* %RSI.i632
  %6037 = load i64, i64* %PC.i631
  %6038 = add i64 %6037, 8
  store i64 %6038, i64* %PC.i631
  store i64 %6036, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40ad2e, %struct.Memory** %MEMORY
  %loadMem_40ad36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 33
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %6041 to i64*
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 5
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %ECX.i629 = bitcast %union.anon* %6044 to i32*
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6046 = getelementptr inbounds %struct.GPR, %struct.GPR* %6045, i32 0, i32 7
  %6047 = getelementptr inbounds %struct.Reg, %struct.Reg* %6046, i32 0, i32 0
  %RDX.i630 = bitcast %union.anon* %6047 to i64*
  %6048 = load i64, i64* %RDX.i630
  %6049 = add i64 %6048, 8
  %6050 = load i32, i32* %ECX.i629
  %6051 = zext i32 %6050 to i64
  %6052 = load i64, i64* %PC.i628
  %6053 = add i64 %6052, 3
  store i64 %6053, i64* %PC.i628
  %6054 = inttoptr i64 %6049 to i32*
  store i32 %6050, i32* %6054
  store %struct.Memory* %loadMem_40ad36, %struct.Memory** %MEMORY
  %loadMem_40ad39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 33
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %6057 to i64*
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 7
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %RDX.i626 = bitcast %union.anon* %6060 to i64*
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 15
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %6063 to i64*
  %6064 = load i64, i64* %RBP.i627
  %6065 = sub i64 %6064, 4
  %6066 = load i64, i64* %PC.i625
  %6067 = add i64 %6066, 4
  store i64 %6067, i64* %PC.i625
  %6068 = inttoptr i64 %6065 to i32*
  %6069 = load i32, i32* %6068
  %6070 = sext i32 %6069 to i64
  store i64 %6070, i64* %RDX.i626, align 8
  store %struct.Memory* %loadMem_40ad39, %struct.Memory** %MEMORY
  %loadMem_40ad3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6072 = getelementptr inbounds %struct.GPR, %struct.GPR* %6071, i32 0, i32 33
  %6073 = getelementptr inbounds %struct.Reg, %struct.Reg* %6072, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %6073 to i64*
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 5
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %RCX.i623 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 7
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RDX.i624 = bitcast %union.anon* %6079 to i64*
  %6080 = load i64, i64* %RDX.i624
  %6081 = mul i64 %6080, 4
  %6082 = add i64 %6081, 11187184
  %6083 = load i64, i64* %PC.i622
  %6084 = add i64 %6083, 7
  store i64 %6084, i64* %PC.i622
  %6085 = inttoptr i64 %6082 to i32*
  %6086 = load i32, i32* %6085
  %6087 = zext i32 %6086 to i64
  store i64 %6087, i64* %RCX.i623, align 8
  store %struct.Memory* %loadMem_40ad3d, %struct.Memory** %MEMORY
  %loadMem_40ad44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 33
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 7
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RDX.i620 = bitcast %union.anon* %6093 to i64*
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6095 = getelementptr inbounds %struct.GPR, %struct.GPR* %6094, i32 0, i32 15
  %6096 = getelementptr inbounds %struct.Reg, %struct.Reg* %6095, i32 0, i32 0
  %RBP.i621 = bitcast %union.anon* %6096 to i64*
  %6097 = load i64, i64* %RBP.i621
  %6098 = sub i64 %6097, 24
  %6099 = load i64, i64* %PC.i619
  %6100 = add i64 %6099, 4
  store i64 %6100, i64* %PC.i619
  %6101 = inttoptr i64 %6098 to i32*
  %6102 = load i32, i32* %6101
  %6103 = sext i32 %6102 to i64
  store i64 %6103, i64* %RDX.i620, align 8
  store %struct.Memory* %loadMem_40ad44, %struct.Memory** %MEMORY
  %loadMem_40ad48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 33
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %6106 to i64*
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6108 = getelementptr inbounds %struct.GPR, %struct.GPR* %6107, i32 0, i32 7
  %6109 = getelementptr inbounds %struct.Reg, %struct.Reg* %6108, i32 0, i32 0
  %RDX.i618 = bitcast %union.anon* %6109 to i64*
  %6110 = load i64, i64* %RDX.i618
  %6111 = load i64, i64* %PC.i617
  %6112 = add i64 %6111, 7
  store i64 %6112, i64* %PC.i617
  %6113 = sext i64 %6110 to i128
  %6114 = and i128 %6113, -18446744073709551616
  %6115 = zext i64 %6110 to i128
  %6116 = or i128 %6114, %6115
  %6117 = mul i128 744, %6116
  %6118 = trunc i128 %6117 to i64
  store i64 %6118, i64* %RDX.i618, align 8
  %6119 = sext i64 %6118 to i128
  %6120 = icmp ne i128 %6119, %6117
  %6121 = zext i1 %6120 to i8
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6121, i8* %6122, align 1
  %6123 = trunc i128 %6117 to i32
  %6124 = and i32 %6123, 255
  %6125 = call i32 @llvm.ctpop.i32(i32 %6124)
  %6126 = trunc i32 %6125 to i8
  %6127 = and i8 %6126, 1
  %6128 = xor i8 %6127, 1
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6128, i8* %6129, align 1
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6130, align 1
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6131, align 1
  %6132 = lshr i64 %6118, 63
  %6133 = trunc i64 %6132 to i8
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6133, i8* %6134, align 1
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6121, i8* %6135, align 1
  store %struct.Memory* %loadMem_40ad48, %struct.Memory** %MEMORY
  %loadMem_40ad4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6137 = getelementptr inbounds %struct.GPR, %struct.GPR* %6136, i32 0, i32 33
  %6138 = getelementptr inbounds %struct.Reg, %struct.Reg* %6137, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %6138 to i64*
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6140 = getelementptr inbounds %struct.GPR, %struct.GPR* %6139, i32 0, i32 1
  %6141 = getelementptr inbounds %struct.Reg, %struct.Reg* %6140, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %6141 to i64*
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6143 = getelementptr inbounds %struct.GPR, %struct.GPR* %6142, i32 0, i32 9
  %6144 = getelementptr inbounds %struct.Reg, %struct.Reg* %6143, i32 0, i32 0
  %RSI.i616 = bitcast %union.anon* %6144 to i64*
  %6145 = load i64, i64* %RAX.i615
  %6146 = load i64, i64* %PC.i614
  %6147 = add i64 %6146, 3
  store i64 %6147, i64* %PC.i614
  store i64 %6145, i64* %RSI.i616, align 8
  store %struct.Memory* %loadMem_40ad4f, %struct.Memory** %MEMORY
  %loadMem_40ad52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 33
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %6150 to i64*
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 7
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %RDX.i612 = bitcast %union.anon* %6153 to i64*
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 9
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %RSI.i613 = bitcast %union.anon* %6156 to i64*
  %6157 = load i64, i64* %RSI.i613
  %6158 = load i64, i64* %RDX.i612
  %6159 = load i64, i64* %PC.i611
  %6160 = add i64 %6159, 3
  store i64 %6160, i64* %PC.i611
  %6161 = add i64 %6158, %6157
  store i64 %6161, i64* %RSI.i613, align 8
  %6162 = icmp ult i64 %6161, %6157
  %6163 = icmp ult i64 %6161, %6158
  %6164 = or i1 %6162, %6163
  %6165 = zext i1 %6164 to i8
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6165, i8* %6166, align 1
  %6167 = trunc i64 %6161 to i32
  %6168 = and i32 %6167, 255
  %6169 = call i32 @llvm.ctpop.i32(i32 %6168)
  %6170 = trunc i32 %6169 to i8
  %6171 = and i8 %6170, 1
  %6172 = xor i8 %6171, 1
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6172, i8* %6173, align 1
  %6174 = xor i64 %6158, %6157
  %6175 = xor i64 %6174, %6161
  %6176 = lshr i64 %6175, 4
  %6177 = trunc i64 %6176 to i8
  %6178 = and i8 %6177, 1
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6178, i8* %6179, align 1
  %6180 = icmp eq i64 %6161, 0
  %6181 = zext i1 %6180 to i8
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6181, i8* %6182, align 1
  %6183 = lshr i64 %6161, 63
  %6184 = trunc i64 %6183 to i8
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6184, i8* %6185, align 1
  %6186 = lshr i64 %6157, 63
  %6187 = lshr i64 %6158, 63
  %6188 = xor i64 %6183, %6186
  %6189 = xor i64 %6183, %6187
  %6190 = add i64 %6188, %6189
  %6191 = icmp eq i64 %6190, 2
  %6192 = zext i1 %6191 to i8
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6192, i8* %6193, align 1
  store %struct.Memory* %loadMem_40ad52, %struct.Memory** %MEMORY
  %loadMem_40ad55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 33
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %6196 to i64*
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 7
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %6199 to i64*
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 15
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %6202 to i64*
  %6203 = load i64, i64* %RBP.i610
  %6204 = sub i64 %6203, 24
  %6205 = load i64, i64* %PC.i608
  %6206 = add i64 %6205, 4
  store i64 %6206, i64* %PC.i608
  %6207 = inttoptr i64 %6204 to i32*
  %6208 = load i32, i32* %6207
  %6209 = sext i32 %6208 to i64
  store i64 %6209, i64* %RDX.i609, align 8
  store %struct.Memory* %loadMem_40ad55, %struct.Memory** %MEMORY
  %loadMem_40ad59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 33
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %6212 to i64*
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 7
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %RDX.i607 = bitcast %union.anon* %6215 to i64*
  %6216 = load i64, i64* %RDX.i607
  %6217 = load i64, i64* %PC.i606
  %6218 = add i64 %6217, 7
  store i64 %6218, i64* %PC.i606
  %6219 = sext i64 %6216 to i128
  %6220 = and i128 %6219, -18446744073709551616
  %6221 = zext i64 %6216 to i128
  %6222 = or i128 %6220, %6221
  %6223 = mul i128 744, %6222
  %6224 = trunc i128 %6223 to i64
  store i64 %6224, i64* %RDX.i607, align 8
  %6225 = sext i64 %6224 to i128
  %6226 = icmp ne i128 %6225, %6223
  %6227 = zext i1 %6226 to i8
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6227, i8* %6228, align 1
  %6229 = trunc i128 %6223 to i32
  %6230 = and i32 %6229, 255
  %6231 = call i32 @llvm.ctpop.i32(i32 %6230)
  %6232 = trunc i32 %6231 to i8
  %6233 = and i8 %6232, 1
  %6234 = xor i8 %6233, 1
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6234, i8* %6235, align 1
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6236, align 1
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6237, align 1
  %6238 = lshr i64 %6224, 63
  %6239 = trunc i64 %6238 to i8
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6239, i8* %6240, align 1
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6227, i8* %6241, align 1
  store %struct.Memory* %loadMem_40ad59, %struct.Memory** %MEMORY
  %loadMem_40ad60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6243 = getelementptr inbounds %struct.GPR, %struct.GPR* %6242, i32 0, i32 33
  %6244 = getelementptr inbounds %struct.Reg, %struct.Reg* %6243, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %6244 to i64*
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 1
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %6247 to i64*
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 11
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %RDI.i605 = bitcast %union.anon* %6250 to i64*
  %6251 = load i64, i64* %RAX.i604
  %6252 = load i64, i64* %PC.i603
  %6253 = add i64 %6252, 3
  store i64 %6253, i64* %PC.i603
  store i64 %6251, i64* %RDI.i605, align 8
  store %struct.Memory* %loadMem_40ad60, %struct.Memory** %MEMORY
  %loadMem_40ad63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6255 = getelementptr inbounds %struct.GPR, %struct.GPR* %6254, i32 0, i32 33
  %6256 = getelementptr inbounds %struct.Reg, %struct.Reg* %6255, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %6256 to i64*
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6258 = getelementptr inbounds %struct.GPR, %struct.GPR* %6257, i32 0, i32 7
  %6259 = getelementptr inbounds %struct.Reg, %struct.Reg* %6258, i32 0, i32 0
  %RDX.i601 = bitcast %union.anon* %6259 to i64*
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6261 = getelementptr inbounds %struct.GPR, %struct.GPR* %6260, i32 0, i32 11
  %6262 = getelementptr inbounds %struct.Reg, %struct.Reg* %6261, i32 0, i32 0
  %RDI.i602 = bitcast %union.anon* %6262 to i64*
  %6263 = load i64, i64* %RDI.i602
  %6264 = load i64, i64* %RDX.i601
  %6265 = load i64, i64* %PC.i600
  %6266 = add i64 %6265, 3
  store i64 %6266, i64* %PC.i600
  %6267 = add i64 %6264, %6263
  store i64 %6267, i64* %RDI.i602, align 8
  %6268 = icmp ult i64 %6267, %6263
  %6269 = icmp ult i64 %6267, %6264
  %6270 = or i1 %6268, %6269
  %6271 = zext i1 %6270 to i8
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6271, i8* %6272, align 1
  %6273 = trunc i64 %6267 to i32
  %6274 = and i32 %6273, 255
  %6275 = call i32 @llvm.ctpop.i32(i32 %6274)
  %6276 = trunc i32 %6275 to i8
  %6277 = and i8 %6276, 1
  %6278 = xor i8 %6277, 1
  %6279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6278, i8* %6279, align 1
  %6280 = xor i64 %6264, %6263
  %6281 = xor i64 %6280, %6267
  %6282 = lshr i64 %6281, 4
  %6283 = trunc i64 %6282 to i8
  %6284 = and i8 %6283, 1
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6284, i8* %6285, align 1
  %6286 = icmp eq i64 %6267, 0
  %6287 = zext i1 %6286 to i8
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6287, i8* %6288, align 1
  %6289 = lshr i64 %6267, 63
  %6290 = trunc i64 %6289 to i8
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6290, i8* %6291, align 1
  %6292 = lshr i64 %6263, 63
  %6293 = lshr i64 %6264, 63
  %6294 = xor i64 %6289, %6292
  %6295 = xor i64 %6289, %6293
  %6296 = add i64 %6294, %6295
  %6297 = icmp eq i64 %6296, 2
  %6298 = zext i1 %6297 to i8
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6298, i8* %6299, align 1
  store %struct.Memory* %loadMem_40ad63, %struct.Memory** %MEMORY
  %loadMem_40ad66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 33
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %6302 to i64*
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 17
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %R8D.i598 = bitcast %union.anon* %6305 to i32*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 11
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RDI.i599 = bitcast %union.anon* %6308 to i64*
  %6309 = bitcast i32* %R8D.i598 to i64*
  %6310 = load i64, i64* %RDI.i599
  %6311 = add i64 %6310, 96
  %6312 = load i64, i64* %PC.i597
  %6313 = add i64 %6312, 4
  store i64 %6313, i64* %PC.i597
  %6314 = inttoptr i64 %6311 to i32*
  %6315 = load i32, i32* %6314
  %6316 = zext i32 %6315 to i64
  store i64 %6316, i64* %6309, align 8
  store %struct.Memory* %loadMem_40ad66, %struct.Memory** %MEMORY
  %loadMem_40ad6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 33
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %6319 to i64*
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6321 = getelementptr inbounds %struct.GPR, %struct.GPR* %6320, i32 0, i32 17
  %6322 = getelementptr inbounds %struct.Reg, %struct.Reg* %6321, i32 0, i32 0
  %R8D.i595 = bitcast %union.anon* %6322 to i32*
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 19
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %R9D.i596 = bitcast %union.anon* %6325 to i32*
  %6326 = bitcast i32* %R9D.i596 to i64*
  %6327 = load i32, i32* %R8D.i595
  %6328 = zext i32 %6327 to i64
  %6329 = load i64, i64* %PC.i594
  %6330 = add i64 %6329, 3
  store i64 %6330, i64* %PC.i594
  %6331 = and i64 %6328, 4294967295
  store i64 %6331, i64* %6326, align 8
  store %struct.Memory* %loadMem_40ad6a, %struct.Memory** %MEMORY
  %loadMem_40ad6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 33
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %6334 to i64*
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 19
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %R9D.i593 = bitcast %union.anon* %6337 to i32*
  %6338 = bitcast i32* %R9D.i593 to i64*
  %6339 = load i32, i32* %R9D.i593
  %6340 = zext i32 %6339 to i64
  %6341 = load i64, i64* %PC.i592
  %6342 = add i64 %6341, 4
  store i64 %6342, i64* %PC.i592
  %6343 = add i32 1, %6339
  %6344 = zext i32 %6343 to i64
  store i64 %6344, i64* %6338, align 8
  %6345 = icmp ult i32 %6343, %6339
  %6346 = icmp ult i32 %6343, 1
  %6347 = or i1 %6345, %6346
  %6348 = zext i1 %6347 to i8
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6348, i8* %6349, align 1
  %6350 = and i32 %6343, 255
  %6351 = call i32 @llvm.ctpop.i32(i32 %6350)
  %6352 = trunc i32 %6351 to i8
  %6353 = and i8 %6352, 1
  %6354 = xor i8 %6353, 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6354, i8* %6355, align 1
  %6356 = xor i64 1, %6340
  %6357 = trunc i64 %6356 to i32
  %6358 = xor i32 %6357, %6343
  %6359 = lshr i32 %6358, 4
  %6360 = trunc i32 %6359 to i8
  %6361 = and i8 %6360, 1
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6361, i8* %6362, align 1
  %6363 = icmp eq i32 %6343, 0
  %6364 = zext i1 %6363 to i8
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6364, i8* %6365, align 1
  %6366 = lshr i32 %6343, 31
  %6367 = trunc i32 %6366 to i8
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6367, i8* %6368, align 1
  %6369 = lshr i32 %6339, 31
  %6370 = xor i32 %6366, %6369
  %6371 = add i32 %6370, %6366
  %6372 = icmp eq i32 %6371, 2
  %6373 = zext i1 %6372 to i8
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6373, i8* %6374, align 1
  store %struct.Memory* %loadMem_40ad6d, %struct.Memory** %MEMORY
  %loadMem_40ad71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 33
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %6377 to i64*
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6379 = getelementptr inbounds %struct.GPR, %struct.GPR* %6378, i32 0, i32 19
  %6380 = getelementptr inbounds %struct.Reg, %struct.Reg* %6379, i32 0, i32 0
  %R9D.i590 = bitcast %union.anon* %6380 to i32*
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6382 = getelementptr inbounds %struct.GPR, %struct.GPR* %6381, i32 0, i32 11
  %6383 = getelementptr inbounds %struct.Reg, %struct.Reg* %6382, i32 0, i32 0
  %RDI.i591 = bitcast %union.anon* %6383 to i64*
  %6384 = load i64, i64* %RDI.i591
  %6385 = add i64 %6384, 96
  %6386 = load i32, i32* %R9D.i590
  %6387 = zext i32 %6386 to i64
  %6388 = load i64, i64* %PC.i589
  %6389 = add i64 %6388, 4
  store i64 %6389, i64* %PC.i589
  %6390 = inttoptr i64 %6385 to i32*
  store i32 %6386, i32* %6390
  store %struct.Memory* %loadMem_40ad71, %struct.Memory** %MEMORY
  %loadMem_40ad75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6392 = getelementptr inbounds %struct.GPR, %struct.GPR* %6391, i32 0, i32 33
  %6393 = getelementptr inbounds %struct.Reg, %struct.Reg* %6392, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %6393 to i64*
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6395 = getelementptr inbounds %struct.GPR, %struct.GPR* %6394, i32 0, i32 17
  %6396 = getelementptr inbounds %struct.Reg, %struct.Reg* %6395, i32 0, i32 0
  %R8D.i587 = bitcast %union.anon* %6396 to i32*
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6398 = getelementptr inbounds %struct.GPR, %struct.GPR* %6397, i32 0, i32 7
  %6399 = getelementptr inbounds %struct.Reg, %struct.Reg* %6398, i32 0, i32 0
  %RDX.i588 = bitcast %union.anon* %6399 to i64*
  %6400 = load i32, i32* %R8D.i587
  %6401 = zext i32 %6400 to i64
  %6402 = load i64, i64* %PC.i586
  %6403 = add i64 %6402, 3
  store i64 %6403, i64* %PC.i586
  %6404 = shl i64 %6401, 32
  %6405 = ashr exact i64 %6404, 32
  store i64 %6405, i64* %RDX.i588, align 8
  store %struct.Memory* %loadMem_40ad75, %struct.Memory** %MEMORY
  %loadMem_40ad78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6407 = getelementptr inbounds %struct.GPR, %struct.GPR* %6406, i32 0, i32 33
  %6408 = getelementptr inbounds %struct.Reg, %struct.Reg* %6407, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %6408 to i64*
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6410 = getelementptr inbounds %struct.GPR, %struct.GPR* %6409, i32 0, i32 5
  %6411 = getelementptr inbounds %struct.Reg, %struct.Reg* %6410, i32 0, i32 0
  %ECX.i583 = bitcast %union.anon* %6411 to i32*
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6413 = getelementptr inbounds %struct.GPR, %struct.GPR* %6412, i32 0, i32 7
  %6414 = getelementptr inbounds %struct.Reg, %struct.Reg* %6413, i32 0, i32 0
  %RDX.i584 = bitcast %union.anon* %6414 to i64*
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 9
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %RSI.i585 = bitcast %union.anon* %6417 to i64*
  %6418 = load i64, i64* %RSI.i585
  %6419 = load i64, i64* %RDX.i584
  %6420 = mul i64 %6419, 4
  %6421 = add i64 %6418, 100
  %6422 = add i64 %6421, %6420
  %6423 = load i32, i32* %ECX.i583
  %6424 = zext i32 %6423 to i64
  %6425 = load i64, i64* %PC.i582
  %6426 = add i64 %6425, 4
  store i64 %6426, i64* %PC.i582
  %6427 = inttoptr i64 %6422 to i32*
  store i32 %6423, i32* %6427
  store %struct.Memory* %loadMem_40ad78, %struct.Memory** %MEMORY
  %loadMem_40ad7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 5
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %6433 to i64*
  %6434 = load i64, i64* %PC.i580
  %6435 = add i64 %6434, 7
  store i64 %6435, i64* %PC.i580
  %6436 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6437 = zext i32 %6436 to i64
  store i64 %6437, i64* %RCX.i581, align 8
  store %struct.Memory* %loadMem_40ad7c, %struct.Memory** %MEMORY
  %loadMem_40ad83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 17
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %R8D.i578 = bitcast %union.anon* %6443 to i32*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 15
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %6446 to i64*
  %6447 = bitcast i32* %R8D.i578 to i64*
  %6448 = load i64, i64* %RBP.i579
  %6449 = sub i64 %6448, 4
  %6450 = load i64, i64* %PC.i577
  %6451 = add i64 %6450, 4
  store i64 %6451, i64* %PC.i577
  %6452 = inttoptr i64 %6449 to i32*
  %6453 = load i32, i32* %6452
  %6454 = zext i32 %6453 to i64
  store i64 %6454, i64* %6447, align 8
  store %struct.Memory* %loadMem_40ad83, %struct.Memory** %MEMORY
  %loadMem_40ad87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 33
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %6457 to i64*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 17
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %R8D.i576 = bitcast %union.anon* %6460 to i32*
  %6461 = bitcast i32* %R8D.i576 to i64*
  %6462 = load i32, i32* %R8D.i576
  %6463 = zext i32 %6462 to i64
  %6464 = load i64, i64* %PC.i575
  %6465 = add i64 %6464, 4
  store i64 %6465, i64* %PC.i575
  %6466 = sub i32 %6462, 1
  %6467 = zext i32 %6466 to i64
  store i64 %6467, i64* %6461, align 8
  %6468 = icmp ult i32 %6462, 1
  %6469 = zext i1 %6468 to i8
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6469, i8* %6470, align 1
  %6471 = and i32 %6466, 255
  %6472 = call i32 @llvm.ctpop.i32(i32 %6471)
  %6473 = trunc i32 %6472 to i8
  %6474 = and i8 %6473, 1
  %6475 = xor i8 %6474, 1
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6475, i8* %6476, align 1
  %6477 = xor i64 1, %6463
  %6478 = trunc i64 %6477 to i32
  %6479 = xor i32 %6478, %6466
  %6480 = lshr i32 %6479, 4
  %6481 = trunc i32 %6480 to i8
  %6482 = and i8 %6481, 1
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6482, i8* %6483, align 1
  %6484 = icmp eq i32 %6466, 0
  %6485 = zext i1 %6484 to i8
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6485, i8* %6486, align 1
  %6487 = lshr i32 %6466, 31
  %6488 = trunc i32 %6487 to i8
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6488, i8* %6489, align 1
  %6490 = lshr i32 %6462, 31
  %6491 = xor i32 %6487, %6490
  %6492 = add i32 %6491, %6490
  %6493 = icmp eq i32 %6492, 2
  %6494 = zext i1 %6493 to i8
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6494, i8* %6495, align 1
  store %struct.Memory* %loadMem_40ad87, %struct.Memory** %MEMORY
  %loadMem_40ad8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6497 = getelementptr inbounds %struct.GPR, %struct.GPR* %6496, i32 0, i32 33
  %6498 = getelementptr inbounds %struct.Reg, %struct.Reg* %6497, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %6498 to i64*
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6500 = getelementptr inbounds %struct.GPR, %struct.GPR* %6499, i32 0, i32 17
  %6501 = getelementptr inbounds %struct.Reg, %struct.Reg* %6500, i32 0, i32 0
  %R8D.i573 = bitcast %union.anon* %6501 to i32*
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 7
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %6504 to i64*
  %6505 = load i32, i32* %R8D.i573
  %6506 = zext i32 %6505 to i64
  %6507 = load i64, i64* %PC.i572
  %6508 = add i64 %6507, 3
  store i64 %6508, i64* %PC.i572
  %6509 = shl i64 %6506, 32
  %6510 = ashr exact i64 %6509, 32
  store i64 %6510, i64* %RDX.i574, align 8
  store %struct.Memory* %loadMem_40ad8b, %struct.Memory** %MEMORY
  %loadMem_40ad8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6512 = getelementptr inbounds %struct.GPR, %struct.GPR* %6511, i32 0, i32 33
  %6513 = getelementptr inbounds %struct.Reg, %struct.Reg* %6512, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %6513 to i64*
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6515 = getelementptr inbounds %struct.GPR, %struct.GPR* %6514, i32 0, i32 7
  %6516 = getelementptr inbounds %struct.Reg, %struct.Reg* %6515, i32 0, i32 0
  %RDX.i571 = bitcast %union.anon* %6516 to i64*
  %6517 = load i64, i64* %RDX.i571
  %6518 = mul i64 %6517, 4
  %6519 = add i64 %6518, 11187184
  %6520 = load i64, i64* %PC.i570
  %6521 = add i64 %6520, 8
  store i64 %6521, i64* %PC.i570
  %6522 = inttoptr i64 %6519 to i32*
  %6523 = load i32, i32* %6522
  %6524 = sext i32 %6523 to i64
  store i64 %6524, i64* %RDX.i571, align 8
  store %struct.Memory* %loadMem_40ad8e, %struct.Memory** %MEMORY
  %loadMem_40ad96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 33
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %6527 to i64*
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 7
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %6530 to i64*
  %6531 = load i64, i64* %RDX.i569
  %6532 = load i64, i64* %PC.i568
  %6533 = add i64 %6532, 7
  store i64 %6533, i64* %PC.i568
  %6534 = sext i64 %6531 to i128
  %6535 = and i128 %6534, -18446744073709551616
  %6536 = zext i64 %6531 to i128
  %6537 = or i128 %6535, %6536
  %6538 = mul i128 744, %6537
  %6539 = trunc i128 %6538 to i64
  store i64 %6539, i64* %RDX.i569, align 8
  %6540 = sext i64 %6539 to i128
  %6541 = icmp ne i128 %6540, %6538
  %6542 = zext i1 %6541 to i8
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6542, i8* %6543, align 1
  %6544 = trunc i128 %6538 to i32
  %6545 = and i32 %6544, 255
  %6546 = call i32 @llvm.ctpop.i32(i32 %6545)
  %6547 = trunc i32 %6546 to i8
  %6548 = and i8 %6547, 1
  %6549 = xor i8 %6548, 1
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6549, i8* %6550, align 1
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6551, align 1
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6552, align 1
  %6553 = lshr i64 %6539, 63
  %6554 = trunc i64 %6553 to i8
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6554, i8* %6555, align 1
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6542, i8* %6556, align 1
  store %struct.Memory* %loadMem_40ad96, %struct.Memory** %MEMORY
  %loadMem_40ad9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6558 = getelementptr inbounds %struct.GPR, %struct.GPR* %6557, i32 0, i32 33
  %6559 = getelementptr inbounds %struct.Reg, %struct.Reg* %6558, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %6559 to i64*
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 1
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %RAX.i566 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 7
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %6565 to i64*
  %6566 = load i64, i64* %RAX.i566
  %6567 = load i64, i64* %RDX.i567
  %6568 = load i64, i64* %PC.i565
  %6569 = add i64 %6568, 3
  store i64 %6569, i64* %PC.i565
  %6570 = add i64 %6567, %6566
  store i64 %6570, i64* %RAX.i566, align 8
  %6571 = icmp ult i64 %6570, %6566
  %6572 = icmp ult i64 %6570, %6567
  %6573 = or i1 %6571, %6572
  %6574 = zext i1 %6573 to i8
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6574, i8* %6575, align 1
  %6576 = trunc i64 %6570 to i32
  %6577 = and i32 %6576, 255
  %6578 = call i32 @llvm.ctpop.i32(i32 %6577)
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = xor i8 %6580, 1
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6581, i8* %6582, align 1
  %6583 = xor i64 %6567, %6566
  %6584 = xor i64 %6583, %6570
  %6585 = lshr i64 %6584, 4
  %6586 = trunc i64 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6587, i8* %6588, align 1
  %6589 = icmp eq i64 %6570, 0
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i64 %6570, 63
  %6593 = trunc i64 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i64 %6566, 63
  %6596 = lshr i64 %6567, 63
  %6597 = xor i64 %6592, %6595
  %6598 = xor i64 %6592, %6596
  %6599 = add i64 %6597, %6598
  %6600 = icmp eq i64 %6599, 2
  %6601 = zext i1 %6600 to i8
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6601, i8* %6602, align 1
  store %struct.Memory* %loadMem_40ad9d, %struct.Memory** %MEMORY
  %loadMem_40ada0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 33
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %6605 to i64*
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 5
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %ECX.i563 = bitcast %union.anon* %6608 to i32*
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 1
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %6611 to i64*
  %6612 = load i64, i64* %RAX.i564
  %6613 = add i64 %6612, 740
  %6614 = load i32, i32* %ECX.i563
  %6615 = zext i32 %6614 to i64
  %6616 = load i64, i64* %PC.i562
  %6617 = add i64 %6616, 6
  store i64 %6617, i64* %PC.i562
  %6618 = inttoptr i64 %6613 to i32*
  store i32 %6614, i32* %6618
  store %struct.Memory* %loadMem_40ada0, %struct.Memory** %MEMORY
  br label %block_.L_40ada6

block_.L_40ada6:                                  ; preds = %block_40ac86, %block_40ac4e, %block_.L_40ac34
  %loadMem_40ada6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %6621 to i64*
  %6622 = load i64, i64* %PC.i561
  %6623 = add i64 %6622, 5
  %6624 = load i64, i64* %PC.i561
  %6625 = add i64 %6624, 5
  store i64 %6625, i64* %PC.i561
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6623, i64* %6626, align 8
  store %struct.Memory* %loadMem_40ada6, %struct.Memory** %MEMORY
  br label %block_.L_40adab

block_.L_40adab:                                  ; preds = %block_.L_40ada6, %block_.L_40ac0e
  %loadMem_40adab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6628 = getelementptr inbounds %struct.GPR, %struct.GPR* %6627, i32 0, i32 33
  %6629 = getelementptr inbounds %struct.Reg, %struct.Reg* %6628, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %6629 to i64*
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6631 = getelementptr inbounds %struct.GPR, %struct.GPR* %6630, i32 0, i32 1
  %6632 = getelementptr inbounds %struct.Reg, %struct.Reg* %6631, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %6632 to i64*
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 15
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %6635 to i64*
  %6636 = load i64, i64* %RBP.i560
  %6637 = sub i64 %6636, 4
  %6638 = load i64, i64* %PC.i558
  %6639 = add i64 %6638, 3
  store i64 %6639, i64* %PC.i558
  %6640 = inttoptr i64 %6637 to i32*
  %6641 = load i32, i32* %6640
  %6642 = zext i32 %6641 to i64
  store i64 %6642, i64* %RAX.i559, align 8
  store %struct.Memory* %loadMem_40adab, %struct.Memory** %MEMORY
  %loadMem_40adae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 33
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %6645 to i64*
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 1
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %6648 to i64*
  %6649 = load i64, i64* %RAX.i557
  %6650 = load i64, i64* %PC.i556
  %6651 = add i64 %6650, 3
  store i64 %6651, i64* %PC.i556
  %6652 = trunc i64 %6649 to i32
  %6653 = sub i32 %6652, 20
  %6654 = zext i32 %6653 to i64
  store i64 %6654, i64* %RAX.i557, align 8
  %6655 = icmp ult i32 %6652, 20
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6656, i8* %6657, align 1
  %6658 = and i32 %6653, 255
  %6659 = call i32 @llvm.ctpop.i32(i32 %6658)
  %6660 = trunc i32 %6659 to i8
  %6661 = and i8 %6660, 1
  %6662 = xor i8 %6661, 1
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6662, i8* %6663, align 1
  %6664 = xor i64 20, %6649
  %6665 = trunc i64 %6664 to i32
  %6666 = xor i32 %6665, %6653
  %6667 = lshr i32 %6666, 4
  %6668 = trunc i32 %6667 to i8
  %6669 = and i8 %6668, 1
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6669, i8* %6670, align 1
  %6671 = icmp eq i32 %6653, 0
  %6672 = zext i1 %6671 to i8
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6672, i8* %6673, align 1
  %6674 = lshr i32 %6653, 31
  %6675 = trunc i32 %6674 to i8
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6675, i8* %6676, align 1
  %6677 = lshr i32 %6652, 31
  %6678 = xor i32 %6674, %6677
  %6679 = add i32 %6678, %6677
  %6680 = icmp eq i32 %6679, 2
  %6681 = zext i1 %6680 to i8
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6681, i8* %6682, align 1
  store %struct.Memory* %loadMem_40adae, %struct.Memory** %MEMORY
  %loadMem_40adb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 33
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %6685 to i64*
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 1
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %EAX.i554 = bitcast %union.anon* %6688 to i32*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 5
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RCX.i555 = bitcast %union.anon* %6691 to i64*
  %6692 = load i32, i32* %EAX.i554
  %6693 = zext i32 %6692 to i64
  %6694 = load i64, i64* %PC.i553
  %6695 = add i64 %6694, 3
  store i64 %6695, i64* %PC.i553
  %6696 = shl i64 %6693, 32
  %6697 = ashr exact i64 %6696, 32
  store i64 %6697, i64* %RCX.i555, align 8
  store %struct.Memory* %loadMem_40adb1, %struct.Memory** %MEMORY
  %loadMem_40adb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 33
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 1
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 5
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %6706 to i64*
  %6707 = load i64, i64* %RCX.i552
  %6708 = add i64 %6707, 12099168
  %6709 = load i64, i64* %PC.i550
  %6710 = add i64 %6709, 8
  store i64 %6710, i64* %PC.i550
  %6711 = inttoptr i64 %6708 to i8*
  %6712 = load i8, i8* %6711
  %6713 = zext i8 %6712 to i64
  store i64 %6713, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_40adb4, %struct.Memory** %MEMORY
  %loadMem_40adbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6715 = getelementptr inbounds %struct.GPR, %struct.GPR* %6714, i32 0, i32 33
  %6716 = getelementptr inbounds %struct.Reg, %struct.Reg* %6715, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %6716 to i64*
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6718 = getelementptr inbounds %struct.GPR, %struct.GPR* %6717, i32 0, i32 1
  %6719 = getelementptr inbounds %struct.Reg, %struct.Reg* %6718, i32 0, i32 0
  %EAX.i549 = bitcast %union.anon* %6719 to i32*
  %6720 = load i32, i32* %EAX.i549
  %6721 = zext i32 %6720 to i64
  %6722 = load i64, i64* %PC.i548
  %6723 = add i64 %6722, 3
  store i64 %6723, i64* %PC.i548
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6724, align 1
  %6725 = and i32 %6720, 255
  %6726 = call i32 @llvm.ctpop.i32(i32 %6725)
  %6727 = trunc i32 %6726 to i8
  %6728 = and i8 %6727, 1
  %6729 = xor i8 %6728, 1
  %6730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6729, i8* %6730, align 1
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6731, align 1
  %6732 = icmp eq i32 %6720, 0
  %6733 = zext i1 %6732 to i8
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6733, i8* %6734, align 1
  %6735 = lshr i32 %6720, 31
  %6736 = trunc i32 %6735 to i8
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6736, i8* %6737, align 1
  %6738 = lshr i32 %6720, 31
  %6739 = xor i32 %6735, %6738
  %6740 = add i32 %6739, %6738
  %6741 = icmp eq i32 %6740, 2
  %6742 = zext i1 %6741 to i8
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6742, i8* %6743, align 1
  store %struct.Memory* %loadMem_40adbc, %struct.Memory** %MEMORY
  %loadMem_40adbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6745 = getelementptr inbounds %struct.GPR, %struct.GPR* %6744, i32 0, i32 33
  %6746 = getelementptr inbounds %struct.Reg, %struct.Reg* %6745, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %6746 to i64*
  %6747 = load i64, i64* %PC.i547
  %6748 = add i64 %6747, 138
  %6749 = load i64, i64* %PC.i547
  %6750 = add i64 %6749, 6
  %6751 = load i64, i64* %PC.i547
  %6752 = add i64 %6751, 6
  store i64 %6752, i64* %PC.i547
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6754 = load i8, i8* %6753, align 1
  %6755 = icmp eq i8 %6754, 0
  %6756 = zext i1 %6755 to i8
  store i8 %6756, i8* %BRANCH_TAKEN, align 1
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6758 = select i1 %6755, i64 %6748, i64 %6750
  store i64 %6758, i64* %6757, align 8
  store %struct.Memory* %loadMem_40adbf, %struct.Memory** %MEMORY
  %loadBr_40adbf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40adbf = icmp eq i8 %loadBr_40adbf, 1
  br i1 %cmpBr_40adbf, label %block_.L_40ae49, label %block_40adc5

block_40adc5:                                     ; preds = %block_.L_40adab
  %loadMem_40adc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6760 = getelementptr inbounds %struct.GPR, %struct.GPR* %6759, i32 0, i32 33
  %6761 = getelementptr inbounds %struct.Reg, %struct.Reg* %6760, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %6761 to i64*
  %6762 = load i64, i64* %PC.i546
  %6763 = add i64 %6762, 5
  %6764 = load i64, i64* %PC.i546
  %6765 = add i64 %6764, 5
  store i64 %6765, i64* %PC.i546
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6763, i64* %6766, align 8
  store %struct.Memory* %loadMem_40adc5, %struct.Memory** %MEMORY
  br label %block_.L_40adca

block_.L_40adca:                                  ; preds = %block_40adc5
  %loadMem_40adca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 33
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %6769 to i64*
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 1
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %6772 to i64*
  %6773 = load i64, i64* %PC.i544
  %6774 = add i64 %6773, 10
  store i64 %6774, i64* %PC.i544
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_40adca, %struct.Memory** %MEMORY
  %loadMem_40add4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 33
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %6777 to i64*
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6779 = getelementptr inbounds %struct.GPR, %struct.GPR* %6778, i32 0, i32 5
  %6780 = getelementptr inbounds %struct.Reg, %struct.Reg* %6779, i32 0, i32 0
  %RCX.i542 = bitcast %union.anon* %6780 to i64*
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6782 = getelementptr inbounds %struct.GPR, %struct.GPR* %6781, i32 0, i32 15
  %6783 = getelementptr inbounds %struct.Reg, %struct.Reg* %6782, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %6783 to i64*
  %6784 = load i64, i64* %RBP.i543
  %6785 = sub i64 %6784, 8
  %6786 = load i64, i64* %PC.i541
  %6787 = add i64 %6786, 4
  store i64 %6787, i64* %PC.i541
  %6788 = inttoptr i64 %6785 to i32*
  %6789 = load i32, i32* %6788
  %6790 = sext i32 %6789 to i64
  store i64 %6790, i64* %RCX.i542, align 8
  store %struct.Memory* %loadMem_40add4, %struct.Memory** %MEMORY
  %loadMem_40add8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 33
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %6793 to i64*
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 5
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %RCX.i540 = bitcast %union.anon* %6796 to i64*
  %6797 = load i64, i64* %RCX.i540
  %6798 = load i64, i64* %PC.i539
  %6799 = add i64 %6798, 7
  store i64 %6799, i64* %PC.i539
  %6800 = sext i64 %6797 to i128
  %6801 = and i128 %6800, -18446744073709551616
  %6802 = zext i64 %6797 to i128
  %6803 = or i128 %6801, %6802
  %6804 = mul i128 744, %6803
  %6805 = trunc i128 %6804 to i64
  store i64 %6805, i64* %RCX.i540, align 8
  %6806 = sext i64 %6805 to i128
  %6807 = icmp ne i128 %6806, %6804
  %6808 = zext i1 %6807 to i8
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6808, i8* %6809, align 1
  %6810 = trunc i128 %6804 to i32
  %6811 = and i32 %6810, 255
  %6812 = call i32 @llvm.ctpop.i32(i32 %6811)
  %6813 = trunc i32 %6812 to i8
  %6814 = and i8 %6813, 1
  %6815 = xor i8 %6814, 1
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6815, i8* %6816, align 1
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6817, align 1
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6818, align 1
  %6819 = lshr i64 %6805, 63
  %6820 = trunc i64 %6819 to i8
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6820, i8* %6821, align 1
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6808, i8* %6822, align 1
  store %struct.Memory* %loadMem_40add8, %struct.Memory** %MEMORY
  %loadMem_40addf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 33
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %6825 to i64*
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 1
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 5
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %6831 to i64*
  %6832 = load i64, i64* %RAX.i537
  %6833 = load i64, i64* %RCX.i538
  %6834 = load i64, i64* %PC.i536
  %6835 = add i64 %6834, 3
  store i64 %6835, i64* %PC.i536
  %6836 = add i64 %6833, %6832
  store i64 %6836, i64* %RAX.i537, align 8
  %6837 = icmp ult i64 %6836, %6832
  %6838 = icmp ult i64 %6836, %6833
  %6839 = or i1 %6837, %6838
  %6840 = zext i1 %6839 to i8
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6840, i8* %6841, align 1
  %6842 = trunc i64 %6836 to i32
  %6843 = and i32 %6842, 255
  %6844 = call i32 @llvm.ctpop.i32(i32 %6843)
  %6845 = trunc i32 %6844 to i8
  %6846 = and i8 %6845, 1
  %6847 = xor i8 %6846, 1
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6847, i8* %6848, align 1
  %6849 = xor i64 %6833, %6832
  %6850 = xor i64 %6849, %6836
  %6851 = lshr i64 %6850, 4
  %6852 = trunc i64 %6851 to i8
  %6853 = and i8 %6852, 1
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6853, i8* %6854, align 1
  %6855 = icmp eq i64 %6836, 0
  %6856 = zext i1 %6855 to i8
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6856, i8* %6857, align 1
  %6858 = lshr i64 %6836, 63
  %6859 = trunc i64 %6858 to i8
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6859, i8* %6860, align 1
  %6861 = lshr i64 %6832, 63
  %6862 = lshr i64 %6833, 63
  %6863 = xor i64 %6858, %6861
  %6864 = xor i64 %6858, %6862
  %6865 = add i64 %6863, %6864
  %6866 = icmp eq i64 %6865, 2
  %6867 = zext i1 %6866 to i8
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6867, i8* %6868, align 1
  store %struct.Memory* %loadMem_40addf, %struct.Memory** %MEMORY
  %loadMem_40ade2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 33
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 1
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %6874 to i64*
  %6875 = load i64, i64* %RAX.i535
  %6876 = add i64 %6875, 12
  %6877 = load i64, i64* %PC.i534
  %6878 = add i64 %6877, 4
  store i64 %6878, i64* %PC.i534
  %6879 = inttoptr i64 %6876 to i32*
  %6880 = load i32, i32* %6879
  %6881 = sub i32 %6880, 20
  %6882 = icmp ult i32 %6880, 20
  %6883 = zext i1 %6882 to i8
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6883, i8* %6884, align 1
  %6885 = and i32 %6881, 255
  %6886 = call i32 @llvm.ctpop.i32(i32 %6885)
  %6887 = trunc i32 %6886 to i8
  %6888 = and i8 %6887, 1
  %6889 = xor i8 %6888, 1
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6889, i8* %6890, align 1
  %6891 = xor i32 %6880, 20
  %6892 = xor i32 %6891, %6881
  %6893 = lshr i32 %6892, 4
  %6894 = trunc i32 %6893 to i8
  %6895 = and i8 %6894, 1
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6895, i8* %6896, align 1
  %6897 = icmp eq i32 %6881, 0
  %6898 = zext i1 %6897 to i8
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6898, i8* %6899, align 1
  %6900 = lshr i32 %6881, 31
  %6901 = trunc i32 %6900 to i8
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6901, i8* %6902, align 1
  %6903 = lshr i32 %6880, 31
  %6904 = xor i32 %6900, %6903
  %6905 = add i32 %6904, %6903
  %6906 = icmp eq i32 %6905, 2
  %6907 = zext i1 %6906 to i8
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6907, i8* %6908, align 1
  store %struct.Memory* %loadMem_40ade2, %struct.Memory** %MEMORY
  %loadMem_40ade6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 33
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %PC.i533
  %6913 = add i64 %6912, 61
  %6914 = load i64, i64* %PC.i533
  %6915 = add i64 %6914, 6
  %6916 = load i64, i64* %PC.i533
  %6917 = add i64 %6916, 6
  store i64 %6917, i64* %PC.i533
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6919 = load i8, i8* %6918, align 1
  %6920 = icmp ne i8 %6919, 0
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6922 = load i8, i8* %6921, align 1
  %6923 = icmp ne i8 %6922, 0
  %6924 = xor i1 %6920, %6923
  %6925 = xor i1 %6924, true
  %6926 = zext i1 %6925 to i8
  store i8 %6926, i8* %BRANCH_TAKEN, align 1
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6928 = select i1 %6924, i64 %6915, i64 %6913
  store i64 %6928, i64* %6927, align 8
  store %struct.Memory* %loadMem_40ade6, %struct.Memory** %MEMORY
  %loadBr_40ade6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ade6 = icmp eq i8 %loadBr_40ade6, 1
  br i1 %cmpBr_40ade6, label %block_.L_40ae23, label %block_40adec

block_40adec:                                     ; preds = %block_.L_40adca
  %loadMem_40adec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 33
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 1
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %6934 to i64*
  %6935 = load i64, i64* %PC.i531
  %6936 = add i64 %6935, 10
  store i64 %6936, i64* %PC.i531
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_40adec, %struct.Memory** %MEMORY
  %loadMem_40adf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 33
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %6939 to i64*
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6941 = getelementptr inbounds %struct.GPR, %struct.GPR* %6940, i32 0, i32 5
  %6942 = getelementptr inbounds %struct.Reg, %struct.Reg* %6941, i32 0, i32 0
  %RCX.i529 = bitcast %union.anon* %6942 to i64*
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6944 = getelementptr inbounds %struct.GPR, %struct.GPR* %6943, i32 0, i32 15
  %6945 = getelementptr inbounds %struct.Reg, %struct.Reg* %6944, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %6945 to i64*
  %6946 = load i64, i64* %RBP.i530
  %6947 = sub i64 %6946, 4
  %6948 = load i64, i64* %PC.i528
  %6949 = add i64 %6948, 3
  store i64 %6949, i64* %PC.i528
  %6950 = inttoptr i64 %6947 to i32*
  %6951 = load i32, i32* %6950
  %6952 = zext i32 %6951 to i64
  store i64 %6952, i64* %RCX.i529, align 8
  store %struct.Memory* %loadMem_40adf6, %struct.Memory** %MEMORY
  %loadMem_40adf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 33
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %6955 to i64*
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6957 = getelementptr inbounds %struct.GPR, %struct.GPR* %6956, i32 0, i32 5
  %6958 = getelementptr inbounds %struct.Reg, %struct.Reg* %6957, i32 0, i32 0
  %RCX.i527 = bitcast %union.anon* %6958 to i64*
  %6959 = load i64, i64* %RCX.i527
  %6960 = load i64, i64* %PC.i526
  %6961 = add i64 %6960, 3
  store i64 %6961, i64* %PC.i526
  %6962 = trunc i64 %6959 to i32
  %6963 = sub i32 %6962, 20
  %6964 = zext i32 %6963 to i64
  store i64 %6964, i64* %RCX.i527, align 8
  %6965 = icmp ult i32 %6962, 20
  %6966 = zext i1 %6965 to i8
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6966, i8* %6967, align 1
  %6968 = and i32 %6963, 255
  %6969 = call i32 @llvm.ctpop.i32(i32 %6968)
  %6970 = trunc i32 %6969 to i8
  %6971 = and i8 %6970, 1
  %6972 = xor i8 %6971, 1
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6972, i8* %6973, align 1
  %6974 = xor i64 20, %6959
  %6975 = trunc i64 %6974 to i32
  %6976 = xor i32 %6975, %6963
  %6977 = lshr i32 %6976, 4
  %6978 = trunc i32 %6977 to i8
  %6979 = and i8 %6978, 1
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6979, i8* %6980, align 1
  %6981 = icmp eq i32 %6963, 0
  %6982 = zext i1 %6981 to i8
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6982, i8* %6983, align 1
  %6984 = lshr i32 %6963, 31
  %6985 = trunc i32 %6984 to i8
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6985, i8* %6986, align 1
  %6987 = lshr i32 %6962, 31
  %6988 = xor i32 %6984, %6987
  %6989 = add i32 %6988, %6987
  %6990 = icmp eq i32 %6989, 2
  %6991 = zext i1 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6991, i8* %6992, align 1
  store %struct.Memory* %loadMem_40adf9, %struct.Memory** %MEMORY
  %loadMem_40adfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 33
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 7
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RDX.i524 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 15
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %7001 to i64*
  %7002 = load i64, i64* %RBP.i525
  %7003 = sub i64 %7002, 8
  %7004 = load i64, i64* %PC.i523
  %7005 = add i64 %7004, 4
  store i64 %7005, i64* %PC.i523
  %7006 = inttoptr i64 %7003 to i32*
  %7007 = load i32, i32* %7006
  %7008 = sext i32 %7007 to i64
  store i64 %7008, i64* %RDX.i524, align 8
  store %struct.Memory* %loadMem_40adfc, %struct.Memory** %MEMORY
  %loadMem_40ae00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 33
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %7011 to i64*
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 7
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %RDX.i522 = bitcast %union.anon* %7014 to i64*
  %7015 = load i64, i64* %RDX.i522
  %7016 = load i64, i64* %PC.i521
  %7017 = add i64 %7016, 7
  store i64 %7017, i64* %PC.i521
  %7018 = sext i64 %7015 to i128
  %7019 = and i128 %7018, -18446744073709551616
  %7020 = zext i64 %7015 to i128
  %7021 = or i128 %7019, %7020
  %7022 = mul i128 744, %7021
  %7023 = trunc i128 %7022 to i64
  store i64 %7023, i64* %RDX.i522, align 8
  %7024 = sext i64 %7023 to i128
  %7025 = icmp ne i128 %7024, %7022
  %7026 = zext i1 %7025 to i8
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7026, i8* %7027, align 1
  %7028 = trunc i128 %7022 to i32
  %7029 = and i32 %7028, 255
  %7030 = call i32 @llvm.ctpop.i32(i32 %7029)
  %7031 = trunc i32 %7030 to i8
  %7032 = and i8 %7031, 1
  %7033 = xor i8 %7032, 1
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7033, i8* %7034, align 1
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7035, align 1
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7036, align 1
  %7037 = lshr i64 %7023, 63
  %7038 = trunc i64 %7037 to i8
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7038, i8* %7039, align 1
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7026, i8* %7040, align 1
  store %struct.Memory* %loadMem_40ae00, %struct.Memory** %MEMORY
  %loadMem_40ae07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 33
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %7043 to i64*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 1
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %7046 to i64*
  %7047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7048 = getelementptr inbounds %struct.GPR, %struct.GPR* %7047, i32 0, i32 9
  %7049 = getelementptr inbounds %struct.Reg, %struct.Reg* %7048, i32 0, i32 0
  %RSI.i520 = bitcast %union.anon* %7049 to i64*
  %7050 = load i64, i64* %RAX.i519
  %7051 = load i64, i64* %PC.i518
  %7052 = add i64 %7051, 3
  store i64 %7052, i64* %PC.i518
  store i64 %7050, i64* %RSI.i520, align 8
  store %struct.Memory* %loadMem_40ae07, %struct.Memory** %MEMORY
  %loadMem_40ae0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7054 = getelementptr inbounds %struct.GPR, %struct.GPR* %7053, i32 0, i32 33
  %7055 = getelementptr inbounds %struct.Reg, %struct.Reg* %7054, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %7055 to i64*
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7057 = getelementptr inbounds %struct.GPR, %struct.GPR* %7056, i32 0, i32 7
  %7058 = getelementptr inbounds %struct.Reg, %struct.Reg* %7057, i32 0, i32 0
  %RDX.i516 = bitcast %union.anon* %7058 to i64*
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 9
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %RSI.i517 = bitcast %union.anon* %7061 to i64*
  %7062 = load i64, i64* %RSI.i517
  %7063 = load i64, i64* %RDX.i516
  %7064 = load i64, i64* %PC.i515
  %7065 = add i64 %7064, 3
  store i64 %7065, i64* %PC.i515
  %7066 = add i64 %7063, %7062
  store i64 %7066, i64* %RSI.i517, align 8
  %7067 = icmp ult i64 %7066, %7062
  %7068 = icmp ult i64 %7066, %7063
  %7069 = or i1 %7067, %7068
  %7070 = zext i1 %7069 to i8
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7070, i8* %7071, align 1
  %7072 = trunc i64 %7066 to i32
  %7073 = and i32 %7072, 255
  %7074 = call i32 @llvm.ctpop.i32(i32 %7073)
  %7075 = trunc i32 %7074 to i8
  %7076 = and i8 %7075, 1
  %7077 = xor i8 %7076, 1
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7077, i8* %7078, align 1
  %7079 = xor i64 %7063, %7062
  %7080 = xor i64 %7079, %7066
  %7081 = lshr i64 %7080, 4
  %7082 = trunc i64 %7081 to i8
  %7083 = and i8 %7082, 1
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7083, i8* %7084, align 1
  %7085 = icmp eq i64 %7066, 0
  %7086 = zext i1 %7085 to i8
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7086, i8* %7087, align 1
  %7088 = lshr i64 %7066, 63
  %7089 = trunc i64 %7088 to i8
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7089, i8* %7090, align 1
  %7091 = lshr i64 %7062, 63
  %7092 = lshr i64 %7063, 63
  %7093 = xor i64 %7088, %7091
  %7094 = xor i64 %7088, %7092
  %7095 = add i64 %7093, %7094
  %7096 = icmp eq i64 %7095, 2
  %7097 = zext i1 %7096 to i8
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7097, i8* %7098, align 1
  store %struct.Memory* %loadMem_40ae0a, %struct.Memory** %MEMORY
  %loadMem_40ae0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7100 = getelementptr inbounds %struct.GPR, %struct.GPR* %7099, i32 0, i32 33
  %7101 = getelementptr inbounds %struct.Reg, %struct.Reg* %7100, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %7101 to i64*
  %7102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7103 = getelementptr inbounds %struct.GPR, %struct.GPR* %7102, i32 0, i32 7
  %7104 = getelementptr inbounds %struct.Reg, %struct.Reg* %7103, i32 0, i32 0
  %RDX.i513 = bitcast %union.anon* %7104 to i64*
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7106 = getelementptr inbounds %struct.GPR, %struct.GPR* %7105, i32 0, i32 15
  %7107 = getelementptr inbounds %struct.Reg, %struct.Reg* %7106, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %7107 to i64*
  %7108 = load i64, i64* %RBP.i514
  %7109 = sub i64 %7108, 8
  %7110 = load i64, i64* %PC.i512
  %7111 = add i64 %7110, 4
  store i64 %7111, i64* %PC.i512
  %7112 = inttoptr i64 %7109 to i32*
  %7113 = load i32, i32* %7112
  %7114 = sext i32 %7113 to i64
  store i64 %7114, i64* %RDX.i513, align 8
  store %struct.Memory* %loadMem_40ae0d, %struct.Memory** %MEMORY
  %loadMem_40ae11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 33
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %7117 to i64*
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 7
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %RDX.i511 = bitcast %union.anon* %7120 to i64*
  %7121 = load i64, i64* %RDX.i511
  %7122 = load i64, i64* %PC.i510
  %7123 = add i64 %7122, 7
  store i64 %7123, i64* %PC.i510
  %7124 = sext i64 %7121 to i128
  %7125 = and i128 %7124, -18446744073709551616
  %7126 = zext i64 %7121 to i128
  %7127 = or i128 %7125, %7126
  %7128 = mul i128 744, %7127
  %7129 = trunc i128 %7128 to i64
  store i64 %7129, i64* %RDX.i511, align 8
  %7130 = sext i64 %7129 to i128
  %7131 = icmp ne i128 %7130, %7128
  %7132 = zext i1 %7131 to i8
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7132, i8* %7133, align 1
  %7134 = trunc i128 %7128 to i32
  %7135 = and i32 %7134, 255
  %7136 = call i32 @llvm.ctpop.i32(i32 %7135)
  %7137 = trunc i32 %7136 to i8
  %7138 = and i8 %7137, 1
  %7139 = xor i8 %7138, 1
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7139, i8* %7140, align 1
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7141, align 1
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7142, align 1
  %7143 = lshr i64 %7129, 63
  %7144 = trunc i64 %7143 to i8
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7144, i8* %7145, align 1
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7132, i8* %7146, align 1
  store %struct.Memory* %loadMem_40ae11, %struct.Memory** %MEMORY
  %loadMem_40ae18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7148 = getelementptr inbounds %struct.GPR, %struct.GPR* %7147, i32 0, i32 33
  %7149 = getelementptr inbounds %struct.Reg, %struct.Reg* %7148, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %7149 to i64*
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 1
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %RAX.i508 = bitcast %union.anon* %7152 to i64*
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 7
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %RDX.i509 = bitcast %union.anon* %7155 to i64*
  %7156 = load i64, i64* %RAX.i508
  %7157 = load i64, i64* %RDX.i509
  %7158 = load i64, i64* %PC.i507
  %7159 = add i64 %7158, 3
  store i64 %7159, i64* %PC.i507
  %7160 = add i64 %7157, %7156
  store i64 %7160, i64* %RAX.i508, align 8
  %7161 = icmp ult i64 %7160, %7156
  %7162 = icmp ult i64 %7160, %7157
  %7163 = or i1 %7161, %7162
  %7164 = zext i1 %7163 to i8
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7164, i8* %7165, align 1
  %7166 = trunc i64 %7160 to i32
  %7167 = and i32 %7166, 255
  %7168 = call i32 @llvm.ctpop.i32(i32 %7167)
  %7169 = trunc i32 %7168 to i8
  %7170 = and i8 %7169, 1
  %7171 = xor i8 %7170, 1
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7171, i8* %7172, align 1
  %7173 = xor i64 %7157, %7156
  %7174 = xor i64 %7173, %7160
  %7175 = lshr i64 %7174, 4
  %7176 = trunc i64 %7175 to i8
  %7177 = and i8 %7176, 1
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7177, i8* %7178, align 1
  %7179 = icmp eq i64 %7160, 0
  %7180 = zext i1 %7179 to i8
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7180, i8* %7181, align 1
  %7182 = lshr i64 %7160, 63
  %7183 = trunc i64 %7182 to i8
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7183, i8* %7184, align 1
  %7185 = lshr i64 %7156, 63
  %7186 = lshr i64 %7157, 63
  %7187 = xor i64 %7182, %7185
  %7188 = xor i64 %7182, %7186
  %7189 = add i64 %7187, %7188
  %7190 = icmp eq i64 %7189, 2
  %7191 = zext i1 %7190 to i8
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7191, i8* %7192, align 1
  store %struct.Memory* %loadMem_40ae18, %struct.Memory** %MEMORY
  %loadMem_40ae1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7194 = getelementptr inbounds %struct.GPR, %struct.GPR* %7193, i32 0, i32 33
  %7195 = getelementptr inbounds %struct.Reg, %struct.Reg* %7194, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %7195 to i64*
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 1
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %RAX.i506 = bitcast %union.anon* %7198 to i64*
  %7199 = load i64, i64* %RAX.i506
  %7200 = add i64 %7199, 12
  %7201 = load i64, i64* %PC.i505
  %7202 = add i64 %7201, 4
  store i64 %7202, i64* %PC.i505
  %7203 = inttoptr i64 %7200 to i32*
  %7204 = load i32, i32* %7203
  %7205 = sext i32 %7204 to i64
  store i64 %7205, i64* %RAX.i506, align 8
  store %struct.Memory* %loadMem_40ae1b, %struct.Memory** %MEMORY
  %loadMem_40ae1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 33
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 5
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %ECX.i502 = bitcast %union.anon* %7211 to i32*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 1
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %7214 to i64*
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7216 = getelementptr inbounds %struct.GPR, %struct.GPR* %7215, i32 0, i32 9
  %7217 = getelementptr inbounds %struct.Reg, %struct.Reg* %7216, i32 0, i32 0
  %RSI.i504 = bitcast %union.anon* %7217 to i64*
  %7218 = load i64, i64* %RSI.i504
  %7219 = load i64, i64* %RAX.i503
  %7220 = mul i64 %7219, 4
  %7221 = add i64 %7218, 16
  %7222 = add i64 %7221, %7220
  %7223 = load i32, i32* %ECX.i502
  %7224 = zext i32 %7223 to i64
  %7225 = load i64, i64* %PC.i501
  %7226 = add i64 %7225, 4
  store i64 %7226, i64* %PC.i501
  %7227 = inttoptr i64 %7222 to i32*
  store i32 %7223, i32* %7227
  store %struct.Memory* %loadMem_40ae1f, %struct.Memory** %MEMORY
  br label %block_.L_40ae23

block_.L_40ae23:                                  ; preds = %block_40adec, %block_.L_40adca
  %loadMem_40ae23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 33
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 1
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %PC.i499
  %7235 = add i64 %7234, 10
  store i64 %7235, i64* %PC.i499
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i500, align 8
  store %struct.Memory* %loadMem_40ae23, %struct.Memory** %MEMORY
  %loadMem_40ae2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 33
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %7238 to i64*
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 5
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %7241 to i64*
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 15
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %RBP.i498 = bitcast %union.anon* %7244 to i64*
  %7245 = load i64, i64* %RBP.i498
  %7246 = sub i64 %7245, 8
  %7247 = load i64, i64* %PC.i496
  %7248 = add i64 %7247, 4
  store i64 %7248, i64* %PC.i496
  %7249 = inttoptr i64 %7246 to i32*
  %7250 = load i32, i32* %7249
  %7251 = sext i32 %7250 to i64
  store i64 %7251, i64* %RCX.i497, align 8
  store %struct.Memory* %loadMem_40ae2d, %struct.Memory** %MEMORY
  %loadMem_40ae31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7253 = getelementptr inbounds %struct.GPR, %struct.GPR* %7252, i32 0, i32 33
  %7254 = getelementptr inbounds %struct.Reg, %struct.Reg* %7253, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %7254 to i64*
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 5
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %RCX.i495 = bitcast %union.anon* %7257 to i64*
  %7258 = load i64, i64* %RCX.i495
  %7259 = load i64, i64* %PC.i494
  %7260 = add i64 %7259, 7
  store i64 %7260, i64* %PC.i494
  %7261 = sext i64 %7258 to i128
  %7262 = and i128 %7261, -18446744073709551616
  %7263 = zext i64 %7258 to i128
  %7264 = or i128 %7262, %7263
  %7265 = mul i128 744, %7264
  %7266 = trunc i128 %7265 to i64
  store i64 %7266, i64* %RCX.i495, align 8
  %7267 = sext i64 %7266 to i128
  %7268 = icmp ne i128 %7267, %7265
  %7269 = zext i1 %7268 to i8
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7269, i8* %7270, align 1
  %7271 = trunc i128 %7265 to i32
  %7272 = and i32 %7271, 255
  %7273 = call i32 @llvm.ctpop.i32(i32 %7272)
  %7274 = trunc i32 %7273 to i8
  %7275 = and i8 %7274, 1
  %7276 = xor i8 %7275, 1
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7276, i8* %7277, align 1
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7278, align 1
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7279, align 1
  %7280 = lshr i64 %7266, 63
  %7281 = trunc i64 %7280 to i8
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7281, i8* %7282, align 1
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7269, i8* %7283, align 1
  store %struct.Memory* %loadMem_40ae31, %struct.Memory** %MEMORY
  %loadMem_40ae38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 1
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 5
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RCX.i493 = bitcast %union.anon* %7292 to i64*
  %7293 = load i64, i64* %RAX.i492
  %7294 = load i64, i64* %RCX.i493
  %7295 = load i64, i64* %PC.i491
  %7296 = add i64 %7295, 3
  store i64 %7296, i64* %PC.i491
  %7297 = add i64 %7294, %7293
  store i64 %7297, i64* %RAX.i492, align 8
  %7298 = icmp ult i64 %7297, %7293
  %7299 = icmp ult i64 %7297, %7294
  %7300 = or i1 %7298, %7299
  %7301 = zext i1 %7300 to i8
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7301, i8* %7302, align 1
  %7303 = trunc i64 %7297 to i32
  %7304 = and i32 %7303, 255
  %7305 = call i32 @llvm.ctpop.i32(i32 %7304)
  %7306 = trunc i32 %7305 to i8
  %7307 = and i8 %7306, 1
  %7308 = xor i8 %7307, 1
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7308, i8* %7309, align 1
  %7310 = xor i64 %7294, %7293
  %7311 = xor i64 %7310, %7297
  %7312 = lshr i64 %7311, 4
  %7313 = trunc i64 %7312 to i8
  %7314 = and i8 %7313, 1
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7314, i8* %7315, align 1
  %7316 = icmp eq i64 %7297, 0
  %7317 = zext i1 %7316 to i8
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7317, i8* %7318, align 1
  %7319 = lshr i64 %7297, 63
  %7320 = trunc i64 %7319 to i8
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7320, i8* %7321, align 1
  %7322 = lshr i64 %7293, 63
  %7323 = lshr i64 %7294, 63
  %7324 = xor i64 %7319, %7322
  %7325 = xor i64 %7319, %7323
  %7326 = add i64 %7324, %7325
  %7327 = icmp eq i64 %7326, 2
  %7328 = zext i1 %7327 to i8
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7328, i8* %7329, align 1
  store %struct.Memory* %loadMem_40ae38, %struct.Memory** %MEMORY
  %loadMem_40ae3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 33
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %7332 to i64*
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7334 = getelementptr inbounds %struct.GPR, %struct.GPR* %7333, i32 0, i32 1
  %7335 = getelementptr inbounds %struct.Reg, %struct.Reg* %7334, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %7335 to i64*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 7
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %RDX.i490 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %RAX.i489
  %7340 = add i64 %7339, 12
  %7341 = load i64, i64* %PC.i488
  %7342 = add i64 %7341, 3
  store i64 %7342, i64* %PC.i488
  %7343 = inttoptr i64 %7340 to i32*
  %7344 = load i32, i32* %7343
  %7345 = zext i32 %7344 to i64
  store i64 %7345, i64* %RDX.i490, align 8
  store %struct.Memory* %loadMem_40ae3b, %struct.Memory** %MEMORY
  %loadMem_40ae3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 33
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %7348 to i64*
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 7
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %RDX.i487 = bitcast %union.anon* %7351 to i64*
  %7352 = load i64, i64* %RDX.i487
  %7353 = load i64, i64* %PC.i486
  %7354 = add i64 %7353, 3
  store i64 %7354, i64* %PC.i486
  %7355 = trunc i64 %7352 to i32
  %7356 = add i32 1, %7355
  %7357 = zext i32 %7356 to i64
  store i64 %7357, i64* %RDX.i487, align 8
  %7358 = icmp ult i32 %7356, %7355
  %7359 = icmp ult i32 %7356, 1
  %7360 = or i1 %7358, %7359
  %7361 = zext i1 %7360 to i8
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7361, i8* %7362, align 1
  %7363 = and i32 %7356, 255
  %7364 = call i32 @llvm.ctpop.i32(i32 %7363)
  %7365 = trunc i32 %7364 to i8
  %7366 = and i8 %7365, 1
  %7367 = xor i8 %7366, 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7367, i8* %7368, align 1
  %7369 = xor i64 1, %7352
  %7370 = trunc i64 %7369 to i32
  %7371 = xor i32 %7370, %7356
  %7372 = lshr i32 %7371, 4
  %7373 = trunc i32 %7372 to i8
  %7374 = and i8 %7373, 1
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7374, i8* %7375, align 1
  %7376 = icmp eq i32 %7356, 0
  %7377 = zext i1 %7376 to i8
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7377, i8* %7378, align 1
  %7379 = lshr i32 %7356, 31
  %7380 = trunc i32 %7379 to i8
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7380, i8* %7381, align 1
  %7382 = lshr i32 %7355, 31
  %7383 = xor i32 %7379, %7382
  %7384 = add i32 %7383, %7379
  %7385 = icmp eq i32 %7384, 2
  %7386 = zext i1 %7385 to i8
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7386, i8* %7387, align 1
  store %struct.Memory* %loadMem_40ae3e, %struct.Memory** %MEMORY
  %loadMem_40ae41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 7
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %EDX.i484 = bitcast %union.anon* %7393 to i32*
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 1
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %RAX.i485 = bitcast %union.anon* %7396 to i64*
  %7397 = load i64, i64* %RAX.i485
  %7398 = add i64 %7397, 12
  %7399 = load i32, i32* %EDX.i484
  %7400 = zext i32 %7399 to i64
  %7401 = load i64, i64* %PC.i483
  %7402 = add i64 %7401, 3
  store i64 %7402, i64* %PC.i483
  %7403 = inttoptr i64 %7398 to i32*
  store i32 %7399, i32* %7403
  store %struct.Memory* %loadMem_40ae41, %struct.Memory** %MEMORY
  %loadMem_40ae44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7405 = getelementptr inbounds %struct.GPR, %struct.GPR* %7404, i32 0, i32 33
  %7406 = getelementptr inbounds %struct.Reg, %struct.Reg* %7405, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %7406 to i64*
  %7407 = load i64, i64* %PC.i482
  %7408 = add i64 %7407, 380
  %7409 = load i64, i64* %PC.i482
  %7410 = add i64 %7409, 5
  store i64 %7410, i64* %PC.i482
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7408, i64* %7411, align 8
  store %struct.Memory* %loadMem_40ae44, %struct.Memory** %MEMORY
  br label %block_.L_40afc0

block_.L_40ae49:                                  ; preds = %block_.L_40adab
  %loadMem_40ae49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 33
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %7414 to i64*
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 1
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %7417 to i64*
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7419 = getelementptr inbounds %struct.GPR, %struct.GPR* %7418, i32 0, i32 15
  %7420 = getelementptr inbounds %struct.Reg, %struct.Reg* %7419, i32 0, i32 0
  %RBP.i481 = bitcast %union.anon* %7420 to i64*
  %7421 = load i64, i64* %RBP.i481
  %7422 = sub i64 %7421, 4
  %7423 = load i64, i64* %PC.i479
  %7424 = add i64 %7423, 3
  store i64 %7424, i64* %PC.i479
  %7425 = inttoptr i64 %7422 to i32*
  %7426 = load i32, i32* %7425
  %7427 = zext i32 %7426 to i64
  store i64 %7427, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_40ae49, %struct.Memory** %MEMORY
  %loadMem_40ae4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 33
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %7430 to i64*
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7432 = getelementptr inbounds %struct.GPR, %struct.GPR* %7431, i32 0, i32 1
  %7433 = getelementptr inbounds %struct.Reg, %struct.Reg* %7432, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %7433 to i64*
  %7434 = load i64, i64* %RAX.i478
  %7435 = load i64, i64* %PC.i477
  %7436 = add i64 %7435, 3
  store i64 %7436, i64* %PC.i477
  %7437 = trunc i64 %7434 to i32
  %7438 = sub i32 %7437, 20
  %7439 = zext i32 %7438 to i64
  store i64 %7439, i64* %RAX.i478, align 8
  %7440 = icmp ult i32 %7437, 20
  %7441 = zext i1 %7440 to i8
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7441, i8* %7442, align 1
  %7443 = and i32 %7438, 255
  %7444 = call i32 @llvm.ctpop.i32(i32 %7443)
  %7445 = trunc i32 %7444 to i8
  %7446 = and i8 %7445, 1
  %7447 = xor i8 %7446, 1
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7447, i8* %7448, align 1
  %7449 = xor i64 20, %7434
  %7450 = trunc i64 %7449 to i32
  %7451 = xor i32 %7450, %7438
  %7452 = lshr i32 %7451, 4
  %7453 = trunc i32 %7452 to i8
  %7454 = and i8 %7453, 1
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7454, i8* %7455, align 1
  %7456 = icmp eq i32 %7438, 0
  %7457 = zext i1 %7456 to i8
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7457, i8* %7458, align 1
  %7459 = lshr i32 %7438, 31
  %7460 = trunc i32 %7459 to i8
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7460, i8* %7461, align 1
  %7462 = lshr i32 %7437, 31
  %7463 = xor i32 %7459, %7462
  %7464 = add i32 %7463, %7462
  %7465 = icmp eq i32 %7464, 2
  %7466 = zext i1 %7465 to i8
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7466, i8* %7467, align 1
  store %struct.Memory* %loadMem_40ae4c, %struct.Memory** %MEMORY
  %loadMem_40ae4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7469 = getelementptr inbounds %struct.GPR, %struct.GPR* %7468, i32 0, i32 33
  %7470 = getelementptr inbounds %struct.Reg, %struct.Reg* %7469, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %7470 to i64*
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 1
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %EAX.i475 = bitcast %union.anon* %7473 to i32*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 5
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RCX.i476 = bitcast %union.anon* %7476 to i64*
  %7477 = load i32, i32* %EAX.i475
  %7478 = zext i32 %7477 to i64
  %7479 = load i64, i64* %PC.i474
  %7480 = add i64 %7479, 3
  store i64 %7480, i64* %PC.i474
  %7481 = shl i64 %7478, 32
  %7482 = ashr exact i64 %7481, 32
  store i64 %7482, i64* %RCX.i476, align 8
  store %struct.Memory* %loadMem_40ae4f, %struct.Memory** %MEMORY
  %loadMem_40ae52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 33
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 1
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %7488 to i64*
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 5
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %RCX.i473 = bitcast %union.anon* %7491 to i64*
  %7492 = load i64, i64* %RCX.i473
  %7493 = add i64 %7492, 12099168
  %7494 = load i64, i64* %PC.i471
  %7495 = add i64 %7494, 8
  store i64 %7495, i64* %PC.i471
  %7496 = inttoptr i64 %7493 to i8*
  %7497 = load i8, i8* %7496
  %7498 = zext i8 %7497 to i64
  store i64 %7498, i64* %RAX.i472, align 8
  store %struct.Memory* %loadMem_40ae52, %struct.Memory** %MEMORY
  %loadMem_40ae5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 33
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %7501 to i64*
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 1
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %EAX.i469 = bitcast %union.anon* %7504 to i32*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 15
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %7507 to i64*
  %7508 = load i32, i32* %EAX.i469
  %7509 = zext i32 %7508 to i64
  %7510 = load i64, i64* %RBP.i470
  %7511 = sub i64 %7510, 16
  %7512 = load i64, i64* %PC.i468
  %7513 = add i64 %7512, 3
  store i64 %7513, i64* %PC.i468
  %7514 = inttoptr i64 %7511 to i32*
  %7515 = load i32, i32* %7514
  %7516 = sub i32 %7508, %7515
  %7517 = icmp ult i32 %7508, %7515
  %7518 = zext i1 %7517 to i8
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7518, i8* %7519, align 1
  %7520 = and i32 %7516, 255
  %7521 = call i32 @llvm.ctpop.i32(i32 %7520)
  %7522 = trunc i32 %7521 to i8
  %7523 = and i8 %7522, 1
  %7524 = xor i8 %7523, 1
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7524, i8* %7525, align 1
  %7526 = xor i32 %7515, %7508
  %7527 = xor i32 %7526, %7516
  %7528 = lshr i32 %7527, 4
  %7529 = trunc i32 %7528 to i8
  %7530 = and i8 %7529, 1
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7530, i8* %7531, align 1
  %7532 = icmp eq i32 %7516, 0
  %7533 = zext i1 %7532 to i8
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7533, i8* %7534, align 1
  %7535 = lshr i32 %7516, 31
  %7536 = trunc i32 %7535 to i8
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7536, i8* %7537, align 1
  %7538 = lshr i32 %7508, 31
  %7539 = lshr i32 %7515, 31
  %7540 = xor i32 %7539, %7538
  %7541 = xor i32 %7535, %7538
  %7542 = add i32 %7541, %7540
  %7543 = icmp eq i32 %7542, 2
  %7544 = zext i1 %7543 to i8
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7544, i8* %7545, align 1
  store %struct.Memory* %loadMem_40ae5a, %struct.Memory** %MEMORY
  %loadMem_40ae5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 33
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %7548 to i64*
  %7549 = load i64, i64* %PC.i467
  %7550 = add i64 %7549, 350
  %7551 = load i64, i64* %PC.i467
  %7552 = add i64 %7551, 6
  %7553 = load i64, i64* %PC.i467
  %7554 = add i64 %7553, 6
  store i64 %7554, i64* %PC.i467
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7556 = load i8, i8* %7555, align 1
  %7557 = icmp eq i8 %7556, 0
  %7558 = zext i1 %7557 to i8
  store i8 %7558, i8* %BRANCH_TAKEN, align 1
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7560 = select i1 %7557, i64 %7550, i64 %7552
  store i64 %7560, i64* %7559, align 8
  store %struct.Memory* %loadMem_40ae5d, %struct.Memory** %MEMORY
  %loadBr_40ae5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ae5d = icmp eq i8 %loadBr_40ae5d, 1
  br i1 %cmpBr_40ae5d, label %block_.L_40afbb, label %block_40ae63

block_40ae63:                                     ; preds = %block_.L_40ae49
  %loadMem_40ae63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7562 = getelementptr inbounds %struct.GPR, %struct.GPR* %7561, i32 0, i32 33
  %7563 = getelementptr inbounds %struct.Reg, %struct.Reg* %7562, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %7563 to i64*
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7565 = getelementptr inbounds %struct.GPR, %struct.GPR* %7564, i32 0, i32 1
  %7566 = getelementptr inbounds %struct.Reg, %struct.Reg* %7565, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %7566 to i64*
  %7567 = load i64, i64* %PC.i465
  %7568 = add i64 %7567, 10
  store i64 %7568, i64* %PC.i465
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_40ae63, %struct.Memory** %MEMORY
  %loadMem_40ae6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 33
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %7571 to i64*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 5
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %7574 to i64*
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 15
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %7577 to i64*
  %7578 = load i64, i64* %RBP.i464
  %7579 = sub i64 %7578, 4
  %7580 = load i64, i64* %PC.i462
  %7581 = add i64 %7580, 3
  store i64 %7581, i64* %PC.i462
  %7582 = inttoptr i64 %7579 to i32*
  %7583 = load i32, i32* %7582
  %7584 = zext i32 %7583 to i64
  store i64 %7584, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_40ae6d, %struct.Memory** %MEMORY
  %loadMem_40ae70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 33
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %7587 to i64*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 5
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %7590 to i64*
  %7591 = load i64, i64* %RCX.i461
  %7592 = load i64, i64* %PC.i460
  %7593 = add i64 %7592, 3
  store i64 %7593, i64* %PC.i460
  %7594 = trunc i64 %7591 to i32
  %7595 = sub i32 %7594, 20
  %7596 = zext i32 %7595 to i64
  store i64 %7596, i64* %RCX.i461, align 8
  %7597 = icmp ult i32 %7594, 20
  %7598 = zext i1 %7597 to i8
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7598, i8* %7599, align 1
  %7600 = and i32 %7595, 255
  %7601 = call i32 @llvm.ctpop.i32(i32 %7600)
  %7602 = trunc i32 %7601 to i8
  %7603 = and i8 %7602, 1
  %7604 = xor i8 %7603, 1
  %7605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7604, i8* %7605, align 1
  %7606 = xor i64 20, %7591
  %7607 = trunc i64 %7606 to i32
  %7608 = xor i32 %7607, %7595
  %7609 = lshr i32 %7608, 4
  %7610 = trunc i32 %7609 to i8
  %7611 = and i8 %7610, 1
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7611, i8* %7612, align 1
  %7613 = icmp eq i32 %7595, 0
  %7614 = zext i1 %7613 to i8
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7614, i8* %7615, align 1
  %7616 = lshr i32 %7595, 31
  %7617 = trunc i32 %7616 to i8
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7617, i8* %7618, align 1
  %7619 = lshr i32 %7594, 31
  %7620 = xor i32 %7616, %7619
  %7621 = add i32 %7620, %7619
  %7622 = icmp eq i32 %7621, 2
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7623, i8* %7624, align 1
  store %struct.Memory* %loadMem_40ae70, %struct.Memory** %MEMORY
  %loadMem_40ae73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7626 = getelementptr inbounds %struct.GPR, %struct.GPR* %7625, i32 0, i32 33
  %7627 = getelementptr inbounds %struct.Reg, %struct.Reg* %7626, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %7627 to i64*
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7629 = getelementptr inbounds %struct.GPR, %struct.GPR* %7628, i32 0, i32 5
  %7630 = getelementptr inbounds %struct.Reg, %struct.Reg* %7629, i32 0, i32 0
  %ECX.i458 = bitcast %union.anon* %7630 to i32*
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 7
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %RDX.i459 = bitcast %union.anon* %7633 to i64*
  %7634 = load i32, i32* %ECX.i458
  %7635 = zext i32 %7634 to i64
  %7636 = load i64, i64* %PC.i457
  %7637 = add i64 %7636, 3
  store i64 %7637, i64* %PC.i457
  %7638 = shl i64 %7635, 32
  %7639 = ashr exact i64 %7638, 32
  store i64 %7639, i64* %RDX.i459, align 8
  store %struct.Memory* %loadMem_40ae73, %struct.Memory** %MEMORY
  %loadMem_40ae76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7641 = getelementptr inbounds %struct.GPR, %struct.GPR* %7640, i32 0, i32 33
  %7642 = getelementptr inbounds %struct.Reg, %struct.Reg* %7641, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %7642 to i64*
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 7
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %RDX.i456 = bitcast %union.anon* %7645 to i64*
  %7646 = load i64, i64* %RDX.i456
  %7647 = mul i64 %7646, 4
  %7648 = add i64 %7647, 11187184
  %7649 = load i64, i64* %PC.i455
  %7650 = add i64 %7649, 8
  store i64 %7650, i64* %PC.i455
  %7651 = inttoptr i64 %7648 to i32*
  %7652 = load i32, i32* %7651
  %7653 = sext i32 %7652 to i64
  store i64 %7653, i64* %RDX.i456, align 8
  store %struct.Memory* %loadMem_40ae76, %struct.Memory** %MEMORY
  %loadMem_40ae7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 33
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 7
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %RDX.i454 = bitcast %union.anon* %7659 to i64*
  %7660 = load i64, i64* %RDX.i454
  %7661 = load i64, i64* %PC.i453
  %7662 = add i64 %7661, 7
  store i64 %7662, i64* %PC.i453
  %7663 = sext i64 %7660 to i128
  %7664 = and i128 %7663, -18446744073709551616
  %7665 = zext i64 %7660 to i128
  %7666 = or i128 %7664, %7665
  %7667 = mul i128 744, %7666
  %7668 = trunc i128 %7667 to i64
  store i64 %7668, i64* %RDX.i454, align 8
  %7669 = sext i64 %7668 to i128
  %7670 = icmp ne i128 %7669, %7667
  %7671 = zext i1 %7670 to i8
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7671, i8* %7672, align 1
  %7673 = trunc i128 %7667 to i32
  %7674 = and i32 %7673, 255
  %7675 = call i32 @llvm.ctpop.i32(i32 %7674)
  %7676 = trunc i32 %7675 to i8
  %7677 = and i8 %7676, 1
  %7678 = xor i8 %7677, 1
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7678, i8* %7679, align 1
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7680, align 1
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7681, align 1
  %7682 = lshr i64 %7668, 63
  %7683 = trunc i64 %7682 to i8
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7683, i8* %7684, align 1
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7671, i8* %7685, align 1
  store %struct.Memory* %loadMem_40ae7e, %struct.Memory** %MEMORY
  %loadMem_40ae85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 33
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 1
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RAX.i451 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 7
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RDX.i452 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RAX.i451
  %7696 = load i64, i64* %RDX.i452
  %7697 = load i64, i64* %PC.i450
  %7698 = add i64 %7697, 3
  store i64 %7698, i64* %PC.i450
  %7699 = add i64 %7696, %7695
  store i64 %7699, i64* %RAX.i451, align 8
  %7700 = icmp ult i64 %7699, %7695
  %7701 = icmp ult i64 %7699, %7696
  %7702 = or i1 %7700, %7701
  %7703 = zext i1 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7703, i8* %7704, align 1
  %7705 = trunc i64 %7699 to i32
  %7706 = and i32 %7705, 255
  %7707 = call i32 @llvm.ctpop.i32(i32 %7706)
  %7708 = trunc i32 %7707 to i8
  %7709 = and i8 %7708, 1
  %7710 = xor i8 %7709, 1
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7710, i8* %7711, align 1
  %7712 = xor i64 %7696, %7695
  %7713 = xor i64 %7712, %7699
  %7714 = lshr i64 %7713, 4
  %7715 = trunc i64 %7714 to i8
  %7716 = and i8 %7715, 1
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7716, i8* %7717, align 1
  %7718 = icmp eq i64 %7699, 0
  %7719 = zext i1 %7718 to i8
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7719, i8* %7720, align 1
  %7721 = lshr i64 %7699, 63
  %7722 = trunc i64 %7721 to i8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7722, i8* %7723, align 1
  %7724 = lshr i64 %7695, 63
  %7725 = lshr i64 %7696, 63
  %7726 = xor i64 %7721, %7724
  %7727 = xor i64 %7721, %7725
  %7728 = add i64 %7726, %7727
  %7729 = icmp eq i64 %7728, 2
  %7730 = zext i1 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7730, i8* %7731, align 1
  store %struct.Memory* %loadMem_40ae85, %struct.Memory** %MEMORY
  %loadMem_40ae88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %7734 to i64*
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 1
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %RAX.i448 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 5
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %RAX.i448
  %7742 = add i64 %7741, 740
  %7743 = load i64, i64* %PC.i447
  %7744 = add i64 %7743, 6
  store i64 %7744, i64* %PC.i447
  %7745 = inttoptr i64 %7742 to i32*
  %7746 = load i32, i32* %7745
  %7747 = zext i32 %7746 to i64
  store i64 %7747, i64* %RCX.i449, align 8
  store %struct.Memory* %loadMem_40ae88, %struct.Memory** %MEMORY
  %loadMem_40ae8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 33
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %7750 to i64*
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7752 = getelementptr inbounds %struct.GPR, %struct.GPR* %7751, i32 0, i32 5
  %7753 = getelementptr inbounds %struct.Reg, %struct.Reg* %7752, i32 0, i32 0
  %ECX.i446 = bitcast %union.anon* %7753 to i32*
  %7754 = load i32, i32* %ECX.i446
  %7755 = zext i32 %7754 to i64
  %7756 = load i64, i64* %PC.i445
  %7757 = add i64 %7756, 7
  store i64 %7757, i64* %PC.i445
  %7758 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %7759 = sub i32 %7754, %7758
  %7760 = icmp ult i32 %7754, %7758
  %7761 = zext i1 %7760 to i8
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7761, i8* %7762, align 1
  %7763 = and i32 %7759, 255
  %7764 = call i32 @llvm.ctpop.i32(i32 %7763)
  %7765 = trunc i32 %7764 to i8
  %7766 = and i8 %7765, 1
  %7767 = xor i8 %7766, 1
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7767, i8* %7768, align 1
  %7769 = xor i32 %7758, %7754
  %7770 = xor i32 %7769, %7759
  %7771 = lshr i32 %7770, 4
  %7772 = trunc i32 %7771 to i8
  %7773 = and i8 %7772, 1
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7773, i8* %7774, align 1
  %7775 = icmp eq i32 %7759, 0
  %7776 = zext i1 %7775 to i8
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7776, i8* %7777, align 1
  %7778 = lshr i32 %7759, 31
  %7779 = trunc i32 %7778 to i8
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7779, i8* %7780, align 1
  %7781 = lshr i32 %7754, 31
  %7782 = lshr i32 %7758, 31
  %7783 = xor i32 %7782, %7781
  %7784 = xor i32 %7778, %7781
  %7785 = add i32 %7784, %7783
  %7786 = icmp eq i32 %7785, 2
  %7787 = zext i1 %7786 to i8
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7787, i8* %7788, align 1
  store %struct.Memory* %loadMem_40ae8e, %struct.Memory** %MEMORY
  %loadMem_40ae95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 33
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %7791 to i64*
  %7792 = load i64, i64* %PC.i444
  %7793 = add i64 %7792, 294
  %7794 = load i64, i64* %PC.i444
  %7795 = add i64 %7794, 6
  %7796 = load i64, i64* %PC.i444
  %7797 = add i64 %7796, 6
  store i64 %7797, i64* %PC.i444
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7799 = load i8, i8* %7798, align 1
  store i8 %7799, i8* %BRANCH_TAKEN, align 1
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7801 = icmp ne i8 %7799, 0
  %7802 = select i1 %7801, i64 %7793, i64 %7795
  store i64 %7802, i64* %7800, align 8
  store %struct.Memory* %loadMem_40ae95, %struct.Memory** %MEMORY
  %loadBr_40ae95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ae95 = icmp eq i8 %loadBr_40ae95, 1
  br i1 %cmpBr_40ae95, label %block_.L_40afbb, label %block_40ae9b

block_40ae9b:                                     ; preds = %block_40ae63
  %loadMem_40ae9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7804 = getelementptr inbounds %struct.GPR, %struct.GPR* %7803, i32 0, i32 33
  %7805 = getelementptr inbounds %struct.Reg, %struct.Reg* %7804, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %7805 to i64*
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7807 = getelementptr inbounds %struct.GPR, %struct.GPR* %7806, i32 0, i32 1
  %7808 = getelementptr inbounds %struct.Reg, %struct.Reg* %7807, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %7808 to i64*
  %7809 = load i64, i64* %PC.i442
  %7810 = add i64 %7809, 10
  store i64 %7810, i64* %PC.i442
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i443, align 8
  store %struct.Memory* %loadMem_40ae9b, %struct.Memory** %MEMORY
  %loadMem_40aea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 33
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7813 to i64*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 5
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RCX.i440 = bitcast %union.anon* %7816 to i64*
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 15
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %7819 to i64*
  %7820 = load i64, i64* %RBP.i441
  %7821 = sub i64 %7820, 4
  %7822 = load i64, i64* %PC.i439
  %7823 = add i64 %7822, 3
  store i64 %7823, i64* %PC.i439
  %7824 = inttoptr i64 %7821 to i32*
  %7825 = load i32, i32* %7824
  %7826 = zext i32 %7825 to i64
  store i64 %7826, i64* %RCX.i440, align 8
  store %struct.Memory* %loadMem_40aea5, %struct.Memory** %MEMORY
  %loadMem_40aea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 33
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7829 to i64*
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 5
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %RCX.i438 = bitcast %union.anon* %7832 to i64*
  %7833 = load i64, i64* %RCX.i438
  %7834 = load i64, i64* %PC.i437
  %7835 = add i64 %7834, 3
  store i64 %7835, i64* %PC.i437
  %7836 = trunc i64 %7833 to i32
  %7837 = sub i32 %7836, 20
  %7838 = zext i32 %7837 to i64
  store i64 %7838, i64* %RCX.i438, align 8
  %7839 = icmp ult i32 %7836, 20
  %7840 = zext i1 %7839 to i8
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7840, i8* %7841, align 1
  %7842 = and i32 %7837, 255
  %7843 = call i32 @llvm.ctpop.i32(i32 %7842)
  %7844 = trunc i32 %7843 to i8
  %7845 = and i8 %7844, 1
  %7846 = xor i8 %7845, 1
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7846, i8* %7847, align 1
  %7848 = xor i64 20, %7833
  %7849 = trunc i64 %7848 to i32
  %7850 = xor i32 %7849, %7837
  %7851 = lshr i32 %7850, 4
  %7852 = trunc i32 %7851 to i8
  %7853 = and i8 %7852, 1
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7853, i8* %7854, align 1
  %7855 = icmp eq i32 %7837, 0
  %7856 = zext i1 %7855 to i8
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7856, i8* %7857, align 1
  %7858 = lshr i32 %7837, 31
  %7859 = trunc i32 %7858 to i8
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7859, i8* %7860, align 1
  %7861 = lshr i32 %7836, 31
  %7862 = xor i32 %7858, %7861
  %7863 = add i32 %7862, %7861
  %7864 = icmp eq i32 %7863, 2
  %7865 = zext i1 %7864 to i8
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7865, i8* %7866, align 1
  store %struct.Memory* %loadMem_40aea8, %struct.Memory** %MEMORY
  %loadMem_40aeab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 33
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %7869 to i64*
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 5
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %ECX.i435 = bitcast %union.anon* %7872 to i32*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 7
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %RDX.i436 = bitcast %union.anon* %7875 to i64*
  %7876 = load i32, i32* %ECX.i435
  %7877 = zext i32 %7876 to i64
  %7878 = load i64, i64* %PC.i434
  %7879 = add i64 %7878, 3
  store i64 %7879, i64* %PC.i434
  %7880 = shl i64 %7877, 32
  %7881 = ashr exact i64 %7880, 32
  store i64 %7881, i64* %RDX.i436, align 8
  store %struct.Memory* %loadMem_40aeab, %struct.Memory** %MEMORY
  %loadMem_40aeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 33
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %7884 to i64*
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 5
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %RCX.i432 = bitcast %union.anon* %7887 to i64*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 7
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %RDX.i433 = bitcast %union.anon* %7890 to i64*
  %7891 = load i64, i64* %RDX.i433
  %7892 = mul i64 %7891, 4
  %7893 = add i64 %7892, 11187184
  %7894 = load i64, i64* %PC.i431
  %7895 = add i64 %7894, 7
  store i64 %7895, i64* %PC.i431
  %7896 = inttoptr i64 %7893 to i32*
  %7897 = load i32, i32* %7896
  %7898 = zext i32 %7897 to i64
  store i64 %7898, i64* %RCX.i432, align 8
  store %struct.Memory* %loadMem_40aeae, %struct.Memory** %MEMORY
  %loadMem_40aeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 33
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 5
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %ECX.i429 = bitcast %union.anon* %7904 to i32*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 15
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %7907 to i64*
  %7908 = load i64, i64* %RBP.i430
  %7909 = sub i64 %7908, 28
  %7910 = load i32, i32* %ECX.i429
  %7911 = zext i32 %7910 to i64
  %7912 = load i64, i64* %PC.i428
  %7913 = add i64 %7912, 3
  store i64 %7913, i64* %PC.i428
  %7914 = inttoptr i64 %7909 to i32*
  store i32 %7910, i32* %7914
  store %struct.Memory* %loadMem_40aeb5, %struct.Memory** %MEMORY
  %loadMem_40aeb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 5
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RCX.i426 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 15
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %7923 to i64*
  %7924 = load i64, i64* %RBP.i427
  %7925 = sub i64 %7924, 4
  %7926 = load i64, i64* %PC.i425
  %7927 = add i64 %7926, 3
  store i64 %7927, i64* %PC.i425
  %7928 = inttoptr i64 %7925 to i32*
  %7929 = load i32, i32* %7928
  %7930 = zext i32 %7929 to i64
  store i64 %7930, i64* %RCX.i426, align 8
  store %struct.Memory* %loadMem_40aeb8, %struct.Memory** %MEMORY
  %loadMem_40aebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7932 = getelementptr inbounds %struct.GPR, %struct.GPR* %7931, i32 0, i32 33
  %7933 = getelementptr inbounds %struct.Reg, %struct.Reg* %7932, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %7933 to i64*
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7935 = getelementptr inbounds %struct.GPR, %struct.GPR* %7934, i32 0, i32 5
  %7936 = getelementptr inbounds %struct.Reg, %struct.Reg* %7935, i32 0, i32 0
  %RCX.i424 = bitcast %union.anon* %7936 to i64*
  %7937 = load i64, i64* %RCX.i424
  %7938 = load i64, i64* %PC.i423
  %7939 = add i64 %7938, 3
  store i64 %7939, i64* %PC.i423
  %7940 = trunc i64 %7937 to i32
  %7941 = sub i32 %7940, 20
  %7942 = zext i32 %7941 to i64
  store i64 %7942, i64* %RCX.i424, align 8
  %7943 = icmp ult i32 %7940, 20
  %7944 = zext i1 %7943 to i8
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7944, i8* %7945, align 1
  %7946 = and i32 %7941, 255
  %7947 = call i32 @llvm.ctpop.i32(i32 %7946)
  %7948 = trunc i32 %7947 to i8
  %7949 = and i8 %7948, 1
  %7950 = xor i8 %7949, 1
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7950, i8* %7951, align 1
  %7952 = xor i64 20, %7937
  %7953 = trunc i64 %7952 to i32
  %7954 = xor i32 %7953, %7941
  %7955 = lshr i32 %7954, 4
  %7956 = trunc i32 %7955 to i8
  %7957 = and i8 %7956, 1
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7957, i8* %7958, align 1
  %7959 = icmp eq i32 %7941, 0
  %7960 = zext i1 %7959 to i8
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7960, i8* %7961, align 1
  %7962 = lshr i32 %7941, 31
  %7963 = trunc i32 %7962 to i8
  %7964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7963, i8* %7964, align 1
  %7965 = lshr i32 %7940, 31
  %7966 = xor i32 %7962, %7965
  %7967 = add i32 %7966, %7965
  %7968 = icmp eq i32 %7967, 2
  %7969 = zext i1 %7968 to i8
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7969, i8* %7970, align 1
  store %struct.Memory* %loadMem_40aebb, %struct.Memory** %MEMORY
  %loadMem_40aebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7972 = getelementptr inbounds %struct.GPR, %struct.GPR* %7971, i32 0, i32 33
  %7973 = getelementptr inbounds %struct.Reg, %struct.Reg* %7972, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %7973 to i64*
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 5
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %ECX.i421 = bitcast %union.anon* %7976 to i32*
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7978 = getelementptr inbounds %struct.GPR, %struct.GPR* %7977, i32 0, i32 7
  %7979 = getelementptr inbounds %struct.Reg, %struct.Reg* %7978, i32 0, i32 0
  %RDX.i422 = bitcast %union.anon* %7979 to i64*
  %7980 = load i32, i32* %ECX.i421
  %7981 = zext i32 %7980 to i64
  %7982 = load i64, i64* %PC.i420
  %7983 = add i64 %7982, 3
  store i64 %7983, i64* %PC.i420
  %7984 = shl i64 %7981, 32
  %7985 = ashr exact i64 %7984, 32
  store i64 %7985, i64* %RDX.i422, align 8
  store %struct.Memory* %loadMem_40aebe, %struct.Memory** %MEMORY
  %loadMem_40aec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 33
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %7988 to i64*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 5
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %RCX.i418 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 7
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %7994 to i64*
  %7995 = load i64, i64* %RDX.i419
  %7996 = mul i64 %7995, 4
  %7997 = add i64 %7996, 11187184
  %7998 = load i64, i64* %PC.i417
  %7999 = add i64 %7998, 7
  store i64 %7999, i64* %PC.i417
  %8000 = inttoptr i64 %7997 to i32*
  %8001 = load i32, i32* %8000
  %8002 = zext i32 %8001 to i64
  store i64 %8002, i64* %RCX.i418, align 8
  store %struct.Memory* %loadMem_40aec1, %struct.Memory** %MEMORY
  %loadMem_40aec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 33
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %8005 to i64*
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 7
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %RDX.i415 = bitcast %union.anon* %8008 to i64*
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8010 = getelementptr inbounds %struct.GPR, %struct.GPR* %8009, i32 0, i32 15
  %8011 = getelementptr inbounds %struct.Reg, %struct.Reg* %8010, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %8011 to i64*
  %8012 = load i64, i64* %RBP.i416
  %8013 = sub i64 %8012, 8
  %8014 = load i64, i64* %PC.i414
  %8015 = add i64 %8014, 4
  store i64 %8015, i64* %PC.i414
  %8016 = inttoptr i64 %8013 to i32*
  %8017 = load i32, i32* %8016
  %8018 = sext i32 %8017 to i64
  store i64 %8018, i64* %RDX.i415, align 8
  store %struct.Memory* %loadMem_40aec8, %struct.Memory** %MEMORY
  %loadMem_40aecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 33
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %8021 to i64*
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8023 = getelementptr inbounds %struct.GPR, %struct.GPR* %8022, i32 0, i32 7
  %8024 = getelementptr inbounds %struct.Reg, %struct.Reg* %8023, i32 0, i32 0
  %RDX.i413 = bitcast %union.anon* %8024 to i64*
  %8025 = load i64, i64* %RDX.i413
  %8026 = load i64, i64* %PC.i412
  %8027 = add i64 %8026, 7
  store i64 %8027, i64* %PC.i412
  %8028 = sext i64 %8025 to i128
  %8029 = and i128 %8028, -18446744073709551616
  %8030 = zext i64 %8025 to i128
  %8031 = or i128 %8029, %8030
  %8032 = mul i128 744, %8031
  %8033 = trunc i128 %8032 to i64
  store i64 %8033, i64* %RDX.i413, align 8
  %8034 = sext i64 %8033 to i128
  %8035 = icmp ne i128 %8034, %8032
  %8036 = zext i1 %8035 to i8
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8036, i8* %8037, align 1
  %8038 = trunc i128 %8032 to i32
  %8039 = and i32 %8038, 255
  %8040 = call i32 @llvm.ctpop.i32(i32 %8039)
  %8041 = trunc i32 %8040 to i8
  %8042 = and i8 %8041, 1
  %8043 = xor i8 %8042, 1
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8043, i8* %8044, align 1
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8045, align 1
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8046, align 1
  %8047 = lshr i64 %8033, 63
  %8048 = trunc i64 %8047 to i8
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8048, i8* %8049, align 1
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8036, i8* %8050, align 1
  store %struct.Memory* %loadMem_40aecc, %struct.Memory** %MEMORY
  %loadMem_40aed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 33
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %8053 to i64*
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 1
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %RAX.i410 = bitcast %union.anon* %8056 to i64*
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 9
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %RSI.i411 = bitcast %union.anon* %8059 to i64*
  %8060 = load i64, i64* %RAX.i410
  %8061 = load i64, i64* %PC.i409
  %8062 = add i64 %8061, 3
  store i64 %8062, i64* %PC.i409
  store i64 %8060, i64* %RSI.i411, align 8
  store %struct.Memory* %loadMem_40aed3, %struct.Memory** %MEMORY
  %loadMem_40aed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 33
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %8065 to i64*
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8067 = getelementptr inbounds %struct.GPR, %struct.GPR* %8066, i32 0, i32 7
  %8068 = getelementptr inbounds %struct.Reg, %struct.Reg* %8067, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %8068 to i64*
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8070 = getelementptr inbounds %struct.GPR, %struct.GPR* %8069, i32 0, i32 9
  %8071 = getelementptr inbounds %struct.Reg, %struct.Reg* %8070, i32 0, i32 0
  %RSI.i408 = bitcast %union.anon* %8071 to i64*
  %8072 = load i64, i64* %RSI.i408
  %8073 = load i64, i64* %RDX.i407
  %8074 = load i64, i64* %PC.i406
  %8075 = add i64 %8074, 3
  store i64 %8075, i64* %PC.i406
  %8076 = add i64 %8073, %8072
  store i64 %8076, i64* %RSI.i408, align 8
  %8077 = icmp ult i64 %8076, %8072
  %8078 = icmp ult i64 %8076, %8073
  %8079 = or i1 %8077, %8078
  %8080 = zext i1 %8079 to i8
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8080, i8* %8081, align 1
  %8082 = trunc i64 %8076 to i32
  %8083 = and i32 %8082, 255
  %8084 = call i32 @llvm.ctpop.i32(i32 %8083)
  %8085 = trunc i32 %8084 to i8
  %8086 = and i8 %8085, 1
  %8087 = xor i8 %8086, 1
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8087, i8* %8088, align 1
  %8089 = xor i64 %8073, %8072
  %8090 = xor i64 %8089, %8076
  %8091 = lshr i64 %8090, 4
  %8092 = trunc i64 %8091 to i8
  %8093 = and i8 %8092, 1
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8093, i8* %8094, align 1
  %8095 = icmp eq i64 %8076, 0
  %8096 = zext i1 %8095 to i8
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8096, i8* %8097, align 1
  %8098 = lshr i64 %8076, 63
  %8099 = trunc i64 %8098 to i8
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8099, i8* %8100, align 1
  %8101 = lshr i64 %8072, 63
  %8102 = lshr i64 %8073, 63
  %8103 = xor i64 %8098, %8101
  %8104 = xor i64 %8098, %8102
  %8105 = add i64 %8103, %8104
  %8106 = icmp eq i64 %8105, 2
  %8107 = zext i1 %8106 to i8
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8107, i8* %8108, align 1
  store %struct.Memory* %loadMem_40aed6, %struct.Memory** %MEMORY
  %loadMem_40aed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8110 = getelementptr inbounds %struct.GPR, %struct.GPR* %8109, i32 0, i32 33
  %8111 = getelementptr inbounds %struct.Reg, %struct.Reg* %8110, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %8111 to i64*
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8113 = getelementptr inbounds %struct.GPR, %struct.GPR* %8112, i32 0, i32 7
  %8114 = getelementptr inbounds %struct.Reg, %struct.Reg* %8113, i32 0, i32 0
  %RDX.i404 = bitcast %union.anon* %8114 to i64*
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8116 = getelementptr inbounds %struct.GPR, %struct.GPR* %8115, i32 0, i32 15
  %8117 = getelementptr inbounds %struct.Reg, %struct.Reg* %8116, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %8117 to i64*
  %8118 = load i64, i64* %RBP.i405
  %8119 = sub i64 %8118, 8
  %8120 = load i64, i64* %PC.i403
  %8121 = add i64 %8120, 4
  store i64 %8121, i64* %PC.i403
  %8122 = inttoptr i64 %8119 to i32*
  %8123 = load i32, i32* %8122
  %8124 = sext i32 %8123 to i64
  store i64 %8124, i64* %RDX.i404, align 8
  store %struct.Memory* %loadMem_40aed9, %struct.Memory** %MEMORY
  %loadMem_40aedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 33
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %8127 to i64*
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8129 = getelementptr inbounds %struct.GPR, %struct.GPR* %8128, i32 0, i32 7
  %8130 = getelementptr inbounds %struct.Reg, %struct.Reg* %8129, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %8130 to i64*
  %8131 = load i64, i64* %RDX.i402
  %8132 = load i64, i64* %PC.i401
  %8133 = add i64 %8132, 7
  store i64 %8133, i64* %PC.i401
  %8134 = sext i64 %8131 to i128
  %8135 = and i128 %8134, -18446744073709551616
  %8136 = zext i64 %8131 to i128
  %8137 = or i128 %8135, %8136
  %8138 = mul i128 744, %8137
  %8139 = trunc i128 %8138 to i64
  store i64 %8139, i64* %RDX.i402, align 8
  %8140 = sext i64 %8139 to i128
  %8141 = icmp ne i128 %8140, %8138
  %8142 = zext i1 %8141 to i8
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8142, i8* %8143, align 1
  %8144 = trunc i128 %8138 to i32
  %8145 = and i32 %8144, 255
  %8146 = call i32 @llvm.ctpop.i32(i32 %8145)
  %8147 = trunc i32 %8146 to i8
  %8148 = and i8 %8147, 1
  %8149 = xor i8 %8148, 1
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8149, i8* %8150, align 1
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8151, align 1
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8152, align 1
  %8153 = lshr i64 %8139, 63
  %8154 = trunc i64 %8153 to i8
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8154, i8* %8155, align 1
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8142, i8* %8156, align 1
  store %struct.Memory* %loadMem_40aedd, %struct.Memory** %MEMORY
  %loadMem_40aee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8158 = getelementptr inbounds %struct.GPR, %struct.GPR* %8157, i32 0, i32 33
  %8159 = getelementptr inbounds %struct.Reg, %struct.Reg* %8158, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %8159 to i64*
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 1
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %RAX.i399 = bitcast %union.anon* %8162 to i64*
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 11
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %RDI.i400 = bitcast %union.anon* %8165 to i64*
  %8166 = load i64, i64* %RAX.i399
  %8167 = load i64, i64* %PC.i398
  %8168 = add i64 %8167, 3
  store i64 %8168, i64* %PC.i398
  store i64 %8166, i64* %RDI.i400, align 8
  store %struct.Memory* %loadMem_40aee4, %struct.Memory** %MEMORY
  %loadMem_40aee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 33
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %8171 to i64*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 7
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %RDX.i396 = bitcast %union.anon* %8174 to i64*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 11
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %RDI.i397 = bitcast %union.anon* %8177 to i64*
  %8178 = load i64, i64* %RDI.i397
  %8179 = load i64, i64* %RDX.i396
  %8180 = load i64, i64* %PC.i395
  %8181 = add i64 %8180, 3
  store i64 %8181, i64* %PC.i395
  %8182 = add i64 %8179, %8178
  store i64 %8182, i64* %RDI.i397, align 8
  %8183 = icmp ult i64 %8182, %8178
  %8184 = icmp ult i64 %8182, %8179
  %8185 = or i1 %8183, %8184
  %8186 = zext i1 %8185 to i8
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8186, i8* %8187, align 1
  %8188 = trunc i64 %8182 to i32
  %8189 = and i32 %8188, 255
  %8190 = call i32 @llvm.ctpop.i32(i32 %8189)
  %8191 = trunc i32 %8190 to i8
  %8192 = and i8 %8191, 1
  %8193 = xor i8 %8192, 1
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8193, i8* %8194, align 1
  %8195 = xor i64 %8179, %8178
  %8196 = xor i64 %8195, %8182
  %8197 = lshr i64 %8196, 4
  %8198 = trunc i64 %8197 to i8
  %8199 = and i8 %8198, 1
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8199, i8* %8200, align 1
  %8201 = icmp eq i64 %8182, 0
  %8202 = zext i1 %8201 to i8
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8202, i8* %8203, align 1
  %8204 = lshr i64 %8182, 63
  %8205 = trunc i64 %8204 to i8
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8205, i8* %8206, align 1
  %8207 = lshr i64 %8178, 63
  %8208 = lshr i64 %8179, 63
  %8209 = xor i64 %8204, %8207
  %8210 = xor i64 %8204, %8208
  %8211 = add i64 %8209, %8210
  %8212 = icmp eq i64 %8211, 2
  %8213 = zext i1 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8213, i8* %8214, align 1
  store %struct.Memory* %loadMem_40aee7, %struct.Memory** %MEMORY
  %loadMem_40aeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8216 = getelementptr inbounds %struct.GPR, %struct.GPR* %8215, i32 0, i32 33
  %8217 = getelementptr inbounds %struct.Reg, %struct.Reg* %8216, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %8217 to i64*
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8219 = getelementptr inbounds %struct.GPR, %struct.GPR* %8218, i32 0, i32 17
  %8220 = getelementptr inbounds %struct.Reg, %struct.Reg* %8219, i32 0, i32 0
  %R8D.i393 = bitcast %union.anon* %8220 to i32*
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 11
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %RDI.i394 = bitcast %union.anon* %8223 to i64*
  %8224 = bitcast i32* %R8D.i393 to i64*
  %8225 = load i64, i64* %RDI.i394
  %8226 = add i64 %8225, 96
  %8227 = load i64, i64* %PC.i392
  %8228 = add i64 %8227, 4
  store i64 %8228, i64* %PC.i392
  %8229 = inttoptr i64 %8226 to i32*
  %8230 = load i32, i32* %8229
  %8231 = zext i32 %8230 to i64
  store i64 %8231, i64* %8224, align 8
  store %struct.Memory* %loadMem_40aeea, %struct.Memory** %MEMORY
  %loadMem_40aeee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 33
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 17
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %8237 to i32*
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8239 = getelementptr inbounds %struct.GPR, %struct.GPR* %8238, i32 0, i32 19
  %8240 = getelementptr inbounds %struct.Reg, %struct.Reg* %8239, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %8240 to i32*
  %8241 = bitcast i32* %R9D.i391 to i64*
  %8242 = load i32, i32* %R8D.i390
  %8243 = zext i32 %8242 to i64
  %8244 = load i64, i64* %PC.i389
  %8245 = add i64 %8244, 3
  store i64 %8245, i64* %PC.i389
  %8246 = and i64 %8243, 4294967295
  store i64 %8246, i64* %8241, align 8
  store %struct.Memory* %loadMem_40aeee, %struct.Memory** %MEMORY
  %loadMem_40aef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8248 = getelementptr inbounds %struct.GPR, %struct.GPR* %8247, i32 0, i32 33
  %8249 = getelementptr inbounds %struct.Reg, %struct.Reg* %8248, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %8249 to i64*
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 19
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %R9D.i388 = bitcast %union.anon* %8252 to i32*
  %8253 = bitcast i32* %R9D.i388 to i64*
  %8254 = load i32, i32* %R9D.i388
  %8255 = zext i32 %8254 to i64
  %8256 = load i64, i64* %PC.i387
  %8257 = add i64 %8256, 4
  store i64 %8257, i64* %PC.i387
  %8258 = add i32 1, %8254
  %8259 = zext i32 %8258 to i64
  store i64 %8259, i64* %8253, align 8
  %8260 = icmp ult i32 %8258, %8254
  %8261 = icmp ult i32 %8258, 1
  %8262 = or i1 %8260, %8261
  %8263 = zext i1 %8262 to i8
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8263, i8* %8264, align 1
  %8265 = and i32 %8258, 255
  %8266 = call i32 @llvm.ctpop.i32(i32 %8265)
  %8267 = trunc i32 %8266 to i8
  %8268 = and i8 %8267, 1
  %8269 = xor i8 %8268, 1
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8269, i8* %8270, align 1
  %8271 = xor i64 1, %8255
  %8272 = trunc i64 %8271 to i32
  %8273 = xor i32 %8272, %8258
  %8274 = lshr i32 %8273, 4
  %8275 = trunc i32 %8274 to i8
  %8276 = and i8 %8275, 1
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8276, i8* %8277, align 1
  %8278 = icmp eq i32 %8258, 0
  %8279 = zext i1 %8278 to i8
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8279, i8* %8280, align 1
  %8281 = lshr i32 %8258, 31
  %8282 = trunc i32 %8281 to i8
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8282, i8* %8283, align 1
  %8284 = lshr i32 %8254, 31
  %8285 = xor i32 %8281, %8284
  %8286 = add i32 %8285, %8281
  %8287 = icmp eq i32 %8286, 2
  %8288 = zext i1 %8287 to i8
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8288, i8* %8289, align 1
  store %struct.Memory* %loadMem_40aef1, %struct.Memory** %MEMORY
  %loadMem_40aef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 33
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %8292 to i64*
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 19
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %R9D.i385 = bitcast %union.anon* %8295 to i32*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 11
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RDI.i386 = bitcast %union.anon* %8298 to i64*
  %8299 = load i64, i64* %RDI.i386
  %8300 = add i64 %8299, 96
  %8301 = load i32, i32* %R9D.i385
  %8302 = zext i32 %8301 to i64
  %8303 = load i64, i64* %PC.i384
  %8304 = add i64 %8303, 4
  store i64 %8304, i64* %PC.i384
  %8305 = inttoptr i64 %8300 to i32*
  store i32 %8301, i32* %8305
  store %struct.Memory* %loadMem_40aef5, %struct.Memory** %MEMORY
  %loadMem_40aef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 33
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %8308 to i64*
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8310 = getelementptr inbounds %struct.GPR, %struct.GPR* %8309, i32 0, i32 17
  %8311 = getelementptr inbounds %struct.Reg, %struct.Reg* %8310, i32 0, i32 0
  %R8D.i382 = bitcast %union.anon* %8311 to i32*
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8313 = getelementptr inbounds %struct.GPR, %struct.GPR* %8312, i32 0, i32 7
  %8314 = getelementptr inbounds %struct.Reg, %struct.Reg* %8313, i32 0, i32 0
  %RDX.i383 = bitcast %union.anon* %8314 to i64*
  %8315 = load i32, i32* %R8D.i382
  %8316 = zext i32 %8315 to i64
  %8317 = load i64, i64* %PC.i381
  %8318 = add i64 %8317, 3
  store i64 %8318, i64* %PC.i381
  %8319 = shl i64 %8316, 32
  %8320 = ashr exact i64 %8319, 32
  store i64 %8320, i64* %RDX.i383, align 8
  store %struct.Memory* %loadMem_40aef9, %struct.Memory** %MEMORY
  %loadMem_40aefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8322 = getelementptr inbounds %struct.GPR, %struct.GPR* %8321, i32 0, i32 33
  %8323 = getelementptr inbounds %struct.Reg, %struct.Reg* %8322, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %8323 to i64*
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8325 = getelementptr inbounds %struct.GPR, %struct.GPR* %8324, i32 0, i32 5
  %8326 = getelementptr inbounds %struct.Reg, %struct.Reg* %8325, i32 0, i32 0
  %ECX.i378 = bitcast %union.anon* %8326 to i32*
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8328 = getelementptr inbounds %struct.GPR, %struct.GPR* %8327, i32 0, i32 7
  %8329 = getelementptr inbounds %struct.Reg, %struct.Reg* %8328, i32 0, i32 0
  %RDX.i379 = bitcast %union.anon* %8329 to i64*
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 9
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %RSI.i380 = bitcast %union.anon* %8332 to i64*
  %8333 = load i64, i64* %RSI.i380
  %8334 = load i64, i64* %RDX.i379
  %8335 = mul i64 %8334, 4
  %8336 = add i64 %8333, 100
  %8337 = add i64 %8336, %8335
  %8338 = load i32, i32* %ECX.i378
  %8339 = zext i32 %8338 to i64
  %8340 = load i64, i64* %PC.i377
  %8341 = add i64 %8340, 4
  store i64 %8341, i64* %PC.i377
  %8342 = inttoptr i64 %8337 to i32*
  store i32 %8338, i32* %8342
  store %struct.Memory* %loadMem_40aefc, %struct.Memory** %MEMORY
  %loadMem_40af00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8344 = getelementptr inbounds %struct.GPR, %struct.GPR* %8343, i32 0, i32 33
  %8345 = getelementptr inbounds %struct.Reg, %struct.Reg* %8344, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %8345 to i64*
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8347 = getelementptr inbounds %struct.GPR, %struct.GPR* %8346, i32 0, i32 7
  %8348 = getelementptr inbounds %struct.Reg, %struct.Reg* %8347, i32 0, i32 0
  %RDX.i375 = bitcast %union.anon* %8348 to i64*
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 15
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %8351 to i64*
  %8352 = load i64, i64* %RBP.i376
  %8353 = sub i64 %8352, 28
  %8354 = load i64, i64* %PC.i374
  %8355 = add i64 %8354, 4
  store i64 %8355, i64* %PC.i374
  %8356 = inttoptr i64 %8353 to i32*
  %8357 = load i32, i32* %8356
  %8358 = sext i32 %8357 to i64
  store i64 %8358, i64* %RDX.i375, align 8
  store %struct.Memory* %loadMem_40af00, %struct.Memory** %MEMORY
  %loadMem_40af04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 33
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %8361 to i64*
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8363 = getelementptr inbounds %struct.GPR, %struct.GPR* %8362, i32 0, i32 7
  %8364 = getelementptr inbounds %struct.Reg, %struct.Reg* %8363, i32 0, i32 0
  %RDX.i373 = bitcast %union.anon* %8364 to i64*
  %8365 = load i64, i64* %RDX.i373
  %8366 = load i64, i64* %PC.i372
  %8367 = add i64 %8366, 7
  store i64 %8367, i64* %PC.i372
  %8368 = sext i64 %8365 to i128
  %8369 = and i128 %8368, -18446744073709551616
  %8370 = zext i64 %8365 to i128
  %8371 = or i128 %8369, %8370
  %8372 = mul i128 744, %8371
  %8373 = trunc i128 %8372 to i64
  store i64 %8373, i64* %RDX.i373, align 8
  %8374 = sext i64 %8373 to i128
  %8375 = icmp ne i128 %8374, %8372
  %8376 = zext i1 %8375 to i8
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8376, i8* %8377, align 1
  %8378 = trunc i128 %8372 to i32
  %8379 = and i32 %8378, 255
  %8380 = call i32 @llvm.ctpop.i32(i32 %8379)
  %8381 = trunc i32 %8380 to i8
  %8382 = and i8 %8381, 1
  %8383 = xor i8 %8382, 1
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8383, i8* %8384, align 1
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8385, align 1
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8386, align 1
  %8387 = lshr i64 %8373, 63
  %8388 = trunc i64 %8387 to i8
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8388, i8* %8389, align 1
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8376, i8* %8390, align 1
  store %struct.Memory* %loadMem_40af04, %struct.Memory** %MEMORY
  %loadMem_40af0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 33
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 1
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %8396 to i64*
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 9
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %RSI.i371 = bitcast %union.anon* %8399 to i64*
  %8400 = load i64, i64* %RAX.i370
  %8401 = load i64, i64* %PC.i369
  %8402 = add i64 %8401, 3
  store i64 %8402, i64* %PC.i369
  store i64 %8400, i64* %RSI.i371, align 8
  store %struct.Memory* %loadMem_40af0b, %struct.Memory** %MEMORY
  %loadMem_40af0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 33
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %8405 to i64*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 7
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %RDX.i367 = bitcast %union.anon* %8408 to i64*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 9
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %RSI.i368 = bitcast %union.anon* %8411 to i64*
  %8412 = load i64, i64* %RSI.i368
  %8413 = load i64, i64* %RDX.i367
  %8414 = load i64, i64* %PC.i366
  %8415 = add i64 %8414, 3
  store i64 %8415, i64* %PC.i366
  %8416 = add i64 %8413, %8412
  store i64 %8416, i64* %RSI.i368, align 8
  %8417 = icmp ult i64 %8416, %8412
  %8418 = icmp ult i64 %8416, %8413
  %8419 = or i1 %8417, %8418
  %8420 = zext i1 %8419 to i8
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8420, i8* %8421, align 1
  %8422 = trunc i64 %8416 to i32
  %8423 = and i32 %8422, 255
  %8424 = call i32 @llvm.ctpop.i32(i32 %8423)
  %8425 = trunc i32 %8424 to i8
  %8426 = and i8 %8425, 1
  %8427 = xor i8 %8426, 1
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8427, i8* %8428, align 1
  %8429 = xor i64 %8413, %8412
  %8430 = xor i64 %8429, %8416
  %8431 = lshr i64 %8430, 4
  %8432 = trunc i64 %8431 to i8
  %8433 = and i8 %8432, 1
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8433, i8* %8434, align 1
  %8435 = icmp eq i64 %8416, 0
  %8436 = zext i1 %8435 to i8
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8436, i8* %8437, align 1
  %8438 = lshr i64 %8416, 63
  %8439 = trunc i64 %8438 to i8
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8439, i8* %8440, align 1
  %8441 = lshr i64 %8412, 63
  %8442 = lshr i64 %8413, 63
  %8443 = xor i64 %8438, %8441
  %8444 = xor i64 %8438, %8442
  %8445 = add i64 %8443, %8444
  %8446 = icmp eq i64 %8445, 2
  %8447 = zext i1 %8446 to i8
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8447, i8* %8448, align 1
  store %struct.Memory* %loadMem_40af0e, %struct.Memory** %MEMORY
  %loadMem_40af11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 33
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %8451 to i64*
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 9
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %RSI.i365 = bitcast %union.anon* %8454 to i64*
  %8455 = load i64, i64* %RSI.i365
  %8456 = load i64, i64* %PC.i364
  %8457 = add i64 %8456, 4
  store i64 %8457, i64* %PC.i364
  %8458 = add i64 96, %8455
  store i64 %8458, i64* %RSI.i365, align 8
  %8459 = icmp ult i64 %8458, %8455
  %8460 = icmp ult i64 %8458, 96
  %8461 = or i1 %8459, %8460
  %8462 = zext i1 %8461 to i8
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8462, i8* %8463, align 1
  %8464 = trunc i64 %8458 to i32
  %8465 = and i32 %8464, 255
  %8466 = call i32 @llvm.ctpop.i32(i32 %8465)
  %8467 = trunc i32 %8466 to i8
  %8468 = and i8 %8467, 1
  %8469 = xor i8 %8468, 1
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8469, i8* %8470, align 1
  %8471 = xor i64 96, %8455
  %8472 = xor i64 %8471, %8458
  %8473 = lshr i64 %8472, 4
  %8474 = trunc i64 %8473 to i8
  %8475 = and i8 %8474, 1
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8475, i8* %8476, align 1
  %8477 = icmp eq i64 %8458, 0
  %8478 = zext i1 %8477 to i8
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8478, i8* %8479, align 1
  %8480 = lshr i64 %8458, 63
  %8481 = trunc i64 %8480 to i8
  %8482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8481, i8* %8482, align 1
  %8483 = lshr i64 %8455, 63
  %8484 = xor i64 %8480, %8483
  %8485 = add i64 %8484, %8480
  %8486 = icmp eq i64 %8485, 2
  %8487 = zext i1 %8486 to i8
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8487, i8* %8488, align 1
  store %struct.Memory* %loadMem_40af11, %struct.Memory** %MEMORY
  %loadMem_40af15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 33
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 7
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RDX.i363 = bitcast %union.anon* %8494 to i64*
  %8495 = load i64, i64* %PC.i362
  %8496 = add i64 %8495, 8
  store i64 %8496, i64* %PC.i362
  %8497 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %8497, i64* %RDX.i363, align 8
  store %struct.Memory* %loadMem_40af15, %struct.Memory** %MEMORY
  %loadMem_40af1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 33
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %8500 to i64*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 7
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %RDX.i360 = bitcast %union.anon* %8503 to i64*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 9
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %RSI.i361 = bitcast %union.anon* %8506 to i64*
  %8507 = load i64, i64* %RDX.i360
  %8508 = load i64, i64* %RSI.i361
  %8509 = load i64, i64* %PC.i359
  %8510 = add i64 %8509, 3
  store i64 %8510, i64* %PC.i359
  %8511 = inttoptr i64 %8507 to i64*
  store i64 %8508, i64* %8511
  store %struct.Memory* %loadMem_40af1d, %struct.Memory** %MEMORY
  %loadMem_40af20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 33
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8514 to i64*
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8516 = getelementptr inbounds %struct.GPR, %struct.GPR* %8515, i32 0, i32 7
  %8517 = getelementptr inbounds %struct.Reg, %struct.Reg* %8516, i32 0, i32 0
  %RDX.i357 = bitcast %union.anon* %8517 to i64*
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8519 = getelementptr inbounds %struct.GPR, %struct.GPR* %8518, i32 0, i32 15
  %8520 = getelementptr inbounds %struct.Reg, %struct.Reg* %8519, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %8520 to i64*
  %8521 = load i64, i64* %RBP.i358
  %8522 = sub i64 %8521, 28
  %8523 = load i64, i64* %PC.i356
  %8524 = add i64 %8523, 4
  store i64 %8524, i64* %PC.i356
  %8525 = inttoptr i64 %8522 to i32*
  %8526 = load i32, i32* %8525
  %8527 = sext i32 %8526 to i64
  store i64 %8527, i64* %RDX.i357, align 8
  store %struct.Memory* %loadMem_40af20, %struct.Memory** %MEMORY
  %loadMem_40af24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 7
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RDX.i355 = bitcast %union.anon* %8533 to i64*
  %8534 = load i64, i64* %RDX.i355
  %8535 = load i64, i64* %PC.i354
  %8536 = add i64 %8535, 7
  store i64 %8536, i64* %PC.i354
  %8537 = sext i64 %8534 to i128
  %8538 = and i128 %8537, -18446744073709551616
  %8539 = zext i64 %8534 to i128
  %8540 = or i128 %8538, %8539
  %8541 = mul i128 744, %8540
  %8542 = trunc i128 %8541 to i64
  store i64 %8542, i64* %RDX.i355, align 8
  %8543 = sext i64 %8542 to i128
  %8544 = icmp ne i128 %8543, %8541
  %8545 = zext i1 %8544 to i8
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8545, i8* %8546, align 1
  %8547 = trunc i128 %8541 to i32
  %8548 = and i32 %8547, 255
  %8549 = call i32 @llvm.ctpop.i32(i32 %8548)
  %8550 = trunc i32 %8549 to i8
  %8551 = and i8 %8550, 1
  %8552 = xor i8 %8551, 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8552, i8* %8553, align 1
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8554, align 1
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8555, align 1
  %8556 = lshr i64 %8542, 63
  %8557 = trunc i64 %8556 to i8
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8557, i8* %8558, align 1
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8545, i8* %8559, align 1
  store %struct.Memory* %loadMem_40af24, %struct.Memory** %MEMORY
  %loadMem_40af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 33
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %8562 to i64*
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 1
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %RAX.i352 = bitcast %union.anon* %8565 to i64*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 9
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RSI.i353 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %RAX.i352
  %8570 = load i64, i64* %PC.i351
  %8571 = add i64 %8570, 3
  store i64 %8571, i64* %PC.i351
  store i64 %8569, i64* %RSI.i353, align 8
  store %struct.Memory* %loadMem_40af2b, %struct.Memory** %MEMORY
  %loadMem_40af2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 33
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %8574 to i64*
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8576 = getelementptr inbounds %struct.GPR, %struct.GPR* %8575, i32 0, i32 7
  %8577 = getelementptr inbounds %struct.Reg, %struct.Reg* %8576, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %8577 to i64*
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 9
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %RSI.i350 = bitcast %union.anon* %8580 to i64*
  %8581 = load i64, i64* %RSI.i350
  %8582 = load i64, i64* %RDX.i349
  %8583 = load i64, i64* %PC.i348
  %8584 = add i64 %8583, 3
  store i64 %8584, i64* %PC.i348
  %8585 = add i64 %8582, %8581
  store i64 %8585, i64* %RSI.i350, align 8
  %8586 = icmp ult i64 %8585, %8581
  %8587 = icmp ult i64 %8585, %8582
  %8588 = or i1 %8586, %8587
  %8589 = zext i1 %8588 to i8
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8589, i8* %8590, align 1
  %8591 = trunc i64 %8585 to i32
  %8592 = and i32 %8591, 255
  %8593 = call i32 @llvm.ctpop.i32(i32 %8592)
  %8594 = trunc i32 %8593 to i8
  %8595 = and i8 %8594, 1
  %8596 = xor i8 %8595, 1
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8596, i8* %8597, align 1
  %8598 = xor i64 %8582, %8581
  %8599 = xor i64 %8598, %8585
  %8600 = lshr i64 %8599, 4
  %8601 = trunc i64 %8600 to i8
  %8602 = and i8 %8601, 1
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8602, i8* %8603, align 1
  %8604 = icmp eq i64 %8585, 0
  %8605 = zext i1 %8604 to i8
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8605, i8* %8606, align 1
  %8607 = lshr i64 %8585, 63
  %8608 = trunc i64 %8607 to i8
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8608, i8* %8609, align 1
  %8610 = lshr i64 %8581, 63
  %8611 = lshr i64 %8582, 63
  %8612 = xor i64 %8607, %8610
  %8613 = xor i64 %8607, %8611
  %8614 = add i64 %8612, %8613
  %8615 = icmp eq i64 %8614, 2
  %8616 = zext i1 %8615 to i8
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8616, i8* %8617, align 1
  store %struct.Memory* %loadMem_40af2e, %struct.Memory** %MEMORY
  %loadMem_40af31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 33
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %8620 to i64*
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 5
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %RCX.i346 = bitcast %union.anon* %8623 to i64*
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 9
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %RSI.i347 = bitcast %union.anon* %8626 to i64*
  %8627 = load i64, i64* %RSI.i347
  %8628 = add i64 %8627, 96
  %8629 = load i64, i64* %PC.i345
  %8630 = add i64 %8629, 3
  store i64 %8630, i64* %PC.i345
  %8631 = inttoptr i64 %8628 to i32*
  %8632 = load i32, i32* %8631
  %8633 = zext i32 %8632 to i64
  store i64 %8633, i64* %RCX.i346, align 8
  store %struct.Memory* %loadMem_40af31, %struct.Memory** %MEMORY
  %loadMem_40af34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 33
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %8636 to i64*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 7
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %RDX.i344 = bitcast %union.anon* %8639 to i64*
  %8640 = load i64, i64* %PC.i343
  %8641 = add i64 %8640, 8
  store i64 %8641, i64* %PC.i343
  %8642 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %8642, i64* %RDX.i344, align 8
  store %struct.Memory* %loadMem_40af34, %struct.Memory** %MEMORY
  %loadMem_40af3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 33
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 7
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %8648 to i64*
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 9
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %RSI.i342 = bitcast %union.anon* %8651 to i64*
  %8652 = load i64, i64* %RDX.i341
  %8653 = load i64, i64* %PC.i340
  %8654 = add i64 %8653, 3
  store i64 %8654, i64* %PC.i340
  store i64 %8652, i64* %RSI.i342, align 8
  store %struct.Memory* %loadMem_40af3c, %struct.Memory** %MEMORY
  %loadMem_40af3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 33
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %8657 to i64*
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8659 = getelementptr inbounds %struct.GPR, %struct.GPR* %8658, i32 0, i32 9
  %8660 = getelementptr inbounds %struct.Reg, %struct.Reg* %8659, i32 0, i32 0
  %RSI.i339 = bitcast %union.anon* %8660 to i64*
  %8661 = load i64, i64* %RSI.i339
  %8662 = load i64, i64* %PC.i338
  %8663 = add i64 %8662, 4
  store i64 %8663, i64* %PC.i338
  %8664 = add i64 16, %8661
  store i64 %8664, i64* %RSI.i339, align 8
  %8665 = icmp ult i64 %8664, %8661
  %8666 = icmp ult i64 %8664, 16
  %8667 = or i1 %8665, %8666
  %8668 = zext i1 %8667 to i8
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8668, i8* %8669, align 1
  %8670 = trunc i64 %8664 to i32
  %8671 = and i32 %8670, 255
  %8672 = call i32 @llvm.ctpop.i32(i32 %8671)
  %8673 = trunc i32 %8672 to i8
  %8674 = and i8 %8673, 1
  %8675 = xor i8 %8674, 1
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8675, i8* %8676, align 1
  %8677 = xor i64 16, %8661
  %8678 = xor i64 %8677, %8664
  %8679 = lshr i64 %8678, 4
  %8680 = trunc i64 %8679 to i8
  %8681 = and i8 %8680, 1
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8681, i8* %8682, align 1
  %8683 = icmp eq i64 %8664, 0
  %8684 = zext i1 %8683 to i8
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8684, i8* %8685, align 1
  %8686 = lshr i64 %8664, 63
  %8687 = trunc i64 %8686 to i8
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8687, i8* %8688, align 1
  %8689 = lshr i64 %8661, 63
  %8690 = xor i64 %8686, %8689
  %8691 = add i64 %8690, %8686
  %8692 = icmp eq i64 %8691, 2
  %8693 = zext i1 %8692 to i8
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8693, i8* %8694, align 1
  store %struct.Memory* %loadMem_40af3f, %struct.Memory** %MEMORY
  %loadMem_40af43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 9
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RSI.i337 = bitcast %union.anon* %8700 to i64*
  %8701 = load i64, i64* %RSI.i337
  %8702 = load i64, i64* %PC.i336
  %8703 = add i64 %8702, 8
  store i64 %8703, i64* %PC.i336
  store i64 %8701, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40af43, %struct.Memory** %MEMORY
  %loadMem_40af4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 33
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %8706 to i64*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 5
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %ECX.i334 = bitcast %union.anon* %8709 to i32*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 7
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %RDX.i335 = bitcast %union.anon* %8712 to i64*
  %8713 = load i64, i64* %RDX.i335
  %8714 = add i64 %8713, 8
  %8715 = load i32, i32* %ECX.i334
  %8716 = zext i32 %8715 to i64
  %8717 = load i64, i64* %PC.i333
  %8718 = add i64 %8717, 3
  store i64 %8718, i64* %PC.i333
  %8719 = inttoptr i64 %8714 to i32*
  store i32 %8715, i32* %8719
  store %struct.Memory* %loadMem_40af4b, %struct.Memory** %MEMORY
  %loadMem_40af4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 33
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 7
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RDX.i331 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 15
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %RBP.i332
  %8730 = sub i64 %8729, 4
  %8731 = load i64, i64* %PC.i330
  %8732 = add i64 %8731, 4
  store i64 %8732, i64* %PC.i330
  %8733 = inttoptr i64 %8730 to i32*
  %8734 = load i32, i32* %8733
  %8735 = sext i32 %8734 to i64
  store i64 %8735, i64* %RDX.i331, align 8
  store %struct.Memory* %loadMem_40af4e, %struct.Memory** %MEMORY
  %loadMem_40af52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 33
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 5
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %RCX.i328 = bitcast %union.anon* %8741 to i64*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 7
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RDX.i329 = bitcast %union.anon* %8744 to i64*
  %8745 = load i64, i64* %RDX.i329
  %8746 = mul i64 %8745, 4
  %8747 = add i64 %8746, 11187184
  %8748 = load i64, i64* %PC.i327
  %8749 = add i64 %8748, 7
  store i64 %8749, i64* %PC.i327
  %8750 = inttoptr i64 %8747 to i32*
  %8751 = load i32, i32* %8750
  %8752 = zext i32 %8751 to i64
  store i64 %8752, i64* %RCX.i328, align 8
  store %struct.Memory* %loadMem_40af52, %struct.Memory** %MEMORY
  %loadMem_40af59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 33
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %8755 to i64*
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 7
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %8758 to i64*
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 15
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %8761 to i64*
  %8762 = load i64, i64* %RBP.i326
  %8763 = sub i64 %8762, 28
  %8764 = load i64, i64* %PC.i324
  %8765 = add i64 %8764, 4
  store i64 %8765, i64* %PC.i324
  %8766 = inttoptr i64 %8763 to i32*
  %8767 = load i32, i32* %8766
  %8768 = sext i32 %8767 to i64
  store i64 %8768, i64* %RDX.i325, align 8
  store %struct.Memory* %loadMem_40af59, %struct.Memory** %MEMORY
  %loadMem_40af5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8770 = getelementptr inbounds %struct.GPR, %struct.GPR* %8769, i32 0, i32 33
  %8771 = getelementptr inbounds %struct.Reg, %struct.Reg* %8770, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %8771 to i64*
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8773 = getelementptr inbounds %struct.GPR, %struct.GPR* %8772, i32 0, i32 7
  %8774 = getelementptr inbounds %struct.Reg, %struct.Reg* %8773, i32 0, i32 0
  %RDX.i323 = bitcast %union.anon* %8774 to i64*
  %8775 = load i64, i64* %RDX.i323
  %8776 = load i64, i64* %PC.i322
  %8777 = add i64 %8776, 7
  store i64 %8777, i64* %PC.i322
  %8778 = sext i64 %8775 to i128
  %8779 = and i128 %8778, -18446744073709551616
  %8780 = zext i64 %8775 to i128
  %8781 = or i128 %8779, %8780
  %8782 = mul i128 744, %8781
  %8783 = trunc i128 %8782 to i64
  store i64 %8783, i64* %RDX.i323, align 8
  %8784 = sext i64 %8783 to i128
  %8785 = icmp ne i128 %8784, %8782
  %8786 = zext i1 %8785 to i8
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8786, i8* %8787, align 1
  %8788 = trunc i128 %8782 to i32
  %8789 = and i32 %8788, 255
  %8790 = call i32 @llvm.ctpop.i32(i32 %8789)
  %8791 = trunc i32 %8790 to i8
  %8792 = and i8 %8791, 1
  %8793 = xor i8 %8792, 1
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8793, i8* %8794, align 1
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8795, align 1
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8796, align 1
  %8797 = lshr i64 %8783, 63
  %8798 = trunc i64 %8797 to i8
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8798, i8* %8799, align 1
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8786, i8* %8800, align 1
  store %struct.Memory* %loadMem_40af5d, %struct.Memory** %MEMORY
  %loadMem_40af64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 33
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %8803 to i64*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 1
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %8806 to i64*
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 9
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %RSI.i321 = bitcast %union.anon* %8809 to i64*
  %8810 = load i64, i64* %RAX.i320
  %8811 = load i64, i64* %PC.i319
  %8812 = add i64 %8811, 3
  store i64 %8812, i64* %PC.i319
  store i64 %8810, i64* %RSI.i321, align 8
  store %struct.Memory* %loadMem_40af64, %struct.Memory** %MEMORY
  %loadMem_40af67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 33
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %8815 to i64*
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 7
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %RDX.i317 = bitcast %union.anon* %8818 to i64*
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 9
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %RSI.i318 = bitcast %union.anon* %8821 to i64*
  %8822 = load i64, i64* %RSI.i318
  %8823 = load i64, i64* %RDX.i317
  %8824 = load i64, i64* %PC.i316
  %8825 = add i64 %8824, 3
  store i64 %8825, i64* %PC.i316
  %8826 = add i64 %8823, %8822
  store i64 %8826, i64* %RSI.i318, align 8
  %8827 = icmp ult i64 %8826, %8822
  %8828 = icmp ult i64 %8826, %8823
  %8829 = or i1 %8827, %8828
  %8830 = zext i1 %8829 to i8
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8830, i8* %8831, align 1
  %8832 = trunc i64 %8826 to i32
  %8833 = and i32 %8832, 255
  %8834 = call i32 @llvm.ctpop.i32(i32 %8833)
  %8835 = trunc i32 %8834 to i8
  %8836 = and i8 %8835, 1
  %8837 = xor i8 %8836, 1
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8837, i8* %8838, align 1
  %8839 = xor i64 %8823, %8822
  %8840 = xor i64 %8839, %8826
  %8841 = lshr i64 %8840, 4
  %8842 = trunc i64 %8841 to i8
  %8843 = and i8 %8842, 1
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8843, i8* %8844, align 1
  %8845 = icmp eq i64 %8826, 0
  %8846 = zext i1 %8845 to i8
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8846, i8* %8847, align 1
  %8848 = lshr i64 %8826, 63
  %8849 = trunc i64 %8848 to i8
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8849, i8* %8850, align 1
  %8851 = lshr i64 %8822, 63
  %8852 = lshr i64 %8823, 63
  %8853 = xor i64 %8848, %8851
  %8854 = xor i64 %8848, %8852
  %8855 = add i64 %8853, %8854
  %8856 = icmp eq i64 %8855, 2
  %8857 = zext i1 %8856 to i8
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8857, i8* %8858, align 1
  store %struct.Memory* %loadMem_40af67, %struct.Memory** %MEMORY
  %loadMem_40af6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 33
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %8861 to i64*
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8863 = getelementptr inbounds %struct.GPR, %struct.GPR* %8862, i32 0, i32 7
  %8864 = getelementptr inbounds %struct.Reg, %struct.Reg* %8863, i32 0, i32 0
  %RDX.i314 = bitcast %union.anon* %8864 to i64*
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 15
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %8867 to i64*
  %8868 = load i64, i64* %RBP.i315
  %8869 = sub i64 %8868, 28
  %8870 = load i64, i64* %PC.i313
  %8871 = add i64 %8870, 4
  store i64 %8871, i64* %PC.i313
  %8872 = inttoptr i64 %8869 to i32*
  %8873 = load i32, i32* %8872
  %8874 = sext i32 %8873 to i64
  store i64 %8874, i64* %RDX.i314, align 8
  store %struct.Memory* %loadMem_40af6a, %struct.Memory** %MEMORY
  %loadMem_40af6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 33
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %8877 to i64*
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 7
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %RDX.i312 = bitcast %union.anon* %8880 to i64*
  %8881 = load i64, i64* %RDX.i312
  %8882 = load i64, i64* %PC.i311
  %8883 = add i64 %8882, 7
  store i64 %8883, i64* %PC.i311
  %8884 = sext i64 %8881 to i128
  %8885 = and i128 %8884, -18446744073709551616
  %8886 = zext i64 %8881 to i128
  %8887 = or i128 %8885, %8886
  %8888 = mul i128 744, %8887
  %8889 = trunc i128 %8888 to i64
  store i64 %8889, i64* %RDX.i312, align 8
  %8890 = sext i64 %8889 to i128
  %8891 = icmp ne i128 %8890, %8888
  %8892 = zext i1 %8891 to i8
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8892, i8* %8893, align 1
  %8894 = trunc i128 %8888 to i32
  %8895 = and i32 %8894, 255
  %8896 = call i32 @llvm.ctpop.i32(i32 %8895)
  %8897 = trunc i32 %8896 to i8
  %8898 = and i8 %8897, 1
  %8899 = xor i8 %8898, 1
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8899, i8* %8900, align 1
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8901, align 1
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8902, align 1
  %8903 = lshr i64 %8889, 63
  %8904 = trunc i64 %8903 to i8
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8904, i8* %8905, align 1
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8892, i8* %8906, align 1
  store %struct.Memory* %loadMem_40af6e, %struct.Memory** %MEMORY
  %loadMem_40af75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8908 = getelementptr inbounds %struct.GPR, %struct.GPR* %8907, i32 0, i32 33
  %8909 = getelementptr inbounds %struct.Reg, %struct.Reg* %8908, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %8909 to i64*
  %8910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8911 = getelementptr inbounds %struct.GPR, %struct.GPR* %8910, i32 0, i32 1
  %8912 = getelementptr inbounds %struct.Reg, %struct.Reg* %8911, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %8912 to i64*
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 11
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %RDI.i310 = bitcast %union.anon* %8915 to i64*
  %8916 = load i64, i64* %RAX.i309
  %8917 = load i64, i64* %PC.i308
  %8918 = add i64 %8917, 3
  store i64 %8918, i64* %PC.i308
  store i64 %8916, i64* %RDI.i310, align 8
  store %struct.Memory* %loadMem_40af75, %struct.Memory** %MEMORY
  %loadMem_40af78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 33
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %8921 to i64*
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8923 = getelementptr inbounds %struct.GPR, %struct.GPR* %8922, i32 0, i32 7
  %8924 = getelementptr inbounds %struct.Reg, %struct.Reg* %8923, i32 0, i32 0
  %RDX.i306 = bitcast %union.anon* %8924 to i64*
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 11
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %RDI.i307 = bitcast %union.anon* %8927 to i64*
  %8928 = load i64, i64* %RDI.i307
  %8929 = load i64, i64* %RDX.i306
  %8930 = load i64, i64* %PC.i305
  %8931 = add i64 %8930, 3
  store i64 %8931, i64* %PC.i305
  %8932 = add i64 %8929, %8928
  store i64 %8932, i64* %RDI.i307, align 8
  %8933 = icmp ult i64 %8932, %8928
  %8934 = icmp ult i64 %8932, %8929
  %8935 = or i1 %8933, %8934
  %8936 = zext i1 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8936, i8* %8937, align 1
  %8938 = trunc i64 %8932 to i32
  %8939 = and i32 %8938, 255
  %8940 = call i32 @llvm.ctpop.i32(i32 %8939)
  %8941 = trunc i32 %8940 to i8
  %8942 = and i8 %8941, 1
  %8943 = xor i8 %8942, 1
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8943, i8* %8944, align 1
  %8945 = xor i64 %8929, %8928
  %8946 = xor i64 %8945, %8932
  %8947 = lshr i64 %8946, 4
  %8948 = trunc i64 %8947 to i8
  %8949 = and i8 %8948, 1
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8949, i8* %8950, align 1
  %8951 = icmp eq i64 %8932, 0
  %8952 = zext i1 %8951 to i8
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8952, i8* %8953, align 1
  %8954 = lshr i64 %8932, 63
  %8955 = trunc i64 %8954 to i8
  %8956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8955, i8* %8956, align 1
  %8957 = lshr i64 %8928, 63
  %8958 = lshr i64 %8929, 63
  %8959 = xor i64 %8954, %8957
  %8960 = xor i64 %8954, %8958
  %8961 = add i64 %8959, %8960
  %8962 = icmp eq i64 %8961, 2
  %8963 = zext i1 %8962 to i8
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8963, i8* %8964, align 1
  store %struct.Memory* %loadMem_40af78, %struct.Memory** %MEMORY
  %loadMem_40af7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8966 = getelementptr inbounds %struct.GPR, %struct.GPR* %8965, i32 0, i32 33
  %8967 = getelementptr inbounds %struct.Reg, %struct.Reg* %8966, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %8967 to i64*
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 17
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %R8D.i303 = bitcast %union.anon* %8970 to i32*
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8972 = getelementptr inbounds %struct.GPR, %struct.GPR* %8971, i32 0, i32 11
  %8973 = getelementptr inbounds %struct.Reg, %struct.Reg* %8972, i32 0, i32 0
  %RDI.i304 = bitcast %union.anon* %8973 to i64*
  %8974 = bitcast i32* %R8D.i303 to i64*
  %8975 = load i64, i64* %RDI.i304
  %8976 = add i64 %8975, 96
  %8977 = load i64, i64* %PC.i302
  %8978 = add i64 %8977, 4
  store i64 %8978, i64* %PC.i302
  %8979 = inttoptr i64 %8976 to i32*
  %8980 = load i32, i32* %8979
  %8981 = zext i32 %8980 to i64
  store i64 %8981, i64* %8974, align 8
  store %struct.Memory* %loadMem_40af7b, %struct.Memory** %MEMORY
  %loadMem_40af7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 33
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %8984 to i64*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 17
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %R8D.i300 = bitcast %union.anon* %8987 to i32*
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 19
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %R9D.i301 = bitcast %union.anon* %8990 to i32*
  %8991 = bitcast i32* %R9D.i301 to i64*
  %8992 = load i32, i32* %R8D.i300
  %8993 = zext i32 %8992 to i64
  %8994 = load i64, i64* %PC.i299
  %8995 = add i64 %8994, 3
  store i64 %8995, i64* %PC.i299
  %8996 = and i64 %8993, 4294967295
  store i64 %8996, i64* %8991, align 8
  store %struct.Memory* %loadMem_40af7f, %struct.Memory** %MEMORY
  %loadMem_40af82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 33
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 19
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %R9D.i298 = bitcast %union.anon* %9002 to i32*
  %9003 = bitcast i32* %R9D.i298 to i64*
  %9004 = load i32, i32* %R9D.i298
  %9005 = zext i32 %9004 to i64
  %9006 = load i64, i64* %PC.i297
  %9007 = add i64 %9006, 4
  store i64 %9007, i64* %PC.i297
  %9008 = add i32 1, %9004
  %9009 = zext i32 %9008 to i64
  store i64 %9009, i64* %9003, align 8
  %9010 = icmp ult i32 %9008, %9004
  %9011 = icmp ult i32 %9008, 1
  %9012 = or i1 %9010, %9011
  %9013 = zext i1 %9012 to i8
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9013, i8* %9014, align 1
  %9015 = and i32 %9008, 255
  %9016 = call i32 @llvm.ctpop.i32(i32 %9015)
  %9017 = trunc i32 %9016 to i8
  %9018 = and i8 %9017, 1
  %9019 = xor i8 %9018, 1
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9019, i8* %9020, align 1
  %9021 = xor i64 1, %9005
  %9022 = trunc i64 %9021 to i32
  %9023 = xor i32 %9022, %9008
  %9024 = lshr i32 %9023, 4
  %9025 = trunc i32 %9024 to i8
  %9026 = and i8 %9025, 1
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9026, i8* %9027, align 1
  %9028 = icmp eq i32 %9008, 0
  %9029 = zext i1 %9028 to i8
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9029, i8* %9030, align 1
  %9031 = lshr i32 %9008, 31
  %9032 = trunc i32 %9031 to i8
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9032, i8* %9033, align 1
  %9034 = lshr i32 %9004, 31
  %9035 = xor i32 %9031, %9034
  %9036 = add i32 %9035, %9031
  %9037 = icmp eq i32 %9036, 2
  %9038 = zext i1 %9037 to i8
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9038, i8* %9039, align 1
  store %struct.Memory* %loadMem_40af82, %struct.Memory** %MEMORY
  %loadMem_40af86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 33
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %9042 to i64*
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9044 = getelementptr inbounds %struct.GPR, %struct.GPR* %9043, i32 0, i32 19
  %9045 = getelementptr inbounds %struct.Reg, %struct.Reg* %9044, i32 0, i32 0
  %R9D.i295 = bitcast %union.anon* %9045 to i32*
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 11
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %RDI.i296 = bitcast %union.anon* %9048 to i64*
  %9049 = load i64, i64* %RDI.i296
  %9050 = add i64 %9049, 96
  %9051 = load i32, i32* %R9D.i295
  %9052 = zext i32 %9051 to i64
  %9053 = load i64, i64* %PC.i294
  %9054 = add i64 %9053, 4
  store i64 %9054, i64* %PC.i294
  %9055 = inttoptr i64 %9050 to i32*
  store i32 %9051, i32* %9055
  store %struct.Memory* %loadMem_40af86, %struct.Memory** %MEMORY
  %loadMem_40af8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9057 = getelementptr inbounds %struct.GPR, %struct.GPR* %9056, i32 0, i32 33
  %9058 = getelementptr inbounds %struct.Reg, %struct.Reg* %9057, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %9058 to i64*
  %9059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9060 = getelementptr inbounds %struct.GPR, %struct.GPR* %9059, i32 0, i32 17
  %9061 = getelementptr inbounds %struct.Reg, %struct.Reg* %9060, i32 0, i32 0
  %R8D.i292 = bitcast %union.anon* %9061 to i32*
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9063 = getelementptr inbounds %struct.GPR, %struct.GPR* %9062, i32 0, i32 7
  %9064 = getelementptr inbounds %struct.Reg, %struct.Reg* %9063, i32 0, i32 0
  %RDX.i293 = bitcast %union.anon* %9064 to i64*
  %9065 = load i32, i32* %R8D.i292
  %9066 = zext i32 %9065 to i64
  %9067 = load i64, i64* %PC.i291
  %9068 = add i64 %9067, 3
  store i64 %9068, i64* %PC.i291
  %9069 = shl i64 %9066, 32
  %9070 = ashr exact i64 %9069, 32
  store i64 %9070, i64* %RDX.i293, align 8
  store %struct.Memory* %loadMem_40af8a, %struct.Memory** %MEMORY
  %loadMem_40af8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9072 = getelementptr inbounds %struct.GPR, %struct.GPR* %9071, i32 0, i32 33
  %9073 = getelementptr inbounds %struct.Reg, %struct.Reg* %9072, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %9073 to i64*
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 5
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %ECX.i288 = bitcast %union.anon* %9076 to i32*
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 7
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %RDX.i289 = bitcast %union.anon* %9079 to i64*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 9
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %RSI.i290 = bitcast %union.anon* %9082 to i64*
  %9083 = load i64, i64* %RSI.i290
  %9084 = load i64, i64* %RDX.i289
  %9085 = mul i64 %9084, 4
  %9086 = add i64 %9083, 100
  %9087 = add i64 %9086, %9085
  %9088 = load i32, i32* %ECX.i288
  %9089 = zext i32 %9088 to i64
  %9090 = load i64, i64* %PC.i287
  %9091 = add i64 %9090, 4
  store i64 %9091, i64* %PC.i287
  %9092 = inttoptr i64 %9087 to i32*
  store i32 %9088, i32* %9092
  store %struct.Memory* %loadMem_40af8d, %struct.Memory** %MEMORY
  %loadMem_40af91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 33
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 5
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RCX.i286 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %PC.i285
  %9100 = add i64 %9099, 7
  store i64 %9100, i64* %PC.i285
  %9101 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %9102 = zext i32 %9101 to i64
  store i64 %9102, i64* %RCX.i286, align 8
  store %struct.Memory* %loadMem_40af91, %struct.Memory** %MEMORY
  %loadMem_40af98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 33
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %9105 to i64*
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 17
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %R8D.i283 = bitcast %union.anon* %9108 to i32*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 15
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %9111 to i64*
  %9112 = bitcast i32* %R8D.i283 to i64*
  %9113 = load i64, i64* %RBP.i284
  %9114 = sub i64 %9113, 4
  %9115 = load i64, i64* %PC.i282
  %9116 = add i64 %9115, 4
  store i64 %9116, i64* %PC.i282
  %9117 = inttoptr i64 %9114 to i32*
  %9118 = load i32, i32* %9117
  %9119 = zext i32 %9118 to i64
  store i64 %9119, i64* %9112, align 8
  store %struct.Memory* %loadMem_40af98, %struct.Memory** %MEMORY
  %loadMem_40af9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9121 = getelementptr inbounds %struct.GPR, %struct.GPR* %9120, i32 0, i32 33
  %9122 = getelementptr inbounds %struct.Reg, %struct.Reg* %9121, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %9122 to i64*
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9124 = getelementptr inbounds %struct.GPR, %struct.GPR* %9123, i32 0, i32 17
  %9125 = getelementptr inbounds %struct.Reg, %struct.Reg* %9124, i32 0, i32 0
  %R8D.i281 = bitcast %union.anon* %9125 to i32*
  %9126 = bitcast i32* %R8D.i281 to i64*
  %9127 = load i32, i32* %R8D.i281
  %9128 = zext i32 %9127 to i64
  %9129 = load i64, i64* %PC.i280
  %9130 = add i64 %9129, 4
  store i64 %9130, i64* %PC.i280
  %9131 = sub i32 %9127, 20
  %9132 = zext i32 %9131 to i64
  store i64 %9132, i64* %9126, align 8
  %9133 = icmp ult i32 %9127, 20
  %9134 = zext i1 %9133 to i8
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9134, i8* %9135, align 1
  %9136 = and i32 %9131, 255
  %9137 = call i32 @llvm.ctpop.i32(i32 %9136)
  %9138 = trunc i32 %9137 to i8
  %9139 = and i8 %9138, 1
  %9140 = xor i8 %9139, 1
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9140, i8* %9141, align 1
  %9142 = xor i64 20, %9128
  %9143 = trunc i64 %9142 to i32
  %9144 = xor i32 %9143, %9131
  %9145 = lshr i32 %9144, 4
  %9146 = trunc i32 %9145 to i8
  %9147 = and i8 %9146, 1
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9147, i8* %9148, align 1
  %9149 = icmp eq i32 %9131, 0
  %9150 = zext i1 %9149 to i8
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9150, i8* %9151, align 1
  %9152 = lshr i32 %9131, 31
  %9153 = trunc i32 %9152 to i8
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9153, i8* %9154, align 1
  %9155 = lshr i32 %9127, 31
  %9156 = xor i32 %9152, %9155
  %9157 = add i32 %9156, %9155
  %9158 = icmp eq i32 %9157, 2
  %9159 = zext i1 %9158 to i8
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9159, i8* %9160, align 1
  store %struct.Memory* %loadMem_40af9c, %struct.Memory** %MEMORY
  %loadMem_40afa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 33
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %9163 to i64*
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 17
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %R8D.i278 = bitcast %union.anon* %9166 to i32*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 7
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %RDX.i279 = bitcast %union.anon* %9169 to i64*
  %9170 = load i32, i32* %R8D.i278
  %9171 = zext i32 %9170 to i64
  %9172 = load i64, i64* %PC.i277
  %9173 = add i64 %9172, 3
  store i64 %9173, i64* %PC.i277
  %9174 = shl i64 %9171, 32
  %9175 = ashr exact i64 %9174, 32
  store i64 %9175, i64* %RDX.i279, align 8
  store %struct.Memory* %loadMem_40afa0, %struct.Memory** %MEMORY
  %loadMem_40afa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 33
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 7
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RDX.i276 = bitcast %union.anon* %9181 to i64*
  %9182 = load i64, i64* %RDX.i276
  %9183 = mul i64 %9182, 4
  %9184 = add i64 %9183, 11187184
  %9185 = load i64, i64* %PC.i275
  %9186 = add i64 %9185, 8
  store i64 %9186, i64* %PC.i275
  %9187 = inttoptr i64 %9184 to i32*
  %9188 = load i32, i32* %9187
  %9189 = sext i32 %9188 to i64
  store i64 %9189, i64* %RDX.i276, align 8
  store %struct.Memory* %loadMem_40afa3, %struct.Memory** %MEMORY
  %loadMem_40afab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 33
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %9192 to i64*
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9194 = getelementptr inbounds %struct.GPR, %struct.GPR* %9193, i32 0, i32 7
  %9195 = getelementptr inbounds %struct.Reg, %struct.Reg* %9194, i32 0, i32 0
  %RDX.i274 = bitcast %union.anon* %9195 to i64*
  %9196 = load i64, i64* %RDX.i274
  %9197 = load i64, i64* %PC.i273
  %9198 = add i64 %9197, 7
  store i64 %9198, i64* %PC.i273
  %9199 = sext i64 %9196 to i128
  %9200 = and i128 %9199, -18446744073709551616
  %9201 = zext i64 %9196 to i128
  %9202 = or i128 %9200, %9201
  %9203 = mul i128 744, %9202
  %9204 = trunc i128 %9203 to i64
  store i64 %9204, i64* %RDX.i274, align 8
  %9205 = sext i64 %9204 to i128
  %9206 = icmp ne i128 %9205, %9203
  %9207 = zext i1 %9206 to i8
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9207, i8* %9208, align 1
  %9209 = trunc i128 %9203 to i32
  %9210 = and i32 %9209, 255
  %9211 = call i32 @llvm.ctpop.i32(i32 %9210)
  %9212 = trunc i32 %9211 to i8
  %9213 = and i8 %9212, 1
  %9214 = xor i8 %9213, 1
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9214, i8* %9215, align 1
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9216, align 1
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9217, align 1
  %9218 = lshr i64 %9204, 63
  %9219 = trunc i64 %9218 to i8
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9219, i8* %9220, align 1
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9207, i8* %9221, align 1
  store %struct.Memory* %loadMem_40afab, %struct.Memory** %MEMORY
  %loadMem_40afb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9223 = getelementptr inbounds %struct.GPR, %struct.GPR* %9222, i32 0, i32 33
  %9224 = getelementptr inbounds %struct.Reg, %struct.Reg* %9223, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %9224 to i64*
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 1
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %9227 to i64*
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 7
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %RDX.i272 = bitcast %union.anon* %9230 to i64*
  %9231 = load i64, i64* %RAX.i271
  %9232 = load i64, i64* %RDX.i272
  %9233 = load i64, i64* %PC.i270
  %9234 = add i64 %9233, 3
  store i64 %9234, i64* %PC.i270
  %9235 = add i64 %9232, %9231
  store i64 %9235, i64* %RAX.i271, align 8
  %9236 = icmp ult i64 %9235, %9231
  %9237 = icmp ult i64 %9235, %9232
  %9238 = or i1 %9236, %9237
  %9239 = zext i1 %9238 to i8
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9239, i8* %9240, align 1
  %9241 = trunc i64 %9235 to i32
  %9242 = and i32 %9241, 255
  %9243 = call i32 @llvm.ctpop.i32(i32 %9242)
  %9244 = trunc i32 %9243 to i8
  %9245 = and i8 %9244, 1
  %9246 = xor i8 %9245, 1
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9246, i8* %9247, align 1
  %9248 = xor i64 %9232, %9231
  %9249 = xor i64 %9248, %9235
  %9250 = lshr i64 %9249, 4
  %9251 = trunc i64 %9250 to i8
  %9252 = and i8 %9251, 1
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9252, i8* %9253, align 1
  %9254 = icmp eq i64 %9235, 0
  %9255 = zext i1 %9254 to i8
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9255, i8* %9256, align 1
  %9257 = lshr i64 %9235, 63
  %9258 = trunc i64 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9258, i8* %9259, align 1
  %9260 = lshr i64 %9231, 63
  %9261 = lshr i64 %9232, 63
  %9262 = xor i64 %9257, %9260
  %9263 = xor i64 %9257, %9261
  %9264 = add i64 %9262, %9263
  %9265 = icmp eq i64 %9264, 2
  %9266 = zext i1 %9265 to i8
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9266, i8* %9267, align 1
  store %struct.Memory* %loadMem_40afb2, %struct.Memory** %MEMORY
  %loadMem_40afb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 33
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %9270 to i64*
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 5
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %ECX.i268 = bitcast %union.anon* %9273 to i32*
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9275 = getelementptr inbounds %struct.GPR, %struct.GPR* %9274, i32 0, i32 1
  %9276 = getelementptr inbounds %struct.Reg, %struct.Reg* %9275, i32 0, i32 0
  %RAX.i269 = bitcast %union.anon* %9276 to i64*
  %9277 = load i64, i64* %RAX.i269
  %9278 = add i64 %9277, 740
  %9279 = load i32, i32* %ECX.i268
  %9280 = zext i32 %9279 to i64
  %9281 = load i64, i64* %PC.i267
  %9282 = add i64 %9281, 6
  store i64 %9282, i64* %PC.i267
  %9283 = inttoptr i64 %9278 to i32*
  store i32 %9279, i32* %9283
  store %struct.Memory* %loadMem_40afb5, %struct.Memory** %MEMORY
  br label %block_.L_40afbb

block_.L_40afbb:                                  ; preds = %block_40ae9b, %block_40ae63, %block_.L_40ae49
  %loadMem_40afbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9285 = getelementptr inbounds %struct.GPR, %struct.GPR* %9284, i32 0, i32 33
  %9286 = getelementptr inbounds %struct.Reg, %struct.Reg* %9285, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %9286 to i64*
  %9287 = load i64, i64* %PC.i266
  %9288 = add i64 %9287, 5
  %9289 = load i64, i64* %PC.i266
  %9290 = add i64 %9289, 5
  store i64 %9290, i64* %PC.i266
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9288, i64* %9291, align 8
  store %struct.Memory* %loadMem_40afbb, %struct.Memory** %MEMORY
  br label %block_.L_40afc0

block_.L_40afc0:                                  ; preds = %block_.L_40afbb, %block_.L_40ae23
  %loadMem_40afc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 33
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %9294 to i64*
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 1
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %9297 to i64*
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 15
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %9300 to i64*
  %9301 = load i64, i64* %RBP.i265
  %9302 = sub i64 %9301, 4
  %9303 = load i64, i64* %PC.i263
  %9304 = add i64 %9303, 3
  store i64 %9304, i64* %PC.i263
  %9305 = inttoptr i64 %9302 to i32*
  %9306 = load i32, i32* %9305
  %9307 = zext i32 %9306 to i64
  store i64 %9307, i64* %RAX.i264, align 8
  store %struct.Memory* %loadMem_40afc0, %struct.Memory** %MEMORY
  %loadMem_40afc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 1
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %RAX.i262 = bitcast %union.anon* %9313 to i64*
  %9314 = load i64, i64* %RAX.i262
  %9315 = load i64, i64* %PC.i261
  %9316 = add i64 %9315, 3
  store i64 %9316, i64* %PC.i261
  %9317 = trunc i64 %9314 to i32
  %9318 = add i32 1, %9317
  %9319 = zext i32 %9318 to i64
  store i64 %9319, i64* %RAX.i262, align 8
  %9320 = icmp ult i32 %9318, %9317
  %9321 = icmp ult i32 %9318, 1
  %9322 = or i1 %9320, %9321
  %9323 = zext i1 %9322 to i8
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9323, i8* %9324, align 1
  %9325 = and i32 %9318, 255
  %9326 = call i32 @llvm.ctpop.i32(i32 %9325)
  %9327 = trunc i32 %9326 to i8
  %9328 = and i8 %9327, 1
  %9329 = xor i8 %9328, 1
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9329, i8* %9330, align 1
  %9331 = xor i64 1, %9314
  %9332 = trunc i64 %9331 to i32
  %9333 = xor i32 %9332, %9318
  %9334 = lshr i32 %9333, 4
  %9335 = trunc i32 %9334 to i8
  %9336 = and i8 %9335, 1
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9336, i8* %9337, align 1
  %9338 = icmp eq i32 %9318, 0
  %9339 = zext i1 %9338 to i8
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9339, i8* %9340, align 1
  %9341 = lshr i32 %9318, 31
  %9342 = trunc i32 %9341 to i8
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9342, i8* %9343, align 1
  %9344 = lshr i32 %9317, 31
  %9345 = xor i32 %9341, %9344
  %9346 = add i32 %9345, %9341
  %9347 = icmp eq i32 %9346, 2
  %9348 = zext i1 %9347 to i8
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9348, i8* %9349, align 1
  store %struct.Memory* %loadMem_40afc3, %struct.Memory** %MEMORY
  %loadMem_40afc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9351 = getelementptr inbounds %struct.GPR, %struct.GPR* %9350, i32 0, i32 33
  %9352 = getelementptr inbounds %struct.Reg, %struct.Reg* %9351, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %9352 to i64*
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 1
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %9355 to i32*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 5
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %RCX.i260 = bitcast %union.anon* %9358 to i64*
  %9359 = load i32, i32* %EAX.i259
  %9360 = zext i32 %9359 to i64
  %9361 = load i64, i64* %PC.i258
  %9362 = add i64 %9361, 3
  store i64 %9362, i64* %PC.i258
  %9363 = shl i64 %9360, 32
  %9364 = ashr exact i64 %9363, 32
  store i64 %9364, i64* %RCX.i260, align 8
  store %struct.Memory* %loadMem_40afc6, %struct.Memory** %MEMORY
  %loadMem_40afc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 33
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %9367 to i64*
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 1
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %RAX.i256 = bitcast %union.anon* %9370 to i64*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 5
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RCX.i257 = bitcast %union.anon* %9373 to i64*
  %9374 = load i64, i64* %RCX.i257
  %9375 = add i64 %9374, 12099168
  %9376 = load i64, i64* %PC.i255
  %9377 = add i64 %9376, 8
  store i64 %9377, i64* %PC.i255
  %9378 = inttoptr i64 %9375 to i8*
  %9379 = load i8, i8* %9378
  %9380 = zext i8 %9379 to i64
  store i64 %9380, i64* %RAX.i256, align 8
  store %struct.Memory* %loadMem_40afc9, %struct.Memory** %MEMORY
  %loadMem_40afd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 33
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %9383 to i64*
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 1
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %9386 to i32*
  %9387 = load i32, i32* %EAX.i254
  %9388 = zext i32 %9387 to i64
  %9389 = load i64, i64* %PC.i253
  %9390 = add i64 %9389, 3
  store i64 %9390, i64* %PC.i253
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9391, align 1
  %9392 = and i32 %9387, 255
  %9393 = call i32 @llvm.ctpop.i32(i32 %9392)
  %9394 = trunc i32 %9393 to i8
  %9395 = and i8 %9394, 1
  %9396 = xor i8 %9395, 1
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9396, i8* %9397, align 1
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9398, align 1
  %9399 = icmp eq i32 %9387, 0
  %9400 = zext i1 %9399 to i8
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9400, i8* %9401, align 1
  %9402 = lshr i32 %9387, 31
  %9403 = trunc i32 %9402 to i8
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9403, i8* %9404, align 1
  %9405 = lshr i32 %9387, 31
  %9406 = xor i32 %9402, %9405
  %9407 = add i32 %9406, %9405
  %9408 = icmp eq i32 %9407, 2
  %9409 = zext i1 %9408 to i8
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9409, i8* %9410, align 1
  store %struct.Memory* %loadMem_40afd1, %struct.Memory** %MEMORY
  %loadMem_40afd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9412 = getelementptr inbounds %struct.GPR, %struct.GPR* %9411, i32 0, i32 33
  %9413 = getelementptr inbounds %struct.Reg, %struct.Reg* %9412, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %9413 to i64*
  %9414 = load i64, i64* %PC.i252
  %9415 = add i64 %9414, 138
  %9416 = load i64, i64* %PC.i252
  %9417 = add i64 %9416, 6
  %9418 = load i64, i64* %PC.i252
  %9419 = add i64 %9418, 6
  store i64 %9419, i64* %PC.i252
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9421 = load i8, i8* %9420, align 1
  %9422 = icmp eq i8 %9421, 0
  %9423 = zext i1 %9422 to i8
  store i8 %9423, i8* %BRANCH_TAKEN, align 1
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9425 = select i1 %9422, i64 %9415, i64 %9417
  store i64 %9425, i64* %9424, align 8
  store %struct.Memory* %loadMem_40afd4, %struct.Memory** %MEMORY
  %loadBr_40afd4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40afd4 = icmp eq i8 %loadBr_40afd4, 1
  br i1 %cmpBr_40afd4, label %block_.L_40b05e, label %block_40afda

block_40afda:                                     ; preds = %block_.L_40afc0
  %loadMem_40afda = load %struct.Memory*, %struct.Memory** %MEMORY
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 33
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9428 to i64*
  %9429 = load i64, i64* %PC.i251
  %9430 = add i64 %9429, 5
  %9431 = load i64, i64* %PC.i251
  %9432 = add i64 %9431, 5
  store i64 %9432, i64* %PC.i251
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9430, i64* %9433, align 8
  store %struct.Memory* %loadMem_40afda, %struct.Memory** %MEMORY
  br label %block_.L_40afdf

block_.L_40afdf:                                  ; preds = %block_40afda
  %loadMem_40afdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 33
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %9436 to i64*
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 1
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %9439 to i64*
  %9440 = load i64, i64* %PC.i249
  %9441 = add i64 %9440, 10
  store i64 %9441, i64* %PC.i249
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i250, align 8
  store %struct.Memory* %loadMem_40afdf, %struct.Memory** %MEMORY
  %loadMem_40afe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9443 = getelementptr inbounds %struct.GPR, %struct.GPR* %9442, i32 0, i32 33
  %9444 = getelementptr inbounds %struct.Reg, %struct.Reg* %9443, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %9444 to i64*
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9446 = getelementptr inbounds %struct.GPR, %struct.GPR* %9445, i32 0, i32 5
  %9447 = getelementptr inbounds %struct.Reg, %struct.Reg* %9446, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %9447 to i64*
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 15
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %RBP.i248 = bitcast %union.anon* %9450 to i64*
  %9451 = load i64, i64* %RBP.i248
  %9452 = sub i64 %9451, 8
  %9453 = load i64, i64* %PC.i246
  %9454 = add i64 %9453, 4
  store i64 %9454, i64* %PC.i246
  %9455 = inttoptr i64 %9452 to i32*
  %9456 = load i32, i32* %9455
  %9457 = sext i32 %9456 to i64
  store i64 %9457, i64* %RCX.i247, align 8
  store %struct.Memory* %loadMem_40afe9, %struct.Memory** %MEMORY
  %loadMem_40afed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 33
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %9460 to i64*
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 5
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %RCX.i245 = bitcast %union.anon* %9463 to i64*
  %9464 = load i64, i64* %RCX.i245
  %9465 = load i64, i64* %PC.i244
  %9466 = add i64 %9465, 7
  store i64 %9466, i64* %PC.i244
  %9467 = sext i64 %9464 to i128
  %9468 = and i128 %9467, -18446744073709551616
  %9469 = zext i64 %9464 to i128
  %9470 = or i128 %9468, %9469
  %9471 = mul i128 744, %9470
  %9472 = trunc i128 %9471 to i64
  store i64 %9472, i64* %RCX.i245, align 8
  %9473 = sext i64 %9472 to i128
  %9474 = icmp ne i128 %9473, %9471
  %9475 = zext i1 %9474 to i8
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9475, i8* %9476, align 1
  %9477 = trunc i128 %9471 to i32
  %9478 = and i32 %9477, 255
  %9479 = call i32 @llvm.ctpop.i32(i32 %9478)
  %9480 = trunc i32 %9479 to i8
  %9481 = and i8 %9480, 1
  %9482 = xor i8 %9481, 1
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9482, i8* %9483, align 1
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9484, align 1
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9485, align 1
  %9486 = lshr i64 %9472, 63
  %9487 = trunc i64 %9486 to i8
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9487, i8* %9488, align 1
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9475, i8* %9489, align 1
  store %struct.Memory* %loadMem_40afed, %struct.Memory** %MEMORY
  %loadMem_40aff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 33
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %9492 to i64*
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9494 = getelementptr inbounds %struct.GPR, %struct.GPR* %9493, i32 0, i32 1
  %9495 = getelementptr inbounds %struct.Reg, %struct.Reg* %9494, i32 0, i32 0
  %RAX.i242 = bitcast %union.anon* %9495 to i64*
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 5
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %RCX.i243 = bitcast %union.anon* %9498 to i64*
  %9499 = load i64, i64* %RAX.i242
  %9500 = load i64, i64* %RCX.i243
  %9501 = load i64, i64* %PC.i241
  %9502 = add i64 %9501, 3
  store i64 %9502, i64* %PC.i241
  %9503 = add i64 %9500, %9499
  store i64 %9503, i64* %RAX.i242, align 8
  %9504 = icmp ult i64 %9503, %9499
  %9505 = icmp ult i64 %9503, %9500
  %9506 = or i1 %9504, %9505
  %9507 = zext i1 %9506 to i8
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9507, i8* %9508, align 1
  %9509 = trunc i64 %9503 to i32
  %9510 = and i32 %9509, 255
  %9511 = call i32 @llvm.ctpop.i32(i32 %9510)
  %9512 = trunc i32 %9511 to i8
  %9513 = and i8 %9512, 1
  %9514 = xor i8 %9513, 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9514, i8* %9515, align 1
  %9516 = xor i64 %9500, %9499
  %9517 = xor i64 %9516, %9503
  %9518 = lshr i64 %9517, 4
  %9519 = trunc i64 %9518 to i8
  %9520 = and i8 %9519, 1
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9520, i8* %9521, align 1
  %9522 = icmp eq i64 %9503, 0
  %9523 = zext i1 %9522 to i8
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9523, i8* %9524, align 1
  %9525 = lshr i64 %9503, 63
  %9526 = trunc i64 %9525 to i8
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9526, i8* %9527, align 1
  %9528 = lshr i64 %9499, 63
  %9529 = lshr i64 %9500, 63
  %9530 = xor i64 %9525, %9528
  %9531 = xor i64 %9525, %9529
  %9532 = add i64 %9530, %9531
  %9533 = icmp eq i64 %9532, 2
  %9534 = zext i1 %9533 to i8
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9534, i8* %9535, align 1
  store %struct.Memory* %loadMem_40aff4, %struct.Memory** %MEMORY
  %loadMem_40aff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 33
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %9538 to i64*
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9540 = getelementptr inbounds %struct.GPR, %struct.GPR* %9539, i32 0, i32 1
  %9541 = getelementptr inbounds %struct.Reg, %struct.Reg* %9540, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %9541 to i64*
  %9542 = load i64, i64* %RAX.i240
  %9543 = add i64 %9542, 12
  %9544 = load i64, i64* %PC.i239
  %9545 = add i64 %9544, 4
  store i64 %9545, i64* %PC.i239
  %9546 = inttoptr i64 %9543 to i32*
  %9547 = load i32, i32* %9546
  %9548 = sub i32 %9547, 20
  %9549 = icmp ult i32 %9547, 20
  %9550 = zext i1 %9549 to i8
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9550, i8* %9551, align 1
  %9552 = and i32 %9548, 255
  %9553 = call i32 @llvm.ctpop.i32(i32 %9552)
  %9554 = trunc i32 %9553 to i8
  %9555 = and i8 %9554, 1
  %9556 = xor i8 %9555, 1
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9556, i8* %9557, align 1
  %9558 = xor i32 %9547, 20
  %9559 = xor i32 %9558, %9548
  %9560 = lshr i32 %9559, 4
  %9561 = trunc i32 %9560 to i8
  %9562 = and i8 %9561, 1
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9562, i8* %9563, align 1
  %9564 = icmp eq i32 %9548, 0
  %9565 = zext i1 %9564 to i8
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9565, i8* %9566, align 1
  %9567 = lshr i32 %9548, 31
  %9568 = trunc i32 %9567 to i8
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9568, i8* %9569, align 1
  %9570 = lshr i32 %9547, 31
  %9571 = xor i32 %9567, %9570
  %9572 = add i32 %9571, %9570
  %9573 = icmp eq i32 %9572, 2
  %9574 = zext i1 %9573 to i8
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9574, i8* %9575, align 1
  store %struct.Memory* %loadMem_40aff7, %struct.Memory** %MEMORY
  %loadMem_40affb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 33
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9578 to i64*
  %9579 = load i64, i64* %PC.i238
  %9580 = add i64 %9579, 61
  %9581 = load i64, i64* %PC.i238
  %9582 = add i64 %9581, 6
  %9583 = load i64, i64* %PC.i238
  %9584 = add i64 %9583, 6
  store i64 %9584, i64* %PC.i238
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9586 = load i8, i8* %9585, align 1
  %9587 = icmp ne i8 %9586, 0
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9589 = load i8, i8* %9588, align 1
  %9590 = icmp ne i8 %9589, 0
  %9591 = xor i1 %9587, %9590
  %9592 = xor i1 %9591, true
  %9593 = zext i1 %9592 to i8
  store i8 %9593, i8* %BRANCH_TAKEN, align 1
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9595 = select i1 %9591, i64 %9582, i64 %9580
  store i64 %9595, i64* %9594, align 8
  store %struct.Memory* %loadMem_40affb, %struct.Memory** %MEMORY
  %loadBr_40affb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40affb = icmp eq i8 %loadBr_40affb, 1
  br i1 %cmpBr_40affb, label %block_.L_40b038, label %block_40b001

block_40b001:                                     ; preds = %block_.L_40afdf
  %loadMem_40b001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 33
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 1
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %PC.i236
  %9603 = add i64 %9602, 10
  store i64 %9603, i64* %PC.i236
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i237, align 8
  store %struct.Memory* %loadMem_40b001, %struct.Memory** %MEMORY
  %loadMem_40b00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9605 = getelementptr inbounds %struct.GPR, %struct.GPR* %9604, i32 0, i32 33
  %9606 = getelementptr inbounds %struct.Reg, %struct.Reg* %9605, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %9606 to i64*
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9608 = getelementptr inbounds %struct.GPR, %struct.GPR* %9607, i32 0, i32 5
  %9609 = getelementptr inbounds %struct.Reg, %struct.Reg* %9608, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %9609 to i64*
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9611 = getelementptr inbounds %struct.GPR, %struct.GPR* %9610, i32 0, i32 15
  %9612 = getelementptr inbounds %struct.Reg, %struct.Reg* %9611, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %9612 to i64*
  %9613 = load i64, i64* %RBP.i235
  %9614 = sub i64 %9613, 4
  %9615 = load i64, i64* %PC.i233
  %9616 = add i64 %9615, 3
  store i64 %9616, i64* %PC.i233
  %9617 = inttoptr i64 %9614 to i32*
  %9618 = load i32, i32* %9617
  %9619 = zext i32 %9618 to i64
  store i64 %9619, i64* %RCX.i234, align 8
  store %struct.Memory* %loadMem_40b00b, %struct.Memory** %MEMORY
  %loadMem_40b00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9621 = getelementptr inbounds %struct.GPR, %struct.GPR* %9620, i32 0, i32 33
  %9622 = getelementptr inbounds %struct.Reg, %struct.Reg* %9621, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %9622 to i64*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 5
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %RCX.i232 = bitcast %union.anon* %9625 to i64*
  %9626 = load i64, i64* %RCX.i232
  %9627 = load i64, i64* %PC.i231
  %9628 = add i64 %9627, 3
  store i64 %9628, i64* %PC.i231
  %9629 = trunc i64 %9626 to i32
  %9630 = add i32 1, %9629
  %9631 = zext i32 %9630 to i64
  store i64 %9631, i64* %RCX.i232, align 8
  %9632 = icmp ult i32 %9630, %9629
  %9633 = icmp ult i32 %9630, 1
  %9634 = or i1 %9632, %9633
  %9635 = zext i1 %9634 to i8
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9635, i8* %9636, align 1
  %9637 = and i32 %9630, 255
  %9638 = call i32 @llvm.ctpop.i32(i32 %9637)
  %9639 = trunc i32 %9638 to i8
  %9640 = and i8 %9639, 1
  %9641 = xor i8 %9640, 1
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9641, i8* %9642, align 1
  %9643 = xor i64 1, %9626
  %9644 = trunc i64 %9643 to i32
  %9645 = xor i32 %9644, %9630
  %9646 = lshr i32 %9645, 4
  %9647 = trunc i32 %9646 to i8
  %9648 = and i8 %9647, 1
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9648, i8* %9649, align 1
  %9650 = icmp eq i32 %9630, 0
  %9651 = zext i1 %9650 to i8
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9651, i8* %9652, align 1
  %9653 = lshr i32 %9630, 31
  %9654 = trunc i32 %9653 to i8
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9654, i8* %9655, align 1
  %9656 = lshr i32 %9629, 31
  %9657 = xor i32 %9653, %9656
  %9658 = add i32 %9657, %9653
  %9659 = icmp eq i32 %9658, 2
  %9660 = zext i1 %9659 to i8
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9660, i8* %9661, align 1
  store %struct.Memory* %loadMem_40b00e, %struct.Memory** %MEMORY
  %loadMem_40b011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 33
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %9664 to i64*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 7
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %RDX.i229 = bitcast %union.anon* %9667 to i64*
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 15
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %9670 to i64*
  %9671 = load i64, i64* %RBP.i230
  %9672 = sub i64 %9671, 8
  %9673 = load i64, i64* %PC.i228
  %9674 = add i64 %9673, 4
  store i64 %9674, i64* %PC.i228
  %9675 = inttoptr i64 %9672 to i32*
  %9676 = load i32, i32* %9675
  %9677 = sext i32 %9676 to i64
  store i64 %9677, i64* %RDX.i229, align 8
  store %struct.Memory* %loadMem_40b011, %struct.Memory** %MEMORY
  %loadMem_40b015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9679 = getelementptr inbounds %struct.GPR, %struct.GPR* %9678, i32 0, i32 33
  %9680 = getelementptr inbounds %struct.Reg, %struct.Reg* %9679, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %9680 to i64*
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 7
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %RDX.i227 = bitcast %union.anon* %9683 to i64*
  %9684 = load i64, i64* %RDX.i227
  %9685 = load i64, i64* %PC.i226
  %9686 = add i64 %9685, 7
  store i64 %9686, i64* %PC.i226
  %9687 = sext i64 %9684 to i128
  %9688 = and i128 %9687, -18446744073709551616
  %9689 = zext i64 %9684 to i128
  %9690 = or i128 %9688, %9689
  %9691 = mul i128 744, %9690
  %9692 = trunc i128 %9691 to i64
  store i64 %9692, i64* %RDX.i227, align 8
  %9693 = sext i64 %9692 to i128
  %9694 = icmp ne i128 %9693, %9691
  %9695 = zext i1 %9694 to i8
  %9696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9695, i8* %9696, align 1
  %9697 = trunc i128 %9691 to i32
  %9698 = and i32 %9697, 255
  %9699 = call i32 @llvm.ctpop.i32(i32 %9698)
  %9700 = trunc i32 %9699 to i8
  %9701 = and i8 %9700, 1
  %9702 = xor i8 %9701, 1
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9702, i8* %9703, align 1
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9704, align 1
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9705, align 1
  %9706 = lshr i64 %9692, 63
  %9707 = trunc i64 %9706 to i8
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9707, i8* %9708, align 1
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9695, i8* %9709, align 1
  store %struct.Memory* %loadMem_40b015, %struct.Memory** %MEMORY
  %loadMem_40b01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 33
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9712 to i64*
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 1
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %9715 to i64*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 9
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %RSI.i225 = bitcast %union.anon* %9718 to i64*
  %9719 = load i64, i64* %RAX.i224
  %9720 = load i64, i64* %PC.i223
  %9721 = add i64 %9720, 3
  store i64 %9721, i64* %PC.i223
  store i64 %9719, i64* %RSI.i225, align 8
  store %struct.Memory* %loadMem_40b01c, %struct.Memory** %MEMORY
  %loadMem_40b01f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 7
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RDX.i221 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 9
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %RSI.i222 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %RSI.i222
  %9732 = load i64, i64* %RDX.i221
  %9733 = load i64, i64* %PC.i220
  %9734 = add i64 %9733, 3
  store i64 %9734, i64* %PC.i220
  %9735 = add i64 %9732, %9731
  store i64 %9735, i64* %RSI.i222, align 8
  %9736 = icmp ult i64 %9735, %9731
  %9737 = icmp ult i64 %9735, %9732
  %9738 = or i1 %9736, %9737
  %9739 = zext i1 %9738 to i8
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9739, i8* %9740, align 1
  %9741 = trunc i64 %9735 to i32
  %9742 = and i32 %9741, 255
  %9743 = call i32 @llvm.ctpop.i32(i32 %9742)
  %9744 = trunc i32 %9743 to i8
  %9745 = and i8 %9744, 1
  %9746 = xor i8 %9745, 1
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9746, i8* %9747, align 1
  %9748 = xor i64 %9732, %9731
  %9749 = xor i64 %9748, %9735
  %9750 = lshr i64 %9749, 4
  %9751 = trunc i64 %9750 to i8
  %9752 = and i8 %9751, 1
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9752, i8* %9753, align 1
  %9754 = icmp eq i64 %9735, 0
  %9755 = zext i1 %9754 to i8
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9755, i8* %9756, align 1
  %9757 = lshr i64 %9735, 63
  %9758 = trunc i64 %9757 to i8
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9758, i8* %9759, align 1
  %9760 = lshr i64 %9731, 63
  %9761 = lshr i64 %9732, 63
  %9762 = xor i64 %9757, %9760
  %9763 = xor i64 %9757, %9761
  %9764 = add i64 %9762, %9763
  %9765 = icmp eq i64 %9764, 2
  %9766 = zext i1 %9765 to i8
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9766, i8* %9767, align 1
  store %struct.Memory* %loadMem_40b01f, %struct.Memory** %MEMORY
  %loadMem_40b022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 33
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %9770 to i64*
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9772 = getelementptr inbounds %struct.GPR, %struct.GPR* %9771, i32 0, i32 7
  %9773 = getelementptr inbounds %struct.Reg, %struct.Reg* %9772, i32 0, i32 0
  %RDX.i218 = bitcast %union.anon* %9773 to i64*
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 15
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %9776 to i64*
  %9777 = load i64, i64* %RBP.i219
  %9778 = sub i64 %9777, 8
  %9779 = load i64, i64* %PC.i217
  %9780 = add i64 %9779, 4
  store i64 %9780, i64* %PC.i217
  %9781 = inttoptr i64 %9778 to i32*
  %9782 = load i32, i32* %9781
  %9783 = sext i32 %9782 to i64
  store i64 %9783, i64* %RDX.i218, align 8
  store %struct.Memory* %loadMem_40b022, %struct.Memory** %MEMORY
  %loadMem_40b026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9785 = getelementptr inbounds %struct.GPR, %struct.GPR* %9784, i32 0, i32 33
  %9786 = getelementptr inbounds %struct.Reg, %struct.Reg* %9785, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %9786 to i64*
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9788 = getelementptr inbounds %struct.GPR, %struct.GPR* %9787, i32 0, i32 7
  %9789 = getelementptr inbounds %struct.Reg, %struct.Reg* %9788, i32 0, i32 0
  %RDX.i216 = bitcast %union.anon* %9789 to i64*
  %9790 = load i64, i64* %RDX.i216
  %9791 = load i64, i64* %PC.i215
  %9792 = add i64 %9791, 7
  store i64 %9792, i64* %PC.i215
  %9793 = sext i64 %9790 to i128
  %9794 = and i128 %9793, -18446744073709551616
  %9795 = zext i64 %9790 to i128
  %9796 = or i128 %9794, %9795
  %9797 = mul i128 744, %9796
  %9798 = trunc i128 %9797 to i64
  store i64 %9798, i64* %RDX.i216, align 8
  %9799 = sext i64 %9798 to i128
  %9800 = icmp ne i128 %9799, %9797
  %9801 = zext i1 %9800 to i8
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9801, i8* %9802, align 1
  %9803 = trunc i128 %9797 to i32
  %9804 = and i32 %9803, 255
  %9805 = call i32 @llvm.ctpop.i32(i32 %9804)
  %9806 = trunc i32 %9805 to i8
  %9807 = and i8 %9806, 1
  %9808 = xor i8 %9807, 1
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9808, i8* %9809, align 1
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9810, align 1
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9811, align 1
  %9812 = lshr i64 %9798, 63
  %9813 = trunc i64 %9812 to i8
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9813, i8* %9814, align 1
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9801, i8* %9815, align 1
  store %struct.Memory* %loadMem_40b026, %struct.Memory** %MEMORY
  %loadMem_40b02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 33
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %9818 to i64*
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 1
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %RAX.i213 = bitcast %union.anon* %9821 to i64*
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9823 = getelementptr inbounds %struct.GPR, %struct.GPR* %9822, i32 0, i32 7
  %9824 = getelementptr inbounds %struct.Reg, %struct.Reg* %9823, i32 0, i32 0
  %RDX.i214 = bitcast %union.anon* %9824 to i64*
  %9825 = load i64, i64* %RAX.i213
  %9826 = load i64, i64* %RDX.i214
  %9827 = load i64, i64* %PC.i212
  %9828 = add i64 %9827, 3
  store i64 %9828, i64* %PC.i212
  %9829 = add i64 %9826, %9825
  store i64 %9829, i64* %RAX.i213, align 8
  %9830 = icmp ult i64 %9829, %9825
  %9831 = icmp ult i64 %9829, %9826
  %9832 = or i1 %9830, %9831
  %9833 = zext i1 %9832 to i8
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9833, i8* %9834, align 1
  %9835 = trunc i64 %9829 to i32
  %9836 = and i32 %9835, 255
  %9837 = call i32 @llvm.ctpop.i32(i32 %9836)
  %9838 = trunc i32 %9837 to i8
  %9839 = and i8 %9838, 1
  %9840 = xor i8 %9839, 1
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9840, i8* %9841, align 1
  %9842 = xor i64 %9826, %9825
  %9843 = xor i64 %9842, %9829
  %9844 = lshr i64 %9843, 4
  %9845 = trunc i64 %9844 to i8
  %9846 = and i8 %9845, 1
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9846, i8* %9847, align 1
  %9848 = icmp eq i64 %9829, 0
  %9849 = zext i1 %9848 to i8
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9849, i8* %9850, align 1
  %9851 = lshr i64 %9829, 63
  %9852 = trunc i64 %9851 to i8
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9852, i8* %9853, align 1
  %9854 = lshr i64 %9825, 63
  %9855 = lshr i64 %9826, 63
  %9856 = xor i64 %9851, %9854
  %9857 = xor i64 %9851, %9855
  %9858 = add i64 %9856, %9857
  %9859 = icmp eq i64 %9858, 2
  %9860 = zext i1 %9859 to i8
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9860, i8* %9861, align 1
  store %struct.Memory* %loadMem_40b02d, %struct.Memory** %MEMORY
  %loadMem_40b030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 33
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 1
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %9867 to i64*
  %9868 = load i64, i64* %RAX.i211
  %9869 = add i64 %9868, 12
  %9870 = load i64, i64* %PC.i210
  %9871 = add i64 %9870, 4
  store i64 %9871, i64* %PC.i210
  %9872 = inttoptr i64 %9869 to i32*
  %9873 = load i32, i32* %9872
  %9874 = sext i32 %9873 to i64
  store i64 %9874, i64* %RAX.i211, align 8
  store %struct.Memory* %loadMem_40b030, %struct.Memory** %MEMORY
  %loadMem_40b034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 33
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %9877 to i64*
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 5
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %ECX.i207 = bitcast %union.anon* %9880 to i32*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 1
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %9883 to i64*
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9885 = getelementptr inbounds %struct.GPR, %struct.GPR* %9884, i32 0, i32 9
  %9886 = getelementptr inbounds %struct.Reg, %struct.Reg* %9885, i32 0, i32 0
  %RSI.i209 = bitcast %union.anon* %9886 to i64*
  %9887 = load i64, i64* %RSI.i209
  %9888 = load i64, i64* %RAX.i208
  %9889 = mul i64 %9888, 4
  %9890 = add i64 %9887, 16
  %9891 = add i64 %9890, %9889
  %9892 = load i32, i32* %ECX.i207
  %9893 = zext i32 %9892 to i64
  %9894 = load i64, i64* %PC.i206
  %9895 = add i64 %9894, 4
  store i64 %9895, i64* %PC.i206
  %9896 = inttoptr i64 %9891 to i32*
  store i32 %9892, i32* %9896
  store %struct.Memory* %loadMem_40b034, %struct.Memory** %MEMORY
  br label %block_.L_40b038

block_.L_40b038:                                  ; preds = %block_40b001, %block_.L_40afdf
  %loadMem_40b038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9898 = getelementptr inbounds %struct.GPR, %struct.GPR* %9897, i32 0, i32 33
  %9899 = getelementptr inbounds %struct.Reg, %struct.Reg* %9898, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %9899 to i64*
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9901 = getelementptr inbounds %struct.GPR, %struct.GPR* %9900, i32 0, i32 1
  %9902 = getelementptr inbounds %struct.Reg, %struct.Reg* %9901, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %9902 to i64*
  %9903 = load i64, i64* %PC.i204
  %9904 = add i64 %9903, 10
  store i64 %9904, i64* %PC.i204
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i205, align 8
  store %struct.Memory* %loadMem_40b038, %struct.Memory** %MEMORY
  %loadMem_40b042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9906 = getelementptr inbounds %struct.GPR, %struct.GPR* %9905, i32 0, i32 33
  %9907 = getelementptr inbounds %struct.Reg, %struct.Reg* %9906, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %9907 to i64*
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 5
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %RCX.i202 = bitcast %union.anon* %9910 to i64*
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 15
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %9913 to i64*
  %9914 = load i64, i64* %RBP.i203
  %9915 = sub i64 %9914, 8
  %9916 = load i64, i64* %PC.i201
  %9917 = add i64 %9916, 4
  store i64 %9917, i64* %PC.i201
  %9918 = inttoptr i64 %9915 to i32*
  %9919 = load i32, i32* %9918
  %9920 = sext i32 %9919 to i64
  store i64 %9920, i64* %RCX.i202, align 8
  store %struct.Memory* %loadMem_40b042, %struct.Memory** %MEMORY
  %loadMem_40b046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 33
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %9923 to i64*
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9925 = getelementptr inbounds %struct.GPR, %struct.GPR* %9924, i32 0, i32 5
  %9926 = getelementptr inbounds %struct.Reg, %struct.Reg* %9925, i32 0, i32 0
  %RCX.i200 = bitcast %union.anon* %9926 to i64*
  %9927 = load i64, i64* %RCX.i200
  %9928 = load i64, i64* %PC.i199
  %9929 = add i64 %9928, 7
  store i64 %9929, i64* %PC.i199
  %9930 = sext i64 %9927 to i128
  %9931 = and i128 %9930, -18446744073709551616
  %9932 = zext i64 %9927 to i128
  %9933 = or i128 %9931, %9932
  %9934 = mul i128 744, %9933
  %9935 = trunc i128 %9934 to i64
  store i64 %9935, i64* %RCX.i200, align 8
  %9936 = sext i64 %9935 to i128
  %9937 = icmp ne i128 %9936, %9934
  %9938 = zext i1 %9937 to i8
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9938, i8* %9939, align 1
  %9940 = trunc i128 %9934 to i32
  %9941 = and i32 %9940, 255
  %9942 = call i32 @llvm.ctpop.i32(i32 %9941)
  %9943 = trunc i32 %9942 to i8
  %9944 = and i8 %9943, 1
  %9945 = xor i8 %9944, 1
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9945, i8* %9946, align 1
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9947, align 1
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9948, align 1
  %9949 = lshr i64 %9935, 63
  %9950 = trunc i64 %9949 to i8
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9950, i8* %9951, align 1
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9938, i8* %9952, align 1
  store %struct.Memory* %loadMem_40b046, %struct.Memory** %MEMORY
  %loadMem_40b04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 33
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %9955 to i64*
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9957 = getelementptr inbounds %struct.GPR, %struct.GPR* %9956, i32 0, i32 1
  %9958 = getelementptr inbounds %struct.Reg, %struct.Reg* %9957, i32 0, i32 0
  %RAX.i197 = bitcast %union.anon* %9958 to i64*
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 5
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %9961 to i64*
  %9962 = load i64, i64* %RAX.i197
  %9963 = load i64, i64* %RCX.i198
  %9964 = load i64, i64* %PC.i196
  %9965 = add i64 %9964, 3
  store i64 %9965, i64* %PC.i196
  %9966 = add i64 %9963, %9962
  store i64 %9966, i64* %RAX.i197, align 8
  %9967 = icmp ult i64 %9966, %9962
  %9968 = icmp ult i64 %9966, %9963
  %9969 = or i1 %9967, %9968
  %9970 = zext i1 %9969 to i8
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9970, i8* %9971, align 1
  %9972 = trunc i64 %9966 to i32
  %9973 = and i32 %9972, 255
  %9974 = call i32 @llvm.ctpop.i32(i32 %9973)
  %9975 = trunc i32 %9974 to i8
  %9976 = and i8 %9975, 1
  %9977 = xor i8 %9976, 1
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9977, i8* %9978, align 1
  %9979 = xor i64 %9963, %9962
  %9980 = xor i64 %9979, %9966
  %9981 = lshr i64 %9980, 4
  %9982 = trunc i64 %9981 to i8
  %9983 = and i8 %9982, 1
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9983, i8* %9984, align 1
  %9985 = icmp eq i64 %9966, 0
  %9986 = zext i1 %9985 to i8
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9986, i8* %9987, align 1
  %9988 = lshr i64 %9966, 63
  %9989 = trunc i64 %9988 to i8
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9989, i8* %9990, align 1
  %9991 = lshr i64 %9962, 63
  %9992 = lshr i64 %9963, 63
  %9993 = xor i64 %9988, %9991
  %9994 = xor i64 %9988, %9992
  %9995 = add i64 %9993, %9994
  %9996 = icmp eq i64 %9995, 2
  %9997 = zext i1 %9996 to i8
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9997, i8* %9998, align 1
  store %struct.Memory* %loadMem_40b04d, %struct.Memory** %MEMORY
  %loadMem_40b050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10000 = getelementptr inbounds %struct.GPR, %struct.GPR* %9999, i32 0, i32 33
  %10001 = getelementptr inbounds %struct.Reg, %struct.Reg* %10000, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %10001 to i64*
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 1
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %10004 to i64*
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 7
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %RDX.i195 = bitcast %union.anon* %10007 to i64*
  %10008 = load i64, i64* %RAX.i194
  %10009 = add i64 %10008, 12
  %10010 = load i64, i64* %PC.i193
  %10011 = add i64 %10010, 3
  store i64 %10011, i64* %PC.i193
  %10012 = inttoptr i64 %10009 to i32*
  %10013 = load i32, i32* %10012
  %10014 = zext i32 %10013 to i64
  store i64 %10014, i64* %RDX.i195, align 8
  store %struct.Memory* %loadMem_40b050, %struct.Memory** %MEMORY
  %loadMem_40b053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 33
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %10017 to i64*
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 7
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %RDX.i192 = bitcast %union.anon* %10020 to i64*
  %10021 = load i64, i64* %RDX.i192
  %10022 = load i64, i64* %PC.i191
  %10023 = add i64 %10022, 3
  store i64 %10023, i64* %PC.i191
  %10024 = trunc i64 %10021 to i32
  %10025 = add i32 1, %10024
  %10026 = zext i32 %10025 to i64
  store i64 %10026, i64* %RDX.i192, align 8
  %10027 = icmp ult i32 %10025, %10024
  %10028 = icmp ult i32 %10025, 1
  %10029 = or i1 %10027, %10028
  %10030 = zext i1 %10029 to i8
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10030, i8* %10031, align 1
  %10032 = and i32 %10025, 255
  %10033 = call i32 @llvm.ctpop.i32(i32 %10032)
  %10034 = trunc i32 %10033 to i8
  %10035 = and i8 %10034, 1
  %10036 = xor i8 %10035, 1
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10036, i8* %10037, align 1
  %10038 = xor i64 1, %10021
  %10039 = trunc i64 %10038 to i32
  %10040 = xor i32 %10039, %10025
  %10041 = lshr i32 %10040, 4
  %10042 = trunc i32 %10041 to i8
  %10043 = and i8 %10042, 1
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10043, i8* %10044, align 1
  %10045 = icmp eq i32 %10025, 0
  %10046 = zext i1 %10045 to i8
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10046, i8* %10047, align 1
  %10048 = lshr i32 %10025, 31
  %10049 = trunc i32 %10048 to i8
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10049, i8* %10050, align 1
  %10051 = lshr i32 %10024, 31
  %10052 = xor i32 %10048, %10051
  %10053 = add i32 %10052, %10048
  %10054 = icmp eq i32 %10053, 2
  %10055 = zext i1 %10054 to i8
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10055, i8* %10056, align 1
  store %struct.Memory* %loadMem_40b053, %struct.Memory** %MEMORY
  %loadMem_40b056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 33
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %10059 to i64*
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 7
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %10062 to i32*
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10064 = getelementptr inbounds %struct.GPR, %struct.GPR* %10063, i32 0, i32 1
  %10065 = getelementptr inbounds %struct.Reg, %struct.Reg* %10064, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %10065 to i64*
  %10066 = load i64, i64* %RAX.i190
  %10067 = add i64 %10066, 12
  %10068 = load i32, i32* %EDX.i
  %10069 = zext i32 %10068 to i64
  %10070 = load i64, i64* %PC.i189
  %10071 = add i64 %10070, 3
  store i64 %10071, i64* %PC.i189
  %10072 = inttoptr i64 %10067 to i32*
  store i32 %10068, i32* %10072
  store %struct.Memory* %loadMem_40b056, %struct.Memory** %MEMORY
  %loadMem_40b059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10074 = getelementptr inbounds %struct.GPR, %struct.GPR* %10073, i32 0, i32 33
  %10075 = getelementptr inbounds %struct.Reg, %struct.Reg* %10074, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %10075 to i64*
  %10076 = load i64, i64* %PC.i188
  %10077 = add i64 %10076, 335
  %10078 = load i64, i64* %PC.i188
  %10079 = add i64 %10078, 5
  store i64 %10079, i64* %PC.i188
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10077, i64* %10080, align 8
  store %struct.Memory* %loadMem_40b059, %struct.Memory** %MEMORY
  br label %block_.L_40b1a8

block_.L_40b05e:                                  ; preds = %block_.L_40afc0
  %loadMem_40b05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 33
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %10083 to i64*
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10085 = getelementptr inbounds %struct.GPR, %struct.GPR* %10084, i32 0, i32 1
  %10086 = getelementptr inbounds %struct.Reg, %struct.Reg* %10085, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %10086 to i64*
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 15
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %10089 to i64*
  %10090 = load i64, i64* %RBP.i187
  %10091 = sub i64 %10090, 4
  %10092 = load i64, i64* %PC.i185
  %10093 = add i64 %10092, 3
  store i64 %10093, i64* %PC.i185
  %10094 = inttoptr i64 %10091 to i32*
  %10095 = load i32, i32* %10094
  %10096 = zext i32 %10095 to i64
  store i64 %10096, i64* %RAX.i186, align 8
  store %struct.Memory* %loadMem_40b05e, %struct.Memory** %MEMORY
  %loadMem_40b061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 33
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %10099 to i64*
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 1
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %10102 to i64*
  %10103 = load i64, i64* %RAX.i184
  %10104 = load i64, i64* %PC.i183
  %10105 = add i64 %10104, 3
  store i64 %10105, i64* %PC.i183
  %10106 = trunc i64 %10103 to i32
  %10107 = add i32 1, %10106
  %10108 = zext i32 %10107 to i64
  store i64 %10108, i64* %RAX.i184, align 8
  %10109 = icmp ult i32 %10107, %10106
  %10110 = icmp ult i32 %10107, 1
  %10111 = or i1 %10109, %10110
  %10112 = zext i1 %10111 to i8
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10112, i8* %10113, align 1
  %10114 = and i32 %10107, 255
  %10115 = call i32 @llvm.ctpop.i32(i32 %10114)
  %10116 = trunc i32 %10115 to i8
  %10117 = and i8 %10116, 1
  %10118 = xor i8 %10117, 1
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10118, i8* %10119, align 1
  %10120 = xor i64 1, %10103
  %10121 = trunc i64 %10120 to i32
  %10122 = xor i32 %10121, %10107
  %10123 = lshr i32 %10122, 4
  %10124 = trunc i32 %10123 to i8
  %10125 = and i8 %10124, 1
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10125, i8* %10126, align 1
  %10127 = icmp eq i32 %10107, 0
  %10128 = zext i1 %10127 to i8
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10128, i8* %10129, align 1
  %10130 = lshr i32 %10107, 31
  %10131 = trunc i32 %10130 to i8
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10131, i8* %10132, align 1
  %10133 = lshr i32 %10106, 31
  %10134 = xor i32 %10130, %10133
  %10135 = add i32 %10134, %10130
  %10136 = icmp eq i32 %10135, 2
  %10137 = zext i1 %10136 to i8
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10137, i8* %10138, align 1
  store %struct.Memory* %loadMem_40b061, %struct.Memory** %MEMORY
  %loadMem_40b064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10140 = getelementptr inbounds %struct.GPR, %struct.GPR* %10139, i32 0, i32 33
  %10141 = getelementptr inbounds %struct.Reg, %struct.Reg* %10140, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %10141 to i64*
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10143 = getelementptr inbounds %struct.GPR, %struct.GPR* %10142, i32 0, i32 1
  %10144 = getelementptr inbounds %struct.Reg, %struct.Reg* %10143, i32 0, i32 0
  %EAX.i181 = bitcast %union.anon* %10144 to i32*
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10146 = getelementptr inbounds %struct.GPR, %struct.GPR* %10145, i32 0, i32 5
  %10147 = getelementptr inbounds %struct.Reg, %struct.Reg* %10146, i32 0, i32 0
  %RCX.i182 = bitcast %union.anon* %10147 to i64*
  %10148 = load i32, i32* %EAX.i181
  %10149 = zext i32 %10148 to i64
  %10150 = load i64, i64* %PC.i180
  %10151 = add i64 %10150, 3
  store i64 %10151, i64* %PC.i180
  %10152 = shl i64 %10149, 32
  %10153 = ashr exact i64 %10152, 32
  store i64 %10153, i64* %RCX.i182, align 8
  store %struct.Memory* %loadMem_40b064, %struct.Memory** %MEMORY
  %loadMem_40b067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10155 = getelementptr inbounds %struct.GPR, %struct.GPR* %10154, i32 0, i32 33
  %10156 = getelementptr inbounds %struct.Reg, %struct.Reg* %10155, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %10156 to i64*
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10158 = getelementptr inbounds %struct.GPR, %struct.GPR* %10157, i32 0, i32 1
  %10159 = getelementptr inbounds %struct.Reg, %struct.Reg* %10158, i32 0, i32 0
  %RAX.i178 = bitcast %union.anon* %10159 to i64*
  %10160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10161 = getelementptr inbounds %struct.GPR, %struct.GPR* %10160, i32 0, i32 5
  %10162 = getelementptr inbounds %struct.Reg, %struct.Reg* %10161, i32 0, i32 0
  %RCX.i179 = bitcast %union.anon* %10162 to i64*
  %10163 = load i64, i64* %RCX.i179
  %10164 = add i64 %10163, 12099168
  %10165 = load i64, i64* %PC.i177
  %10166 = add i64 %10165, 8
  store i64 %10166, i64* %PC.i177
  %10167 = inttoptr i64 %10164 to i8*
  %10168 = load i8, i8* %10167
  %10169 = zext i8 %10168 to i64
  store i64 %10169, i64* %RAX.i178, align 8
  store %struct.Memory* %loadMem_40b067, %struct.Memory** %MEMORY
  %loadMem_40b06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10171 = getelementptr inbounds %struct.GPR, %struct.GPR* %10170, i32 0, i32 33
  %10172 = getelementptr inbounds %struct.Reg, %struct.Reg* %10171, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %10172 to i64*
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10174 = getelementptr inbounds %struct.GPR, %struct.GPR* %10173, i32 0, i32 1
  %10175 = getelementptr inbounds %struct.Reg, %struct.Reg* %10174, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10175 to i32*
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 15
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %10178 to i64*
  %10179 = load i32, i32* %EAX.i
  %10180 = zext i32 %10179 to i64
  %10181 = load i64, i64* %RBP.i176
  %10182 = sub i64 %10181, 16
  %10183 = load i64, i64* %PC.i175
  %10184 = add i64 %10183, 3
  store i64 %10184, i64* %PC.i175
  %10185 = inttoptr i64 %10182 to i32*
  %10186 = load i32, i32* %10185
  %10187 = sub i32 %10179, %10186
  %10188 = icmp ult i32 %10179, %10186
  %10189 = zext i1 %10188 to i8
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10189, i8* %10190, align 1
  %10191 = and i32 %10187, 255
  %10192 = call i32 @llvm.ctpop.i32(i32 %10191)
  %10193 = trunc i32 %10192 to i8
  %10194 = and i8 %10193, 1
  %10195 = xor i8 %10194, 1
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10195, i8* %10196, align 1
  %10197 = xor i32 %10186, %10179
  %10198 = xor i32 %10197, %10187
  %10199 = lshr i32 %10198, 4
  %10200 = trunc i32 %10199 to i8
  %10201 = and i8 %10200, 1
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10201, i8* %10202, align 1
  %10203 = icmp eq i32 %10187, 0
  %10204 = zext i1 %10203 to i8
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10204, i8* %10205, align 1
  %10206 = lshr i32 %10187, 31
  %10207 = trunc i32 %10206 to i8
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10207, i8* %10208, align 1
  %10209 = lshr i32 %10179, 31
  %10210 = lshr i32 %10186, 31
  %10211 = xor i32 %10210, %10209
  %10212 = xor i32 %10206, %10209
  %10213 = add i32 %10212, %10211
  %10214 = icmp eq i32 %10213, 2
  %10215 = zext i1 %10214 to i8
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10215, i8* %10216, align 1
  store %struct.Memory* %loadMem_40b06f, %struct.Memory** %MEMORY
  %loadMem_40b072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10218 = getelementptr inbounds %struct.GPR, %struct.GPR* %10217, i32 0, i32 33
  %10219 = getelementptr inbounds %struct.Reg, %struct.Reg* %10218, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %10219 to i64*
  %10220 = load i64, i64* %PC.i174
  %10221 = add i64 %10220, 305
  %10222 = load i64, i64* %PC.i174
  %10223 = add i64 %10222, 6
  %10224 = load i64, i64* %PC.i174
  %10225 = add i64 %10224, 6
  store i64 %10225, i64* %PC.i174
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10227 = load i8, i8* %10226, align 1
  %10228 = icmp eq i8 %10227, 0
  %10229 = zext i1 %10228 to i8
  store i8 %10229, i8* %BRANCH_TAKEN, align 1
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10231 = select i1 %10228, i64 %10221, i64 %10223
  store i64 %10231, i64* %10230, align 8
  store %struct.Memory* %loadMem_40b072, %struct.Memory** %MEMORY
  %loadBr_40b072 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b072 = icmp eq i8 %loadBr_40b072, 1
  br i1 %cmpBr_40b072, label %block_.L_40b1a3, label %block_40b078

block_40b078:                                     ; preds = %block_.L_40b05e
  %loadMem_40b078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 33
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 1
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %10237 to i64*
  %10238 = load i64, i64* %PC.i172
  %10239 = add i64 %10238, 10
  store i64 %10239, i64* %PC.i172
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i173, align 8
  store %struct.Memory* %loadMem_40b078, %struct.Memory** %MEMORY
  %loadMem_40b082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10241 = getelementptr inbounds %struct.GPR, %struct.GPR* %10240, i32 0, i32 33
  %10242 = getelementptr inbounds %struct.Reg, %struct.Reg* %10241, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %10242 to i64*
  %10243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10244 = getelementptr inbounds %struct.GPR, %struct.GPR* %10243, i32 0, i32 5
  %10245 = getelementptr inbounds %struct.Reg, %struct.Reg* %10244, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %10245 to i64*
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10247 = getelementptr inbounds %struct.GPR, %struct.GPR* %10246, i32 0, i32 15
  %10248 = getelementptr inbounds %struct.Reg, %struct.Reg* %10247, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %10248 to i64*
  %10249 = load i64, i64* %RBP.i171
  %10250 = sub i64 %10249, 4
  %10251 = load i64, i64* %PC.i169
  %10252 = add i64 %10251, 3
  store i64 %10252, i64* %PC.i169
  %10253 = inttoptr i64 %10250 to i32*
  %10254 = load i32, i32* %10253
  %10255 = zext i32 %10254 to i64
  store i64 %10255, i64* %RCX.i170, align 8
  store %struct.Memory* %loadMem_40b082, %struct.Memory** %MEMORY
  %loadMem_40b085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10257 = getelementptr inbounds %struct.GPR, %struct.GPR* %10256, i32 0, i32 33
  %10258 = getelementptr inbounds %struct.Reg, %struct.Reg* %10257, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %10258 to i64*
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10260 = getelementptr inbounds %struct.GPR, %struct.GPR* %10259, i32 0, i32 5
  %10261 = getelementptr inbounds %struct.Reg, %struct.Reg* %10260, i32 0, i32 0
  %RCX.i168 = bitcast %union.anon* %10261 to i64*
  %10262 = load i64, i64* %RCX.i168
  %10263 = load i64, i64* %PC.i167
  %10264 = add i64 %10263, 3
  store i64 %10264, i64* %PC.i167
  %10265 = trunc i64 %10262 to i32
  %10266 = add i32 1, %10265
  %10267 = zext i32 %10266 to i64
  store i64 %10267, i64* %RCX.i168, align 8
  %10268 = icmp ult i32 %10266, %10265
  %10269 = icmp ult i32 %10266, 1
  %10270 = or i1 %10268, %10269
  %10271 = zext i1 %10270 to i8
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10271, i8* %10272, align 1
  %10273 = and i32 %10266, 255
  %10274 = call i32 @llvm.ctpop.i32(i32 %10273)
  %10275 = trunc i32 %10274 to i8
  %10276 = and i8 %10275, 1
  %10277 = xor i8 %10276, 1
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10277, i8* %10278, align 1
  %10279 = xor i64 1, %10262
  %10280 = trunc i64 %10279 to i32
  %10281 = xor i32 %10280, %10266
  %10282 = lshr i32 %10281, 4
  %10283 = trunc i32 %10282 to i8
  %10284 = and i8 %10283, 1
  %10285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10284, i8* %10285, align 1
  %10286 = icmp eq i32 %10266, 0
  %10287 = zext i1 %10286 to i8
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10287, i8* %10288, align 1
  %10289 = lshr i32 %10266, 31
  %10290 = trunc i32 %10289 to i8
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10290, i8* %10291, align 1
  %10292 = lshr i32 %10265, 31
  %10293 = xor i32 %10289, %10292
  %10294 = add i32 %10293, %10289
  %10295 = icmp eq i32 %10294, 2
  %10296 = zext i1 %10295 to i8
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10296, i8* %10297, align 1
  store %struct.Memory* %loadMem_40b085, %struct.Memory** %MEMORY
  %loadMem_40b088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10299 = getelementptr inbounds %struct.GPR, %struct.GPR* %10298, i32 0, i32 33
  %10300 = getelementptr inbounds %struct.Reg, %struct.Reg* %10299, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %10300 to i64*
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 5
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %ECX.i165 = bitcast %union.anon* %10303 to i32*
  %10304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10305 = getelementptr inbounds %struct.GPR, %struct.GPR* %10304, i32 0, i32 7
  %10306 = getelementptr inbounds %struct.Reg, %struct.Reg* %10305, i32 0, i32 0
  %RDX.i166 = bitcast %union.anon* %10306 to i64*
  %10307 = load i32, i32* %ECX.i165
  %10308 = zext i32 %10307 to i64
  %10309 = load i64, i64* %PC.i164
  %10310 = add i64 %10309, 3
  store i64 %10310, i64* %PC.i164
  %10311 = shl i64 %10308, 32
  %10312 = ashr exact i64 %10311, 32
  store i64 %10312, i64* %RDX.i166, align 8
  store %struct.Memory* %loadMem_40b088, %struct.Memory** %MEMORY
  %loadMem_40b08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10314 = getelementptr inbounds %struct.GPR, %struct.GPR* %10313, i32 0, i32 33
  %10315 = getelementptr inbounds %struct.Reg, %struct.Reg* %10314, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %10315 to i64*
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10317 = getelementptr inbounds %struct.GPR, %struct.GPR* %10316, i32 0, i32 7
  %10318 = getelementptr inbounds %struct.Reg, %struct.Reg* %10317, i32 0, i32 0
  %RDX.i163 = bitcast %union.anon* %10318 to i64*
  %10319 = load i64, i64* %RDX.i163
  %10320 = mul i64 %10319, 4
  %10321 = add i64 %10320, 11187184
  %10322 = load i64, i64* %PC.i162
  %10323 = add i64 %10322, 8
  store i64 %10323, i64* %PC.i162
  %10324 = inttoptr i64 %10321 to i32*
  %10325 = load i32, i32* %10324
  %10326 = sext i32 %10325 to i64
  store i64 %10326, i64* %RDX.i163, align 8
  store %struct.Memory* %loadMem_40b08b, %struct.Memory** %MEMORY
  %loadMem_40b093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 33
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %10329 to i64*
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 7
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %RDX.i161 = bitcast %union.anon* %10332 to i64*
  %10333 = load i64, i64* %RDX.i161
  %10334 = load i64, i64* %PC.i160
  %10335 = add i64 %10334, 7
  store i64 %10335, i64* %PC.i160
  %10336 = sext i64 %10333 to i128
  %10337 = and i128 %10336, -18446744073709551616
  %10338 = zext i64 %10333 to i128
  %10339 = or i128 %10337, %10338
  %10340 = mul i128 744, %10339
  %10341 = trunc i128 %10340 to i64
  store i64 %10341, i64* %RDX.i161, align 8
  %10342 = sext i64 %10341 to i128
  %10343 = icmp ne i128 %10342, %10340
  %10344 = zext i1 %10343 to i8
  %10345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10344, i8* %10345, align 1
  %10346 = trunc i128 %10340 to i32
  %10347 = and i32 %10346, 255
  %10348 = call i32 @llvm.ctpop.i32(i32 %10347)
  %10349 = trunc i32 %10348 to i8
  %10350 = and i8 %10349, 1
  %10351 = xor i8 %10350, 1
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10351, i8* %10352, align 1
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10353, align 1
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10354, align 1
  %10355 = lshr i64 %10341, 63
  %10356 = trunc i64 %10355 to i8
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10356, i8* %10357, align 1
  %10358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10344, i8* %10358, align 1
  store %struct.Memory* %loadMem_40b093, %struct.Memory** %MEMORY
  %loadMem_40b09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 33
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10361 to i64*
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 1
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 7
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %RDX.i159 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %RAX.i158
  %10369 = load i64, i64* %RDX.i159
  %10370 = load i64, i64* %PC.i157
  %10371 = add i64 %10370, 3
  store i64 %10371, i64* %PC.i157
  %10372 = add i64 %10369, %10368
  store i64 %10372, i64* %RAX.i158, align 8
  %10373 = icmp ult i64 %10372, %10368
  %10374 = icmp ult i64 %10372, %10369
  %10375 = or i1 %10373, %10374
  %10376 = zext i1 %10375 to i8
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10376, i8* %10377, align 1
  %10378 = trunc i64 %10372 to i32
  %10379 = and i32 %10378, 255
  %10380 = call i32 @llvm.ctpop.i32(i32 %10379)
  %10381 = trunc i32 %10380 to i8
  %10382 = and i8 %10381, 1
  %10383 = xor i8 %10382, 1
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10383, i8* %10384, align 1
  %10385 = xor i64 %10369, %10368
  %10386 = xor i64 %10385, %10372
  %10387 = lshr i64 %10386, 4
  %10388 = trunc i64 %10387 to i8
  %10389 = and i8 %10388, 1
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10389, i8* %10390, align 1
  %10391 = icmp eq i64 %10372, 0
  %10392 = zext i1 %10391 to i8
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10392, i8* %10393, align 1
  %10394 = lshr i64 %10372, 63
  %10395 = trunc i64 %10394 to i8
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10395, i8* %10396, align 1
  %10397 = lshr i64 %10368, 63
  %10398 = lshr i64 %10369, 63
  %10399 = xor i64 %10394, %10397
  %10400 = xor i64 %10394, %10398
  %10401 = add i64 %10399, %10400
  %10402 = icmp eq i64 %10401, 2
  %10403 = zext i1 %10402 to i8
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10403, i8* %10404, align 1
  store %struct.Memory* %loadMem_40b09a, %struct.Memory** %MEMORY
  %loadMem_40b09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 33
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %10407 to i64*
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10409 = getelementptr inbounds %struct.GPR, %struct.GPR* %10408, i32 0, i32 1
  %10410 = getelementptr inbounds %struct.Reg, %struct.Reg* %10409, i32 0, i32 0
  %RAX.i155 = bitcast %union.anon* %10410 to i64*
  %10411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10412 = getelementptr inbounds %struct.GPR, %struct.GPR* %10411, i32 0, i32 5
  %10413 = getelementptr inbounds %struct.Reg, %struct.Reg* %10412, i32 0, i32 0
  %RCX.i156 = bitcast %union.anon* %10413 to i64*
  %10414 = load i64, i64* %RAX.i155
  %10415 = add i64 %10414, 740
  %10416 = load i64, i64* %PC.i154
  %10417 = add i64 %10416, 6
  store i64 %10417, i64* %PC.i154
  %10418 = inttoptr i64 %10415 to i32*
  %10419 = load i32, i32* %10418
  %10420 = zext i32 %10419 to i64
  store i64 %10420, i64* %RCX.i156, align 8
  store %struct.Memory* %loadMem_40b09d, %struct.Memory** %MEMORY
  %loadMem_40b0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 33
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 5
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %ECX.i153 = bitcast %union.anon* %10426 to i32*
  %10427 = load i32, i32* %ECX.i153
  %10428 = zext i32 %10427 to i64
  %10429 = load i64, i64* %PC.i152
  %10430 = add i64 %10429, 7
  store i64 %10430, i64* %PC.i152
  %10431 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %10432 = sub i32 %10427, %10431
  %10433 = icmp ult i32 %10427, %10431
  %10434 = zext i1 %10433 to i8
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10434, i8* %10435, align 1
  %10436 = and i32 %10432, 255
  %10437 = call i32 @llvm.ctpop.i32(i32 %10436)
  %10438 = trunc i32 %10437 to i8
  %10439 = and i8 %10438, 1
  %10440 = xor i8 %10439, 1
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10440, i8* %10441, align 1
  %10442 = xor i32 %10431, %10427
  %10443 = xor i32 %10442, %10432
  %10444 = lshr i32 %10443, 4
  %10445 = trunc i32 %10444 to i8
  %10446 = and i8 %10445, 1
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10446, i8* %10447, align 1
  %10448 = icmp eq i32 %10432, 0
  %10449 = zext i1 %10448 to i8
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10449, i8* %10450, align 1
  %10451 = lshr i32 %10432, 31
  %10452 = trunc i32 %10451 to i8
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10452, i8* %10453, align 1
  %10454 = lshr i32 %10427, 31
  %10455 = lshr i32 %10431, 31
  %10456 = xor i32 %10455, %10454
  %10457 = xor i32 %10451, %10454
  %10458 = add i32 %10457, %10456
  %10459 = icmp eq i32 %10458, 2
  %10460 = zext i1 %10459 to i8
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10460, i8* %10461, align 1
  store %struct.Memory* %loadMem_40b0a3, %struct.Memory** %MEMORY
  %loadMem_40b0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 33
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %10464 to i64*
  %10465 = load i64, i64* %PC.i151
  %10466 = add i64 %10465, 249
  %10467 = load i64, i64* %PC.i151
  %10468 = add i64 %10467, 6
  %10469 = load i64, i64* %PC.i151
  %10470 = add i64 %10469, 6
  store i64 %10470, i64* %PC.i151
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10472 = load i8, i8* %10471, align 1
  store i8 %10472, i8* %BRANCH_TAKEN, align 1
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10474 = icmp ne i8 %10472, 0
  %10475 = select i1 %10474, i64 %10466, i64 %10468
  store i64 %10475, i64* %10473, align 8
  store %struct.Memory* %loadMem_40b0aa, %struct.Memory** %MEMORY
  %loadBr_40b0aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b0aa = icmp eq i8 %loadBr_40b0aa, 1
  br i1 %cmpBr_40b0aa, label %block_.L_40b1a3, label %block_40b0b0

block_40b0b0:                                     ; preds = %block_40b078
  %loadMem_40b0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10477 = getelementptr inbounds %struct.GPR, %struct.GPR* %10476, i32 0, i32 33
  %10478 = getelementptr inbounds %struct.Reg, %struct.Reg* %10477, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %10478 to i64*
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10480 = getelementptr inbounds %struct.GPR, %struct.GPR* %10479, i32 0, i32 1
  %10481 = getelementptr inbounds %struct.Reg, %struct.Reg* %10480, i32 0, i32 0
  %RAX.i150 = bitcast %union.anon* %10481 to i64*
  %10482 = load i64, i64* %PC.i149
  %10483 = add i64 %10482, 10
  store i64 %10483, i64* %PC.i149
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i150, align 8
  store %struct.Memory* %loadMem_40b0b0, %struct.Memory** %MEMORY
  %loadMem_40b0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10485 = getelementptr inbounds %struct.GPR, %struct.GPR* %10484, i32 0, i32 33
  %10486 = getelementptr inbounds %struct.Reg, %struct.Reg* %10485, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10486 to i64*
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 5
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %RCX.i147 = bitcast %union.anon* %10489 to i64*
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10491 = getelementptr inbounds %struct.GPR, %struct.GPR* %10490, i32 0, i32 15
  %10492 = getelementptr inbounds %struct.Reg, %struct.Reg* %10491, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %10492 to i64*
  %10493 = load i64, i64* %RBP.i148
  %10494 = sub i64 %10493, 4
  %10495 = load i64, i64* %PC.i146
  %10496 = add i64 %10495, 3
  store i64 %10496, i64* %PC.i146
  %10497 = inttoptr i64 %10494 to i32*
  %10498 = load i32, i32* %10497
  %10499 = zext i32 %10498 to i64
  store i64 %10499, i64* %RCX.i147, align 8
  store %struct.Memory* %loadMem_40b0ba, %struct.Memory** %MEMORY
  %loadMem_40b0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10501 = getelementptr inbounds %struct.GPR, %struct.GPR* %10500, i32 0, i32 33
  %10502 = getelementptr inbounds %struct.Reg, %struct.Reg* %10501, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10502 to i64*
  %10503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10504 = getelementptr inbounds %struct.GPR, %struct.GPR* %10503, i32 0, i32 5
  %10505 = getelementptr inbounds %struct.Reg, %struct.Reg* %10504, i32 0, i32 0
  %RCX.i145 = bitcast %union.anon* %10505 to i64*
  %10506 = load i64, i64* %RCX.i145
  %10507 = load i64, i64* %PC.i144
  %10508 = add i64 %10507, 3
  store i64 %10508, i64* %PC.i144
  %10509 = trunc i64 %10506 to i32
  %10510 = add i32 1, %10509
  %10511 = zext i32 %10510 to i64
  store i64 %10511, i64* %RCX.i145, align 8
  %10512 = icmp ult i32 %10510, %10509
  %10513 = icmp ult i32 %10510, 1
  %10514 = or i1 %10512, %10513
  %10515 = zext i1 %10514 to i8
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10515, i8* %10516, align 1
  %10517 = and i32 %10510, 255
  %10518 = call i32 @llvm.ctpop.i32(i32 %10517)
  %10519 = trunc i32 %10518 to i8
  %10520 = and i8 %10519, 1
  %10521 = xor i8 %10520, 1
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10521, i8* %10522, align 1
  %10523 = xor i64 1, %10506
  %10524 = trunc i64 %10523 to i32
  %10525 = xor i32 %10524, %10510
  %10526 = lshr i32 %10525, 4
  %10527 = trunc i32 %10526 to i8
  %10528 = and i8 %10527, 1
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10528, i8* %10529, align 1
  %10530 = icmp eq i32 %10510, 0
  %10531 = zext i1 %10530 to i8
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10531, i8* %10532, align 1
  %10533 = lshr i32 %10510, 31
  %10534 = trunc i32 %10533 to i8
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10534, i8* %10535, align 1
  %10536 = lshr i32 %10509, 31
  %10537 = xor i32 %10533, %10536
  %10538 = add i32 %10537, %10533
  %10539 = icmp eq i32 %10538, 2
  %10540 = zext i1 %10539 to i8
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10540, i8* %10541, align 1
  store %struct.Memory* %loadMem_40b0bd, %struct.Memory** %MEMORY
  %loadMem_40b0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10543 = getelementptr inbounds %struct.GPR, %struct.GPR* %10542, i32 0, i32 33
  %10544 = getelementptr inbounds %struct.Reg, %struct.Reg* %10543, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %10544 to i64*
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10546 = getelementptr inbounds %struct.GPR, %struct.GPR* %10545, i32 0, i32 5
  %10547 = getelementptr inbounds %struct.Reg, %struct.Reg* %10546, i32 0, i32 0
  %ECX.i142 = bitcast %union.anon* %10547 to i32*
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10549 = getelementptr inbounds %struct.GPR, %struct.GPR* %10548, i32 0, i32 7
  %10550 = getelementptr inbounds %struct.Reg, %struct.Reg* %10549, i32 0, i32 0
  %RDX.i143 = bitcast %union.anon* %10550 to i64*
  %10551 = load i32, i32* %ECX.i142
  %10552 = zext i32 %10551 to i64
  %10553 = load i64, i64* %PC.i141
  %10554 = add i64 %10553, 3
  store i64 %10554, i64* %PC.i141
  %10555 = shl i64 %10552, 32
  %10556 = ashr exact i64 %10555, 32
  store i64 %10556, i64* %RDX.i143, align 8
  store %struct.Memory* %loadMem_40b0c0, %struct.Memory** %MEMORY
  %loadMem_40b0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 33
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 5
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RCX.i139 = bitcast %union.anon* %10562 to i64*
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10564 = getelementptr inbounds %struct.GPR, %struct.GPR* %10563, i32 0, i32 7
  %10565 = getelementptr inbounds %struct.Reg, %struct.Reg* %10564, i32 0, i32 0
  %RDX.i140 = bitcast %union.anon* %10565 to i64*
  %10566 = load i64, i64* %RDX.i140
  %10567 = mul i64 %10566, 4
  %10568 = add i64 %10567, 11187184
  %10569 = load i64, i64* %PC.i138
  %10570 = add i64 %10569, 7
  store i64 %10570, i64* %PC.i138
  %10571 = inttoptr i64 %10568 to i32*
  %10572 = load i32, i32* %10571
  %10573 = zext i32 %10572 to i64
  store i64 %10573, i64* %RCX.i139, align 8
  store %struct.Memory* %loadMem_40b0c3, %struct.Memory** %MEMORY
  %loadMem_40b0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10575 = getelementptr inbounds %struct.GPR, %struct.GPR* %10574, i32 0, i32 33
  %10576 = getelementptr inbounds %struct.Reg, %struct.Reg* %10575, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10576 to i64*
  %10577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10578 = getelementptr inbounds %struct.GPR, %struct.GPR* %10577, i32 0, i32 5
  %10579 = getelementptr inbounds %struct.Reg, %struct.Reg* %10578, i32 0, i32 0
  %ECX.i136 = bitcast %union.anon* %10579 to i32*
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10581 = getelementptr inbounds %struct.GPR, %struct.GPR* %10580, i32 0, i32 15
  %10582 = getelementptr inbounds %struct.Reg, %struct.Reg* %10581, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %10582 to i64*
  %10583 = load i64, i64* %RBP.i137
  %10584 = sub i64 %10583, 32
  %10585 = load i32, i32* %ECX.i136
  %10586 = zext i32 %10585 to i64
  %10587 = load i64, i64* %PC.i135
  %10588 = add i64 %10587, 3
  store i64 %10588, i64* %PC.i135
  %10589 = inttoptr i64 %10584 to i32*
  store i32 %10585, i32* %10589
  store %struct.Memory* %loadMem_40b0ca, %struct.Memory** %MEMORY
  %loadMem_40b0cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10591 = getelementptr inbounds %struct.GPR, %struct.GPR* %10590, i32 0, i32 33
  %10592 = getelementptr inbounds %struct.Reg, %struct.Reg* %10591, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10592 to i64*
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10594 = getelementptr inbounds %struct.GPR, %struct.GPR* %10593, i32 0, i32 5
  %10595 = getelementptr inbounds %struct.Reg, %struct.Reg* %10594, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %10595 to i64*
  %10596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10597 = getelementptr inbounds %struct.GPR, %struct.GPR* %10596, i32 0, i32 15
  %10598 = getelementptr inbounds %struct.Reg, %struct.Reg* %10597, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %10598 to i64*
  %10599 = load i64, i64* %RBP.i134
  %10600 = sub i64 %10599, 4
  %10601 = load i64, i64* %PC.i132
  %10602 = add i64 %10601, 3
  store i64 %10602, i64* %PC.i132
  %10603 = inttoptr i64 %10600 to i32*
  %10604 = load i32, i32* %10603
  %10605 = zext i32 %10604 to i64
  store i64 %10605, i64* %RCX.i133, align 8
  store %struct.Memory* %loadMem_40b0cd, %struct.Memory** %MEMORY
  %loadMem_40b0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10607 = getelementptr inbounds %struct.GPR, %struct.GPR* %10606, i32 0, i32 33
  %10608 = getelementptr inbounds %struct.Reg, %struct.Reg* %10607, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %10608 to i64*
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10610 = getelementptr inbounds %struct.GPR, %struct.GPR* %10609, i32 0, i32 5
  %10611 = getelementptr inbounds %struct.Reg, %struct.Reg* %10610, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %10611 to i64*
  %10612 = load i64, i64* %RCX.i131
  %10613 = load i64, i64* %PC.i130
  %10614 = add i64 %10613, 3
  store i64 %10614, i64* %PC.i130
  %10615 = trunc i64 %10612 to i32
  %10616 = add i32 1, %10615
  %10617 = zext i32 %10616 to i64
  store i64 %10617, i64* %RCX.i131, align 8
  %10618 = icmp ult i32 %10616, %10615
  %10619 = icmp ult i32 %10616, 1
  %10620 = or i1 %10618, %10619
  %10621 = zext i1 %10620 to i8
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10621, i8* %10622, align 1
  %10623 = and i32 %10616, 255
  %10624 = call i32 @llvm.ctpop.i32(i32 %10623)
  %10625 = trunc i32 %10624 to i8
  %10626 = and i8 %10625, 1
  %10627 = xor i8 %10626, 1
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10627, i8* %10628, align 1
  %10629 = xor i64 1, %10612
  %10630 = trunc i64 %10629 to i32
  %10631 = xor i32 %10630, %10616
  %10632 = lshr i32 %10631, 4
  %10633 = trunc i32 %10632 to i8
  %10634 = and i8 %10633, 1
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10634, i8* %10635, align 1
  %10636 = icmp eq i32 %10616, 0
  %10637 = zext i1 %10636 to i8
  %10638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10637, i8* %10638, align 1
  %10639 = lshr i32 %10616, 31
  %10640 = trunc i32 %10639 to i8
  %10641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10640, i8* %10641, align 1
  %10642 = lshr i32 %10615, 31
  %10643 = xor i32 %10639, %10642
  %10644 = add i32 %10643, %10639
  %10645 = icmp eq i32 %10644, 2
  %10646 = zext i1 %10645 to i8
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10646, i8* %10647, align 1
  store %struct.Memory* %loadMem_40b0d0, %struct.Memory** %MEMORY
  %loadMem_40b0d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10649 = getelementptr inbounds %struct.GPR, %struct.GPR* %10648, i32 0, i32 33
  %10650 = getelementptr inbounds %struct.Reg, %struct.Reg* %10649, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %10650 to i64*
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10652 = getelementptr inbounds %struct.GPR, %struct.GPR* %10651, i32 0, i32 5
  %10653 = getelementptr inbounds %struct.Reg, %struct.Reg* %10652, i32 0, i32 0
  %ECX.i128 = bitcast %union.anon* %10653 to i32*
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 7
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %RDX.i129 = bitcast %union.anon* %10656 to i64*
  %10657 = load i32, i32* %ECX.i128
  %10658 = zext i32 %10657 to i64
  %10659 = load i64, i64* %PC.i127
  %10660 = add i64 %10659, 3
  store i64 %10660, i64* %PC.i127
  %10661 = shl i64 %10658, 32
  %10662 = ashr exact i64 %10661, 32
  store i64 %10662, i64* %RDX.i129, align 8
  store %struct.Memory* %loadMem_40b0d3, %struct.Memory** %MEMORY
  %loadMem_40b0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10664 = getelementptr inbounds %struct.GPR, %struct.GPR* %10663, i32 0, i32 33
  %10665 = getelementptr inbounds %struct.Reg, %struct.Reg* %10664, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %10665 to i64*
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10667 = getelementptr inbounds %struct.GPR, %struct.GPR* %10666, i32 0, i32 5
  %10668 = getelementptr inbounds %struct.Reg, %struct.Reg* %10667, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %10668 to i64*
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10670 = getelementptr inbounds %struct.GPR, %struct.GPR* %10669, i32 0, i32 7
  %10671 = getelementptr inbounds %struct.Reg, %struct.Reg* %10670, i32 0, i32 0
  %RDX.i126 = bitcast %union.anon* %10671 to i64*
  %10672 = load i64, i64* %RDX.i126
  %10673 = mul i64 %10672, 4
  %10674 = add i64 %10673, 11187184
  %10675 = load i64, i64* %PC.i124
  %10676 = add i64 %10675, 7
  store i64 %10676, i64* %PC.i124
  %10677 = inttoptr i64 %10674 to i32*
  %10678 = load i32, i32* %10677
  %10679 = zext i32 %10678 to i64
  store i64 %10679, i64* %RCX.i125, align 8
  store %struct.Memory* %loadMem_40b0d6, %struct.Memory** %MEMORY
  %loadMem_40b0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 33
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %10682 to i64*
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10684 = getelementptr inbounds %struct.GPR, %struct.GPR* %10683, i32 0, i32 7
  %10685 = getelementptr inbounds %struct.Reg, %struct.Reg* %10684, i32 0, i32 0
  %RDX.i122 = bitcast %union.anon* %10685 to i64*
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 15
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %10688 to i64*
  %10689 = load i64, i64* %RBP.i123
  %10690 = sub i64 %10689, 8
  %10691 = load i64, i64* %PC.i121
  %10692 = add i64 %10691, 4
  store i64 %10692, i64* %PC.i121
  %10693 = inttoptr i64 %10690 to i32*
  %10694 = load i32, i32* %10693
  %10695 = sext i32 %10694 to i64
  store i64 %10695, i64* %RDX.i122, align 8
  store %struct.Memory* %loadMem_40b0dd, %struct.Memory** %MEMORY
  %loadMem_40b0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10697 = getelementptr inbounds %struct.GPR, %struct.GPR* %10696, i32 0, i32 33
  %10698 = getelementptr inbounds %struct.Reg, %struct.Reg* %10697, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %10698 to i64*
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10700 = getelementptr inbounds %struct.GPR, %struct.GPR* %10699, i32 0, i32 7
  %10701 = getelementptr inbounds %struct.Reg, %struct.Reg* %10700, i32 0, i32 0
  %RDX.i120 = bitcast %union.anon* %10701 to i64*
  %10702 = load i64, i64* %RDX.i120
  %10703 = load i64, i64* %PC.i119
  %10704 = add i64 %10703, 7
  store i64 %10704, i64* %PC.i119
  %10705 = sext i64 %10702 to i128
  %10706 = and i128 %10705, -18446744073709551616
  %10707 = zext i64 %10702 to i128
  %10708 = or i128 %10706, %10707
  %10709 = mul i128 744, %10708
  %10710 = trunc i128 %10709 to i64
  store i64 %10710, i64* %RDX.i120, align 8
  %10711 = sext i64 %10710 to i128
  %10712 = icmp ne i128 %10711, %10709
  %10713 = zext i1 %10712 to i8
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10713, i8* %10714, align 1
  %10715 = trunc i128 %10709 to i32
  %10716 = and i32 %10715, 255
  %10717 = call i32 @llvm.ctpop.i32(i32 %10716)
  %10718 = trunc i32 %10717 to i8
  %10719 = and i8 %10718, 1
  %10720 = xor i8 %10719, 1
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10720, i8* %10721, align 1
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10722, align 1
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10723, align 1
  %10724 = lshr i64 %10710, 63
  %10725 = trunc i64 %10724 to i8
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10725, i8* %10726, align 1
  %10727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10713, i8* %10727, align 1
  store %struct.Memory* %loadMem_40b0e1, %struct.Memory** %MEMORY
  %loadMem_40b0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10729 = getelementptr inbounds %struct.GPR, %struct.GPR* %10728, i32 0, i32 33
  %10730 = getelementptr inbounds %struct.Reg, %struct.Reg* %10729, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %10730 to i64*
  %10731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10732 = getelementptr inbounds %struct.GPR, %struct.GPR* %10731, i32 0, i32 1
  %10733 = getelementptr inbounds %struct.Reg, %struct.Reg* %10732, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %10733 to i64*
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10735 = getelementptr inbounds %struct.GPR, %struct.GPR* %10734, i32 0, i32 9
  %10736 = getelementptr inbounds %struct.Reg, %struct.Reg* %10735, i32 0, i32 0
  %RSI.i118 = bitcast %union.anon* %10736 to i64*
  %10737 = load i64, i64* %RAX.i117
  %10738 = load i64, i64* %PC.i116
  %10739 = add i64 %10738, 3
  store i64 %10739, i64* %PC.i116
  store i64 %10737, i64* %RSI.i118, align 8
  store %struct.Memory* %loadMem_40b0e8, %struct.Memory** %MEMORY
  %loadMem_40b0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 33
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %10742 to i64*
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 7
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %10745 to i64*
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10747 = getelementptr inbounds %struct.GPR, %struct.GPR* %10746, i32 0, i32 9
  %10748 = getelementptr inbounds %struct.Reg, %struct.Reg* %10747, i32 0, i32 0
  %RSI.i115 = bitcast %union.anon* %10748 to i64*
  %10749 = load i64, i64* %RSI.i115
  %10750 = load i64, i64* %RDX.i114
  %10751 = load i64, i64* %PC.i113
  %10752 = add i64 %10751, 3
  store i64 %10752, i64* %PC.i113
  %10753 = add i64 %10750, %10749
  store i64 %10753, i64* %RSI.i115, align 8
  %10754 = icmp ult i64 %10753, %10749
  %10755 = icmp ult i64 %10753, %10750
  %10756 = or i1 %10754, %10755
  %10757 = zext i1 %10756 to i8
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10757, i8* %10758, align 1
  %10759 = trunc i64 %10753 to i32
  %10760 = and i32 %10759, 255
  %10761 = call i32 @llvm.ctpop.i32(i32 %10760)
  %10762 = trunc i32 %10761 to i8
  %10763 = and i8 %10762, 1
  %10764 = xor i8 %10763, 1
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10764, i8* %10765, align 1
  %10766 = xor i64 %10750, %10749
  %10767 = xor i64 %10766, %10753
  %10768 = lshr i64 %10767, 4
  %10769 = trunc i64 %10768 to i8
  %10770 = and i8 %10769, 1
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10770, i8* %10771, align 1
  %10772 = icmp eq i64 %10753, 0
  %10773 = zext i1 %10772 to i8
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10773, i8* %10774, align 1
  %10775 = lshr i64 %10753, 63
  %10776 = trunc i64 %10775 to i8
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10776, i8* %10777, align 1
  %10778 = lshr i64 %10749, 63
  %10779 = lshr i64 %10750, 63
  %10780 = xor i64 %10775, %10778
  %10781 = xor i64 %10775, %10779
  %10782 = add i64 %10780, %10781
  %10783 = icmp eq i64 %10782, 2
  %10784 = zext i1 %10783 to i8
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10784, i8* %10785, align 1
  store %struct.Memory* %loadMem_40b0eb, %struct.Memory** %MEMORY
  %loadMem_40b0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 33
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %10788 to i64*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 7
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RDX.i111 = bitcast %union.anon* %10791 to i64*
  %10792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10793 = getelementptr inbounds %struct.GPR, %struct.GPR* %10792, i32 0, i32 15
  %10794 = getelementptr inbounds %struct.Reg, %struct.Reg* %10793, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %10794 to i64*
  %10795 = load i64, i64* %RBP.i112
  %10796 = sub i64 %10795, 8
  %10797 = load i64, i64* %PC.i110
  %10798 = add i64 %10797, 4
  store i64 %10798, i64* %PC.i110
  %10799 = inttoptr i64 %10796 to i32*
  %10800 = load i32, i32* %10799
  %10801 = sext i32 %10800 to i64
  store i64 %10801, i64* %RDX.i111, align 8
  store %struct.Memory* %loadMem_40b0ee, %struct.Memory** %MEMORY
  %loadMem_40b0f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 33
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %10804 to i64*
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10806 = getelementptr inbounds %struct.GPR, %struct.GPR* %10805, i32 0, i32 7
  %10807 = getelementptr inbounds %struct.Reg, %struct.Reg* %10806, i32 0, i32 0
  %RDX.i109 = bitcast %union.anon* %10807 to i64*
  %10808 = load i64, i64* %RDX.i109
  %10809 = load i64, i64* %PC.i108
  %10810 = add i64 %10809, 7
  store i64 %10810, i64* %PC.i108
  %10811 = sext i64 %10808 to i128
  %10812 = and i128 %10811, -18446744073709551616
  %10813 = zext i64 %10808 to i128
  %10814 = or i128 %10812, %10813
  %10815 = mul i128 744, %10814
  %10816 = trunc i128 %10815 to i64
  store i64 %10816, i64* %RDX.i109, align 8
  %10817 = sext i64 %10816 to i128
  %10818 = icmp ne i128 %10817, %10815
  %10819 = zext i1 %10818 to i8
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10819, i8* %10820, align 1
  %10821 = trunc i128 %10815 to i32
  %10822 = and i32 %10821, 255
  %10823 = call i32 @llvm.ctpop.i32(i32 %10822)
  %10824 = trunc i32 %10823 to i8
  %10825 = and i8 %10824, 1
  %10826 = xor i8 %10825, 1
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10826, i8* %10827, align 1
  %10828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10828, align 1
  %10829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10829, align 1
  %10830 = lshr i64 %10816, 63
  %10831 = trunc i64 %10830 to i8
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10831, i8* %10832, align 1
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10819, i8* %10833, align 1
  store %struct.Memory* %loadMem_40b0f2, %struct.Memory** %MEMORY
  %loadMem_40b0f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10835 = getelementptr inbounds %struct.GPR, %struct.GPR* %10834, i32 0, i32 33
  %10836 = getelementptr inbounds %struct.Reg, %struct.Reg* %10835, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %10836 to i64*
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10838 = getelementptr inbounds %struct.GPR, %struct.GPR* %10837, i32 0, i32 1
  %10839 = getelementptr inbounds %struct.Reg, %struct.Reg* %10838, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %10839 to i64*
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 11
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %RDI.i107 = bitcast %union.anon* %10842 to i64*
  %10843 = load i64, i64* %RAX.i106
  %10844 = load i64, i64* %PC.i105
  %10845 = add i64 %10844, 3
  store i64 %10845, i64* %PC.i105
  store i64 %10843, i64* %RDI.i107, align 8
  store %struct.Memory* %loadMem_40b0f9, %struct.Memory** %MEMORY
  %loadMem_40b0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 33
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %10848 to i64*
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 7
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %RDX.i103 = bitcast %union.anon* %10851 to i64*
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 11
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %RDI.i104 = bitcast %union.anon* %10854 to i64*
  %10855 = load i64, i64* %RDI.i104
  %10856 = load i64, i64* %RDX.i103
  %10857 = load i64, i64* %PC.i102
  %10858 = add i64 %10857, 3
  store i64 %10858, i64* %PC.i102
  %10859 = add i64 %10856, %10855
  store i64 %10859, i64* %RDI.i104, align 8
  %10860 = icmp ult i64 %10859, %10855
  %10861 = icmp ult i64 %10859, %10856
  %10862 = or i1 %10860, %10861
  %10863 = zext i1 %10862 to i8
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10863, i8* %10864, align 1
  %10865 = trunc i64 %10859 to i32
  %10866 = and i32 %10865, 255
  %10867 = call i32 @llvm.ctpop.i32(i32 %10866)
  %10868 = trunc i32 %10867 to i8
  %10869 = and i8 %10868, 1
  %10870 = xor i8 %10869, 1
  %10871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10870, i8* %10871, align 1
  %10872 = xor i64 %10856, %10855
  %10873 = xor i64 %10872, %10859
  %10874 = lshr i64 %10873, 4
  %10875 = trunc i64 %10874 to i8
  %10876 = and i8 %10875, 1
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10876, i8* %10877, align 1
  %10878 = icmp eq i64 %10859, 0
  %10879 = zext i1 %10878 to i8
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10879, i8* %10880, align 1
  %10881 = lshr i64 %10859, 63
  %10882 = trunc i64 %10881 to i8
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10882, i8* %10883, align 1
  %10884 = lshr i64 %10855, 63
  %10885 = lshr i64 %10856, 63
  %10886 = xor i64 %10881, %10884
  %10887 = xor i64 %10881, %10885
  %10888 = add i64 %10886, %10887
  %10889 = icmp eq i64 %10888, 2
  %10890 = zext i1 %10889 to i8
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10890, i8* %10891, align 1
  store %struct.Memory* %loadMem_40b0fc, %struct.Memory** %MEMORY
  %loadMem_40b0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 33
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %10894 to i64*
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 17
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %R8D.i100 = bitcast %union.anon* %10897 to i32*
  %10898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10899 = getelementptr inbounds %struct.GPR, %struct.GPR* %10898, i32 0, i32 11
  %10900 = getelementptr inbounds %struct.Reg, %struct.Reg* %10899, i32 0, i32 0
  %RDI.i101 = bitcast %union.anon* %10900 to i64*
  %10901 = bitcast i32* %R8D.i100 to i64*
  %10902 = load i64, i64* %RDI.i101
  %10903 = add i64 %10902, 96
  %10904 = load i64, i64* %PC.i99
  %10905 = add i64 %10904, 4
  store i64 %10905, i64* %PC.i99
  %10906 = inttoptr i64 %10903 to i32*
  %10907 = load i32, i32* %10906
  %10908 = zext i32 %10907 to i64
  store i64 %10908, i64* %10901, align 8
  store %struct.Memory* %loadMem_40b0ff, %struct.Memory** %MEMORY
  %loadMem_40b103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 33
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %10911 to i64*
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 17
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %R8D.i97 = bitcast %union.anon* %10914 to i32*
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10916 = getelementptr inbounds %struct.GPR, %struct.GPR* %10915, i32 0, i32 19
  %10917 = getelementptr inbounds %struct.Reg, %struct.Reg* %10916, i32 0, i32 0
  %R9D.i98 = bitcast %union.anon* %10917 to i32*
  %10918 = bitcast i32* %R9D.i98 to i64*
  %10919 = load i32, i32* %R8D.i97
  %10920 = zext i32 %10919 to i64
  %10921 = load i64, i64* %PC.i96
  %10922 = add i64 %10921, 3
  store i64 %10922, i64* %PC.i96
  %10923 = and i64 %10920, 4294967295
  store i64 %10923, i64* %10918, align 8
  store %struct.Memory* %loadMem_40b103, %struct.Memory** %MEMORY
  %loadMem_40b106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 33
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %10926 to i64*
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 19
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %R9D.i95 = bitcast %union.anon* %10929 to i32*
  %10930 = bitcast i32* %R9D.i95 to i64*
  %10931 = load i32, i32* %R9D.i95
  %10932 = zext i32 %10931 to i64
  %10933 = load i64, i64* %PC.i94
  %10934 = add i64 %10933, 4
  store i64 %10934, i64* %PC.i94
  %10935 = add i32 1, %10931
  %10936 = zext i32 %10935 to i64
  store i64 %10936, i64* %10930, align 8
  %10937 = icmp ult i32 %10935, %10931
  %10938 = icmp ult i32 %10935, 1
  %10939 = or i1 %10937, %10938
  %10940 = zext i1 %10939 to i8
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10940, i8* %10941, align 1
  %10942 = and i32 %10935, 255
  %10943 = call i32 @llvm.ctpop.i32(i32 %10942)
  %10944 = trunc i32 %10943 to i8
  %10945 = and i8 %10944, 1
  %10946 = xor i8 %10945, 1
  %10947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10946, i8* %10947, align 1
  %10948 = xor i64 1, %10932
  %10949 = trunc i64 %10948 to i32
  %10950 = xor i32 %10949, %10935
  %10951 = lshr i32 %10950, 4
  %10952 = trunc i32 %10951 to i8
  %10953 = and i8 %10952, 1
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10953, i8* %10954, align 1
  %10955 = icmp eq i32 %10935, 0
  %10956 = zext i1 %10955 to i8
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10956, i8* %10957, align 1
  %10958 = lshr i32 %10935, 31
  %10959 = trunc i32 %10958 to i8
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10959, i8* %10960, align 1
  %10961 = lshr i32 %10931, 31
  %10962 = xor i32 %10958, %10961
  %10963 = add i32 %10962, %10958
  %10964 = icmp eq i32 %10963, 2
  %10965 = zext i1 %10964 to i8
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10965, i8* %10966, align 1
  store %struct.Memory* %loadMem_40b106, %struct.Memory** %MEMORY
  %loadMem_40b10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10968 = getelementptr inbounds %struct.GPR, %struct.GPR* %10967, i32 0, i32 33
  %10969 = getelementptr inbounds %struct.Reg, %struct.Reg* %10968, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %10969 to i64*
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 19
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %R9D.i93 = bitcast %union.anon* %10972 to i32*
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 11
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %10975 to i64*
  %10976 = load i64, i64* %RDI.i
  %10977 = add i64 %10976, 96
  %10978 = load i32, i32* %R9D.i93
  %10979 = zext i32 %10978 to i64
  %10980 = load i64, i64* %PC.i92
  %10981 = add i64 %10980, 4
  store i64 %10981, i64* %PC.i92
  %10982 = inttoptr i64 %10977 to i32*
  store i32 %10978, i32* %10982
  store %struct.Memory* %loadMem_40b10a, %struct.Memory** %MEMORY
  %loadMem_40b10e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10984 = getelementptr inbounds %struct.GPR, %struct.GPR* %10983, i32 0, i32 33
  %10985 = getelementptr inbounds %struct.Reg, %struct.Reg* %10984, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %10985 to i64*
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 17
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %R8D.i90 = bitcast %union.anon* %10988 to i32*
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 7
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %RDX.i91 = bitcast %union.anon* %10991 to i64*
  %10992 = load i32, i32* %R8D.i90
  %10993 = zext i32 %10992 to i64
  %10994 = load i64, i64* %PC.i89
  %10995 = add i64 %10994, 3
  store i64 %10995, i64* %PC.i89
  %10996 = shl i64 %10993, 32
  %10997 = ashr exact i64 %10996, 32
  store i64 %10997, i64* %RDX.i91, align 8
  store %struct.Memory* %loadMem_40b10e, %struct.Memory** %MEMORY
  %loadMem_40b111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 33
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %11000 to i64*
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11002 = getelementptr inbounds %struct.GPR, %struct.GPR* %11001, i32 0, i32 5
  %11003 = getelementptr inbounds %struct.Reg, %struct.Reg* %11002, i32 0, i32 0
  %ECX.i86 = bitcast %union.anon* %11003 to i32*
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 7
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %RDX.i87 = bitcast %union.anon* %11006 to i64*
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11008 = getelementptr inbounds %struct.GPR, %struct.GPR* %11007, i32 0, i32 9
  %11009 = getelementptr inbounds %struct.Reg, %struct.Reg* %11008, i32 0, i32 0
  %RSI.i88 = bitcast %union.anon* %11009 to i64*
  %11010 = load i64, i64* %RSI.i88
  %11011 = load i64, i64* %RDX.i87
  %11012 = mul i64 %11011, 4
  %11013 = add i64 %11010, 100
  %11014 = add i64 %11013, %11012
  %11015 = load i32, i32* %ECX.i86
  %11016 = zext i32 %11015 to i64
  %11017 = load i64, i64* %PC.i85
  %11018 = add i64 %11017, 4
  store i64 %11018, i64* %PC.i85
  %11019 = inttoptr i64 %11014 to i32*
  store i32 %11015, i32* %11019
  store %struct.Memory* %loadMem_40b111, %struct.Memory** %MEMORY
  %loadMem_40b115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 33
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %11022 to i64*
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 7
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %11025 to i64*
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 15
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %11028 to i64*
  %11029 = load i64, i64* %RBP.i84
  %11030 = sub i64 %11029, 32
  %11031 = load i64, i64* %PC.i82
  %11032 = add i64 %11031, 4
  store i64 %11032, i64* %PC.i82
  %11033 = inttoptr i64 %11030 to i32*
  %11034 = load i32, i32* %11033
  %11035 = sext i32 %11034 to i64
  store i64 %11035, i64* %RDX.i83, align 8
  store %struct.Memory* %loadMem_40b115, %struct.Memory** %MEMORY
  %loadMem_40b119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11037 = getelementptr inbounds %struct.GPR, %struct.GPR* %11036, i32 0, i32 33
  %11038 = getelementptr inbounds %struct.Reg, %struct.Reg* %11037, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %11038 to i64*
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11040 = getelementptr inbounds %struct.GPR, %struct.GPR* %11039, i32 0, i32 7
  %11041 = getelementptr inbounds %struct.Reg, %struct.Reg* %11040, i32 0, i32 0
  %RDX.i81 = bitcast %union.anon* %11041 to i64*
  %11042 = load i64, i64* %RDX.i81
  %11043 = load i64, i64* %PC.i80
  %11044 = add i64 %11043, 7
  store i64 %11044, i64* %PC.i80
  %11045 = sext i64 %11042 to i128
  %11046 = and i128 %11045, -18446744073709551616
  %11047 = zext i64 %11042 to i128
  %11048 = or i128 %11046, %11047
  %11049 = mul i128 744, %11048
  %11050 = trunc i128 %11049 to i64
  store i64 %11050, i64* %RDX.i81, align 8
  %11051 = sext i64 %11050 to i128
  %11052 = icmp ne i128 %11051, %11049
  %11053 = zext i1 %11052 to i8
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11053, i8* %11054, align 1
  %11055 = trunc i128 %11049 to i32
  %11056 = and i32 %11055, 255
  %11057 = call i32 @llvm.ctpop.i32(i32 %11056)
  %11058 = trunc i32 %11057 to i8
  %11059 = and i8 %11058, 1
  %11060 = xor i8 %11059, 1
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11060, i8* %11061, align 1
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11062, align 1
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11063, align 1
  %11064 = lshr i64 %11050, 63
  %11065 = trunc i64 %11064 to i8
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11065, i8* %11066, align 1
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11053, i8* %11067, align 1
  store %struct.Memory* %loadMem_40b119, %struct.Memory** %MEMORY
  %loadMem_40b120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 33
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %11070 to i64*
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11072 = getelementptr inbounds %struct.GPR, %struct.GPR* %11071, i32 0, i32 1
  %11073 = getelementptr inbounds %struct.Reg, %struct.Reg* %11072, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %11073 to i64*
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 9
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %RSI.i79 = bitcast %union.anon* %11076 to i64*
  %11077 = load i64, i64* %RAX.i78
  %11078 = load i64, i64* %PC.i77
  %11079 = add i64 %11078, 3
  store i64 %11079, i64* %PC.i77
  store i64 %11077, i64* %RSI.i79, align 8
  store %struct.Memory* %loadMem_40b120, %struct.Memory** %MEMORY
  %loadMem_40b123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11081 = getelementptr inbounds %struct.GPR, %struct.GPR* %11080, i32 0, i32 33
  %11082 = getelementptr inbounds %struct.Reg, %struct.Reg* %11081, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %11082 to i64*
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 7
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %RDX.i75 = bitcast %union.anon* %11085 to i64*
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11087 = getelementptr inbounds %struct.GPR, %struct.GPR* %11086, i32 0, i32 9
  %11088 = getelementptr inbounds %struct.Reg, %struct.Reg* %11087, i32 0, i32 0
  %RSI.i76 = bitcast %union.anon* %11088 to i64*
  %11089 = load i64, i64* %RSI.i76
  %11090 = load i64, i64* %RDX.i75
  %11091 = load i64, i64* %PC.i74
  %11092 = add i64 %11091, 3
  store i64 %11092, i64* %PC.i74
  %11093 = add i64 %11090, %11089
  store i64 %11093, i64* %RSI.i76, align 8
  %11094 = icmp ult i64 %11093, %11089
  %11095 = icmp ult i64 %11093, %11090
  %11096 = or i1 %11094, %11095
  %11097 = zext i1 %11096 to i8
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11097, i8* %11098, align 1
  %11099 = trunc i64 %11093 to i32
  %11100 = and i32 %11099, 255
  %11101 = call i32 @llvm.ctpop.i32(i32 %11100)
  %11102 = trunc i32 %11101 to i8
  %11103 = and i8 %11102, 1
  %11104 = xor i8 %11103, 1
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11104, i8* %11105, align 1
  %11106 = xor i64 %11090, %11089
  %11107 = xor i64 %11106, %11093
  %11108 = lshr i64 %11107, 4
  %11109 = trunc i64 %11108 to i8
  %11110 = and i8 %11109, 1
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11110, i8* %11111, align 1
  %11112 = icmp eq i64 %11093, 0
  %11113 = zext i1 %11112 to i8
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11113, i8* %11114, align 1
  %11115 = lshr i64 %11093, 63
  %11116 = trunc i64 %11115 to i8
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11116, i8* %11117, align 1
  %11118 = lshr i64 %11089, 63
  %11119 = lshr i64 %11090, 63
  %11120 = xor i64 %11115, %11118
  %11121 = xor i64 %11115, %11119
  %11122 = add i64 %11120, %11121
  %11123 = icmp eq i64 %11122, 2
  %11124 = zext i1 %11123 to i8
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11124, i8* %11125, align 1
  store %struct.Memory* %loadMem_40b123, %struct.Memory** %MEMORY
  %loadMem_40b126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11127 = getelementptr inbounds %struct.GPR, %struct.GPR* %11126, i32 0, i32 33
  %11128 = getelementptr inbounds %struct.Reg, %struct.Reg* %11127, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %11128 to i64*
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11130 = getelementptr inbounds %struct.GPR, %struct.GPR* %11129, i32 0, i32 9
  %11131 = getelementptr inbounds %struct.Reg, %struct.Reg* %11130, i32 0, i32 0
  %RSI.i73 = bitcast %union.anon* %11131 to i64*
  %11132 = load i64, i64* %RSI.i73
  %11133 = load i64, i64* %PC.i72
  %11134 = add i64 %11133, 4
  store i64 %11134, i64* %PC.i72
  %11135 = add i64 96, %11132
  store i64 %11135, i64* %RSI.i73, align 8
  %11136 = icmp ult i64 %11135, %11132
  %11137 = icmp ult i64 %11135, 96
  %11138 = or i1 %11136, %11137
  %11139 = zext i1 %11138 to i8
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11139, i8* %11140, align 1
  %11141 = trunc i64 %11135 to i32
  %11142 = and i32 %11141, 255
  %11143 = call i32 @llvm.ctpop.i32(i32 %11142)
  %11144 = trunc i32 %11143 to i8
  %11145 = and i8 %11144, 1
  %11146 = xor i8 %11145, 1
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11146, i8* %11147, align 1
  %11148 = xor i64 96, %11132
  %11149 = xor i64 %11148, %11135
  %11150 = lshr i64 %11149, 4
  %11151 = trunc i64 %11150 to i8
  %11152 = and i8 %11151, 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11152, i8* %11153, align 1
  %11154 = icmp eq i64 %11135, 0
  %11155 = zext i1 %11154 to i8
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11155, i8* %11156, align 1
  %11157 = lshr i64 %11135, 63
  %11158 = trunc i64 %11157 to i8
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11158, i8* %11159, align 1
  %11160 = lshr i64 %11132, 63
  %11161 = xor i64 %11157, %11160
  %11162 = add i64 %11161, %11157
  %11163 = icmp eq i64 %11162, 2
  %11164 = zext i1 %11163 to i8
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11164, i8* %11165, align 1
  store %struct.Memory* %loadMem_40b126, %struct.Memory** %MEMORY
  %loadMem_40b12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11167 = getelementptr inbounds %struct.GPR, %struct.GPR* %11166, i32 0, i32 33
  %11168 = getelementptr inbounds %struct.Reg, %struct.Reg* %11167, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %11168 to i64*
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11170 = getelementptr inbounds %struct.GPR, %struct.GPR* %11169, i32 0, i32 7
  %11171 = getelementptr inbounds %struct.Reg, %struct.Reg* %11170, i32 0, i32 0
  %RDX.i71 = bitcast %union.anon* %11171 to i64*
  %11172 = load i64, i64* %PC.i70
  %11173 = add i64 %11172, 8
  store i64 %11173, i64* %PC.i70
  %11174 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11174, i64* %RDX.i71, align 8
  store %struct.Memory* %loadMem_40b12a, %struct.Memory** %MEMORY
  %loadMem_40b132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11176 = getelementptr inbounds %struct.GPR, %struct.GPR* %11175, i32 0, i32 33
  %11177 = getelementptr inbounds %struct.Reg, %struct.Reg* %11176, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %11177 to i64*
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 7
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %11180 to i64*
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 9
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %RSI.i69 = bitcast %union.anon* %11183 to i64*
  %11184 = load i64, i64* %RDX.i68
  %11185 = load i64, i64* %RSI.i69
  %11186 = load i64, i64* %PC.i67
  %11187 = add i64 %11186, 3
  store i64 %11187, i64* %PC.i67
  %11188 = inttoptr i64 %11184 to i64*
  store i64 %11185, i64* %11188
  store %struct.Memory* %loadMem_40b132, %struct.Memory** %MEMORY
  %loadMem_40b135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 33
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %11191 to i64*
  %11192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11193 = getelementptr inbounds %struct.GPR, %struct.GPR* %11192, i32 0, i32 7
  %11194 = getelementptr inbounds %struct.Reg, %struct.Reg* %11193, i32 0, i32 0
  %RDX.i65 = bitcast %union.anon* %11194 to i64*
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11196 = getelementptr inbounds %struct.GPR, %struct.GPR* %11195, i32 0, i32 15
  %11197 = getelementptr inbounds %struct.Reg, %struct.Reg* %11196, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %11197 to i64*
  %11198 = load i64, i64* %RBP.i66
  %11199 = sub i64 %11198, 32
  %11200 = load i64, i64* %PC.i64
  %11201 = add i64 %11200, 4
  store i64 %11201, i64* %PC.i64
  %11202 = inttoptr i64 %11199 to i32*
  %11203 = load i32, i32* %11202
  %11204 = sext i32 %11203 to i64
  store i64 %11204, i64* %RDX.i65, align 8
  store %struct.Memory* %loadMem_40b135, %struct.Memory** %MEMORY
  %loadMem_40b139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11206 = getelementptr inbounds %struct.GPR, %struct.GPR* %11205, i32 0, i32 33
  %11207 = getelementptr inbounds %struct.Reg, %struct.Reg* %11206, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %11207 to i64*
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11209 = getelementptr inbounds %struct.GPR, %struct.GPR* %11208, i32 0, i32 7
  %11210 = getelementptr inbounds %struct.Reg, %struct.Reg* %11209, i32 0, i32 0
  %RDX.i63 = bitcast %union.anon* %11210 to i64*
  %11211 = load i64, i64* %RDX.i63
  %11212 = load i64, i64* %PC.i62
  %11213 = add i64 %11212, 7
  store i64 %11213, i64* %PC.i62
  %11214 = sext i64 %11211 to i128
  %11215 = and i128 %11214, -18446744073709551616
  %11216 = zext i64 %11211 to i128
  %11217 = or i128 %11215, %11216
  %11218 = mul i128 744, %11217
  %11219 = trunc i128 %11218 to i64
  store i64 %11219, i64* %RDX.i63, align 8
  %11220 = sext i64 %11219 to i128
  %11221 = icmp ne i128 %11220, %11218
  %11222 = zext i1 %11221 to i8
  %11223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11222, i8* %11223, align 1
  %11224 = trunc i128 %11218 to i32
  %11225 = and i32 %11224, 255
  %11226 = call i32 @llvm.ctpop.i32(i32 %11225)
  %11227 = trunc i32 %11226 to i8
  %11228 = and i8 %11227, 1
  %11229 = xor i8 %11228, 1
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11229, i8* %11230, align 1
  %11231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11231, align 1
  %11232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11232, align 1
  %11233 = lshr i64 %11219, 63
  %11234 = trunc i64 %11233 to i8
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11234, i8* %11235, align 1
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11222, i8* %11236, align 1
  store %struct.Memory* %loadMem_40b139, %struct.Memory** %MEMORY
  %loadMem_40b140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 33
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %11239 to i64*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 1
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %11242 to i64*
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11244 = getelementptr inbounds %struct.GPR, %struct.GPR* %11243, i32 0, i32 9
  %11245 = getelementptr inbounds %struct.Reg, %struct.Reg* %11244, i32 0, i32 0
  %RSI.i61 = bitcast %union.anon* %11245 to i64*
  %11246 = load i64, i64* %RAX.i60
  %11247 = load i64, i64* %PC.i59
  %11248 = add i64 %11247, 3
  store i64 %11248, i64* %PC.i59
  store i64 %11246, i64* %RSI.i61, align 8
  store %struct.Memory* %loadMem_40b140, %struct.Memory** %MEMORY
  %loadMem_40b143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11250 = getelementptr inbounds %struct.GPR, %struct.GPR* %11249, i32 0, i32 33
  %11251 = getelementptr inbounds %struct.Reg, %struct.Reg* %11250, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %11251 to i64*
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 7
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %RDX.i57 = bitcast %union.anon* %11254 to i64*
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11256 = getelementptr inbounds %struct.GPR, %struct.GPR* %11255, i32 0, i32 9
  %11257 = getelementptr inbounds %struct.Reg, %struct.Reg* %11256, i32 0, i32 0
  %RSI.i58 = bitcast %union.anon* %11257 to i64*
  %11258 = load i64, i64* %RSI.i58
  %11259 = load i64, i64* %RDX.i57
  %11260 = load i64, i64* %PC.i56
  %11261 = add i64 %11260, 3
  store i64 %11261, i64* %PC.i56
  %11262 = add i64 %11259, %11258
  store i64 %11262, i64* %RSI.i58, align 8
  %11263 = icmp ult i64 %11262, %11258
  %11264 = icmp ult i64 %11262, %11259
  %11265 = or i1 %11263, %11264
  %11266 = zext i1 %11265 to i8
  %11267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11266, i8* %11267, align 1
  %11268 = trunc i64 %11262 to i32
  %11269 = and i32 %11268, 255
  %11270 = call i32 @llvm.ctpop.i32(i32 %11269)
  %11271 = trunc i32 %11270 to i8
  %11272 = and i8 %11271, 1
  %11273 = xor i8 %11272, 1
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11273, i8* %11274, align 1
  %11275 = xor i64 %11259, %11258
  %11276 = xor i64 %11275, %11262
  %11277 = lshr i64 %11276, 4
  %11278 = trunc i64 %11277 to i8
  %11279 = and i8 %11278, 1
  %11280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11279, i8* %11280, align 1
  %11281 = icmp eq i64 %11262, 0
  %11282 = zext i1 %11281 to i8
  %11283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11282, i8* %11283, align 1
  %11284 = lshr i64 %11262, 63
  %11285 = trunc i64 %11284 to i8
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11285, i8* %11286, align 1
  %11287 = lshr i64 %11258, 63
  %11288 = lshr i64 %11259, 63
  %11289 = xor i64 %11284, %11287
  %11290 = xor i64 %11284, %11288
  %11291 = add i64 %11289, %11290
  %11292 = icmp eq i64 %11291, 2
  %11293 = zext i1 %11292 to i8
  %11294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11293, i8* %11294, align 1
  store %struct.Memory* %loadMem_40b143, %struct.Memory** %MEMORY
  %loadMem_40b146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 33
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 5
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %11300 to i64*
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11302 = getelementptr inbounds %struct.GPR, %struct.GPR* %11301, i32 0, i32 9
  %11303 = getelementptr inbounds %struct.Reg, %struct.Reg* %11302, i32 0, i32 0
  %RSI.i55 = bitcast %union.anon* %11303 to i64*
  %11304 = load i64, i64* %RSI.i55
  %11305 = add i64 %11304, 96
  %11306 = load i64, i64* %PC.i53
  %11307 = add i64 %11306, 3
  store i64 %11307, i64* %PC.i53
  %11308 = inttoptr i64 %11305 to i32*
  %11309 = load i32, i32* %11308
  %11310 = zext i32 %11309 to i64
  store i64 %11310, i64* %RCX.i54, align 8
  store %struct.Memory* %loadMem_40b146, %struct.Memory** %MEMORY
  %loadMem_40b149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11312 = getelementptr inbounds %struct.GPR, %struct.GPR* %11311, i32 0, i32 33
  %11313 = getelementptr inbounds %struct.Reg, %struct.Reg* %11312, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %11313 to i64*
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 7
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %RDX.i52 = bitcast %union.anon* %11316 to i64*
  %11317 = load i64, i64* %PC.i51
  %11318 = add i64 %11317, 8
  store i64 %11318, i64* %PC.i51
  %11319 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11319, i64* %RDX.i52, align 8
  store %struct.Memory* %loadMem_40b149, %struct.Memory** %MEMORY
  %loadMem_40b151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 33
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %11322 to i64*
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11324 = getelementptr inbounds %struct.GPR, %struct.GPR* %11323, i32 0, i32 7
  %11325 = getelementptr inbounds %struct.Reg, %struct.Reg* %11324, i32 0, i32 0
  %RDX.i49 = bitcast %union.anon* %11325 to i64*
  %11326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11327 = getelementptr inbounds %struct.GPR, %struct.GPR* %11326, i32 0, i32 9
  %11328 = getelementptr inbounds %struct.Reg, %struct.Reg* %11327, i32 0, i32 0
  %RSI.i50 = bitcast %union.anon* %11328 to i64*
  %11329 = load i64, i64* %RDX.i49
  %11330 = load i64, i64* %PC.i48
  %11331 = add i64 %11330, 3
  store i64 %11331, i64* %PC.i48
  store i64 %11329, i64* %RSI.i50, align 8
  store %struct.Memory* %loadMem_40b151, %struct.Memory** %MEMORY
  %loadMem_40b154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 33
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11334 to i64*
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 9
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %RSI.i47 = bitcast %union.anon* %11337 to i64*
  %11338 = load i64, i64* %RSI.i47
  %11339 = load i64, i64* %PC.i46
  %11340 = add i64 %11339, 4
  store i64 %11340, i64* %PC.i46
  %11341 = add i64 16, %11338
  store i64 %11341, i64* %RSI.i47, align 8
  %11342 = icmp ult i64 %11341, %11338
  %11343 = icmp ult i64 %11341, 16
  %11344 = or i1 %11342, %11343
  %11345 = zext i1 %11344 to i8
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11345, i8* %11346, align 1
  %11347 = trunc i64 %11341 to i32
  %11348 = and i32 %11347, 255
  %11349 = call i32 @llvm.ctpop.i32(i32 %11348)
  %11350 = trunc i32 %11349 to i8
  %11351 = and i8 %11350, 1
  %11352 = xor i8 %11351, 1
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11352, i8* %11353, align 1
  %11354 = xor i64 16, %11338
  %11355 = xor i64 %11354, %11341
  %11356 = lshr i64 %11355, 4
  %11357 = trunc i64 %11356 to i8
  %11358 = and i8 %11357, 1
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11358, i8* %11359, align 1
  %11360 = icmp eq i64 %11341, 0
  %11361 = zext i1 %11360 to i8
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11361, i8* %11362, align 1
  %11363 = lshr i64 %11341, 63
  %11364 = trunc i64 %11363 to i8
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11364, i8* %11365, align 1
  %11366 = lshr i64 %11338, 63
  %11367 = xor i64 %11363, %11366
  %11368 = add i64 %11367, %11363
  %11369 = icmp eq i64 %11368, 2
  %11370 = zext i1 %11369 to i8
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11370, i8* %11371, align 1
  store %struct.Memory* %loadMem_40b154, %struct.Memory** %MEMORY
  %loadMem_40b158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11373 = getelementptr inbounds %struct.GPR, %struct.GPR* %11372, i32 0, i32 33
  %11374 = getelementptr inbounds %struct.Reg, %struct.Reg* %11373, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %11374 to i64*
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11376 = getelementptr inbounds %struct.GPR, %struct.GPR* %11375, i32 0, i32 9
  %11377 = getelementptr inbounds %struct.Reg, %struct.Reg* %11376, i32 0, i32 0
  %RSI.i45 = bitcast %union.anon* %11377 to i64*
  %11378 = load i64, i64* %RSI.i45
  %11379 = load i64, i64* %PC.i44
  %11380 = add i64 %11379, 8
  store i64 %11380, i64* %PC.i44
  store i64 %11378, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40b158, %struct.Memory** %MEMORY
  %loadMem_40b160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11382 = getelementptr inbounds %struct.GPR, %struct.GPR* %11381, i32 0, i32 33
  %11383 = getelementptr inbounds %struct.Reg, %struct.Reg* %11382, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %11383 to i64*
  %11384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11385 = getelementptr inbounds %struct.GPR, %struct.GPR* %11384, i32 0, i32 5
  %11386 = getelementptr inbounds %struct.Reg, %struct.Reg* %11385, i32 0, i32 0
  %ECX.i42 = bitcast %union.anon* %11386 to i32*
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11388 = getelementptr inbounds %struct.GPR, %struct.GPR* %11387, i32 0, i32 7
  %11389 = getelementptr inbounds %struct.Reg, %struct.Reg* %11388, i32 0, i32 0
  %RDX.i43 = bitcast %union.anon* %11389 to i64*
  %11390 = load i64, i64* %RDX.i43
  %11391 = add i64 %11390, 8
  %11392 = load i32, i32* %ECX.i42
  %11393 = zext i32 %11392 to i64
  %11394 = load i64, i64* %PC.i41
  %11395 = add i64 %11394, 3
  store i64 %11395, i64* %PC.i41
  %11396 = inttoptr i64 %11391 to i32*
  store i32 %11392, i32* %11396
  store %struct.Memory* %loadMem_40b160, %struct.Memory** %MEMORY
  %loadMem_40b163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11398 = getelementptr inbounds %struct.GPR, %struct.GPR* %11397, i32 0, i32 33
  %11399 = getelementptr inbounds %struct.Reg, %struct.Reg* %11398, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %11399 to i64*
  %11400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11401 = getelementptr inbounds %struct.GPR, %struct.GPR* %11400, i32 0, i32 7
  %11402 = getelementptr inbounds %struct.Reg, %struct.Reg* %11401, i32 0, i32 0
  %RDX.i39 = bitcast %union.anon* %11402 to i64*
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11404 = getelementptr inbounds %struct.GPR, %struct.GPR* %11403, i32 0, i32 15
  %11405 = getelementptr inbounds %struct.Reg, %struct.Reg* %11404, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %11405 to i64*
  %11406 = load i64, i64* %RBP.i40
  %11407 = sub i64 %11406, 4
  %11408 = load i64, i64* %PC.i38
  %11409 = add i64 %11408, 4
  store i64 %11409, i64* %PC.i38
  %11410 = inttoptr i64 %11407 to i32*
  %11411 = load i32, i32* %11410
  %11412 = sext i32 %11411 to i64
  store i64 %11412, i64* %RDX.i39, align 8
  store %struct.Memory* %loadMem_40b163, %struct.Memory** %MEMORY
  %loadMem_40b167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11414 = getelementptr inbounds %struct.GPR, %struct.GPR* %11413, i32 0, i32 33
  %11415 = getelementptr inbounds %struct.Reg, %struct.Reg* %11414, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %11415 to i64*
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11417 = getelementptr inbounds %struct.GPR, %struct.GPR* %11416, i32 0, i32 5
  %11418 = getelementptr inbounds %struct.Reg, %struct.Reg* %11417, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11418 to i64*
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11420 = getelementptr inbounds %struct.GPR, %struct.GPR* %11419, i32 0, i32 7
  %11421 = getelementptr inbounds %struct.Reg, %struct.Reg* %11420, i32 0, i32 0
  %RDX.i37 = bitcast %union.anon* %11421 to i64*
  %11422 = load i64, i64* %RDX.i37
  %11423 = mul i64 %11422, 4
  %11424 = add i64 %11423, 11187184
  %11425 = load i64, i64* %PC.i36
  %11426 = add i64 %11425, 7
  store i64 %11426, i64* %PC.i36
  %11427 = inttoptr i64 %11424 to i32*
  %11428 = load i32, i32* %11427
  %11429 = zext i32 %11428 to i64
  store i64 %11429, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_40b167, %struct.Memory** %MEMORY
  %loadMem_40b16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11431 = getelementptr inbounds %struct.GPR, %struct.GPR* %11430, i32 0, i32 33
  %11432 = getelementptr inbounds %struct.Reg, %struct.Reg* %11431, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11432 to i64*
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11434 = getelementptr inbounds %struct.GPR, %struct.GPR* %11433, i32 0, i32 7
  %11435 = getelementptr inbounds %struct.Reg, %struct.Reg* %11434, i32 0, i32 0
  %RDX.i34 = bitcast %union.anon* %11435 to i64*
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 15
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %11438 to i64*
  %11439 = load i64, i64* %RBP.i35
  %11440 = sub i64 %11439, 32
  %11441 = load i64, i64* %PC.i33
  %11442 = add i64 %11441, 4
  store i64 %11442, i64* %PC.i33
  %11443 = inttoptr i64 %11440 to i32*
  %11444 = load i32, i32* %11443
  %11445 = sext i32 %11444 to i64
  store i64 %11445, i64* %RDX.i34, align 8
  store %struct.Memory* %loadMem_40b16e, %struct.Memory** %MEMORY
  %loadMem_40b172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11447 = getelementptr inbounds %struct.GPR, %struct.GPR* %11446, i32 0, i32 33
  %11448 = getelementptr inbounds %struct.Reg, %struct.Reg* %11447, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %11448 to i64*
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11450 = getelementptr inbounds %struct.GPR, %struct.GPR* %11449, i32 0, i32 7
  %11451 = getelementptr inbounds %struct.Reg, %struct.Reg* %11450, i32 0, i32 0
  %RDX.i32 = bitcast %union.anon* %11451 to i64*
  %11452 = load i64, i64* %RDX.i32
  %11453 = load i64, i64* %PC.i31
  %11454 = add i64 %11453, 7
  store i64 %11454, i64* %PC.i31
  %11455 = sext i64 %11452 to i128
  %11456 = and i128 %11455, -18446744073709551616
  %11457 = zext i64 %11452 to i128
  %11458 = or i128 %11456, %11457
  %11459 = mul i128 744, %11458
  %11460 = trunc i128 %11459 to i64
  store i64 %11460, i64* %RDX.i32, align 8
  %11461 = sext i64 %11460 to i128
  %11462 = icmp ne i128 %11461, %11459
  %11463 = zext i1 %11462 to i8
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11463, i8* %11464, align 1
  %11465 = trunc i128 %11459 to i32
  %11466 = and i32 %11465, 255
  %11467 = call i32 @llvm.ctpop.i32(i32 %11466)
  %11468 = trunc i32 %11467 to i8
  %11469 = and i8 %11468, 1
  %11470 = xor i8 %11469, 1
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11470, i8* %11471, align 1
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11472, align 1
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11473, align 1
  %11474 = lshr i64 %11460, 63
  %11475 = trunc i64 %11474 to i8
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11475, i8* %11476, align 1
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11463, i8* %11477, align 1
  store %struct.Memory* %loadMem_40b172, %struct.Memory** %MEMORY
  %loadMem_40b179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11479 = getelementptr inbounds %struct.GPR, %struct.GPR* %11478, i32 0, i32 33
  %11480 = getelementptr inbounds %struct.Reg, %struct.Reg* %11479, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %11480 to i64*
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11482 = getelementptr inbounds %struct.GPR, %struct.GPR* %11481, i32 0, i32 1
  %11483 = getelementptr inbounds %struct.Reg, %struct.Reg* %11482, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %11483 to i64*
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11485 = getelementptr inbounds %struct.GPR, %struct.GPR* %11484, i32 0, i32 9
  %11486 = getelementptr inbounds %struct.Reg, %struct.Reg* %11485, i32 0, i32 0
  %RSI.i30 = bitcast %union.anon* %11486 to i64*
  %11487 = load i64, i64* %RAX.i29
  %11488 = load i64, i64* %PC.i28
  %11489 = add i64 %11488, 3
  store i64 %11489, i64* %PC.i28
  store i64 %11487, i64* %RSI.i30, align 8
  store %struct.Memory* %loadMem_40b179, %struct.Memory** %MEMORY
  %loadMem_40b17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11491 = getelementptr inbounds %struct.GPR, %struct.GPR* %11490, i32 0, i32 33
  %11492 = getelementptr inbounds %struct.Reg, %struct.Reg* %11491, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %11492 to i64*
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11494 = getelementptr inbounds %struct.GPR, %struct.GPR* %11493, i32 0, i32 7
  %11495 = getelementptr inbounds %struct.Reg, %struct.Reg* %11494, i32 0, i32 0
  %RDX.i26 = bitcast %union.anon* %11495 to i64*
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11497 = getelementptr inbounds %struct.GPR, %struct.GPR* %11496, i32 0, i32 9
  %11498 = getelementptr inbounds %struct.Reg, %struct.Reg* %11497, i32 0, i32 0
  %RSI.i27 = bitcast %union.anon* %11498 to i64*
  %11499 = load i64, i64* %RSI.i27
  %11500 = load i64, i64* %RDX.i26
  %11501 = load i64, i64* %PC.i25
  %11502 = add i64 %11501, 3
  store i64 %11502, i64* %PC.i25
  %11503 = add i64 %11500, %11499
  store i64 %11503, i64* %RSI.i27, align 8
  %11504 = icmp ult i64 %11503, %11499
  %11505 = icmp ult i64 %11503, %11500
  %11506 = or i1 %11504, %11505
  %11507 = zext i1 %11506 to i8
  %11508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11507, i8* %11508, align 1
  %11509 = trunc i64 %11503 to i32
  %11510 = and i32 %11509, 255
  %11511 = call i32 @llvm.ctpop.i32(i32 %11510)
  %11512 = trunc i32 %11511 to i8
  %11513 = and i8 %11512, 1
  %11514 = xor i8 %11513, 1
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11514, i8* %11515, align 1
  %11516 = xor i64 %11500, %11499
  %11517 = xor i64 %11516, %11503
  %11518 = lshr i64 %11517, 4
  %11519 = trunc i64 %11518 to i8
  %11520 = and i8 %11519, 1
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11520, i8* %11521, align 1
  %11522 = icmp eq i64 %11503, 0
  %11523 = zext i1 %11522 to i8
  %11524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11523, i8* %11524, align 1
  %11525 = lshr i64 %11503, 63
  %11526 = trunc i64 %11525 to i8
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11526, i8* %11527, align 1
  %11528 = lshr i64 %11499, 63
  %11529 = lshr i64 %11500, 63
  %11530 = xor i64 %11525, %11528
  %11531 = xor i64 %11525, %11529
  %11532 = add i64 %11530, %11531
  %11533 = icmp eq i64 %11532, 2
  %11534 = zext i1 %11533 to i8
  %11535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11534, i8* %11535, align 1
  store %struct.Memory* %loadMem_40b17c, %struct.Memory** %MEMORY
  %loadMem_40b17f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11537 = getelementptr inbounds %struct.GPR, %struct.GPR* %11536, i32 0, i32 33
  %11538 = getelementptr inbounds %struct.Reg, %struct.Reg* %11537, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11538 to i64*
  %11539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11540 = getelementptr inbounds %struct.GPR, %struct.GPR* %11539, i32 0, i32 7
  %11541 = getelementptr inbounds %struct.Reg, %struct.Reg* %11540, i32 0, i32 0
  %RDX.i23 = bitcast %union.anon* %11541 to i64*
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11543 = getelementptr inbounds %struct.GPR, %struct.GPR* %11542, i32 0, i32 15
  %11544 = getelementptr inbounds %struct.Reg, %struct.Reg* %11543, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %11544 to i64*
  %11545 = load i64, i64* %RBP.i24
  %11546 = sub i64 %11545, 32
  %11547 = load i64, i64* %PC.i22
  %11548 = add i64 %11547, 4
  store i64 %11548, i64* %PC.i22
  %11549 = inttoptr i64 %11546 to i32*
  %11550 = load i32, i32* %11549
  %11551 = sext i32 %11550 to i64
  store i64 %11551, i64* %RDX.i23, align 8
  store %struct.Memory* %loadMem_40b17f, %struct.Memory** %MEMORY
  %loadMem_40b183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11553 = getelementptr inbounds %struct.GPR, %struct.GPR* %11552, i32 0, i32 33
  %11554 = getelementptr inbounds %struct.Reg, %struct.Reg* %11553, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %11554 to i64*
  %11555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11556 = getelementptr inbounds %struct.GPR, %struct.GPR* %11555, i32 0, i32 7
  %11557 = getelementptr inbounds %struct.Reg, %struct.Reg* %11556, i32 0, i32 0
  %RDX.i21 = bitcast %union.anon* %11557 to i64*
  %11558 = load i64, i64* %RDX.i21
  %11559 = load i64, i64* %PC.i20
  %11560 = add i64 %11559, 7
  store i64 %11560, i64* %PC.i20
  %11561 = sext i64 %11558 to i128
  %11562 = and i128 %11561, -18446744073709551616
  %11563 = zext i64 %11558 to i128
  %11564 = or i128 %11562, %11563
  %11565 = mul i128 744, %11564
  %11566 = trunc i128 %11565 to i64
  store i64 %11566, i64* %RDX.i21, align 8
  %11567 = sext i64 %11566 to i128
  %11568 = icmp ne i128 %11567, %11565
  %11569 = zext i1 %11568 to i8
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11569, i8* %11570, align 1
  %11571 = trunc i128 %11565 to i32
  %11572 = and i32 %11571, 255
  %11573 = call i32 @llvm.ctpop.i32(i32 %11572)
  %11574 = trunc i32 %11573 to i8
  %11575 = and i8 %11574, 1
  %11576 = xor i8 %11575, 1
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11576, i8* %11577, align 1
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11578, align 1
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11579, align 1
  %11580 = lshr i64 %11566, 63
  %11581 = trunc i64 %11580 to i8
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11581, i8* %11582, align 1
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11569, i8* %11583, align 1
  store %struct.Memory* %loadMem_40b183, %struct.Memory** %MEMORY
  %loadMem_40b18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11585 = getelementptr inbounds %struct.GPR, %struct.GPR* %11584, i32 0, i32 33
  %11586 = getelementptr inbounds %struct.Reg, %struct.Reg* %11585, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %11586 to i64*
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11588 = getelementptr inbounds %struct.GPR, %struct.GPR* %11587, i32 0, i32 1
  %11589 = getelementptr inbounds %struct.Reg, %struct.Reg* %11588, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %11589 to i64*
  %11590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11591 = getelementptr inbounds %struct.GPR, %struct.GPR* %11590, i32 0, i32 7
  %11592 = getelementptr inbounds %struct.Reg, %struct.Reg* %11591, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11592 to i64*
  %11593 = load i64, i64* %RAX.i19
  %11594 = load i64, i64* %RDX.i
  %11595 = load i64, i64* %PC.i18
  %11596 = add i64 %11595, 3
  store i64 %11596, i64* %PC.i18
  %11597 = add i64 %11594, %11593
  store i64 %11597, i64* %RAX.i19, align 8
  %11598 = icmp ult i64 %11597, %11593
  %11599 = icmp ult i64 %11597, %11594
  %11600 = or i1 %11598, %11599
  %11601 = zext i1 %11600 to i8
  %11602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11601, i8* %11602, align 1
  %11603 = trunc i64 %11597 to i32
  %11604 = and i32 %11603, 255
  %11605 = call i32 @llvm.ctpop.i32(i32 %11604)
  %11606 = trunc i32 %11605 to i8
  %11607 = and i8 %11606, 1
  %11608 = xor i8 %11607, 1
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11608, i8* %11609, align 1
  %11610 = xor i64 %11594, %11593
  %11611 = xor i64 %11610, %11597
  %11612 = lshr i64 %11611, 4
  %11613 = trunc i64 %11612 to i8
  %11614 = and i8 %11613, 1
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11614, i8* %11615, align 1
  %11616 = icmp eq i64 %11597, 0
  %11617 = zext i1 %11616 to i8
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11617, i8* %11618, align 1
  %11619 = lshr i64 %11597, 63
  %11620 = trunc i64 %11619 to i8
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11620, i8* %11621, align 1
  %11622 = lshr i64 %11593, 63
  %11623 = lshr i64 %11594, 63
  %11624 = xor i64 %11619, %11622
  %11625 = xor i64 %11619, %11623
  %11626 = add i64 %11624, %11625
  %11627 = icmp eq i64 %11626, 2
  %11628 = zext i1 %11627 to i8
  %11629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11628, i8* %11629, align 1
  store %struct.Memory* %loadMem_40b18a, %struct.Memory** %MEMORY
  %loadMem_40b18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11631 = getelementptr inbounds %struct.GPR, %struct.GPR* %11630, i32 0, i32 33
  %11632 = getelementptr inbounds %struct.Reg, %struct.Reg* %11631, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %11632 to i64*
  %11633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11634 = getelementptr inbounds %struct.GPR, %struct.GPR* %11633, i32 0, i32 17
  %11635 = getelementptr inbounds %struct.Reg, %struct.Reg* %11634, i32 0, i32 0
  %R8D.i16 = bitcast %union.anon* %11635 to i32*
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11637 = getelementptr inbounds %struct.GPR, %struct.GPR* %11636, i32 0, i32 1
  %11638 = getelementptr inbounds %struct.Reg, %struct.Reg* %11637, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %11638 to i64*
  %11639 = bitcast i32* %R8D.i16 to i64*
  %11640 = load i64, i64* %RAX.i17
  %11641 = add i64 %11640, 96
  %11642 = load i64, i64* %PC.i15
  %11643 = add i64 %11642, 4
  store i64 %11643, i64* %PC.i15
  %11644 = inttoptr i64 %11641 to i32*
  %11645 = load i32, i32* %11644
  %11646 = zext i32 %11645 to i64
  store i64 %11646, i64* %11639, align 8
  store %struct.Memory* %loadMem_40b18d, %struct.Memory** %MEMORY
  %loadMem_40b191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11648 = getelementptr inbounds %struct.GPR, %struct.GPR* %11647, i32 0, i32 33
  %11649 = getelementptr inbounds %struct.Reg, %struct.Reg* %11648, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11649 to i64*
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11651 = getelementptr inbounds %struct.GPR, %struct.GPR* %11650, i32 0, i32 17
  %11652 = getelementptr inbounds %struct.Reg, %struct.Reg* %11651, i32 0, i32 0
  %R8D.i13 = bitcast %union.anon* %11652 to i32*
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 19
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %R9D.i14 = bitcast %union.anon* %11655 to i32*
  %11656 = bitcast i32* %R9D.i14 to i64*
  %11657 = load i32, i32* %R8D.i13
  %11658 = zext i32 %11657 to i64
  %11659 = load i64, i64* %PC.i12
  %11660 = add i64 %11659, 3
  store i64 %11660, i64* %PC.i12
  %11661 = and i64 %11658, 4294967295
  store i64 %11661, i64* %11656, align 8
  store %struct.Memory* %loadMem_40b191, %struct.Memory** %MEMORY
  %loadMem_40b194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11663 = getelementptr inbounds %struct.GPR, %struct.GPR* %11662, i32 0, i32 33
  %11664 = getelementptr inbounds %struct.Reg, %struct.Reg* %11663, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %11664 to i64*
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11666 = getelementptr inbounds %struct.GPR, %struct.GPR* %11665, i32 0, i32 19
  %11667 = getelementptr inbounds %struct.Reg, %struct.Reg* %11666, i32 0, i32 0
  %R9D.i11 = bitcast %union.anon* %11667 to i32*
  %11668 = bitcast i32* %R9D.i11 to i64*
  %11669 = load i32, i32* %R9D.i11
  %11670 = zext i32 %11669 to i64
  %11671 = load i64, i64* %PC.i10
  %11672 = add i64 %11671, 4
  store i64 %11672, i64* %PC.i10
  %11673 = add i32 1, %11669
  %11674 = zext i32 %11673 to i64
  store i64 %11674, i64* %11668, align 8
  %11675 = icmp ult i32 %11673, %11669
  %11676 = icmp ult i32 %11673, 1
  %11677 = or i1 %11675, %11676
  %11678 = zext i1 %11677 to i8
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11678, i8* %11679, align 1
  %11680 = and i32 %11673, 255
  %11681 = call i32 @llvm.ctpop.i32(i32 %11680)
  %11682 = trunc i32 %11681 to i8
  %11683 = and i8 %11682, 1
  %11684 = xor i8 %11683, 1
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11684, i8* %11685, align 1
  %11686 = xor i64 1, %11670
  %11687 = trunc i64 %11686 to i32
  %11688 = xor i32 %11687, %11673
  %11689 = lshr i32 %11688, 4
  %11690 = trunc i32 %11689 to i8
  %11691 = and i8 %11690, 1
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11691, i8* %11692, align 1
  %11693 = icmp eq i32 %11673, 0
  %11694 = zext i1 %11693 to i8
  %11695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11694, i8* %11695, align 1
  %11696 = lshr i32 %11673, 31
  %11697 = trunc i32 %11696 to i8
  %11698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11697, i8* %11698, align 1
  %11699 = lshr i32 %11669, 31
  %11700 = xor i32 %11696, %11699
  %11701 = add i32 %11700, %11696
  %11702 = icmp eq i32 %11701, 2
  %11703 = zext i1 %11702 to i8
  %11704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11703, i8* %11704, align 1
  store %struct.Memory* %loadMem_40b194, %struct.Memory** %MEMORY
  %loadMem_40b198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11706 = getelementptr inbounds %struct.GPR, %struct.GPR* %11705, i32 0, i32 33
  %11707 = getelementptr inbounds %struct.Reg, %struct.Reg* %11706, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %11707 to i64*
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11709 = getelementptr inbounds %struct.GPR, %struct.GPR* %11708, i32 0, i32 19
  %11710 = getelementptr inbounds %struct.Reg, %struct.Reg* %11709, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %11710 to i32*
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11712 = getelementptr inbounds %struct.GPR, %struct.GPR* %11711, i32 0, i32 1
  %11713 = getelementptr inbounds %struct.Reg, %struct.Reg* %11712, i32 0, i32 0
  %RAX.i9 = bitcast %union.anon* %11713 to i64*
  %11714 = load i64, i64* %RAX.i9
  %11715 = add i64 %11714, 96
  %11716 = load i32, i32* %R9D.i
  %11717 = zext i32 %11716 to i64
  %11718 = load i64, i64* %PC.i8
  %11719 = add i64 %11718, 4
  store i64 %11719, i64* %PC.i8
  %11720 = inttoptr i64 %11715 to i32*
  store i32 %11716, i32* %11720
  store %struct.Memory* %loadMem_40b198, %struct.Memory** %MEMORY
  %loadMem_40b19c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11722 = getelementptr inbounds %struct.GPR, %struct.GPR* %11721, i32 0, i32 33
  %11723 = getelementptr inbounds %struct.Reg, %struct.Reg* %11722, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %11723 to i64*
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11725 = getelementptr inbounds %struct.GPR, %struct.GPR* %11724, i32 0, i32 17
  %11726 = getelementptr inbounds %struct.Reg, %struct.Reg* %11725, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %11726 to i32*
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11728 = getelementptr inbounds %struct.GPR, %struct.GPR* %11727, i32 0, i32 1
  %11729 = getelementptr inbounds %struct.Reg, %struct.Reg* %11728, i32 0, i32 0
  %RAX.i7 = bitcast %union.anon* %11729 to i64*
  %11730 = load i32, i32* %R8D.i
  %11731 = zext i32 %11730 to i64
  %11732 = load i64, i64* %PC.i6
  %11733 = add i64 %11732, 3
  store i64 %11733, i64* %PC.i6
  %11734 = shl i64 %11731, 32
  %11735 = ashr exact i64 %11734, 32
  store i64 %11735, i64* %RAX.i7, align 8
  store %struct.Memory* %loadMem_40b19c, %struct.Memory** %MEMORY
  %loadMem_40b19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11737 = getelementptr inbounds %struct.GPR, %struct.GPR* %11736, i32 0, i32 33
  %11738 = getelementptr inbounds %struct.Reg, %struct.Reg* %11737, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11738 to i64*
  %11739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11740 = getelementptr inbounds %struct.GPR, %struct.GPR* %11739, i32 0, i32 5
  %11741 = getelementptr inbounds %struct.Reg, %struct.Reg* %11740, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11741 to i32*
  %11742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11743 = getelementptr inbounds %struct.GPR, %struct.GPR* %11742, i32 0, i32 1
  %11744 = getelementptr inbounds %struct.Reg, %struct.Reg* %11743, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11744 to i64*
  %11745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11746 = getelementptr inbounds %struct.GPR, %struct.GPR* %11745, i32 0, i32 9
  %11747 = getelementptr inbounds %struct.Reg, %struct.Reg* %11746, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11747 to i64*
  %11748 = load i64, i64* %RSI.i
  %11749 = load i64, i64* %RAX.i
  %11750 = mul i64 %11749, 4
  %11751 = add i64 %11748, 100
  %11752 = add i64 %11751, %11750
  %11753 = load i32, i32* %ECX.i
  %11754 = zext i32 %11753 to i64
  %11755 = load i64, i64* %PC.i5
  %11756 = add i64 %11755, 4
  store i64 %11756, i64* %PC.i5
  %11757 = inttoptr i64 %11752 to i32*
  store i32 %11753, i32* %11757
  store %struct.Memory* %loadMem_40b19f, %struct.Memory** %MEMORY
  br label %block_.L_40b1a3

block_.L_40b1a3:                                  ; preds = %block_40b0b0, %block_40b078, %block_.L_40b05e
  %loadMem_40b1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11759 = getelementptr inbounds %struct.GPR, %struct.GPR* %11758, i32 0, i32 33
  %11760 = getelementptr inbounds %struct.Reg, %struct.Reg* %11759, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11760 to i64*
  %11761 = load i64, i64* %PC.i4
  %11762 = add i64 %11761, 5
  %11763 = load i64, i64* %PC.i4
  %11764 = add i64 %11763, 5
  store i64 %11764, i64* %PC.i4
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11762, i64* %11765, align 8
  store %struct.Memory* %loadMem_40b1a3, %struct.Memory** %MEMORY
  br label %block_.L_40b1a8

block_.L_40b1a8:                                  ; preds = %block_.L_40b1a3, %block_.L_40b038
  %loadMem_40b1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11767 = getelementptr inbounds %struct.GPR, %struct.GPR* %11766, i32 0, i32 33
  %11768 = getelementptr inbounds %struct.Reg, %struct.Reg* %11767, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11768 to i64*
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11770 = getelementptr inbounds %struct.GPR, %struct.GPR* %11769, i32 0, i32 15
  %11771 = getelementptr inbounds %struct.Reg, %struct.Reg* %11770, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11771 to i64*
  %11772 = load i64, i64* %PC.i2
  %11773 = add i64 %11772, 1
  store i64 %11773, i64* %PC.i2
  %11774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11775 = load i64, i64* %11774, align 8
  %11776 = add i64 %11775, 8
  %11777 = inttoptr i64 %11775 to i64*
  %11778 = load i64, i64* %11777
  store i64 %11778, i64* %RBP.i3, align 8
  store i64 %11776, i64* %11774, align 8
  store %struct.Memory* %loadMem_40b1a8, %struct.Memory** %MEMORY
  %loadMem_40b1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11780 = getelementptr inbounds %struct.GPR, %struct.GPR* %11779, i32 0, i32 33
  %11781 = getelementptr inbounds %struct.Reg, %struct.Reg* %11780, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11781 to i64*
  %11782 = load i64, i64* %PC.i1
  %11783 = add i64 %11782, 1
  store i64 %11783, i64* %PC.i1
  %11784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11786 = load i64, i64* %11785, align 8
  %11787 = inttoptr i64 %11786 to i64*
  %11788 = load i64, i64* %11787
  store i64 %11788, i64* %11784, align 8
  %11789 = add i64 %11786, 8
  store i64 %11789, i64* %11785, align 8
  store %struct.Memory* %loadMem_40b1a9, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40b1a9
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x99da00___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x99da00_type* @G__0x99da00 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rsi_1____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da00___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x99da00(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xaab3f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xaaba30___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xc__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x60__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 740
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x99da08(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40aa1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40a9a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 20
  %16 = icmp ult i32 %14, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 20
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40a9f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x10__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 16
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ab96(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ab91(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ab91(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rdi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x60___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 96, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 96
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 96, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 20, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 20
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 20, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ac34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40abb5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40ac0e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40adab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ada6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ada6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 1
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ae49(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40adca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40ae23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40afc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40afbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40afbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 20
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 20, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b05e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40afdf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b038(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b1a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b1a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b1a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rax____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
