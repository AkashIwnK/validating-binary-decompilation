; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_450be0.owl_hotspots(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44f5b0.reading_hotspots(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4115b0.approxlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f780.countlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_46bc30.safe_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f840.findlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4137f0.countstones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_415cb0.mark_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409590.is_suicide(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f200.is_ko(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ec70.is_illegal_ko_capture(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4794d0.confirm_safety(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408e30.trymove(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_413b00.chainlinks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_46a780.find_defense(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40dd60.popgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x7ae438_type = type <{ [4 x i8] }>
@G_0x7ae438= global %G_0x7ae438_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x99c0a0_type = type <{ [8 x i8] }>
@G_0x99c0a0= global %G_0x99c0a0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xab0f24_type = type <{ [4 x i8] }>
@G_0xab0f24= global %G_0xab0f24_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
@G_0xab0fe0= global %G_0xab0fe0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xb54ce4_type = type <{ [1 x i8] }>
@G_0xb54ce4= global %G_0xb54ce4_type <{ [1 x i8] c"\00" }>
%G_0xdcca8__rip__type = type <{ [8 x i8] }>
@G_0xdcca8__rip_= global %G_0xdcca8__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xddd5b__rip__type = type <{ [4 x i8] }>
@G_0xddd5b__rip_= global %G_0xddd5b__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x579dc5_type = type <{ [8 x i8] }>
@G__0x579dc5= global %G__0x579dc5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dc8_type = type <{ [8 x i8] }>
@G__0x579dc8= global %G__0x579dc8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dcb_type = type <{ [8 x i8] }>
@G__0x579dcb= global %G__0x579dcb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dce_type = type <{ [8 x i8] }>
@G__0x579dce= global %G__0x579dce_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dd1_type = type <{ [8 x i8] }>
@G__0x579dd1= global %G__0x579dd1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dd4_type = type <{ [8 x i8] }>
@G__0x579dd4= global %G__0x579dd4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dd7_type = type <{ [8 x i8] }>
@G__0x579dd7= global %G__0x579dd7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dec_type = type <{ [8 x i8] }>
@G__0x579dec= global %G__0x579dec_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579dfb_type = type <{ [8 x i8] }>
@G__0x579dfb= global %G__0x579dfb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579e0b_type = type <{ [8 x i8] }>
@G__0x579e0b= global %G__0x579e0b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579e20_type = type <{ [8 x i8] }>
@G__0x579e20= global %G__0x579e20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579e48_type = type <{ [8 x i8] }>
@G__0x579e48= global %G__0x579e48_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579e54_type = type <{ [8 x i8] }>
@G__0x579e54= global %G__0x579e54_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579e85_type = type <{ [8 x i8] }>
@G__0x579e85= global %G__0x579e85_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579eb0_type = type <{ [8 x i8] }>
@G__0x579eb0= global %G__0x579eb0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579ecb_type = type <{ [8 x i8] }>
@G__0x579ecb= global %G__0x579ecb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579ed7_type = type <{ [8 x i8] }>
@G__0x579ed7= global %G__0x579ed7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x579ef8_type = type <{ [8 x i8] }>
@G__0x579ef8= global %G__0x579ef8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57f1e3_type = type <{ [8 x i8] }>
@G__0x57f1e3= global %G__0x57f1e3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x586073_type = type <{ [8 x i8] }>
@G__0x586073= global %G__0x586073_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
@G__0xb0eff0= global %G__0xb0eff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
@G__0xb4bd20= global %G__0xb4bd20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @aftermath_genmove(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .aftermath_genmove:	 RIP: 4049b0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 4049b0	 Bytes: 1
  %loadMem_4049b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b0)
  store %struct.Memory* %call_4049b0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 4049b1	 Bytes: 3
  %loadMem_4049b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b1)
  store %struct.Memory* %call_4049b1, %struct.Memory** %MEMORY

  ; Code: subq $0x2b10, %rsp	 RIP: 4049b4	 Bytes: 7
  %loadMem_4049b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b4 = call %struct.Memory* @routine_subq__0x2b10___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b4)
  store %struct.Memory* %call_4049b4, %struct.Memory** %MEMORY

  ; Code: leaq -0x12f0(%rbp), %rax	 RIP: 4049bb	 Bytes: 7
  %loadMem_4049bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049bb = call %struct.Memory* @routine_leaq_MINUS0x12f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049bb)
  store %struct.Memory* %call_4049bb, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %r8d	 RIP: 4049c2	 Bytes: 6
  %loadMem_4049c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049c2 = call %struct.Memory* @routine_movl__0x3___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049c2)
  store %struct.Memory* %call_4049c2, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x10(%rbp)	 RIP: 4049c8	 Bytes: 4
  %loadMem_4049c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049c8 = call %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049c8)
  store %struct.Memory* %call_4049c8, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x14(%rbp)	 RIP: 4049cc	 Bytes: 3
  %loadMem_4049cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049cc = call %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049cc)
  store %struct.Memory* %call_4049cc, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x20(%rbp)	 RIP: 4049cf	 Bytes: 4
  %loadMem_4049cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049cf = call %struct.Memory* @routine_movq__rdx__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049cf)
  store %struct.Memory* %call_4049cf, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x24(%rbp)	 RIP: 4049d3	 Bytes: 3
  %loadMem_4049d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049d3 = call %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049d3)
  store %struct.Memory* %call_4049d3, %struct.Memory** %MEMORY

  ; Code: subl -0x14(%rbp), %r8d	 RIP: 4049d6	 Bytes: 4
  %loadMem_4049d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049d6 = call %struct.Memory* @routine_subl_MINUS0x14__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049d6)
  store %struct.Memory* %call_4049d6, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x2c(%rbp)	 RIP: 4049da	 Bytes: 4
  %loadMem_4049da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049da = call %struct.Memory* @routine_movl__r8d__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049da)
  store %struct.Memory* %call_4049da, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f78(%rbp)	 RIP: 4049de	 Bytes: 10
  %loadMem_4049de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049de = call %struct.Memory* @routine_movl__0x0__MINUS0x1f78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049de)
  store %struct.Memory* %call_4049de, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f7c(%rbp)	 RIP: 4049e8	 Bytes: 10
  %loadMem_4049e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049e8)
  store %struct.Memory* %call_4049e8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f84(%rbp)	 RIP: 4049f2	 Bytes: 10
  %loadMem_4049f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049f2 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049f2)
  store %struct.Memory* %call_4049f2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f88(%rbp)	 RIP: 4049fc	 Bytes: 10
  %loadMem_4049fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049fc = call %struct.Memory* @routine_movl__0x0__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049fc)
  store %struct.Memory* %call_4049fc, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 404a06	 Bytes: 3
  %loadMem_404a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a06 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a06)
  store %struct.Memory* %call_404a06, %struct.Memory** %MEMORY

  ; Code: callq .owl_hotspots	 RIP: 404a09	 Bytes: 5
  %loadMem1_404a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404a09 = call %struct.Memory* @routine_callq_.owl_hotspots(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404a09, i64 311767, i64 5, i64 5)
  store %struct.Memory* %call1_404a09, %struct.Memory** %MEMORY

  %loadMem2_404a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404a09 = load i64, i64* %3
  %call2_404a09 = call %struct.Memory* @sub_450be0.owl_hotspots(%struct.State* %0, i64  %loadPC_404a09, %struct.Memory* %loadMem2_404a09)
  store %struct.Memory* %call2_404a09, %struct.Memory** %MEMORY

  ; Code: leaq -0x1930(%rbp), %rdi	 RIP: 404a0e	 Bytes: 7
  %loadMem_404a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a0e = call %struct.Memory* @routine_leaq_MINUS0x1930__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a0e)
  store %struct.Memory* %call_404a0e, %struct.Memory** %MEMORY

  ; Code: callq .reading_hotspots	 RIP: 404a15	 Bytes: 5
  %loadMem1_404a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404a15 = call %struct.Memory* @routine_callq_.reading_hotspots(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404a15, i64 306075, i64 5, i64 5)
  store %struct.Memory* %call1_404a15, %struct.Memory** %MEMORY

  %loadMem2_404a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404a15 = load i64, i64* %3
  %call2_404a15 = call %struct.Memory* @sub_44f5b0.reading_hotspots(%struct.State* %0, i64  %loadPC_404a15, %struct.Memory* %loadMem2_404a15)
  store %struct.Memory* %call2_404a15, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 404a1a	 Bytes: 10
  %loadMem_404a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a1a = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a1a)
  store %struct.Memory* %call_404a1a, %struct.Memory** %MEMORY

  ; Code: .L_404a24:	 RIP: 404a24	 Bytes: 0
  br label %block_.L_404a24
block_.L_404a24:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 404a24	 Bytes: 10
  %loadMem_404a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a24 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a24)
  store %struct.Memory* %call_404a24, %struct.Memory** %MEMORY

  ; Code: jge .L_404b75	 RIP: 404a2e	 Bytes: 6
  %loadMem_404a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a2e = call %struct.Memory* @routine_jge_.L_404b75(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a2e, i8* %BRANCH_TAKEN, i64 327, i64 6, i64 6)
  store %struct.Memory* %call_404a2e, %struct.Memory** %MEMORY

  %loadBr_404a2e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404a2e = icmp eq i8 %loadBr_404a2e, 1
  br i1 %cmpBr_404a2e, label %block_.L_404b75, label %block_404a34

block_404a34:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404a34	 Bytes: 7
  %loadMem_404a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a34 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a34)
  store %struct.Memory* %call_404a34, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404a3b	 Bytes: 8
  %loadMem_404a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a3b = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a3b)
  store %struct.Memory* %call_404a3b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 404a43	 Bytes: 3
  %loadMem_404a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a43 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a43)
  store %struct.Memory* %call_404a43, %struct.Memory** %MEMORY

  ; Code: jne .L_404a51	 RIP: 404a46	 Bytes: 6
  %loadMem_404a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a46 = call %struct.Memory* @routine_jne_.L_404a51(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a46, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_404a46, %struct.Memory** %MEMORY

  %loadBr_404a46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404a46 = icmp eq i8 %loadBr_404a46, 1
  br i1 %cmpBr_404a46, label %block_.L_404a51, label %block_404a4c

block_404a4c:
  ; Code: jmpq .L_404b61	 RIP: 404a4c	 Bytes: 5
  %loadMem_404a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a4c = call %struct.Memory* @routine_jmpq_.L_404b61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a4c, i64 277, i64 5)
  store %struct.Memory* %call_404a4c, %struct.Memory** %MEMORY

  br label %block_.L_404b61

  ; Code: .L_404a51:	 RIP: 404a51	 Bytes: 0
block_.L_404a51:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404a51	 Bytes: 7
  %loadMem_404a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a51 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a51)
  store %struct.Memory* %call_404a51, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404a58	 Bytes: 8
  %loadMem_404a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a58 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a58)
  store %struct.Memory* %call_404a58, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %ecx	 RIP: 404a60	 Bytes: 3
  %loadMem_404a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a60 = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a60)
  store %struct.Memory* %call_404a60, %struct.Memory** %MEMORY

  ; Code: jne .L_404aa5	 RIP: 404a63	 Bytes: 6
  %loadMem_404a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a63 = call %struct.Memory* @routine_jne_.L_404aa5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a63, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_404a63, %struct.Memory** %MEMORY

  %loadBr_404a63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404a63 = icmp eq i8 %loadBr_404a63, 1
  br i1 %cmpBr_404a63, label %block_.L_404aa5, label %block_404a69

block_404a69:
  ; Code: movq $0xb0eff0, %rax	 RIP: 404a69	 Bytes: 10
  %loadMem_404a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a69 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a69)
  store %struct.Memory* %call_404a69, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404a73	 Bytes: 7
  %loadMem_404a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a73 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a73)
  store %struct.Memory* %call_404a73, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 404a7a	 Bytes: 7
  %loadMem_404a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a7a = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a7a)
  store %struct.Memory* %call_404a7a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404a81	 Bytes: 3
  %loadMem_404a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a81 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a81)
  store %struct.Memory* %call_404a81, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x34(%rax)	 RIP: 404a84	 Bytes: 4
  %loadMem_404a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a84 = call %struct.Memory* @routine_cmpl__0x0__0x34__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a84)
  store %struct.Memory* %call_404a84, %struct.Memory** %MEMORY

  ; Code: je .L_404aa5	 RIP: 404a88	 Bytes: 6
  %loadMem_404a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a88 = call %struct.Memory* @routine_je_.L_404aa5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a88, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_404a88, %struct.Memory** %MEMORY

  %loadBr_404a88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404a88 = icmp eq i8 %loadBr_404a88, 1
  br i1 %cmpBr_404a88, label %block_.L_404aa5, label %block_404a8e

block_404a8e:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404a8e	 Bytes: 7
  %loadMem_404a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a8e = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a8e)
  store %struct.Memory* %call_404a8e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x670(%rbp,%rax,4)	 RIP: 404a95	 Bytes: 11
  %loadMem_404a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a95 = call %struct.Memory* @routine_movl__0x0__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a95)
  store %struct.Memory* %call_404a95, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404b57	 RIP: 404aa0	 Bytes: 5
  %loadMem_404aa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa0 = call %struct.Memory* @routine_jmpq_.L_404b57(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa0, i64 183, i64 5)
  store %struct.Memory* %call_404aa0, %struct.Memory** %MEMORY

  br label %block_.L_404b57

  ; Code: .L_404aa5:	 RIP: 404aa5	 Bytes: 0
block_.L_404aa5:

  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 404aa5	 Bytes: 4
  %loadMem_404aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa5 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa5)
  store %struct.Memory* %call_404aa5, %struct.Memory** %MEMORY

  ; Code: jne .L_404b40	 RIP: 404aa9	 Bytes: 6
  %loadMem_404aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa9 = call %struct.Memory* @routine_jne_.L_404b40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa9, i8* %BRANCH_TAKEN, i64 151, i64 6, i64 6)
  store %struct.Memory* %call_404aa9, %struct.Memory** %MEMORY

  %loadBr_404aa9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404aa9 = icmp eq i8 %loadBr_404aa9, 1
  br i1 %cmpBr_404aa9, label %block_.L_404b40, label %block_404aaf

block_404aaf:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404aaf	 Bytes: 7
  %loadMem_404aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aaf = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aaf)
  store %struct.Memory* %call_404aaf, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404ab6	 Bytes: 8
  %loadMem_404ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ab6 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ab6)
  store %struct.Memory* %call_404ab6, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 404abe	 Bytes: 3
  %loadMem_404abe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404abe = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404abe)
  store %struct.Memory* %call_404abe, %struct.Memory** %MEMORY

  ; Code: jne .L_404aec	 RIP: 404ac1	 Bytes: 6
  %loadMem_404ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ac1 = call %struct.Memory* @routine_jne_.L_404aec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ac1, i8* %BRANCH_TAKEN, i64 43, i64 6, i64 6)
  store %struct.Memory* %call_404ac1, %struct.Memory** %MEMORY

  %loadBr_404ac1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404ac1 = icmp eq i8 %loadBr_404ac1, 1
  br i1 %cmpBr_404ac1, label %block_.L_404aec, label %block_404ac7

block_404ac7:
  ; Code: movq $0xb0eff0, %rax	 RIP: 404ac7	 Bytes: 10
  %loadMem_404ac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ac7 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ac7)
  store %struct.Memory* %call_404ac7, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404ad1	 Bytes: 7
  %loadMem_404ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ad1 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ad1)
  store %struct.Memory* %call_404ad1, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 404ad8	 Bytes: 7
  %loadMem_404ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ad8 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ad8)
  store %struct.Memory* %call_404ad8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404adf	 Bytes: 3
  %loadMem_404adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404adf = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404adf)
  store %struct.Memory* %call_404adf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x38(%rax)	 RIP: 404ae2	 Bytes: 4
  %loadMem_404ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ae2 = call %struct.Memory* @routine_cmpl__0x0__0x38__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ae2)
  store %struct.Memory* %call_404ae2, %struct.Memory** %MEMORY

  ; Code: je .L_404b29	 RIP: 404ae6	 Bytes: 6
  %loadMem_404ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ae6 = call %struct.Memory* @routine_je_.L_404b29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ae6, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_404ae6, %struct.Memory** %MEMORY

  %loadBr_404ae6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404ae6 = icmp eq i8 %loadBr_404ae6, 1
  br i1 %cmpBr_404ae6, label %block_.L_404b29, label %block_.L_404aec

  ; Code: .L_404aec:	 RIP: 404aec	 Bytes: 0
block_.L_404aec:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404aec	 Bytes: 7
  %loadMem_404aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aec = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aec)
  store %struct.Memory* %call_404aec, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404af3	 Bytes: 8
  %loadMem_404af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404af3 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404af3)
  store %struct.Memory* %call_404af3, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %ecx	 RIP: 404afb	 Bytes: 3
  %loadMem_404afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404afb = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404afb)
  store %struct.Memory* %call_404afb, %struct.Memory** %MEMORY

  ; Code: jne .L_404b40	 RIP: 404afe	 Bytes: 6
  %loadMem_404afe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404afe = call %struct.Memory* @routine_jne_.L_404b40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404afe, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_404afe, %struct.Memory** %MEMORY

  %loadBr_404afe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404afe = icmp eq i8 %loadBr_404afe, 1
  br i1 %cmpBr_404afe, label %block_.L_404b40, label %block_404b04

block_404b04:
  ; Code: movq $0xb0eff0, %rax	 RIP: 404b04	 Bytes: 10
  %loadMem_404b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b04 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b04)
  store %struct.Memory* %call_404b04, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404b0e	 Bytes: 7
  %loadMem_404b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b0e = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b0e)
  store %struct.Memory* %call_404b0e, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 404b15	 Bytes: 7
  %loadMem_404b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b15 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b15)
  store %struct.Memory* %call_404b15, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404b1c	 Bytes: 3
  %loadMem_404b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b1c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b1c)
  store %struct.Memory* %call_404b1c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x38(%rax)	 RIP: 404b1f	 Bytes: 4
  %loadMem_404b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b1f = call %struct.Memory* @routine_cmpl__0x1__0x38__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b1f)
  store %struct.Memory* %call_404b1f, %struct.Memory** %MEMORY

  ; Code: jne .L_404b40	 RIP: 404b23	 Bytes: 6
  %loadMem_404b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b23 = call %struct.Memory* @routine_jne_.L_404b40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b23, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_404b23, %struct.Memory** %MEMORY

  %loadBr_404b23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404b23 = icmp eq i8 %loadBr_404b23, 1
  br i1 %cmpBr_404b23, label %block_.L_404b40, label %block_.L_404b29

  ; Code: .L_404b29:	 RIP: 404b29	 Bytes: 0
block_.L_404b29:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404b29	 Bytes: 7
  %loadMem_404b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b29 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b29)
  store %struct.Memory* %call_404b29, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x670(%rbp,%rax,4)	 RIP: 404b30	 Bytes: 11
  %loadMem_404b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b30 = call %struct.Memory* @routine_movl__0x0__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b30)
  store %struct.Memory* %call_404b30, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404b52	 RIP: 404b3b	 Bytes: 5
  %loadMem_404b3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b3b = call %struct.Memory* @routine_jmpq_.L_404b52(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b3b, i64 23, i64 5)
  store %struct.Memory* %call_404b3b, %struct.Memory** %MEMORY

  br label %block_.L_404b52

  ; Code: .L_404b40:	 RIP: 404b40	 Bytes: 0
block_.L_404b40:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404b40	 Bytes: 7
  %loadMem_404b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b40 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b40)
  store %struct.Memory* %call_404b40, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x670(%rbp,%rax,4)	 RIP: 404b47	 Bytes: 11
  %loadMem_404b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b47 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b47)
  store %struct.Memory* %call_404b47, %struct.Memory** %MEMORY

  ; Code: .L_404b52:	 RIP: 404b52	 Bytes: 0
  br label %block_.L_404b52
block_.L_404b52:

  ; Code: jmpq .L_404b57	 RIP: 404b52	 Bytes: 5
  %loadMem_404b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b52 = call %struct.Memory* @routine_jmpq_.L_404b57(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b52, i64 5, i64 5)
  store %struct.Memory* %call_404b52, %struct.Memory** %MEMORY

  br label %block_.L_404b57

  ; Code: .L_404b57:	 RIP: 404b57	 Bytes: 0
block_.L_404b57:

  ; Code: jmpq .L_404b5c	 RIP: 404b57	 Bytes: 5
  %loadMem_404b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b57 = call %struct.Memory* @routine_jmpq_.L_404b5c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b57, i64 5, i64 5)
  store %struct.Memory* %call_404b57, %struct.Memory** %MEMORY

  br label %block_.L_404b5c

  ; Code: .L_404b5c:	 RIP: 404b5c	 Bytes: 0
block_.L_404b5c:

  ; Code: jmpq .L_404b61	 RIP: 404b5c	 Bytes: 5
  %loadMem_404b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b5c = call %struct.Memory* @routine_jmpq_.L_404b61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b5c, i64 5, i64 5)
  store %struct.Memory* %call_404b5c, %struct.Memory** %MEMORY

  br label %block_.L_404b61

  ; Code: .L_404b61:	 RIP: 404b61	 Bytes: 0
block_.L_404b61:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404b61	 Bytes: 6
  %loadMem_404b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b61 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b61)
  store %struct.Memory* %call_404b61, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404b67	 Bytes: 3
  %loadMem_404b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b67 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b67)
  store %struct.Memory* %call_404b67, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 404b6a	 Bytes: 6
  %loadMem_404b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b6a = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b6a)
  store %struct.Memory* %call_404b6a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404a24	 RIP: 404b70	 Bytes: 5
  %loadMem_404b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b70 = call %struct.Memory* @routine_jmpq_.L_404a24(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b70, i64 -332, i64 5)
  store %struct.Memory* %call_404b70, %struct.Memory** %MEMORY

  br label %block_.L_404a24

  ; Code: .L_404b75:	 RIP: 404b75	 Bytes: 0
block_.L_404b75:

  ; Code: movl $0x0, -0x1f80(%rbp)	 RIP: 404b75	 Bytes: 10
  %loadMem_404b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b75 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b75)
  store %struct.Memory* %call_404b75, %struct.Memory** %MEMORY

  ; Code: .L_404b7f:	 RIP: 404b7f	 Bytes: 0
  br label %block_.L_404b7f
block_.L_404b7f:

  ; Code: movl $0x0, -0x1f74(%rbp)	 RIP: 404b7f	 Bytes: 10
  %loadMem_404b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b7f = call %struct.Memory* @routine_movl__0x0__MINUS0x1f74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b7f)
  store %struct.Memory* %call_404b7f, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 404b89	 Bytes: 10
  %loadMem_404b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b89 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b89)
  store %struct.Memory* %call_404b89, %struct.Memory** %MEMORY

  ; Code: .L_404b93:	 RIP: 404b93	 Bytes: 0
  br label %block_.L_404b93
block_.L_404b93:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 404b93	 Bytes: 10
  %loadMem_404b93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b93 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b93)
  store %struct.Memory* %call_404b93, %struct.Memory** %MEMORY

  ; Code: jge .L_404d81	 RIP: 404b9d	 Bytes: 6
  %loadMem_404b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b9d = call %struct.Memory* @routine_jge_.L_404d81(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b9d, i8* %BRANCH_TAKEN, i64 484, i64 6, i64 6)
  store %struct.Memory* %call_404b9d, %struct.Memory** %MEMORY

  %loadBr_404b9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404b9d = icmp eq i8 %loadBr_404b9d, 1
  br i1 %cmpBr_404b9d, label %block_.L_404d81, label %block_404ba3

block_404ba3:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404ba3	 Bytes: 7
  %loadMem_404ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ba3 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ba3)
  store %struct.Memory* %call_404ba3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404baa	 Bytes: 8
  %loadMem_404baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404baa = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404baa)
  store %struct.Memory* %call_404baa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 404bb2	 Bytes: 3
  %loadMem_404bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bb2 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bb2)
  store %struct.Memory* %call_404bb2, %struct.Memory** %MEMORY

  ; Code: je .L_404d68	 RIP: 404bb5	 Bytes: 6
  %loadMem_404bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bb5 = call %struct.Memory* @routine_je_.L_404d68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bb5, i8* %BRANCH_TAKEN, i64 435, i64 6, i64 6)
  store %struct.Memory* %call_404bb5, %struct.Memory** %MEMORY

  %loadBr_404bb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404bb5 = icmp eq i8 %loadBr_404bb5, 1
  br i1 %cmpBr_404bb5, label %block_.L_404d68, label %block_404bbb

block_404bbb:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404bbb	 Bytes: 7
  %loadMem_404bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bbb = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bbb)
  store %struct.Memory* %call_404bbb, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, -0x670(%rbp,%rax,4)	 RIP: 404bc2	 Bytes: 8
  %loadMem_404bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bc2 = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bc2)
  store %struct.Memory* %call_404bc2, %struct.Memory** %MEMORY

  ; Code: jne .L_404d68	 RIP: 404bca	 Bytes: 6
  %loadMem_404bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bca = call %struct.Memory* @routine_jne_.L_404d68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bca, i8* %BRANCH_TAKEN, i64 414, i64 6, i64 6)
  store %struct.Memory* %call_404bca, %struct.Memory** %MEMORY

  %loadBr_404bca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404bca = icmp eq i8 %loadBr_404bca, 1
  br i1 %cmpBr_404bca, label %block_.L_404d68, label %block_404bd0

block_404bd0:
  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 404bd0	 Bytes: 7
  %loadMem_404bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bd0 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bd0)
  store %struct.Memory* %call_404bd0, %struct.Memory** %MEMORY

  ; Code: .L_404bd7:	 RIP: 404bd7	 Bytes: 0
  br label %block_.L_404bd7
block_.L_404bd7:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 404bd7	 Bytes: 4
  %loadMem_404bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bd7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bd7)
  store %struct.Memory* %call_404bd7, %struct.Memory** %MEMORY

  ; Code: jge .L_404d63	 RIP: 404bdb	 Bytes: 6
  %loadMem_404bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bdb = call %struct.Memory* @routine_jge_.L_404d63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bdb, i8* %BRANCH_TAKEN, i64 392, i64 6, i64 6)
  store %struct.Memory* %call_404bdb, %struct.Memory** %MEMORY

  %loadBr_404bdb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404bdb = icmp eq i8 %loadBr_404bdb, 1
  br i1 %cmpBr_404bdb, label %block_.L_404d63, label %block_404be1

block_404be1:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404be1	 Bytes: 6
  %loadMem_404be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404be1 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404be1)
  store %struct.Memory* %call_404be1, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 404be7	 Bytes: 4
  %loadMem_404be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404be7 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404be7)
  store %struct.Memory* %call_404be7, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 404beb	 Bytes: 7
  %loadMem_404beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404beb = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404beb)
  store %struct.Memory* %call_404beb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f94(%rbp)	 RIP: 404bf2	 Bytes: 6
  %loadMem_404bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bf2 = call %struct.Memory* @routine_movl__eax__MINUS0x1f94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bf2)
  store %struct.Memory* %call_404bf2, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f94(%rbp), %rcx	 RIP: 404bf8	 Bytes: 7
  %loadMem_404bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bf8 = call %struct.Memory* @routine_movslq_MINUS0x1f94__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bf8)
  store %struct.Memory* %call_404bf8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 404bff	 Bytes: 8
  %loadMem_404bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bff = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bff)
  store %struct.Memory* %call_404bff, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 404c07	 Bytes: 3
  %loadMem_404c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c07 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c07)
  store %struct.Memory* %call_404c07, %struct.Memory** %MEMORY

  ; Code: jne .L_404c15	 RIP: 404c0a	 Bytes: 6
  %loadMem_404c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c0a = call %struct.Memory* @routine_jne_.L_404c15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c0a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_404c0a, %struct.Memory** %MEMORY

  %loadBr_404c0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c0a = icmp eq i8 %loadBr_404c0a, 1
  br i1 %cmpBr_404c0a, label %block_.L_404c15, label %block_404c10

block_404c10:
  ; Code: jmpq .L_404d55	 RIP: 404c10	 Bytes: 5
  %loadMem_404c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c10 = call %struct.Memory* @routine_jmpq_.L_404d55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c10, i64 325, i64 5)
  store %struct.Memory* %call_404c10, %struct.Memory** %MEMORY

  br label %block_.L_404d55

  ; Code: .L_404c15:	 RIP: 404c15	 Bytes: 0
block_.L_404c15:

  ; Code: cmpl $0x0, -0x1f80(%rbp)	 RIP: 404c15	 Bytes: 7
  %loadMem_404c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c15 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c15)
  store %struct.Memory* %call_404c15, %struct.Memory** %MEMORY

  ; Code: je .L_404c3a	 RIP: 404c1c	 Bytes: 6
  %loadMem_404c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c1c = call %struct.Memory* @routine_je_.L_404c3a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c1c, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_404c1c, %struct.Memory** %MEMORY

  %loadBr_404c1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c1c = icmp eq i8 %loadBr_404c1c, 1
  br i1 %cmpBr_404c1c, label %block_.L_404c3a, label %block_404c22

block_404c22:
  ; Code: movslq -0x1f94(%rbp), %rax	 RIP: 404c22	 Bytes: 7
  %loadMem_404c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c22 = call %struct.Memory* @routine_movslq_MINUS0x1f94__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c22)
  store %struct.Memory* %call_404c22, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404c29	 Bytes: 8
  %loadMem_404c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c29 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c29)
  store %struct.Memory* %call_404c29, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 404c31	 Bytes: 3
  %loadMem_404c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c31 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c31)
  store %struct.Memory* %call_404c31, %struct.Memory** %MEMORY

  ; Code: jne .L_404d50	 RIP: 404c34	 Bytes: 6
  %loadMem_404c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c34 = call %struct.Memory* @routine_jne_.L_404d50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c34, i8* %BRANCH_TAKEN, i64 284, i64 6, i64 6)
  store %struct.Memory* %call_404c34, %struct.Memory** %MEMORY

  %loadBr_404c34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c34 = icmp eq i8 %loadBr_404c34, 1
  br i1 %cmpBr_404c34, label %block_.L_404d50, label %block_.L_404c3a

  ; Code: .L_404c3a:	 RIP: 404c3a	 Bytes: 0
block_.L_404c3a:

  ; Code: movslq -0x1f94(%rbp), %rax	 RIP: 404c3a	 Bytes: 7
  %loadMem_404c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c3a = call %struct.Memory* @routine_movslq_MINUS0x1f94__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c3a)
  store %struct.Memory* %call_404c3a, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %ecx	 RIP: 404c41	 Bytes: 7
  %loadMem_404c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c41 = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c41)
  store %struct.Memory* %call_404c41, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1f80(%rbp), %ecx	 RIP: 404c48	 Bytes: 6
  %loadMem_404c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c48 = call %struct.Memory* @routine_cmpl_MINUS0x1f80__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c48)
  store %struct.Memory* %call_404c48, %struct.Memory** %MEMORY

  ; Code: jne .L_404d50	 RIP: 404c4e	 Bytes: 6
  %loadMem_404c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c4e = call %struct.Memory* @routine_jne_.L_404d50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c4e, i8* %BRANCH_TAKEN, i64 258, i64 6, i64 6)
  store %struct.Memory* %call_404c4e, %struct.Memory** %MEMORY

  %loadBr_404c4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c4e = icmp eq i8 %loadBr_404c4e, 1
  br i1 %cmpBr_404c4e, label %block_.L_404d50, label %block_404c54

block_404c54:
  ; Code: cmpl $0x0, -0x1f80(%rbp)	 RIP: 404c54	 Bytes: 7
  %loadMem_404c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c54 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c54)
  store %struct.Memory* %call_404c54, %struct.Memory** %MEMORY

  ; Code: jle .L_404cae	 RIP: 404c5b	 Bytes: 6
  %loadMem_404c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c5b = call %struct.Memory* @routine_jle_.L_404cae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c5b, i8* %BRANCH_TAKEN, i64 83, i64 6, i64 6)
  store %struct.Memory* %call_404c5b, %struct.Memory** %MEMORY

  %loadBr_404c5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c5b = icmp eq i8 %loadBr_404c5b, 1
  br i1 %cmpBr_404c5b, label %block_.L_404cae, label %block_404c61

block_404c61:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404c61	 Bytes: 7
  %loadMem_404c61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c61 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c61)
  store %struct.Memory* %call_404c61, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404c68	 Bytes: 8
  %loadMem_404c68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c68 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c68)
  store %struct.Memory* %call_404c68, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 404c70	 Bytes: 3
  %loadMem_404c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c70 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c70)
  store %struct.Memory* %call_404c70, %struct.Memory** %MEMORY

  ; Code: jne .L_404cae	 RIP: 404c73	 Bytes: 6
  %loadMem_404c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c73 = call %struct.Memory* @routine_jne_.L_404cae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c73, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_404c73, %struct.Memory** %MEMORY

  %loadBr_404c73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c73 = icmp eq i8 %loadBr_404c73, 1
  br i1 %cmpBr_404c73, label %block_.L_404cae, label %block_404c79

block_404c79:
  ; Code: movl -0x1f80(%rbp), %eax	 RIP: 404c79	 Bytes: 6
  %loadMem_404c79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c79 = call %struct.Memory* @routine_movl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c79)
  store %struct.Memory* %call_404c79, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404c7f	 Bytes: 3
  %loadMem_404c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c7f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c7f)
  store %struct.Memory* %call_404c7f, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404c82	 Bytes: 7
  %loadMem_404c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c82 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c82)
  store %struct.Memory* %call_404c82, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x670(%rbp,%rcx,4)	 RIP: 404c89	 Bytes: 7
  %loadMem_404c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c89 = call %struct.Memory* @routine_movl__eax__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c89)
  store %struct.Memory* %call_404c89, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1f78(%rbp)	 RIP: 404c90	 Bytes: 7
  %loadMem_404c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c90 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c90)
  store %struct.Memory* %call_404c90, %struct.Memory** %MEMORY

  ; Code: jne .L_404ca9	 RIP: 404c97	 Bytes: 6
  %loadMem_404c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c97 = call %struct.Memory* @routine_jne_.L_404ca9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c97, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_404c97, %struct.Memory** %MEMORY

  %loadBr_404c97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c97 = icmp eq i8 %loadBr_404c97, 1
  br i1 %cmpBr_404c97, label %block_.L_404ca9, label %block_404c9d

block_404c9d:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404c9d	 Bytes: 6
  %loadMem_404c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c9d = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c9d)
  store %struct.Memory* %call_404c9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f78(%rbp)	 RIP: 404ca3	 Bytes: 6
  %loadMem_404ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ca3 = call %struct.Memory* @routine_movl__eax__MINUS0x1f78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ca3)
  store %struct.Memory* %call_404ca3, %struct.Memory** %MEMORY

  ; Code: .L_404ca9:	 RIP: 404ca9	 Bytes: 0
  br label %block_.L_404ca9
block_.L_404ca9:

  ; Code: jmpq .L_404d4b	 RIP: 404ca9	 Bytes: 5
  %loadMem_404ca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ca9 = call %struct.Memory* @routine_jmpq_.L_404d4b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ca9, i64 162, i64 5)
  store %struct.Memory* %call_404ca9, %struct.Memory** %MEMORY

  br label %block_.L_404d4b

  ; Code: .L_404cae:	 RIP: 404cae	 Bytes: 0
block_.L_404cae:

  ; Code: cmpl $0x0, -0x1f80(%rbp)	 RIP: 404cae	 Bytes: 7
  %loadMem_404cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cae = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cae)
  store %struct.Memory* %call_404cae, %struct.Memory** %MEMORY

  ; Code: jle .L_404d08	 RIP: 404cb5	 Bytes: 6
  %loadMem_404cb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cb5 = call %struct.Memory* @routine_jle_.L_404d08(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cb5, i8* %BRANCH_TAKEN, i64 83, i64 6, i64 6)
  store %struct.Memory* %call_404cb5, %struct.Memory** %MEMORY

  %loadBr_404cb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404cb5 = icmp eq i8 %loadBr_404cb5, 1
  br i1 %cmpBr_404cb5, label %block_.L_404d08, label %block_404cbb

block_404cbb:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404cbb	 Bytes: 7
  %loadMem_404cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cbb = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cbb)
  store %struct.Memory* %call_404cbb, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404cc2	 Bytes: 8
  %loadMem_404cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cc2 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cc2)
  store %struct.Memory* %call_404cc2, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %ecx	 RIP: 404cca	 Bytes: 3
  %loadMem_404cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cca = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cca)
  store %struct.Memory* %call_404cca, %struct.Memory** %MEMORY

  ; Code: jne .L_404d08	 RIP: 404ccd	 Bytes: 6
  %loadMem_404ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ccd = call %struct.Memory* @routine_jne_.L_404d08(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ccd, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_404ccd, %struct.Memory** %MEMORY

  %loadBr_404ccd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404ccd = icmp eq i8 %loadBr_404ccd, 1
  br i1 %cmpBr_404ccd, label %block_.L_404d08, label %block_404cd3

block_404cd3:
  ; Code: movl -0x1f80(%rbp), %eax	 RIP: 404cd3	 Bytes: 6
  %loadMem_404cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cd3 = call %struct.Memory* @routine_movl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cd3)
  store %struct.Memory* %call_404cd3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404cd9	 Bytes: 3
  %loadMem_404cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cd9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cd9)
  store %struct.Memory* %call_404cd9, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404cdc	 Bytes: 7
  %loadMem_404cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cdc = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cdc)
  store %struct.Memory* %call_404cdc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x670(%rbp,%rcx,4)	 RIP: 404ce3	 Bytes: 7
  %loadMem_404ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ce3 = call %struct.Memory* @routine_movl__eax__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ce3)
  store %struct.Memory* %call_404ce3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1f7c(%rbp)	 RIP: 404cea	 Bytes: 7
  %loadMem_404cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cea = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cea)
  store %struct.Memory* %call_404cea, %struct.Memory** %MEMORY

  ; Code: jne .L_404d03	 RIP: 404cf1	 Bytes: 6
  %loadMem_404cf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cf1 = call %struct.Memory* @routine_jne_.L_404d03(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cf1, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_404cf1, %struct.Memory** %MEMORY

  %loadBr_404cf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404cf1 = icmp eq i8 %loadBr_404cf1, 1
  br i1 %cmpBr_404cf1, label %block_.L_404d03, label %block_404cf7

block_404cf7:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404cf7	 Bytes: 6
  %loadMem_404cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cf7 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cf7)
  store %struct.Memory* %call_404cf7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f7c(%rbp)	 RIP: 404cfd	 Bytes: 6
  %loadMem_404cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cfd = call %struct.Memory* @routine_movl__eax__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cfd)
  store %struct.Memory* %call_404cfd, %struct.Memory** %MEMORY

  ; Code: .L_404d03:	 RIP: 404d03	 Bytes: 0
  br label %block_.L_404d03
block_.L_404d03:

  ; Code: jmpq .L_404d46	 RIP: 404d03	 Bytes: 5
  %loadMem_404d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d03 = call %struct.Memory* @routine_jmpq_.L_404d46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d03, i64 67, i64 5)
  store %struct.Memory* %call_404d03, %struct.Memory** %MEMORY

  br label %block_.L_404d46

  ; Code: .L_404d08:	 RIP: 404d08	 Bytes: 0
block_.L_404d08:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404d08	 Bytes: 7
  %loadMem_404d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d08 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d08)
  store %struct.Memory* %call_404d08, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404d0f	 Bytes: 8
  %loadMem_404d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d0f = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d0f)
  store %struct.Memory* %call_404d0f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 404d17	 Bytes: 3
  %loadMem_404d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d17 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d17)
  store %struct.Memory* %call_404d17, %struct.Memory** %MEMORY

  ; Code: jne .L_404d41	 RIP: 404d1a	 Bytes: 6
  %loadMem_404d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d1a = call %struct.Memory* @routine_jne_.L_404d41(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d1a, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_404d1a, %struct.Memory** %MEMORY

  %loadBr_404d1a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404d1a = icmp eq i8 %loadBr_404d1a, 1
  br i1 %cmpBr_404d1a, label %block_.L_404d41, label %block_404d20

block_404d20:
  ; Code: movl -0x1f80(%rbp), %eax	 RIP: 404d20	 Bytes: 6
  %loadMem_404d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d20 = call %struct.Memory* @routine_movl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d20)
  store %struct.Memory* %call_404d20, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404d26	 Bytes: 3
  %loadMem_404d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d26 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d26)
  store %struct.Memory* %call_404d26, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404d29	 Bytes: 7
  %loadMem_404d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d29 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d29)
  store %struct.Memory* %call_404d29, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x670(%rbp,%rcx,4)	 RIP: 404d30	 Bytes: 7
  %loadMem_404d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d30 = call %struct.Memory* @routine_movl__eax__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d30)
  store %struct.Memory* %call_404d30, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x1f74(%rbp)	 RIP: 404d37	 Bytes: 10
  %loadMem_404d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d37 = call %struct.Memory* @routine_movl__0x1__MINUS0x1f74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d37)
  store %struct.Memory* %call_404d37, %struct.Memory** %MEMORY

  ; Code: .L_404d41:	 RIP: 404d41	 Bytes: 0
  br label %block_.L_404d41
block_.L_404d41:

  ; Code: jmpq .L_404d46	 RIP: 404d41	 Bytes: 5
  %loadMem_404d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d41 = call %struct.Memory* @routine_jmpq_.L_404d46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d41, i64 5, i64 5)
  store %struct.Memory* %call_404d41, %struct.Memory** %MEMORY

  br label %block_.L_404d46

  ; Code: .L_404d46:	 RIP: 404d46	 Bytes: 0
block_.L_404d46:

  ; Code: jmpq .L_404d4b	 RIP: 404d46	 Bytes: 5
  %loadMem_404d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d46 = call %struct.Memory* @routine_jmpq_.L_404d4b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d46, i64 5, i64 5)
  store %struct.Memory* %call_404d46, %struct.Memory** %MEMORY

  br label %block_.L_404d4b

  ; Code: .L_404d4b:	 RIP: 404d4b	 Bytes: 0
block_.L_404d4b:

  ; Code: jmpq .L_404d63	 RIP: 404d4b	 Bytes: 5
  %loadMem_404d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d4b = call %struct.Memory* @routine_jmpq_.L_404d63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d4b, i64 24, i64 5)
  store %struct.Memory* %call_404d4b, %struct.Memory** %MEMORY

  br label %block_.L_404d63

  ; Code: .L_404d50:	 RIP: 404d50	 Bytes: 0
block_.L_404d50:

  ; Code: jmpq .L_404d55	 RIP: 404d50	 Bytes: 5
  %loadMem_404d50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d50 = call %struct.Memory* @routine_jmpq_.L_404d55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d50, i64 5, i64 5)
  store %struct.Memory* %call_404d50, %struct.Memory** %MEMORY

  br label %block_.L_404d55

  ; Code: .L_404d55:	 RIP: 404d55	 Bytes: 0
block_.L_404d55:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 404d55	 Bytes: 3
  %loadMem_404d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d55 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d55)
  store %struct.Memory* %call_404d55, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404d58	 Bytes: 3
  %loadMem_404d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d58 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d58)
  store %struct.Memory* %call_404d58, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 404d5b	 Bytes: 3
  %loadMem_404d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d5b = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d5b)
  store %struct.Memory* %call_404d5b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404bd7	 RIP: 404d5e	 Bytes: 5
  %loadMem_404d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d5e = call %struct.Memory* @routine_jmpq_.L_404bd7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d5e, i64 -391, i64 5)
  store %struct.Memory* %call_404d5e, %struct.Memory** %MEMORY

  br label %block_.L_404bd7

  ; Code: .L_404d63:	 RIP: 404d63	 Bytes: 0
block_.L_404d63:

  ; Code: jmpq .L_404d68	 RIP: 404d63	 Bytes: 5
  %loadMem_404d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d63 = call %struct.Memory* @routine_jmpq_.L_404d68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d63, i64 5, i64 5)
  store %struct.Memory* %call_404d63, %struct.Memory** %MEMORY

  br label %block_.L_404d68

  ; Code: .L_404d68:	 RIP: 404d68	 Bytes: 0
block_.L_404d68:

  ; Code: jmpq .L_404d6d	 RIP: 404d68	 Bytes: 5
  %loadMem_404d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d68 = call %struct.Memory* @routine_jmpq_.L_404d6d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d68, i64 5, i64 5)
  store %struct.Memory* %call_404d68, %struct.Memory** %MEMORY

  br label %block_.L_404d6d

  ; Code: .L_404d6d:	 RIP: 404d6d	 Bytes: 0
block_.L_404d6d:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404d6d	 Bytes: 6
  %loadMem_404d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d6d = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d6d)
  store %struct.Memory* %call_404d6d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404d73	 Bytes: 3
  %loadMem_404d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d73 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d73)
  store %struct.Memory* %call_404d73, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 404d76	 Bytes: 6
  %loadMem_404d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d76 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d76)
  store %struct.Memory* %call_404d76, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404b93	 RIP: 404d7c	 Bytes: 5
  %loadMem_404d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d7c = call %struct.Memory* @routine_jmpq_.L_404b93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d7c, i64 -489, i64 5)
  store %struct.Memory* %call_404d7c, %struct.Memory** %MEMORY

  br label %block_.L_404b93

  ; Code: .L_404d81:	 RIP: 404d81	 Bytes: 0
block_.L_404d81:

  ; Code: movl -0x1f80(%rbp), %eax	 RIP: 404d81	 Bytes: 6
  %loadMem_404d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d81 = call %struct.Memory* @routine_movl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d81)
  store %struct.Memory* %call_404d81, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404d87	 Bytes: 3
  %loadMem_404d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d87 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d87)
  store %struct.Memory* %call_404d87, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f80(%rbp)	 RIP: 404d8a	 Bytes: 6
  %loadMem_404d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d8a = call %struct.Memory* @routine_movl__eax__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d8a)
  store %struct.Memory* %call_404d8a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1f74(%rbp)	 RIP: 404d90	 Bytes: 7
  %loadMem_404d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d90 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d90)
  store %struct.Memory* %call_404d90, %struct.Memory** %MEMORY

  ; Code: jne .L_404b7f	 RIP: 404d97	 Bytes: 6
  %loadMem_404d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d97 = call %struct.Memory* @routine_jne_.L_404b7f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d97, i8* %BRANCH_TAKEN, i64 -536, i64 6, i64 6)
  store %struct.Memory* %call_404d97, %struct.Memory** %MEMORY

  %loadBr_404d97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404d97 = icmp eq i8 %loadBr_404d97, 1
  br i1 %cmpBr_404d97, label %block_.L_404b7f, label %block_404d9d

block_404d9d:
  ; Code: cmpq $0x0, -0x20(%rbp)	 RIP: 404d9d	 Bytes: 5
  %loadMem_404d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d9d = call %struct.Memory* @routine_cmpq__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d9d)
  store %struct.Memory* %call_404d9d, %struct.Memory** %MEMORY

  ; Code: je .L_404e40	 RIP: 404da2	 Bytes: 6
  %loadMem_404da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404da2 = call %struct.Memory* @routine_je_.L_404e40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404da2, i8* %BRANCH_TAKEN, i64 158, i64 6, i64 6)
  store %struct.Memory* %call_404da2, %struct.Memory** %MEMORY

  %loadBr_404da2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404da2 = icmp eq i8 %loadBr_404da2, 1
  br i1 %cmpBr_404da2, label %block_.L_404e40, label %block_404da8

block_404da8:
  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 404da8	 Bytes: 10
  %loadMem_404da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404da8 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404da8)
  store %struct.Memory* %call_404da8, %struct.Memory** %MEMORY

  ; Code: .L_404db2:	 RIP: 404db2	 Bytes: 0
  br label %block_.L_404db2
block_.L_404db2:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 404db2	 Bytes: 10
  %loadMem_404db2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404db2 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404db2)
  store %struct.Memory* %call_404db2, %struct.Memory** %MEMORY

  ; Code: jge .L_404e3b	 RIP: 404dbc	 Bytes: 6
  %loadMem_404dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dbc = call %struct.Memory* @routine_jge_.L_404e3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dbc, i8* %BRANCH_TAKEN, i64 127, i64 6, i64 6)
  store %struct.Memory* %call_404dbc, %struct.Memory** %MEMORY

  %loadBr_404dbc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404dbc = icmp eq i8 %loadBr_404dbc, 1
  br i1 %cmpBr_404dbc, label %block_.L_404e3b, label %block_404dc2

block_404dc2:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404dc2	 Bytes: 7
  %loadMem_404dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dc2 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dc2)
  store %struct.Memory* %call_404dc2, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404dc9	 Bytes: 8
  %loadMem_404dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dc9 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dc9)
  store %struct.Memory* %call_404dc9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 404dd1	 Bytes: 3
  %loadMem_404dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd1 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd1)
  store %struct.Memory* %call_404dd1, %struct.Memory** %MEMORY

  ; Code: jne .L_404ddf	 RIP: 404dd4	 Bytes: 6
  %loadMem_404dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd4 = call %struct.Memory* @routine_jne_.L_404ddf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_404dd4, %struct.Memory** %MEMORY

  %loadBr_404dd4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404dd4 = icmp eq i8 %loadBr_404dd4, 1
  br i1 %cmpBr_404dd4, label %block_.L_404ddf, label %block_404dda

block_404dda:
  ; Code: jmpq .L_404e27	 RIP: 404dda	 Bytes: 5
  %loadMem_404dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dda = call %struct.Memory* @routine_jmpq_.L_404e27(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dda, i64 77, i64 5)
  store %struct.Memory* %call_404dda, %struct.Memory** %MEMORY

  br label %block_.L_404e27

  ; Code: .L_404ddf:	 RIP: 404ddf	 Bytes: 0
block_.L_404ddf:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404ddf	 Bytes: 7
  %loadMem_404ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ddf = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ddf)
  store %struct.Memory* %call_404ddf, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, -0x670(%rbp,%rax,4)	 RIP: 404de6	 Bytes: 8
  %loadMem_404de6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404de6 = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404de6)
  store %struct.Memory* %call_404de6, %struct.Memory** %MEMORY

  ; Code: jne .L_404e0b	 RIP: 404dee	 Bytes: 6
  %loadMem_404dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dee = call %struct.Memory* @routine_jne_.L_404e0b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dee, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_404dee, %struct.Memory** %MEMORY

  %loadBr_404dee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404dee = icmp eq i8 %loadBr_404dee, 1
  br i1 %cmpBr_404dee, label %block_.L_404e0b, label %block_404df4

block_404df4:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 404df4	 Bytes: 4
  %loadMem_404df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404df4 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404df4)
  store %struct.Memory* %call_404df4, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404df8	 Bytes: 7
  %loadMem_404df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404df8 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404df8)
  store %struct.Memory* %call_404df8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax,%rcx,4)	 RIP: 404dff	 Bytes: 7
  %loadMem_404dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dff = call %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dff)
  store %struct.Memory* %call_404dff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404e1d	 RIP: 404e06	 Bytes: 5
  %loadMem_404e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e06 = call %struct.Memory* @routine_jmpq_.L_404e1d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e06, i64 23, i64 5)
  store %struct.Memory* %call_404e06, %struct.Memory** %MEMORY

  br label %block_.L_404e1d

  ; Code: .L_404e0b:	 RIP: 404e0b	 Bytes: 0
block_.L_404e0b:

  ; Code: movq -0x20(%rbp), %rax	 RIP: 404e0b	 Bytes: 4
  %loadMem_404e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e0b = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e0b)
  store %struct.Memory* %call_404e0b, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404e0f	 Bytes: 7
  %loadMem_404e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e0f = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e0f)
  store %struct.Memory* %call_404e0f, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax,%rcx,4)	 RIP: 404e16	 Bytes: 7
  %loadMem_404e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e16 = call %struct.Memory* @routine_movl__0x1____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e16)
  store %struct.Memory* %call_404e16, %struct.Memory** %MEMORY

  ; Code: .L_404e1d:	 RIP: 404e1d	 Bytes: 0
  br label %block_.L_404e1d
block_.L_404e1d:

  ; Code: jmpq .L_404e22	 RIP: 404e1d	 Bytes: 5
  %loadMem_404e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e1d = call %struct.Memory* @routine_jmpq_.L_404e22(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e1d, i64 5, i64 5)
  store %struct.Memory* %call_404e1d, %struct.Memory** %MEMORY

  br label %block_.L_404e22

  ; Code: .L_404e22:	 RIP: 404e22	 Bytes: 0
block_.L_404e22:

  ; Code: jmpq .L_404e27	 RIP: 404e22	 Bytes: 5
  %loadMem_404e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e22 = call %struct.Memory* @routine_jmpq_.L_404e27(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e22, i64 5, i64 5)
  store %struct.Memory* %call_404e22, %struct.Memory** %MEMORY

  br label %block_.L_404e27

  ; Code: .L_404e27:	 RIP: 404e27	 Bytes: 0
block_.L_404e27:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 404e27	 Bytes: 6
  %loadMem_404e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e27 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e27)
  store %struct.Memory* %call_404e27, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404e2d	 Bytes: 3
  %loadMem_404e2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e2d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e2d)
  store %struct.Memory* %call_404e2d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 404e30	 Bytes: 6
  %loadMem_404e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e30 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e30)
  store %struct.Memory* %call_404e30, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404db2	 RIP: 404e36	 Bytes: 5
  %loadMem_404e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e36 = call %struct.Memory* @routine_jmpq_.L_404db2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e36, i64 -132, i64 5)
  store %struct.Memory* %call_404e36, %struct.Memory** %MEMORY

  br label %block_.L_404db2

  ; Code: .L_404e3b:	 RIP: 404e3b	 Bytes: 0
block_.L_404e3b:

  ; Code: jmpq .L_404e40	 RIP: 404e3b	 Bytes: 5
  %loadMem_404e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e3b = call %struct.Memory* @routine_jmpq_.L_404e40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e3b, i64 5, i64 5)
  store %struct.Memory* %call_404e3b, %struct.Memory** %MEMORY

  br label %block_.L_404e40

  ; Code: .L_404e40:	 RIP: 404e40	 Bytes: 0
block_.L_404e40:

  ; Code: movl 0xab0f24, %eax	 RIP: 404e40	 Bytes: 7
  %loadMem_404e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e40 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e40)
  store %struct.Memory* %call_404e40, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 404e47	 Bytes: 5
  %loadMem_404e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e47 = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e47)
  store %struct.Memory* %call_404e47, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 404e4c	 Bytes: 3
  %loadMem_404e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e4c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e4c)
  store %struct.Memory* %call_404e4c, %struct.Memory** %MEMORY

  ; Code: je .L_405137	 RIP: 404e4f	 Bytes: 6
  %loadMem_404e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e4f = call %struct.Memory* @routine_je_.L_405137(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e4f, i8* %BRANCH_TAKEN, i64 744, i64 6, i64 6)
  store %struct.Memory* %call_404e4f, %struct.Memory** %MEMORY

  %loadBr_404e4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e4f = icmp eq i8 %loadBr_404e4f, 1
  br i1 %cmpBr_404e4f, label %block_.L_405137, label %block_404e55

block_404e55:
  ; Code: movl $0x0, -0x1f98(%rbp)	 RIP: 404e55	 Bytes: 10
  %loadMem_404e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e55 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e55)
  store %struct.Memory* %call_404e55, %struct.Memory** %MEMORY

  ; Code: .L_404e5f:	 RIP: 404e5f	 Bytes: 0
  br label %block_.L_404e5f
block_.L_404e5f:

  ; Code: movl -0x1f98(%rbp), %eax	 RIP: 404e5f	 Bytes: 6
  %loadMem_404e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e5f = call %struct.Memory* @routine_movl_MINUS0x1f98__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e5f)
  store %struct.Memory* %call_404e5f, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 404e65	 Bytes: 7
  %loadMem_404e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e65 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e65)
  store %struct.Memory* %call_404e65, %struct.Memory** %MEMORY

  ; Code: jge .L_40505c	 RIP: 404e6c	 Bytes: 6
  %loadMem_404e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e6c = call %struct.Memory* @routine_jge_.L_40505c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e6c, i8* %BRANCH_TAKEN, i64 496, i64 6, i64 6)
  store %struct.Memory* %call_404e6c, %struct.Memory** %MEMORY

  %loadBr_404e6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e6c = icmp eq i8 %loadBr_404e6c, 1
  br i1 %cmpBr_404e6c, label %block_.L_40505c, label %block_404e72

block_404e72:
  ; Code: movl $0x0, -0x1f9c(%rbp)	 RIP: 404e72	 Bytes: 10
  %loadMem_404e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e72 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e72)
  store %struct.Memory* %call_404e72, %struct.Memory** %MEMORY

  ; Code: .L_404e7c:	 RIP: 404e7c	 Bytes: 0
  br label %block_.L_404e7c
block_.L_404e7c:

  ; Code: movl -0x1f9c(%rbp), %eax	 RIP: 404e7c	 Bytes: 6
  %loadMem_404e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e7c = call %struct.Memory* @routine_movl_MINUS0x1f9c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e7c)
  store %struct.Memory* %call_404e7c, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 404e82	 Bytes: 7
  %loadMem_404e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e82 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e82)
  store %struct.Memory* %call_404e82, %struct.Memory** %MEMORY

  ; Code: jge .L_405031	 RIP: 404e89	 Bytes: 6
  %loadMem_404e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e89 = call %struct.Memory* @routine_jge_.L_405031(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e89, i8* %BRANCH_TAKEN, i64 424, i64 6, i64 6)
  store %struct.Memory* %call_404e89, %struct.Memory** %MEMORY

  %loadBr_404e89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e89 = icmp eq i8 %loadBr_404e89, 1
  br i1 %cmpBr_404e89, label %block_.L_405031, label %block_404e8f

block_404e8f:
  ; Code: imull $0x14, -0x1f98(%rbp), %eax	 RIP: 404e8f	 Bytes: 7
  %loadMem_404e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e8f = call %struct.Memory* @routine_imull__0x14__MINUS0x1f98__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e8f)
  store %struct.Memory* %call_404e8f, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 404e96	 Bytes: 3
  %loadMem_404e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e96 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e96)
  store %struct.Memory* %call_404e96, %struct.Memory** %MEMORY

  ; Code: addl -0x1f9c(%rbp), %eax	 RIP: 404e99	 Bytes: 6
  %loadMem_404e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e99 = call %struct.Memory* @routine_addl_MINUS0x1f9c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e99)
  store %struct.Memory* %call_404e99, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 404e9f	 Bytes: 6
  %loadMem_404e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e9f = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e9f)
  store %struct.Memory* %call_404e9f, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 404ea5	 Bytes: 7
  %loadMem_404ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ea5 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ea5)
  store %struct.Memory* %call_404ea5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rcx,4)	 RIP: 404eac	 Bytes: 8
  %loadMem_404eac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eac = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eac)
  store %struct.Memory* %call_404eac, %struct.Memory** %MEMORY

  ; Code: jle .L_404eec	 RIP: 404eb4	 Bytes: 6
  %loadMem_404eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eb4 = call %struct.Memory* @routine_jle_.L_404eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eb4, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_404eb4, %struct.Memory** %MEMORY

  %loadBr_404eb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404eb4 = icmp eq i8 %loadBr_404eb4, 1
  br i1 %cmpBr_404eb4, label %block_.L_404eec, label %block_404eba

block_404eba:
  ; Code: movq $0x57f1e3, %rsi	 RIP: 404eba	 Bytes: 10
  %loadMem_404eba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eba = call %struct.Memory* @routine_movq__0x57f1e3___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eba)
  store %struct.Memory* %call_404eba, %struct.Memory** %MEMORY

  ; Code: movq 0x99c0a0, %rdi	 RIP: 404ec4	 Bytes: 8
  %loadMem_404ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ec4 = call %struct.Memory* @routine_movq_0x99c0a0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ec4)
  store %struct.Memory* %call_404ec4, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404ecc	 Bytes: 7
  %loadMem_404ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ecc = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ecc)
  store %struct.Memory* %call_404ecc, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %edx	 RIP: 404ed3	 Bytes: 7
  %loadMem_404ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ed3 = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ed3)
  store %struct.Memory* %call_404ed3, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404eda	 Bytes: 2
  %loadMem_404eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eda = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eda)
  store %struct.Memory* %call_404eda, %struct.Memory** %MEMORY

  ; Code: callq .fprintf_plt	 RIP: 404edc	 Bytes: 5
  %loadMem1_404edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404edc = call %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404edc, i64 -15884, i64 5, i64 5)
  store %struct.Memory* %call1_404edc, %struct.Memory** %MEMORY

  %loadMem2_404edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404edc = load i64, i64* %3
  %call2_404edc = call %struct.Memory* @ext_fprintf(%struct.State* %0, i64  %loadPC_404edc, %struct.Memory* %loadMem2_404edc)
  store %struct.Memory* %call2_404edc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a90(%rbp)	 RIP: 404ee1	 Bytes: 6
  %loadMem_404ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ee1 = call %struct.Memory* @routine_movl__eax__MINUS0x2a90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ee1)
  store %struct.Memory* %call_404ee1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405018	 RIP: 404ee7	 Bytes: 5
  %loadMem_404ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ee7 = call %struct.Memory* @routine_jmpq_.L_405018(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ee7, i64 305, i64 5)
  store %struct.Memory* %call_404ee7, %struct.Memory** %MEMORY

  br label %block_.L_405018

  ; Code: .L_404eec:	 RIP: 404eec	 Bytes: 0
block_.L_404eec:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404eec	 Bytes: 7
  %loadMem_404eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eec = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eec)
  store %struct.Memory* %call_404eec, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rax,4)	 RIP: 404ef3	 Bytes: 8
  %loadMem_404ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ef3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ef3)
  store %struct.Memory* %call_404ef3, %struct.Memory** %MEMORY

  ; Code: jne .L_404f8a	 RIP: 404efb	 Bytes: 6
  %loadMem_404efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404efb = call %struct.Memory* @routine_jne_.L_404f8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404efb, i8* %BRANCH_TAKEN, i64 143, i64 6, i64 6)
  store %struct.Memory* %call_404efb, %struct.Memory** %MEMORY

  %loadBr_404efb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404efb = icmp eq i8 %loadBr_404efb, 1
  br i1 %cmpBr_404efb, label %block_.L_404f8a, label %block_404f01

block_404f01:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404f01	 Bytes: 7
  %loadMem_404f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f01 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f01)
  store %struct.Memory* %call_404f01, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404f08	 Bytes: 8
  %loadMem_404f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f08 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f08)
  store %struct.Memory* %call_404f08, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 404f10	 Bytes: 3
  %loadMem_404f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f10 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f10)
  store %struct.Memory* %call_404f10, %struct.Memory** %MEMORY

  ; Code: jne .L_404f35	 RIP: 404f13	 Bytes: 6
  %loadMem_404f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f13 = call %struct.Memory* @routine_jne_.L_404f35(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f13, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_404f13, %struct.Memory** %MEMORY

  %loadBr_404f13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f13 = icmp eq i8 %loadBr_404f13, 1
  br i1 %cmpBr_404f13, label %block_.L_404f35, label %block_404f19

block_404f19:
  ; Code: movq $0x579dc5, %rdi	 RIP: 404f19	 Bytes: 10
  %loadMem_404f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f19 = call %struct.Memory* @routine_movq__0x579dc5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f19)
  store %struct.Memory* %call_404f19, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404f23	 Bytes: 2
  %loadMem_404f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f23 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f23)
  store %struct.Memory* %call_404f23, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404f25	 Bytes: 5
  %loadMem1_404f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404f25 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404f25, i64 315019, i64 5, i64 5)
  store %struct.Memory* %call1_404f25, %struct.Memory** %MEMORY

  %loadMem2_404f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404f25 = load i64, i64* %3
  %call2_404f25 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404f25, %struct.Memory* %loadMem2_404f25)
  store %struct.Memory* %call2_404f25, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a94(%rbp)	 RIP: 404f2a	 Bytes: 6
  %loadMem_404f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f2a = call %struct.Memory* @routine_movl__eax__MINUS0x2a94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f2a)
  store %struct.Memory* %call_404f2a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404f85	 RIP: 404f30	 Bytes: 5
  %loadMem_404f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f30 = call %struct.Memory* @routine_jmpq_.L_404f85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f30, i64 85, i64 5)
  store %struct.Memory* %call_404f30, %struct.Memory** %MEMORY

  br label %block_.L_404f85

  ; Code: .L_404f35:	 RIP: 404f35	 Bytes: 0
block_.L_404f35:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404f35	 Bytes: 7
  %loadMem_404f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f35 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f35)
  store %struct.Memory* %call_404f35, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404f3c	 Bytes: 8
  %loadMem_404f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f3c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f3c)
  store %struct.Memory* %call_404f3c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 404f44	 Bytes: 3
  %loadMem_404f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f44 = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f44)
  store %struct.Memory* %call_404f44, %struct.Memory** %MEMORY

  ; Code: jne .L_404f69	 RIP: 404f47	 Bytes: 6
  %loadMem_404f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f47 = call %struct.Memory* @routine_jne_.L_404f69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f47, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_404f47, %struct.Memory** %MEMORY

  %loadBr_404f47 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f47 = icmp eq i8 %loadBr_404f47, 1
  br i1 %cmpBr_404f47, label %block_.L_404f69, label %block_404f4d

block_404f4d:
  ; Code: movq $0x579dc8, %rdi	 RIP: 404f4d	 Bytes: 10
  %loadMem_404f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f4d = call %struct.Memory* @routine_movq__0x579dc8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f4d)
  store %struct.Memory* %call_404f4d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404f57	 Bytes: 2
  %loadMem_404f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f57 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f57)
  store %struct.Memory* %call_404f57, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404f59	 Bytes: 5
  %loadMem1_404f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404f59 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404f59, i64 314967, i64 5, i64 5)
  store %struct.Memory* %call1_404f59, %struct.Memory** %MEMORY

  %loadMem2_404f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404f59 = load i64, i64* %3
  %call2_404f59 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404f59, %struct.Memory* %loadMem2_404f59)
  store %struct.Memory* %call2_404f59, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a98(%rbp)	 RIP: 404f5e	 Bytes: 6
  %loadMem_404f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f5e = call %struct.Memory* @routine_movl__eax__MINUS0x2a98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f5e)
  store %struct.Memory* %call_404f5e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404f80	 RIP: 404f64	 Bytes: 5
  %loadMem_404f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f64 = call %struct.Memory* @routine_jmpq_.L_404f80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f64, i64 28, i64 5)
  store %struct.Memory* %call_404f64, %struct.Memory** %MEMORY

  br label %block_.L_404f80

  ; Code: .L_404f69:	 RIP: 404f69	 Bytes: 0
block_.L_404f69:

  ; Code: movq $0x579dcb, %rdi	 RIP: 404f69	 Bytes: 10
  %loadMem_404f69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f69 = call %struct.Memory* @routine_movq__0x579dcb___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f69)
  store %struct.Memory* %call_404f69, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404f73	 Bytes: 2
  %loadMem_404f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f73 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f73)
  store %struct.Memory* %call_404f73, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404f75	 Bytes: 5
  %loadMem1_404f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404f75 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404f75, i64 314939, i64 5, i64 5)
  store %struct.Memory* %call1_404f75, %struct.Memory** %MEMORY

  %loadMem2_404f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404f75 = load i64, i64* %3
  %call2_404f75 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404f75, %struct.Memory* %loadMem2_404f75)
  store %struct.Memory* %call2_404f75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a9c(%rbp)	 RIP: 404f7a	 Bytes: 6
  %loadMem_404f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f7a = call %struct.Memory* @routine_movl__eax__MINUS0x2a9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f7a)
  store %struct.Memory* %call_404f7a, %struct.Memory** %MEMORY

  ; Code: .L_404f80:	 RIP: 404f80	 Bytes: 0
  br label %block_.L_404f80
block_.L_404f80:

  ; Code: jmpq .L_404f85	 RIP: 404f80	 Bytes: 5
  %loadMem_404f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f80 = call %struct.Memory* @routine_jmpq_.L_404f85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f80, i64 5, i64 5)
  store %struct.Memory* %call_404f80, %struct.Memory** %MEMORY

  br label %block_.L_404f85

  ; Code: .L_404f85:	 RIP: 404f85	 Bytes: 0
block_.L_404f85:

  ; Code: jmpq .L_405013	 RIP: 404f85	 Bytes: 5
  %loadMem_404f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f85 = call %struct.Memory* @routine_jmpq_.L_405013(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f85, i64 142, i64 5)
  store %struct.Memory* %call_404f85, %struct.Memory** %MEMORY

  br label %block_.L_405013

  ; Code: .L_404f8a:	 RIP: 404f8a	 Bytes: 0
block_.L_404f8a:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404f8a	 Bytes: 7
  %loadMem_404f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f8a = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f8a)
  store %struct.Memory* %call_404f8a, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404f91	 Bytes: 8
  %loadMem_404f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f91 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f91)
  store %struct.Memory* %call_404f91, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 404f99	 Bytes: 3
  %loadMem_404f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f99 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f99)
  store %struct.Memory* %call_404f99, %struct.Memory** %MEMORY

  ; Code: jne .L_404fbe	 RIP: 404f9c	 Bytes: 6
  %loadMem_404f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f9c = call %struct.Memory* @routine_jne_.L_404fbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f9c, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_404f9c, %struct.Memory** %MEMORY

  %loadBr_404f9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f9c = icmp eq i8 %loadBr_404f9c, 1
  br i1 %cmpBr_404f9c, label %block_.L_404fbe, label %block_404fa2

block_404fa2:
  ; Code: movq $0x579dce, %rdi	 RIP: 404fa2	 Bytes: 10
  %loadMem_404fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fa2 = call %struct.Memory* @routine_movq__0x579dce___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fa2)
  store %struct.Memory* %call_404fa2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404fac	 Bytes: 2
  %loadMem_404fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fac = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fac)
  store %struct.Memory* %call_404fac, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404fae	 Bytes: 5
  %loadMem1_404fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404fae = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404fae, i64 314882, i64 5, i64 5)
  store %struct.Memory* %call1_404fae, %struct.Memory** %MEMORY

  %loadMem2_404fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404fae = load i64, i64* %3
  %call2_404fae = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404fae, %struct.Memory* %loadMem2_404fae)
  store %struct.Memory* %call2_404fae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2aa0(%rbp)	 RIP: 404fb3	 Bytes: 6
  %loadMem_404fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fb3 = call %struct.Memory* @routine_movl__eax__MINUS0x2aa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fb3)
  store %struct.Memory* %call_404fb3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40500e	 RIP: 404fb9	 Bytes: 5
  %loadMem_404fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fb9 = call %struct.Memory* @routine_jmpq_.L_40500e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fb9, i64 85, i64 5)
  store %struct.Memory* %call_404fb9, %struct.Memory** %MEMORY

  br label %block_.L_40500e

  ; Code: .L_404fbe:	 RIP: 404fbe	 Bytes: 0
block_.L_404fbe:

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 404fbe	 Bytes: 7
  %loadMem_404fbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fbe = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fbe)
  store %struct.Memory* %call_404fbe, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 404fc5	 Bytes: 8
  %loadMem_404fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fc5 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fc5)
  store %struct.Memory* %call_404fc5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %ecx	 RIP: 404fcd	 Bytes: 3
  %loadMem_404fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fcd = call %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fcd)
  store %struct.Memory* %call_404fcd, %struct.Memory** %MEMORY

  ; Code: jne .L_404ff2	 RIP: 404fd0	 Bytes: 6
  %loadMem_404fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fd0 = call %struct.Memory* @routine_jne_.L_404ff2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fd0, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_404fd0, %struct.Memory** %MEMORY

  %loadBr_404fd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404fd0 = icmp eq i8 %loadBr_404fd0, 1
  br i1 %cmpBr_404fd0, label %block_.L_404ff2, label %block_404fd6

block_404fd6:
  ; Code: movq $0x579dd1, %rdi	 RIP: 404fd6	 Bytes: 10
  %loadMem_404fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fd6 = call %struct.Memory* @routine_movq__0x579dd1___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fd6)
  store %struct.Memory* %call_404fd6, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404fe0	 Bytes: 2
  %loadMem_404fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fe0 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fe0)
  store %struct.Memory* %call_404fe0, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404fe2	 Bytes: 5
  %loadMem1_404fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404fe2 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404fe2, i64 314830, i64 5, i64 5)
  store %struct.Memory* %call1_404fe2, %struct.Memory** %MEMORY

  %loadMem2_404fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404fe2 = load i64, i64* %3
  %call2_404fe2 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404fe2, %struct.Memory* %loadMem2_404fe2)
  store %struct.Memory* %call2_404fe2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2aa4(%rbp)	 RIP: 404fe7	 Bytes: 6
  %loadMem_404fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fe7 = call %struct.Memory* @routine_movl__eax__MINUS0x2aa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fe7)
  store %struct.Memory* %call_404fe7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405009	 RIP: 404fed	 Bytes: 5
  %loadMem_404fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fed = call %struct.Memory* @routine_jmpq_.L_405009(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fed, i64 28, i64 5)
  store %struct.Memory* %call_404fed, %struct.Memory** %MEMORY

  br label %block_.L_405009

  ; Code: .L_404ff2:	 RIP: 404ff2	 Bytes: 0
block_.L_404ff2:

  ; Code: movq $0x579dd4, %rdi	 RIP: 404ff2	 Bytes: 10
  %loadMem_404ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ff2 = call %struct.Memory* @routine_movq__0x579dd4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ff2)
  store %struct.Memory* %call_404ff2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 404ffc	 Bytes: 2
  %loadMem_404ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ffc = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ffc)
  store %struct.Memory* %call_404ffc, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 404ffe	 Bytes: 5
  %loadMem1_404ffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404ffe = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404ffe, i64 314802, i64 5, i64 5)
  store %struct.Memory* %call1_404ffe, %struct.Memory** %MEMORY

  %loadMem2_404ffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404ffe = load i64, i64* %3
  %call2_404ffe = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_404ffe, %struct.Memory* %loadMem2_404ffe)
  store %struct.Memory* %call2_404ffe, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2aa8(%rbp)	 RIP: 405003	 Bytes: 6
  %loadMem_405003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405003 = call %struct.Memory* @routine_movl__eax__MINUS0x2aa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405003)
  store %struct.Memory* %call_405003, %struct.Memory** %MEMORY

  ; Code: .L_405009:	 RIP: 405009	 Bytes: 0
  br label %block_.L_405009
block_.L_405009:

  ; Code: jmpq .L_40500e	 RIP: 405009	 Bytes: 5
  %loadMem_405009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405009 = call %struct.Memory* @routine_jmpq_.L_40500e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405009, i64 5, i64 5)
  store %struct.Memory* %call_405009, %struct.Memory** %MEMORY

  br label %block_.L_40500e

  ; Code: .L_40500e:	 RIP: 40500e	 Bytes: 0
block_.L_40500e:

  ; Code: jmpq .L_405013	 RIP: 40500e	 Bytes: 5
  %loadMem_40500e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40500e = call %struct.Memory* @routine_jmpq_.L_405013(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40500e, i64 5, i64 5)
  store %struct.Memory* %call_40500e, %struct.Memory** %MEMORY

  br label %block_.L_405013

  ; Code: .L_405013:	 RIP: 405013	 Bytes: 0
block_.L_405013:

  ; Code: jmpq .L_405018	 RIP: 405013	 Bytes: 5
  %loadMem_405013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405013 = call %struct.Memory* @routine_jmpq_.L_405018(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405013, i64 5, i64 5)
  store %struct.Memory* %call_405013, %struct.Memory** %MEMORY

  br label %block_.L_405018

  ; Code: .L_405018:	 RIP: 405018	 Bytes: 0
block_.L_405018:

  ; Code: jmpq .L_40501d	 RIP: 405018	 Bytes: 5
  %loadMem_405018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405018 = call %struct.Memory* @routine_jmpq_.L_40501d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405018, i64 5, i64 5)
  store %struct.Memory* %call_405018, %struct.Memory** %MEMORY

  br label %block_.L_40501d

  ; Code: .L_40501d:	 RIP: 40501d	 Bytes: 0
block_.L_40501d:

  ; Code: movl -0x1f9c(%rbp), %eax	 RIP: 40501d	 Bytes: 6
  %loadMem_40501d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40501d = call %struct.Memory* @routine_movl_MINUS0x1f9c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40501d)
  store %struct.Memory* %call_40501d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405023	 Bytes: 3
  %loadMem_405023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405023 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405023)
  store %struct.Memory* %call_405023, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f9c(%rbp)	 RIP: 405026	 Bytes: 6
  %loadMem_405026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405026 = call %struct.Memory* @routine_movl__eax__MINUS0x1f9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405026)
  store %struct.Memory* %call_405026, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404e7c	 RIP: 40502c	 Bytes: 5
  %loadMem_40502c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40502c = call %struct.Memory* @routine_jmpq_.L_404e7c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40502c, i64 -432, i64 5)
  store %struct.Memory* %call_40502c, %struct.Memory** %MEMORY

  br label %block_.L_404e7c

  ; Code: .L_405031:	 RIP: 405031	 Bytes: 0
block_.L_405031:

  ; Code: movq $0x586073, %rdi	 RIP: 405031	 Bytes: 10
  %loadMem_405031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405031 = call %struct.Memory* @routine_movq__0x586073___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405031)
  store %struct.Memory* %call_405031, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 40503b	 Bytes: 2
  %loadMem_40503b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40503b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40503b)
  store %struct.Memory* %call_40503b, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 40503d	 Bytes: 5
  %loadMem1_40503d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40503d = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40503d, i64 314739, i64 5, i64 5)
  store %struct.Memory* %call1_40503d, %struct.Memory** %MEMORY

  %loadMem2_40503d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40503d = load i64, i64* %3
  %call2_40503d = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_40503d, %struct.Memory* %loadMem2_40503d)
  store %struct.Memory* %call2_40503d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2aac(%rbp)	 RIP: 405042	 Bytes: 6
  %loadMem_405042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405042 = call %struct.Memory* @routine_movl__eax__MINUS0x2aac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405042)
  store %struct.Memory* %call_405042, %struct.Memory** %MEMORY

  ; Code: movl -0x1f98(%rbp), %eax	 RIP: 405048	 Bytes: 6
  %loadMem_405048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405048 = call %struct.Memory* @routine_movl_MINUS0x1f98__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405048)
  store %struct.Memory* %call_405048, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40504e	 Bytes: 3
  %loadMem_40504e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40504e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40504e)
  store %struct.Memory* %call_40504e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f98(%rbp)	 RIP: 405051	 Bytes: 6
  %loadMem_405051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405051 = call %struct.Memory* @routine_movl__eax__MINUS0x1f98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405051)
  store %struct.Memory* %call_405051, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404e5f	 RIP: 405057	 Bytes: 5
  %loadMem_405057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405057 = call %struct.Memory* @routine_jmpq_.L_404e5f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405057, i64 -504, i64 5)
  store %struct.Memory* %call_405057, %struct.Memory** %MEMORY

  br label %block_.L_404e5f

  ; Code: .L_40505c:	 RIP: 40505c	 Bytes: 0
block_.L_40505c:

  ; Code: movq $0x579dd7, %rdi	 RIP: 40505c	 Bytes: 10
  %loadMem_40505c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40505c = call %struct.Memory* @routine_movq__0x579dd7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40505c)
  store %struct.Memory* %call_40505c, %struct.Memory** %MEMORY

  ; Code: movl -0x1f78(%rbp), %esi	 RIP: 405066	 Bytes: 6
  %loadMem_405066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405066 = call %struct.Memory* @routine_movl_MINUS0x1f78__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405066)
  store %struct.Memory* %call_405066, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 40506c	 Bytes: 2
  %loadMem_40506c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40506c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40506c)
  store %struct.Memory* %call_40506c, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 40506e	 Bytes: 5
  %loadMem1_40506e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40506e = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40506e, i64 314690, i64 5, i64 5)
  store %struct.Memory* %call1_40506e, %struct.Memory** %MEMORY

  %loadMem2_40506e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40506e = load i64, i64* %3
  %call2_40506e = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_40506e, %struct.Memory* %loadMem2_40506e)
  store %struct.Memory* %call2_40506e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1f78(%rbp)	 RIP: 405073	 Bytes: 7
  %loadMem_405073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405073 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405073)
  store %struct.Memory* %call_405073, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ab0(%rbp)	 RIP: 40507a	 Bytes: 6
  %loadMem_40507a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40507a = call %struct.Memory* @routine_movl__eax__MINUS0x2ab0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40507a)
  store %struct.Memory* %call_40507a, %struct.Memory** %MEMORY

  ; Code: je .L_4050b0	 RIP: 405080	 Bytes: 6
  %loadMem_405080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405080 = call %struct.Memory* @routine_je_.L_4050b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405080, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_405080, %struct.Memory** %MEMORY

  %loadBr_405080 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405080 = icmp eq i8 %loadBr_405080, 1
  br i1 %cmpBr_405080, label %block_.L_4050b0, label %block_405086

block_405086:
  ; Code: movq $0x579dec, %rdi	 RIP: 405086	 Bytes: 10
  %loadMem_405086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405086 = call %struct.Memory* @routine_movq__0x579dec___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405086)
  store %struct.Memory* %call_405086, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f78(%rbp), %rax	 RIP: 405090	 Bytes: 7
  %loadMem_405090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405090 = call %struct.Memory* @routine_movslq_MINUS0x1f78__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405090)
  store %struct.Memory* %call_405090, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %esi	 RIP: 405097	 Bytes: 7
  %loadMem_405097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405097 = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405097)
  store %struct.Memory* %call_405097, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 40509e	 Bytes: 2
  %loadMem_40509e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40509e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40509e)
  store %struct.Memory* %call_40509e, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4050a0	 Bytes: 5
  %loadMem1_4050a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4050a0 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4050a0, i64 314640, i64 5, i64 5)
  store %struct.Memory* %call1_4050a0, %struct.Memory** %MEMORY

  %loadMem2_4050a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4050a0 = load i64, i64* %3
  %call2_4050a0 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4050a0, %struct.Memory* %loadMem2_4050a0)
  store %struct.Memory* %call2_4050a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ab4(%rbp)	 RIP: 4050a5	 Bytes: 6
  %loadMem_4050a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050a5 = call %struct.Memory* @routine_movl__eax__MINUS0x2ab4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050a5)
  store %struct.Memory* %call_4050a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4050c7	 RIP: 4050ab	 Bytes: 5
  %loadMem_4050ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050ab = call %struct.Memory* @routine_jmpq_.L_4050c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050ab, i64 28, i64 5)
  store %struct.Memory* %call_4050ab, %struct.Memory** %MEMORY

  br label %block_.L_4050c7

  ; Code: .L_4050b0:	 RIP: 4050b0	 Bytes: 0
block_.L_4050b0:

  ; Code: movq $0x586073, %rdi	 RIP: 4050b0	 Bytes: 10
  %loadMem_4050b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050b0 = call %struct.Memory* @routine_movq__0x586073___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050b0)
  store %struct.Memory* %call_4050b0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4050ba	 Bytes: 2
  %loadMem_4050ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050ba = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050ba)
  store %struct.Memory* %call_4050ba, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4050bc	 Bytes: 5
  %loadMem1_4050bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4050bc = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4050bc, i64 314612, i64 5, i64 5)
  store %struct.Memory* %call1_4050bc, %struct.Memory** %MEMORY

  %loadMem2_4050bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4050bc = load i64, i64* %3
  %call2_4050bc = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4050bc, %struct.Memory* %loadMem2_4050bc)
  store %struct.Memory* %call2_4050bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ab8(%rbp)	 RIP: 4050c1	 Bytes: 6
  %loadMem_4050c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050c1 = call %struct.Memory* @routine_movl__eax__MINUS0x2ab8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050c1)
  store %struct.Memory* %call_4050c1, %struct.Memory** %MEMORY

  ; Code: .L_4050c7:	 RIP: 4050c7	 Bytes: 0
  br label %block_.L_4050c7
block_.L_4050c7:

  ; Code: movq $0x579dfb, %rdi	 RIP: 4050c7	 Bytes: 10
  %loadMem_4050c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050c7 = call %struct.Memory* @routine_movq__0x579dfb___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050c7)
  store %struct.Memory* %call_4050c7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f7c(%rbp), %esi	 RIP: 4050d1	 Bytes: 6
  %loadMem_4050d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050d1 = call %struct.Memory* @routine_movl_MINUS0x1f7c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050d1)
  store %struct.Memory* %call_4050d1, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4050d7	 Bytes: 2
  %loadMem_4050d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050d7 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050d7)
  store %struct.Memory* %call_4050d7, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 4050d9	 Bytes: 5
  %loadMem1_4050d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4050d9 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4050d9, i64 314583, i64 5, i64 5)
  store %struct.Memory* %call1_4050d9, %struct.Memory** %MEMORY

  %loadMem2_4050d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4050d9 = load i64, i64* %3
  %call2_4050d9 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_4050d9, %struct.Memory* %loadMem2_4050d9)
  store %struct.Memory* %call2_4050d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x1f7c(%rbp)	 RIP: 4050de	 Bytes: 7
  %loadMem_4050de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050de = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050de)
  store %struct.Memory* %call_4050de, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2abc(%rbp)	 RIP: 4050e5	 Bytes: 6
  %loadMem_4050e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050e5 = call %struct.Memory* @routine_movl__eax__MINUS0x2abc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050e5)
  store %struct.Memory* %call_4050e5, %struct.Memory** %MEMORY

  ; Code: je .L_40511b	 RIP: 4050eb	 Bytes: 6
  %loadMem_4050eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050eb = call %struct.Memory* @routine_je_.L_40511b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050eb, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_4050eb, %struct.Memory** %MEMORY

  %loadBr_4050eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4050eb = icmp eq i8 %loadBr_4050eb, 1
  br i1 %cmpBr_4050eb, label %block_.L_40511b, label %block_4050f1

block_4050f1:
  ; Code: movq $0x579dec, %rdi	 RIP: 4050f1	 Bytes: 10
  %loadMem_4050f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050f1 = call %struct.Memory* @routine_movq__0x579dec___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050f1)
  store %struct.Memory* %call_4050f1, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f7c(%rbp), %rax	 RIP: 4050fb	 Bytes: 7
  %loadMem_4050fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050fb = call %struct.Memory* @routine_movslq_MINUS0x1f7c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050fb)
  store %struct.Memory* %call_4050fb, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %esi	 RIP: 405102	 Bytes: 7
  %loadMem_405102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405102 = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405102)
  store %struct.Memory* %call_405102, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 405109	 Bytes: 2
  %loadMem_405109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405109 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405109)
  store %struct.Memory* %call_405109, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 40510b	 Bytes: 5
  %loadMem1_40510b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40510b = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40510b, i64 314533, i64 5, i64 5)
  store %struct.Memory* %call1_40510b, %struct.Memory** %MEMORY

  %loadMem2_40510b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40510b = load i64, i64* %3
  %call2_40510b = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_40510b, %struct.Memory* %loadMem2_40510b)
  store %struct.Memory* %call2_40510b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ac0(%rbp)	 RIP: 405110	 Bytes: 6
  %loadMem_405110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405110 = call %struct.Memory* @routine_movl__eax__MINUS0x2ac0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405110)
  store %struct.Memory* %call_405110, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405132	 RIP: 405116	 Bytes: 5
  %loadMem_405116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405116 = call %struct.Memory* @routine_jmpq_.L_405132(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405116, i64 28, i64 5)
  store %struct.Memory* %call_405116, %struct.Memory** %MEMORY

  br label %block_.L_405132

  ; Code: .L_40511b:	 RIP: 40511b	 Bytes: 0
block_.L_40511b:

  ; Code: movq $0x586073, %rdi	 RIP: 40511b	 Bytes: 10
  %loadMem_40511b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40511b = call %struct.Memory* @routine_movq__0x586073___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40511b)
  store %struct.Memory* %call_40511b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 405125	 Bytes: 2
  %loadMem_405125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405125 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405125)
  store %struct.Memory* %call_405125, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 405127	 Bytes: 5
  %loadMem1_405127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405127 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405127, i64 314505, i64 5, i64 5)
  store %struct.Memory* %call1_405127, %struct.Memory** %MEMORY

  %loadMem2_405127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405127 = load i64, i64* %3
  %call2_405127 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_405127, %struct.Memory* %loadMem2_405127)
  store %struct.Memory* %call2_405127, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ac4(%rbp)	 RIP: 40512c	 Bytes: 6
  %loadMem_40512c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40512c = call %struct.Memory* @routine_movl__eax__MINUS0x2ac4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40512c)
  store %struct.Memory* %call_40512c, %struct.Memory** %MEMORY

  ; Code: .L_405132:	 RIP: 405132	 Bytes: 0
  br label %block_.L_405132
block_.L_405132:

  ; Code: jmpq .L_405137	 RIP: 405132	 Bytes: 5
  %loadMem_405132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405132 = call %struct.Memory* @routine_jmpq_.L_405137(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405132, i64 5, i64 5)
  store %struct.Memory* %call_405132, %struct.Memory** %MEMORY

  br label %block_.L_405137

  ; Code: .L_405137:	 RIP: 405137	 Bytes: 0
block_.L_405137:

  ; Code: movl $0x0, -0x1f90(%rbp)	 RIP: 405137	 Bytes: 10
  %loadMem_405137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405137 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405137)
  store %struct.Memory* %call_405137, %struct.Memory** %MEMORY

  ; Code: movl $0x5, -0x1f8c(%rbp)	 RIP: 405141	 Bytes: 10
  %loadMem_405141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405141 = call %struct.Memory* @routine_movl__0x5__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405141)
  store %struct.Memory* %call_405141, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 40514b	 Bytes: 10
  %loadMem_40514b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40514b = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40514b)
  store %struct.Memory* %call_40514b, %struct.Memory** %MEMORY

  ; Code: .L_405155:	 RIP: 405155	 Bytes: 0
  br label %block_.L_405155
block_.L_405155:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 405155	 Bytes: 10
  %loadMem_405155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405155 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405155)
  store %struct.Memory* %call_405155, %struct.Memory** %MEMORY

  ; Code: jge .L_40542e	 RIP: 40515f	 Bytes: 6
  %loadMem_40515f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40515f = call %struct.Memory* @routine_jge_.L_40542e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40515f, i8* %BRANCH_TAKEN, i64 719, i64 6, i64 6)
  store %struct.Memory* %call_40515f, %struct.Memory** %MEMORY

  %loadBr_40515f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40515f = icmp eq i8 %loadBr_40515f, 1
  br i1 %cmpBr_40515f, label %block_.L_40542e, label %block_405165

block_405165:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 405165	 Bytes: 7
  %loadMem_405165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405165 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405165)
  store %struct.Memory* %call_405165, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 40516c	 Bytes: 8
  %loadMem_40516c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40516c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40516c)
  store %struct.Memory* %call_40516c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 405174	 Bytes: 3
  %loadMem_405174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405174 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405174)
  store %struct.Memory* %call_405174, %struct.Memory** %MEMORY

  ; Code: jne .L_405192	 RIP: 405177	 Bytes: 6
  %loadMem_405177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405177 = call %struct.Memory* @routine_jne_.L_405192(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405177, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_405177, %struct.Memory** %MEMORY

  %loadBr_405177 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405177 = icmp eq i8 %loadBr_405177, 1
  br i1 %cmpBr_405177, label %block_.L_405192, label %block_40517d

block_40517d:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 40517d	 Bytes: 7
  %loadMem_40517d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40517d = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40517d)
  store %struct.Memory* %call_40517d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rax,4)	 RIP: 405184	 Bytes: 8
  %loadMem_405184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405184 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405184)
  store %struct.Memory* %call_405184, %struct.Memory** %MEMORY

  ; Code: jne .L_405197	 RIP: 40518c	 Bytes: 6
  %loadMem_40518c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40518c = call %struct.Memory* @routine_jne_.L_405197(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40518c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40518c, %struct.Memory** %MEMORY

  %loadBr_40518c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40518c = icmp eq i8 %loadBr_40518c, 1
  br i1 %cmpBr_40518c, label %block_.L_405197, label %block_.L_405192

  ; Code: .L_405192:	 RIP: 405192	 Bytes: 0
block_.L_405192:

  ; Code: jmpq .L_40541a	 RIP: 405192	 Bytes: 5
  %loadMem_405192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405192 = call %struct.Memory* @routine_jmpq_.L_40541a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405192, i64 648, i64 5)
  store %struct.Memory* %call_405192, %struct.Memory** %MEMORY

  br label %block_.L_40541a

  ; Code: .L_405197:	 RIP: 405197	 Bytes: 0
block_.L_405197:

  ; Code: movl $0x3, %edx	 RIP: 405197	 Bytes: 5
  %loadMem_405197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405197 = call %struct.Memory* @routine_movl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405197)
  store %struct.Memory* %call_405197, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 40519c	 Bytes: 2
  %loadMem_40519c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40519c = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40519c)
  store %struct.Memory* %call_40519c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40519e	 Bytes: 2
  %loadMem_40519e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40519e = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40519e)
  store %struct.Memory* %call_40519e, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4051a0	 Bytes: 6
  %loadMem_4051a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051a0 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051a0)
  store %struct.Memory* %call_4051a0, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 4051a6	 Bytes: 3
  %loadMem_4051a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051a6 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051a6)
  store %struct.Memory* %call_4051a6, %struct.Memory** %MEMORY

  ; Code: callq .approxlib	 RIP: 4051a9	 Bytes: 5
  %loadMem1_4051a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4051a9 = call %struct.Memory* @routine_callq_.approxlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4051a9, i64 50183, i64 5, i64 5)
  store %struct.Memory* %call1_4051a9, %struct.Memory** %MEMORY

  %loadMem2_4051a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4051a9 = load i64, i64* %3
  %call2_4051a9 = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64  %loadPC_4051a9, %struct.Memory* %loadMem2_4051a9)
  store %struct.Memory* %call2_4051a9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1fa0(%rbp)	 RIP: 4051ae	 Bytes: 6
  %loadMem_4051ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051ae = call %struct.Memory* @routine_movl__eax__MINUS0x1fa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051ae)
  store %struct.Memory* %call_4051ae, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, -0x1fa0(%rbp)	 RIP: 4051b4	 Bytes: 7
  %loadMem_4051b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051b4 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x1fa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051b4)
  store %struct.Memory* %call_4051b4, %struct.Memory** %MEMORY

  ; Code: jge .L_4051c6	 RIP: 4051bb	 Bytes: 6
  %loadMem_4051bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051bb = call %struct.Memory* @routine_jge_.L_4051c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051bb, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4051bb, %struct.Memory** %MEMORY

  %loadBr_4051bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4051bb = icmp eq i8 %loadBr_4051bb, 1
  br i1 %cmpBr_4051bb, label %block_.L_4051c6, label %block_4051c1

block_4051c1:
  ; Code: jmpq .L_40541a	 RIP: 4051c1	 Bytes: 5
  %loadMem_4051c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051c1 = call %struct.Memory* @routine_jmpq_.L_40541a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051c1, i64 601, i64 5)
  store %struct.Memory* %call_4051c1, %struct.Memory** %MEMORY

  br label %block_.L_40541a

  ; Code: .L_4051c6:	 RIP: 4051c6	 Bytes: 0
block_.L_4051c6:

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4051c6	 Bytes: 6
  %loadMem_4051c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051c6 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051c6)
  store %struct.Memory* %call_4051c6, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 4051cc	 Bytes: 3
  %loadMem_4051cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051cc = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051cc)
  store %struct.Memory* %call_4051cc, %struct.Memory** %MEMORY

  ; Code: callq .is_self_atari	 RIP: 4051cf	 Bytes: 5
  %loadMem1_4051cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4051cf = call %struct.Memory* @routine_callq_.is_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4051cf, i64 61649, i64 5, i64 5)
  store %struct.Memory* %call1_4051cf, %struct.Memory** %MEMORY

  %loadMem2_4051cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4051cf = load i64, i64* %3
  %call2_4051cf = call %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* %0, i64  %loadPC_4051cf, %struct.Memory* %loadMem2_4051cf)
  store %struct.Memory* %call2_4051cf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4051d4	 Bytes: 3
  %loadMem_4051d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051d4 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051d4)
  store %struct.Memory* %call_4051d4, %struct.Memory** %MEMORY

  ; Code: je .L_4051e2	 RIP: 4051d7	 Bytes: 6
  %loadMem_4051d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051d7 = call %struct.Memory* @routine_je_.L_4051e2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051d7, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4051d7, %struct.Memory** %MEMORY

  %loadBr_4051d7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4051d7 = icmp eq i8 %loadBr_4051d7, 1
  br i1 %cmpBr_4051d7, label %block_.L_4051e2, label %block_4051dd

block_4051dd:
  ; Code: jmpq .L_40541a	 RIP: 4051dd	 Bytes: 5
  %loadMem_4051dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051dd = call %struct.Memory* @routine_jmpq_.L_40541a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051dd, i64 573, i64 5)
  store %struct.Memory* %call_4051dd, %struct.Memory** %MEMORY

  br label %block_.L_40541a

  ; Code: .L_4051e2:	 RIP: 4051e2	 Bytes: 0
block_.L_4051e2:

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 4051e2	 Bytes: 7
  %loadMem_4051e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051e2 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051e2)
  store %struct.Memory* %call_4051e2, %struct.Memory** %MEMORY

  ; Code: .L_4051e9:	 RIP: 4051e9	 Bytes: 0
  br label %block_.L_4051e9
block_.L_4051e9:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 4051e9	 Bytes: 4
  %loadMem_4051e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051e9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051e9)
  store %struct.Memory* %call_4051e9, %struct.Memory** %MEMORY

  ; Code: jge .L_405415	 RIP: 4051ed	 Bytes: 6
  %loadMem_4051ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051ed = call %struct.Memory* @routine_jge_.L_405415(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051ed, i8* %BRANCH_TAKEN, i64 552, i64 6, i64 6)
  store %struct.Memory* %call_4051ed, %struct.Memory** %MEMORY

  %loadBr_4051ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4051ed = icmp eq i8 %loadBr_4051ed, 1
  br i1 %cmpBr_4051ed, label %block_.L_405415, label %block_4051f3

block_4051f3:
  ; Code: movl $0x4, %eax	 RIP: 4051f3	 Bytes: 5
  %loadMem_4051f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051f3 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051f3)
  store %struct.Memory* %call_4051f3, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4051f8	 Bytes: 4
  %loadMem_4051f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051f8 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051f8)
  store %struct.Memory* %call_4051f8, %struct.Memory** %MEMORY

  ; Code: movl 0x7ae1b0(,%rcx,4), %edx	 RIP: 4051fc	 Bytes: 7
  %loadMem_4051fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051fc = call %struct.Memory* @routine_movl_0x7ae1b0___rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051fc)
  store %struct.Memory* %call_4051fc, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1fa4(%rbp)	 RIP: 405203	 Bytes: 6
  %loadMem_405203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405203 = call %struct.Memory* @routine_movl__edx__MINUS0x1fa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405203)
  store %struct.Memory* %call_405203, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 405209	 Bytes: 3
  %loadMem_405209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405209 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405209)
  store %struct.Memory* %call_405209, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 40520c	 Bytes: 3
  %loadMem_40520c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40520c = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40520c)
  store %struct.Memory* %call_40520c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ac8(%rbp)	 RIP: 40520f	 Bytes: 6
  %loadMem_40520f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40520f = call %struct.Memory* @routine_movl__eax__MINUS0x2ac8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40520f)
  store %struct.Memory* %call_40520f, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405215	 Bytes: 2
  %loadMem_405215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405215 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405215)
  store %struct.Memory* %call_405215, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405217	 Bytes: 1
  %loadMem_405217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405217 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405217)
  store %struct.Memory* %call_405217, %struct.Memory** %MEMORY

  ; Code: movl -0x2ac8(%rbp), %esi	 RIP: 405218	 Bytes: 6
  %loadMem_405218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405218 = call %struct.Memory* @routine_movl_MINUS0x2ac8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405218)
  store %struct.Memory* %call_405218, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 40521e	 Bytes: 2
  %loadMem_40521e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40521e = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40521e)
  store %struct.Memory* %call_40521e, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 405220	 Bytes: 3
  %loadMem_405220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405220 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405220)
  store %struct.Memory* %call_405220, %struct.Memory** %MEMORY

  ; Code: movl 0x7ae1b0(,%rcx,4), %edx	 RIP: 405223	 Bytes: 7
  %loadMem_405223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405223 = call %struct.Memory* @routine_movl_0x7ae1b0___rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405223)
  store %struct.Memory* %call_405223, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1fa8(%rbp)	 RIP: 40522a	 Bytes: 6
  %loadMem_40522a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40522a = call %struct.Memory* @routine_movl__edx__MINUS0x1fa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40522a)
  store %struct.Memory* %call_40522a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edx	 RIP: 405230	 Bytes: 6
  %loadMem_405230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405230 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405230)
  store %struct.Memory* %call_405230, %struct.Memory** %MEMORY

  ; Code: subl -0x1fa4(%rbp), %edx	 RIP: 405236	 Bytes: 6
  %loadMem_405236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405236 = call %struct.Memory* @routine_subl_MINUS0x1fa4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405236)
  store %struct.Memory* %call_405236, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 40523c	 Bytes: 3
  %loadMem_40523c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40523c = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40523c)
  store %struct.Memory* %call_40523c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %edx	 RIP: 40523f	 Bytes: 8
  %loadMem_40523f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40523f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40523f)
  store %struct.Memory* %call_40523f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %edx	 RIP: 405247	 Bytes: 3
  %loadMem_405247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405247 = call %struct.Memory* @routine_cmpl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405247)
  store %struct.Memory* %call_405247, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 40524a	 Bytes: 6
  %loadMem_40524a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40524a = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40524a, i8* %BRANCH_TAKEN, i64 440, i64 6, i64 6)
  store %struct.Memory* %call_40524a, %struct.Memory** %MEMORY

  %loadBr_40524a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40524a = icmp eq i8 %loadBr_40524a, 1
  br i1 %cmpBr_40524a, label %block_.L_405402, label %block_405250

block_405250:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405250	 Bytes: 6
  %loadMem_405250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405250 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405250)
  store %struct.Memory* %call_405250, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %eax	 RIP: 405256	 Bytes: 6
  %loadMem_405256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405256 = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405256)
  store %struct.Memory* %call_405256, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 40525c	 Bytes: 3
  %loadMem_40525c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40525c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40525c)
  store %struct.Memory* %call_40525c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 40525f	 Bytes: 8
  %loadMem_40525f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40525f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40525f)
  store %struct.Memory* %call_40525f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %eax	 RIP: 405267	 Bytes: 3
  %loadMem_405267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405267 = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405267)
  store %struct.Memory* %call_405267, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 40526a	 Bytes: 6
  %loadMem_40526a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40526a = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40526a, i8* %BRANCH_TAKEN, i64 408, i64 6, i64 6)
  store %struct.Memory* %call_40526a, %struct.Memory** %MEMORY

  %loadBr_40526a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40526a = icmp eq i8 %loadBr_40526a, 1
  br i1 %cmpBr_40526a, label %block_.L_405402, label %block_405270

block_405270:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405270	 Bytes: 6
  %loadMem_405270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405270 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405270)
  store %struct.Memory* %call_405270, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %eax	 RIP: 405276	 Bytes: 6
  %loadMem_405276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405276 = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405276)
  store %struct.Memory* %call_405276, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa8(%rbp), %eax	 RIP: 40527c	 Bytes: 6
  %loadMem_40527c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40527c = call %struct.Memory* @routine_addl_MINUS0x1fa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40527c)
  store %struct.Memory* %call_40527c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405282	 Bytes: 3
  %loadMem_405282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405282 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405282)
  store %struct.Memory* %call_405282, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405285	 Bytes: 8
  %loadMem_405285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405285 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405285)
  store %struct.Memory* %call_405285, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 40528d	 Bytes: 3
  %loadMem_40528d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40528d = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40528d)
  store %struct.Memory* %call_40528d, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 405290	 Bytes: 6
  %loadMem_405290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405290 = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405290, i8* %BRANCH_TAKEN, i64 370, i64 6, i64 6)
  store %struct.Memory* %call_405290, %struct.Memory** %MEMORY

  %loadBr_405290 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405290 = icmp eq i8 %loadBr_405290, 1
  br i1 %cmpBr_405290, label %block_.L_405402, label %block_405296

block_405296:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405296	 Bytes: 6
  %loadMem_405296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405296 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405296)
  store %struct.Memory* %call_405296, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %eax	 RIP: 40529c	 Bytes: 6
  %loadMem_40529c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40529c = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40529c)
  store %struct.Memory* %call_40529c, %struct.Memory** %MEMORY

  ; Code: subl -0x1fa8(%rbp), %eax	 RIP: 4052a2	 Bytes: 6
  %loadMem_4052a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052a2 = call %struct.Memory* @routine_subl_MINUS0x1fa8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052a2)
  store %struct.Memory* %call_4052a2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4052a8	 Bytes: 3
  %loadMem_4052a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052a8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052a8)
  store %struct.Memory* %call_4052a8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4052ab	 Bytes: 8
  %loadMem_4052ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ab = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ab)
  store %struct.Memory* %call_4052ab, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 4052b3	 Bytes: 3
  %loadMem_4052b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052b3 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052b3)
  store %struct.Memory* %call_4052b3, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 4052b6	 Bytes: 6
  %loadMem_4052b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052b6 = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052b6, i8* %BRANCH_TAKEN, i64 332, i64 6, i64 6)
  store %struct.Memory* %call_4052b6, %struct.Memory** %MEMORY

  %loadBr_4052b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4052b6 = icmp eq i8 %loadBr_4052b6, 1
  br i1 %cmpBr_4052b6, label %block_.L_405402, label %block_4052bc

block_4052bc:
  ; Code: movl -0x1fa0(%rbp), %eax	 RIP: 4052bc	 Bytes: 6
  %loadMem_4052bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052bc = call %struct.Memory* @routine_movl_MINUS0x1fa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052bc)
  store %struct.Memory* %call_4052bc, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %ecx	 RIP: 4052c2	 Bytes: 6
  %loadMem_4052c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052c2 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052c2)
  store %struct.Memory* %call_4052c2, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %ecx	 RIP: 4052c8	 Bytes: 6
  %loadMem_4052c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052c8 = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052c8)
  store %struct.Memory* %call_4052c8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 4052ce	 Bytes: 2
  %loadMem_4052ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ce = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ce)
  store %struct.Memory* %call_4052ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2acc(%rbp)	 RIP: 4052d0	 Bytes: 6
  %loadMem_4052d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052d0 = call %struct.Memory* @routine_movl__eax__MINUS0x2acc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052d0)
  store %struct.Memory* %call_4052d0, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 4052d6	 Bytes: 5
  %loadMem1_4052d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4052d6 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4052d6, i64 42154, i64 5, i64 5)
  store %struct.Memory* %call1_4052d6, %struct.Memory** %MEMORY

  %loadMem2_4052d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4052d6 = load i64, i64* %3
  %call2_4052d6 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_4052d6, %struct.Memory* %loadMem2_4052d6)
  store %struct.Memory* %call2_4052d6, %struct.Memory** %MEMORY

  ; Code: movl -0x2acc(%rbp), %ecx	 RIP: 4052db	 Bytes: 6
  %loadMem_4052db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052db = call %struct.Memory* @routine_movl_MINUS0x2acc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052db)
  store %struct.Memory* %call_4052db, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4052e1	 Bytes: 2
  %loadMem_4052e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052e1 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052e1)
  store %struct.Memory* %call_4052e1, %struct.Memory** %MEMORY

  ; Code: jg .L_405323	 RIP: 4052e3	 Bytes: 6
  %loadMem_4052e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052e3 = call %struct.Memory* @routine_jg_.L_405323(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052e3, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_4052e3, %struct.Memory** %MEMORY

  %loadBr_4052e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4052e3 = icmp eq i8 %loadBr_4052e3, 1
  br i1 %cmpBr_4052e3, label %block_.L_405323, label %block_4052e9

block_4052e9:
  ; Code: cmpl $0x4, -0x1fa0(%rbp)	 RIP: 4052e9	 Bytes: 7
  %loadMem_4052e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052e9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x1fa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052e9)
  store %struct.Memory* %call_4052e9, %struct.Memory** %MEMORY

  ; Code: jle .L_405402	 RIP: 4052f0	 Bytes: 6
  %loadMem_4052f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052f0 = call %struct.Memory* @routine_jle_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052f0, i8* %BRANCH_TAKEN, i64 274, i64 6, i64 6)
  store %struct.Memory* %call_4052f0, %struct.Memory** %MEMORY

  %loadBr_4052f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4052f0 = icmp eq i8 %loadBr_4052f0, 1
  br i1 %cmpBr_4052f0, label %block_.L_405402, label %block_4052f6

block_4052f6:
  ; Code: movl -0x1fa0(%rbp), %eax	 RIP: 4052f6	 Bytes: 6
  %loadMem_4052f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052f6 = call %struct.Memory* @routine_movl_MINUS0x1fa0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052f6)
  store %struct.Memory* %call_4052f6, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %ecx	 RIP: 4052fc	 Bytes: 6
  %loadMem_4052fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052fc = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052fc)
  store %struct.Memory* %call_4052fc, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %ecx	 RIP: 405302	 Bytes: 6
  %loadMem_405302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405302 = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405302)
  store %struct.Memory* %call_405302, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 405308	 Bytes: 2
  %loadMem_405308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405308 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405308)
  store %struct.Memory* %call_405308, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ad0(%rbp)	 RIP: 40530a	 Bytes: 6
  %loadMem_40530a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40530a = call %struct.Memory* @routine_movl__eax__MINUS0x2ad0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40530a)
  store %struct.Memory* %call_40530a, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405310	 Bytes: 5
  %loadMem1_405310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405310 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405310, i64 42096, i64 5, i64 5)
  store %struct.Memory* %call1_405310, %struct.Memory** %MEMORY

  %loadMem2_405310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405310 = load i64, i64* %3
  %call2_405310 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405310, %struct.Memory* %loadMem2_405310)
  store %struct.Memory* %call2_405310, %struct.Memory** %MEMORY

  ; Code: movl -0x2ad0(%rbp), %ecx	 RIP: 405315	 Bytes: 6
  %loadMem_405315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405315 = call %struct.Memory* @routine_movl_MINUS0x2ad0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405315)
  store %struct.Memory* %call_405315, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 40531b	 Bytes: 2
  %loadMem_40531b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40531b = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40531b)
  store %struct.Memory* %call_40531b, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 40531d	 Bytes: 6
  %loadMem_40531d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40531d = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40531d, i8* %BRANCH_TAKEN, i64 229, i64 6, i64 6)
  store %struct.Memory* %call_40531d, %struct.Memory** %MEMORY

  %loadBr_40531d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40531d = icmp eq i8 %loadBr_40531d, 1
  br i1 %cmpBr_40531d, label %block_.L_405402, label %block_.L_405323

  ; Code: .L_405323:	 RIP: 405323	 Bytes: 0
block_.L_405323:

  ; Code: movq $0xb4bd20, %rax	 RIP: 405323	 Bytes: 10
  %loadMem_405323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405323 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405323)
  store %struct.Memory* %call_405323, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 40532d	 Bytes: 8
  %loadMem_40532d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40532d = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40532d)
  store %struct.Memory* %call_40532d, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edx	 RIP: 405335	 Bytes: 6
  %loadMem_405335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405335 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405335)
  store %struct.Memory* %call_405335, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %edx	 RIP: 40533b	 Bytes: 6
  %loadMem_40533b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40533b = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40533b)
  store %struct.Memory* %call_40533b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 405341	 Bytes: 3
  %loadMem_405341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405341 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405341)
  store %struct.Memory* %call_405341, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 405344	 Bytes: 4
  %loadMem_405344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405344 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405344)
  store %struct.Memory* %call_405344, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 405348	 Bytes: 3
  %loadMem_405348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405348 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405348)
  store %struct.Memory* %call_405348, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 40534b	 Bytes: 4
  %loadMem_40534b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40534b = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40534b)
  store %struct.Memory* %call_40534b, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 40534f	 Bytes: 4
  %loadMem_40534f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40534f = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40534f)
  store %struct.Memory* %call_40534f, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 405353	 Bytes: 3
  %loadMem_405353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405353 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405353)
  store %struct.Memory* %call_405353, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, 0x3c(%rcx)	 RIP: 405356	 Bytes: 4
  %loadMem_405356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405356 = call %struct.Memory* @routine_cmpl__0x9__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405356)
  store %struct.Memory* %call_405356, %struct.Memory** %MEMORY

  ; Code: je .L_40539d	 RIP: 40535a	 Bytes: 6
  %loadMem_40535a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40535a = call %struct.Memory* @routine_je_.L_40539d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40535a, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_40535a, %struct.Memory** %MEMORY

  %loadBr_40535a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40535a = icmp eq i8 %loadBr_40535a, 1
  br i1 %cmpBr_40535a, label %block_.L_40539d, label %block_405360

block_405360:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405360	 Bytes: 10
  %loadMem_405360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405360 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405360)
  store %struct.Memory* %call_405360, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 40536a	 Bytes: 8
  %loadMem_40536a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40536a = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40536a)
  store %struct.Memory* %call_40536a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edx	 RIP: 405372	 Bytes: 6
  %loadMem_405372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405372 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405372)
  store %struct.Memory* %call_405372, %struct.Memory** %MEMORY

  ; Code: addl -0x1fa4(%rbp), %edx	 RIP: 405378	 Bytes: 6
  %loadMem_405378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405378 = call %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405378)
  store %struct.Memory* %call_405378, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 40537e	 Bytes: 3
  %loadMem_40537e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40537e = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40537e)
  store %struct.Memory* %call_40537e, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 405381	 Bytes: 4
  %loadMem_405381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405381 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405381)
  store %struct.Memory* %call_405381, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 405385	 Bytes: 3
  %loadMem_405385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405385 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405385)
  store %struct.Memory* %call_405385, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 405388	 Bytes: 4
  %loadMem_405388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405388 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405388)
  store %struct.Memory* %call_405388, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 40538c	 Bytes: 4
  %loadMem_40538c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40538c = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40538c)
  store %struct.Memory* %call_40538c, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 405390	 Bytes: 3
  %loadMem_405390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405390 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405390)
  store %struct.Memory* %call_405390, %struct.Memory** %MEMORY

  ; Code: cmpl $0x8, 0x3c(%rcx)	 RIP: 405393	 Bytes: 4
  %loadMem_405393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405393 = call %struct.Memory* @routine_cmpl__0x8__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405393)
  store %struct.Memory* %call_405393, %struct.Memory** %MEMORY

  ; Code: jne .L_405402	 RIP: 405397	 Bytes: 6
  %loadMem_405397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405397 = call %struct.Memory* @routine_jne_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405397, i8* %BRANCH_TAKEN, i64 107, i64 6, i64 6)
  store %struct.Memory* %call_405397, %struct.Memory** %MEMORY

  %loadBr_405397 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405397 = icmp eq i8 %loadBr_405397, 1
  br i1 %cmpBr_405397, label %block_.L_405402, label %block_.L_40539d

  ; Code: .L_40539d:	 RIP: 40539d	 Bytes: 0
block_.L_40539d:

  ; Code: movss 0xddd5b(%rip), %xmm0	 RIP: 40539d	 Bytes: 8
  %loadMem_40539d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40539d = call %struct.Memory* @routine_movss_0xddd5b__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40539d)
  store %struct.Memory* %call_40539d, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4053a5	 Bytes: 7
  %loadMem_4053a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053a5 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053a5)
  store %struct.Memory* %call_4053a5, %struct.Memory** %MEMORY

  ; Code: movss -0x12f0(%rbp,%rax,4), %xmm1	 RIP: 4053ac	 Bytes: 9
  %loadMem_4053ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053ac = call %struct.Memory* @routine_movss_MINUS0x12f0__rbp__rax_4____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053ac)
  store %struct.Memory* %call_4053ac, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4053b5	 Bytes: 7
  %loadMem_4053b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053b5 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053b5)
  store %struct.Memory* %call_4053b5, %struct.Memory** %MEMORY

  ; Code: addss -0x1930(%rbp,%rax,4), %xmm1	 RIP: 4053bc	 Bytes: 9
  %loadMem_4053bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053bc = call %struct.Memory* @routine_addss_MINUS0x1930__rbp__rax_4____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053bc)
  store %struct.Memory* %call_4053bc, %struct.Memory** %MEMORY

  ; Code: mulss %xmm1, %xmm0	 RIP: 4053c5	 Bytes: 4
  %loadMem_4053c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053c5 = call %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053c5)
  store %struct.Memory* %call_4053c5, %struct.Memory** %MEMORY

  ; Code: cvttss2si %xmm0, %ecx	 RIP: 4053c9	 Bytes: 4
  %loadMem_4053c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053c9 = call %struct.Memory* @routine_cvttss2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053c9)
  store %struct.Memory* %call_4053c9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1fac(%rbp)	 RIP: 4053cd	 Bytes: 6
  %loadMem_4053cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053cd = call %struct.Memory* @routine_movl__ecx__MINUS0x1fac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053cd)
  store %struct.Memory* %call_4053cd, %struct.Memory** %MEMORY

  ; Code: movl -0x1fac(%rbp), %ecx	 RIP: 4053d3	 Bytes: 6
  %loadMem_4053d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053d3 = call %struct.Memory* @routine_movl_MINUS0x1fac__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053d3)
  store %struct.Memory* %call_4053d3, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1f8c(%rbp), %ecx	 RIP: 4053d9	 Bytes: 6
  %loadMem_4053d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053d9 = call %struct.Memory* @routine_cmpl_MINUS0x1f8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053d9)
  store %struct.Memory* %call_4053d9, %struct.Memory** %MEMORY

  ; Code: jle .L_4053fd	 RIP: 4053df	 Bytes: 6
  %loadMem_4053df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053df = call %struct.Memory* @routine_jle_.L_4053fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053df, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_4053df, %struct.Memory** %MEMORY

  %loadBr_4053df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4053df = icmp eq i8 %loadBr_4053df, 1
  br i1 %cmpBr_4053df, label %block_.L_4053fd, label %block_4053e5

block_4053e5:
  ; Code: movl -0x1fac(%rbp), %eax	 RIP: 4053e5	 Bytes: 6
  %loadMem_4053e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053e5 = call %struct.Memory* @routine_movl_MINUS0x1fac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053e5)
  store %struct.Memory* %call_4053e5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f8c(%rbp)	 RIP: 4053eb	 Bytes: 6
  %loadMem_4053eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053eb = call %struct.Memory* @routine_movl__eax__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053eb)
  store %struct.Memory* %call_4053eb, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 4053f1	 Bytes: 6
  %loadMem_4053f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053f1 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053f1)
  store %struct.Memory* %call_4053f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f90(%rbp)	 RIP: 4053f7	 Bytes: 6
  %loadMem_4053f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053f7 = call %struct.Memory* @routine_movl__eax__MINUS0x1f90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053f7)
  store %struct.Memory* %call_4053f7, %struct.Memory** %MEMORY

  ; Code: .L_4053fd:	 RIP: 4053fd	 Bytes: 0
  br label %block_.L_4053fd
block_.L_4053fd:

  ; Code: jmpq .L_405402	 RIP: 4053fd	 Bytes: 5
  %loadMem_4053fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053fd = call %struct.Memory* @routine_jmpq_.L_405402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053fd, i64 5, i64 5)
  store %struct.Memory* %call_4053fd, %struct.Memory** %MEMORY

  br label %block_.L_405402

  ; Code: .L_405402:	 RIP: 405402	 Bytes: 0
block_.L_405402:

  ; Code: jmpq .L_405407	 RIP: 405402	 Bytes: 5
  %loadMem_405402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405402 = call %struct.Memory* @routine_jmpq_.L_405407(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405402, i64 5, i64 5)
  store %struct.Memory* %call_405402, %struct.Memory** %MEMORY

  br label %block_.L_405407

  ; Code: .L_405407:	 RIP: 405407	 Bytes: 0
block_.L_405407:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 405407	 Bytes: 3
  %loadMem_405407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405407 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405407)
  store %struct.Memory* %call_405407, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40540a	 Bytes: 3
  %loadMem_40540a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40540a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40540a)
  store %struct.Memory* %call_40540a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 40540d	 Bytes: 3
  %loadMem_40540d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40540d = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40540d)
  store %struct.Memory* %call_40540d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4051e9	 RIP: 405410	 Bytes: 5
  %loadMem_405410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405410 = call %struct.Memory* @routine_jmpq_.L_4051e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405410, i64 -551, i64 5)
  store %struct.Memory* %call_405410, %struct.Memory** %MEMORY

  br label %block_.L_4051e9

  ; Code: .L_405415:	 RIP: 405415	 Bytes: 0
block_.L_405415:

  ; Code: jmpq .L_40541a	 RIP: 405415	 Bytes: 5
  %loadMem_405415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405415 = call %struct.Memory* @routine_jmpq_.L_40541a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405415, i64 5, i64 5)
  store %struct.Memory* %call_405415, %struct.Memory** %MEMORY

  br label %block_.L_40541a

  ; Code: .L_40541a:	 RIP: 40541a	 Bytes: 0
block_.L_40541a:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 40541a	 Bytes: 6
  %loadMem_40541a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40541a = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40541a)
  store %struct.Memory* %call_40541a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405420	 Bytes: 3
  %loadMem_405420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405420 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405420)
  store %struct.Memory* %call_405420, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 405423	 Bytes: 6
  %loadMem_405423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405423 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405423)
  store %struct.Memory* %call_405423, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405155	 RIP: 405429	 Bytes: 5
  %loadMem_405429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405429 = call %struct.Memory* @routine_jmpq_.L_405155(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405429, i64 -724, i64 5)
  store %struct.Memory* %call_405429, %struct.Memory** %MEMORY

  br label %block_.L_405155

  ; Code: .L_40542e:	 RIP: 40542e	 Bytes: 0
block_.L_40542e:

  ; Code: cmpl $0x0, -0x1f90(%rbp)	 RIP: 40542e	 Bytes: 7
  %loadMem_40542e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40542e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40542e)
  store %struct.Memory* %call_40542e, %struct.Memory** %MEMORY

  ; Code: je .L_4054a1	 RIP: 405435	 Bytes: 6
  %loadMem_405435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405435 = call %struct.Memory* @routine_je_.L_4054a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405435, i8* %BRANCH_TAKEN, i64 108, i64 6, i64 6)
  store %struct.Memory* %call_405435, %struct.Memory** %MEMORY

  %loadBr_405435 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405435 = icmp eq i8 %loadBr_405435, 1
  br i1 %cmpBr_405435, label %block_.L_4054a1, label %block_40543b

block_40543b:
  ; Code: movl -0x1f90(%rbp), %edi	 RIP: 40543b	 Bytes: 6
  %loadMem_40543b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40543b = call %struct.Memory* @routine_movl_MINUS0x1f90__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40543b)
  store %struct.Memory* %call_40543b, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 405441	 Bytes: 3
  %loadMem_405441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405441 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405441)
  store %struct.Memory* %call_405441, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 405444	 Bytes: 5
  %loadMem1_405444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405444 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405444, i64 419820, i64 5, i64 5)
  store %struct.Memory* %call1_405444, %struct.Memory** %MEMORY

  %loadMem2_405444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405444 = load i64, i64* %3
  %call2_405444 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_405444, %struct.Memory* %loadMem2_405444)
  store %struct.Memory* %call2_405444, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, %eax	 RIP: 405449	 Bytes: 3
  %loadMem_405449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405449 = call %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405449)
  store %struct.Memory* %call_405449, %struct.Memory** %MEMORY

  ; Code: jne .L_4054a1	 RIP: 40544c	 Bytes: 6
  %loadMem_40544c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40544c = call %struct.Memory* @routine_jne_.L_4054a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40544c, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_40544c, %struct.Memory** %MEMORY

  %loadBr_40544c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40544c = icmp eq i8 %loadBr_40544c, 1
  br i1 %cmpBr_40544c, label %block_.L_4054a1, label %block_405452

block_405452:
  ; Code: movl -0x1f90(%rbp), %eax	 RIP: 405452	 Bytes: 6
  %loadMem_405452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405452 = call %struct.Memory* @routine_movl_MINUS0x1f90__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405452)
  store %struct.Memory* %call_405452, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 405458	 Bytes: 4
  %loadMem_405458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405458 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405458)
  store %struct.Memory* %call_405458, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 40545c	 Bytes: 2
  %loadMem_40545c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40545c = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40545c)
  store %struct.Memory* %call_40545c, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 40545e	 Bytes: 7
  %loadMem_40545e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40545e = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40545e)
  store %struct.Memory* %call_40545e, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 405465	 Bytes: 5
  %loadMem_405465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405465 = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405465)
  store %struct.Memory* %call_405465, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40546a	 Bytes: 3
  %loadMem_40546a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40546a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40546a)
  store %struct.Memory* %call_40546a, %struct.Memory** %MEMORY

  ; Code: jne .L_405478	 RIP: 40546d	 Bytes: 6
  %loadMem_40546d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40546d = call %struct.Memory* @routine_jne_.L_405478(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40546d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40546d, %struct.Memory** %MEMORY

  %loadBr_40546d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40546d = icmp eq i8 %loadBr_40546d, 1
  br i1 %cmpBr_40546d, label %block_.L_405478, label %block_405473

block_405473:
  ; Code: jmpq .L_405495	 RIP: 405473	 Bytes: 5
  %loadMem_405473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405473 = call %struct.Memory* @routine_jmpq_.L_405495(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405473, i64 34, i64 5)
  store %struct.Memory* %call_405473, %struct.Memory** %MEMORY

  br label %block_.L_405495

  ; Code: .L_405478:	 RIP: 405478	 Bytes: 0
block_.L_405478:

  ; Code: movq $0x579e0b, %rdi	 RIP: 405478	 Bytes: 10
  %loadMem_405478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405478 = call %struct.Memory* @routine_movq__0x579e0b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405478)
  store %struct.Memory* %call_405478, %struct.Memory** %MEMORY

  ; Code: movl -0x1f90(%rbp), %esi	 RIP: 405482	 Bytes: 6
  %loadMem_405482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405482 = call %struct.Memory* @routine_movl_MINUS0x1f90__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405482)
  store %struct.Memory* %call_405482, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 405488	 Bytes: 2
  %loadMem_405488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405488 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405488)
  store %struct.Memory* %call_405488, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 40548a	 Bytes: 5
  %loadMem1_40548a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40548a = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40548a, i64 313638, i64 5, i64 5)
  store %struct.Memory* %call1_40548a, %struct.Memory** %MEMORY

  %loadMem2_40548a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40548a = load i64, i64* %3
  %call2_40548a = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_40548a, %struct.Memory* %loadMem2_40548a)
  store %struct.Memory* %call2_40548a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ad4(%rbp)	 RIP: 40548f	 Bytes: 6
  %loadMem_40548f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40548f = call %struct.Memory* @routine_movl__eax__MINUS0x2ad4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40548f)
  store %struct.Memory* %call_40548f, %struct.Memory** %MEMORY

  ; Code: .L_405495:	 RIP: 405495	 Bytes: 0
  br label %block_.L_405495
block_.L_405495:

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 405495	 Bytes: 7
  %loadMem_405495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405495 = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405495)
  store %struct.Memory* %call_405495, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 40549c	 Bytes: 5
  %loadMem_40549c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40549c = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40549c, i64 6868, i64 5)
  store %struct.Memory* %call_40549c, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_4054a1:	 RIP: 4054a1	 Bytes: 0
block_.L_4054a1:

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 4054a1	 Bytes: 10
  %loadMem_4054a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054a1 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054a1)
  store %struct.Memory* %call_4054a1, %struct.Memory** %MEMORY

  ; Code: .L_4054ab:	 RIP: 4054ab	 Bytes: 0
  br label %block_.L_4054ab
block_.L_4054ab:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 4054ab	 Bytes: 10
  %loadMem_4054ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ab = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ab)
  store %struct.Memory* %call_4054ab, %struct.Memory** %MEMORY

  ; Code: jge .L_405666	 RIP: 4054b5	 Bytes: 6
  %loadMem_4054b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054b5 = call %struct.Memory* @routine_jge_.L_405666(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054b5, i8* %BRANCH_TAKEN, i64 433, i64 6, i64 6)
  store %struct.Memory* %call_4054b5, %struct.Memory** %MEMORY

  %loadBr_4054b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4054b5 = icmp eq i8 %loadBr_4054b5, 1
  br i1 %cmpBr_4054b5, label %block_.L_405666, label %block_4054bb

block_4054bb:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4054bb	 Bytes: 7
  %loadMem_4054bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054bb = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054bb)
  store %struct.Memory* %call_4054bb, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 4054c2	 Bytes: 8
  %loadMem_4054c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054c2 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054c2)
  store %struct.Memory* %call_4054c2, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 4054ca	 Bytes: 3
  %loadMem_4054ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ca = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ca)
  store %struct.Memory* %call_4054ca, %struct.Memory** %MEMORY

  ; Code: jne .L_40564d	 RIP: 4054cd	 Bytes: 6
  %loadMem_4054cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054cd = call %struct.Memory* @routine_jne_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054cd, i8* %BRANCH_TAKEN, i64 384, i64 6, i64 6)
  store %struct.Memory* %call_4054cd, %struct.Memory** %MEMORY

  %loadBr_4054cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4054cd = icmp eq i8 %loadBr_4054cd, 1
  br i1 %cmpBr_4054cd, label %block_.L_40564d, label %block_4054d3

block_4054d3:
  ; Code: movq $0xb0eff0, %rax	 RIP: 4054d3	 Bytes: 10
  %loadMem_4054d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054d3 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054d3)
  store %struct.Memory* %call_4054d3, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 4054dd	 Bytes: 7
  %loadMem_4054dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054dd = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054dd)
  store %struct.Memory* %call_4054dd, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 4054e4	 Bytes: 7
  %loadMem_4054e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054e4 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054e4)
  store %struct.Memory* %call_4054e4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4054eb	 Bytes: 3
  %loadMem_4054eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054eb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054eb)
  store %struct.Memory* %call_4054eb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x38(%rax)	 RIP: 4054ee	 Bytes: 4
  %loadMem_4054ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ee = call %struct.Memory* @routine_cmpl__0x0__0x38__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ee)
  store %struct.Memory* %call_4054ee, %struct.Memory** %MEMORY

  ; Code: je .L_40564d	 RIP: 4054f2	 Bytes: 6
  %loadMem_4054f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054f2 = call %struct.Memory* @routine_je_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054f2, i8* %BRANCH_TAKEN, i64 347, i64 6, i64 6)
  store %struct.Memory* %call_4054f2, %struct.Memory** %MEMORY

  %loadBr_4054f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4054f2 = icmp eq i8 %loadBr_4054f2, 1
  br i1 %cmpBr_4054f2, label %block_.L_40564d, label %block_4054f8

block_4054f8:
  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4054f8	 Bytes: 6
  %loadMem_4054f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054f8 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054f8)
  store %struct.Memory* %call_4054f8, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 4054fe	 Bytes: 5
  %loadMem1_4054fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4054fe = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4054fe, i64 41602, i64 5, i64 5)
  store %struct.Memory* %call1_4054fe, %struct.Memory** %MEMORY

  %loadMem2_4054fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4054fe = load i64, i64* %3
  %call2_4054fe = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_4054fe, %struct.Memory* %loadMem2_4054fe)
  store %struct.Memory* %call2_4054fe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 405503	 Bytes: 3
  %loadMem_405503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405503 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405503)
  store %struct.Memory* %call_405503, %struct.Memory** %MEMORY

  ; Code: jne .L_40564d	 RIP: 405506	 Bytes: 6
  %loadMem_405506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405506 = call %struct.Memory* @routine_jne_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405506, i8* %BRANCH_TAKEN, i64 327, i64 6, i64 6)
  store %struct.Memory* %call_405506, %struct.Memory** %MEMORY

  %loadBr_405506 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405506 = icmp eq i8 %loadBr_405506, 1
  br i1 %cmpBr_405506, label %block_.L_40564d, label %block_40550c

block_40550c:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 40550c	 Bytes: 6
  %loadMem_40550c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40550c = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40550c)
  store %struct.Memory* %call_40550c, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 405512	 Bytes: 3
  %loadMem_405512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405512 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405512)
  store %struct.Memory* %call_405512, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405515	 Bytes: 3
  %loadMem_405515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405515 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405515)
  store %struct.Memory* %call_405515, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405518	 Bytes: 8
  %loadMem_405518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405518 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405518)
  store %struct.Memory* %call_405518, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405520	 Bytes: 3
  %loadMem_405520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405520 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405520)
  store %struct.Memory* %call_405520, %struct.Memory** %MEMORY

  ; Code: je .L_405543	 RIP: 405523	 Bytes: 6
  %loadMem_405523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405523 = call %struct.Memory* @routine_je_.L_405543(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405523, i8* %BRANCH_TAKEN, i64 32, i64 6, i64 6)
  store %struct.Memory* %call_405523, %struct.Memory** %MEMORY

  %loadBr_405523 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405523 = icmp eq i8 %loadBr_405523, 1
  br i1 %cmpBr_405523, label %block_.L_405543, label %block_405529

block_405529:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405529	 Bytes: 6
  %loadMem_405529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405529 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405529)
  store %struct.Memory* %call_405529, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 40552f	 Bytes: 3
  %loadMem_40552f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40552f = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40552f)
  store %struct.Memory* %call_40552f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405532	 Bytes: 3
  %loadMem_405532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405532 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405532)
  store %struct.Memory* %call_405532, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rcx,4)	 RIP: 405535	 Bytes: 8
  %loadMem_405535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405535 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405535)
  store %struct.Memory* %call_405535, %struct.Memory** %MEMORY

  ; Code: je .L_4055e8	 RIP: 40553d	 Bytes: 6
  %loadMem_40553d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40553d = call %struct.Memory* @routine_je_.L_4055e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40553d, i8* %BRANCH_TAKEN, i64 171, i64 6, i64 6)
  store %struct.Memory* %call_40553d, %struct.Memory** %MEMORY

  %loadBr_40553d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40553d = icmp eq i8 %loadBr_40553d, 1
  br i1 %cmpBr_40553d, label %block_.L_4055e8, label %block_.L_405543

  ; Code: .L_405543:	 RIP: 405543	 Bytes: 0
block_.L_405543:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405543	 Bytes: 6
  %loadMem_405543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405543 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405543)
  store %struct.Memory* %call_405543, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 405549	 Bytes: 3
  %loadMem_405549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405549 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405549)
  store %struct.Memory* %call_405549, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 40554c	 Bytes: 3
  %loadMem_40554c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40554c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40554c)
  store %struct.Memory* %call_40554c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 40554f	 Bytes: 8
  %loadMem_40554f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40554f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40554f)
  store %struct.Memory* %call_40554f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405557	 Bytes: 3
  %loadMem_405557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405557 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405557)
  store %struct.Memory* %call_405557, %struct.Memory** %MEMORY

  ; Code: je .L_40557a	 RIP: 40555a	 Bytes: 6
  %loadMem_40555a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40555a = call %struct.Memory* @routine_je_.L_40557a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40555a, i8* %BRANCH_TAKEN, i64 32, i64 6, i64 6)
  store %struct.Memory* %call_40555a, %struct.Memory** %MEMORY

  %loadBr_40555a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40555a = icmp eq i8 %loadBr_40555a, 1
  br i1 %cmpBr_40555a, label %block_.L_40557a, label %block_405560

block_405560:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405560	 Bytes: 6
  %loadMem_405560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405560 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405560)
  store %struct.Memory* %call_405560, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 405566	 Bytes: 3
  %loadMem_405566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405566 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405566)
  store %struct.Memory* %call_405566, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405569	 Bytes: 3
  %loadMem_405569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405569 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405569)
  store %struct.Memory* %call_405569, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rcx,4)	 RIP: 40556c	 Bytes: 8
  %loadMem_40556c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40556c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40556c)
  store %struct.Memory* %call_40556c, %struct.Memory** %MEMORY

  ; Code: je .L_4055e8	 RIP: 405574	 Bytes: 6
  %loadMem_405574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405574 = call %struct.Memory* @routine_je_.L_4055e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405574, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_405574, %struct.Memory** %MEMORY

  %loadBr_405574 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405574 = icmp eq i8 %loadBr_405574, 1
  br i1 %cmpBr_405574, label %block_.L_4055e8, label %block_.L_40557a

  ; Code: .L_40557a:	 RIP: 40557a	 Bytes: 0
block_.L_40557a:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 40557a	 Bytes: 6
  %loadMem_40557a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40557a = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40557a)
  store %struct.Memory* %call_40557a, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 405580	 Bytes: 3
  %loadMem_405580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405580 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405580)
  store %struct.Memory* %call_405580, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405583	 Bytes: 3
  %loadMem_405583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405583 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405583)
  store %struct.Memory* %call_405583, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405586	 Bytes: 8
  %loadMem_405586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405586 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405586)
  store %struct.Memory* %call_405586, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 40558e	 Bytes: 3
  %loadMem_40558e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40558e = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40558e)
  store %struct.Memory* %call_40558e, %struct.Memory** %MEMORY

  ; Code: je .L_4055b1	 RIP: 405591	 Bytes: 6
  %loadMem_405591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405591 = call %struct.Memory* @routine_je_.L_4055b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405591, i8* %BRANCH_TAKEN, i64 32, i64 6, i64 6)
  store %struct.Memory* %call_405591, %struct.Memory** %MEMORY

  %loadBr_405591 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405591 = icmp eq i8 %loadBr_405591, 1
  br i1 %cmpBr_405591, label %block_.L_4055b1, label %block_405597

block_405597:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405597	 Bytes: 6
  %loadMem_405597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405597 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405597)
  store %struct.Memory* %call_405597, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 40559d	 Bytes: 3
  %loadMem_40559d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40559d = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40559d)
  store %struct.Memory* %call_40559d, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4055a0	 Bytes: 3
  %loadMem_4055a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055a0 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055a0)
  store %struct.Memory* %call_4055a0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rcx,4)	 RIP: 4055a3	 Bytes: 8
  %loadMem_4055a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055a3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055a3)
  store %struct.Memory* %call_4055a3, %struct.Memory** %MEMORY

  ; Code: je .L_4055e8	 RIP: 4055ab	 Bytes: 6
  %loadMem_4055ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ab = call %struct.Memory* @routine_je_.L_4055e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ab, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4055ab, %struct.Memory** %MEMORY

  %loadBr_4055ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055ab = icmp eq i8 %loadBr_4055ab, 1
  br i1 %cmpBr_4055ab, label %block_.L_4055e8, label %block_.L_4055b1

  ; Code: .L_4055b1:	 RIP: 4055b1	 Bytes: 0
block_.L_4055b1:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 4055b1	 Bytes: 6
  %loadMem_4055b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055b1 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055b1)
  store %struct.Memory* %call_4055b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4055b7	 Bytes: 3
  %loadMem_4055b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055b7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055b7)
  store %struct.Memory* %call_4055b7, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4055ba	 Bytes: 3
  %loadMem_4055ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ba = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ba)
  store %struct.Memory* %call_4055ba, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4055bd	 Bytes: 8
  %loadMem_4055bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055bd = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055bd)
  store %struct.Memory* %call_4055bd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4055c5	 Bytes: 3
  %loadMem_4055c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055c5 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055c5)
  store %struct.Memory* %call_4055c5, %struct.Memory** %MEMORY

  ; Code: je .L_40564d	 RIP: 4055c8	 Bytes: 6
  %loadMem_4055c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055c8 = call %struct.Memory* @routine_je_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055c8, i8* %BRANCH_TAKEN, i64 133, i64 6, i64 6)
  store %struct.Memory* %call_4055c8, %struct.Memory** %MEMORY

  %loadBr_4055c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055c8 = icmp eq i8 %loadBr_4055c8, 1
  br i1 %cmpBr_4055c8, label %block_.L_40564d, label %block_4055ce

block_4055ce:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 4055ce	 Bytes: 6
  %loadMem_4055ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ce = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ce)
  store %struct.Memory* %call_4055ce, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4055d4	 Bytes: 3
  %loadMem_4055d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055d4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055d4)
  store %struct.Memory* %call_4055d4, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4055d7	 Bytes: 3
  %loadMem_4055d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055d7 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055d7)
  store %struct.Memory* %call_4055d7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x670(%rbp,%rcx,4)	 RIP: 4055da	 Bytes: 8
  %loadMem_4055da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055da = call %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055da)
  store %struct.Memory* %call_4055da, %struct.Memory** %MEMORY

  ; Code: jne .L_40564d	 RIP: 4055e2	 Bytes: 6
  %loadMem_4055e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055e2 = call %struct.Memory* @routine_jne_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055e2, i8* %BRANCH_TAKEN, i64 107, i64 6, i64 6)
  store %struct.Memory* %call_4055e2, %struct.Memory** %MEMORY

  %loadBr_4055e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055e2 = icmp eq i8 %loadBr_4055e2, 1
  br i1 %cmpBr_4055e2, label %block_.L_40564d, label %block_.L_4055e8

  ; Code: .L_4055e8:	 RIP: 4055e8	 Bytes: 0
block_.L_4055e8:

  ; Code: movl $0x1, %esi	 RIP: 4055e8	 Bytes: 5
  %loadMem_4055e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055e8 = call %struct.Memory* @routine_movl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055e8)
  store %struct.Memory* %call_4055e8, %struct.Memory** %MEMORY

  ; Code: leaq -0x1fb0(%rbp), %rdx	 RIP: 4055ed	 Bytes: 7
  %loadMem_4055ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ed = call %struct.Memory* @routine_leaq_MINUS0x1fb0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ed)
  store %struct.Memory* %call_4055ed, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4055f4	 Bytes: 6
  %loadMem_4055f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055f4 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055f4)
  store %struct.Memory* %call_4055f4, %struct.Memory** %MEMORY

  ; Code: callq .findlib	 RIP: 4055fa	 Bytes: 5
  %loadMem1_4055fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4055fa = call %struct.Memory* @routine_callq_.findlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4055fa, i64 41542, i64 5, i64 5)
  store %struct.Memory* %call1_4055fa, %struct.Memory** %MEMORY

  %loadMem2_4055fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4055fa = load i64, i64* %3
  %call2_4055fa = call %struct.Memory* @sub_40f840.findlib(%struct.State* %0, i64  %loadPC_4055fa, %struct.Memory* %loadMem2_4055fa)
  store %struct.Memory* %call2_4055fa, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4055ff	 Bytes: 6
  %loadMem_4055ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ff = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ff)
  store %struct.Memory* %call_4055ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ad8(%rbp)	 RIP: 405605	 Bytes: 6
  %loadMem_405605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405605 = call %struct.Memory* @routine_movl__eax__MINUS0x2ad8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405605)
  store %struct.Memory* %call_405605, %struct.Memory** %MEMORY

  ; Code: callq .countstones	 RIP: 40560b	 Bytes: 5
  %loadMem1_40560b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40560b = call %struct.Memory* @routine_callq_.countstones(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40560b, i64 57829, i64 5, i64 5)
  store %struct.Memory* %call1_40560b, %struct.Memory** %MEMORY

  %loadMem2_40560b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40560b = load i64, i64* %3
  %call2_40560b = call %struct.Memory* @sub_4137f0.countstones(%struct.State* %0, i64  %loadPC_40560b, %struct.Memory* %loadMem2_40560b)
  store %struct.Memory* %call2_40560b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 405610	 Bytes: 3
  %loadMem_405610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405610 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405610)
  store %struct.Memory* %call_405610, %struct.Memory** %MEMORY

  ; Code: jg .L_405630	 RIP: 405613	 Bytes: 6
  %loadMem_405613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405613 = call %struct.Memory* @routine_jg_.L_405630(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405613, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_405613, %struct.Memory** %MEMORY

  %loadBr_405613 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405613 = icmp eq i8 %loadBr_405613, 1
  br i1 %cmpBr_405613, label %block_.L_405630, label %block_405619

block_405619:
  ; Code: movl -0x1fb0(%rbp), %edi	 RIP: 405619	 Bytes: 6
  %loadMem_405619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405619 = call %struct.Memory* @routine_movl_MINUS0x1fb0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405619)
  store %struct.Memory* %call_405619, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 40561f	 Bytes: 3
  %loadMem_40561f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40561f = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40561f)
  store %struct.Memory* %call_40561f, %struct.Memory** %MEMORY

  ; Code: callq .is_self_atari	 RIP: 405622	 Bytes: 5
  %loadMem1_405622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405622 = call %struct.Memory* @routine_callq_.is_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405622, i64 60542, i64 5, i64 5)
  store %struct.Memory* %call1_405622, %struct.Memory** %MEMORY

  %loadMem2_405622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405622 = load i64, i64* %3
  %call2_405622 = call %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* %0, i64  %loadPC_405622, %struct.Memory* %loadMem2_405622)
  store %struct.Memory* %call2_405622, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 405627	 Bytes: 3
  %loadMem_405627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405627 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405627)
  store %struct.Memory* %call_405627, %struct.Memory** %MEMORY

  ; Code: jne .L_405648	 RIP: 40562a	 Bytes: 6
  %loadMem_40562a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40562a = call %struct.Memory* @routine_jne_.L_405648(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40562a, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_40562a, %struct.Memory** %MEMORY

  %loadBr_40562a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40562a = icmp eq i8 %loadBr_40562a, 1
  br i1 %cmpBr_40562a, label %block_.L_405648, label %block_.L_405630

  ; Code: .L_405630:	 RIP: 405630	 Bytes: 0
block_.L_405630:

  ; Code: movl -0x1fb0(%rbp), %eax	 RIP: 405630	 Bytes: 6
  %loadMem_405630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405630 = call %struct.Memory* @routine_movl_MINUS0x1fb0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405630)
  store %struct.Memory* %call_405630, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 405636	 Bytes: 4
  %loadMem_405636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405636 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405636)
  store %struct.Memory* %call_405636, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 40563a	 Bytes: 2
  %loadMem_40563a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40563a = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40563a)
  store %struct.Memory* %call_40563a, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 40563c	 Bytes: 7
  %loadMem_40563c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40563c = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40563c)
  store %struct.Memory* %call_40563c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 405643	 Bytes: 5
  %loadMem_405643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405643 = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405643, i64 6445, i64 5)
  store %struct.Memory* %call_405643, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_405648:	 RIP: 405648	 Bytes: 0
block_.L_405648:

  ; Code: jmpq .L_40564d	 RIP: 405648	 Bytes: 5
  %loadMem_405648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405648 = call %struct.Memory* @routine_jmpq_.L_40564d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405648, i64 5, i64 5)
  store %struct.Memory* %call_405648, %struct.Memory** %MEMORY

  br label %block_.L_40564d

  ; Code: .L_40564d:	 RIP: 40564d	 Bytes: 0
block_.L_40564d:

  ; Code: jmpq .L_405652	 RIP: 40564d	 Bytes: 5
  %loadMem_40564d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40564d = call %struct.Memory* @routine_jmpq_.L_405652(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40564d, i64 5, i64 5)
  store %struct.Memory* %call_40564d, %struct.Memory** %MEMORY

  br label %block_.L_405652

  ; Code: .L_405652:	 RIP: 405652	 Bytes: 0
block_.L_405652:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405652	 Bytes: 6
  %loadMem_405652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405652 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405652)
  store %struct.Memory* %call_405652, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405658	 Bytes: 3
  %loadMem_405658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405658 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405658)
  store %struct.Memory* %call_405658, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 40565b	 Bytes: 6
  %loadMem_40565b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40565b = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40565b)
  store %struct.Memory* %call_40565b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4054ab	 RIP: 405661	 Bytes: 5
  %loadMem_405661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405661 = call %struct.Memory* @routine_jmpq_.L_4054ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405661, i64 -438, i64 5)
  store %struct.Memory* %call_405661, %struct.Memory** %MEMORY

  br label %block_.L_4054ab

  ; Code: .L_405666:	 RIP: 405666	 Bytes: 0
block_.L_405666:

  ; Code: cmpl $0x0, -0x1f78(%rbp)	 RIP: 405666	 Bytes: 7
  %loadMem_405666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405666 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405666)
  store %struct.Memory* %call_405666, %struct.Memory** %MEMORY

  ; Code: jne .L_405680	 RIP: 40566d	 Bytes: 6
  %loadMem_40566d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40566d = call %struct.Memory* @routine_jne_.L_405680(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40566d, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_40566d, %struct.Memory** %MEMORY

  %loadBr_40566d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40566d = icmp eq i8 %loadBr_40566d, 1
  br i1 %cmpBr_40566d, label %block_.L_405680, label %block_405673

block_405673:
  ; Code: cmpl $0x0, -0x1f7c(%rbp)	 RIP: 405673	 Bytes: 7
  %loadMem_405673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405673 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405673)
  store %struct.Memory* %call_405673, %struct.Memory** %MEMORY

  ; Code: je .L_405b0b	 RIP: 40567a	 Bytes: 6
  %loadMem_40567a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40567a = call %struct.Memory* @routine_je_.L_405b0b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40567a, i8* %BRANCH_TAKEN, i64 1169, i64 6, i64 6)
  store %struct.Memory* %call_40567a, %struct.Memory** %MEMORY

  %loadBr_40567a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40567a = icmp eq i8 %loadBr_40567a, 1
  br i1 %cmpBr_40567a, label %block_.L_405b0b, label %block_.L_405680

  ; Code: .L_405680:	 RIP: 405680	 Bytes: 0
block_.L_405680:

  ; Code: cmpl $0x0, -0x1f7c(%rbp)	 RIP: 405680	 Bytes: 7
  %loadMem_405680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405680 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405680)
  store %struct.Memory* %call_405680, %struct.Memory** %MEMORY

  ; Code: jne .L_40569e	 RIP: 405687	 Bytes: 6
  %loadMem_405687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405687 = call %struct.Memory* @routine_jne_.L_40569e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405687, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_405687, %struct.Memory** %MEMORY

  %loadBr_405687 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405687 = icmp eq i8 %loadBr_405687, 1
  br i1 %cmpBr_405687, label %block_.L_40569e, label %block_40568d

block_40568d:
  ; Code: movl -0x1f78(%rbp), %eax	 RIP: 40568d	 Bytes: 6
  %loadMem_40568d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40568d = call %struct.Memory* @routine_movl_MINUS0x1f78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40568d)
  store %struct.Memory* %call_40568d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f84(%rbp)	 RIP: 405693	 Bytes: 6
  %loadMem_405693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405693 = call %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405693)
  store %struct.Memory* %call_405693, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4056aa	 RIP: 405699	 Bytes: 5
  %loadMem_405699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405699 = call %struct.Memory* @routine_jmpq_.L_4056aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405699, i64 17, i64 5)
  store %struct.Memory* %call_405699, %struct.Memory** %MEMORY

  br label %block_.L_4056aa

  ; Code: .L_40569e:	 RIP: 40569e	 Bytes: 0
block_.L_40569e:

  ; Code: movl -0x1f7c(%rbp), %eax	 RIP: 40569e	 Bytes: 6
  %loadMem_40569e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40569e = call %struct.Memory* @routine_movl_MINUS0x1f7c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40569e)
  store %struct.Memory* %call_40569e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f84(%rbp)	 RIP: 4056a4	 Bytes: 6
  %loadMem_4056a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056a4 = call %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056a4)
  store %struct.Memory* %call_4056a4, %struct.Memory** %MEMORY

  ; Code: .L_4056aa:	 RIP: 4056aa	 Bytes: 0
  br label %block_.L_4056aa
block_.L_4056aa:

  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 4056aa	 Bytes: 7
  %loadMem_4056aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056aa = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056aa)
  store %struct.Memory* %call_4056aa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x670(%rbp,%rax,4)	 RIP: 4056b1	 Bytes: 8
  %loadMem_4056b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056b1 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056b1)
  store %struct.Memory* %call_4056b1, %struct.Memory** %MEMORY

  ; Code: jne .L_405a31	 RIP: 4056b9	 Bytes: 6
  %loadMem_4056b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056b9 = call %struct.Memory* @routine_jne_.L_405a31(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056b9, i8* %BRANCH_TAKEN, i64 888, i64 6, i64 6)
  store %struct.Memory* %call_4056b9, %struct.Memory** %MEMORY

  %loadBr_4056b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4056b9 = icmp eq i8 %loadBr_4056b9, 1
  br i1 %cmpBr_4056b9, label %block_.L_405a31, label %block_4056bf

block_4056bf:
  ; Code: xorl %esi, %esi	 RIP: 4056bf	 Bytes: 2
  %loadMem_4056bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056bf = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056bf)
  store %struct.Memory* %call_4056bf, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %eax	 RIP: 4056c1	 Bytes: 5
  %loadMem_4056c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056c1 = call %struct.Memory* @routine_movl__0x190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056c1)
  store %struct.Memory* %call_4056c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4056c6	 Bytes: 2
  %loadMem_4056c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056c6 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056c6)
  store %struct.Memory* %call_4056c6, %struct.Memory** %MEMORY

  ; Code: leaq -0x2140(%rbp), %rdi	 RIP: 4056c8	 Bytes: 7
  %loadMem_4056c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056c8 = call %struct.Memory* @routine_leaq_MINUS0x2140__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056c8)
  store %struct.Memory* %call_4056c8, %struct.Memory** %MEMORY

  ; Code: movb $0x0, -0x2141(%rbp)	 RIP: 4056cf	 Bytes: 7
  %loadMem_4056cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056cf = call %struct.Memory* @routine_movb__0x0__MINUS0x2141__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056cf)
  store %struct.Memory* %call_4056cf, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 4056d6	 Bytes: 5
  %loadMem1_4056d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4056d6 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4056d6, i64 -18022, i64 5, i64 5)
  store %struct.Memory* %call1_4056d6, %struct.Memory** %MEMORY

  %loadMem2_4056d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4056d6 = load i64, i64* %3
  %call2_4056d6 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_4056d6, %struct.Memory* %loadMem2_4056d6)
  store %struct.Memory* %call2_4056d6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f8c(%rbp)	 RIP: 4056db	 Bytes: 10
  %loadMem_4056db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056db = call %struct.Memory* @routine_movl__0x0__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056db)
  store %struct.Memory* %call_4056db, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 4056e5	 Bytes: 6
  %loadMem_4056e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056e5 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056e5)
  store %struct.Memory* %call_4056e5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f90(%rbp)	 RIP: 4056eb	 Bytes: 6
  %loadMem_4056eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056eb = call %struct.Memory* @routine_movl__eax__MINUS0x1f90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056eb)
  store %struct.Memory* %call_4056eb, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 4056f1	 Bytes: 10
  %loadMem_4056f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056f1 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056f1)
  store %struct.Memory* %call_4056f1, %struct.Memory** %MEMORY

  ; Code: .L_4056fb:	 RIP: 4056fb	 Bytes: 0
  br label %block_.L_4056fb
block_.L_4056fb:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 4056fb	 Bytes: 10
  %loadMem_4056fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056fb = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056fb)
  store %struct.Memory* %call_4056fb, %struct.Memory** %MEMORY

  ; Code: jge .L_405a25	 RIP: 405705	 Bytes: 6
  %loadMem_405705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405705 = call %struct.Memory* @routine_jge_.L_405a25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405705, i8* %BRANCH_TAKEN, i64 800, i64 6, i64 6)
  store %struct.Memory* %call_405705, %struct.Memory** %MEMORY

  %loadBr_405705 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405705 = icmp eq i8 %loadBr_405705, 1
  br i1 %cmpBr_405705, label %block_.L_405a25, label %block_40570b

block_40570b:
  ; Code: movl $0x0, -0x2148(%rbp)	 RIP: 40570b	 Bytes: 10
  %loadMem_40570b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40570b = call %struct.Memory* @routine_movl__0x0__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40570b)
  store %struct.Memory* %call_40570b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x214c(%rbp)	 RIP: 405715	 Bytes: 10
  %loadMem_405715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405715 = call %struct.Memory* @routine_movl__0x0__MINUS0x214c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405715)
  store %struct.Memory* %call_405715, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 40571f	 Bytes: 7
  %loadMem_40571f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40571f = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40571f)
  store %struct.Memory* %call_40571f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405726	 Bytes: 8
  %loadMem_405726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405726 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405726)
  store %struct.Memory* %call_405726, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 40572e	 Bytes: 3
  %loadMem_40572e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40572e = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40572e)
  store %struct.Memory* %call_40572e, %struct.Memory** %MEMORY

  ; Code: je .L_40574c	 RIP: 405731	 Bytes: 6
  %loadMem_405731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405731 = call %struct.Memory* @routine_je_.L_40574c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405731, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_405731, %struct.Memory** %MEMORY

  %loadBr_405731 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405731 = icmp eq i8 %loadBr_405731, 1
  br i1 %cmpBr_405731, label %block_.L_40574c, label %block_405737

block_405737:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 405737	 Bytes: 7
  %loadMem_405737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405737 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405737)
  store %struct.Memory* %call_405737, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x670(%rbp,%rax,4)	 RIP: 40573e	 Bytes: 8
  %loadMem_40573e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40573e = call %struct.Memory* @routine_cmpl__0x1__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40573e)
  store %struct.Memory* %call_40573e, %struct.Memory** %MEMORY

  ; Code: je .L_405751	 RIP: 405746	 Bytes: 6
  %loadMem_405746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405746 = call %struct.Memory* @routine_je_.L_405751(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405746, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405746, %struct.Memory** %MEMORY

  %loadBr_405746 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405746 = icmp eq i8 %loadBr_405746, 1
  br i1 %cmpBr_405746, label %block_.L_405751, label %block_.L_40574c

  ; Code: .L_40574c:	 RIP: 40574c	 Bytes: 0
block_.L_40574c:

  ; Code: jmpq .L_405a11	 RIP: 40574c	 Bytes: 5
  %loadMem_40574c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40574c = call %struct.Memory* @routine_jmpq_.L_405a11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40574c, i64 709, i64 5)
  store %struct.Memory* %call_40574c, %struct.Memory** %MEMORY

  br label %block_.L_405a11

  ; Code: .L_405751:	 RIP: 405751	 Bytes: 0
block_.L_405751:

  ; Code: movb -0x2141(%rbp), %al	 RIP: 405751	 Bytes: 6
  %loadMem_405751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405751 = call %struct.Memory* @routine_movb_MINUS0x2141__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405751)
  store %struct.Memory* %call_405751, %struct.Memory** %MEMORY

  ; Code: addb $0x1, %al	 RIP: 405757	 Bytes: 2
  %loadMem_405757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405757 = call %struct.Memory* @routine_addb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405757)
  store %struct.Memory* %call_405757, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x2141(%rbp)	 RIP: 405759	 Bytes: 6
  %loadMem_405759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405759 = call %struct.Memory* @routine_movb__al__MINUS0x2141__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405759)
  store %struct.Memory* %call_405759, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 40575f	 Bytes: 7
  %loadMem_40575f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40575f = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40575f)
  store %struct.Memory* %call_40575f, %struct.Memory** %MEMORY

  ; Code: .L_405766:	 RIP: 405766	 Bytes: 0
  br label %block_.L_405766
block_.L_405766:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405766	 Bytes: 4
  %loadMem_405766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405766 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405766)
  store %struct.Memory* %call_405766, %struct.Memory** %MEMORY

  ; Code: jge .L_4059af	 RIP: 40576a	 Bytes: 6
  %loadMem_40576a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40576a = call %struct.Memory* @routine_jge_.L_4059af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40576a, i8* %BRANCH_TAKEN, i64 581, i64 6, i64 6)
  store %struct.Memory* %call_40576a, %struct.Memory** %MEMORY

  %loadBr_40576a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40576a = icmp eq i8 %loadBr_40576a, 1
  br i1 %cmpBr_40576a, label %block_.L_4059af, label %block_405770

block_405770:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405770	 Bytes: 6
  %loadMem_405770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405770 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405770)
  store %struct.Memory* %call_405770, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 405776	 Bytes: 4
  %loadMem_405776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405776 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405776)
  store %struct.Memory* %call_405776, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 40577a	 Bytes: 7
  %loadMem_40577a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40577a = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40577a)
  store %struct.Memory* %call_40577a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2150(%rbp)	 RIP: 405781	 Bytes: 6
  %loadMem_405781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405781 = call %struct.Memory* @routine_movl__eax__MINUS0x2150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405781)
  store %struct.Memory* %call_405781, %struct.Memory** %MEMORY

  ; Code: movslq -0x2150(%rbp), %rcx	 RIP: 405787	 Bytes: 7
  %loadMem_405787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405787 = call %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405787)
  store %struct.Memory* %call_405787, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 40578e	 Bytes: 8
  %loadMem_40578e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40578e = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40578e)
  store %struct.Memory* %call_40578e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405796	 Bytes: 3
  %loadMem_405796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405796 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405796)
  store %struct.Memory* %call_405796, %struct.Memory** %MEMORY

  ; Code: jne .L_4057a4	 RIP: 405799	 Bytes: 6
  %loadMem_405799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405799 = call %struct.Memory* @routine_jne_.L_4057a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405799, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405799, %struct.Memory** %MEMORY

  %loadBr_405799 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405799 = icmp eq i8 %loadBr_405799, 1
  br i1 %cmpBr_405799, label %block_.L_4057a4, label %block_40579f

block_40579f:
  ; Code: jmpq .L_4059a1	 RIP: 40579f	 Bytes: 5
  %loadMem_40579f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40579f = call %struct.Memory* @routine_jmpq_.L_4059a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40579f, i64 514, i64 5)
  store %struct.Memory* %call_40579f, %struct.Memory** %MEMORY

  br label %block_.L_4059a1

  ; Code: .L_4057a4:	 RIP: 4057a4	 Bytes: 0
block_.L_4057a4:

  ; Code: movslq -0x2150(%rbp), %rax	 RIP: 4057a4	 Bytes: 7
  %loadMem_4057a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057a4 = call %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057a4)
  store %struct.Memory* %call_4057a4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x670(%rbp,%rax,4)	 RIP: 4057ab	 Bytes: 8
  %loadMem_4057ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057ab = call %struct.Memory* @routine_cmpl__0x1__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057ab)
  store %struct.Memory* %call_4057ab, %struct.Memory** %MEMORY

  ; Code: jge .L_4057cd	 RIP: 4057b3	 Bytes: 6
  %loadMem_4057b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057b3 = call %struct.Memory* @routine_jge_.L_4057cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057b3, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_4057b3, %struct.Memory** %MEMORY

  %loadBr_4057b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4057b3 = icmp eq i8 %loadBr_4057b3, 1
  br i1 %cmpBr_4057b3, label %block_.L_4057cd, label %block_4057b9

block_4057b9:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4057b9	 Bytes: 6
  %loadMem_4057b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057b9 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057b9)
  store %struct.Memory* %call_4057b9, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 4057bf	 Bytes: 3
  %loadMem_4057bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057bf = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057bf)
  store %struct.Memory* %call_4057bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 4057c2	 Bytes: 6
  %loadMem_4057c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057c2 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057c2)
  store %struct.Memory* %call_4057c2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40599c	 RIP: 4057c8	 Bytes: 5
  %loadMem_4057c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057c8 = call %struct.Memory* @routine_jmpq_.L_40599c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057c8, i64 468, i64 5)
  store %struct.Memory* %call_4057c8, %struct.Memory** %MEMORY

  br label %block_.L_40599c

  ; Code: .L_4057cd:	 RIP: 4057cd	 Bytes: 0
block_.L_4057cd:

  ; Code: movslq -0x2150(%rbp), %rax	 RIP: 4057cd	 Bytes: 7
  %loadMem_4057cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057cd = call %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057cd)
  store %struct.Memory* %call_4057cd, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 4057d4	 Bytes: 8
  %loadMem_4057d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057d4 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057d4)
  store %struct.Memory* %call_4057d4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 4057dc	 Bytes: 3
  %loadMem_4057dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057dc = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057dc)
  store %struct.Memory* %call_4057dc, %struct.Memory** %MEMORY

  ; Code: jne .L_4057f9	 RIP: 4057df	 Bytes: 6
  %loadMem_4057df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057df = call %struct.Memory* @routine_jne_.L_4057f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057df, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_4057df, %struct.Memory** %MEMORY

  %loadBr_4057df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4057df = icmp eq i8 %loadBr_4057df, 1
  br i1 %cmpBr_4057df, label %block_.L_4057f9, label %block_4057e5

block_4057e5:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4057e5	 Bytes: 6
  %loadMem_4057e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057e5 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057e5)
  store %struct.Memory* %call_4057e5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4057eb	 Bytes: 3
  %loadMem_4057eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057eb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057eb)
  store %struct.Memory* %call_4057eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 4057ee	 Bytes: 6
  %loadMem_4057ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057ee = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057ee)
  store %struct.Memory* %call_4057ee, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405997	 RIP: 4057f4	 Bytes: 5
  %loadMem_4057f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057f4 = call %struct.Memory* @routine_jmpq_.L_405997(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057f4, i64 419, i64 5)
  store %struct.Memory* %call_4057f4, %struct.Memory** %MEMORY

  br label %block_.L_405997

  ; Code: .L_4057f9:	 RIP: 4057f9	 Bytes: 0
block_.L_4057f9:

  ; Code: movslq -0x2150(%rbp), %rax	 RIP: 4057f9	 Bytes: 7
  %loadMem_4057f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057f9 = call %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057f9)
  store %struct.Memory* %call_4057f9, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2140(%rbp,%rax,1), %ecx	 RIP: 405800	 Bytes: 8
  %loadMem_405800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405800 = call %struct.Memory* @routine_movsbl_MINUS0x2140__rbp__rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405800)
  store %struct.Memory* %call_405800, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2141(%rbp), %edx	 RIP: 405808	 Bytes: 7
  %loadMem_405808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405808 = call %struct.Memory* @routine_movsbl_MINUS0x2141__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405808)
  store %struct.Memory* %call_405808, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 40580f	 Bytes: 2
  %loadMem_40580f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40580f = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40580f)
  store %struct.Memory* %call_40580f, %struct.Memory** %MEMORY

  ; Code: jne .L_40582b	 RIP: 405811	 Bytes: 6
  %loadMem_405811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405811 = call %struct.Memory* @routine_jne_.L_40582b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405811, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_405811, %struct.Memory** %MEMORY

  %loadBr_405811 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405811 = icmp eq i8 %loadBr_405811, 1
  br i1 %cmpBr_405811, label %block_.L_40582b, label %block_405817

block_405817:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 405817	 Bytes: 6
  %loadMem_405817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405817 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405817)
  store %struct.Memory* %call_405817, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 40581d	 Bytes: 3
  %loadMem_40581d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40581d = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40581d)
  store %struct.Memory* %call_40581d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 405820	 Bytes: 6
  %loadMem_405820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405820 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405820)
  store %struct.Memory* %call_405820, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405992	 RIP: 405826	 Bytes: 5
  %loadMem_405826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405826 = call %struct.Memory* @routine_jmpq_.L_405992(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405826, i64 364, i64 5)
  store %struct.Memory* %call_405826, %struct.Memory** %MEMORY

  br label %block_.L_405992

  ; Code: .L_40582b:	 RIP: 40582b	 Bytes: 0
block_.L_40582b:

  ; Code: movslq -0x2150(%rbp), %rax	 RIP: 40582b	 Bytes: 7
  %loadMem_40582b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40582b = call %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40582b)
  store %struct.Memory* %call_40582b, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405832	 Bytes: 8
  %loadMem_405832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405832 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405832)
  store %struct.Memory* %call_405832, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %ecx	 RIP: 40583a	 Bytes: 3
  %loadMem_40583a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40583a = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40583a)
  store %struct.Memory* %call_40583a, %struct.Memory** %MEMORY

  ; Code: jne .L_4058ed	 RIP: 40583d	 Bytes: 6
  %loadMem_40583d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40583d = call %struct.Memory* @routine_jne_.L_4058ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40583d, i8* %BRANCH_TAKEN, i64 176, i64 6, i64 6)
  store %struct.Memory* %call_40583d, %struct.Memory** %MEMORY

  %loadBr_40583d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40583d = icmp eq i8 %loadBr_40583d, 1
  br i1 %cmpBr_40583d, label %block_.L_4058ed, label %block_405843

block_405843:
  ; Code: movl $0x1, -0x214c(%rbp)	 RIP: 405843	 Bytes: 10
  %loadMem_405843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405843 = call %struct.Memory* @routine_movl__0x1__MINUS0x214c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405843)
  store %struct.Memory* %call_405843, %struct.Memory** %MEMORY

  ; Code: movl -0x2148(%rbp), %eax	 RIP: 40584d	 Bytes: 6
  %loadMem_40584d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40584d = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40584d)
  store %struct.Memory* %call_40584d, %struct.Memory** %MEMORY

  ; Code: addl $0x7, %eax	 RIP: 405853	 Bytes: 3
  %loadMem_405853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405853 = call %struct.Memory* @routine_addl__0x7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405853)
  store %struct.Memory* %call_405853, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 405856	 Bytes: 6
  %loadMem_405856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405856 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405856)
  store %struct.Memory* %call_405856, %struct.Memory** %MEMORY

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 40585c	 Bytes: 6
  %loadMem_40585c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40585c = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40585c)
  store %struct.Memory* %call_40585c, %struct.Memory** %MEMORY

  ; Code: callq .countstones	 RIP: 405862	 Bytes: 5
  %loadMem1_405862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405862 = call %struct.Memory* @routine_callq_.countstones(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405862, i64 57230, i64 5, i64 5)
  store %struct.Memory* %call1_405862, %struct.Memory** %MEMORY

  %loadMem2_405862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405862 = load i64, i64* %3
  %call2_405862 = call %struct.Memory* @sub_4137f0.countstones(%struct.State* %0, i64  %loadPC_405862, %struct.Memory* %loadMem2_405862)
  store %struct.Memory* %call2_405862, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 405867	 Bytes: 3
  %loadMem_405867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405867 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405867)
  store %struct.Memory* %call_405867, %struct.Memory** %MEMORY

  ; Code: jle .L_40587f	 RIP: 40586a	 Bytes: 6
  %loadMem_40586a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40586a = call %struct.Memory* @routine_jle_.L_40587f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40586a, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_40586a, %struct.Memory** %MEMORY

  %loadBr_40586a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40586a = icmp eq i8 %loadBr_40586a, 1
  br i1 %cmpBr_40586a, label %block_.L_40587f, label %block_405870

block_405870:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 405870	 Bytes: 6
  %loadMem_405870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405870 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405870)
  store %struct.Memory* %call_405870, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405876	 Bytes: 3
  %loadMem_405876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405876 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405876)
  store %struct.Memory* %call_405876, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 405879	 Bytes: 6
  %loadMem_405879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405879 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405879)
  store %struct.Memory* %call_405879, %struct.Memory** %MEMORY

  ; Code: .L_40587f:	 RIP: 40587f	 Bytes: 0
  br label %block_.L_40587f
block_.L_40587f:

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 40587f	 Bytes: 6
  %loadMem_40587f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40587f = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40587f)
  store %struct.Memory* %call_40587f, %struct.Memory** %MEMORY

  ; Code: callq .countstones	 RIP: 405885	 Bytes: 5
  %loadMem1_405885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405885 = call %struct.Memory* @routine_callq_.countstones(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405885, i64 57195, i64 5, i64 5)
  store %struct.Memory* %call1_405885, %struct.Memory** %MEMORY

  %loadMem2_405885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405885 = load i64, i64* %3
  %call2_405885 = call %struct.Memory* @sub_4137f0.countstones(%struct.State* %0, i64  %loadPC_405885, %struct.Memory* %loadMem2_405885)
  store %struct.Memory* %call2_405885, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, %eax	 RIP: 40588a	 Bytes: 3
  %loadMem_40588a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40588a = call %struct.Memory* @routine_cmpl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40588a)
  store %struct.Memory* %call_40588a, %struct.Memory** %MEMORY

  ; Code: jle .L_4058a2	 RIP: 40588d	 Bytes: 6
  %loadMem_40588d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40588d = call %struct.Memory* @routine_jle_.L_4058a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40588d, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_40588d, %struct.Memory** %MEMORY

  %loadBr_40588d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40588d = icmp eq i8 %loadBr_40588d, 1
  br i1 %cmpBr_40588d, label %block_.L_4058a2, label %block_405893

block_405893:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 405893	 Bytes: 6
  %loadMem_405893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405893 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405893)
  store %struct.Memory* %call_405893, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405899	 Bytes: 3
  %loadMem_405899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405899 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405899)
  store %struct.Memory* %call_405899, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 40589c	 Bytes: 6
  %loadMem_40589c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40589c = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40589c)
  store %struct.Memory* %call_40589c, %struct.Memory** %MEMORY

  ; Code: .L_4058a2:	 RIP: 4058a2	 Bytes: 0
  br label %block_.L_4058a2
block_.L_4058a2:

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 4058a2	 Bytes: 6
  %loadMem_4058a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058a2 = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058a2)
  store %struct.Memory* %call_4058a2, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 4058a8	 Bytes: 5
  %loadMem1_4058a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4058a8 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4058a8, i64 40664, i64 5, i64 5)
  store %struct.Memory* %call1_4058a8, %struct.Memory** %MEMORY

  %loadMem2_4058a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4058a8 = load i64, i64* %3
  %call2_4058a8 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_4058a8, %struct.Memory* %loadMem2_4058a8)
  store %struct.Memory* %call2_4058a8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, %eax	 RIP: 4058ad	 Bytes: 3
  %loadMem_4058ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ad = call %struct.Memory* @routine_cmpl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ad)
  store %struct.Memory* %call_4058ad, %struct.Memory** %MEMORY

  ; Code: jge .L_4058c5	 RIP: 4058b0	 Bytes: 6
  %loadMem_4058b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058b0 = call %struct.Memory* @routine_jge_.L_4058c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058b0, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4058b0, %struct.Memory** %MEMORY

  %loadBr_4058b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4058b0 = icmp eq i8 %loadBr_4058b0, 1
  br i1 %cmpBr_4058b0, label %block_.L_4058c5, label %block_4058b6

block_4058b6:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4058b6	 Bytes: 6
  %loadMem_4058b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058b6 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058b6)
  store %struct.Memory* %call_4058b6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4058bc	 Bytes: 3
  %loadMem_4058bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058bc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058bc)
  store %struct.Memory* %call_4058bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 4058bf	 Bytes: 6
  %loadMem_4058bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058bf = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058bf)
  store %struct.Memory* %call_4058bf, %struct.Memory** %MEMORY

  ; Code: .L_4058c5:	 RIP: 4058c5	 Bytes: 0
  br label %block_.L_4058c5
block_.L_4058c5:

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 4058c5	 Bytes: 6
  %loadMem_4058c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058c5 = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058c5)
  store %struct.Memory* %call_4058c5, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 4058cb	 Bytes: 5
  %loadMem1_4058cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4058cb = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4058cb, i64 40629, i64 5, i64 5)
  store %struct.Memory* %call1_4058cb, %struct.Memory** %MEMORY

  %loadMem2_4058cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4058cb = load i64, i64* %3
  %call2_4058cb = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_4058cb, %struct.Memory* %loadMem2_4058cb)
  store %struct.Memory* %call2_4058cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4058d0	 Bytes: 3
  %loadMem_4058d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d0 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d0)
  store %struct.Memory* %call_4058d0, %struct.Memory** %MEMORY

  ; Code: jge .L_4058e8	 RIP: 4058d3	 Bytes: 6
  %loadMem_4058d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d3 = call %struct.Memory* @routine_jge_.L_4058e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d3, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4058d3, %struct.Memory** %MEMORY

  %loadBr_4058d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4058d3 = icmp eq i8 %loadBr_4058d3, 1
  br i1 %cmpBr_4058d3, label %block_.L_4058e8, label %block_4058d9

block_4058d9:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4058d9	 Bytes: 6
  %loadMem_4058d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d9 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d9)
  store %struct.Memory* %call_4058d9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4058df	 Bytes: 3
  %loadMem_4058df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058df = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058df)
  store %struct.Memory* %call_4058df, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 4058e2	 Bytes: 6
  %loadMem_4058e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058e2 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058e2)
  store %struct.Memory* %call_4058e2, %struct.Memory** %MEMORY

  ; Code: .L_4058e8:	 RIP: 4058e8	 Bytes: 0
  br label %block_.L_4058e8
block_.L_4058e8:

  ; Code: jmpq .L_405979	 RIP: 4058e8	 Bytes: 5
  %loadMem_4058e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058e8 = call %struct.Memory* @routine_jmpq_.L_405979(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058e8, i64 145, i64 5)
  store %struct.Memory* %call_4058e8, %struct.Memory** %MEMORY

  br label %block_.L_405979

  ; Code: .L_4058ed:	 RIP: 4058ed	 Bytes: 0
block_.L_4058ed:

  ; Code: movl $0xf1, %edx	 RIP: 4058ed	 Bytes: 5
  %loadMem_4058ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ed = call %struct.Memory* @routine_movl__0xf1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ed)
  store %struct.Memory* %call_4058ed, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 4058f2	 Bytes: 2
  %loadMem_4058f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f2 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f2)
  store %struct.Memory* %call_4058f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4058f4	 Bytes: 2
  %loadMem_4058f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f4 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f4)
  store %struct.Memory* %call_4058f4, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4058f6	 Bytes: 6
  %loadMem_4058f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f6 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f6)
  store %struct.Memory* %call_4058f6, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 4058fc	 Bytes: 3
  %loadMem_4058fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058fc = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058fc)
  store %struct.Memory* %call_4058fc, %struct.Memory** %MEMORY

  ; Code: callq .approxlib	 RIP: 4058ff	 Bytes: 5
  %loadMem1_4058ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4058ff = call %struct.Memory* @routine_callq_.approxlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4058ff, i64 48305, i64 5, i64 5)
  store %struct.Memory* %call1_4058ff, %struct.Memory** %MEMORY

  %loadMem2_4058ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4058ff = load i64, i64* %3
  %call2_4058ff = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64  %loadPC_4058ff, %struct.Memory* %loadMem2_4058ff)
  store %struct.Memory* %call2_4058ff, %struct.Memory** %MEMORY

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 405904	 Bytes: 6
  %loadMem_405904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405904 = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405904)
  store %struct.Memory* %call_405904, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2adc(%rbp)	 RIP: 40590a	 Bytes: 6
  %loadMem_40590a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40590a = call %struct.Memory* @routine_movl__eax__MINUS0x2adc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40590a)
  store %struct.Memory* %call_40590a, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405910	 Bytes: 5
  %loadMem1_405910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405910 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405910, i64 40560, i64 5, i64 5)
  store %struct.Memory* %call1_405910, %struct.Memory** %MEMORY

  %loadMem2_405910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405910 = load i64, i64* %3
  %call2_405910 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405910, %struct.Memory* %loadMem2_405910)
  store %struct.Memory* %call2_405910, %struct.Memory** %MEMORY

  ; Code: movl -0x2adc(%rbp), %edx	 RIP: 405915	 Bytes: 6
  %loadMem_405915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405915 = call %struct.Memory* @routine_movl_MINUS0x2adc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405915)
  store %struct.Memory* %call_405915, %struct.Memory** %MEMORY

  ; Code: subl %eax, %edx	 RIP: 40591b	 Bytes: 2
  %loadMem_40591b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40591b = call %struct.Memory* @routine_subl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40591b)
  store %struct.Memory* %call_40591b, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2154(%rbp)	 RIP: 40591d	 Bytes: 6
  %loadMem_40591d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40591d = call %struct.Memory* @routine_movl__edx__MINUS0x2154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40591d)
  store %struct.Memory* %call_40591d, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x214c(%rbp)	 RIP: 405923	 Bytes: 10
  %loadMem_405923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405923 = call %struct.Memory* @routine_movl__0x1__MINUS0x214c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405923)
  store %struct.Memory* %call_405923, %struct.Memory** %MEMORY

  ; Code: movl -0x2148(%rbp), %eax	 RIP: 40592d	 Bytes: 6
  %loadMem_40592d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40592d = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40592d)
  store %struct.Memory* %call_40592d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405933	 Bytes: 3
  %loadMem_405933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405933 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405933)
  store %struct.Memory* %call_405933, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 405936	 Bytes: 6
  %loadMem_405936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405936 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405936)
  store %struct.Memory* %call_405936, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x2154(%rbp)	 RIP: 40593c	 Bytes: 7
  %loadMem_40593c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40593c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40593c)
  store %struct.Memory* %call_40593c, %struct.Memory** %MEMORY

  ; Code: jl .L_405958	 RIP: 405943	 Bytes: 6
  %loadMem_405943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405943 = call %struct.Memory* @routine_jl_.L_405958(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405943, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405943, %struct.Memory** %MEMORY

  %loadBr_405943 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405943 = icmp eq i8 %loadBr_405943, 1
  br i1 %cmpBr_405943, label %block_.L_405958, label %block_405949

block_405949:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 405949	 Bytes: 6
  %loadMem_405949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405949 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405949)
  store %struct.Memory* %call_405949, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40594f	 Bytes: 3
  %loadMem_40594f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40594f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40594f)
  store %struct.Memory* %call_40594f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 405952	 Bytes: 6
  %loadMem_405952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405952 = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405952)
  store %struct.Memory* %call_405952, %struct.Memory** %MEMORY

  ; Code: .L_405958:	 RIP: 405958	 Bytes: 0
  br label %block_.L_405958
block_.L_405958:

  ; Code: cmpl $0x0, -0x2154(%rbp)	 RIP: 405958	 Bytes: 7
  %loadMem_405958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405958 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405958)
  store %struct.Memory* %call_405958, %struct.Memory** %MEMORY

  ; Code: jle .L_405974	 RIP: 40595f	 Bytes: 6
  %loadMem_40595f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40595f = call %struct.Memory* @routine_jle_.L_405974(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40595f, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_40595f, %struct.Memory** %MEMORY

  %loadBr_40595f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40595f = icmp eq i8 %loadBr_40595f, 1
  br i1 %cmpBr_40595f, label %block_.L_405974, label %block_405965

block_405965:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 405965	 Bytes: 6
  %loadMem_405965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405965 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405965)
  store %struct.Memory* %call_405965, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40596b	 Bytes: 3
  %loadMem_40596b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40596b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40596b)
  store %struct.Memory* %call_40596b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 40596e	 Bytes: 6
  %loadMem_40596e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40596e = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40596e)
  store %struct.Memory* %call_40596e, %struct.Memory** %MEMORY

  ; Code: .L_405974:	 RIP: 405974	 Bytes: 0
  br label %block_.L_405974
block_.L_405974:

  ; Code: jmpq .L_405979	 RIP: 405974	 Bytes: 5
  %loadMem_405974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405974 = call %struct.Memory* @routine_jmpq_.L_405979(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405974, i64 5, i64 5)
  store %struct.Memory* %call_405974, %struct.Memory** %MEMORY

  br label %block_.L_405979

  ; Code: .L_405979:	 RIP: 405979	 Bytes: 0
block_.L_405979:

  ; Code: leaq -0x2140(%rbp), %rsi	 RIP: 405979	 Bytes: 7
  %loadMem_405979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405979 = call %struct.Memory* @routine_leaq_MINUS0x2140__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405979)
  store %struct.Memory* %call_405979, %struct.Memory** %MEMORY

  ; Code: movl -0x2150(%rbp), %edi	 RIP: 405980	 Bytes: 6
  %loadMem_405980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405980 = call %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405980)
  store %struct.Memory* %call_405980, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2141(%rbp), %edx	 RIP: 405986	 Bytes: 7
  %loadMem_405986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405986 = call %struct.Memory* @routine_movsbl_MINUS0x2141__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405986)
  store %struct.Memory* %call_405986, %struct.Memory** %MEMORY

  ; Code: callq .mark_string	 RIP: 40598d	 Bytes: 5
  %loadMem1_40598d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40598d = call %struct.Memory* @routine_callq_.mark_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40598d, i64 66339, i64 5, i64 5)
  store %struct.Memory* %call1_40598d, %struct.Memory** %MEMORY

  %loadMem2_40598d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40598d = load i64, i64* %3
  %call2_40598d = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64  %loadPC_40598d, %struct.Memory* %loadMem2_40598d)
  store %struct.Memory* %call2_40598d, %struct.Memory** %MEMORY

  ; Code: .L_405992:	 RIP: 405992	 Bytes: 0
  br label %block_.L_405992
block_.L_405992:

  ; Code: jmpq .L_405997	 RIP: 405992	 Bytes: 5
  %loadMem_405992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405992 = call %struct.Memory* @routine_jmpq_.L_405997(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405992, i64 5, i64 5)
  store %struct.Memory* %call_405992, %struct.Memory** %MEMORY

  br label %block_.L_405997

  ; Code: .L_405997:	 RIP: 405997	 Bytes: 0
block_.L_405997:

  ; Code: jmpq .L_40599c	 RIP: 405997	 Bytes: 5
  %loadMem_405997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405997 = call %struct.Memory* @routine_jmpq_.L_40599c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405997, i64 5, i64 5)
  store %struct.Memory* %call_405997, %struct.Memory** %MEMORY

  br label %block_.L_40599c

  ; Code: .L_40599c:	 RIP: 40599c	 Bytes: 0
block_.L_40599c:

  ; Code: jmpq .L_4059a1	 RIP: 40599c	 Bytes: 5
  %loadMem_40599c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40599c = call %struct.Memory* @routine_jmpq_.L_4059a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40599c, i64 5, i64 5)
  store %struct.Memory* %call_40599c, %struct.Memory** %MEMORY

  br label %block_.L_4059a1

  ; Code: .L_4059a1:	 RIP: 4059a1	 Bytes: 0
block_.L_4059a1:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4059a1	 Bytes: 3
  %loadMem_4059a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a1 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a1)
  store %struct.Memory* %call_4059a1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4059a4	 Bytes: 3
  %loadMem_4059a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a4)
  store %struct.Memory* %call_4059a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4059a7	 Bytes: 3
  %loadMem_4059a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a7 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a7)
  store %struct.Memory* %call_4059a7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405766	 RIP: 4059aa	 Bytes: 5
  %loadMem_4059aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059aa = call %struct.Memory* @routine_jmpq_.L_405766(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059aa, i64 -580, i64 5)
  store %struct.Memory* %call_4059aa, %struct.Memory** %MEMORY

  br label %block_.L_405766

  ; Code: .L_4059af:	 RIP: 4059af	 Bytes: 0
block_.L_4059af:

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4059af	 Bytes: 6
  %loadMem_4059af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059af = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059af)
  store %struct.Memory* %call_4059af, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 4059b5	 Bytes: 3
  %loadMem_4059b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059b5 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059b5)
  store %struct.Memory* %call_4059b5, %struct.Memory** %MEMORY

  ; Code: callq .is_suicide	 RIP: 4059b8	 Bytes: 5
  %loadMem1_4059b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4059b8 = call %struct.Memory* @routine_callq_.is_suicide(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4059b8, i64 15320, i64 5, i64 5)
  store %struct.Memory* %call1_4059b8, %struct.Memory** %MEMORY

  %loadMem2_4059b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4059b8 = load i64, i64* %3
  %call2_4059b8 = call %struct.Memory* @sub_409590.is_suicide(%struct.State* %0, i64  %loadPC_4059b8, %struct.Memory* %loadMem2_4059b8)
  store %struct.Memory* %call2_4059b8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4059bd	 Bytes: 3
  %loadMem_4059bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059bd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059bd)
  store %struct.Memory* %call_4059bd, %struct.Memory** %MEMORY

  ; Code: je .L_4059d5	 RIP: 4059c0	 Bytes: 6
  %loadMem_4059c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059c0 = call %struct.Memory* @routine_je_.L_4059d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059c0, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4059c0, %struct.Memory** %MEMORY

  %loadBr_4059c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4059c0 = icmp eq i8 %loadBr_4059c0, 1
  br i1 %cmpBr_4059c0, label %block_.L_4059d5, label %block_4059c6

block_4059c6:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4059c6	 Bytes: 6
  %loadMem_4059c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059c6 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059c6)
  store %struct.Memory* %call_4059c6, %struct.Memory** %MEMORY

  ; Code: subl $0x3, %eax	 RIP: 4059cc	 Bytes: 3
  %loadMem_4059cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059cc = call %struct.Memory* @routine_subl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059cc)
  store %struct.Memory* %call_4059cc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2148(%rbp)	 RIP: 4059cf	 Bytes: 6
  %loadMem_4059cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059cf = call %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059cf)
  store %struct.Memory* %call_4059cf, %struct.Memory** %MEMORY

  ; Code: .L_4059d5:	 RIP: 4059d5	 Bytes: 0
  br label %block_.L_4059d5
block_.L_4059d5:

  ; Code: cmpl $0x0, -0x214c(%rbp)	 RIP: 4059d5	 Bytes: 7
  %loadMem_4059d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059d5 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x214c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059d5)
  store %struct.Memory* %call_4059d5, %struct.Memory** %MEMORY

  ; Code: je .L_405a0c	 RIP: 4059dc	 Bytes: 6
  %loadMem_4059dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059dc = call %struct.Memory* @routine_je_.L_405a0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059dc, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_4059dc, %struct.Memory** %MEMORY

  %loadBr_4059dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4059dc = icmp eq i8 %loadBr_4059dc, 1
  br i1 %cmpBr_4059dc, label %block_.L_405a0c, label %block_4059e2

block_4059e2:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4059e2	 Bytes: 6
  %loadMem_4059e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059e2 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059e2)
  store %struct.Memory* %call_4059e2, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1f8c(%rbp), %eax	 RIP: 4059e8	 Bytes: 6
  %loadMem_4059e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059e8 = call %struct.Memory* @routine_cmpl_MINUS0x1f8c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059e8)
  store %struct.Memory* %call_4059e8, %struct.Memory** %MEMORY

  ; Code: jle .L_405a0c	 RIP: 4059ee	 Bytes: 6
  %loadMem_4059ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059ee = call %struct.Memory* @routine_jle_.L_405a0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059ee, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_4059ee, %struct.Memory** %MEMORY

  %loadBr_4059ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4059ee = icmp eq i8 %loadBr_4059ee, 1
  br i1 %cmpBr_4059ee, label %block_.L_405a0c, label %block_4059f4

block_4059f4:
  ; Code: movl -0x2148(%rbp), %eax	 RIP: 4059f4	 Bytes: 6
  %loadMem_4059f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059f4 = call %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059f4)
  store %struct.Memory* %call_4059f4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f8c(%rbp)	 RIP: 4059fa	 Bytes: 6
  %loadMem_4059fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059fa = call %struct.Memory* @routine_movl__eax__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059fa)
  store %struct.Memory* %call_4059fa, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405a00	 Bytes: 6
  %loadMem_405a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a00 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a00)
  store %struct.Memory* %call_405a00, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f90(%rbp)	 RIP: 405a06	 Bytes: 6
  %loadMem_405a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a06 = call %struct.Memory* @routine_movl__eax__MINUS0x1f90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a06)
  store %struct.Memory* %call_405a06, %struct.Memory** %MEMORY

  ; Code: .L_405a0c:	 RIP: 405a0c	 Bytes: 0
  br label %block_.L_405a0c
block_.L_405a0c:

  ; Code: jmpq .L_405a11	 RIP: 405a0c	 Bytes: 5
  %loadMem_405a0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a0c = call %struct.Memory* @routine_jmpq_.L_405a11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a0c, i64 5, i64 5)
  store %struct.Memory* %call_405a0c, %struct.Memory** %MEMORY

  br label %block_.L_405a11

  ; Code: .L_405a11:	 RIP: 405a11	 Bytes: 0
block_.L_405a11:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405a11	 Bytes: 6
  %loadMem_405a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a11 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a11)
  store %struct.Memory* %call_405a11, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405a17	 Bytes: 3
  %loadMem_405a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a17 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a17)
  store %struct.Memory* %call_405a17, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 405a1a	 Bytes: 6
  %loadMem_405a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a1a = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a1a)
  store %struct.Memory* %call_405a1a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4056fb	 RIP: 405a20	 Bytes: 5
  %loadMem_405a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a20 = call %struct.Memory* @routine_jmpq_.L_4056fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a20, i64 -805, i64 5)
  store %struct.Memory* %call_405a20, %struct.Memory** %MEMORY

  br label %block_.L_4056fb

  ; Code: .L_405a25:	 RIP: 405a25	 Bytes: 0
block_.L_405a25:

  ; Code: movl -0x1f90(%rbp), %eax	 RIP: 405a25	 Bytes: 6
  %loadMem_405a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a25 = call %struct.Memory* @routine_movl_MINUS0x1f90__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a25)
  store %struct.Memory* %call_405a25, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f84(%rbp)	 RIP: 405a2b	 Bytes: 6
  %loadMem_405a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a2b = call %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a2b)
  store %struct.Memory* %call_405a2b, %struct.Memory** %MEMORY

  ; Code: .L_405a31:	 RIP: 405a31	 Bytes: 0
  br label %block_.L_405a31
block_.L_405a31:

  ; Code: jmpq .L_405a36	 RIP: 405a31	 Bytes: 5
  %loadMem_405a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a31 = call %struct.Memory* @routine_jmpq_.L_405a36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a31, i64 5, i64 5)
  store %struct.Memory* %call_405a31, %struct.Memory** %MEMORY

  br label %block_.L_405a36

  ; Code: .L_405a36:	 RIP: 405a36	 Bytes: 0
block_.L_405a36:

  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 405a36	 Bytes: 7
  %loadMem_405a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a36 = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a36)
  store %struct.Memory* %call_405a36, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x670(%rbp,%rax,4)	 RIP: 405a3d	 Bytes: 8
  %loadMem_405a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a3d = call %struct.Memory* @routine_cmpl__0x1__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a3d)
  store %struct.Memory* %call_405a3d, %struct.Memory** %MEMORY

  ; Code: jle .L_405af3	 RIP: 405a45	 Bytes: 6
  %loadMem_405a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a45 = call %struct.Memory* @routine_jle_.L_405af3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a45, i8* %BRANCH_TAKEN, i64 174, i64 6, i64 6)
  store %struct.Memory* %call_405a45, %struct.Memory** %MEMORY

  %loadBr_405a45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405a45 = icmp eq i8 %loadBr_405a45, 1
  br i1 %cmpBr_405a45, label %block_.L_405af3, label %block_405a4b

block_405a4b:
  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 405a4b	 Bytes: 7
  %loadMem_405a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a4b = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a4b)
  store %struct.Memory* %call_405a4b, %struct.Memory** %MEMORY

  ; Code: .L_405a52:	 RIP: 405a52	 Bytes: 0
  br label %block_.L_405a52
block_.L_405a52:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405a52	 Bytes: 4
  %loadMem_405a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a52 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a52)
  store %struct.Memory* %call_405a52, %struct.Memory** %MEMORY

  ; Code: jge .L_405aee	 RIP: 405a56	 Bytes: 6
  %loadMem_405a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a56 = call %struct.Memory* @routine_jge_.L_405aee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a56, i8* %BRANCH_TAKEN, i64 152, i64 6, i64 6)
  store %struct.Memory* %call_405a56, %struct.Memory** %MEMORY

  %loadBr_405a56 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405a56 = icmp eq i8 %loadBr_405a56, 1
  br i1 %cmpBr_405a56, label %block_.L_405aee, label %block_405a5c

block_405a5c:
  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 405a5c	 Bytes: 6
  %loadMem_405a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a5c = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a5c)
  store %struct.Memory* %call_405a5c, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 405a62	 Bytes: 4
  %loadMem_405a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a62 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a62)
  store %struct.Memory* %call_405a62, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 405a66	 Bytes: 7
  %loadMem_405a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a66 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a66)
  store %struct.Memory* %call_405a66, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2158(%rbp)	 RIP: 405a6d	 Bytes: 6
  %loadMem_405a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a6d = call %struct.Memory* @routine_movl__eax__MINUS0x2158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a6d)
  store %struct.Memory* %call_405a6d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2158(%rbp), %rcx	 RIP: 405a73	 Bytes: 7
  %loadMem_405a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a73 = call %struct.Memory* @routine_movslq_MINUS0x2158__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a73)
  store %struct.Memory* %call_405a73, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405a7a	 Bytes: 8
  %loadMem_405a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a7a = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a7a)
  store %struct.Memory* %call_405a7a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405a82	 Bytes: 3
  %loadMem_405a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a82 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a82)
  store %struct.Memory* %call_405a82, %struct.Memory** %MEMORY

  ; Code: je .L_405adb	 RIP: 405a85	 Bytes: 6
  %loadMem_405a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a85 = call %struct.Memory* @routine_je_.L_405adb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a85, i8* %BRANCH_TAKEN, i64 86, i64 6, i64 6)
  store %struct.Memory* %call_405a85, %struct.Memory** %MEMORY

  %loadBr_405a85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405a85 = icmp eq i8 %loadBr_405a85, 1
  br i1 %cmpBr_405a85, label %block_.L_405adb, label %block_405a8b

block_405a8b:
  ; Code: movslq -0x2158(%rbp), %rax	 RIP: 405a8b	 Bytes: 7
  %loadMem_405a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a8b = call %struct.Memory* @routine_movslq_MINUS0x2158__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a8b)
  store %struct.Memory* %call_405a8b, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405a92	 Bytes: 8
  %loadMem_405a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a92 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a92)
  store %struct.Memory* %call_405a92, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 405a9a	 Bytes: 3
  %loadMem_405a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a9a = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a9a)
  store %struct.Memory* %call_405a9a, %struct.Memory** %MEMORY

  ; Code: jne .L_405adb	 RIP: 405a9d	 Bytes: 6
  %loadMem_405a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a9d = call %struct.Memory* @routine_jne_.L_405adb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a9d, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_405a9d, %struct.Memory** %MEMORY

  %loadBr_405a9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405a9d = icmp eq i8 %loadBr_405a9d, 1
  br i1 %cmpBr_405a9d, label %block_.L_405adb, label %block_405aa3

block_405aa3:
  ; Code: movslq -0x2158(%rbp), %rax	 RIP: 405aa3	 Bytes: 7
  %loadMem_405aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aa3 = call %struct.Memory* @routine_movslq_MINUS0x2158__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aa3)
  store %struct.Memory* %call_405aa3, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %ecx	 RIP: 405aaa	 Bytes: 7
  %loadMem_405aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aaa = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aaa)
  store %struct.Memory* %call_405aaa, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 405ab1	 Bytes: 7
  %loadMem_405ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ab1 = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ab1)
  store %struct.Memory* %call_405ab1, %struct.Memory** %MEMORY

  ; Code: movl -0x670(%rbp,%rax,4), %edx	 RIP: 405ab8	 Bytes: 7
  %loadMem_405ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ab8 = call %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ab8)
  store %struct.Memory* %call_405ab8, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 405abf	 Bytes: 3
  %loadMem_405abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405abf = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405abf)
  store %struct.Memory* %call_405abf, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 405ac2	 Bytes: 2
  %loadMem_405ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ac2 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ac2)
  store %struct.Memory* %call_405ac2, %struct.Memory** %MEMORY

  ; Code: jne .L_405adb	 RIP: 405ac4	 Bytes: 6
  %loadMem_405ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ac4 = call %struct.Memory* @routine_jne_.L_405adb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ac4, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_405ac4, %struct.Memory** %MEMORY

  %loadBr_405ac4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405ac4 = icmp eq i8 %loadBr_405ac4, 1
  br i1 %cmpBr_405ac4, label %block_.L_405adb, label %block_405aca

block_405aca:
  ; Code: movl -0x2158(%rbp), %eax	 RIP: 405aca	 Bytes: 6
  %loadMem_405aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aca = call %struct.Memory* @routine_movl_MINUS0x2158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aca)
  store %struct.Memory* %call_405aca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f84(%rbp)	 RIP: 405ad0	 Bytes: 6
  %loadMem_405ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ad0 = call %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ad0)
  store %struct.Memory* %call_405ad0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405aee	 RIP: 405ad6	 Bytes: 5
  %loadMem_405ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ad6 = call %struct.Memory* @routine_jmpq_.L_405aee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ad6, i64 24, i64 5)
  store %struct.Memory* %call_405ad6, %struct.Memory** %MEMORY

  br label %block_.L_405aee

  ; Code: .L_405adb:	 RIP: 405adb	 Bytes: 0
block_.L_405adb:

  ; Code: jmpq .L_405ae0	 RIP: 405adb	 Bytes: 5
  %loadMem_405adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405adb = call %struct.Memory* @routine_jmpq_.L_405ae0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405adb, i64 5, i64 5)
  store %struct.Memory* %call_405adb, %struct.Memory** %MEMORY

  br label %block_.L_405ae0

  ; Code: .L_405ae0:	 RIP: 405ae0	 Bytes: 0
block_.L_405ae0:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 405ae0	 Bytes: 3
  %loadMem_405ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae0 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae0)
  store %struct.Memory* %call_405ae0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405ae3	 Bytes: 3
  %loadMem_405ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae3)
  store %struct.Memory* %call_405ae3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 405ae6	 Bytes: 3
  %loadMem_405ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae6 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae6)
  store %struct.Memory* %call_405ae6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405a52	 RIP: 405ae9	 Bytes: 5
  %loadMem_405ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae9 = call %struct.Memory* @routine_jmpq_.L_405a52(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae9, i64 -151, i64 5)
  store %struct.Memory* %call_405ae9, %struct.Memory** %MEMORY

  br label %block_.L_405a52

  ; Code: .L_405aee:	 RIP: 405aee	 Bytes: 0
block_.L_405aee:

  ; Code: jmpq .L_405a36	 RIP: 405aee	 Bytes: 5
  %loadMem_405aee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aee = call %struct.Memory* @routine_jmpq_.L_405a36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aee, i64 -184, i64 5)
  store %struct.Memory* %call_405aee, %struct.Memory** %MEMORY

  br label %block_.L_405a36

  ; Code: .L_405af3:	 RIP: 405af3	 Bytes: 0
block_.L_405af3:

  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 405af3	 Bytes: 6
  %loadMem_405af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405af3 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405af3)
  store %struct.Memory* %call_405af3, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 405af9	 Bytes: 4
  %loadMem_405af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405af9 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405af9)
  store %struct.Memory* %call_405af9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 405afd	 Bytes: 2
  %loadMem_405afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405afd = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405afd)
  store %struct.Memory* %call_405afd, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 405aff	 Bytes: 7
  %loadMem_405aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aff = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aff)
  store %struct.Memory* %call_405aff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 405b06	 Bytes: 5
  %loadMem_405b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b06 = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b06, i64 5226, i64 5)
  store %struct.Memory* %call_405b06, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_405b0b:	 RIP: 405b0b	 Bytes: 0
block_.L_405b0b:

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 405b0b	 Bytes: 10
  %loadMem_405b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b0b = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b0b)
  store %struct.Memory* %call_405b0b, %struct.Memory** %MEMORY

  ; Code: .L_405b15:	 RIP: 405b15	 Bytes: 0
  br label %block_.L_405b15
block_.L_405b15:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 405b15	 Bytes: 10
  %loadMem_405b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b15 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b15)
  store %struct.Memory* %call_405b15, %struct.Memory** %MEMORY

  ; Code: jge .L_40640d	 RIP: 405b1f	 Bytes: 6
  %loadMem_405b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b1f = call %struct.Memory* @routine_jge_.L_40640d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b1f, i8* %BRANCH_TAKEN, i64 2286, i64 6, i64 6)
  store %struct.Memory* %call_405b1f, %struct.Memory** %MEMORY

  %loadBr_405b1f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405b1f = icmp eq i8 %loadBr_405b1f, 1
  br i1 %cmpBr_405b1f, label %block_.L_40640d, label %block_405b25

block_405b25:
  ; Code: movl $0x0, -0x215c(%rbp)	 RIP: 405b25	 Bytes: 10
  %loadMem_405b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b25 = call %struct.Memory* @routine_movl__0x0__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b25)
  store %struct.Memory* %call_405b25, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2160(%rbp)	 RIP: 405b2f	 Bytes: 10
  %loadMem_405b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b2f = call %struct.Memory* @routine_movl__0x0__MINUS0x2160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b2f)
  store %struct.Memory* %call_405b2f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2164(%rbp)	 RIP: 405b39	 Bytes: 10
  %loadMem_405b39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b39 = call %struct.Memory* @routine_movl__0x0__MINUS0x2164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b39)
  store %struct.Memory* %call_405b39, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2168(%rbp)	 RIP: 405b43	 Bytes: 10
  %loadMem_405b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b43 = call %struct.Memory* @routine_movl__0x0__MINUS0x2168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b43)
  store %struct.Memory* %call_405b43, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x216c(%rbp)	 RIP: 405b4d	 Bytes: 10
  %loadMem_405b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b4d = call %struct.Memory* @routine_movl__0x0__MINUS0x216c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b4d)
  store %struct.Memory* %call_405b4d, %struct.Memory** %MEMORY

  ; Code: movl $0x3, -0x2170(%rbp)	 RIP: 405b57	 Bytes: 10
  %loadMem_405b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b57 = call %struct.Memory* @routine_movl__0x3__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b57)
  store %struct.Memory* %call_405b57, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2174(%rbp)	 RIP: 405b61	 Bytes: 10
  %loadMem_405b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b61 = call %struct.Memory* @routine_movl__0x0__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b61)
  store %struct.Memory* %call_405b61, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 405b6b	 Bytes: 7
  %loadMem_405b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b6b = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b6b)
  store %struct.Memory* %call_405b6b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xcb0(%rbp,%rax,4)	 RIP: 405b72	 Bytes: 11
  %loadMem_405b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b72 = call %struct.Memory* @routine_movl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b72)
  store %struct.Memory* %call_405b72, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 405b7d	 Bytes: 7
  %loadMem_405b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b7d = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b7d)
  store %struct.Memory* %call_405b7d, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405b84	 Bytes: 8
  %loadMem_405b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b84 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b84)
  store %struct.Memory* %call_405b84, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 405b8c	 Bytes: 3
  %loadMem_405b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b8c = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b8c)
  store %struct.Memory* %call_405b8c, %struct.Memory** %MEMORY

  ; Code: jne .L_405baa	 RIP: 405b8f	 Bytes: 6
  %loadMem_405b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b8f = call %struct.Memory* @routine_jne_.L_405baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b8f, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_405b8f, %struct.Memory** %MEMORY

  %loadBr_405b8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405b8f = icmp eq i8 %loadBr_405b8f, 1
  br i1 %cmpBr_405b8f, label %block_.L_405baa, label %block_405b95

block_405b95:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 405b95	 Bytes: 7
  %loadMem_405b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b95 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b95)
  store %struct.Memory* %call_405b95, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, -0x670(%rbp,%rax,4)	 RIP: 405b9c	 Bytes: 8
  %loadMem_405b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b9c = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b9c)
  store %struct.Memory* %call_405b9c, %struct.Memory** %MEMORY

  ; Code: je .L_405baf	 RIP: 405ba4	 Bytes: 6
  %loadMem_405ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ba4 = call %struct.Memory* @routine_je_.L_405baf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ba4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405ba4, %struct.Memory** %MEMORY

  %loadBr_405ba4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405ba4 = icmp eq i8 %loadBr_405ba4, 1
  br i1 %cmpBr_405ba4, label %block_.L_405baf, label %block_.L_405baa

  ; Code: .L_405baa:	 RIP: 405baa	 Bytes: 0
block_.L_405baa:

  ; Code: jmpq .L_4063f9	 RIP: 405baa	 Bytes: 5
  %loadMem_405baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405baa = call %struct.Memory* @routine_jmpq_.L_4063f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405baa, i64 2127, i64 5)
  store %struct.Memory* %call_405baa, %struct.Memory** %MEMORY

  br label %block_.L_4063f9

  ; Code: .L_405baf:	 RIP: 405baf	 Bytes: 0
block_.L_405baf:

  ; Code: xorl %esi, %esi	 RIP: 405baf	 Bytes: 2
  %loadMem_405baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405baf = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405baf)
  store %struct.Memory* %call_405baf, %struct.Memory** %MEMORY

  ; Code: movl $0x640, %eax	 RIP: 405bb1	 Bytes: 5
  %loadMem_405bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb1 = call %struct.Memory* @routine_movl__0x640___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb1)
  store %struct.Memory* %call_405bb1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 405bb6	 Bytes: 2
  %loadMem_405bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb6 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb6)
  store %struct.Memory* %call_405bb6, %struct.Memory** %MEMORY

  ; Code: leaq -0x27c0(%rbp), %rcx	 RIP: 405bb8	 Bytes: 7
  %loadMem_405bb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb8 = call %struct.Memory* @routine_leaq_MINUS0x27c0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb8)
  store %struct.Memory* %call_405bb8, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 405bbf	 Bytes: 3
  %loadMem_405bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bbf = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bbf)
  store %struct.Memory* %call_405bbf, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 405bc2	 Bytes: 5
  %loadMem1_405bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405bc2 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405bc2, i64 -19282, i64 5, i64 5)
  store %struct.Memory* %call1_405bc2, %struct.Memory** %MEMORY

  %loadMem2_405bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405bc2 = load i64, i64* %3
  %call2_405bc2 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_405bc2, %struct.Memory* %loadMem2_405bc2)
  store %struct.Memory* %call2_405bc2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 405bc7	 Bytes: 7
  %loadMem_405bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bc7 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bc7)
  store %struct.Memory* %call_405bc7, %struct.Memory** %MEMORY

  ; Code: .L_405bce:	 RIP: 405bce	 Bytes: 0
  br label %block_.L_405bce
block_.L_405bce:

  ; Code: cmpl $0x8, -0x28(%rbp)	 RIP: 405bce	 Bytes: 4
  %loadMem_405bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bce = call %struct.Memory* @routine_cmpl__0x8__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bce)
  store %struct.Memory* %call_405bce, %struct.Memory** %MEMORY

  ; Code: jge .L_406135	 RIP: 405bd2	 Bytes: 6
  %loadMem_405bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bd2 = call %struct.Memory* @routine_jge_.L_406135(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bd2, i8* %BRANCH_TAKEN, i64 1379, i64 6, i64 6)
  store %struct.Memory* %call_405bd2, %struct.Memory** %MEMORY

  %loadBr_405bd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405bd2 = icmp eq i8 %loadBr_405bd2, 1
  br i1 %cmpBr_405bd2, label %block_.L_406135, label %block_405bd8

block_405bd8:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 405bd8	 Bytes: 6
  %loadMem_405bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bd8 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bd8)
  store %struct.Memory* %call_405bd8, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 405bde	 Bytes: 4
  %loadMem_405bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bde = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bde)
  store %struct.Memory* %call_405bde, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 405be2	 Bytes: 7
  %loadMem_405be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405be2 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405be2)
  store %struct.Memory* %call_405be2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27c4(%rbp)	 RIP: 405be9	 Bytes: 6
  %loadMem_405be9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405be9 = call %struct.Memory* @routine_movl__eax__MINUS0x27c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405be9)
  store %struct.Memory* %call_405be9, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405bef	 Bytes: 7
  %loadMem_405bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bef = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bef)
  store %struct.Memory* %call_405bef, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405bf6	 Bytes: 8
  %loadMem_405bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bf6 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bf6)
  store %struct.Memory* %call_405bf6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405bfe	 Bytes: 3
  %loadMem_405bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bfe = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bfe)
  store %struct.Memory* %call_405bfe, %struct.Memory** %MEMORY

  ; Code: jne .L_405c0c	 RIP: 405c01	 Bytes: 6
  %loadMem_405c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c01 = call %struct.Memory* @routine_jne_.L_405c0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c01, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405c01, %struct.Memory** %MEMORY

  %loadBr_405c01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405c01 = icmp eq i8 %loadBr_405c01, 1
  br i1 %cmpBr_405c01, label %block_.L_405c0c, label %block_405c07

block_405c07:
  ; Code: jmpq .L_406127	 RIP: 405c07	 Bytes: 5
  %loadMem_405c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c07 = call %struct.Memory* @routine_jmpq_.L_406127(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c07, i64 1312, i64 5)
  store %struct.Memory* %call_405c07, %struct.Memory** %MEMORY

  br label %block_.L_406127

  ; Code: .L_405c0c:	 RIP: 405c0c	 Bytes: 0
block_.L_405c0c:

  ; Code: movslq -0x27c4(%rbp), %rax	 RIP: 405c0c	 Bytes: 7
  %loadMem_405c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c0c = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c0c)
  store %struct.Memory* %call_405c0c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405c13	 Bytes: 8
  %loadMem_405c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c13 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c13)
  store %struct.Memory* %call_405c13, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 405c1b	 Bytes: 3
  %loadMem_405c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c1b = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c1b)
  store %struct.Memory* %call_405c1b, %struct.Memory** %MEMORY

  ; Code: jne .L_405c42	 RIP: 405c1e	 Bytes: 6
  %loadMem_405c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c1e = call %struct.Memory* @routine_jne_.L_405c42(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c1e, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_405c1e, %struct.Memory** %MEMORY

  %loadBr_405c1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405c1e = icmp eq i8 %loadBr_405c1e, 1
  br i1 %cmpBr_405c1e, label %block_.L_405c42, label %block_405c24

block_405c24:
  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405c24	 Bytes: 4
  %loadMem_405c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c24 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c24)
  store %struct.Memory* %call_405c24, %struct.Memory** %MEMORY

  ; Code: jge .L_405c3d	 RIP: 405c28	 Bytes: 6
  %loadMem_405c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c28 = call %struct.Memory* @routine_jge_.L_405c3d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c28, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405c28, %struct.Memory** %MEMORY

  %loadBr_405c28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405c28 = icmp eq i8 %loadBr_405c28, 1
  br i1 %cmpBr_405c28, label %block_.L_405c3d, label %block_405c2e

block_405c2e:
  ; Code: movl -0x215c(%rbp), %eax	 RIP: 405c2e	 Bytes: 6
  %loadMem_405c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c2e = call %struct.Memory* @routine_movl_MINUS0x215c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c2e)
  store %struct.Memory* %call_405c2e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405c34	 Bytes: 3
  %loadMem_405c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c34 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c34)
  store %struct.Memory* %call_405c34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x215c(%rbp)	 RIP: 405c37	 Bytes: 6
  %loadMem_405c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c37 = call %struct.Memory* @routine_movl__eax__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c37)
  store %struct.Memory* %call_405c37, %struct.Memory** %MEMORY

  ; Code: .L_405c3d:	 RIP: 405c3d	 Bytes: 0
  br label %block_.L_405c3d
block_.L_405c3d:

  ; Code: jmpq .L_406127	 RIP: 405c3d	 Bytes: 5
  %loadMem_405c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c3d = call %struct.Memory* @routine_jmpq_.L_406127(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c3d, i64 1258, i64 5)
  store %struct.Memory* %call_405c3d, %struct.Memory** %MEMORY

  br label %block_.L_406127

  ; Code: .L_405c42:	 RIP: 405c42	 Bytes: 0
block_.L_405c42:

  ; Code: movslq -0x27c4(%rbp), %rax	 RIP: 405c42	 Bytes: 7
  %loadMem_405c42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c42 = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c42)
  store %struct.Memory* %call_405c42, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405c49	 Bytes: 8
  %loadMem_405c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c49 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c49)
  store %struct.Memory* %call_405c49, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 405c51	 Bytes: 3
  %loadMem_405c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c51 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c51)
  store %struct.Memory* %call_405c51, %struct.Memory** %MEMORY

  ; Code: jne .L_405dc3	 RIP: 405c54	 Bytes: 6
  %loadMem_405c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c54 = call %struct.Memory* @routine_jne_.L_405dc3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c54, i8* %BRANCH_TAKEN, i64 367, i64 6, i64 6)
  store %struct.Memory* %call_405c54, %struct.Memory** %MEMORY

  %loadBr_405c54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405c54 = icmp eq i8 %loadBr_405c54, 1
  br i1 %cmpBr_405c54, label %block_.L_405dc3, label %block_405c5a

block_405c5a:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405c5a	 Bytes: 10
  %loadMem_405c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c5a = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c5a)
  store %struct.Memory* %call_405c5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405c64	 Bytes: 7
  %loadMem_405c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c64 = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c64)
  store %struct.Memory* %call_405c64, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 405c6b	 Bytes: 4
  %loadMem_405c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c6b = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c6b)
  store %struct.Memory* %call_405c6b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405c6f	 Bytes: 3
  %loadMem_405c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c6f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c6f)
  store %struct.Memory* %call_405c6f, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %edx	 RIP: 405c72	 Bytes: 3
  %loadMem_405c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c72 = call %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c72)
  store %struct.Memory* %call_405c72, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x27c8(%rbp)	 RIP: 405c75	 Bytes: 6
  %loadMem_405c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c75 = call %struct.Memory* @routine_movl__edx__MINUS0x27c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c75)
  store %struct.Memory* %call_405c75, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405c7b	 Bytes: 4
  %loadMem_405c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c7b = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c7b)
  store %struct.Memory* %call_405c7b, %struct.Memory** %MEMORY

  ; Code: jge .L_405cf3	 RIP: 405c7f	 Bytes: 6
  %loadMem_405c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c7f = call %struct.Memory* @routine_jge_.L_405cf3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c7f, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_405c7f, %struct.Memory** %MEMORY

  %loadBr_405c7f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405c7f = icmp eq i8 %loadBr_405c7f, 1
  br i1 %cmpBr_405c7f, label %block_.L_405cf3, label %block_405c85

block_405c85:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405c85	 Bytes: 10
  %loadMem_405c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c85 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c85)
  store %struct.Memory* %call_405c85, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405c8f	 Bytes: 7
  %loadMem_405c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c8f = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c8f)
  store %struct.Memory* %call_405c8f, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 405c96	 Bytes: 4
  %loadMem_405c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c96 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c96)
  store %struct.Memory* %call_405c96, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405c9a	 Bytes: 3
  %loadMem_405c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c9a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c9a)
  store %struct.Memory* %call_405c9a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x40(%rax)	 RIP: 405c9d	 Bytes: 4
  %loadMem_405c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c9d = call %struct.Memory* @routine_cmpl__0x1__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c9d)
  store %struct.Memory* %call_405c9d, %struct.Memory** %MEMORY

  ; Code: jne .L_405cb6	 RIP: 405ca1	 Bytes: 6
  %loadMem_405ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ca1 = call %struct.Memory* @routine_jne_.L_405cb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ca1, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405ca1, %struct.Memory** %MEMORY

  %loadBr_405ca1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405ca1 = icmp eq i8 %loadBr_405ca1, 1
  br i1 %cmpBr_405ca1, label %block_.L_405cb6, label %block_405ca7

block_405ca7:
  ; Code: movl $0x0, -0x2170(%rbp)	 RIP: 405ca7	 Bytes: 10
  %loadMem_405ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ca7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ca7)
  store %struct.Memory* %call_405ca7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406135	 RIP: 405cb1	 Bytes: 5
  %loadMem_405cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cb1 = call %struct.Memory* @routine_jmpq_.L_406135(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cb1, i64 1156, i64 5)
  store %struct.Memory* %call_405cb1, %struct.Memory** %MEMORY

  br label %block_.L_406135

  ; Code: .L_405cb6:	 RIP: 405cb6	 Bytes: 0
block_.L_405cb6:

  ; Code: movslq -0x27c8(%rbp), %rax	 RIP: 405cb6	 Bytes: 7
  %loadMem_405cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cb6 = call %struct.Memory* @routine_movslq_MINUS0x27c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cb6)
  store %struct.Memory* %call_405cb6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x27c0(%rbp,%rax,4)	 RIP: 405cbd	 Bytes: 8
  %loadMem_405cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cbd = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27c0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cbd)
  store %struct.Memory* %call_405cbd, %struct.Memory** %MEMORY

  ; Code: jne .L_405ce9	 RIP: 405cc5	 Bytes: 6
  %loadMem_405cc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cc5 = call %struct.Memory* @routine_jne_.L_405ce9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cc5, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_405cc5, %struct.Memory** %MEMORY

  %loadBr_405cc5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405cc5 = icmp eq i8 %loadBr_405cc5, 1
  br i1 %cmpBr_405cc5, label %block_.L_405ce9, label %block_405ccb

block_405ccb:
  ; Code: movl -0x215c(%rbp), %eax	 RIP: 405ccb	 Bytes: 6
  %loadMem_405ccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ccb = call %struct.Memory* @routine_movl_MINUS0x215c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ccb)
  store %struct.Memory* %call_405ccb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405cd1	 Bytes: 3
  %loadMem_405cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cd1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cd1)
  store %struct.Memory* %call_405cd1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x215c(%rbp)	 RIP: 405cd4	 Bytes: 6
  %loadMem_405cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cd4 = call %struct.Memory* @routine_movl__eax__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cd4)
  store %struct.Memory* %call_405cd4, %struct.Memory** %MEMORY

  ; Code: movl -0x2168(%rbp), %eax	 RIP: 405cda	 Bytes: 6
  %loadMem_405cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cda = call %struct.Memory* @routine_movl_MINUS0x2168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cda)
  store %struct.Memory* %call_405cda, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405ce0	 Bytes: 3
  %loadMem_405ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ce0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ce0)
  store %struct.Memory* %call_405ce0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2168(%rbp)	 RIP: 405ce3	 Bytes: 6
  %loadMem_405ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ce3 = call %struct.Memory* @routine_movl__eax__MINUS0x2168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ce3)
  store %struct.Memory* %call_405ce3, %struct.Memory** %MEMORY

  ; Code: .L_405ce9:	 RIP: 405ce9	 Bytes: 0
  br label %block_.L_405ce9
block_.L_405ce9:

  ; Code: jmpq .L_405cee	 RIP: 405ce9	 Bytes: 5
  %loadMem_405ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ce9 = call %struct.Memory* @routine_jmpq_.L_405cee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ce9, i64 5, i64 5)
  store %struct.Memory* %call_405ce9, %struct.Memory** %MEMORY

  br label %block_.L_405cee

  ; Code: .L_405cee:	 RIP: 405cee	 Bytes: 0
block_.L_405cee:

  ; Code: jmpq .L_405cf3	 RIP: 405cee	 Bytes: 5
  %loadMem_405cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cee = call %struct.Memory* @routine_jmpq_.L_405cf3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cee, i64 5, i64 5)
  store %struct.Memory* %call_405cee, %struct.Memory** %MEMORY

  br label %block_.L_405cf3

  ; Code: .L_405cf3:	 RIP: 405cf3	 Bytes: 0
block_.L_405cf3:

  ; Code: movslq -0x27c8(%rbp), %rax	 RIP: 405cf3	 Bytes: 7
  %loadMem_405cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cf3 = call %struct.Memory* @routine_movslq_MINUS0x27c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cf3)
  store %struct.Memory* %call_405cf3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x27c0(%rbp,%rax,4)	 RIP: 405cfa	 Bytes: 8
  %loadMem_405cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cfa = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27c0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cfa)
  store %struct.Memory* %call_405cfa, %struct.Memory** %MEMORY

  ; Code: jne .L_405dac	 RIP: 405d02	 Bytes: 6
  %loadMem_405d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d02 = call %struct.Memory* @routine_jne_.L_405dac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d02, i8* %BRANCH_TAKEN, i64 170, i64 6, i64 6)
  store %struct.Memory* %call_405d02, %struct.Memory** %MEMORY

  %loadBr_405d02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d02 = icmp eq i8 %loadBr_405d02, 1
  br i1 %cmpBr_405d02, label %block_.L_405dac, label %block_405d08

block_405d08:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405d08	 Bytes: 10
  %loadMem_405d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d08 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d08)
  store %struct.Memory* %call_405d08, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405d12	 Bytes: 7
  %loadMem_405d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d12 = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d12)
  store %struct.Memory* %call_405d12, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 405d19	 Bytes: 4
  %loadMem_405d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d19 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d19)
  store %struct.Memory* %call_405d19, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405d1d	 Bytes: 3
  %loadMem_405d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d1d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d1d)
  store %struct.Memory* %call_405d1d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x40(%rax)	 RIP: 405d20	 Bytes: 4
  %loadMem_405d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d20 = call %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d20)
  store %struct.Memory* %call_405d20, %struct.Memory** %MEMORY

  ; Code: jne .L_405dac	 RIP: 405d24	 Bytes: 6
  %loadMem_405d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d24 = call %struct.Memory* @routine_jne_.L_405dac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d24, i8* %BRANCH_TAKEN, i64 136, i64 6, i64 6)
  store %struct.Memory* %call_405d24, %struct.Memory** %MEMORY

  %loadBr_405d24 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d24 = icmp eq i8 %loadBr_405d24, 1
  br i1 %cmpBr_405d24, label %block_.L_405dac, label %block_405d2a

block_405d2a:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 405d2a	 Bytes: 6
  %loadMem_405d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d2a = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d2a)
  store %struct.Memory* %call_405d2a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405d30	 Bytes: 3
  %loadMem_405d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d30 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d30)
  store %struct.Memory* %call_405d30, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 405d33	 Bytes: 6
  %loadMem_405d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d33 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d33)
  store %struct.Memory* %call_405d33, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405d39	 Bytes: 4
  %loadMem_405d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d39 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d39)
  store %struct.Memory* %call_405d39, %struct.Memory** %MEMORY

  ; Code: jge .L_405d7a	 RIP: 405d3d	 Bytes: 6
  %loadMem_405d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d3d = call %struct.Memory* @routine_jge_.L_405d7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d3d, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_405d3d, %struct.Memory** %MEMORY

  %loadBr_405d3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d3d = icmp eq i8 %loadBr_405d3d, 1
  br i1 %cmpBr_405d3d, label %block_.L_405d7a, label %block_405d43

block_405d43:
  ; Code: movl -0x27c4(%rbp), %edi	 RIP: 405d43	 Bytes: 6
  %loadMem_405d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d43 = call %struct.Memory* @routine_movl_MINUS0x27c4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d43)
  store %struct.Memory* %call_405d43, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405d49	 Bytes: 5
  %loadMem1_405d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405d49 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405d49, i64 39479, i64 5, i64 5)
  store %struct.Memory* %call1_405d49, %struct.Memory** %MEMORY

  %loadMem2_405d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405d49 = load i64, i64* %3
  %call2_405d49 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405d49, %struct.Memory* %loadMem2_405d49)
  store %struct.Memory* %call2_405d49, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 405d4e	 Bytes: 3
  %loadMem_405d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d4e = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d4e)
  store %struct.Memory* %call_405d4e, %struct.Memory** %MEMORY

  ; Code: jg .L_405d7a	 RIP: 405d51	 Bytes: 6
  %loadMem_405d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d51 = call %struct.Memory* @routine_jg_.L_405d7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d51, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_405d51, %struct.Memory** %MEMORY

  %loadBr_405d51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d51 = icmp eq i8 %loadBr_405d51, 1
  br i1 %cmpBr_405d51, label %block_.L_405d7a, label %block_405d57

block_405d57:
  ; Code: movl -0x27c4(%rbp), %edi	 RIP: 405d57	 Bytes: 6
  %loadMem_405d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d57 = call %struct.Memory* @routine_movl_MINUS0x27c4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d57)
  store %struct.Memory* %call_405d57, %struct.Memory** %MEMORY

  ; Code: callq .countstones	 RIP: 405d5d	 Bytes: 5
  %loadMem1_405d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405d5d = call %struct.Memory* @routine_callq_.countstones(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405d5d, i64 55955, i64 5, i64 5)
  store %struct.Memory* %call1_405d5d, %struct.Memory** %MEMORY

  %loadMem2_405d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405d5d = load i64, i64* %3
  %call2_405d5d = call %struct.Memory* @sub_4137f0.countstones(%struct.State* %0, i64  %loadPC_405d5d, %struct.Memory* %loadMem2_405d5d)
  store %struct.Memory* %call2_405d5d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 405d62	 Bytes: 3
  %loadMem_405d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d62 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d62)
  store %struct.Memory* %call_405d62, %struct.Memory** %MEMORY

  ; Code: jl .L_405d7a	 RIP: 405d65	 Bytes: 6
  %loadMem_405d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d65 = call %struct.Memory* @routine_jl_.L_405d7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d65, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405d65, %struct.Memory** %MEMORY

  %loadBr_405d65 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d65 = icmp eq i8 %loadBr_405d65, 1
  br i1 %cmpBr_405d65, label %block_.L_405d7a, label %block_405d6b

block_405d6b:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 405d6b	 Bytes: 6
  %loadMem_405d6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d6b = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d6b)
  store %struct.Memory* %call_405d6b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405d71	 Bytes: 3
  %loadMem_405d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d71 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d71)
  store %struct.Memory* %call_405d71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 405d74	 Bytes: 6
  %loadMem_405d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d74 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d74)
  store %struct.Memory* %call_405d74, %struct.Memory** %MEMORY

  ; Code: .L_405d7a:	 RIP: 405d7a	 Bytes: 0
  br label %block_.L_405d7a
block_.L_405d7a:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405d7a	 Bytes: 4
  %loadMem_405d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d7a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d7a)
  store %struct.Memory* %call_405d7a, %struct.Memory** %MEMORY

  ; Code: jge .L_405da7	 RIP: 405d7e	 Bytes: 6
  %loadMem_405d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d7e = call %struct.Memory* @routine_jge_.L_405da7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d7e, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_405d7e, %struct.Memory** %MEMORY

  %loadBr_405d7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d7e = icmp eq i8 %loadBr_405d7e, 1
  br i1 %cmpBr_405d7e, label %block_.L_405da7, label %block_405d84

block_405d84:
  ; Code: movl -0x27c4(%rbp), %edi	 RIP: 405d84	 Bytes: 6
  %loadMem_405d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d84 = call %struct.Memory* @routine_movl_MINUS0x27c4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d84)
  store %struct.Memory* %call_405d84, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405d8a	 Bytes: 5
  %loadMem1_405d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405d8a = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405d8a, i64 39414, i64 5, i64 5)
  store %struct.Memory* %call1_405d8a, %struct.Memory** %MEMORY

  %loadMem2_405d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405d8a = load i64, i64* %3
  %call2_405d8a = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405d8a, %struct.Memory* %loadMem2_405d8a)
  store %struct.Memory* %call2_405d8a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 405d8f	 Bytes: 3
  %loadMem_405d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d8f = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d8f)
  store %struct.Memory* %call_405d8f, %struct.Memory** %MEMORY

  ; Code: jne .L_405da7	 RIP: 405d92	 Bytes: 6
  %loadMem_405d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d92 = call %struct.Memory* @routine_jne_.L_405da7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d92, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405d92, %struct.Memory** %MEMORY

  %loadBr_405d92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405d92 = icmp eq i8 %loadBr_405d92, 1
  br i1 %cmpBr_405d92, label %block_.L_405da7, label %block_405d98

block_405d98:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 405d98	 Bytes: 6
  %loadMem_405d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d98 = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d98)
  store %struct.Memory* %call_405d98, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 405d9e	 Bytes: 3
  %loadMem_405d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d9e = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d9e)
  store %struct.Memory* %call_405d9e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 405da1	 Bytes: 6
  %loadMem_405da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405da1 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405da1)
  store %struct.Memory* %call_405da1, %struct.Memory** %MEMORY

  ; Code: .L_405da7:	 RIP: 405da7	 Bytes: 0
  br label %block_.L_405da7
block_.L_405da7:

  ; Code: jmpq .L_405dac	 RIP: 405da7	 Bytes: 5
  %loadMem_405da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405da7 = call %struct.Memory* @routine_jmpq_.L_405dac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405da7, i64 5, i64 5)
  store %struct.Memory* %call_405da7, %struct.Memory** %MEMORY

  br label %block_.L_405dac

  ; Code: .L_405dac:	 RIP: 405dac	 Bytes: 0
block_.L_405dac:

  ; Code: movslq -0x27c8(%rbp), %rax	 RIP: 405dac	 Bytes: 7
  %loadMem_405dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dac = call %struct.Memory* @routine_movslq_MINUS0x27c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dac)
  store %struct.Memory* %call_405dac, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x27c0(%rbp,%rax,4)	 RIP: 405db3	 Bytes: 11
  %loadMem_405db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405db3 = call %struct.Memory* @routine_movl__0x1__MINUS0x27c0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405db3)
  store %struct.Memory* %call_405db3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406122	 RIP: 405dbe	 Bytes: 5
  %loadMem_405dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dbe = call %struct.Memory* @routine_jmpq_.L_406122(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dbe, i64 868, i64 5)
  store %struct.Memory* %call_405dbe, %struct.Memory** %MEMORY

  br label %block_.L_406122

  ; Code: .L_405dc3:	 RIP: 405dc3	 Bytes: 0
block_.L_405dc3:

  ; Code: movslq -0x27c4(%rbp), %rax	 RIP: 405dc3	 Bytes: 7
  %loadMem_405dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dc3 = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dc3)
  store %struct.Memory* %call_405dc3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405dca	 Bytes: 8
  %loadMem_405dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dca = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dca)
  store %struct.Memory* %call_405dca, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %ecx	 RIP: 405dd2	 Bytes: 3
  %loadMem_405dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dd2 = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dd2)
  store %struct.Memory* %call_405dd2, %struct.Memory** %MEMORY

  ; Code: jne .L_40611d	 RIP: 405dd5	 Bytes: 6
  %loadMem_405dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dd5 = call %struct.Memory* @routine_jne_.L_40611d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dd5, i8* %BRANCH_TAKEN, i64 840, i64 6, i64 6)
  store %struct.Memory* %call_405dd5, %struct.Memory** %MEMORY

  %loadBr_405dd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405dd5 = icmp eq i8 %loadBr_405dd5, 1
  br i1 %cmpBr_405dd5, label %block_.L_40611d, label %block_405ddb

block_405ddb:
  ; Code: movl -0x27c4(%rbp), %eax	 RIP: 405ddb	 Bytes: 6
  %loadMem_405ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ddb = call %struct.Memory* @routine_movl_MINUS0x27c4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ddb)
  store %struct.Memory* %call_405ddb, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 405de1	 Bytes: 7
  %loadMem_405de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405de1 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405de1)
  store %struct.Memory* %call_405de1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f70(%rbp,%rcx,4)	 RIP: 405de8	 Bytes: 7
  %loadMem_405de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405de8 = call %struct.Memory* @routine_movl__eax__MINUS0x1f70__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405de8)
  store %struct.Memory* %call_405de8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, -0x2170(%rbp)	 RIP: 405def	 Bytes: 7
  %loadMem_405def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405def = call %struct.Memory* @routine_cmpl__0x3__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405def)
  store %struct.Memory* %call_405def, %struct.Memory** %MEMORY

  ; Code: jne .L_405e28	 RIP: 405df6	 Bytes: 6
  %loadMem_405df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405df6 = call %struct.Memory* @routine_jne_.L_405e28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405df6, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_405df6, %struct.Memory** %MEMORY

  %loadBr_405df6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405df6 = icmp eq i8 %loadBr_405df6, 1
  br i1 %cmpBr_405df6, label %block_.L_405e28, label %block_405dfc

block_405dfc:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405dfc	 Bytes: 10
  %loadMem_405dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dfc = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dfc)
  store %struct.Memory* %call_405dfc, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405e06	 Bytes: 7
  %loadMem_405e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e06 = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e06)
  store %struct.Memory* %call_405e06, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 405e0d	 Bytes: 4
  %loadMem_405e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e0d = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e0d)
  store %struct.Memory* %call_405e0d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405e11	 Bytes: 3
  %loadMem_405e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e11 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e11)
  store %struct.Memory* %call_405e11, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x40(%rax)	 RIP: 405e14	 Bytes: 4
  %loadMem_405e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e14 = call %struct.Memory* @routine_cmpl__0x1__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e14)
  store %struct.Memory* %call_405e14, %struct.Memory** %MEMORY

  ; Code: jne .L_405e28	 RIP: 405e18	 Bytes: 6
  %loadMem_405e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e18 = call %struct.Memory* @routine_jne_.L_405e28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e18, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_405e18, %struct.Memory** %MEMORY

  %loadBr_405e18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405e18 = icmp eq i8 %loadBr_405e18, 1
  br i1 %cmpBr_405e18, label %block_.L_405e28, label %block_405e1e

block_405e1e:
  ; Code: movl $0x1, -0x2170(%rbp)	 RIP: 405e1e	 Bytes: 10
  %loadMem_405e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e1e = call %struct.Memory* @routine_movl__0x1__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e1e)
  store %struct.Memory* %call_405e1e, %struct.Memory** %MEMORY

  ; Code: .L_405e28:	 RIP: 405e28	 Bytes: 0
  br label %block_.L_405e28
block_.L_405e28:

  ; Code: movq $0xb4bd20, %rax	 RIP: 405e28	 Bytes: 10
  %loadMem_405e28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e28 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e28)
  store %struct.Memory* %call_405e28, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 405e32	 Bytes: 8
  %loadMem_405e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e32 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e32)
  store %struct.Memory* %call_405e32, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rdx	 RIP: 405e3a	 Bytes: 7
  %loadMem_405e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e3a = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e3a)
  store %struct.Memory* %call_405e3a, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 405e41	 Bytes: 4
  %loadMem_405e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e41 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e41)
  store %struct.Memory* %call_405e41, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405e45	 Bytes: 3
  %loadMem_405e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e45 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e45)
  store %struct.Memory* %call_405e45, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 405e48	 Bytes: 4
  %loadMem_405e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e48 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e48)
  store %struct.Memory* %call_405e48, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 405e4c	 Bytes: 4
  %loadMem_405e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e4c = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e4c)
  store %struct.Memory* %call_405e4c, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 405e50	 Bytes: 3
  %loadMem_405e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e50 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e50)
  store %struct.Memory* %call_405e50, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, 0x3c(%rcx)	 RIP: 405e53	 Bytes: 4
  %loadMem_405e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e53 = call %struct.Memory* @routine_cmpl__0x9__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e53)
  store %struct.Memory* %call_405e53, %struct.Memory** %MEMORY

  ; Code: jne .L_405e67	 RIP: 405e57	 Bytes: 6
  %loadMem_405e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e57 = call %struct.Memory* @routine_jne_.L_405e67(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e57, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_405e57, %struct.Memory** %MEMORY

  %loadBr_405e57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405e57 = icmp eq i8 %loadBr_405e57, 1
  br i1 %cmpBr_405e57, label %block_.L_405e67, label %block_405e5d

block_405e5d:
  ; Code: movl $0x9, -0x2170(%rbp)	 RIP: 405e5d	 Bytes: 10
  %loadMem_405e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e5d = call %struct.Memory* @routine_movl__0x9__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e5d)
  store %struct.Memory* %call_405e5d, %struct.Memory** %MEMORY

  ; Code: .L_405e67:	 RIP: 405e67	 Bytes: 0
  br label %block_.L_405e67
block_.L_405e67:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 405e67	 Bytes: 4
  %loadMem_405e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e67 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e67)
  store %struct.Memory* %call_405e67, %struct.Memory** %MEMORY

  ; Code: jge .L_406109	 RIP: 405e6b	 Bytes: 6
  %loadMem_405e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e6b = call %struct.Memory* @routine_jge_.L_406109(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e6b, i8* %BRANCH_TAKEN, i64 670, i64 6, i64 6)
  store %struct.Memory* %call_405e6b, %struct.Memory** %MEMORY

  %loadBr_405e6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405e6b = icmp eq i8 %loadBr_405e6b, 1
  br i1 %cmpBr_405e6b, label %block_.L_406109, label %block_405e71

block_405e71:
  ; Code: movq $0xb0eff0, %rax	 RIP: 405e71	 Bytes: 10
  %loadMem_405e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e71 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e71)
  store %struct.Memory* %call_405e71, %struct.Memory** %MEMORY

  ; Code: movslq -0x27c4(%rbp), %rcx	 RIP: 405e7b	 Bytes: 7
  %loadMem_405e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e7b = call %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e7b)
  store %struct.Memory* %call_405e7b, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 405e82	 Bytes: 7
  %loadMem_405e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e82 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e82)
  store %struct.Memory* %call_405e82, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405e89	 Bytes: 3
  %loadMem_405e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e89 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e89)
  store %struct.Memory* %call_405e89, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 405e8c	 Bytes: 3
  %loadMem_405e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e8c = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e8c)
  store %struct.Memory* %call_405e8c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x27cc(%rbp)	 RIP: 405e8f	 Bytes: 6
  %loadMem_405e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e8f = call %struct.Memory* @routine_movl__edx__MINUS0x27cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e8f)
  store %struct.Memory* %call_405e8f, %struct.Memory** %MEMORY

  ; Code: movslq -0x27cc(%rbp), %rax	 RIP: 405e95	 Bytes: 7
  %loadMem_405e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e95 = call %struct.Memory* @routine_movslq_MINUS0x27cc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e95)
  store %struct.Memory* %call_405e95, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x27c0(%rbp,%rax,4)	 RIP: 405e9c	 Bytes: 8
  %loadMem_405e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e9c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27c0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e9c)
  store %struct.Memory* %call_405e9c, %struct.Memory** %MEMORY

  ; Code: jne .L_405f47	 RIP: 405ea4	 Bytes: 6
  %loadMem_405ea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ea4 = call %struct.Memory* @routine_jne_.L_405f47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ea4, i8* %BRANCH_TAKEN, i64 163, i64 6, i64 6)
  store %struct.Memory* %call_405ea4, %struct.Memory** %MEMORY

  %loadBr_405ea4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405ea4 = icmp eq i8 %loadBr_405ea4, 1
  br i1 %cmpBr_405ea4, label %block_.L_405f47, label %block_405eaa

block_405eaa:
  ; Code: movl -0x216c(%rbp), %eax	 RIP: 405eaa	 Bytes: 6
  %loadMem_405eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eaa = call %struct.Memory* @routine_movl_MINUS0x216c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eaa)
  store %struct.Memory* %call_405eaa, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405eb0	 Bytes: 3
  %loadMem_405eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eb0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eb0)
  store %struct.Memory* %call_405eb0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x216c(%rbp)	 RIP: 405eb3	 Bytes: 6
  %loadMem_405eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eb3 = call %struct.Memory* @routine_movl__eax__MINUS0x216c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eb3)
  store %struct.Memory* %call_405eb3, %struct.Memory** %MEMORY

  ; Code: movl -0x27cc(%rbp), %edi	 RIP: 405eb9	 Bytes: 6
  %loadMem_405eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eb9 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eb9)
  store %struct.Memory* %call_405eb9, %struct.Memory** %MEMORY

  ; Code: callq .countstones	 RIP: 405ebf	 Bytes: 5
  %loadMem1_405ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405ebf = call %struct.Memory* @routine_callq_.countstones(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405ebf, i64 55601, i64 5, i64 5)
  store %struct.Memory* %call1_405ebf, %struct.Memory** %MEMORY

  %loadMem2_405ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405ebf = load i64, i64* %3
  %call2_405ebf = call %struct.Memory* @sub_4137f0.countstones(%struct.State* %0, i64  %loadPC_405ebf, %struct.Memory* %loadMem2_405ebf)
  store %struct.Memory* %call2_405ebf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 405ec4	 Bytes: 3
  %loadMem_405ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ec4 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ec4)
  store %struct.Memory* %call_405ec4, %struct.Memory** %MEMORY

  ; Code: jne .L_405edc	 RIP: 405ec7	 Bytes: 6
  %loadMem_405ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ec7 = call %struct.Memory* @routine_jne_.L_405edc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ec7, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405ec7, %struct.Memory** %MEMORY

  %loadBr_405ec7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405ec7 = icmp eq i8 %loadBr_405ec7, 1
  br i1 %cmpBr_405ec7, label %block_.L_405edc, label %block_405ecd

block_405ecd:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 405ecd	 Bytes: 6
  %loadMem_405ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ecd = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ecd)
  store %struct.Memory* %call_405ecd, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 405ed3	 Bytes: 3
  %loadMem_405ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ed3 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ed3)
  store %struct.Memory* %call_405ed3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 405ed6	 Bytes: 6
  %loadMem_405ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ed6 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ed6)
  store %struct.Memory* %call_405ed6, %struct.Memory** %MEMORY

  ; Code: .L_405edc:	 RIP: 405edc	 Bytes: 0
  br label %block_.L_405edc
block_.L_405edc:

  ; Code: movl -0x27cc(%rbp), %edi	 RIP: 405edc	 Bytes: 6
  %loadMem_405edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405edc = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405edc)
  store %struct.Memory* %call_405edc, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405ee2	 Bytes: 5
  %loadMem1_405ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405ee2 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405ee2, i64 39070, i64 5, i64 5)
  store %struct.Memory* %call1_405ee2, %struct.Memory** %MEMORY

  %loadMem2_405ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405ee2 = load i64, i64* %3
  %call2_405ee2 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405ee2, %struct.Memory* %loadMem2_405ee2)
  store %struct.Memory* %call2_405ee2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x6, %eax	 RIP: 405ee7	 Bytes: 3
  %loadMem_405ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ee7 = call %struct.Memory* @routine_cmpl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ee7)
  store %struct.Memory* %call_405ee7, %struct.Memory** %MEMORY

  ; Code: jge .L_405f35	 RIP: 405eea	 Bytes: 6
  %loadMem_405eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eea = call %struct.Memory* @routine_jge_.L_405f35(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eea, i8* %BRANCH_TAKEN, i64 75, i64 6, i64 6)
  store %struct.Memory* %call_405eea, %struct.Memory** %MEMORY

  %loadBr_405eea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405eea = icmp eq i8 %loadBr_405eea, 1
  br i1 %cmpBr_405eea, label %block_.L_405f35, label %block_405ef0

block_405ef0:
  ; Code: movl $0x5, %edx	 RIP: 405ef0	 Bytes: 5
  %loadMem_405ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef0 = call %struct.Memory* @routine_movl__0x5___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef0)
  store %struct.Memory* %call_405ef0, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 405ef5	 Bytes: 2
  %loadMem_405ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef5)
  store %struct.Memory* %call_405ef5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 405ef7	 Bytes: 2
  %loadMem_405ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef7 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef7)
  store %struct.Memory* %call_405ef7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 405ef9	 Bytes: 6
  %loadMem_405ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef9 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef9)
  store %struct.Memory* %call_405ef9, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 405eff	 Bytes: 3
  %loadMem_405eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eff = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eff)
  store %struct.Memory* %call_405eff, %struct.Memory** %MEMORY

  ; Code: callq .approxlib	 RIP: 405f02	 Bytes: 5
  %loadMem1_405f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405f02 = call %struct.Memory* @routine_callq_.approxlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405f02, i64 46766, i64 5, i64 5)
  store %struct.Memory* %call1_405f02, %struct.Memory** %MEMORY

  %loadMem2_405f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405f02 = load i64, i64* %3
  %call2_405f02 = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64  %loadPC_405f02, %struct.Memory* %loadMem2_405f02)
  store %struct.Memory* %call2_405f02, %struct.Memory** %MEMORY

  ; Code: movl -0x27cc(%rbp), %edi	 RIP: 405f07	 Bytes: 6
  %loadMem_405f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f07 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f07)
  store %struct.Memory* %call_405f07, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ae0(%rbp)	 RIP: 405f0d	 Bytes: 6
  %loadMem_405f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f0d = call %struct.Memory* @routine_movl__eax__MINUS0x2ae0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f0d)
  store %struct.Memory* %call_405f0d, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405f13	 Bytes: 5
  %loadMem1_405f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405f13 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405f13, i64 39021, i64 5, i64 5)
  store %struct.Memory* %call1_405f13, %struct.Memory** %MEMORY

  %loadMem2_405f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405f13 = load i64, i64* %3
  %call2_405f13 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405f13, %struct.Memory* %loadMem2_405f13)
  store %struct.Memory* %call2_405f13, %struct.Memory** %MEMORY

  ; Code: movl -0x2ae0(%rbp), %edx	 RIP: 405f18	 Bytes: 6
  %loadMem_405f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f18 = call %struct.Memory* @routine_movl_MINUS0x2ae0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f18)
  store %struct.Memory* %call_405f18, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edx	 RIP: 405f1e	 Bytes: 2
  %loadMem_405f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f1e = call %struct.Memory* @routine_cmpl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f1e)
  store %struct.Memory* %call_405f1e, %struct.Memory** %MEMORY

  ; Code: jge .L_405f35	 RIP: 405f20	 Bytes: 6
  %loadMem_405f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f20 = call %struct.Memory* @routine_jge_.L_405f35(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f20, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_405f20, %struct.Memory** %MEMORY

  %loadBr_405f20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f20 = icmp eq i8 %loadBr_405f20, 1
  br i1 %cmpBr_405f20, label %block_.L_405f35, label %block_405f26

block_405f26:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 405f26	 Bytes: 6
  %loadMem_405f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f26 = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f26)
  store %struct.Memory* %call_405f26, %struct.Memory** %MEMORY

  ; Code: subl $0x5, %eax	 RIP: 405f2c	 Bytes: 3
  %loadMem_405f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f2c = call %struct.Memory* @routine_subl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f2c)
  store %struct.Memory* %call_405f2c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 405f2f	 Bytes: 6
  %loadMem_405f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f2f = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f2f)
  store %struct.Memory* %call_405f2f, %struct.Memory** %MEMORY

  ; Code: .L_405f35:	 RIP: 405f35	 Bytes: 0
  br label %block_.L_405f35
block_.L_405f35:

  ; Code: movslq -0x27cc(%rbp), %rax	 RIP: 405f35	 Bytes: 7
  %loadMem_405f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f35 = call %struct.Memory* @routine_movslq_MINUS0x27cc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f35)
  store %struct.Memory* %call_405f35, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x27c0(%rbp,%rax,4)	 RIP: 405f3c	 Bytes: 11
  %loadMem_405f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f3c = call %struct.Memory* @routine_movl__0x1__MINUS0x27c0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f3c)
  store %struct.Memory* %call_405f3c, %struct.Memory** %MEMORY

  ; Code: .L_405f47:	 RIP: 405f47	 Bytes: 0
  br label %block_.L_405f47
block_.L_405f47:

  ; Code: movl -0x27cc(%rbp), %edi	 RIP: 405f47	 Bytes: 6
  %loadMem_405f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f47 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f47)
  store %struct.Memory* %call_405f47, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 405f4d	 Bytes: 5
  %loadMem1_405f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405f4d = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405f4d, i64 38963, i64 5, i64 5)
  store %struct.Memory* %call1_405f4d, %struct.Memory** %MEMORY

  %loadMem2_405f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405f4d = load i64, i64* %3
  %call2_405f4d = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_405f4d, %struct.Memory* %loadMem2_405f4d)
  store %struct.Memory* %call2_405f4d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 405f52	 Bytes: 3
  %loadMem_405f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f52 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f52)
  store %struct.Memory* %call_405f52, %struct.Memory** %MEMORY

  ; Code: jg .L_4060f5	 RIP: 405f55	 Bytes: 6
  %loadMem_405f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f55 = call %struct.Memory* @routine_jg_.L_4060f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f55, i8* %BRANCH_TAKEN, i64 416, i64 6, i64 6)
  store %struct.Memory* %call_405f55, %struct.Memory** %MEMORY

  %loadBr_405f55 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f55 = icmp eq i8 %loadBr_405f55, 1
  br i1 %cmpBr_405f55, label %block_.L_4060f5, label %block_405f5b

block_405f5b:
  ; Code: movl $0x0, -0x27d4(%rbp)	 RIP: 405f5b	 Bytes: 10
  %loadMem_405f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f5b = call %struct.Memory* @routine_movl__0x0__MINUS0x27d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f5b)
  store %struct.Memory* %call_405f5b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x27d8(%rbp)	 RIP: 405f65	 Bytes: 10
  %loadMem_405f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f65 = call %struct.Memory* @routine_movl__0x0__MINUS0x27d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f65)
  store %struct.Memory* %call_405f65, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x27d0(%rbp)	 RIP: 405f6f	 Bytes: 10
  %loadMem_405f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f6f = call %struct.Memory* @routine_movl__0x0__MINUS0x27d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f6f)
  store %struct.Memory* %call_405f6f, %struct.Memory** %MEMORY

  ; Code: .L_405f79:	 RIP: 405f79	 Bytes: 0
  br label %block_.L_405f79
block_.L_405f79:

  ; Code: cmpl $0x4, -0x27d0(%rbp)	 RIP: 405f79	 Bytes: 7
  %loadMem_405f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f79 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x27d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f79)
  store %struct.Memory* %call_405f79, %struct.Memory** %MEMORY

  ; Code: jge .L_40607f	 RIP: 405f80	 Bytes: 6
  %loadMem_405f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f80 = call %struct.Memory* @routine_jge_.L_40607f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f80, i8* %BRANCH_TAKEN, i64 255, i64 6, i64 6)
  store %struct.Memory* %call_405f80, %struct.Memory** %MEMORY

  %loadBr_405f80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f80 = icmp eq i8 %loadBr_405f80, 1
  br i1 %cmpBr_405f80, label %block_.L_40607f, label %block_405f86

block_405f86:
  ; Code: movslq -0x27d0(%rbp), %rax	 RIP: 405f86	 Bytes: 7
  %loadMem_405f86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f86 = call %struct.Memory* @routine_movslq_MINUS0x27d0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f86)
  store %struct.Memory* %call_405f86, %struct.Memory** %MEMORY

  ; Code: movl 0x7ae1b0(,%rax,4), %ecx	 RIP: 405f8d	 Bytes: 7
  %loadMem_405f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f8d = call %struct.Memory* @routine_movl_0x7ae1b0___rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f8d)
  store %struct.Memory* %call_405f8d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1f80(%rbp)	 RIP: 405f94	 Bytes: 6
  %loadMem_405f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f94 = call %struct.Memory* @routine_movl__ecx__MINUS0x1f80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f94)
  store %struct.Memory* %call_405f94, %struct.Memory** %MEMORY

  ; Code: movl -0x27cc(%rbp), %ecx	 RIP: 405f9a	 Bytes: 6
  %loadMem_405f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f9a = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f9a)
  store %struct.Memory* %call_405f9a, %struct.Memory** %MEMORY

  ; Code: addl -0x1f80(%rbp), %ecx	 RIP: 405fa0	 Bytes: 6
  %loadMem_405fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fa0 = call %struct.Memory* @routine_addl_MINUS0x1f80__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fa0)
  store %struct.Memory* %call_405fa0, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rax	 RIP: 405fa6	 Bytes: 3
  %loadMem_405fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fa6 = call %struct.Memory* @routine_movslq__ecx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fa6)
  store %struct.Memory* %call_405fa6, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 405fa9	 Bytes: 8
  %loadMem_405fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fa9 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fa9)
  store %struct.Memory* %call_405fa9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 405fb1	 Bytes: 3
  %loadMem_405fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fb1 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fb1)
  store %struct.Memory* %call_405fb1, %struct.Memory** %MEMORY

  ; Code: jne .L_405fbf	 RIP: 405fb4	 Bytes: 6
  %loadMem_405fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fb4 = call %struct.Memory* @routine_jne_.L_405fbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fb4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405fb4, %struct.Memory** %MEMORY

  %loadBr_405fb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405fb4 = icmp eq i8 %loadBr_405fb4, 1
  br i1 %cmpBr_405fb4, label %block_.L_405fbf, label %block_405fba

block_405fba:
  ; Code: jmpq .L_40606b	 RIP: 405fba	 Bytes: 5
  %loadMem_405fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fba = call %struct.Memory* @routine_jmpq_.L_40606b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fba, i64 177, i64 5)
  store %struct.Memory* %call_405fba, %struct.Memory** %MEMORY

  br label %block_.L_40606b

  ; Code: .L_405fbf:	 RIP: 405fbf	 Bytes: 0
block_.L_405fbf:

  ; Code: movl -0x27cc(%rbp), %eax	 RIP: 405fbf	 Bytes: 6
  %loadMem_405fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fbf = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fbf)
  store %struct.Memory* %call_405fbf, %struct.Memory** %MEMORY

  ; Code: addl -0x1f80(%rbp), %eax	 RIP: 405fc5	 Bytes: 6
  %loadMem_405fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fc5 = call %struct.Memory* @routine_addl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fc5)
  store %struct.Memory* %call_405fc5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 405fcb	 Bytes: 3
  %loadMem_405fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fcb = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fcb)
  store %struct.Memory* %call_405fcb, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 405fce	 Bytes: 8
  %loadMem_405fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fce = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fce)
  store %struct.Memory* %call_405fce, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 405fd6	 Bytes: 3
  %loadMem_405fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fd6 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fd6)
  store %struct.Memory* %call_405fd6, %struct.Memory** %MEMORY

  ; Code: jne .L_406018	 RIP: 405fd9	 Bytes: 6
  %loadMem_405fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fd9 = call %struct.Memory* @routine_jne_.L_406018(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fd9, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_405fd9, %struct.Memory** %MEMORY

  %loadBr_405fd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405fd9 = icmp eq i8 %loadBr_405fd9, 1
  br i1 %cmpBr_405fd9, label %block_.L_406018, label %block_405fdf

block_405fdf:
  ; Code: movq $0xb4bd20, %rax	 RIP: 405fdf	 Bytes: 10
  %loadMem_405fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fdf = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fdf)
  store %struct.Memory* %call_405fdf, %struct.Memory** %MEMORY

  ; Code: movl -0x27cc(%rbp), %ecx	 RIP: 405fe9	 Bytes: 6
  %loadMem_405fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fe9 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fe9)
  store %struct.Memory* %call_405fe9, %struct.Memory** %MEMORY

  ; Code: addl -0x1f80(%rbp), %ecx	 RIP: 405fef	 Bytes: 6
  %loadMem_405fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fef = call %struct.Memory* @routine_addl_MINUS0x1f80__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fef)
  store %struct.Memory* %call_405fef, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 405ff5	 Bytes: 3
  %loadMem_405ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ff5 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ff5)
  store %struct.Memory* %call_405ff5, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 405ff8	 Bytes: 4
  %loadMem_405ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ff8 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ff8)
  store %struct.Memory* %call_405ff8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405ffc	 Bytes: 3
  %loadMem_405ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ffc = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ffc)
  store %struct.Memory* %call_405ffc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x40(%rax)	 RIP: 405fff	 Bytes: 4
  %loadMem_405fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fff = call %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fff)
  store %struct.Memory* %call_405fff, %struct.Memory** %MEMORY

  ; Code: jne .L_406018	 RIP: 406003	 Bytes: 6
  %loadMem_406003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406003 = call %struct.Memory* @routine_jne_.L_406018(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406003, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_406003, %struct.Memory** %MEMORY

  %loadBr_406003 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406003 = icmp eq i8 %loadBr_406003, 1
  br i1 %cmpBr_406003, label %block_.L_406018, label %block_406009

block_406009:
  ; Code: movl $0x1, -0x27d4(%rbp)	 RIP: 406009	 Bytes: 10
  %loadMem_406009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406009 = call %struct.Memory* @routine_movl__0x1__MINUS0x27d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406009)
  store %struct.Memory* %call_406009, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406066	 RIP: 406013	 Bytes: 5
  %loadMem_406013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406013 = call %struct.Memory* @routine_jmpq_.L_406066(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406013, i64 83, i64 5)
  store %struct.Memory* %call_406013, %struct.Memory** %MEMORY

  br label %block_.L_406066

  ; Code: .L_406018:	 RIP: 406018	 Bytes: 0
block_.L_406018:

  ; Code: movl -0x27cc(%rbp), %eax	 RIP: 406018	 Bytes: 6
  %loadMem_406018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406018 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406018)
  store %struct.Memory* %call_406018, %struct.Memory** %MEMORY

  ; Code: addl -0x1f80(%rbp), %eax	 RIP: 40601e	 Bytes: 6
  %loadMem_40601e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40601e = call %struct.Memory* @routine_addl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40601e)
  store %struct.Memory* %call_40601e, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 406024	 Bytes: 3
  %loadMem_406024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406024 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406024)
  store %struct.Memory* %call_406024, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 406027	 Bytes: 8
  %loadMem_406027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406027 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406027)
  store %struct.Memory* %call_406027, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40602f	 Bytes: 3
  %loadMem_40602f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40602f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40602f)
  store %struct.Memory* %call_40602f, %struct.Memory** %MEMORY

  ; Code: jne .L_406061	 RIP: 406032	 Bytes: 6
  %loadMem_406032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406032 = call %struct.Memory* @routine_jne_.L_406061(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406032, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_406032, %struct.Memory** %MEMORY

  %loadBr_406032 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406032 = icmp eq i8 %loadBr_406032, 1
  br i1 %cmpBr_406032, label %block_.L_406061, label %block_406038

block_406038:
  ; Code: movl -0x27cc(%rbp), %eax	 RIP: 406038	 Bytes: 6
  %loadMem_406038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406038 = call %struct.Memory* @routine_movl_MINUS0x27cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406038)
  store %struct.Memory* %call_406038, %struct.Memory** %MEMORY

  ; Code: addl -0x1f80(%rbp), %eax	 RIP: 40603e	 Bytes: 6
  %loadMem_40603e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40603e = call %struct.Memory* @routine_addl_MINUS0x1f80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40603e)
  store %struct.Memory* %call_40603e, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 406044	 Bytes: 3
  %loadMem_406044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406044 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406044)
  store %struct.Memory* %call_406044, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 406047	 Bytes: 2
  %loadMem_406047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406047 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406047)
  store %struct.Memory* %call_406047, %struct.Memory** %MEMORY

  ; Code: callq .is_self_atari	 RIP: 406049	 Bytes: 5
  %loadMem1_406049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406049 = call %struct.Memory* @routine_callq_.is_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406049, i64 57943, i64 5, i64 5)
  store %struct.Memory* %call1_406049, %struct.Memory** %MEMORY

  %loadMem2_406049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406049 = load i64, i64* %3
  %call2_406049 = call %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* %0, i64  %loadPC_406049, %struct.Memory* %loadMem2_406049)
  store %struct.Memory* %call2_406049, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40604e	 Bytes: 3
  %loadMem_40604e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40604e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40604e)
  store %struct.Memory* %call_40604e, %struct.Memory** %MEMORY

  ; Code: jne .L_406061	 RIP: 406051	 Bytes: 6
  %loadMem_406051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406051 = call %struct.Memory* @routine_jne_.L_406061(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406051, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_406051, %struct.Memory** %MEMORY

  %loadBr_406051 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406051 = icmp eq i8 %loadBr_406051, 1
  br i1 %cmpBr_406051, label %block_.L_406061, label %block_406057

block_406057:
  ; Code: movl $0x1, -0x27d8(%rbp)	 RIP: 406057	 Bytes: 10
  %loadMem_406057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406057 = call %struct.Memory* @routine_movl__0x1__MINUS0x27d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406057)
  store %struct.Memory* %call_406057, %struct.Memory** %MEMORY

  ; Code: .L_406061:	 RIP: 406061	 Bytes: 0
  br label %block_.L_406061
block_.L_406061:

  ; Code: jmpq .L_406066	 RIP: 406061	 Bytes: 5
  %loadMem_406061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406061 = call %struct.Memory* @routine_jmpq_.L_406066(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406061, i64 5, i64 5)
  store %struct.Memory* %call_406061, %struct.Memory** %MEMORY

  br label %block_.L_406066

  ; Code: .L_406066:	 RIP: 406066	 Bytes: 0
block_.L_406066:

  ; Code: jmpq .L_40606b	 RIP: 406066	 Bytes: 5
  %loadMem_406066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406066 = call %struct.Memory* @routine_jmpq_.L_40606b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406066, i64 5, i64 5)
  store %struct.Memory* %call_406066, %struct.Memory** %MEMORY

  br label %block_.L_40606b

  ; Code: .L_40606b:	 RIP: 40606b	 Bytes: 0
block_.L_40606b:

  ; Code: movl -0x27d0(%rbp), %eax	 RIP: 40606b	 Bytes: 6
  %loadMem_40606b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40606b = call %struct.Memory* @routine_movl_MINUS0x27d0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40606b)
  store %struct.Memory* %call_40606b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406071	 Bytes: 3
  %loadMem_406071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406071 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406071)
  store %struct.Memory* %call_406071, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27d0(%rbp)	 RIP: 406074	 Bytes: 6
  %loadMem_406074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406074 = call %struct.Memory* @routine_movl__eax__MINUS0x27d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406074)
  store %struct.Memory* %call_406074, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405f79	 RIP: 40607a	 Bytes: 5
  %loadMem_40607a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40607a = call %struct.Memory* @routine_jmpq_.L_405f79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40607a, i64 -257, i64 5)
  store %struct.Memory* %call_40607a, %struct.Memory** %MEMORY

  br label %block_.L_405f79

  ; Code: .L_40607f:	 RIP: 40607f	 Bytes: 0
block_.L_40607f:

  ; Code: movl $0x3, %edx	 RIP: 40607f	 Bytes: 5
  %loadMem_40607f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40607f = call %struct.Memory* @routine_movl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40607f)
  store %struct.Memory* %call_40607f, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 406084	 Bytes: 2
  %loadMem_406084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406084 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406084)
  store %struct.Memory* %call_406084, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 406086	 Bytes: 2
  %loadMem_406086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406086 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406086)
  store %struct.Memory* %call_406086, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 406088	 Bytes: 6
  %loadMem_406088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406088 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406088)
  store %struct.Memory* %call_406088, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 40608e	 Bytes: 3
  %loadMem_40608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40608e = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40608e)
  store %struct.Memory* %call_40608e, %struct.Memory** %MEMORY

  ; Code: callq .approxlib	 RIP: 406091	 Bytes: 5
  %loadMem1_406091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406091 = call %struct.Memory* @routine_callq_.approxlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406091, i64 46367, i64 5, i64 5)
  store %struct.Memory* %call1_406091, %struct.Memory** %MEMORY

  %loadMem2_406091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406091 = load i64, i64* %3
  %call2_406091 = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64  %loadPC_406091, %struct.Memory* %loadMem2_406091)
  store %struct.Memory* %call2_406091, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 406096	 Bytes: 3
  %loadMem_406096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406096 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406096)
  store %struct.Memory* %call_406096, %struct.Memory** %MEMORY

  ; Code: jle .L_4060f0	 RIP: 406099	 Bytes: 6
  %loadMem_406099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406099 = call %struct.Memory* @routine_jle_.L_4060f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406099, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_406099, %struct.Memory** %MEMORY

  %loadBr_406099 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406099 = icmp eq i8 %loadBr_406099, 1
  br i1 %cmpBr_406099, label %block_.L_4060f0, label %block_40609f

block_40609f:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 40609f	 Bytes: 6
  %loadMem_40609f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40609f = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40609f)
  store %struct.Memory* %call_40609f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4060a5	 Bytes: 3
  %loadMem_4060a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060a5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060a5)
  store %struct.Memory* %call_4060a5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 4060a8	 Bytes: 6
  %loadMem_4060a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060a8 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060a8)
  store %struct.Memory* %call_4060a8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x27d4(%rbp)	 RIP: 4060ae	 Bytes: 7
  %loadMem_4060ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ae = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ae)
  store %struct.Memory* %call_4060ae, %struct.Memory** %MEMORY

  ; Code: je .L_4060eb	 RIP: 4060b5	 Bytes: 6
  %loadMem_4060b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060b5 = call %struct.Memory* @routine_je_.L_4060eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060b5, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_4060b5, %struct.Memory** %MEMORY

  %loadBr_4060b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4060b5 = icmp eq i8 %loadBr_4060b5, 1
  br i1 %cmpBr_4060b5, label %block_.L_4060eb, label %block_4060bb

block_4060bb:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 4060bb	 Bytes: 6
  %loadMem_4060bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060bb = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060bb)
  store %struct.Memory* %call_4060bb, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 4060c1	 Bytes: 3
  %loadMem_4060c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060c1 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060c1)
  store %struct.Memory* %call_4060c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 4060c4	 Bytes: 6
  %loadMem_4060c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060c4 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060c4)
  store %struct.Memory* %call_4060c4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x27d8(%rbp)	 RIP: 4060ca	 Bytes: 7
  %loadMem_4060ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ca = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ca)
  store %struct.Memory* %call_4060ca, %struct.Memory** %MEMORY

  ; Code: je .L_4060e6	 RIP: 4060d1	 Bytes: 6
  %loadMem_4060d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060d1 = call %struct.Memory* @routine_je_.L_4060e6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060d1, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4060d1, %struct.Memory** %MEMORY

  %loadBr_4060d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4060d1 = icmp eq i8 %loadBr_4060d1, 1
  br i1 %cmpBr_4060d1, label %block_.L_4060e6, label %block_4060d7

block_4060d7:
  ; Code: movl -0x2174(%rbp), %eax	 RIP: 4060d7	 Bytes: 6
  %loadMem_4060d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060d7 = call %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060d7)
  store %struct.Memory* %call_4060d7, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 4060dd	 Bytes: 3
  %loadMem_4060dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060dd = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060dd)
  store %struct.Memory* %call_4060dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 4060e0	 Bytes: 6
  %loadMem_4060e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060e0 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060e0)
  store %struct.Memory* %call_4060e0, %struct.Memory** %MEMORY

  ; Code: .L_4060e6:	 RIP: 4060e6	 Bytes: 0
  br label %block_.L_4060e6
block_.L_4060e6:

  ; Code: jmpq .L_4060eb	 RIP: 4060e6	 Bytes: 5
  %loadMem_4060e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060e6 = call %struct.Memory* @routine_jmpq_.L_4060eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060e6, i64 5, i64 5)
  store %struct.Memory* %call_4060e6, %struct.Memory** %MEMORY

  br label %block_.L_4060eb

  ; Code: .L_4060eb:	 RIP: 4060eb	 Bytes: 0
block_.L_4060eb:

  ; Code: jmpq .L_4060f0	 RIP: 4060eb	 Bytes: 5
  %loadMem_4060eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060eb = call %struct.Memory* @routine_jmpq_.L_4060f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060eb, i64 5, i64 5)
  store %struct.Memory* %call_4060eb, %struct.Memory** %MEMORY

  br label %block_.L_4060f0

  ; Code: .L_4060f0:	 RIP: 4060f0	 Bytes: 0
block_.L_4060f0:

  ; Code: jmpq .L_4060f5	 RIP: 4060f0	 Bytes: 5
  %loadMem_4060f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060f0 = call %struct.Memory* @routine_jmpq_.L_4060f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060f0, i64 5, i64 5)
  store %struct.Memory* %call_4060f0, %struct.Memory** %MEMORY

  br label %block_.L_4060f5

  ; Code: .L_4060f5:	 RIP: 4060f5	 Bytes: 0
block_.L_4060f5:

  ; Code: movl -0x2160(%rbp), %eax	 RIP: 4060f5	 Bytes: 6
  %loadMem_4060f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060f5 = call %struct.Memory* @routine_movl_MINUS0x2160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060f5)
  store %struct.Memory* %call_4060f5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4060fb	 Bytes: 3
  %loadMem_4060fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060fb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060fb)
  store %struct.Memory* %call_4060fb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2160(%rbp)	 RIP: 4060fe	 Bytes: 6
  %loadMem_4060fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060fe = call %struct.Memory* @routine_movl__eax__MINUS0x2160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060fe)
  store %struct.Memory* %call_4060fe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406118	 RIP: 406104	 Bytes: 5
  %loadMem_406104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406104 = call %struct.Memory* @routine_jmpq_.L_406118(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406104, i64 20, i64 5)
  store %struct.Memory* %call_406104, %struct.Memory** %MEMORY

  br label %block_.L_406118

  ; Code: .L_406109:	 RIP: 406109	 Bytes: 0
block_.L_406109:

  ; Code: movl -0x2164(%rbp), %eax	 RIP: 406109	 Bytes: 6
  %loadMem_406109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406109 = call %struct.Memory* @routine_movl_MINUS0x2164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406109)
  store %struct.Memory* %call_406109, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40610f	 Bytes: 3
  %loadMem_40610f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40610f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40610f)
  store %struct.Memory* %call_40610f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2164(%rbp)	 RIP: 406112	 Bytes: 6
  %loadMem_406112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406112 = call %struct.Memory* @routine_movl__eax__MINUS0x2164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406112)
  store %struct.Memory* %call_406112, %struct.Memory** %MEMORY

  ; Code: .L_406118:	 RIP: 406118	 Bytes: 0
  br label %block_.L_406118
block_.L_406118:

  ; Code: jmpq .L_40611d	 RIP: 406118	 Bytes: 5
  %loadMem_406118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406118 = call %struct.Memory* @routine_jmpq_.L_40611d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406118, i64 5, i64 5)
  store %struct.Memory* %call_406118, %struct.Memory** %MEMORY

  br label %block_.L_40611d

  ; Code: .L_40611d:	 RIP: 40611d	 Bytes: 0
block_.L_40611d:

  ; Code: jmpq .L_406122	 RIP: 40611d	 Bytes: 5
  %loadMem_40611d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40611d = call %struct.Memory* @routine_jmpq_.L_406122(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40611d, i64 5, i64 5)
  store %struct.Memory* %call_40611d, %struct.Memory** %MEMORY

  br label %block_.L_406122

  ; Code: .L_406122:	 RIP: 406122	 Bytes: 0
block_.L_406122:

  ; Code: jmpq .L_406127	 RIP: 406122	 Bytes: 5
  %loadMem_406122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406122 = call %struct.Memory* @routine_jmpq_.L_406127(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406122, i64 5, i64 5)
  store %struct.Memory* %call_406122, %struct.Memory** %MEMORY

  br label %block_.L_406127

  ; Code: .L_406127:	 RIP: 406127	 Bytes: 0
block_.L_406127:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 406127	 Bytes: 3
  %loadMem_406127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406127 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406127)
  store %struct.Memory* %call_406127, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40612a	 Bytes: 3
  %loadMem_40612a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40612a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40612a)
  store %struct.Memory* %call_40612a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 40612d	 Bytes: 3
  %loadMem_40612d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40612d = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40612d)
  store %struct.Memory* %call_40612d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405bce	 RIP: 406130	 Bytes: 5
  %loadMem_406130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406130 = call %struct.Memory* @routine_jmpq_.L_405bce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406130, i64 -1378, i64 5)
  store %struct.Memory* %call_406130, %struct.Memory** %MEMORY

  br label %block_.L_405bce

  ; Code: .L_406135:	 RIP: 406135	 Bytes: 0
block_.L_406135:

  ; Code: cmpl $0x0, -0x2170(%rbp)	 RIP: 406135	 Bytes: 7
  %loadMem_406135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406135 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406135)
  store %struct.Memory* %call_406135, %struct.Memory** %MEMORY

  ; Code: je .L_406171	 RIP: 40613c	 Bytes: 6
  %loadMem_40613c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40613c = call %struct.Memory* @routine_je_.L_406171(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40613c, i8* %BRANCH_TAKEN, i64 53, i64 6, i64 6)
  store %struct.Memory* %call_40613c, %struct.Memory** %MEMORY

  %loadBr_40613c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40613c = icmp eq i8 %loadBr_40613c, 1
  br i1 %cmpBr_40613c, label %block_.L_406171, label %block_406142

block_406142:
  ; Code: cmpl $0x3, -0x2170(%rbp)	 RIP: 406142	 Bytes: 7
  %loadMem_406142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406142 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406142)
  store %struct.Memory* %call_406142, %struct.Memory** %MEMORY

  ; Code: je .L_406171	 RIP: 406149	 Bytes: 6
  %loadMem_406149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406149 = call %struct.Memory* @routine_je_.L_406171(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406149, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_406149, %struct.Memory** %MEMORY

  %loadBr_406149 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406149 = icmp eq i8 %loadBr_406149, 1
  br i1 %cmpBr_406149, label %block_.L_406171, label %block_40614f

block_40614f:
  ; Code: cmpl $0x0, -0x215c(%rbp)	 RIP: 40614f	 Bytes: 7
  %loadMem_40614f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40614f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40614f)
  store %struct.Memory* %call_40614f, %struct.Memory** %MEMORY

  ; Code: je .L_406171	 RIP: 406156	 Bytes: 6
  %loadMem_406156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406156 = call %struct.Memory* @routine_je_.L_406171(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406156, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_406156, %struct.Memory** %MEMORY

  %loadBr_406156 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406156 = icmp eq i8 %loadBr_406156, 1
  br i1 %cmpBr_406156, label %block_.L_406171, label %block_40615c

block_40615c:
  ; Code: movl -0x2160(%rbp), %eax	 RIP: 40615c	 Bytes: 6
  %loadMem_40615c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40615c = call %struct.Memory* @routine_movl_MINUS0x2160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40615c)
  store %struct.Memory* %call_40615c, %struct.Memory** %MEMORY

  ; Code: addl -0x2164(%rbp), %eax	 RIP: 406162	 Bytes: 6
  %loadMem_406162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406162 = call %struct.Memory* @routine_addl_MINUS0x2164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406162)
  store %struct.Memory* %call_406162, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406168	 Bytes: 3
  %loadMem_406168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406168 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406168)
  store %struct.Memory* %call_406168, %struct.Memory** %MEMORY

  ; Code: jne .L_406176	 RIP: 40616b	 Bytes: 6
  %loadMem_40616b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40616b = call %struct.Memory* @routine_jne_.L_406176(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40616b, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40616b, %struct.Memory** %MEMORY

  %loadBr_40616b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40616b = icmp eq i8 %loadBr_40616b, 1
  br i1 %cmpBr_40616b, label %block_.L_406176, label %block_.L_406171

  ; Code: .L_406171:	 RIP: 406171	 Bytes: 0
block_.L_406171:

  ; Code: jmpq .L_4063f9	 RIP: 406171	 Bytes: 5
  %loadMem_406171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406171 = call %struct.Memory* @routine_jmpq_.L_4063f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406171, i64 648, i64 5)
  store %struct.Memory* %call_406171, %struct.Memory** %MEMORY

  br label %block_.L_4063f9

  ; Code: .L_406176:	 RIP: 406176	 Bytes: 0
block_.L_406176:

  ; Code: cmpl $0x0, -0x2174(%rbp)	 RIP: 406176	 Bytes: 7
  %loadMem_406176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406176 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406176)
  store %struct.Memory* %call_406176, %struct.Memory** %MEMORY

  ; Code: jge .L_40618d	 RIP: 40617d	 Bytes: 6
  %loadMem_40617d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40617d = call %struct.Memory* @routine_jge_.L_40618d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40617d, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_40617d, %struct.Memory** %MEMORY

  %loadBr_40617d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40617d = icmp eq i8 %loadBr_40617d, 1
  br i1 %cmpBr_40617d, label %block_.L_40618d, label %block_406183

block_406183:
  ; Code: movl $0x0, -0x2174(%rbp)	 RIP: 406183	 Bytes: 10
  %loadMem_406183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406183 = call %struct.Memory* @routine_movl__0x0__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406183)
  store %struct.Memory* %call_406183, %struct.Memory** %MEMORY

  ; Code: .L_40618d:	 RIP: 40618d	 Bytes: 0
  br label %block_.L_40618d
block_.L_40618d:

  ; Code: movl -0x215c(%rbp), %eax	 RIP: 40618d	 Bytes: 6
  %loadMem_40618d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40618d = call %struct.Memory* @routine_movl_MINUS0x215c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40618d)
  store %struct.Memory* %call_40618d, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 406193	 Bytes: 3
  %loadMem_406193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406193 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406193)
  store %struct.Memory* %call_406193, %struct.Memory** %MEMORY

  ; Code: addl -0x2174(%rbp), %eax	 RIP: 406196	 Bytes: 6
  %loadMem_406196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406196 = call %struct.Memory* @routine_addl_MINUS0x2174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406196)
  store %struct.Memory* %call_406196, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 40619c	 Bytes: 7
  %loadMem_40619c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40619c = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40619c)
  store %struct.Memory* %call_40619c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 4061a3	 Bytes: 7
  %loadMem_4061a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061a3 = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061a3)
  store %struct.Memory* %call_4061a3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, -0x2170(%rbp)	 RIP: 4061aa	 Bytes: 7
  %loadMem_4061aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061aa = call %struct.Memory* @routine_cmpl__0x9__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061aa)
  store %struct.Memory* %call_4061aa, %struct.Memory** %MEMORY

  ; Code: jne .L_40623d	 RIP: 4061b1	 Bytes: 6
  %loadMem_4061b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061b1 = call %struct.Memory* @routine_jne_.L_40623d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061b1, i8* %BRANCH_TAKEN, i64 140, i64 6, i64 6)
  store %struct.Memory* %call_4061b1, %struct.Memory** %MEMORY

  %loadBr_4061b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4061b1 = icmp eq i8 %loadBr_4061b1, 1
  br i1 %cmpBr_4061b1, label %block_.L_40623d, label %block_4061b7

block_4061b7:
  ; Code: movl -0x2160(%rbp), %eax	 RIP: 4061b7	 Bytes: 6
  %loadMem_4061b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061b7 = call %struct.Memory* @routine_movl_MINUS0x2160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061b7)
  store %struct.Memory* %call_4061b7, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 4061bd	 Bytes: 7
  %loadMem_4061bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061bd = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061bd)
  store %struct.Memory* %call_4061bd, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 4061c4	 Bytes: 7
  %loadMem_4061c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061c4 = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061c4)
  store %struct.Memory* %call_4061c4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 4061cb	 Bytes: 7
  %loadMem_4061cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061cb = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061cb)
  store %struct.Memory* %call_4061cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x2160(%rbp)	 RIP: 4061d2	 Bytes: 7
  %loadMem_4061d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061d2 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061d2)
  store %struct.Memory* %call_4061d2, %struct.Memory** %MEMORY

  ; Code: jge .L_4061fa	 RIP: 4061d9	 Bytes: 6
  %loadMem_4061d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061d9 = call %struct.Memory* @routine_jge_.L_4061fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061d9, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_4061d9, %struct.Memory** %MEMORY

  %loadBr_4061d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4061d9 = icmp eq i8 %loadBr_4061d9, 1
  br i1 %cmpBr_4061d9, label %block_.L_4061fa, label %block_4061df

block_4061df:
  ; Code: movl -0x2164(%rbp), %eax	 RIP: 4061df	 Bytes: 6
  %loadMem_4061df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061df = call %struct.Memory* @routine_movl_MINUS0x2164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061df)
  store %struct.Memory* %call_4061df, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 4061e5	 Bytes: 7
  %loadMem_4061e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061e5 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061e5)
  store %struct.Memory* %call_4061e5, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 4061ec	 Bytes: 7
  %loadMem_4061ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061ec = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061ec)
  store %struct.Memory* %call_4061ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 4061f3	 Bytes: 7
  %loadMem_4061f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061f3 = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061f3)
  store %struct.Memory* %call_4061f3, %struct.Memory** %MEMORY

  ; Code: .L_4061fa:	 RIP: 4061fa	 Bytes: 0
  br label %block_.L_4061fa
block_.L_4061fa:

  ; Code: cmpl $0x1, -0x216c(%rbp)	 RIP: 4061fa	 Bytes: 7
  %loadMem_4061fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061fa = call %struct.Memory* @routine_cmpl__0x1__MINUS0x216c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061fa)
  store %struct.Memory* %call_4061fa, %struct.Memory** %MEMORY

  ; Code: jle .L_406238	 RIP: 406201	 Bytes: 6
  %loadMem_406201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406201 = call %struct.Memory* @routine_jle_.L_406238(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406201, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_406201, %struct.Memory** %MEMORY

  %loadBr_406201 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406201 = icmp eq i8 %loadBr_406201, 1
  br i1 %cmpBr_406201, label %block_.L_406238, label %block_406207

block_406207:
  ; Code: cmpl $0x1, -0x215c(%rbp)	 RIP: 406207	 Bytes: 7
  %loadMem_406207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406207 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406207)
  store %struct.Memory* %call_406207, %struct.Memory** %MEMORY

  ; Code: jl .L_406238	 RIP: 40620e	 Bytes: 6
  %loadMem_40620e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40620e = call %struct.Memory* @routine_jl_.L_406238(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40620e, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_40620e, %struct.Memory** %MEMORY

  %loadBr_40620e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40620e = icmp eq i8 %loadBr_40620e, 1
  br i1 %cmpBr_40620e, label %block_.L_406238, label %block_406214

block_406214:
  ; Code: movl -0x216c(%rbp), %eax	 RIP: 406214	 Bytes: 6
  %loadMem_406214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406214 = call %struct.Memory* @routine_movl_MINUS0x216c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406214)
  store %struct.Memory* %call_406214, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 40621a	 Bytes: 3
  %loadMem_40621a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40621a = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40621a)
  store %struct.Memory* %call_40621a, %struct.Memory** %MEMORY

  ; Code: imull $0x5, %eax, %eax	 RIP: 40621d	 Bytes: 3
  %loadMem_40621d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40621d = call %struct.Memory* @routine_imull__0x5___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40621d)
  store %struct.Memory* %call_40621d, %struct.Memory** %MEMORY

  ; Code: addl $0xa, %eax	 RIP: 406220	 Bytes: 3
  %loadMem_406220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406220 = call %struct.Memory* @routine_addl__0xa___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406220)
  store %struct.Memory* %call_406220, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406223	 Bytes: 7
  %loadMem_406223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406223 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406223)
  store %struct.Memory* %call_406223, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 40622a	 Bytes: 7
  %loadMem_40622a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40622a = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40622a)
  store %struct.Memory* %call_40622a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 406231	 Bytes: 7
  %loadMem_406231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406231 = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406231)
  store %struct.Memory* %call_406231, %struct.Memory** %MEMORY

  ; Code: .L_406238:	 RIP: 406238	 Bytes: 0
  br label %block_.L_406238
block_.L_406238:

  ; Code: jmpq .L_40626a	 RIP: 406238	 Bytes: 5
  %loadMem_406238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406238 = call %struct.Memory* @routine_jmpq_.L_40626a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406238, i64 50, i64 5)
  store %struct.Memory* %call_406238, %struct.Memory** %MEMORY

  br label %block_.L_40626a

  ; Code: .L_40623d:	 RIP: 40623d	 Bytes: 0
block_.L_40623d:

  ; Code: cmpl $0x2, -0x215c(%rbp)	 RIP: 40623d	 Bytes: 7
  %loadMem_40623d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40623d = call %struct.Memory* @routine_cmpl__0x2__MINUS0x215c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40623d)
  store %struct.Memory* %call_40623d, %struct.Memory** %MEMORY

  ; Code: jle .L_406265	 RIP: 406244	 Bytes: 6
  %loadMem_406244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406244 = call %struct.Memory* @routine_jle_.L_406265(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406244, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_406244, %struct.Memory** %MEMORY

  %loadBr_406244 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406244 = icmp eq i8 %loadBr_406244, 1
  br i1 %cmpBr_406244, label %block_.L_406265, label %block_40624a

block_40624a:
  ; Code: movl -0x2164(%rbp), %eax	 RIP: 40624a	 Bytes: 6
  %loadMem_40624a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40624a = call %struct.Memory* @routine_movl_MINUS0x2164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40624a)
  store %struct.Memory* %call_40624a, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406250	 Bytes: 7
  %loadMem_406250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406250 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406250)
  store %struct.Memory* %call_406250, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 406257	 Bytes: 7
  %loadMem_406257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406257 = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406257)
  store %struct.Memory* %call_406257, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 40625e	 Bytes: 7
  %loadMem_40625e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40625e = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40625e)
  store %struct.Memory* %call_40625e, %struct.Memory** %MEMORY

  ; Code: .L_406265:	 RIP: 406265	 Bytes: 0
  br label %block_.L_406265
block_.L_406265:

  ; Code: jmpq .L_40626a	 RIP: 406265	 Bytes: 5
  %loadMem_406265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406265 = call %struct.Memory* @routine_jmpq_.L_40626a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406265, i64 5, i64 5)
  store %struct.Memory* %call_406265, %struct.Memory** %MEMORY

  br label %block_.L_40626a

  ; Code: .L_40626a:	 RIP: 40626a	 Bytes: 0
block_.L_40626a:

  ; Code: cmpl $0x1, -0x2168(%rbp)	 RIP: 40626a	 Bytes: 7
  %loadMem_40626a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40626a = call %struct.Memory* @routine_cmpl__0x1__MINUS0x2168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40626a)
  store %struct.Memory* %call_40626a, %struct.Memory** %MEMORY

  ; Code: jle .L_406298	 RIP: 406271	 Bytes: 6
  %loadMem_406271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406271 = call %struct.Memory* @routine_jle_.L_406298(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406271, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_406271, %struct.Memory** %MEMORY

  %loadBr_406271 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406271 = icmp eq i8 %loadBr_406271, 1
  br i1 %cmpBr_406271, label %block_.L_406298, label %block_406277

block_406277:
  ; Code: movl -0x2168(%rbp), %eax	 RIP: 406277	 Bytes: 6
  %loadMem_406277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406277 = call %struct.Memory* @routine_movl_MINUS0x2168__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406277)
  store %struct.Memory* %call_406277, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 40627d	 Bytes: 3
  %loadMem_40627d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40627d = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40627d)
  store %struct.Memory* %call_40627d, %struct.Memory** %MEMORY

  ; Code: imull $0xa, %eax, %eax	 RIP: 406280	 Bytes: 3
  %loadMem_406280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406280 = call %struct.Memory* @routine_imull__0xa___eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406280)
  store %struct.Memory* %call_406280, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406283	 Bytes: 7
  %loadMem_406283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406283 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406283)
  store %struct.Memory* %call_406283, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 40628a	 Bytes: 7
  %loadMem_40628a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40628a = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40628a)
  store %struct.Memory* %call_40628a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 406291	 Bytes: 7
  %loadMem_406291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406291 = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406291)
  store %struct.Memory* %call_406291, %struct.Memory** %MEMORY

  ; Code: .L_406298:	 RIP: 406298	 Bytes: 0
  br label %block_.L_406298
block_.L_406298:

  ; Code: movsd 0xdcca8(%rip), %xmm0	 RIP: 406298	 Bytes: 8
  %loadMem_406298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406298 = call %struct.Memory* @routine_movsd_0xdcca8__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406298)
  store %struct.Memory* %call_406298, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4062a0	 Bytes: 7
  %loadMem_4062a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062a0 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062a0)
  store %struct.Memory* %call_4062a0, %struct.Memory** %MEMORY

  ; Code: cvtss2sd -0x12f0(%rbp,%rax,4), %xmm1	 RIP: 4062a7	 Bytes: 9
  %loadMem_4062a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062a7 = call %struct.Memory* @routine_cvtss2sd_MINUS0x12f0__rbp__rax_4____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062a7)
  store %struct.Memory* %call_4062a7, %struct.Memory** %MEMORY

  ; Code: movaps %xmm0, %xmm2	 RIP: 4062b0	 Bytes: 3
  %loadMem_4062b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062b0 = call %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062b0)
  store %struct.Memory* %call_4062b0, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm1, %xmm2	 RIP: 4062b3	 Bytes: 4
  %loadMem_4062b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062b3 = call %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062b3)
  store %struct.Memory* %call_4062b3, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm2, %ecx	 RIP: 4062b7	 Bytes: 4
  %loadMem_4062b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062b7 = call %struct.Memory* @routine_cvttsd2si__xmm2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062b7)
  store %struct.Memory* %call_4062b7, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x27dc(%rbp)	 RIP: 4062bb	 Bytes: 6
  %loadMem_4062bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062bb = call %struct.Memory* @routine_movl__ecx__MINUS0x27dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062bb)
  store %struct.Memory* %call_4062bb, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4062c1	 Bytes: 7
  %loadMem_4062c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062c1 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062c1)
  store %struct.Memory* %call_4062c1, %struct.Memory** %MEMORY

  ; Code: cvtss2sd -0x1930(%rbp,%rax,4), %xmm1	 RIP: 4062c8	 Bytes: 9
  %loadMem_4062c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062c8 = call %struct.Memory* @routine_cvtss2sd_MINUS0x1930__rbp__rax_4____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062c8)
  store %struct.Memory* %call_4062c8, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm1, %xmm0	 RIP: 4062d1	 Bytes: 4
  %loadMem_4062d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062d1 = call %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062d1)
  store %struct.Memory* %call_4062d1, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 4062d5	 Bytes: 4
  %loadMem_4062d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062d5 = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062d5)
  store %struct.Memory* %call_4062d5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x27e0(%rbp)	 RIP: 4062d9	 Bytes: 6
  %loadMem_4062d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062d9 = call %struct.Memory* @routine_movl__ecx__MINUS0x27e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062d9)
  store %struct.Memory* %call_4062d9, %struct.Memory** %MEMORY

  ; Code: movl -0x27dc(%rbp), %ecx	 RIP: 4062df	 Bytes: 6
  %loadMem_4062df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062df = call %struct.Memory* @routine_movl_MINUS0x27dc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062df)
  store %struct.Memory* %call_4062df, %struct.Memory** %MEMORY

  ; Code: addl -0x27e0(%rbp), %ecx	 RIP: 4062e5	 Bytes: 6
  %loadMem_4062e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062e5 = call %struct.Memory* @routine_addl_MINUS0x27e0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062e5)
  store %struct.Memory* %call_4062e5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x27e4(%rbp)	 RIP: 4062eb	 Bytes: 6
  %loadMem_4062eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062eb = call %struct.Memory* @routine_movl__ecx__MINUS0x27e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062eb)
  store %struct.Memory* %call_4062eb, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 4062f1	 Bytes: 7
  %loadMem_4062f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062f1 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062f1)
  store %struct.Memory* %call_4062f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xcb0(%rbp,%rax,4)	 RIP: 4062f8	 Bytes: 8
  %loadMem_4062f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4062f8 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4062f8)
  store %struct.Memory* %call_4062f8, %struct.Memory** %MEMORY

  ; Code: jle .L_40633c	 RIP: 406300	 Bytes: 6
  %loadMem_406300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406300 = call %struct.Memory* @routine_jle_.L_40633c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406300, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_406300, %struct.Memory** %MEMORY

  %loadBr_406300 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406300 = icmp eq i8 %loadBr_406300, 1
  br i1 %cmpBr_406300, label %block_.L_40633c, label %block_406306

block_406306:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406306	 Bytes: 7
  %loadMem_406306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406306 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406306)
  store %struct.Memory* %call_406306, %struct.Memory** %MEMORY

  ; Code: movl -0xcb0(%rbp,%rax,4), %ecx	 RIP: 40630d	 Bytes: 7
  %loadMem_40630d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40630d = call %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40630d)
  store %struct.Memory* %call_40630d, %struct.Memory** %MEMORY

  ; Code: addl -0x27e4(%rbp), %ecx	 RIP: 406314	 Bytes: 6
  %loadMem_406314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406314 = call %struct.Memory* @routine_addl_MINUS0x27e4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406314)
  store %struct.Memory* %call_406314, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 40631a	 Bytes: 3
  %loadMem_40631a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40631a = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40631a)
  store %struct.Memory* %call_40631a, %struct.Memory** %MEMORY

  ; Code: jg .L_40633c	 RIP: 40631d	 Bytes: 6
  %loadMem_40631d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40631d = call %struct.Memory* @routine_jg_.L_40633c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40631d, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_40631d, %struct.Memory** %MEMORY

  %loadBr_40631d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40631d = icmp eq i8 %loadBr_40631d, 1
  br i1 %cmpBr_40631d, label %block_.L_40633c, label %block_406323

block_406323:
  ; Code: movl $0x1, %eax	 RIP: 406323	 Bytes: 5
  %loadMem_406323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406323 = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406323)
  store %struct.Memory* %call_406323, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406328	 Bytes: 7
  %loadMem_406328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406328 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406328)
  store %struct.Memory* %call_406328, %struct.Memory** %MEMORY

  ; Code: subl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 40632f	 Bytes: 7
  %loadMem_40632f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40632f = call %struct.Memory* @routine_subl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40632f)
  store %struct.Memory* %call_40632f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27e4(%rbp)	 RIP: 406336	 Bytes: 6
  %loadMem_406336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406336 = call %struct.Memory* @routine_movl__eax__MINUS0x27e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406336)
  store %struct.Memory* %call_406336, %struct.Memory** %MEMORY

  ; Code: .L_40633c:	 RIP: 40633c	 Bytes: 0
  br label %block_.L_40633c
block_.L_40633c:

  ; Code: movl -0x27e4(%rbp), %eax	 RIP: 40633c	 Bytes: 6
  %loadMem_40633c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40633c = call %struct.Memory* @routine_movl_MINUS0x27e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40633c)
  store %struct.Memory* %call_40633c, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406342	 Bytes: 7
  %loadMem_406342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406342 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406342)
  store %struct.Memory* %call_406342, %struct.Memory** %MEMORY

  ; Code: addl -0xcb0(%rbp,%rcx,4), %eax	 RIP: 406349	 Bytes: 7
  %loadMem_406349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406349 = call %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406349)
  store %struct.Memory* %call_406349, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 406350	 Bytes: 7
  %loadMem_406350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406350 = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406350)
  store %struct.Memory* %call_406350, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 406357	 Bytes: 7
  %loadMem_406357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406357 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406357)
  store %struct.Memory* %call_406357, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 40635e	 Bytes: 5
  %loadMem_40635e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40635e = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40635e)
  store %struct.Memory* %call_40635e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406363	 Bytes: 3
  %loadMem_406363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406363 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406363)
  store %struct.Memory* %call_406363, %struct.Memory** %MEMORY

  ; Code: je .L_4063a4	 RIP: 406366	 Bytes: 6
  %loadMem_406366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406366 = call %struct.Memory* @routine_je_.L_4063a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406366, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_406366, %struct.Memory** %MEMORY

  %loadBr_406366 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406366 = icmp eq i8 %loadBr_406366, 1
  br i1 %cmpBr_406366, label %block_.L_4063a4, label %block_40636c

block_40636c:
  ; Code: movq $0x579e20, %rdi	 RIP: 40636c	 Bytes: 10
  %loadMem_40636c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40636c = call %struct.Memory* @routine_movq__0x579e20___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40636c)
  store %struct.Memory* %call_40636c, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %esi	 RIP: 406376	 Bytes: 6
  %loadMem_406376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406376 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406376)
  store %struct.Memory* %call_406376, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 40637c	 Bytes: 7
  %loadMem_40637c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40637c = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40637c)
  store %struct.Memory* %call_40637c, %struct.Memory** %MEMORY

  ; Code: movl -0xcb0(%rbp,%rax,4), %edx	 RIP: 406383	 Bytes: 7
  %loadMem_406383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406383 = call %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406383)
  store %struct.Memory* %call_406383, %struct.Memory** %MEMORY

  ; Code: movl -0x27dc(%rbp), %ecx	 RIP: 40638a	 Bytes: 6
  %loadMem_40638a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40638a = call %struct.Memory* @routine_movl_MINUS0x27dc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40638a)
  store %struct.Memory* %call_40638a, %struct.Memory** %MEMORY

  ; Code: movl -0x27e0(%rbp), %r8d	 RIP: 406390	 Bytes: 7
  %loadMem_406390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406390 = call %struct.Memory* @routine_movl_MINUS0x27e0__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406390)
  store %struct.Memory* %call_406390, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 406397	 Bytes: 2
  %loadMem_406397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406397 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406397)
  store %struct.Memory* %call_406397, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 406399	 Bytes: 5
  %loadMem1_406399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406399 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406399, i64 309783, i64 5, i64 5)
  store %struct.Memory* %call1_406399, %struct.Memory** %MEMORY

  %loadMem2_406399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406399 = load i64, i64* %3
  %call2_406399 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_406399, %struct.Memory* %loadMem2_406399)
  store %struct.Memory* %call2_406399, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ae4(%rbp)	 RIP: 40639e	 Bytes: 6
  %loadMem_40639e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40639e = call %struct.Memory* @routine_movl__eax__MINUS0x2ae4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40639e)
  store %struct.Memory* %call_40639e, %struct.Memory** %MEMORY

  ; Code: .L_4063a4:	 RIP: 4063a4	 Bytes: 0
  br label %block_.L_4063a4
block_.L_4063a4:

  ; Code: xorl %eax, %eax	 RIP: 4063a4	 Bytes: 2
  %loadMem_4063a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063a4 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063a4)
  store %struct.Memory* %call_4063a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4063a6	 Bytes: 2
  %loadMem_4063a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063a6 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063a6)
  store %struct.Memory* %call_4063a6, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 4063a8	 Bytes: 6
  %loadMem_4063a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063a8 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063a8)
  store %struct.Memory* %call_4063a8, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 4063ae	 Bytes: 3
  %loadMem_4063ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063ae = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063ae)
  store %struct.Memory* %call_4063ae, %struct.Memory** %MEMORY

  ; Code: callq .is_ko	 RIP: 4063b1	 Bytes: 5
  %loadMem1_4063b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4063b1 = call %struct.Memory* @routine_callq_.is_ko(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4063b1, i64 36431, i64 5, i64 5)
  store %struct.Memory* %call1_4063b1, %struct.Memory** %MEMORY

  %loadMem2_4063b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4063b1 = load i64, i64* %3
  %call2_4063b1 = call %struct.Memory* @sub_40f200.is_ko(%struct.State* %0, i64  %loadPC_4063b1, %struct.Memory* %loadMem2_4063b1)
  store %struct.Memory* %call2_4063b1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4063b6	 Bytes: 3
  %loadMem_4063b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063b6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063b6)
  store %struct.Memory* %call_4063b6, %struct.Memory** %MEMORY

  ; Code: je .L_4063f4	 RIP: 4063b9	 Bytes: 6
  %loadMem_4063b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063b9 = call %struct.Memory* @routine_je_.L_4063f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063b9, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_4063b9, %struct.Memory** %MEMORY

  %loadBr_4063b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4063b9 = icmp eq i8 %loadBr_4063b9, 1
  br i1 %cmpBr_4063b9, label %block_.L_4063f4, label %block_4063bf

block_4063bf:
  ; Code: movl $0x2, %eax	 RIP: 4063bf	 Bytes: 5
  %loadMem_4063bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063bf = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063bf)
  store %struct.Memory* %call_4063bf, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 4063c4	 Bytes: 7
  %loadMem_4063c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063c4 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063c4)
  store %struct.Memory* %call_4063c4, %struct.Memory** %MEMORY

  ; Code: movl -0xcb0(%rbp,%rcx,4), %edx	 RIP: 4063cb	 Bytes: 7
  %loadMem_4063cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063cb = call %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063cb)
  store %struct.Memory* %call_4063cb, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 4063d2	 Bytes: 3
  %loadMem_4063d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063d2 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063d2)
  store %struct.Memory* %call_4063d2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ae8(%rbp)	 RIP: 4063d5	 Bytes: 6
  %loadMem_4063d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063d5 = call %struct.Memory* @routine_movl__eax__MINUS0x2ae8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063d5)
  store %struct.Memory* %call_4063d5, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4063db	 Bytes: 2
  %loadMem_4063db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063db = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063db)
  store %struct.Memory* %call_4063db, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4063dd	 Bytes: 1
  %loadMem_4063dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063dd = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063dd)
  store %struct.Memory* %call_4063dd, %struct.Memory** %MEMORY

  ; Code: movl -0x2ae8(%rbp), %esi	 RIP: 4063de	 Bytes: 6
  %loadMem_4063de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063de = call %struct.Memory* @routine_movl_MINUS0x2ae8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063de)
  store %struct.Memory* %call_4063de, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4063e4	 Bytes: 2
  %loadMem_4063e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063e4 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063e4)
  store %struct.Memory* %call_4063e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 4063e6	 Bytes: 7
  %loadMem_4063e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063e6 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063e6)
  store %struct.Memory* %call_4063e6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcb0(%rbp,%rcx,4)	 RIP: 4063ed	 Bytes: 7
  %loadMem_4063ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063ed = call %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063ed)
  store %struct.Memory* %call_4063ed, %struct.Memory** %MEMORY

  ; Code: .L_4063f4:	 RIP: 4063f4	 Bytes: 0
  br label %block_.L_4063f4
block_.L_4063f4:

  ; Code: jmpq .L_4063f9	 RIP: 4063f4	 Bytes: 5
  %loadMem_4063f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063f4 = call %struct.Memory* @routine_jmpq_.L_4063f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063f4, i64 5, i64 5)
  store %struct.Memory* %call_4063f4, %struct.Memory** %MEMORY

  br label %block_.L_4063f9

  ; Code: .L_4063f9:	 RIP: 4063f9	 Bytes: 0
block_.L_4063f9:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 4063f9	 Bytes: 6
  %loadMem_4063f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063f9 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063f9)
  store %struct.Memory* %call_4063f9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4063ff	 Bytes: 3
  %loadMem_4063ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4063ff = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4063ff)
  store %struct.Memory* %call_4063ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 406402	 Bytes: 6
  %loadMem_406402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406402 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406402)
  store %struct.Memory* %call_406402, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405b15	 RIP: 406408	 Bytes: 5
  %loadMem_406408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406408 = call %struct.Memory* @routine_jmpq_.L_405b15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406408, i64 -2291, i64 5)
  store %struct.Memory* %call_406408, %struct.Memory** %MEMORY

  br label %block_.L_405b15

  ; Code: .L_40640d:	 RIP: 40640d	 Bytes: 0
block_.L_40640d:

  ; Code: jmpq .L_406412	 RIP: 40640d	 Bytes: 5
  %loadMem_40640d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40640d = call %struct.Memory* @routine_jmpq_.L_406412(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40640d, i64 5, i64 5)
  store %struct.Memory* %call_40640d, %struct.Memory** %MEMORY

  br label %block_.L_406412

  ; Code: .L_406412:	 RIP: 406412	 Bytes: 0
block_.L_406412:

  ; Code: movl $0x0, -0x1f8c(%rbp)	 RIP: 406412	 Bytes: 10
  %loadMem_406412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406412 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406412)
  store %struct.Memory* %call_406412, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1f84(%rbp)	 RIP: 40641c	 Bytes: 10
  %loadMem_40641c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40641c = call %struct.Memory* @routine_movl__0x0__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40641c)
  store %struct.Memory* %call_40641c, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 406426	 Bytes: 10
  %loadMem_406426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406426 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406426)
  store %struct.Memory* %call_406426, %struct.Memory** %MEMORY

  ; Code: .L_406430:	 RIP: 406430	 Bytes: 0
  br label %block_.L_406430
block_.L_406430:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 406430	 Bytes: 10
  %loadMem_406430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406430 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406430)
  store %struct.Memory* %call_406430, %struct.Memory** %MEMORY

  ; Code: jge .L_4064ab	 RIP: 40643a	 Bytes: 6
  %loadMem_40643a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40643a = call %struct.Memory* @routine_jge_.L_4064ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40643a, i8* %BRANCH_TAKEN, i64 113, i64 6, i64 6)
  store %struct.Memory* %call_40643a, %struct.Memory** %MEMORY

  %loadBr_40643a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40643a = icmp eq i8 %loadBr_40643a, 1
  br i1 %cmpBr_40643a, label %block_.L_4064ab, label %block_406440

block_406440:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406440	 Bytes: 7
  %loadMem_406440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406440 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406440)
  store %struct.Memory* %call_406440, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 406447	 Bytes: 8
  %loadMem_406447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406447 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406447)
  store %struct.Memory* %call_406447, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 40644f	 Bytes: 3
  %loadMem_40644f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40644f = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40644f)
  store %struct.Memory* %call_40644f, %struct.Memory** %MEMORY

  ; Code: je .L_406492	 RIP: 406452	 Bytes: 6
  %loadMem_406452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406452 = call %struct.Memory* @routine_je_.L_406492(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406452, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_406452, %struct.Memory** %MEMORY

  %loadBr_406452 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406452 = icmp eq i8 %loadBr_406452, 1
  br i1 %cmpBr_406452, label %block_.L_406492, label %block_406458

block_406458:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406458	 Bytes: 7
  %loadMem_406458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406458 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406458)
  store %struct.Memory* %call_406458, %struct.Memory** %MEMORY

  ; Code: movl -0xcb0(%rbp,%rax,4), %ecx	 RIP: 40645f	 Bytes: 7
  %loadMem_40645f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40645f = call %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40645f)
  store %struct.Memory* %call_40645f, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1f8c(%rbp), %ecx	 RIP: 406466	 Bytes: 6
  %loadMem_406466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406466 = call %struct.Memory* @routine_cmpl_MINUS0x1f8c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406466)
  store %struct.Memory* %call_406466, %struct.Memory** %MEMORY

  ; Code: jle .L_406492	 RIP: 40646c	 Bytes: 6
  %loadMem_40646c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40646c = call %struct.Memory* @routine_jle_.L_406492(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40646c, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_40646c, %struct.Memory** %MEMORY

  %loadBr_40646c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40646c = icmp eq i8 %loadBr_40646c, 1
  br i1 %cmpBr_40646c, label %block_.L_406492, label %block_406472

block_406472:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406472	 Bytes: 7
  %loadMem_406472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406472 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406472)
  store %struct.Memory* %call_406472, %struct.Memory** %MEMORY

  ; Code: movl -0xcb0(%rbp,%rax,4), %ecx	 RIP: 406479	 Bytes: 7
  %loadMem_406479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406479 = call %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406479)
  store %struct.Memory* %call_406479, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1f8c(%rbp)	 RIP: 406480	 Bytes: 6
  %loadMem_406480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406480 = call %struct.Memory* @routine_movl__ecx__MINUS0x1f8c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406480)
  store %struct.Memory* %call_406480, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %ecx	 RIP: 406486	 Bytes: 6
  %loadMem_406486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406486 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406486)
  store %struct.Memory* %call_406486, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1f84(%rbp)	 RIP: 40648c	 Bytes: 6
  %loadMem_40648c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40648c = call %struct.Memory* @routine_movl__ecx__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40648c)
  store %struct.Memory* %call_40648c, %struct.Memory** %MEMORY

  ; Code: .L_406492:	 RIP: 406492	 Bytes: 0
  br label %block_.L_406492
block_.L_406492:

  ; Code: jmpq .L_406497	 RIP: 406492	 Bytes: 5
  %loadMem_406492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406492 = call %struct.Memory* @routine_jmpq_.L_406497(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406492, i64 5, i64 5)
  store %struct.Memory* %call_406492, %struct.Memory** %MEMORY

  br label %block_.L_406497

  ; Code: .L_406497:	 RIP: 406497	 Bytes: 0
block_.L_406497:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406497	 Bytes: 6
  %loadMem_406497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406497 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406497)
  store %struct.Memory* %call_406497, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40649d	 Bytes: 3
  %loadMem_40649d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40649d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40649d)
  store %struct.Memory* %call_40649d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 4064a0	 Bytes: 6
  %loadMem_4064a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064a0 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064a0)
  store %struct.Memory* %call_4064a0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406430	 RIP: 4064a6	 Bytes: 5
  %loadMem_4064a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064a6 = call %struct.Memory* @routine_jmpq_.L_406430(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064a6, i64 -118, i64 5)
  store %struct.Memory* %call_4064a6, %struct.Memory** %MEMORY

  br label %block_.L_406430

  ; Code: .L_4064ab:	 RIP: 4064ab	 Bytes: 0
block_.L_4064ab:

  ; Code: cmpl $0x0, -0x1f84(%rbp)	 RIP: 4064ab	 Bytes: 7
  %loadMem_4064ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064ab = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064ab)
  store %struct.Memory* %call_4064ab, %struct.Memory** %MEMORY

  ; Code: jne .L_4064bd	 RIP: 4064b2	 Bytes: 6
  %loadMem_4064b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064b2 = call %struct.Memory* @routine_jne_.L_4064bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064b2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4064b2, %struct.Memory** %MEMORY

  %loadBr_4064b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4064b2 = icmp eq i8 %loadBr_4064b2, 1
  br i1 %cmpBr_4064b2, label %block_.L_4064bd, label %block_4064b8

block_4064b8:
  ; Code: jmpq .L_406948	 RIP: 4064b8	 Bytes: 5
  %loadMem_4064b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064b8 = call %struct.Memory* @routine_jmpq_.L_406948(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064b8, i64 1168, i64 5)
  store %struct.Memory* %call_4064b8, %struct.Memory** %MEMORY

  br label %block_.L_406948

  ; Code: .L_4064bd:	 RIP: 4064bd	 Bytes: 0
block_.L_4064bd:

  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 4064bd	 Bytes: 7
  %loadMem_4064bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064bd = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064bd)
  store %struct.Memory* %call_4064bd, %struct.Memory** %MEMORY

  ; Code: movl -0x1f70(%rbp,%rax,4), %ecx	 RIP: 4064c4	 Bytes: 7
  %loadMem_4064c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064c4 = call %struct.Memory* @routine_movl_MINUS0x1f70__rbp__rax_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064c4)
  store %struct.Memory* %call_4064c4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x27e8(%rbp)	 RIP: 4064cb	 Bytes: 6
  %loadMem_4064cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064cb = call %struct.Memory* @routine_movl__ecx__MINUS0x27e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064cb)
  store %struct.Memory* %call_4064cb, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 4064d1	 Bytes: 6
  %loadMem_4064d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064d1 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064d1)
  store %struct.Memory* %call_4064d1, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 4064d7	 Bytes: 3
  %loadMem_4064d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064d7 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064d7)
  store %struct.Memory* %call_4064d7, %struct.Memory** %MEMORY

  ; Code: callq .is_illegal_ko_capture	 RIP: 4064da	 Bytes: 5
  %loadMem1_4064da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4064da = call %struct.Memory* @routine_callq_.is_illegal_ko_capture(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4064da, i64 34710, i64 5, i64 5)
  store %struct.Memory* %call1_4064da, %struct.Memory** %MEMORY

  %loadMem2_4064da = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4064da = load i64, i64* %3
  %call2_4064da = call %struct.Memory* @sub_40ec70.is_illegal_ko_capture(%struct.State* %0, i64  %loadPC_4064da, %struct.Memory* %loadMem2_4064da)
  store %struct.Memory* %call2_4064da, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4064df	 Bytes: 3
  %loadMem_4064df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064df = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064df)
  store %struct.Memory* %call_4064df, %struct.Memory** %MEMORY

  ; Code: jne .L_4065a5	 RIP: 4064e2	 Bytes: 6
  %loadMem_4064e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064e2 = call %struct.Memory* @routine_jne_.L_4065a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064e2, i8* %BRANCH_TAKEN, i64 195, i64 6, i64 6)
  store %struct.Memory* %call_4064e2, %struct.Memory** %MEMORY

  %loadBr_4064e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4064e2 = icmp eq i8 %loadBr_4064e2, 1
  br i1 %cmpBr_4064e2, label %block_.L_4065a5, label %block_4064e8

block_4064e8:
  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 4064e8	 Bytes: 6
  %loadMem_4064e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064e8 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064e8)
  store %struct.Memory* %call_4064e8, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 4064ee	 Bytes: 3
  %loadMem_4064ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064ee = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064ee)
  store %struct.Memory* %call_4064ee, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 4064f1	 Bytes: 5
  %loadMem1_4064f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4064f1 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4064f1, i64 415551, i64 5, i64 5)
  store %struct.Memory* %call1_4064f1, %struct.Memory** %MEMORY

  %loadMem2_4064f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4064f1 = load i64, i64* %3
  %call2_4064f1 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_4064f1, %struct.Memory* %loadMem2_4064f1)
  store %struct.Memory* %call2_4064f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4064f6	 Bytes: 3
  %loadMem_4064f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064f6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064f6)
  store %struct.Memory* %call_4064f6, %struct.Memory** %MEMORY

  ; Code: je .L_4065a5	 RIP: 4064f9	 Bytes: 6
  %loadMem_4064f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064f9 = call %struct.Memory* @routine_je_.L_4065a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064f9, i8* %BRANCH_TAKEN, i64 172, i64 6, i64 6)
  store %struct.Memory* %call_4064f9, %struct.Memory** %MEMORY

  %loadBr_4064f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4064f9 = icmp eq i8 %loadBr_4064f9, 1
  br i1 %cmpBr_4064f9, label %block_.L_4065a5, label %block_4064ff

block_4064ff:
  ; Code: movq $0xb4bd20, %rax	 RIP: 4064ff	 Bytes: 10
  %loadMem_4064ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4064ff = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4064ff)
  store %struct.Memory* %call_4064ff, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 406509	 Bytes: 8
  %loadMem_406509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406509 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406509)
  store %struct.Memory* %call_406509, %struct.Memory** %MEMORY

  ; Code: movslq -0x27e8(%rbp), %rdx	 RIP: 406511	 Bytes: 7
  %loadMem_406511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406511 = call %struct.Memory* @routine_movslq_MINUS0x27e8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406511)
  store %struct.Memory* %call_406511, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 406518	 Bytes: 4
  %loadMem_406518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406518 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406518)
  store %struct.Memory* %call_406518, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40651c	 Bytes: 3
  %loadMem_40651c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40651c = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40651c)
  store %struct.Memory* %call_40651c, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 40651f	 Bytes: 4
  %loadMem_40651f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40651f = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40651f)
  store %struct.Memory* %call_40651f, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406523	 Bytes: 4
  %loadMem_406523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406523 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406523)
  store %struct.Memory* %call_406523, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 406527	 Bytes: 3
  %loadMem_406527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406527 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406527)
  store %struct.Memory* %call_406527, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, 0x3c(%rcx)	 RIP: 40652a	 Bytes: 4
  %loadMem_40652a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40652a = call %struct.Memory* @routine_cmpl__0x9__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40652a)
  store %struct.Memory* %call_40652a, %struct.Memory** %MEMORY

  ; Code: je .L_406587	 RIP: 40652e	 Bytes: 6
  %loadMem_40652e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40652e = call %struct.Memory* @routine_je_.L_406587(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40652e, i8* %BRANCH_TAKEN, i64 89, i64 6, i64 6)
  store %struct.Memory* %call_40652e, %struct.Memory** %MEMORY

  %loadBr_40652e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40652e = icmp eq i8 %loadBr_40652e, 1
  br i1 %cmpBr_40652e, label %block_.L_406587, label %block_406534

block_406534:
  ; Code: movq $0xb4bd20, %rax	 RIP: 406534	 Bytes: 10
  %loadMem_406534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406534 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406534)
  store %struct.Memory* %call_406534, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 40653e	 Bytes: 8
  %loadMem_40653e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40653e = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40653e)
  store %struct.Memory* %call_40653e, %struct.Memory** %MEMORY

  ; Code: movslq -0x27e8(%rbp), %rdx	 RIP: 406546	 Bytes: 7
  %loadMem_406546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406546 = call %struct.Memory* @routine_movslq_MINUS0x27e8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406546)
  store %struct.Memory* %call_406546, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 40654d	 Bytes: 4
  %loadMem_40654d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40654d = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40654d)
  store %struct.Memory* %call_40654d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 406551	 Bytes: 3
  %loadMem_406551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406551 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406551)
  store %struct.Memory* %call_406551, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 406554	 Bytes: 4
  %loadMem_406554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406554 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406554)
  store %struct.Memory* %call_406554, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406558	 Bytes: 4
  %loadMem_406558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406558 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406558)
  store %struct.Memory* %call_406558, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 40655c	 Bytes: 3
  %loadMem_40655c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40655c = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40655c)
  store %struct.Memory* %call_40655c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x8, 0x3c(%rcx)	 RIP: 40655f	 Bytes: 4
  %loadMem_40655f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40655f = call %struct.Memory* @routine_cmpl__0x8__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40655f)
  store %struct.Memory* %call_40655f, %struct.Memory** %MEMORY

  ; Code: je .L_406587	 RIP: 406563	 Bytes: 6
  %loadMem_406563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406563 = call %struct.Memory* @routine_je_.L_406587(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406563, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_406563, %struct.Memory** %MEMORY

  %loadBr_406563 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406563 = icmp eq i8 %loadBr_406563, 1
  br i1 %cmpBr_406563, label %block_.L_406587, label %block_406569

block_406569:
  ; Code: xorl %eax, %eax	 RIP: 406569	 Bytes: 2
  %loadMem_406569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406569 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406569)
  store %struct.Memory* %call_406569, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 40656b	 Bytes: 2
  %loadMem_40656b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40656b = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40656b)
  store %struct.Memory* %call_40656b, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 40656d	 Bytes: 6
  %loadMem_40656d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40656d = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40656d)
  store %struct.Memory* %call_40656d, %struct.Memory** %MEMORY

  ; Code: movl -0x27e8(%rbp), %esi	 RIP: 406573	 Bytes: 6
  %loadMem_406573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406573 = call %struct.Memory* @routine_movl_MINUS0x27e8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406573)
  store %struct.Memory* %call_406573, %struct.Memory** %MEMORY

  ; Code: callq .owl_does_defend	 RIP: 406579	 Bytes: 5
  %loadMem1_406579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406579 = call %struct.Memory* @routine_callq_.owl_does_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406579, i64 286279, i64 5, i64 5)
  store %struct.Memory* %call1_406579, %struct.Memory** %MEMORY

  %loadMem2_406579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406579 = load i64, i64* %3
  %call2_406579 = call %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* %0, i64  %loadPC_406579, %struct.Memory* %loadMem2_406579)
  store %struct.Memory* %call2_406579, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, %eax	 RIP: 40657e	 Bytes: 3
  %loadMem_40657e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40657e = call %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40657e)
  store %struct.Memory* %call_40657e, %struct.Memory** %MEMORY

  ; Code: jne .L_4065a5	 RIP: 406581	 Bytes: 6
  %loadMem_406581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406581 = call %struct.Memory* @routine_jne_.L_4065a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406581, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_406581, %struct.Memory** %MEMORY

  %loadBr_406581 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406581 = icmp eq i8 %loadBr_406581, 1
  br i1 %cmpBr_406581, label %block_.L_4065a5, label %block_.L_406587

  ; Code: .L_406587:	 RIP: 406587	 Bytes: 0
block_.L_406587:

  ; Code: xorl %eax, %eax	 RIP: 406587	 Bytes: 2
  %loadMem_406587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406587 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406587)
  store %struct.Memory* %call_406587, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 406589	 Bytes: 2
  %loadMem_406589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406589 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406589)
  store %struct.Memory* %call_406589, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 40658b	 Bytes: 6
  %loadMem_40658b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40658b = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40658b)
  store %struct.Memory* %call_40658b, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 406591	 Bytes: 3
  %loadMem_406591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406591 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406591)
  store %struct.Memory* %call_406591, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 406594	 Bytes: 3
  %loadMem_406594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406594 = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406594)
  store %struct.Memory* %call_406594, %struct.Memory** %MEMORY

  ; Code: callq .confirm_safety	 RIP: 406597	 Bytes: 5
  %loadMem1_406597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406597 = call %struct.Memory* @routine_callq_.confirm_safety(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406597, i64 470841, i64 5, i64 5)
  store %struct.Memory* %call1_406597, %struct.Memory** %MEMORY

  %loadMem2_406597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406597 = load i64, i64* %3
  %call2_406597 = call %struct.Memory* @sub_4794d0.confirm_safety(%struct.State* %0, i64  %loadPC_406597, %struct.Memory* %loadMem2_406597)
  store %struct.Memory* %call2_406597, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40659c	 Bytes: 3
  %loadMem_40659c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40659c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40659c)
  store %struct.Memory* %call_40659c, %struct.Memory** %MEMORY

  ; Code: jne .L_4065bc	 RIP: 40659f	 Bytes: 6
  %loadMem_40659f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40659f = call %struct.Memory* @routine_jne_.L_4065bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40659f, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_40659f, %struct.Memory** %MEMORY

  %loadBr_40659f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40659f = icmp eq i8 %loadBr_40659f, 1
  br i1 %cmpBr_40659f, label %block_.L_4065bc, label %block_.L_4065a5

  ; Code: .L_4065a5:	 RIP: 4065a5	 Bytes: 0
block_.L_4065a5:

  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 4065a5	 Bytes: 7
  %loadMem_4065a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065a5 = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065a5)
  store %struct.Memory* %call_4065a5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xcb0(%rbp,%rax,4)	 RIP: 4065ac	 Bytes: 11
  %loadMem_4065ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065ac = call %struct.Memory* @routine_movl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065ac)
  store %struct.Memory* %call_4065ac, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406943	 RIP: 4065b7	 Bytes: 5
  %loadMem_4065b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065b7 = call %struct.Memory* @routine_jmpq_.L_406943(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065b7, i64 908, i64 5)
  store %struct.Memory* %call_4065b7, %struct.Memory** %MEMORY

  br label %block_.L_406943

  ; Code: .L_4065bc:	 RIP: 4065bc	 Bytes: 0
block_.L_4065bc:

  ; Code: movl $0x5, %edx	 RIP: 4065bc	 Bytes: 5
  %loadMem_4065bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065bc = call %struct.Memory* @routine_movl__0x5___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065bc)
  store %struct.Memory* %call_4065bc, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 4065c1	 Bytes: 2
  %loadMem_4065c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065c1 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065c1)
  store %struct.Memory* %call_4065c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4065c3	 Bytes: 2
  %loadMem_4065c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065c3 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065c3)
  store %struct.Memory* %call_4065c3, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 4065c5	 Bytes: 6
  %loadMem_4065c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065c5 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065c5)
  store %struct.Memory* %call_4065c5, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 4065cb	 Bytes: 3
  %loadMem_4065cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065cb = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065cb)
  store %struct.Memory* %call_4065cb, %struct.Memory** %MEMORY

  ; Code: callq .approxlib	 RIP: 4065ce	 Bytes: 5
  %loadMem1_4065ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4065ce = call %struct.Memory* @routine_callq_.approxlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4065ce, i64 45026, i64 5, i64 5)
  store %struct.Memory* %call1_4065ce, %struct.Memory** %MEMORY

  %loadMem2_4065ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4065ce = load i64, i64* %3
  %call2_4065ce = call %struct.Memory* @sub_4115b0.approxlib(%struct.State* %0, i64  %loadPC_4065ce, %struct.Memory* %loadMem2_4065ce)
  store %struct.Memory* %call2_4065ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27ec(%rbp)	 RIP: 4065d3	 Bytes: 6
  %loadMem_4065d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065d3 = call %struct.Memory* @routine_movl__eax__MINUS0x27ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065d3)
  store %struct.Memory* %call_4065d3, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x27f0(%rbp)	 RIP: 4065d9	 Bytes: 10
  %loadMem_4065d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065d9 = call %struct.Memory* @routine_movl__0x1__MINUS0x27f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065d9)
  store %struct.Memory* %call_4065d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, -0x27ec(%rbp)	 RIP: 4065e3	 Bytes: 7
  %loadMem_4065e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065e3 = call %struct.Memory* @routine_cmpl__0x5__MINUS0x27ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065e3)
  store %struct.Memory* %call_4065e3, %struct.Memory** %MEMORY

  ; Code: jge .L_4068cb	 RIP: 4065ea	 Bytes: 6
  %loadMem_4065ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065ea = call %struct.Memory* @routine_jge_.L_4068cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065ea, i8* %BRANCH_TAKEN, i64 737, i64 6, i64 6)
  store %struct.Memory* %call_4065ea, %struct.Memory** %MEMORY

  %loadBr_4065ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4065ea = icmp eq i8 %loadBr_4065ea, 1
  br i1 %cmpBr_4065ea, label %block_.L_4068cb, label %block_4065f0

block_4065f0:
  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 4065f0	 Bytes: 7
  %loadMem_4065f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065f0 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065f0)
  store %struct.Memory* %call_4065f0, %struct.Memory** %MEMORY

  ; Code: .L_4065f7:	 RIP: 4065f7	 Bytes: 0
  br label %block_.L_4065f7
block_.L_4065f7:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 4065f7	 Bytes: 4
  %loadMem_4065f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065f7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065f7)
  store %struct.Memory* %call_4065f7, %struct.Memory** %MEMORY

  ; Code: jge .L_406662	 RIP: 4065fb	 Bytes: 6
  %loadMem_4065fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4065fb = call %struct.Memory* @routine_jge_.L_406662(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4065fb, i8* %BRANCH_TAKEN, i64 103, i64 6, i64 6)
  store %struct.Memory* %call_4065fb, %struct.Memory** %MEMORY

  %loadBr_4065fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4065fb = icmp eq i8 %loadBr_4065fb, 1
  br i1 %cmpBr_4065fb, label %block_.L_406662, label %block_406601

block_406601:
  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 406601	 Bytes: 6
  %loadMem_406601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406601 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406601)
  store %struct.Memory* %call_406601, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 406607	 Bytes: 4
  %loadMem_406607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406607 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406607)
  store %struct.Memory* %call_406607, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 40660b	 Bytes: 7
  %loadMem_40660b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40660b = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40660b)
  store %struct.Memory* %call_40660b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 406612	 Bytes: 3
  %loadMem_406612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406612 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406612)
  store %struct.Memory* %call_406612, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 406615	 Bytes: 8
  %loadMem_406615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406615 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406615)
  store %struct.Memory* %call_406615, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %eax	 RIP: 40661d	 Bytes: 3
  %loadMem_40661d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40661d = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40661d)
  store %struct.Memory* %call_40661d, %struct.Memory** %MEMORY

  ; Code: jne .L_40664f	 RIP: 406620	 Bytes: 6
  %loadMem_406620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406620 = call %struct.Memory* @routine_jne_.L_40664f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406620, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_406620, %struct.Memory** %MEMORY

  %loadBr_406620 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406620 = icmp eq i8 %loadBr_406620, 1
  br i1 %cmpBr_406620, label %block_.L_40664f, label %block_406626

block_406626:
  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 406626	 Bytes: 6
  %loadMem_406626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406626 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406626)
  store %struct.Memory* %call_406626, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 40662c	 Bytes: 4
  %loadMem_40662c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40662c = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40662c)
  store %struct.Memory* %call_40662c, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 406630	 Bytes: 7
  %loadMem_406630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406630 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406630)
  store %struct.Memory* %call_406630, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 406637	 Bytes: 2
  %loadMem_406637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406637 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406637)
  store %struct.Memory* %call_406637, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 406639	 Bytes: 5
  %loadMem1_406639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406639 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406639, i64 37191, i64 5, i64 5)
  store %struct.Memory* %call1_406639, %struct.Memory** %MEMORY

  %loadMem2_406639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406639 = load i64, i64* %3
  %call2_406639 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_406639, %struct.Memory* %loadMem2_406639)
  store %struct.Memory* %call2_406639, %struct.Memory** %MEMORY

  ; Code: cmpl -0x27ec(%rbp), %eax	 RIP: 40663e	 Bytes: 6
  %loadMem_40663e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40663e = call %struct.Memory* @routine_cmpl_MINUS0x27ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40663e)
  store %struct.Memory* %call_40663e, %struct.Memory** %MEMORY

  ; Code: jle .L_40664f	 RIP: 406644	 Bytes: 6
  %loadMem_406644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406644 = call %struct.Memory* @routine_jle_.L_40664f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406644, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406644, %struct.Memory** %MEMORY

  %loadBr_406644 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406644 = icmp eq i8 %loadBr_406644, 1
  br i1 %cmpBr_406644, label %block_.L_40664f, label %block_40664a

block_40664a:
  ; Code: jmpq .L_406662	 RIP: 40664a	 Bytes: 5
  %loadMem_40664a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40664a = call %struct.Memory* @routine_jmpq_.L_406662(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40664a, i64 24, i64 5)
  store %struct.Memory* %call_40664a, %struct.Memory** %MEMORY

  br label %block_.L_406662

  ; Code: .L_40664f:	 RIP: 40664f	 Bytes: 0
block_.L_40664f:

  ; Code: jmpq .L_406654	 RIP: 40664f	 Bytes: 5
  %loadMem_40664f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40664f = call %struct.Memory* @routine_jmpq_.L_406654(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40664f, i64 5, i64 5)
  store %struct.Memory* %call_40664f, %struct.Memory** %MEMORY

  br label %block_.L_406654

  ; Code: .L_406654:	 RIP: 406654	 Bytes: 0
block_.L_406654:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 406654	 Bytes: 3
  %loadMem_406654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406654 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406654)
  store %struct.Memory* %call_406654, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406657	 Bytes: 3
  %loadMem_406657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406657 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406657)
  store %struct.Memory* %call_406657, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 40665a	 Bytes: 3
  %loadMem_40665a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40665a = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40665a)
  store %struct.Memory* %call_40665a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4065f7	 RIP: 40665d	 Bytes: 5
  %loadMem_40665d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40665d = call %struct.Memory* @routine_jmpq_.L_4065f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40665d, i64 -102, i64 5)
  store %struct.Memory* %call_40665d, %struct.Memory** %MEMORY

  br label %block_.L_4065f7

  ; Code: .L_406662:	 RIP: 406662	 Bytes: 0
block_.L_406662:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 406662	 Bytes: 4
  %loadMem_406662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406662 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406662)
  store %struct.Memory* %call_406662, %struct.Memory** %MEMORY

  ; Code: jge .L_4068c6	 RIP: 406666	 Bytes: 6
  %loadMem_406666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406666 = call %struct.Memory* @routine_jge_.L_4068c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406666, i8* %BRANCH_TAKEN, i64 608, i64 6, i64 6)
  store %struct.Memory* %call_406666, %struct.Memory** %MEMORY

  %loadBr_406666 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406666 = icmp eq i8 %loadBr_406666, 1
  br i1 %cmpBr_406666, label %block_.L_4068c6, label %block_40666c

block_40666c:
  ; Code: movq $0x579e48, %rdx	 RIP: 40666c	 Bytes: 10
  %loadMem_40666c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40666c = call %struct.Memory* @routine_movq__0x579e48___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40666c)
  store %struct.Memory* %call_40666c, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 406676	 Bytes: 2
  %loadMem_406676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406676 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406676)
  store %struct.Memory* %call_406676, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406678	 Bytes: 6
  %loadMem_406678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406678 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406678)
  store %struct.Memory* %call_406678, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 40667e	 Bytes: 3
  %loadMem_40667e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40667e = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40667e)
  store %struct.Memory* %call_40667e, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %ecx	 RIP: 406681	 Bytes: 6
  %loadMem_406681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406681 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406681)
  store %struct.Memory* %call_406681, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %r8	 RIP: 406687	 Bytes: 4
  %loadMem_406687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406687 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406687)
  store %struct.Memory* %call_406687, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%r8,4), %ecx	 RIP: 40668b	 Bytes: 8
  %loadMem_40668b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40668b = call %struct.Memory* @routine_addl_0x7ae1b0___r8_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40668b)
  store %struct.Memory* %call_40668b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 406693	 Bytes: 3
  %loadMem_406693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406693 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406693)
  store %struct.Memory* %call_406693, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r9d	 RIP: 406696	 Bytes: 3
  %loadMem_406696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406696 = call %struct.Memory* @routine_movl__eax___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406696)
  store %struct.Memory* %call_406696, %struct.Memory** %MEMORY

  ; Code: callq .trymove	 RIP: 406699	 Bytes: 5
  %loadMem1_406699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406699 = call %struct.Memory* @routine_callq_.trymove(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406699, i64 10135, i64 5, i64 5)
  store %struct.Memory* %call1_406699, %struct.Memory** %MEMORY

  %loadMem2_406699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406699 = load i64, i64* %3
  %call2_406699 = call %struct.Memory* @sub_408e30.trymove(%struct.State* %0, i64  %loadPC_406699, %struct.Memory* %loadMem2_406699)
  store %struct.Memory* %call2_406699, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40669e	 Bytes: 3
  %loadMem_40669e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40669e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40669e)
  store %struct.Memory* %call_40669e, %struct.Memory** %MEMORY

  ; Code: je .L_4068c1	 RIP: 4066a1	 Bytes: 6
  %loadMem_4066a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066a1 = call %struct.Memory* @routine_je_.L_4068c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066a1, i8* %BRANCH_TAKEN, i64 544, i64 6, i64 6)
  store %struct.Memory* %call_4066a1, %struct.Memory** %MEMORY

  %loadBr_4066a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4066a1 = icmp eq i8 %loadBr_4066a1, 1
  br i1 %cmpBr_4066a1, label %block_.L_4068c1, label %block_4066a7

block_4066a7:
  ; Code: leaq -0x2a70(%rbp), %rsi	 RIP: 4066a7	 Bytes: 7
  %loadMem_4066a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066a7 = call %struct.Memory* @routine_leaq_MINUS0x2a70__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066a7)
  store %struct.Memory* %call_4066a7, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 4066ae	 Bytes: 6
  %loadMem_4066ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066ae = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066ae)
  store %struct.Memory* %call_4066ae, %struct.Memory** %MEMORY

  ; Code: callq .chainlinks	 RIP: 4066b4	 Bytes: 5
  %loadMem1_4066b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4066b4 = call %struct.Memory* @routine_callq_.chainlinks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4066b4, i64 54348, i64 5, i64 5)
  store %struct.Memory* %call1_4066b4, %struct.Memory** %MEMORY

  %loadMem2_4066b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4066b4 = load i64, i64* %3
  %call2_4066b4 = call %struct.Memory* @sub_413b00.chainlinks(%struct.State* %0, i64  %loadPC_4066b4, %struct.Memory* %loadMem2_4066b4)
  store %struct.Memory* %call2_4066b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a74(%rbp)	 RIP: 4066b9	 Bytes: 6
  %loadMem_4066b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066b9 = call %struct.Memory* @routine_movl__eax__MINUS0x2a74__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066b9)
  store %struct.Memory* %call_4066b9, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2a78(%rbp)	 RIP: 4066bf	 Bytes: 10
  %loadMem_4066bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066bf = call %struct.Memory* @routine_movl__0x0__MINUS0x2a78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066bf)
  store %struct.Memory* %call_4066bf, %struct.Memory** %MEMORY

  ; Code: .L_4066c9:	 RIP: 4066c9	 Bytes: 0
  br label %block_.L_4066c9
block_.L_4066c9:

  ; Code: movl -0x2a78(%rbp), %eax	 RIP: 4066c9	 Bytes: 6
  %loadMem_4066c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066c9 = call %struct.Memory* @routine_movl_MINUS0x2a78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066c9)
  store %struct.Memory* %call_4066c9, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2a74(%rbp), %eax	 RIP: 4066cf	 Bytes: 6
  %loadMem_4066cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066cf = call %struct.Memory* @routine_cmpl_MINUS0x2a74__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066cf)
  store %struct.Memory* %call_4066cf, %struct.Memory** %MEMORY

  ; Code: jge .L_4067b6	 RIP: 4066d5	 Bytes: 6
  %loadMem_4066d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066d5 = call %struct.Memory* @routine_jge_.L_4067b6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066d5, i8* %BRANCH_TAKEN, i64 225, i64 6, i64 6)
  store %struct.Memory* %call_4066d5, %struct.Memory** %MEMORY

  %loadBr_4066d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4066d5 = icmp eq i8 %loadBr_4066d5, 1
  br i1 %cmpBr_4066d5, label %block_.L_4067b6, label %block_4066db

block_4066db:
  ; Code: movq $0xb0eff0, %rax	 RIP: 4066db	 Bytes: 10
  %loadMem_4066db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066db = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066db)
  store %struct.Memory* %call_4066db, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rcx	 RIP: 4066e5	 Bytes: 7
  %loadMem_4066e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066e5 = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066e5)
  store %struct.Memory* %call_4066e5, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a70(%rbp,%rcx,4), %rcx	 RIP: 4066ec	 Bytes: 8
  %loadMem_4066ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066ec = call %struct.Memory* @routine_movslq_MINUS0x2a70__rbp__rcx_4____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066ec)
  store %struct.Memory* %call_4066ec, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 4066f4	 Bytes: 7
  %loadMem_4066f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066f4 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066f4)
  store %struct.Memory* %call_4066f4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4066fb	 Bytes: 3
  %loadMem_4066fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066fb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066fb)
  store %struct.Memory* %call_4066fb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x64(%rax)	 RIP: 4066fe	 Bytes: 4
  %loadMem_4066fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4066fe = call %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4066fe)
  store %struct.Memory* %call_4066fe, %struct.Memory** %MEMORY

  ; Code: je .L_40679d	 RIP: 406702	 Bytes: 6
  %loadMem_406702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406702 = call %struct.Memory* @routine_je_.L_40679d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406702, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_406702, %struct.Memory** %MEMORY

  %loadBr_406702 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406702 = icmp eq i8 %loadBr_406702, 1
  br i1 %cmpBr_406702, label %block_.L_40679d, label %block_406708

block_406708:
  ; Code: xorl %eax, %eax	 RIP: 406708	 Bytes: 2
  %loadMem_406708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406708 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406708)
  store %struct.Memory* %call_406708, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 40670a	 Bytes: 2
  %loadMem_40670a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40670a = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40670a)
  store %struct.Memory* %call_40670a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rcx	 RIP: 40670c	 Bytes: 7
  %loadMem_40670c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40670c = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40670c)
  store %struct.Memory* %call_40670c, %struct.Memory** %MEMORY

  ; Code: movl -0x2a70(%rbp,%rcx,4), %edi	 RIP: 406713	 Bytes: 7
  %loadMem_406713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406713 = call %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406713)
  store %struct.Memory* %call_406713, %struct.Memory** %MEMORY

  ; Code: callq .find_defense	 RIP: 40671a	 Bytes: 5
  %loadMem1_40671a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40671a = call %struct.Memory* @routine_callq_.find_defense(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40671a, i64 409702, i64 5, i64 5)
  store %struct.Memory* %call1_40671a, %struct.Memory** %MEMORY

  %loadMem2_40671a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40671a = load i64, i64* %3
  %call2_40671a = call %struct.Memory* @sub_46a780.find_defense(%struct.State* %0, i64  %loadPC_40671a, %struct.Memory* %loadMem2_40671a)
  store %struct.Memory* %call2_40671a, %struct.Memory** %MEMORY

  ; Code: movq $0xb0eff0, %rcx	 RIP: 40671f	 Bytes: 10
  %loadMem_40671f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40671f = call %struct.Memory* @routine_movq__0xb0eff0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40671f)
  store %struct.Memory* %call_40671f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rsi	 RIP: 406729	 Bytes: 7
  %loadMem_406729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406729 = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406729)
  store %struct.Memory* %call_406729, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a70(%rbp,%rsi,4), %rsi	 RIP: 406730	 Bytes: 8
  %loadMem_406730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406730 = call %struct.Memory* @routine_movslq_MINUS0x2a70__rbp__rsi_4____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406730)
  store %struct.Memory* %call_406730, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rsi, %rsi	 RIP: 406738	 Bytes: 7
  %loadMem_406738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406738 = call %struct.Memory* @routine_imulq__0x17c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406738)
  store %struct.Memory* %call_406738, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40673f	 Bytes: 3
  %loadMem_40673f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40673f = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40673f)
  store %struct.Memory* %call_40673f, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb4(%rcx), %eax	 RIP: 406742	 Bytes: 6
  %loadMem_406742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406742 = call %struct.Memory* @routine_cmpl_0xb4__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406742)
  store %struct.Memory* %call_406742, %struct.Memory** %MEMORY

  ; Code: jle .L_40679d	 RIP: 406748	 Bytes: 6
  %loadMem_406748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406748 = call %struct.Memory* @routine_jle_.L_40679d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406748, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_406748, %struct.Memory** %MEMORY

  %loadBr_406748 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406748 = icmp eq i8 %loadBr_406748, 1
  br i1 %cmpBr_406748, label %block_.L_40679d, label %block_40674e

block_40674e:
  ; Code: movl 0xab0f24, %eax	 RIP: 40674e	 Bytes: 7
  %loadMem_40674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40674e = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40674e)
  store %struct.Memory* %call_40674e, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 406755	 Bytes: 5
  %loadMem_406755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406755 = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406755)
  store %struct.Memory* %call_406755, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40675a	 Bytes: 3
  %loadMem_40675a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40675a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40675a)
  store %struct.Memory* %call_40675a, %struct.Memory** %MEMORY

  ; Code: jne .L_406768	 RIP: 40675d	 Bytes: 6
  %loadMem_40675d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40675d = call %struct.Memory* @routine_jne_.L_406768(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40675d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40675d, %struct.Memory** %MEMORY

  %loadBr_40675d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40675d = icmp eq i8 %loadBr_40675d, 1
  br i1 %cmpBr_40675d, label %block_.L_406768, label %block_406763

block_406763:
  ; Code: jmpq .L_406793	 RIP: 406763	 Bytes: 5
  %loadMem_406763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406763 = call %struct.Memory* @routine_jmpq_.L_406793(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406763, i64 48, i64 5)
  store %struct.Memory* %call_406763, %struct.Memory** %MEMORY

  br label %block_.L_406793

  ; Code: .L_406768:	 RIP: 406768	 Bytes: 0
block_.L_406768:

  ; Code: movq $0x579e54, %rdi	 RIP: 406768	 Bytes: 10
  %loadMem_406768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406768 = call %struct.Memory* @routine_movq__0x579e54___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406768)
  store %struct.Memory* %call_406768, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rax	 RIP: 406772	 Bytes: 7
  %loadMem_406772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406772 = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406772)
  store %struct.Memory* %call_406772, %struct.Memory** %MEMORY

  ; Code: movl -0x2a70(%rbp,%rax,4), %esi	 RIP: 406779	 Bytes: 7
  %loadMem_406779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406779 = call %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rax_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406779)
  store %struct.Memory* %call_406779, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edx	 RIP: 406780	 Bytes: 6
  %loadMem_406780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406780 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406780)
  store %struct.Memory* %call_406780, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 406786	 Bytes: 2
  %loadMem_406786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406786 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406786)
  store %struct.Memory* %call_406786, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 406788	 Bytes: 5
  %loadMem1_406788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406788 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406788, i64 308776, i64 5, i64 5)
  store %struct.Memory* %call1_406788, %struct.Memory** %MEMORY

  %loadMem2_406788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406788 = load i64, i64* %3
  %call2_406788 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_406788, %struct.Memory* %loadMem2_406788)
  store %struct.Memory* %call2_406788, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2aec(%rbp)	 RIP: 40678d	 Bytes: 6
  %loadMem_40678d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40678d = call %struct.Memory* @routine_movl__eax__MINUS0x2aec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40678d)
  store %struct.Memory* %call_40678d, %struct.Memory** %MEMORY

  ; Code: .L_406793:	 RIP: 406793	 Bytes: 0
  br label %block_.L_406793
block_.L_406793:

  ; Code: movl $0x0, -0x27f0(%rbp)	 RIP: 406793	 Bytes: 10
  %loadMem_406793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406793 = call %struct.Memory* @routine_movl__0x0__MINUS0x27f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406793)
  store %struct.Memory* %call_406793, %struct.Memory** %MEMORY

  ; Code: .L_40679d:	 RIP: 40679d	 Bytes: 0
  br label %block_.L_40679d
block_.L_40679d:

  ; Code: jmpq .L_4067a2	 RIP: 40679d	 Bytes: 5
  %loadMem_40679d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40679d = call %struct.Memory* @routine_jmpq_.L_4067a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40679d, i64 5, i64 5)
  store %struct.Memory* %call_40679d, %struct.Memory** %MEMORY

  br label %block_.L_4067a2

  ; Code: .L_4067a2:	 RIP: 4067a2	 Bytes: 0
block_.L_4067a2:

  ; Code: movl -0x2a78(%rbp), %eax	 RIP: 4067a2	 Bytes: 6
  %loadMem_4067a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067a2 = call %struct.Memory* @routine_movl_MINUS0x2a78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067a2)
  store %struct.Memory* %call_4067a2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4067a8	 Bytes: 3
  %loadMem_4067a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067a8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067a8)
  store %struct.Memory* %call_4067a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a78(%rbp)	 RIP: 4067ab	 Bytes: 6
  %loadMem_4067ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067ab = call %struct.Memory* @routine_movl__eax__MINUS0x2a78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067ab)
  store %struct.Memory* %call_4067ab, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4066c9	 RIP: 4067b1	 Bytes: 5
  %loadMem_4067b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067b1 = call %struct.Memory* @routine_jmpq_.L_4066c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067b1, i64 -232, i64 5)
  store %struct.Memory* %call_4067b1, %struct.Memory** %MEMORY

  br label %block_.L_4066c9

  ; Code: .L_4067b6:	 RIP: 4067b6	 Bytes: 0
block_.L_4067b6:

  ; Code: callq .popgo	 RIP: 4067b6	 Bytes: 5
  %loadMem1_4067b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4067b6 = call %struct.Memory* @routine_callq_.popgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4067b6, i64 30122, i64 5, i64 5)
  store %struct.Memory* %call1_4067b6, %struct.Memory** %MEMORY

  %loadMem2_4067b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4067b6 = load i64, i64* %3
  %call2_4067b6 = call %struct.Memory* @sub_40dd60.popgo(%struct.State* %0, i64  %loadPC_4067b6, %struct.Memory* %loadMem2_4067b6)
  store %struct.Memory* %call2_4067b6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2a78(%rbp)	 RIP: 4067bb	 Bytes: 10
  %loadMem_4067bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067bb = call %struct.Memory* @routine_movl__0x0__MINUS0x2a78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067bb)
  store %struct.Memory* %call_4067bb, %struct.Memory** %MEMORY

  ; Code: .L_4067c5:	 RIP: 4067c5	 Bytes: 0
  br label %block_.L_4067c5
block_.L_4067c5:

  ; Code: xorl %eax, %eax	 RIP: 4067c5	 Bytes: 2
  %loadMem_4067c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067c5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067c5)
  store %struct.Memory* %call_4067c5, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4067c7	 Bytes: 2
  %loadMem_4067c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067c7 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067c7)
  store %struct.Memory* %call_4067c7, %struct.Memory** %MEMORY

  ; Code: movl -0x2a78(%rbp), %eax	 RIP: 4067c9	 Bytes: 6
  %loadMem_4067c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067c9 = call %struct.Memory* @routine_movl_MINUS0x2a78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067c9)
  store %struct.Memory* %call_4067c9, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2a74(%rbp), %eax	 RIP: 4067cf	 Bytes: 6
  %loadMem_4067cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067cf = call %struct.Memory* @routine_cmpl_MINUS0x2a74__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067cf)
  store %struct.Memory* %call_4067cf, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x2aed(%rbp)	 RIP: 4067d5	 Bytes: 6
  %loadMem_4067d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067d5 = call %struct.Memory* @routine_movb__cl__MINUS0x2aed__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067d5)
  store %struct.Memory* %call_4067d5, %struct.Memory** %MEMORY

  ; Code: jge .L_4067f1	 RIP: 4067db	 Bytes: 6
  %loadMem_4067db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067db = call %struct.Memory* @routine_jge_.L_4067f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067db, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_4067db, %struct.Memory** %MEMORY

  %loadBr_4067db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4067db = icmp eq i8 %loadBr_4067db, 1
  br i1 %cmpBr_4067db, label %block_.L_4067f1, label %block_4067e1

block_4067e1:
  ; Code: cmpl $0x0, -0x27f0(%rbp)	 RIP: 4067e1	 Bytes: 7
  %loadMem_4067e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067e1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067e1)
  store %struct.Memory* %call_4067e1, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 4067e8	 Bytes: 3
  %loadMem_4067e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067e8 = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067e8)
  store %struct.Memory* %call_4067e8, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x2aed(%rbp)	 RIP: 4067eb	 Bytes: 6
  %loadMem_4067eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067eb = call %struct.Memory* @routine_movb__al__MINUS0x2aed__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067eb)
  store %struct.Memory* %call_4067eb, %struct.Memory** %MEMORY

  ; Code: .L_4067f1:	 RIP: 4067f1	 Bytes: 0
  br label %block_.L_4067f1
block_.L_4067f1:

  ; Code: movb -0x2aed(%rbp), %al	 RIP: 4067f1	 Bytes: 6
  %loadMem_4067f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067f1 = call %struct.Memory* @routine_movb_MINUS0x2aed__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067f1)
  store %struct.Memory* %call_4067f1, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 4067f7	 Bytes: 2
  %loadMem_4067f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067f7 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067f7)
  store %struct.Memory* %call_4067f7, %struct.Memory** %MEMORY

  ; Code: jne .L_406804	 RIP: 4067f9	 Bytes: 6
  %loadMem_4067f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067f9 = call %struct.Memory* @routine_jne_.L_406804(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067f9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4067f9, %struct.Memory** %MEMORY

  %loadBr_4067f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4067f9 = icmp eq i8 %loadBr_4067f9, 1
  br i1 %cmpBr_4067f9, label %block_.L_406804, label %block_4067ff

block_4067ff:
  ; Code: jmpq .L_4068bc	 RIP: 4067ff	 Bytes: 5
  %loadMem_4067ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4067ff = call %struct.Memory* @routine_jmpq_.L_4068bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4067ff, i64 189, i64 5)
  store %struct.Memory* %call_4067ff, %struct.Memory** %MEMORY

  br label %block_.L_4068bc

  ; Code: .L_406804:	 RIP: 406804	 Bytes: 0
block_.L_406804:

  ; Code: movq $0xb4bd20, %rax	 RIP: 406804	 Bytes: 10
  %loadMem_406804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406804 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406804)
  store %struct.Memory* %call_406804, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rcx	 RIP: 40680e	 Bytes: 7
  %loadMem_40680e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40680e = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40680e)
  store %struct.Memory* %call_40680e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a70(%rbp,%rcx,4), %rcx	 RIP: 406815	 Bytes: 8
  %loadMem_406815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406815 = call %struct.Memory* @routine_movslq_MINUS0x2a70__rbp__rcx_4____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406815)
  store %struct.Memory* %call_406815, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 40681d	 Bytes: 4
  %loadMem_40681d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40681d = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40681d)
  store %struct.Memory* %call_40681d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406821	 Bytes: 3
  %loadMem_406821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406821 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406821)
  store %struct.Memory* %call_406821, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x40(%rax)	 RIP: 406824	 Bytes: 4
  %loadMem_406824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406824 = call %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406824)
  store %struct.Memory* %call_406824, %struct.Memory** %MEMORY

  ; Code: jne .L_4068a3	 RIP: 406828	 Bytes: 6
  %loadMem_406828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406828 = call %struct.Memory* @routine_jne_.L_4068a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406828, i8* %BRANCH_TAKEN, i64 123, i64 6, i64 6)
  store %struct.Memory* %call_406828, %struct.Memory** %MEMORY

  %loadBr_406828 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406828 = icmp eq i8 %loadBr_406828, 1
  br i1 %cmpBr_406828, label %block_.L_4068a3, label %block_40682e

block_40682e:
  ; Code: xorl %eax, %eax	 RIP: 40682e	 Bytes: 2
  %loadMem_40682e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40682e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40682e)
  store %struct.Memory* %call_40682e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 406830	 Bytes: 2
  %loadMem_406830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406830 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406830)
  store %struct.Memory* %call_406830, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406832	 Bytes: 6
  %loadMem_406832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406832 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406832)
  store %struct.Memory* %call_406832, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rcx	 RIP: 406838	 Bytes: 7
  %loadMem_406838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406838 = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406838)
  store %struct.Memory* %call_406838, %struct.Memory** %MEMORY

  ; Code: movl -0x2a70(%rbp,%rcx,4), %esi	 RIP: 40683f	 Bytes: 7
  %loadMem_40683f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40683f = call %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40683f)
  store %struct.Memory* %call_40683f, %struct.Memory** %MEMORY

  ; Code: callq .owl_does_attack	 RIP: 406846	 Bytes: 5
  %loadMem1_406846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406846 = call %struct.Memory* @routine_callq_.owl_does_attack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406846, i64 287466, i64 5, i64 5)
  store %struct.Memory* %call1_406846, %struct.Memory** %MEMORY

  %loadMem2_406846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406846 = load i64, i64* %3
  %call2_406846 = call %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* %0, i64  %loadPC_406846, %struct.Memory* %loadMem2_406846)
  store %struct.Memory* %call2_406846, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 40684b	 Bytes: 3
  %loadMem_40684b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40684b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40684b)
  store %struct.Memory* %call_40684b, %struct.Memory** %MEMORY

  ; Code: jne .L_4068a3	 RIP: 40684e	 Bytes: 6
  %loadMem_40684e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40684e = call %struct.Memory* @routine_jne_.L_4068a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40684e, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_40684e, %struct.Memory** %MEMORY

  %loadBr_40684e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40684e = icmp eq i8 %loadBr_40684e, 1
  br i1 %cmpBr_40684e, label %block_.L_4068a3, label %block_406854

block_406854:
  ; Code: movl 0xab0f24, %eax	 RIP: 406854	 Bytes: 7
  %loadMem_406854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406854 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406854)
  store %struct.Memory* %call_406854, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 40685b	 Bytes: 5
  %loadMem_40685b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40685b = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40685b)
  store %struct.Memory* %call_40685b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406860	 Bytes: 3
  %loadMem_406860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406860 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406860)
  store %struct.Memory* %call_406860, %struct.Memory** %MEMORY

  ; Code: jne .L_40686e	 RIP: 406863	 Bytes: 6
  %loadMem_406863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406863 = call %struct.Memory* @routine_jne_.L_40686e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406863, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406863, %struct.Memory** %MEMORY

  %loadBr_406863 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406863 = icmp eq i8 %loadBr_406863, 1
  br i1 %cmpBr_406863, label %block_.L_40686e, label %block_406869

block_406869:
  ; Code: jmpq .L_406899	 RIP: 406869	 Bytes: 5
  %loadMem_406869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406869 = call %struct.Memory* @routine_jmpq_.L_406899(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406869, i64 48, i64 5)
  store %struct.Memory* %call_406869, %struct.Memory** %MEMORY

  br label %block_.L_406899

  ; Code: .L_40686e:	 RIP: 40686e	 Bytes: 0
block_.L_40686e:

  ; Code: movq $0x579e85, %rdi	 RIP: 40686e	 Bytes: 10
  %loadMem_40686e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40686e = call %struct.Memory* @routine_movq__0x579e85___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40686e)
  store %struct.Memory* %call_40686e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a78(%rbp), %rax	 RIP: 406878	 Bytes: 7
  %loadMem_406878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406878 = call %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406878)
  store %struct.Memory* %call_406878, %struct.Memory** %MEMORY

  ; Code: movl -0x2a70(%rbp,%rax,4), %esi	 RIP: 40687f	 Bytes: 7
  %loadMem_40687f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40687f = call %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rax_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40687f)
  store %struct.Memory* %call_40687f, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edx	 RIP: 406886	 Bytes: 6
  %loadMem_406886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406886 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406886)
  store %struct.Memory* %call_406886, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 40688c	 Bytes: 2
  %loadMem_40688c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40688c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40688c)
  store %struct.Memory* %call_40688c, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 40688e	 Bytes: 5
  %loadMem1_40688e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40688e = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40688e, i64 308514, i64 5, i64 5)
  store %struct.Memory* %call1_40688e, %struct.Memory** %MEMORY

  %loadMem2_40688e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40688e = load i64, i64* %3
  %call2_40688e = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_40688e, %struct.Memory* %loadMem2_40688e)
  store %struct.Memory* %call2_40688e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2af4(%rbp)	 RIP: 406893	 Bytes: 6
  %loadMem_406893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406893 = call %struct.Memory* @routine_movl__eax__MINUS0x2af4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406893)
  store %struct.Memory* %call_406893, %struct.Memory** %MEMORY

  ; Code: .L_406899:	 RIP: 406899	 Bytes: 0
  br label %block_.L_406899
block_.L_406899:

  ; Code: movl $0x0, -0x27f0(%rbp)	 RIP: 406899	 Bytes: 10
  %loadMem_406899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406899 = call %struct.Memory* @routine_movl__0x0__MINUS0x27f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406899)
  store %struct.Memory* %call_406899, %struct.Memory** %MEMORY

  ; Code: .L_4068a3:	 RIP: 4068a3	 Bytes: 0
  br label %block_.L_4068a3
block_.L_4068a3:

  ; Code: jmpq .L_4068a8	 RIP: 4068a3	 Bytes: 5
  %loadMem_4068a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068a3 = call %struct.Memory* @routine_jmpq_.L_4068a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068a3, i64 5, i64 5)
  store %struct.Memory* %call_4068a3, %struct.Memory** %MEMORY

  br label %block_.L_4068a8

  ; Code: .L_4068a8:	 RIP: 4068a8	 Bytes: 0
block_.L_4068a8:

  ; Code: movl -0x2a78(%rbp), %eax	 RIP: 4068a8	 Bytes: 6
  %loadMem_4068a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068a8 = call %struct.Memory* @routine_movl_MINUS0x2a78__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068a8)
  store %struct.Memory* %call_4068a8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4068ae	 Bytes: 3
  %loadMem_4068ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068ae = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068ae)
  store %struct.Memory* %call_4068ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a78(%rbp)	 RIP: 4068b1	 Bytes: 6
  %loadMem_4068b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068b1 = call %struct.Memory* @routine_movl__eax__MINUS0x2a78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068b1)
  store %struct.Memory* %call_4068b1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4067c5	 RIP: 4068b7	 Bytes: 5
  %loadMem_4068b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068b7 = call %struct.Memory* @routine_jmpq_.L_4067c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068b7, i64 -242, i64 5)
  store %struct.Memory* %call_4068b7, %struct.Memory** %MEMORY

  br label %block_.L_4067c5

  ; Code: .L_4068bc:	 RIP: 4068bc	 Bytes: 0
block_.L_4068bc:

  ; Code: jmpq .L_4068c1	 RIP: 4068bc	 Bytes: 5
  %loadMem_4068bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068bc = call %struct.Memory* @routine_jmpq_.L_4068c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068bc, i64 5, i64 5)
  store %struct.Memory* %call_4068bc, %struct.Memory** %MEMORY

  br label %block_.L_4068c1

  ; Code: .L_4068c1:	 RIP: 4068c1	 Bytes: 0
block_.L_4068c1:

  ; Code: jmpq .L_4068c6	 RIP: 4068c1	 Bytes: 5
  %loadMem_4068c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068c1 = call %struct.Memory* @routine_jmpq_.L_4068c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068c1, i64 5, i64 5)
  store %struct.Memory* %call_4068c1, %struct.Memory** %MEMORY

  br label %block_.L_4068c6

  ; Code: .L_4068c6:	 RIP: 4068c6	 Bytes: 0
block_.L_4068c6:

  ; Code: jmpq .L_4068cb	 RIP: 4068c6	 Bytes: 5
  %loadMem_4068c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068c6 = call %struct.Memory* @routine_jmpq_.L_4068cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068c6, i64 5, i64 5)
  store %struct.Memory* %call_4068c6, %struct.Memory** %MEMORY

  br label %block_.L_4068cb

  ; Code: .L_4068cb:	 RIP: 4068cb	 Bytes: 0
block_.L_4068cb:

  ; Code: cmpl $0x0, -0x27f0(%rbp)	 RIP: 4068cb	 Bytes: 7
  %loadMem_4068cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068cb = call %struct.Memory* @routine_cmpl__0x0__MINUS0x27f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068cb)
  store %struct.Memory* %call_4068cb, %struct.Memory** %MEMORY

  ; Code: jne .L_4068ef	 RIP: 4068d2	 Bytes: 6
  %loadMem_4068d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068d2 = call %struct.Memory* @routine_jne_.L_4068ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068d2, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_4068d2, %struct.Memory** %MEMORY

  %loadBr_4068d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4068d2 = icmp eq i8 %loadBr_4068d2, 1
  br i1 %cmpBr_4068d2, label %block_.L_4068ef, label %block_4068d8

block_4068d8:
  ; Code: movslq -0x1f84(%rbp), %rax	 RIP: 4068d8	 Bytes: 7
  %loadMem_4068d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068d8 = call %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068d8)
  store %struct.Memory* %call_4068d8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xcb0(%rbp,%rax,4)	 RIP: 4068df	 Bytes: 11
  %loadMem_4068df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068df = call %struct.Memory* @routine_movl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068df)
  store %struct.Memory* %call_4068df, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40693e	 RIP: 4068ea	 Bytes: 5
  %loadMem_4068ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068ea = call %struct.Memory* @routine_jmpq_.L_40693e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068ea, i64 84, i64 5)
  store %struct.Memory* %call_4068ea, %struct.Memory** %MEMORY

  br label %block_.L_40693e

  ; Code: .L_4068ef:	 RIP: 4068ef	 Bytes: 0
block_.L_4068ef:

  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 4068ef	 Bytes: 6
  %loadMem_4068ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068ef = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068ef)
  store %struct.Memory* %call_4068ef, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 4068f5	 Bytes: 4
  %loadMem_4068f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068f5 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068f5)
  store %struct.Memory* %call_4068f5, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 4068f9	 Bytes: 2
  %loadMem_4068f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068f9 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068f9)
  store %struct.Memory* %call_4068f9, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 4068fb	 Bytes: 7
  %loadMem_4068fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4068fb = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4068fb)
  store %struct.Memory* %call_4068fb, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 406902	 Bytes: 5
  %loadMem_406902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406902 = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406902)
  store %struct.Memory* %call_406902, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406907	 Bytes: 3
  %loadMem_406907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406907 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406907)
  store %struct.Memory* %call_406907, %struct.Memory** %MEMORY

  ; Code: jne .L_406915	 RIP: 40690a	 Bytes: 6
  %loadMem_40690a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40690a = call %struct.Memory* @routine_jne_.L_406915(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40690a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40690a, %struct.Memory** %MEMORY

  %loadBr_40690a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40690a = icmp eq i8 %loadBr_40690a, 1
  br i1 %cmpBr_40690a, label %block_.L_406915, label %block_406910

block_406910:
  ; Code: jmpq .L_406932	 RIP: 406910	 Bytes: 5
  %loadMem_406910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406910 = call %struct.Memory* @routine_jmpq_.L_406932(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406910, i64 34, i64 5)
  store %struct.Memory* %call_406910, %struct.Memory** %MEMORY

  br label %block_.L_406932

  ; Code: .L_406915:	 RIP: 406915	 Bytes: 0
block_.L_406915:

  ; Code: movq $0x579eb0, %rdi	 RIP: 406915	 Bytes: 10
  %loadMem_406915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406915 = call %struct.Memory* @routine_movq__0x579eb0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406915)
  store %struct.Memory* %call_406915, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %esi	 RIP: 40691f	 Bytes: 6
  %loadMem_40691f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40691f = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40691f)
  store %struct.Memory* %call_40691f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 406925	 Bytes: 2
  %loadMem_406925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406925 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406925)
  store %struct.Memory* %call_406925, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 406927	 Bytes: 5
  %loadMem1_406927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406927 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406927, i64 308361, i64 5, i64 5)
  store %struct.Memory* %call1_406927, %struct.Memory** %MEMORY

  %loadMem2_406927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406927 = load i64, i64* %3
  %call2_406927 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_406927, %struct.Memory* %loadMem2_406927)
  store %struct.Memory* %call2_406927, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2af8(%rbp)	 RIP: 40692c	 Bytes: 6
  %loadMem_40692c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40692c = call %struct.Memory* @routine_movl__eax__MINUS0x2af8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40692c)
  store %struct.Memory* %call_40692c, %struct.Memory** %MEMORY

  ; Code: .L_406932:	 RIP: 406932	 Bytes: 0
  br label %block_.L_406932
block_.L_406932:

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 406932	 Bytes: 7
  %loadMem_406932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406932 = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406932)
  store %struct.Memory* %call_406932, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 406939	 Bytes: 5
  %loadMem_406939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406939 = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406939, i64 1591, i64 5)
  store %struct.Memory* %call_406939, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_40693e:	 RIP: 40693e	 Bytes: 0
block_.L_40693e:

  ; Code: jmpq .L_406943	 RIP: 40693e	 Bytes: 5
  %loadMem_40693e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40693e = call %struct.Memory* @routine_jmpq_.L_406943(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40693e, i64 5, i64 5)
  store %struct.Memory* %call_40693e, %struct.Memory** %MEMORY

  br label %block_.L_406943

  ; Code: .L_406943:	 RIP: 406943	 Bytes: 0
block_.L_406943:

  ; Code: jmpq .L_406412	 RIP: 406943	 Bytes: 5
  %loadMem_406943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406943 = call %struct.Memory* @routine_jmpq_.L_406412(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406943, i64 -1329, i64 5)
  store %struct.Memory* %call_406943, %struct.Memory** %MEMORY

  br label %block_.L_406412

  ; Code: .L_406948:	 RIP: 406948	 Bytes: 0
block_.L_406948:

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 406948	 Bytes: 10
  %loadMem_406948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406948 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406948)
  store %struct.Memory* %call_406948, %struct.Memory** %MEMORY

  ; Code: .L_406952:	 RIP: 406952	 Bytes: 0
  br label %block_.L_406952
block_.L_406952:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 406952	 Bytes: 10
  %loadMem_406952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406952 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406952)
  store %struct.Memory* %call_406952, %struct.Memory** %MEMORY

  ; Code: jge .L_406dc3	 RIP: 40695c	 Bytes: 6
  %loadMem_40695c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40695c = call %struct.Memory* @routine_jge_.L_406dc3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40695c, i8* %BRANCH_TAKEN, i64 1127, i64 6, i64 6)
  store %struct.Memory* %call_40695c, %struct.Memory** %MEMORY

  %loadBr_40695c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40695c = icmp eq i8 %loadBr_40695c, 1
  br i1 %cmpBr_40695c, label %block_.L_406dc3, label %block_406962

block_406962:
  ; Code: movl $0x0, -0x2a80(%rbp)	 RIP: 406962	 Bytes: 10
  %loadMem_406962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406962 = call %struct.Memory* @routine_movl__0x0__MINUS0x2a80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406962)
  store %struct.Memory* %call_406962, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2a84(%rbp)	 RIP: 40696c	 Bytes: 10
  %loadMem_40696c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40696c = call %struct.Memory* @routine_movl__0x0__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40696c)
  store %struct.Memory* %call_40696c, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406976	 Bytes: 7
  %loadMem_406976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406976 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406976)
  store %struct.Memory* %call_406976, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 40697d	 Bytes: 8
  %loadMem_40697d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40697d = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40697d)
  store %struct.Memory* %call_40697d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 406985	 Bytes: 3
  %loadMem_406985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406985 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406985)
  store %struct.Memory* %call_406985, %struct.Memory** %MEMORY

  ; Code: jne .L_4069a3	 RIP: 406988	 Bytes: 6
  %loadMem_406988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406988 = call %struct.Memory* @routine_jne_.L_4069a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406988, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_406988, %struct.Memory** %MEMORY

  %loadBr_406988 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406988 = icmp eq i8 %loadBr_406988, 1
  br i1 %cmpBr_406988, label %block_.L_4069a3, label %block_40698e

block_40698e:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 40698e	 Bytes: 7
  %loadMem_40698e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40698e = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40698e)
  store %struct.Memory* %call_40698e, %struct.Memory** %MEMORY

  ; Code: cmpl $0xffffffff, -0x670(%rbp,%rax,4)	 RIP: 406995	 Bytes: 8
  %loadMem_406995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406995 = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406995)
  store %struct.Memory* %call_406995, %struct.Memory** %MEMORY

  ; Code: je .L_4069a8	 RIP: 40699d	 Bytes: 6
  %loadMem_40699d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40699d = call %struct.Memory* @routine_je_.L_4069a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40699d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40699d, %struct.Memory** %MEMORY

  %loadBr_40699d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40699d = icmp eq i8 %loadBr_40699d, 1
  br i1 %cmpBr_40699d, label %block_.L_4069a8, label %block_.L_4069a3

  ; Code: .L_4069a3:	 RIP: 4069a3	 Bytes: 0
block_.L_4069a3:

  ; Code: jmpq .L_406daf	 RIP: 4069a3	 Bytes: 5
  %loadMem_4069a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069a3 = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069a3, i64 1036, i64 5)
  store %struct.Memory* %call_4069a3, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_4069a8:	 RIP: 4069a8	 Bytes: 0
block_.L_4069a8:

  ; Code: movl $0x0, -0x2a7c(%rbp)	 RIP: 4069a8	 Bytes: 10
  %loadMem_4069a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069a8 = call %struct.Memory* @routine_movl__0x0__MINUS0x2a7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069a8)
  store %struct.Memory* %call_4069a8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 4069b2	 Bytes: 7
  %loadMem_4069b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069b2 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069b2)
  store %struct.Memory* %call_4069b2, %struct.Memory** %MEMORY

  ; Code: .L_4069b9:	 RIP: 4069b9	 Bytes: 0
  br label %block_.L_4069b9
block_.L_4069b9:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 4069b9	 Bytes: 4
  %loadMem_4069b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069b9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069b9)
  store %struct.Memory* %call_4069b9, %struct.Memory** %MEMORY

  ; Code: jge .L_406ab9	 RIP: 4069bd	 Bytes: 6
  %loadMem_4069bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069bd = call %struct.Memory* @routine_jge_.L_406ab9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069bd, i8* %BRANCH_TAKEN, i64 252, i64 6, i64 6)
  store %struct.Memory* %call_4069bd, %struct.Memory** %MEMORY

  %loadBr_4069bd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4069bd = icmp eq i8 %loadBr_4069bd, 1
  br i1 %cmpBr_4069bd, label %block_.L_406ab9, label %block_4069c3

block_4069c3:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 4069c3	 Bytes: 6
  %loadMem_4069c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069c3 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069c3)
  store %struct.Memory* %call_4069c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4069c9	 Bytes: 4
  %loadMem_4069c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069c9 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069c9)
  store %struct.Memory* %call_4069c9, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 4069cd	 Bytes: 7
  %loadMem_4069cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069cd = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069cd)
  store %struct.Memory* %call_4069cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a88(%rbp)	 RIP: 4069d4	 Bytes: 6
  %loadMem_4069d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069d4 = call %struct.Memory* @routine_movl__eax__MINUS0x2a88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069d4)
  store %struct.Memory* %call_4069d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a88(%rbp), %rcx	 RIP: 4069da	 Bytes: 7
  %loadMem_4069da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069da = call %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069da)
  store %struct.Memory* %call_4069da, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4069e1	 Bytes: 8
  %loadMem_4069e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069e1 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069e1)
  store %struct.Memory* %call_4069e1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4069e9	 Bytes: 3
  %loadMem_4069e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069e9 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069e9)
  store %struct.Memory* %call_4069e9, %struct.Memory** %MEMORY

  ; Code: jne .L_4069f7	 RIP: 4069ec	 Bytes: 6
  %loadMem_4069ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069ec = call %struct.Memory* @routine_jne_.L_4069f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069ec, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4069ec, %struct.Memory** %MEMORY

  %loadBr_4069ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4069ec = icmp eq i8 %loadBr_4069ec, 1
  br i1 %cmpBr_4069ec, label %block_.L_4069f7, label %block_4069f2

block_4069f2:
  ; Code: jmpq .L_406aab	 RIP: 4069f2	 Bytes: 5
  %loadMem_4069f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069f2 = call %struct.Memory* @routine_jmpq_.L_406aab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069f2, i64 185, i64 5)
  store %struct.Memory* %call_4069f2, %struct.Memory** %MEMORY

  br label %block_.L_406aab

  ; Code: .L_4069f7:	 RIP: 4069f7	 Bytes: 0
block_.L_4069f7:

  ; Code: movslq -0x2a88(%rbp), %rax	 RIP: 4069f7	 Bytes: 7
  %loadMem_4069f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069f7 = call %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069f7)
  store %struct.Memory* %call_4069f7, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 4069fe	 Bytes: 8
  %loadMem_4069fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4069fe = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4069fe)
  store %struct.Memory* %call_4069fe, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 406a06	 Bytes: 3
  %loadMem_406a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a06 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a06)
  store %struct.Memory* %call_406a06, %struct.Memory** %MEMORY

  ; Code: jne .L_406aa6	 RIP: 406a09	 Bytes: 6
  %loadMem_406a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a09 = call %struct.Memory* @routine_jne_.L_406aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a09, i8* %BRANCH_TAKEN, i64 157, i64 6, i64 6)
  store %struct.Memory* %call_406a09, %struct.Memory** %MEMORY

  %loadBr_406a09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a09 = icmp eq i8 %loadBr_406a09, 1
  br i1 %cmpBr_406a09, label %block_.L_406aa6, label %block_406a0f

block_406a0f:
  ; Code: movq $0xb4bd20, %rax	 RIP: 406a0f	 Bytes: 10
  %loadMem_406a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a0f = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a0f)
  store %struct.Memory* %call_406a0f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a88(%rbp), %rcx	 RIP: 406a19	 Bytes: 7
  %loadMem_406a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a19 = call %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a19)
  store %struct.Memory* %call_406a19, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 406a20	 Bytes: 4
  %loadMem_406a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a20 = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a20)
  store %struct.Memory* %call_406a20, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406a24	 Bytes: 3
  %loadMem_406a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a24 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a24)
  store %struct.Memory* %call_406a24, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x40(%rax)	 RIP: 406a27	 Bytes: 4
  %loadMem_406a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a27 = call %struct.Memory* @routine_cmpl__0x1__0x40__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a27)
  store %struct.Memory* %call_406a27, %struct.Memory** %MEMORY

  ; Code: je .L_406aa6	 RIP: 406a2b	 Bytes: 6
  %loadMem_406a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a2b = call %struct.Memory* @routine_je_.L_406aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a2b, i8* %BRANCH_TAKEN, i64 123, i64 6, i64 6)
  store %struct.Memory* %call_406a2b, %struct.Memory** %MEMORY

  %loadBr_406a2b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a2b = icmp eq i8 %loadBr_406a2b, 1
  br i1 %cmpBr_406a2b, label %block_.L_406aa6, label %block_406a31

block_406a31:
  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 406a31	 Bytes: 4
  %loadMem_406a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a31 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a31)
  store %struct.Memory* %call_406a31, %struct.Memory** %MEMORY

  ; Code: jne .L_406a60	 RIP: 406a35	 Bytes: 6
  %loadMem_406a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a35 = call %struct.Memory* @routine_jne_.L_406a60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a35, i8* %BRANCH_TAKEN, i64 43, i64 6, i64 6)
  store %struct.Memory* %call_406a35, %struct.Memory** %MEMORY

  %loadBr_406a35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a35 = icmp eq i8 %loadBr_406a35, 1
  br i1 %cmpBr_406a35, label %block_.L_406a60, label %block_406a3b

block_406a3b:
  ; Code: movq $0xb0eff0, %rax	 RIP: 406a3b	 Bytes: 10
  %loadMem_406a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a3b = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a3b)
  store %struct.Memory* %call_406a3b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a88(%rbp), %rcx	 RIP: 406a45	 Bytes: 7
  %loadMem_406a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a45 = call %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a45)
  store %struct.Memory* %call_406a45, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 406a4c	 Bytes: 7
  %loadMem_406a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a4c = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a4c)
  store %struct.Memory* %call_406a4c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406a53	 Bytes: 3
  %loadMem_406a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a53 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a53)
  store %struct.Memory* %call_406a53, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x38(%rax)	 RIP: 406a56	 Bytes: 4
  %loadMem_406a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a56 = call %struct.Memory* @routine_cmpl__0x0__0x38__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a56)
  store %struct.Memory* %call_406a56, %struct.Memory** %MEMORY

  ; Code: je .L_406aa6	 RIP: 406a5a	 Bytes: 6
  %loadMem_406a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a5a = call %struct.Memory* @routine_je_.L_406aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a5a, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_406a5a, %struct.Memory** %MEMORY

  %loadBr_406a5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a5a = icmp eq i8 %loadBr_406a5a, 1
  br i1 %cmpBr_406a5a, label %block_.L_406aa6, label %block_.L_406a60

  ; Code: .L_406a60:	 RIP: 406a60	 Bytes: 0
block_.L_406a60:

  ; Code: movq $0xb4bd20, %rax	 RIP: 406a60	 Bytes: 10
  %loadMem_406a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a60 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a60)
  store %struct.Memory* %call_406a60, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 406a6a	 Bytes: 8
  %loadMem_406a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a6a = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a6a)
  store %struct.Memory* %call_406a6a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2a88(%rbp), %rdx	 RIP: 406a72	 Bytes: 7
  %loadMem_406a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a72 = call %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a72)
  store %struct.Memory* %call_406a72, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 406a79	 Bytes: 4
  %loadMem_406a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a79 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a79)
  store %struct.Memory* %call_406a79, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 406a7d	 Bytes: 3
  %loadMem_406a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a7d = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a7d)
  store %struct.Memory* %call_406a7d, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 406a80	 Bytes: 4
  %loadMem_406a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a80 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a80)
  store %struct.Memory* %call_406a80, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406a84	 Bytes: 4
  %loadMem_406a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a84 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a84)
  store %struct.Memory* %call_406a84, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 406a88	 Bytes: 3
  %loadMem_406a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a88 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a88)
  store %struct.Memory* %call_406a88, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, 0x3c(%rcx)	 RIP: 406a8b	 Bytes: 4
  %loadMem_406a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a8b = call %struct.Memory* @routine_cmpl__0x5__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a8b)
  store %struct.Memory* %call_406a8b, %struct.Memory** %MEMORY

  ; Code: je .L_406aa6	 RIP: 406a8f	 Bytes: 6
  %loadMem_406a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a8f = call %struct.Memory* @routine_je_.L_406aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a8f, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_406a8f, %struct.Memory** %MEMORY

  %loadBr_406a8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406a8f = icmp eq i8 %loadBr_406a8f, 1
  br i1 %cmpBr_406a8f, label %block_.L_406aa6, label %block_406a95

block_406a95:
  ; Code: movl -0x2a88(%rbp), %eax	 RIP: 406a95	 Bytes: 6
  %loadMem_406a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a95 = call %struct.Memory* @routine_movl_MINUS0x2a88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a95)
  store %struct.Memory* %call_406a95, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a7c(%rbp)	 RIP: 406a9b	 Bytes: 6
  %loadMem_406a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406a9b = call %struct.Memory* @routine_movl__eax__MINUS0x2a7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406a9b)
  store %struct.Memory* %call_406a9b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406ab9	 RIP: 406aa1	 Bytes: 5
  %loadMem_406aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406aa1 = call %struct.Memory* @routine_jmpq_.L_406ab9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406aa1, i64 24, i64 5)
  store %struct.Memory* %call_406aa1, %struct.Memory** %MEMORY

  br label %block_.L_406ab9

  ; Code: .L_406aa6:	 RIP: 406aa6	 Bytes: 0
block_.L_406aa6:

  ; Code: jmpq .L_406aab	 RIP: 406aa6	 Bytes: 5
  %loadMem_406aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406aa6 = call %struct.Memory* @routine_jmpq_.L_406aab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406aa6, i64 5, i64 5)
  store %struct.Memory* %call_406aa6, %struct.Memory** %MEMORY

  br label %block_.L_406aab

  ; Code: .L_406aab:	 RIP: 406aab	 Bytes: 0
block_.L_406aab:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 406aab	 Bytes: 3
  %loadMem_406aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406aab = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406aab)
  store %struct.Memory* %call_406aab, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406aae	 Bytes: 3
  %loadMem_406aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406aae = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406aae)
  store %struct.Memory* %call_406aae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 406ab1	 Bytes: 3
  %loadMem_406ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ab1 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ab1)
  store %struct.Memory* %call_406ab1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4069b9	 RIP: 406ab4	 Bytes: 5
  %loadMem_406ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ab4 = call %struct.Memory* @routine_jmpq_.L_4069b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ab4, i64 -251, i64 5)
  store %struct.Memory* %call_406ab4, %struct.Memory** %MEMORY

  br label %block_.L_4069b9

  ; Code: .L_406ab9:	 RIP: 406ab9	 Bytes: 0
block_.L_406ab9:

  ; Code: cmpl $0x0, -0x2a7c(%rbp)	 RIP: 406ab9	 Bytes: 7
  %loadMem_406ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ab9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2a7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ab9)
  store %struct.Memory* %call_406ab9, %struct.Memory** %MEMORY

  ; Code: jne .L_406acb	 RIP: 406ac0	 Bytes: 6
  %loadMem_406ac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ac0 = call %struct.Memory* @routine_jne_.L_406acb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ac0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406ac0, %struct.Memory** %MEMORY

  %loadBr_406ac0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406ac0 = icmp eq i8 %loadBr_406ac0, 1
  br i1 %cmpBr_406ac0, label %block_.L_406acb, label %block_406ac6

block_406ac6:
  ; Code: jmpq .L_406daf	 RIP: 406ac6	 Bytes: 5
  %loadMem_406ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ac6 = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ac6, i64 745, i64 5)
  store %struct.Memory* %call_406ac6, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406acb:	 RIP: 406acb	 Bytes: 0
block_.L_406acb:

  ; Code: movq $0x579ecb, %rdx	 RIP: 406acb	 Bytes: 10
  %loadMem_406acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406acb = call %struct.Memory* @routine_movq__0x579ecb___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406acb)
  store %struct.Memory* %call_406acb, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 406ad5	 Bytes: 2
  %loadMem_406ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ad5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ad5)
  store %struct.Memory* %call_406ad5, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 406ad7	 Bytes: 6
  %loadMem_406ad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ad7 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ad7)
  store %struct.Memory* %call_406ad7, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 406add	 Bytes: 3
  %loadMem_406add = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406add = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406add)
  store %struct.Memory* %call_406add, %struct.Memory** %MEMORY

  ; Code: movl -0x2a7c(%rbp), %ecx	 RIP: 406ae0	 Bytes: 6
  %loadMem_406ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ae0 = call %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ae0)
  store %struct.Memory* %call_406ae0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 406ae6	 Bytes: 3
  %loadMem_406ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ae6 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ae6)
  store %struct.Memory* %call_406ae6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r9d	 RIP: 406ae9	 Bytes: 3
  %loadMem_406ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ae9 = call %struct.Memory* @routine_movl__eax___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ae9)
  store %struct.Memory* %call_406ae9, %struct.Memory** %MEMORY

  ; Code: callq .trymove	 RIP: 406aec	 Bytes: 5
  %loadMem1_406aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406aec = call %struct.Memory* @routine_callq_.trymove(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406aec, i64 9028, i64 5, i64 5)
  store %struct.Memory* %call1_406aec, %struct.Memory** %MEMORY

  %loadMem2_406aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406aec = load i64, i64* %3
  %call2_406aec = call %struct.Memory* @sub_408e30.trymove(%struct.State* %0, i64  %loadPC_406aec, %struct.Memory* %loadMem2_406aec)
  store %struct.Memory* %call2_406aec, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406af1	 Bytes: 3
  %loadMem_406af1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406af1 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406af1)
  store %struct.Memory* %call_406af1, %struct.Memory** %MEMORY

  ; Code: jne .L_406aff	 RIP: 406af4	 Bytes: 6
  %loadMem_406af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406af4 = call %struct.Memory* @routine_jne_.L_406aff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406af4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406af4, %struct.Memory** %MEMORY

  %loadBr_406af4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406af4 = icmp eq i8 %loadBr_406af4, 1
  br i1 %cmpBr_406af4, label %block_.L_406aff, label %block_406afa

block_406afa:
  ; Code: jmpq .L_406daf	 RIP: 406afa	 Bytes: 5
  %loadMem_406afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406afa = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406afa, i64 693, i64 5)
  store %struct.Memory* %call_406afa, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406aff:	 RIP: 406aff	 Bytes: 0
block_.L_406aff:

  ; Code: movl $0x1, -0x2a84(%rbp)	 RIP: 406aff	 Bytes: 10
  %loadMem_406aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406aff = call %struct.Memory* @routine_movl__0x1__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406aff)
  store %struct.Memory* %call_406aff, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 406b09	 Bytes: 7
  %loadMem_406b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b09 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b09)
  store %struct.Memory* %call_406b09, %struct.Memory** %MEMORY

  ; Code: .L_406b10:	 RIP: 406b10	 Bytes: 0
  br label %block_.L_406b10
block_.L_406b10:

  ; Code: cmpl $0x4, -0x28(%rbp)	 RIP: 406b10	 Bytes: 4
  %loadMem_406b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b10 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b10)
  store %struct.Memory* %call_406b10, %struct.Memory** %MEMORY

  ; Code: jge .L_406bba	 RIP: 406b14	 Bytes: 6
  %loadMem_406b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b14 = call %struct.Memory* @routine_jge_.L_406bba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b14, i8* %BRANCH_TAKEN, i64 166, i64 6, i64 6)
  store %struct.Memory* %call_406b14, %struct.Memory** %MEMORY

  %loadBr_406b14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406b14 = icmp eq i8 %loadBr_406b14, 1
  br i1 %cmpBr_406b14, label %block_.L_406bba, label %block_406b1a

block_406b1a:
  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406b1a	 Bytes: 6
  %loadMem_406b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b1a = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b1a)
  store %struct.Memory* %call_406b1a, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 406b20	 Bytes: 4
  %loadMem_406b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b20 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b20)
  store %struct.Memory* %call_406b20, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 406b24	 Bytes: 7
  %loadMem_406b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b24 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b24)
  store %struct.Memory* %call_406b24, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 406b2b	 Bytes: 3
  %loadMem_406b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b2b = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b2b)
  store %struct.Memory* %call_406b2b, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 406b2e	 Bytes: 8
  %loadMem_406b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b2e = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b2e)
  store %struct.Memory* %call_406b2e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x14(%rbp), %eax	 RIP: 406b36	 Bytes: 3
  %loadMem_406b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b36 = call %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b36)
  store %struct.Memory* %call_406b36, %struct.Memory** %MEMORY

  ; Code: jne .L_406ba7	 RIP: 406b39	 Bytes: 6
  %loadMem_406b39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b39 = call %struct.Memory* @routine_jne_.L_406ba7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b39, i8* %BRANCH_TAKEN, i64 110, i64 6, i64 6)
  store %struct.Memory* %call_406b39, %struct.Memory** %MEMORY

  %loadBr_406b39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406b39 = icmp eq i8 %loadBr_406b39, 1
  br i1 %cmpBr_406b39, label %block_.L_406ba7, label %block_406b3f

block_406b3f:
  ; Code: movq $0xb4bd20, %rax	 RIP: 406b3f	 Bytes: 10
  %loadMem_406b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b3f = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b3f)
  store %struct.Memory* %call_406b3f, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 406b49	 Bytes: 8
  %loadMem_406b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b49 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b49)
  store %struct.Memory* %call_406b49, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edx	 RIP: 406b51	 Bytes: 6
  %loadMem_406b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b51 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b51)
  store %struct.Memory* %call_406b51, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rsi	 RIP: 406b57	 Bytes: 4
  %loadMem_406b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b57 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b57)
  store %struct.Memory* %call_406b57, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rsi,4), %edx	 RIP: 406b5b	 Bytes: 7
  %loadMem_406b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b5b = call %struct.Memory* @routine_addl_0x7ae1b0___rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b5b)
  store %struct.Memory* %call_406b5b, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 406b62	 Bytes: 3
  %loadMem_406b62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b62 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b62)
  store %struct.Memory* %call_406b62, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 406b65	 Bytes: 4
  %loadMem_406b65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b65 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b65)
  store %struct.Memory* %call_406b65, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 406b69	 Bytes: 3
  %loadMem_406b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b69 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b69)
  store %struct.Memory* %call_406b69, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 406b6c	 Bytes: 4
  %loadMem_406b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b6c = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b6c)
  store %struct.Memory* %call_406b6c, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406b70	 Bytes: 4
  %loadMem_406b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b70 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b70)
  store %struct.Memory* %call_406b70, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 406b74	 Bytes: 3
  %loadMem_406b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b74 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b74)
  store %struct.Memory* %call_406b74, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, 0x3c(%rcx)	 RIP: 406b77	 Bytes: 4
  %loadMem_406b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b77 = call %struct.Memory* @routine_cmpl__0x5__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b77)
  store %struct.Memory* %call_406b77, %struct.Memory** %MEMORY

  ; Code: je .L_406ba7	 RIP: 406b7b	 Bytes: 6
  %loadMem_406b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b7b = call %struct.Memory* @routine_je_.L_406ba7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b7b, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_406b7b, %struct.Memory** %MEMORY

  %loadBr_406b7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406b7b = icmp eq i8 %loadBr_406b7b, 1
  br i1 %cmpBr_406b7b, label %block_.L_406ba7, label %block_406b81

block_406b81:
  ; Code: movl $0x0, -0x2a84(%rbp)	 RIP: 406b81	 Bytes: 10
  %loadMem_406b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b81 = call %struct.Memory* @routine_movl__0x0__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b81)
  store %struct.Memory* %call_406b81, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406b8b	 Bytes: 6
  %loadMem_406b8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b8b = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b8b)
  store %struct.Memory* %call_406b8b, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 406b91	 Bytes: 4
  %loadMem_406b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b91 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b91)
  store %struct.Memory* %call_406b91, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 406b95	 Bytes: 7
  %loadMem_406b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b95 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b95)
  store %struct.Memory* %call_406b95, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a80(%rbp)	 RIP: 406b9c	 Bytes: 6
  %loadMem_406b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406b9c = call %struct.Memory* @routine_movl__eax__MINUS0x2a80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406b9c)
  store %struct.Memory* %call_406b9c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406bba	 RIP: 406ba2	 Bytes: 5
  %loadMem_406ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ba2 = call %struct.Memory* @routine_jmpq_.L_406bba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ba2, i64 24, i64 5)
  store %struct.Memory* %call_406ba2, %struct.Memory** %MEMORY

  br label %block_.L_406bba

  ; Code: .L_406ba7:	 RIP: 406ba7	 Bytes: 0
block_.L_406ba7:

  ; Code: jmpq .L_406bac	 RIP: 406ba7	 Bytes: 5
  %loadMem_406ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ba7 = call %struct.Memory* @routine_jmpq_.L_406bac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ba7, i64 5, i64 5)
  store %struct.Memory* %call_406ba7, %struct.Memory** %MEMORY

  br label %block_.L_406bac

  ; Code: .L_406bac:	 RIP: 406bac	 Bytes: 0
block_.L_406bac:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 406bac	 Bytes: 3
  %loadMem_406bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bac = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bac)
  store %struct.Memory* %call_406bac, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406baf	 Bytes: 3
  %loadMem_406baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406baf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406baf)
  store %struct.Memory* %call_406baf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 406bb2	 Bytes: 3
  %loadMem_406bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bb2 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bb2)
  store %struct.Memory* %call_406bb2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406b10	 RIP: 406bb5	 Bytes: 5
  %loadMem_406bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bb5 = call %struct.Memory* @routine_jmpq_.L_406b10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bb5, i64 -165, i64 5)
  store %struct.Memory* %call_406bb5, %struct.Memory** %MEMORY

  br label %block_.L_406b10

  ; Code: .L_406bba:	 RIP: 406bba	 Bytes: 0
block_.L_406bba:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406bba	 Bytes: 6
  %loadMem_406bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bba = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bba)
  store %struct.Memory* %call_406bba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f84(%rbp)	 RIP: 406bc0	 Bytes: 6
  %loadMem_406bc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bc0 = call %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bc0)
  store %struct.Memory* %call_406bc0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x2a84(%rbp)	 RIP: 406bc6	 Bytes: 7
  %loadMem_406bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bc6 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bc6)
  store %struct.Memory* %call_406bc6, %struct.Memory** %MEMORY

  ; Code: jne .L_406c85	 RIP: 406bcd	 Bytes: 6
  %loadMem_406bcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bcd = call %struct.Memory* @routine_jne_.L_406c85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bcd, i8* %BRANCH_TAKEN, i64 184, i64 6, i64 6)
  store %struct.Memory* %call_406bcd, %struct.Memory** %MEMORY

  %loadBr_406bcd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406bcd = icmp eq i8 %loadBr_406bcd, 1
  br i1 %cmpBr_406bcd, label %block_.L_406c85, label %block_406bd3

block_406bd3:
  ; Code: jmpq .L_406bd8	 RIP: 406bd3	 Bytes: 5
  %loadMem_406bd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bd3 = call %struct.Memory* @routine_jmpq_.L_406bd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bd3, i64 5, i64 5)
  store %struct.Memory* %call_406bd3, %struct.Memory** %MEMORY

  br label %block_.L_406bd8

  ; Code: .L_406bd8:	 RIP: 406bd8	 Bytes: 0
block_.L_406bd8:

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 406bd8	 Bytes: 6
  %loadMem_406bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bd8 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bd8)
  store %struct.Memory* %call_406bd8, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 406bde	 Bytes: 5
  %loadMem1_406bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406bde = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406bde, i64 35746, i64 5, i64 5)
  store %struct.Memory* %call1_406bde, %struct.Memory** %MEMORY

  %loadMem2_406bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406bde = load i64, i64* %3
  %call2_406bde = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_406bde, %struct.Memory* %loadMem2_406bde)
  store %struct.Memory* %call2_406bde, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 406be3	 Bytes: 3
  %loadMem_406be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406be3 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406be3)
  store %struct.Memory* %call_406be3, %struct.Memory** %MEMORY

  ; Code: jne .L_406c62	 RIP: 406be6	 Bytes: 6
  %loadMem_406be6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406be6 = call %struct.Memory* @routine_jne_.L_406c62(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406be6, i8* %BRANCH_TAKEN, i64 124, i64 6, i64 6)
  store %struct.Memory* %call_406be6, %struct.Memory** %MEMORY

  %loadBr_406be6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406be6 = icmp eq i8 %loadBr_406be6, 1
  br i1 %cmpBr_406be6, label %block_.L_406c62, label %block_406bec

block_406bec:
  ; Code: movl $0x1, %esi	 RIP: 406bec	 Bytes: 5
  %loadMem_406bec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bec = call %struct.Memory* @routine_movl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bec)
  store %struct.Memory* %call_406bec, %struct.Memory** %MEMORY

  ; Code: leaq -0x2a8c(%rbp), %rdx	 RIP: 406bf1	 Bytes: 7
  %loadMem_406bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bf1 = call %struct.Memory* @routine_leaq_MINUS0x2a8c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bf1)
  store %struct.Memory* %call_406bf1, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 406bf8	 Bytes: 6
  %loadMem_406bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406bf8 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406bf8)
  store %struct.Memory* %call_406bf8, %struct.Memory** %MEMORY

  ; Code: callq .findlib	 RIP: 406bfe	 Bytes: 5
  %loadMem1_406bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406bfe = call %struct.Memory* @routine_callq_.findlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406bfe, i64 35906, i64 5, i64 5)
  store %struct.Memory* %call1_406bfe, %struct.Memory** %MEMORY

  %loadMem2_406bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406bfe = load i64, i64* %3
  %call2_406bfe = call %struct.Memory* @sub_40f840.findlib(%struct.State* %0, i64  %loadPC_406bfe, %struct.Memory* %loadMem2_406bfe)
  store %struct.Memory* %call2_406bfe, %struct.Memory** %MEMORY

  ; Code: movq $0x579e48, %rdx	 RIP: 406c03	 Bytes: 10
  %loadMem_406c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c03 = call %struct.Memory* @routine_movq__0x579e48___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c03)
  store %struct.Memory* %call_406c03, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 406c0d	 Bytes: 2
  %loadMem_406c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c0d = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c0d)
  store %struct.Memory* %call_406c0d, %struct.Memory** %MEMORY

  ; Code: movl -0x2a8c(%rbp), %edi	 RIP: 406c0f	 Bytes: 6
  %loadMem_406c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c0f = call %struct.Memory* @routine_movl_MINUS0x2a8c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c0f)
  store %struct.Memory* %call_406c0f, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x1f84(%rbp)	 RIP: 406c15	 Bytes: 6
  %loadMem_406c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c15 = call %struct.Memory* @routine_movl__edi__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c15)
  store %struct.Memory* %call_406c15, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406c1b	 Bytes: 6
  %loadMem_406c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c1b = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c1b)
  store %struct.Memory* %call_406c1b, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %ecx	 RIP: 406c21	 Bytes: 3
  %loadMem_406c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c21 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c21)
  store %struct.Memory* %call_406c21, %struct.Memory** %MEMORY

  ; Code: movl -0x2a7c(%rbp), %r8d	 RIP: 406c24	 Bytes: 7
  %loadMem_406c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c24 = call %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c24)
  store %struct.Memory* %call_406c24, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x2afc(%rbp)	 RIP: 406c2b	 Bytes: 6
  %loadMem_406c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c2b = call %struct.Memory* @routine_movl__esi__MINUS0x2afc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c2b)
  store %struct.Memory* %call_406c2b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 406c31	 Bytes: 2
  %loadMem_406c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c31 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c31)
  store %struct.Memory* %call_406c31, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 406c33	 Bytes: 3
  %loadMem_406c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c33 = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c33)
  store %struct.Memory* %call_406c33, %struct.Memory** %MEMORY

  ; Code: movl -0x2afc(%rbp), %r8d	 RIP: 406c36	 Bytes: 7
  %loadMem_406c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c36 = call %struct.Memory* @routine_movl_MINUS0x2afc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c36)
  store %struct.Memory* %call_406c36, %struct.Memory** %MEMORY

  ; Code: movl -0x2afc(%rbp), %r9d	 RIP: 406c3d	 Bytes: 7
  %loadMem_406c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c3d = call %struct.Memory* @routine_movl_MINUS0x2afc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c3d)
  store %struct.Memory* %call_406c3d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b00(%rbp)	 RIP: 406c44	 Bytes: 6
  %loadMem_406c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c44 = call %struct.Memory* @routine_movl__eax__MINUS0x2b00__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c44)
  store %struct.Memory* %call_406c44, %struct.Memory** %MEMORY

  ; Code: callq .trymove	 RIP: 406c4a	 Bytes: 5
  %loadMem1_406c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406c4a = call %struct.Memory* @routine_callq_.trymove(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406c4a, i64 8678, i64 5, i64 5)
  store %struct.Memory* %call1_406c4a, %struct.Memory** %MEMORY

  %loadMem2_406c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406c4a = load i64, i64* %3
  %call2_406c4a = call %struct.Memory* @sub_408e30.trymove(%struct.State* %0, i64  %loadPC_406c4a, %struct.Memory* %loadMem2_406c4a)
  store %struct.Memory* %call2_406c4a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406c4f	 Bytes: 3
  %loadMem_406c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c4f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c4f)
  store %struct.Memory* %call_406c4f, %struct.Memory** %MEMORY

  ; Code: jne .L_406c5d	 RIP: 406c52	 Bytes: 6
  %loadMem_406c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c52 = call %struct.Memory* @routine_jne_.L_406c5d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c52, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406c52, %struct.Memory** %MEMORY

  %loadBr_406c52 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406c52 = icmp eq i8 %loadBr_406c52, 1
  br i1 %cmpBr_406c52, label %block_.L_406c5d, label %block_406c58

block_406c58:
  ; Code: jmpq .L_406c62	 RIP: 406c58	 Bytes: 5
  %loadMem_406c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c58 = call %struct.Memory* @routine_jmpq_.L_406c62(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c58, i64 10, i64 5)
  store %struct.Memory* %call_406c58, %struct.Memory** %MEMORY

  br label %block_.L_406c62

  ; Code: .L_406c5d:	 RIP: 406c5d	 Bytes: 0
block_.L_406c5d:

  ; Code: jmpq .L_406bd8	 RIP: 406c5d	 Bytes: 5
  %loadMem_406c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c5d = call %struct.Memory* @routine_jmpq_.L_406bd8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c5d, i64 -133, i64 5)
  store %struct.Memory* %call_406c5d, %struct.Memory** %MEMORY

  br label %block_.L_406bd8

  ; Code: .L_406c62:	 RIP: 406c62	 Bytes: 0
block_.L_406c62:

  ; Code: movl -0x1f88(%rbp), %edi	 RIP: 406c62	 Bytes: 6
  %loadMem_406c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c62 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c62)
  store %struct.Memory* %call_406c62, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 406c68	 Bytes: 5
  %loadMem1_406c68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406c68 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406c68, i64 35608, i64 5, i64 5)
  store %struct.Memory* %call1_406c68, %struct.Memory** %MEMORY

  %loadMem2_406c68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406c68 = load i64, i64* %3
  %call2_406c68 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_406c68, %struct.Memory* %loadMem2_406c68)
  store %struct.Memory* %call2_406c68, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 406c6d	 Bytes: 3
  %loadMem_406c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c6d = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c6d)
  store %struct.Memory* %call_406c6d, %struct.Memory** %MEMORY

  ; Code: jne .L_406c80	 RIP: 406c70	 Bytes: 6
  %loadMem_406c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c70 = call %struct.Memory* @routine_jne_.L_406c80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c70, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_406c70, %struct.Memory** %MEMORY

  %loadBr_406c70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406c70 = icmp eq i8 %loadBr_406c70, 1
  br i1 %cmpBr_406c70, label %block_.L_406c80, label %block_406c76

block_406c76:
  ; Code: movl $0x0, -0x1f84(%rbp)	 RIP: 406c76	 Bytes: 10
  %loadMem_406c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c76 = call %struct.Memory* @routine_movl__0x0__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c76)
  store %struct.Memory* %call_406c76, %struct.Memory** %MEMORY

  ; Code: .L_406c80:	 RIP: 406c80	 Bytes: 0
  br label %block_.L_406c80
block_.L_406c80:

  ; Code: jmpq .L_406c85	 RIP: 406c80	 Bytes: 5
  %loadMem_406c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c80 = call %struct.Memory* @routine_jmpq_.L_406c85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c80, i64 5, i64 5)
  store %struct.Memory* %call_406c80, %struct.Memory** %MEMORY

  br label %block_.L_406c85

  ; Code: .L_406c85:	 RIP: 406c85	 Bytes: 0
block_.L_406c85:

  ; Code: jmpq .L_406c8a	 RIP: 406c85	 Bytes: 5
  %loadMem_406c85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c85 = call %struct.Memory* @routine_jmpq_.L_406c8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c85, i64 5, i64 5)
  store %struct.Memory* %call_406c85, %struct.Memory** %MEMORY

  br label %block_.L_406c8a

  ; Code: .L_406c8a:	 RIP: 406c8a	 Bytes: 0
block_.L_406c8a:

  ; Code: cmpl $0x0, 0xb54ce4	 RIP: 406c8a	 Bytes: 8
  %loadMem_406c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c8a = call %struct.Memory* @routine_cmpl__0x0__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c8a)
  store %struct.Memory* %call_406c8a, %struct.Memory** %MEMORY

  ; Code: jle .L_406ca2	 RIP: 406c92	 Bytes: 6
  %loadMem_406c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c92 = call %struct.Memory* @routine_jle_.L_406ca2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c92, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_406c92, %struct.Memory** %MEMORY

  %loadBr_406c92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406c92 = icmp eq i8 %loadBr_406c92, 1
  br i1 %cmpBr_406c92, label %block_.L_406ca2, label %block_406c98

block_406c98:
  ; Code: callq .popgo	 RIP: 406c98	 Bytes: 5
  %loadMem1_406c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406c98 = call %struct.Memory* @routine_callq_.popgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406c98, i64 28872, i64 5, i64 5)
  store %struct.Memory* %call1_406c98, %struct.Memory** %MEMORY

  %loadMem2_406c98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406c98 = load i64, i64* %3
  %call2_406c98 = call %struct.Memory* @sub_40dd60.popgo(%struct.State* %0, i64  %loadPC_406c98, %struct.Memory* %loadMem2_406c98)
  store %struct.Memory* %call2_406c98, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406c8a	 RIP: 406c9d	 Bytes: 5
  %loadMem_406c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406c9d = call %struct.Memory* @routine_jmpq_.L_406c8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406c9d, i64 -19, i64 5)
  store %struct.Memory* %call_406c9d, %struct.Memory** %MEMORY

  br label %block_.L_406c8a

  ; Code: .L_406ca2:	 RIP: 406ca2	 Bytes: 0
block_.L_406ca2:

  ; Code: cmpl $0x0, -0x1f84(%rbp)	 RIP: 406ca2	 Bytes: 7
  %loadMem_406ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ca2 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ca2)
  store %struct.Memory* %call_406ca2, %struct.Memory** %MEMORY

  ; Code: jne .L_406cb4	 RIP: 406ca9	 Bytes: 6
  %loadMem_406ca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ca9 = call %struct.Memory* @routine_jne_.L_406cb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ca9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406ca9, %struct.Memory** %MEMORY

  %loadBr_406ca9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406ca9 = icmp eq i8 %loadBr_406ca9, 1
  br i1 %cmpBr_406ca9, label %block_.L_406cb4, label %block_406caf

block_406caf:
  ; Code: jmpq .L_406daf	 RIP: 406caf	 Bytes: 5
  %loadMem_406caf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406caf = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406caf, i64 256, i64 5)
  store %struct.Memory* %call_406caf, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406cb4:	 RIP: 406cb4	 Bytes: 0
block_.L_406cb4:

  ; Code: cmpl $0x0, -0x2a84(%rbp)	 RIP: 406cb4	 Bytes: 7
  %loadMem_406cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cb4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cb4)
  store %struct.Memory* %call_406cb4, %struct.Memory** %MEMORY

  ; Code: jne .L_406cdd	 RIP: 406cbb	 Bytes: 6
  %loadMem_406cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cbb = call %struct.Memory* @routine_jne_.L_406cdd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cbb, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_406cbb, %struct.Memory** %MEMORY

  %loadBr_406cbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406cbb = icmp eq i8 %loadBr_406cbb, 1
  br i1 %cmpBr_406cbb, label %block_.L_406cdd, label %block_406cc1

block_406cc1:
  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406cc1	 Bytes: 6
  %loadMem_406cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cc1 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cc1)
  store %struct.Memory* %call_406cc1, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 406cc7	 Bytes: 3
  %loadMem_406cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cc7 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cc7)
  store %struct.Memory* %call_406cc7, %struct.Memory** %MEMORY

  ; Code: callq .is_self_atari	 RIP: 406cca	 Bytes: 5
  %loadMem1_406cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406cca = call %struct.Memory* @routine_callq_.is_self_atari(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406cca, i64 54742, i64 5, i64 5)
  store %struct.Memory* %call1_406cca, %struct.Memory** %MEMORY

  %loadMem2_406cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406cca = load i64, i64* %3
  %call2_406cca = call %struct.Memory* @sub_4142a0.is_self_atari(%struct.State* %0, i64  %loadPC_406cca, %struct.Memory* %loadMem2_406cca)
  store %struct.Memory* %call2_406cca, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406ccf	 Bytes: 3
  %loadMem_406ccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ccf = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ccf)
  store %struct.Memory* %call_406ccf, %struct.Memory** %MEMORY

  ; Code: je .L_406cdd	 RIP: 406cd2	 Bytes: 6
  %loadMem_406cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cd2 = call %struct.Memory* @routine_je_.L_406cdd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cd2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406cd2, %struct.Memory** %MEMORY

  %loadBr_406cd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406cd2 = icmp eq i8 %loadBr_406cd2, 1
  br i1 %cmpBr_406cd2, label %block_.L_406cdd, label %block_406cd8

block_406cd8:
  ; Code: jmpq .L_406daf	 RIP: 406cd8	 Bytes: 5
  %loadMem_406cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cd8 = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cd8, i64 215, i64 5)
  store %struct.Memory* %call_406cd8, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406cdd:	 RIP: 406cdd	 Bytes: 0
block_.L_406cdd:

  ; Code: xorl %eax, %eax	 RIP: 406cdd	 Bytes: 2
  %loadMem_406cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cdd = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cdd)
  store %struct.Memory* %call_406cdd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 406cdf	 Bytes: 2
  %loadMem_406cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cdf = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cdf)
  store %struct.Memory* %call_406cdf, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406ce1	 Bytes: 6
  %loadMem_406ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ce1 = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ce1)
  store %struct.Memory* %call_406ce1, %struct.Memory** %MEMORY

  ; Code: movl -0x2a7c(%rbp), %esi	 RIP: 406ce7	 Bytes: 6
  %loadMem_406ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ce7 = call %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ce7)
  store %struct.Memory* %call_406ce7, %struct.Memory** %MEMORY

  ; Code: callq .owl_does_attack	 RIP: 406ced	 Bytes: 5
  %loadMem1_406ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406ced = call %struct.Memory* @routine_callq_.owl_does_attack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406ced, i64 286275, i64 5, i64 5)
  store %struct.Memory* %call1_406ced, %struct.Memory** %MEMORY

  %loadMem2_406ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406ced = load i64, i64* %3
  %call2_406ced = call %struct.Memory* @sub_44cb30.owl_does_attack(%struct.State* %0, i64  %loadPC_406ced, %struct.Memory* %loadMem2_406ced)
  store %struct.Memory* %call2_406ced, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, %eax	 RIP: 406cf2	 Bytes: 3
  %loadMem_406cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cf2 = call %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cf2)
  store %struct.Memory* %call_406cf2, %struct.Memory** %MEMORY

  ; Code: jne .L_406daa	 RIP: 406cf5	 Bytes: 6
  %loadMem_406cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cf5 = call %struct.Memory* @routine_jne_.L_406daa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cf5, i8* %BRANCH_TAKEN, i64 181, i64 6, i64 6)
  store %struct.Memory* %call_406cf5, %struct.Memory** %MEMORY

  %loadBr_406cf5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406cf5 = icmp eq i8 %loadBr_406cf5, 1
  br i1 %cmpBr_406cf5, label %block_.L_406daa, label %block_406cfb

block_406cfb:
  ; Code: cmpl $0x0, -0x2a80(%rbp)	 RIP: 406cfb	 Bytes: 7
  %loadMem_406cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406cfb = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2a80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406cfb)
  store %struct.Memory* %call_406cfb, %struct.Memory** %MEMORY

  ; Code: je .L_406d2b	 RIP: 406d02	 Bytes: 6
  %loadMem_406d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d02 = call %struct.Memory* @routine_je_.L_406d2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d02, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_406d02, %struct.Memory** %MEMORY

  %loadBr_406d02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d02 = icmp eq i8 %loadBr_406d02, 1
  br i1 %cmpBr_406d02, label %block_.L_406d2b, label %block_406d08

block_406d08:
  ; Code: xorl %eax, %eax	 RIP: 406d08	 Bytes: 2
  %loadMem_406d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d08 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d08)
  store %struct.Memory* %call_406d08, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 406d0a	 Bytes: 2
  %loadMem_406d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d0a = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d0a)
  store %struct.Memory* %call_406d0a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406d0c	 Bytes: 6
  %loadMem_406d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d0c = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d0c)
  store %struct.Memory* %call_406d0c, %struct.Memory** %MEMORY

  ; Code: movl -0x2a80(%rbp), %esi	 RIP: 406d12	 Bytes: 6
  %loadMem_406d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d12 = call %struct.Memory* @routine_movl_MINUS0x2a80__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d12)
  store %struct.Memory* %call_406d12, %struct.Memory** %MEMORY

  ; Code: callq .owl_does_defend	 RIP: 406d18	 Bytes: 5
  %loadMem1_406d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406d18 = call %struct.Memory* @routine_callq_.owl_does_defend(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406d18, i64 284328, i64 5, i64 5)
  store %struct.Memory* %call1_406d18, %struct.Memory** %MEMORY

  %loadMem2_406d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406d18 = load i64, i64* %3
  %call2_406d18 = call %struct.Memory* @sub_44c3c0.owl_does_defend(%struct.State* %0, i64  %loadPC_406d18, %struct.Memory* %loadMem2_406d18)
  store %struct.Memory* %call2_406d18, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406d1d	 Bytes: 3
  %loadMem_406d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d1d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d1d)
  store %struct.Memory* %call_406d1d, %struct.Memory** %MEMORY

  ; Code: jne .L_406d2b	 RIP: 406d20	 Bytes: 6
  %loadMem_406d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d20 = call %struct.Memory* @routine_jne_.L_406d2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d20, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406d20, %struct.Memory** %MEMORY

  %loadBr_406d20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d20 = icmp eq i8 %loadBr_406d20, 1
  br i1 %cmpBr_406d20, label %block_.L_406d2b, label %block_406d26

block_406d26:
  ; Code: jmpq .L_406daf	 RIP: 406d26	 Bytes: 5
  %loadMem_406d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d26 = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d26, i64 137, i64 5)
  store %struct.Memory* %call_406d26, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406d2b:	 RIP: 406d2b	 Bytes: 0
block_.L_406d2b:

  ; Code: cmpl $0x0, -0x2a84(%rbp)	 RIP: 406d2b	 Bytes: 7
  %loadMem_406d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d2b = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2a84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d2b)
  store %struct.Memory* %call_406d2b, %struct.Memory** %MEMORY

  ; Code: jne .L_406d5b	 RIP: 406d32	 Bytes: 6
  %loadMem_406d32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d32 = call %struct.Memory* @routine_jne_.L_406d5b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d32, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_406d32, %struct.Memory** %MEMORY

  %loadBr_406d32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d32 = icmp eq i8 %loadBr_406d32, 1
  br i1 %cmpBr_406d32, label %block_.L_406d5b, label %block_406d38

block_406d38:
  ; Code: xorl %eax, %eax	 RIP: 406d38	 Bytes: 2
  %loadMem_406d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d38 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d38)
  store %struct.Memory* %call_406d38, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 406d3a	 Bytes: 2
  %loadMem_406d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d3a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d3a)
  store %struct.Memory* %call_406d3a, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %edi	 RIP: 406d3c	 Bytes: 6
  %loadMem_406d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d3c = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d3c)
  store %struct.Memory* %call_406d3c, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 406d42	 Bytes: 3
  %loadMem_406d42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d42 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d42)
  store %struct.Memory* %call_406d42, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 406d45	 Bytes: 3
  %loadMem_406d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d45 = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d45)
  store %struct.Memory* %call_406d45, %struct.Memory** %MEMORY

  ; Code: callq .confirm_safety	 RIP: 406d48	 Bytes: 5
  %loadMem1_406d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406d48 = call %struct.Memory* @routine_callq_.confirm_safety(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406d48, i64 468872, i64 5, i64 5)
  store %struct.Memory* %call1_406d48, %struct.Memory** %MEMORY

  %loadMem2_406d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406d48 = load i64, i64* %3
  %call2_406d48 = call %struct.Memory* @sub_4794d0.confirm_safety(%struct.State* %0, i64  %loadPC_406d48, %struct.Memory* %loadMem2_406d48)
  store %struct.Memory* %call2_406d48, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406d4d	 Bytes: 3
  %loadMem_406d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d4d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d4d)
  store %struct.Memory* %call_406d4d, %struct.Memory** %MEMORY

  ; Code: jne .L_406d5b	 RIP: 406d50	 Bytes: 6
  %loadMem_406d50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d50 = call %struct.Memory* @routine_jne_.L_406d5b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d50, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406d50, %struct.Memory** %MEMORY

  %loadBr_406d50 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d50 = icmp eq i8 %loadBr_406d50, 1
  br i1 %cmpBr_406d50, label %block_.L_406d5b, label %block_406d56

block_406d56:
  ; Code: jmpq .L_406daf	 RIP: 406d56	 Bytes: 5
  %loadMem_406d56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d56 = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d56, i64 89, i64 5)
  store %struct.Memory* %call_406d56, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406d5b:	 RIP: 406d5b	 Bytes: 0
block_.L_406d5b:

  ; Code: movl -0x1f84(%rbp), %eax	 RIP: 406d5b	 Bytes: 6
  %loadMem_406d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d5b = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d5b)
  store %struct.Memory* %call_406d5b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 406d61	 Bytes: 4
  %loadMem_406d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d61 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d61)
  store %struct.Memory* %call_406d61, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 406d65	 Bytes: 2
  %loadMem_406d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d65 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d65)
  store %struct.Memory* %call_406d65, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %eax	 RIP: 406d67	 Bytes: 7
  %loadMem_406d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d67 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d67)
  store %struct.Memory* %call_406d67, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %eax	 RIP: 406d6e	 Bytes: 5
  %loadMem_406d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d6e = call %struct.Memory* @routine_andl__0x20000___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d6e)
  store %struct.Memory* %call_406d6e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406d73	 Bytes: 3
  %loadMem_406d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d73 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d73)
  store %struct.Memory* %call_406d73, %struct.Memory** %MEMORY

  ; Code: jne .L_406d81	 RIP: 406d76	 Bytes: 6
  %loadMem_406d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d76 = call %struct.Memory* @routine_jne_.L_406d81(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d76, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406d76, %struct.Memory** %MEMORY

  %loadBr_406d76 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406d76 = icmp eq i8 %loadBr_406d76, 1
  br i1 %cmpBr_406d76, label %block_.L_406d81, label %block_406d7c

block_406d7c:
  ; Code: jmpq .L_406d9e	 RIP: 406d7c	 Bytes: 5
  %loadMem_406d7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d7c = call %struct.Memory* @routine_jmpq_.L_406d9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d7c, i64 34, i64 5)
  store %struct.Memory* %call_406d7c, %struct.Memory** %MEMORY

  br label %block_.L_406d9e

  ; Code: .L_406d81:	 RIP: 406d81	 Bytes: 0
block_.L_406d81:

  ; Code: movq $0x579ed7, %rdi	 RIP: 406d81	 Bytes: 10
  %loadMem_406d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d81 = call %struct.Memory* @routine_movq__0x579ed7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d81)
  store %struct.Memory* %call_406d81, %struct.Memory** %MEMORY

  ; Code: movl -0x1f84(%rbp), %esi	 RIP: 406d8b	 Bytes: 6
  %loadMem_406d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d8b = call %struct.Memory* @routine_movl_MINUS0x1f84__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d8b)
  store %struct.Memory* %call_406d8b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 406d91	 Bytes: 2
  %loadMem_406d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d91 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d91)
  store %struct.Memory* %call_406d91, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 406d93	 Bytes: 5
  %loadMem1_406d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406d93 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406d93, i64 307229, i64 5, i64 5)
  store %struct.Memory* %call1_406d93, %struct.Memory** %MEMORY

  %loadMem2_406d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406d93 = load i64, i64* %3
  %call2_406d93 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_406d93, %struct.Memory* %loadMem2_406d93)
  store %struct.Memory* %call2_406d93, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b04(%rbp)	 RIP: 406d98	 Bytes: 6
  %loadMem_406d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d98 = call %struct.Memory* @routine_movl__eax__MINUS0x2b04__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d98)
  store %struct.Memory* %call_406d98, %struct.Memory** %MEMORY

  ; Code: .L_406d9e:	 RIP: 406d9e	 Bytes: 0
  br label %block_.L_406d9e
block_.L_406d9e:

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 406d9e	 Bytes: 7
  %loadMem_406d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406d9e = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406d9e)
  store %struct.Memory* %call_406d9e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 406da5	 Bytes: 5
  %loadMem_406da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406da5 = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406da5, i64 459, i64 5)
  store %struct.Memory* %call_406da5, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_406daa:	 RIP: 406daa	 Bytes: 0
block_.L_406daa:

  ; Code: jmpq .L_406daf	 RIP: 406daa	 Bytes: 5
  %loadMem_406daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406daa = call %struct.Memory* @routine_jmpq_.L_406daf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406daa, i64 5, i64 5)
  store %struct.Memory* %call_406daa, %struct.Memory** %MEMORY

  br label %block_.L_406daf

  ; Code: .L_406daf:	 RIP: 406daf	 Bytes: 0
block_.L_406daf:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406daf	 Bytes: 6
  %loadMem_406daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406daf = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406daf)
  store %struct.Memory* %call_406daf, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406db5	 Bytes: 3
  %loadMem_406db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406db5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406db5)
  store %struct.Memory* %call_406db5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 406db8	 Bytes: 6
  %loadMem_406db8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406db8 = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406db8)
  store %struct.Memory* %call_406db8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406952	 RIP: 406dbe	 Bytes: 5
  %loadMem_406dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dbe = call %struct.Memory* @routine_jmpq_.L_406952(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dbe, i64 -1132, i64 5)
  store %struct.Memory* %call_406dbe, %struct.Memory** %MEMORY

  br label %block_.L_406952

  ; Code: .L_406dc3:	 RIP: 406dc3	 Bytes: 0
block_.L_406dc3:

  ; Code: movl $0x15, -0x1f88(%rbp)	 RIP: 406dc3	 Bytes: 10
  %loadMem_406dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dc3 = call %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dc3)
  store %struct.Memory* %call_406dc3, %struct.Memory** %MEMORY

  ; Code: .L_406dcd:	 RIP: 406dcd	 Bytes: 0
  br label %block_.L_406dcd
block_.L_406dcd:

  ; Code: cmpl $0x190, -0x1f88(%rbp)	 RIP: 406dcd	 Bytes: 10
  %loadMem_406dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dcd = call %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dcd)
  store %struct.Memory* %call_406dcd, %struct.Memory** %MEMORY

  ; Code: jge .L_406f69	 RIP: 406dd7	 Bytes: 6
  %loadMem_406dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dd7 = call %struct.Memory* @routine_jge_.L_406f69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dd7, i8* %BRANCH_TAKEN, i64 402, i64 6, i64 6)
  store %struct.Memory* %call_406dd7, %struct.Memory** %MEMORY

  %loadBr_406dd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406dd7 = icmp eq i8 %loadBr_406dd7, 1
  br i1 %cmpBr_406dd7, label %block_.L_406f69, label %block_406ddd

block_406ddd:
  ; Code: movslq -0x1f88(%rbp), %rax	 RIP: 406ddd	 Bytes: 7
  %loadMem_406ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ddd = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ddd)
  store %struct.Memory* %call_406ddd, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 406de4	 Bytes: 8
  %loadMem_406de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406de4 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406de4)
  store %struct.Memory* %call_406de4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %ecx	 RIP: 406dec	 Bytes: 3
  %loadMem_406dec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dec = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dec)
  store %struct.Memory* %call_406dec, %struct.Memory** %MEMORY

  ; Code: jne .L_406f50	 RIP: 406def	 Bytes: 6
  %loadMem_406def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406def = call %struct.Memory* @routine_jne_.L_406f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406def, i8* %BRANCH_TAKEN, i64 353, i64 6, i64 6)
  store %struct.Memory* %call_406def, %struct.Memory** %MEMORY

  %loadBr_406def = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406def = icmp eq i8 %loadBr_406def, 1
  br i1 %cmpBr_406def, label %block_.L_406f50, label %block_406df5

block_406df5:
  ; Code: movq $0xb0eff0, %rax	 RIP: 406df5	 Bytes: 10
  %loadMem_406df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406df5 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406df5)
  store %struct.Memory* %call_406df5, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406dff	 Bytes: 7
  %loadMem_406dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406dff = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406dff)
  store %struct.Memory* %call_406dff, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 406e06	 Bytes: 7
  %loadMem_406e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e06 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e06)
  store %struct.Memory* %call_406e06, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406e0d	 Bytes: 3
  %loadMem_406e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e0d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e0d)
  store %struct.Memory* %call_406e0d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, 0x38(%rax)	 RIP: 406e10	 Bytes: 4
  %loadMem_406e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e10 = call %struct.Memory* @routine_cmpl__0x3__0x38__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e10)
  store %struct.Memory* %call_406e10, %struct.Memory** %MEMORY

  ; Code: je .L_406e24	 RIP: 406e14	 Bytes: 6
  %loadMem_406e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e14 = call %struct.Memory* @routine_je_.L_406e24(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e14, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_406e14, %struct.Memory** %MEMORY

  %loadBr_406e14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e14 = icmp eq i8 %loadBr_406e14, 1
  br i1 %cmpBr_406e14, label %block_.L_406e24, label %block_406e1a

block_406e1a:
  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 406e1a	 Bytes: 4
  %loadMem_406e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e1a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e1a)
  store %struct.Memory* %call_406e1a, %struct.Memory** %MEMORY

  ; Code: je .L_406f50	 RIP: 406e1e	 Bytes: 6
  %loadMem_406e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e1e = call %struct.Memory* @routine_je_.L_406f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e1e, i8* %BRANCH_TAKEN, i64 306, i64 6, i64 6)
  store %struct.Memory* %call_406e1e, %struct.Memory** %MEMORY

  %loadBr_406e1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e1e = icmp eq i8 %loadBr_406e1e, 1
  br i1 %cmpBr_406e1e, label %block_.L_406f50, label %block_.L_406e24

  ; Code: .L_406e24:	 RIP: 406e24	 Bytes: 0
block_.L_406e24:

  ; Code: movq $0xb4bd20, %rax	 RIP: 406e24	 Bytes: 10
  %loadMem_406e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e24 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e24)
  store %struct.Memory* %call_406e24, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 406e2e	 Bytes: 8
  %loadMem_406e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e2e = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e2e)
  store %struct.Memory* %call_406e2e, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rdx	 RIP: 406e36	 Bytes: 7
  %loadMem_406e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e36 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e36)
  store %struct.Memory* %call_406e36, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 406e3d	 Bytes: 4
  %loadMem_406e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e3d = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e3d)
  store %struct.Memory* %call_406e3d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 406e41	 Bytes: 3
  %loadMem_406e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e41 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e41)
  store %struct.Memory* %call_406e41, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 406e44	 Bytes: 4
  %loadMem_406e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e44 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e44)
  store %struct.Memory* %call_406e44, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406e48	 Bytes: 4
  %loadMem_406e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e48 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e48)
  store %struct.Memory* %call_406e48, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 406e4c	 Bytes: 3
  %loadMem_406e4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e4c = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e4c)
  store %struct.Memory* %call_406e4c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x3c(%rcx)	 RIP: 406e4f	 Bytes: 4
  %loadMem_406e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e4f = call %struct.Memory* @routine_cmpl__0x0__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e4f)
  store %struct.Memory* %call_406e4f, %struct.Memory** %MEMORY

  ; Code: je .L_406e8e	 RIP: 406e53	 Bytes: 6
  %loadMem_406e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e53 = call %struct.Memory* @routine_je_.L_406e8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e53, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_406e53, %struct.Memory** %MEMORY

  %loadBr_406e53 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e53 = icmp eq i8 %loadBr_406e53, 1
  br i1 %cmpBr_406e53, label %block_.L_406e8e, label %block_406e59

block_406e59:
  ; Code: movq $0xb4bd20, %rax	 RIP: 406e59	 Bytes: 10
  %loadMem_406e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e59 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e59)
  store %struct.Memory* %call_406e59, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 406e63	 Bytes: 8
  %loadMem_406e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e63 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e63)
  store %struct.Memory* %call_406e63, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rdx	 RIP: 406e6b	 Bytes: 7
  %loadMem_406e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e6b = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e6b)
  store %struct.Memory* %call_406e6b, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 406e72	 Bytes: 4
  %loadMem_406e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e72 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e72)
  store %struct.Memory* %call_406e72, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 406e76	 Bytes: 3
  %loadMem_406e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e76 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e76)
  store %struct.Memory* %call_406e76, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 406e79	 Bytes: 4
  %loadMem_406e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e79 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e79)
  store %struct.Memory* %call_406e79, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 406e7d	 Bytes: 4
  %loadMem_406e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e7d = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e7d)
  store %struct.Memory* %call_406e7d, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 406e81	 Bytes: 3
  %loadMem_406e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e81 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e81)
  store %struct.Memory* %call_406e81, %struct.Memory** %MEMORY

  ; Code: cmpl $0x6, 0x3c(%rcx)	 RIP: 406e84	 Bytes: 4
  %loadMem_406e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e84 = call %struct.Memory* @routine_cmpl__0x6__0x3c__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e84)
  store %struct.Memory* %call_406e84, %struct.Memory** %MEMORY

  ; Code: jne .L_406f50	 RIP: 406e88	 Bytes: 6
  %loadMem_406e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e88 = call %struct.Memory* @routine_jne_.L_406f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e88, i8* %BRANCH_TAKEN, i64 200, i64 6, i64 6)
  store %struct.Memory* %call_406e88, %struct.Memory** %MEMORY

  %loadBr_406e88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406e88 = icmp eq i8 %loadBr_406e88, 1
  br i1 %cmpBr_406e88, label %block_.L_406f50, label %block_.L_406e8e

  ; Code: .L_406e8e:	 RIP: 406e8e	 Bytes: 0
block_.L_406e8e:

  ; Code: movq $0xb0eff0, %rax	 RIP: 406e8e	 Bytes: 10
  %loadMem_406e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e8e = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e8e)
  store %struct.Memory* %call_406e8e, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406e98	 Bytes: 7
  %loadMem_406e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e98 = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e98)
  store %struct.Memory* %call_406e98, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 406e9f	 Bytes: 7
  %loadMem_406e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406e9f = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406e9f)
  store %struct.Memory* %call_406e9f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406ea6	 Bytes: 3
  %loadMem_406ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ea6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ea6)
  store %struct.Memory* %call_406ea6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x64(%rax)	 RIP: 406ea9	 Bytes: 4
  %loadMem_406ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ea9 = call %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ea9)
  store %struct.Memory* %call_406ea9, %struct.Memory** %MEMORY

  ; Code: je .L_406f50	 RIP: 406ead	 Bytes: 6
  %loadMem_406ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ead = call %struct.Memory* @routine_je_.L_406f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ead, i8* %BRANCH_TAKEN, i64 163, i64 6, i64 6)
  store %struct.Memory* %call_406ead, %struct.Memory** %MEMORY

  %loadBr_406ead = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406ead = icmp eq i8 %loadBr_406ead, 1
  br i1 %cmpBr_406ead, label %block_.L_406f50, label %block_406eb3

block_406eb3:
  ; Code: movq $0xb0eff0, %rax	 RIP: 406eb3	 Bytes: 10
  %loadMem_406eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406eb3 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406eb3)
  store %struct.Memory* %call_406eb3, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406ebd	 Bytes: 7
  %loadMem_406ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ebd = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ebd)
  store %struct.Memory* %call_406ebd, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 406ec4	 Bytes: 7
  %loadMem_406ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ec4 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ec4)
  store %struct.Memory* %call_406ec4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406ecb	 Bytes: 3
  %loadMem_406ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ecb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ecb)
  store %struct.Memory* %call_406ecb, %struct.Memory** %MEMORY

  ; Code: movl 0x3c(%rax), %edi	 RIP: 406ece	 Bytes: 3
  %loadMem_406ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ece = call %struct.Memory* @routine_movl_0x3c__rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ece)
  store %struct.Memory* %call_406ece, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 406ed1	 Bytes: 3
  %loadMem_406ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ed1 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ed1)
  store %struct.Memory* %call_406ed1, %struct.Memory** %MEMORY

  ; Code: callq .is_illegal_ko_capture	 RIP: 406ed4	 Bytes: 5
  %loadMem1_406ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406ed4 = call %struct.Memory* @routine_callq_.is_illegal_ko_capture(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406ed4, i64 32156, i64 5, i64 5)
  store %struct.Memory* %call1_406ed4, %struct.Memory** %MEMORY

  %loadMem2_406ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406ed4 = load i64, i64* %3
  %call2_406ed4 = call %struct.Memory* @sub_40ec70.is_illegal_ko_capture(%struct.State* %0, i64  %loadPC_406ed4, %struct.Memory* %loadMem2_406ed4)
  store %struct.Memory* %call2_406ed4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 406ed9	 Bytes: 3
  %loadMem_406ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ed9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ed9)
  store %struct.Memory* %call_406ed9, %struct.Memory** %MEMORY

  ; Code: jne .L_406f50	 RIP: 406edc	 Bytes: 6
  %loadMem_406edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406edc = call %struct.Memory* @routine_jne_.L_406f50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406edc, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_406edc, %struct.Memory** %MEMORY

  %loadBr_406edc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406edc = icmp eq i8 %loadBr_406edc, 1
  br i1 %cmpBr_406edc, label %block_.L_406f50, label %block_406ee2

block_406ee2:
  ; Code: movq $0xb0eff0, %rax	 RIP: 406ee2	 Bytes: 10
  %loadMem_406ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ee2 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ee2)
  store %struct.Memory* %call_406ee2, %struct.Memory** %MEMORY

  ; Code: movslq -0x1f88(%rbp), %rcx	 RIP: 406eec	 Bytes: 7
  %loadMem_406eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406eec = call %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406eec)
  store %struct.Memory* %call_406eec, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 406ef3	 Bytes: 7
  %loadMem_406ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406ef3 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406ef3)
  store %struct.Memory* %call_406ef3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406efa	 Bytes: 3
  %loadMem_406efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406efa = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406efa)
  store %struct.Memory* %call_406efa, %struct.Memory** %MEMORY

  ; Code: movl 0x3c(%rax), %edx	 RIP: 406efd	 Bytes: 3
  %loadMem_406efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406efd = call %struct.Memory* @routine_movl_0x3c__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406efd)
  store %struct.Memory* %call_406efd, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 406f00	 Bytes: 4
  %loadMem_406f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f00 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f00)
  store %struct.Memory* %call_406f00, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax)	 RIP: 406f04	 Bytes: 2
  %loadMem_406f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f04 = call %struct.Memory* @routine_movl__edx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f04)
  store %struct.Memory* %call_406f04, %struct.Memory** %MEMORY

  ; Code: movl 0xab0f24, %edx	 RIP: 406f06	 Bytes: 7
  %loadMem_406f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f06 = call %struct.Memory* @routine_movl_0xab0f24___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f06)
  store %struct.Memory* %call_406f06, %struct.Memory** %MEMORY

  ; Code: andl $0x20000, %edx	 RIP: 406f0d	 Bytes: 6
  %loadMem_406f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f0d = call %struct.Memory* @routine_andl__0x20000___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f0d)
  store %struct.Memory* %call_406f0d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 406f13	 Bytes: 3
  %loadMem_406f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f13 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f13)
  store %struct.Memory* %call_406f13, %struct.Memory** %MEMORY

  ; Code: jne .L_406f21	 RIP: 406f16	 Bytes: 6
  %loadMem_406f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f16 = call %struct.Memory* @routine_jne_.L_406f21(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f16, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_406f16, %struct.Memory** %MEMORY

  %loadBr_406f16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406f16 = icmp eq i8 %loadBr_406f16, 1
  br i1 %cmpBr_406f16, label %block_.L_406f21, label %block_406f1c

block_406f1c:
  ; Code: jmpq .L_406f44	 RIP: 406f1c	 Bytes: 5
  %loadMem_406f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f1c = call %struct.Memory* @routine_jmpq_.L_406f44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f1c, i64 40, i64 5)
  store %struct.Memory* %call_406f1c, %struct.Memory** %MEMORY

  br label %block_.L_406f44

  ; Code: .L_406f21:	 RIP: 406f21	 Bytes: 0
block_.L_406f21:

  ; Code: movq $0x579ef8, %rdi	 RIP: 406f21	 Bytes: 10
  %loadMem_406f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f21 = call %struct.Memory* @routine_movq__0x579ef8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f21)
  store %struct.Memory* %call_406f21, %struct.Memory** %MEMORY

  ; Code: movl -0x1f88(%rbp), %esi	 RIP: 406f2b	 Bytes: 6
  %loadMem_406f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f2b = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f2b)
  store %struct.Memory* %call_406f2b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 406f31	 Bytes: 4
  %loadMem_406f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f31 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f31)
  store %struct.Memory* %call_406f31, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 406f35	 Bytes: 2
  %loadMem_406f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f35 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f35)
  store %struct.Memory* %call_406f35, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 406f37	 Bytes: 2
  %loadMem_406f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f37 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f37)
  store %struct.Memory* %call_406f37, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 406f39	 Bytes: 5
  %loadMem1_406f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_406f39 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_406f39, i64 306807, i64 5, i64 5)
  store %struct.Memory* %call1_406f39, %struct.Memory** %MEMORY

  %loadMem2_406f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_406f39 = load i64, i64* %3
  %call2_406f39 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_406f39, %struct.Memory* %loadMem2_406f39)
  store %struct.Memory* %call2_406f39, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b08(%rbp)	 RIP: 406f3e	 Bytes: 6
  %loadMem_406f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f3e = call %struct.Memory* @routine_movl__eax__MINUS0x2b08__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f3e)
  store %struct.Memory* %call_406f3e, %struct.Memory** %MEMORY

  ; Code: .L_406f44:	 RIP: 406f44	 Bytes: 0
  br label %block_.L_406f44
block_.L_406f44:

  ; Code: movl $0x1, -0x4(%rbp)	 RIP: 406f44	 Bytes: 7
  %loadMem_406f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f44 = call %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f44)
  store %struct.Memory* %call_406f44, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406f70	 RIP: 406f4b	 Bytes: 5
  %loadMem_406f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f4b = call %struct.Memory* @routine_jmpq_.L_406f70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f4b, i64 37, i64 5)
  store %struct.Memory* %call_406f4b, %struct.Memory** %MEMORY

  br label %block_.L_406f70

  ; Code: .L_406f50:	 RIP: 406f50	 Bytes: 0
block_.L_406f50:

  ; Code: jmpq .L_406f55	 RIP: 406f50	 Bytes: 5
  %loadMem_406f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f50 = call %struct.Memory* @routine_jmpq_.L_406f55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f50, i64 5, i64 5)
  store %struct.Memory* %call_406f50, %struct.Memory** %MEMORY

  br label %block_.L_406f55

  ; Code: .L_406f55:	 RIP: 406f55	 Bytes: 0
block_.L_406f55:

  ; Code: movl -0x1f88(%rbp), %eax	 RIP: 406f55	 Bytes: 6
  %loadMem_406f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f55 = call %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f55)
  store %struct.Memory* %call_406f55, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406f5b	 Bytes: 3
  %loadMem_406f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f5b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f5b)
  store %struct.Memory* %call_406f5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f88(%rbp)	 RIP: 406f5e	 Bytes: 6
  %loadMem_406f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f5e = call %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f5e)
  store %struct.Memory* %call_406f5e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406dcd	 RIP: 406f64	 Bytes: 5
  %loadMem_406f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f64 = call %struct.Memory* @routine_jmpq_.L_406dcd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f64, i64 -407, i64 5)
  store %struct.Memory* %call_406f64, %struct.Memory** %MEMORY

  br label %block_.L_406dcd

  ; Code: .L_406f69:	 RIP: 406f69	 Bytes: 0
block_.L_406f69:

  ; Code: movl $0xffffffff, -0x4(%rbp)	 RIP: 406f69	 Bytes: 7
  %loadMem_406f69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f69 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f69)
  store %struct.Memory* %call_406f69, %struct.Memory** %MEMORY

  ; Code: .L_406f70:	 RIP: 406f70	 Bytes: 0
  br label %block_.L_406f70
block_.L_406f70:

  ; Code: movl -0x4(%rbp), %eax	 RIP: 406f70	 Bytes: 3
  %loadMem_406f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f70 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f70)
  store %struct.Memory* %call_406f70, %struct.Memory** %MEMORY

  ; Code: addq $0x2b10, %rsp	 RIP: 406f73	 Bytes: 7
  %loadMem_406f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f73 = call %struct.Memory* @routine_addq__0x2b10___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f73)
  store %struct.Memory* %call_406f73, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 406f7a	 Bytes: 1
  %loadMem_406f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f7a = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f7a)
  store %struct.Memory* %call_406f7a, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 406f7b	 Bytes: 1
  %loadMem_406f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406f7b = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406f7b)
  store %struct.Memory* %call_406f7b, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_406f7b
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x2b10___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 11024)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x12f0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x3___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 3)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdx__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x14__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 20
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1f78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8056
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8060
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8072
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.owl_hotspots(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x1930__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 6448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.reading_hotspots(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x15__MINUS0x1f88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8072
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 21)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x1f88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8072
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 400)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_404b75(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_404a51(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_404b61(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x14__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_404aa5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb0eff0_type* @G__0xb0eff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 380)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__0x34__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_404aa5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x0__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_404b57(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404b40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_404aec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0__0x38__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_404b29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_cmpl__0x1__0x38__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jmpq_.L_404b52(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 -1)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_jmpq_.L_404b5c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x1f88__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404a24(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8064
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8052
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_404d81(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_404d68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 -1)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_404d68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_404d63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8084
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x1f94__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404c15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_404d55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8064
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_404c3a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x1f94__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404d50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1648
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_cmpl_MINUS0x1f80__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8064
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_404cae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_404cae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1f80__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8064
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x670__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1648
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8056
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404ca9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8056
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404d4b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jle_.L_404d08(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_404d08(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8060
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404d03(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8060
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404d46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_404d41(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x1__MINUS0x1f74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8052
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jmpq_.L_404d63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404bd7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404d68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404d6d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_404b93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x1f80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8064
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8052
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404b7f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_404e40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_404e3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_404ddf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_404e27(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_404e0b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e1d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__0x1____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 1)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e22(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_404db2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404e40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xab0f24_type* @G_0xab0f24 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x20000___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 131072)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_405137(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8088
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1f98__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8088
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x7ae438_type* @G_0x7ae438 to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40505c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8092
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1f9c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8092
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_405031(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x14__MINUS0x1f98__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8088
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x15___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 21)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x1f9c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8092
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jle_.L_404eec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57f1e3___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x57f1e3_type* @G__0x57f1e3 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x99c0a0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x99c0a0_type* @G_0x99c0a0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1648
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2a90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10896
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405018(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_404f8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404f35(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579dc5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dc5_type* @G__0x579dc5 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.gprintf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2a94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10900
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404f85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404f69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579dc8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dc8_type* @G__0x579dc8 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2a98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10904
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404f80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579dcb___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dcb_type* @G__0x579dcb to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2a9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10908
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_405013(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_404fbe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579dce___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dce_type* @G__0x579dce to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2aa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10912
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40500e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_404ff2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579dd1___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dd1_type* @G__0x579dd1 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2aa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10916
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405009(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579dd4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dd4_type* @G__0x579dd4 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2aa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10920
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_40501d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x1f9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8092
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e7c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x586073___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x586073_type* @G__0x586073 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x2aac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10924
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x1f98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8088
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e5f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579dd7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dd7_type* @G__0x579dd7 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f78__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x2ab0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10928
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_4050b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579dec___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dec_type* @G__0x579dec to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1f78__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x670__rbp__rax_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1648
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movl__eax__MINUS0x2ab4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10932
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4050c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x2ab8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10936
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__0x579dfb___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579dfb_type* @G__0x579dfb to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f7c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8060
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x2abc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10940
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_40511b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x1f7c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8060
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__eax__MINUS0x2ac0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10944
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405132(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x2ac4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10948
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405137(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8080
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x5__MINUS0x1f8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8076
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_40542e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_405192(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_405197(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_40541a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 3)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.approxlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1fa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8096
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x3__MINUS0x1fa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8096
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4051c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.is_self_atari(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4051e2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_405415(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_0x7ae1b0___rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8053168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x1fa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8100
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2ac8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10952
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x2ac8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10952
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x1fa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8104
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f88__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x1fa4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_405402(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_addl_MINUS0x1fa8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_subl_MINUS0x1fa8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl_MINUS0x1fa0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8096
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1f88__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2acc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10956
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.countlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x2acc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10956
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_405323(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x1fa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8096
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_405402(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x2ad0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10960
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2ad0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10960
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addl_MINUS0x1fa4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x9__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_40539d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_cmpl__0x8__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0xddd5b__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xddd5b__rip__type* @G_0xddd5b__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movss_MINUS0x12f0__rbp__rax_4____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -4848
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %14, i64 %19)
  ret %struct.Memory* %22
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fadd float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addss_MINUS0x1930__rbp__rax_4____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -6448
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %14, i8* %15, i64 %20)
  ret %struct.Memory* %23
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fmul float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSS2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero32EfEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = tail call float @llvm.trunc.f32(float %7) #22
  %9 = tail call float @llvm.fabs.f32(float %8) #22
  %10 = fcmp ogt float %9, 0x41E0000000000000
  %11 = fptosi float %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttss2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSS2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero32EfEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1fac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8108
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1fac__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x1f8c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8076
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4053fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1fac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8076
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8080
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405402(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405407(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4051e9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_405155(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8080
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4054a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1f90__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8080
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.safe_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4054a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1f90__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8080
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jne_.L_405478(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_405495(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579e0b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579e0b_type* @G__0x579e0b to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f90__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8080
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x2ad4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10964
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_406f70(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_405666(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_40564d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_40564d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_405543(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_4055e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_40557a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_subl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_4055b1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_movl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x1fb0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.findlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2ad8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10968
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.countstones(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jg_.L_405630(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1fb0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_405648(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1fb0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40564d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405652(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4054ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_405680(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_405b0b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_40569e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1f78__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4056aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x1f7c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8060
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x1f84__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 2)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_405a31(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x190___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 400)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x2140__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0__MINUS0x2141__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8513
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1f8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8076
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1f84__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_405a25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8520
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x214c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8524
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_je_.L_40574c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1__MINUS0x670__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1648
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 1)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_405751(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_405a11(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x2141__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8513
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i8
  %7 = trunc i64 %4 to i8
  %8 = add i8 %7, %6
  store i8 %8, i8* %2, align 1
  %9 = icmp ult i8 %8, %6
  %10 = icmp ult i8 %8, %7
  %11 = or i1 %9, %10
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = zext i8 %8 to i32
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = trunc i64 %20 to i8
  %22 = xor i8 %21, %8
  %23 = lshr i8 %22, 4
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i8 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i8 %8, 7
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %6, 7
  %32 = lshr i8 %7, 7
  %33 = xor i8 %29, %31
  %34 = xor i8 %29, %32
  %35 = add   i8 %33, %34
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %11, i64 1)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al__MINUS0x2141__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8513
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}






define %struct.Memory* @routine_jge_.L_4059af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x2150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8528
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_4057a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4059a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x2150__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4057cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x2148__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 -1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8520
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40599c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_4057f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_405997(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl_MINUS0x2140__rbp__rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -8512
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movsbl_MINUS0x2141__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8513
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_40582b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_405992(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_4058ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x214c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8524
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl__0x7___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 7)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x2150__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_40587f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_cmpl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_4058a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jge_.L_4058c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jge_.L_4058e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_405979(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xf1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 241)
  ret %struct.Memory* %11
}














define %struct.Memory* @routine_movl__eax__MINUS0x2adc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10972
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2adc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10972
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x2154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8532
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_cmpl__0x0__MINUS0x2154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_405958(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jle_.L_405974(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_leaq_MINUS0x2140__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_callq_.mark_string(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_405766(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_callq_.is_suicide(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4059d5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x214c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8524
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_405a0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl_MINUS0x1f8c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8076
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_405a0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jmpq_.L_4056fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_405a36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jle_.L_405af3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_405aee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x2158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x2158__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_405adb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x2158__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_405adb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x2158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_405aee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405ae0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405a52(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jge_.L_40640d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x215c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8544
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8548
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8552
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x216c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8556
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x3__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -3248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}








define %struct.Memory* @routine_jne_.L_405baa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_405baf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4063f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x640___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1600)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_leaq_MINUS0x27c0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_cmpl__0x8__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_406135(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x27c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_405c0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406127(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_405c42(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_405c3d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x215c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8540
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x215c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8540
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jne_.L_405dc3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 76)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x27c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10184
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jge_.L_405cf3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x1__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_405cb6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_406135(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x27c8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x27c0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -10176
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_405ce9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x2168__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8552
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8552
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405cee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405cf3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_405dac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0__0x40__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0x2174__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8564
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jge_.L_405d7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x27c4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jg_.L_405d7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jl_.L_405d7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jge_.L_405da7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_405da7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_405dac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x1__MINUS0x27c0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -10176
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 1)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_406122(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_40611d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x27c4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1f70__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -8048
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_cmpl__0x3__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_405e28(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__0x1__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movslq_MINUS0x27c4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jne_.L_405e67(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x9__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jge_.L_406109(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x27cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10188
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x27cc__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jne_.L_405f47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x216c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x216c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x27cc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_405edc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_405f35(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x5___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 5)
  ret %struct.Memory* %11
}














define %struct.Memory* @routine_movl__eax__MINUS0x2ae0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10976
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2ae0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_subl__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 5)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jg_.L_4060f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x27d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x27d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x27d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x27d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40607f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x27d0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x7ae1b0___rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8053168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1f80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8064
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x27cc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1f80__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8064
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__ecx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_405fbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_40606b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x27cc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x1f80__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8064
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jne_.L_406018(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__0x1__MINUS0x27d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_406066(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_406061(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__0x1__MINUS0x27d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movl_MINUS0x27d0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x27d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_405f79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jle_.L_4060f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x0__MINUS0x27d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4060eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x0__MINUS0x27d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10200
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4060e6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_4060eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4060f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4060f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x2160__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8544
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_406118(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x2164__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8548
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_40611d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jmpq_.L_405bce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_406171(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0__MINUS0x215c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addl_MINUS0x2164__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8548
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_406176(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x2174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40618d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x2174__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8564
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0xcb0__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -3248
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_cmpl__0x9__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_40623d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -3248
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x2160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8544
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4061fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x1__MINUS0x216c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8556
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_406238(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x215c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_406238(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x5___eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 5)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0xa___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 10)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_40626a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x215c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8540
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_406265(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_cmpl__0x1__MINUS0x2168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8552
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_406298(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_imull__0xa___eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 10)
  ret %struct.Memory* %16
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0xdcca8__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xdcca8__rip__type* @G_0xdcca8__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = fpext float %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x12f0__rbp__rax_4____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -4848
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %14, i64 %19)
  ret %struct.Memory* %22
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x27dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10204
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cvtss2sd_MINUS0x1930__rbp__rax_4____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -6448
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %14, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x27e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10208
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x27dc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x27e0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x27e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10212
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0xcb0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -3248
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jle_.L_40633c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -3248
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x27e4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10212
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jg_.L_40633c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_subl_MINUS0xcb0__rbp__rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -3248
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl__eax__MINUS0x27e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x27e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_je_.L_4063a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579e20___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579e20_type* @G__0x579e20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f88__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rax_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -3248
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl_MINUS0x27e0__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10208
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__eax__MINUS0x2ae4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10980
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_callq_.is_ko(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4063f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0xcb0__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -3248
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__eax__MINUS0x2ae8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10984
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2ae8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10984
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jmpq_.L_405b15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_406412(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jge_.L_4064ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_406492(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jle_.L_406492(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x1f8c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8076
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__ecx__MINUS0x1f84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_406497(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_406430(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4064bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406948(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x1f70__rbp__rax_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -8048
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__ecx__MINUS0x27e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10216
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.is_illegal_ko_capture(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_4065a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_4065a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x27e8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_je_.L_406587(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_movl_MINUS0x27e8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.owl_does_defend(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movq__rcx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.confirm_safety(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_4065bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_406943(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_movl__eax__MINUS0x27ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x1__MINUS0x27f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x5__MINUS0x27ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4068cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_406662(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_40664f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_cmpl_MINUS0x27ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 10220
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40664f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406662(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_406654(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4065f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jge_.L_4068c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x579e48___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x579e48_type* @G__0x579e48 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl_MINUS0x1f84__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x7ae1b0___r8_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.trymove(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4068c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x2a70__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10864
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.chainlinks(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2a74__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10868
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2a78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10872
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x2a78__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x2a74__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 10868
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4067b6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x2a70__rbp__rcx_4____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -10864
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %16)
  ret %struct.Memory* %19
}






define %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_40679d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rcx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -10864
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_callq_.find_defense(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb0eff0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb0eff0_type* @G__0xb0eff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x2a70__rbp__rsi_4____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -10864
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_imulq__0x17c___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 380)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0xb4__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 180
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_40679d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_406768(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406793(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579e54___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579e54_type* @G__0x579e54 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2a78__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rax_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -10864
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x1f84__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x2aec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10988
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0x27f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4067a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x2a78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10872
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4066c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.popgo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movb__cl__MINUS0x2aed__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10989
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_4067f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x27f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %AL)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__al__MINUS0x2aed__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10989
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x2aed__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10989
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = and i64 %3, %2
  %6 = trunc i64 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %5 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i8 %6, 7
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_406804(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4068bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_4068a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x2a70__rbp__rcx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -10864
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_callq_.owl_does_attack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_40686e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406899(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579e85___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579e85_type* @G__0x579e85 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movl__eax__MINUS0x2af4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10996
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_4068a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4067c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4068c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4068c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4068cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_4068ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_40693e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_406915(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406932(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579eb0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579eb0_type* @G__0x579eb0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1f84__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x2af8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 11000
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_jge_.L_406dc3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2a80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2a84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jne_.L_4069a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_4069a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406daf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2a7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10876
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_406ab9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x2a88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10888
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_4069f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406aab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_406aa6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_406aa6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_406a60(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_movslq_MINUS0x2a88__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_cmpl__0x5__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0x2a88__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2a7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10876
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_406ab9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_4069b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2a7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10876
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_406acb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x579ecb___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x579ecb_type* @G__0x579ecb to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jne_.L_406aff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x1__MINUS0x2a84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_406bba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_406ba7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_0x7ae1b0___rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}
















define %struct.Memory* @routine_je_.L_406ba7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x2a80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10880
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_406bba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_406bac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_406b10(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl__0x0__MINUS0x2a84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_406c85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406bd8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_406c62(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_leaq_MINUS0x2a8c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10892
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x2a8c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10892
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi__MINUS0x1f84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8068
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 10876
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x2afc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 11004
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2afc__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 11004
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x2afc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 11004
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x2b00__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 11008
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jne_.L_406c5d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406c62(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jne_.L_406c80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_406c85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_406c8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jle_.L_406ca2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_406cb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_406cdd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_406cdd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x2a7c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_406daa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2a80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 10880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_406d2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x2a80__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 10880
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_406d2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_406d5b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
































define %struct.Memory* @routine_jne_.L_406d81(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406d9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579ed7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579ed7_type* @G__0x579ed7 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x2b04__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 11012
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_jmpq_.L_406952(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_406f69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_406f50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x3__0x38__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_406e24(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_406f50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x1f88__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_cmpl__0x0__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_406e8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_cmpl__0x6__0x3c__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}
























define %struct.Memory* @routine_movl_0x3c__rax____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl_0x3c__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0xab0f24___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0xab0f24_type* @G_0xab0f24 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_andl__0x20000___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 131072)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_406f21(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_406f44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x579ef8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x579ef8_type* @G__0x579ef8 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movl__eax__MINUS0x2b08__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 11016
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jmpq_.L_406f55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_406dcd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x2b10___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 11024)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

