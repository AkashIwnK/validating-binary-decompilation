; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0xb88ab__rip__type = type <{ [8 x i8] }>
%G_0xb88ef__rip__type = type <{ [8 x i8] }>
%G_0xb8d2a__rip__type = type <{ [8 x i8] }>
%G_0xb8d2d__rip__type = type <{ [4 x i8] }>
%G_0xb8fda__rip__type = type <{ [4 x i8] }>
%G_0xb9011__rip__type = type <{ [4 x i8] }>
%G_0xb913f__rip__type = type <{ [4 x i8] }>
%G__0x7ae468_type = type <{ [8 x i8] }>
%G__0x7ae4c8_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0xb88ab__rip_ = global %G_0xb88ab__rip__type zeroinitializer
@G_0xb88ef__rip_ = global %G_0xb88ef__rip__type zeroinitializer
@G_0xb8d2a__rip_ = global %G_0xb8d2a__rip__type zeroinitializer
@G_0xb8d2d__rip_ = global %G_0xb8d2d__rip__type zeroinitializer
@G_0xb8fda__rip_ = global %G_0xb8fda__rip__type zeroinitializer
@G_0xb9011__rip_ = global %G_0xb9011__rip__type zeroinitializer
@G_0xb913f__rip_ = global %G_0xb913f__rip__type zeroinitializer
@G__0x7ae468 = global %G__0x7ae468_type zeroinitializer
@G__0x7ae4c8 = global %G__0x7ae4c8_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4e2860.gg_interpolate(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @value_territory(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_429d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_429d10, %struct.Memory** %MEMORY
  %loadMem_429d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i104 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i104
  %27 = load i64, i64* %PC.i103
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i103
  store i64 %26, i64* %RBP.i105, align 8
  store %struct.Memory* %loadMem_429d11, %struct.Memory** %MEMORY
  %loadMem_429d14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i152 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i152
  %36 = load i64, i64* %PC.i151
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i151
  %38 = sub i64 %35, 1744
  store i64 %38, i64* %RSP.i152, align 8
  %39 = icmp ult i64 %35, 1744
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 1744, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_429d14, %struct.Memory** %MEMORY
  %loadMem_429d1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i257
  %77 = sub i64 %76, 8
  %78 = load i64, i64* %RDI.i
  %79 = load i64, i64* %PC.i256
  %80 = add i64 %79, 4
  store i64 %80, i64* %PC.i256
  %81 = inttoptr i64 %77 to i64*
  store i64 %78, i64* %81
  store %struct.Memory* %loadMem_429d1b, %struct.Memory** %MEMORY
  %loadMem_429d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 15
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %87 to i64*
  %88 = load i64, i64* %RBP.i283
  %89 = sub i64 %88, 12
  %90 = load i64, i64* %PC.i282
  %91 = add i64 %90, 7
  store i64 %91, i64* %PC.i282
  %92 = inttoptr i64 %89 to i32*
  store i32 21, i32* %92
  store %struct.Memory* %loadMem_429d1f, %struct.Memory** %MEMORY
  br label %block_.L_429d26

block_.L_429d26:                                  ; preds = %block_.L_42a164, %entry
  %loadMem_429d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 33
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %95 to i64*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 15
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %98 to i64*
  %99 = load i64, i64* %RBP.i316
  %100 = sub i64 %99, 12
  %101 = load i64, i64* %PC.i315
  %102 = add i64 %101, 7
  store i64 %102, i64* %PC.i315
  %103 = inttoptr i64 %100 to i32*
  %104 = load i32, i32* %103
  %105 = sub i32 %104, 400
  %106 = icmp ult i32 %104, 400
  %107 = zext i1 %106 to i8
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %107, i8* %108, align 1
  %109 = and i32 %105, 255
  %110 = call i32 @llvm.ctpop.i32(i32 %109)
  %111 = trunc i32 %110 to i8
  %112 = and i8 %111, 1
  %113 = xor i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %113, i8* %114, align 1
  %115 = xor i32 %104, 400
  %116 = xor i32 %115, %105
  %117 = lshr i32 %116, 4
  %118 = trunc i32 %117 to i8
  %119 = and i8 %118, 1
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %119, i8* %120, align 1
  %121 = icmp eq i32 %105, 0
  %122 = zext i1 %121 to i8
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %122, i8* %123, align 1
  %124 = lshr i32 %105, 31
  %125 = trunc i32 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %125, i8* %126, align 1
  %127 = lshr i32 %104, 31
  %128 = xor i32 %124, %127
  %129 = add i32 %128, %127
  %130 = icmp eq i32 %129, 2
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %131, i8* %132, align 1
  store %struct.Memory* %loadMem_429d26, %struct.Memory** %MEMORY
  %loadMem_429d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 33
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %135 to i64*
  %136 = load i64, i64* %PC.i471
  %137 = add i64 %136, 1093
  %138 = load i64, i64* %PC.i471
  %139 = add i64 %138, 6
  %140 = load i64, i64* %PC.i471
  %141 = add i64 %140, 6
  store i64 %141, i64* %PC.i471
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %143 = load i8, i8* %142, align 1
  %144 = icmp ne i8 %143, 0
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %146 = load i8, i8* %145, align 1
  %147 = icmp ne i8 %146, 0
  %148 = xor i1 %144, %147
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %BRANCH_TAKEN, align 1
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %152 = select i1 %148, i64 %139, i64 %137
  store i64 %152, i64* %151, align 8
  store %struct.Memory* %loadMem_429d2d, %struct.Memory** %MEMORY
  %loadBr_429d2d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429d2d = icmp eq i8 %loadBr_429d2d, 1
  br i1 %cmpBr_429d2d, label %block_.L_42a172, label %block_429d33

block_429d33:                                     ; preds = %block_.L_429d26
  %loadMem_429d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 33
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 1
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %158 to i64*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %RBP.i492 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %RBP.i492
  %163 = sub i64 %162, 12
  %164 = load i64, i64* %PC.i490
  %165 = add i64 %164, 4
  store i64 %165, i64* %PC.i490
  %166 = inttoptr i64 %163 to i32*
  %167 = load i32, i32* %166
  %168 = sext i32 %167 to i64
  store i64 %168, i64* %RAX.i491, align 8
  store %struct.Memory* %loadMem_429d33, %struct.Memory** %MEMORY
  %loadMem_429d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 33
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 1
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %174 to i64*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 5
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RCX.i526 = bitcast %union.anon* %177 to i64*
  %178 = load i64, i64* %RAX.i525
  %179 = add i64 %178, 12099168
  %180 = load i64, i64* %PC.i524
  %181 = add i64 %180, 8
  store i64 %181, i64* %PC.i524
  %182 = inttoptr i64 %179 to i8*
  %183 = load i8, i8* %182
  %184 = zext i8 %183 to i64
  store i64 %184, i64* %RCX.i526, align 8
  store %struct.Memory* %loadMem_429d37, %struct.Memory** %MEMORY
  %loadMem_429d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 33
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %187 to i64*
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 5
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %ECX.i644 = bitcast %union.anon* %190 to i32*
  %191 = load i32, i32* %ECX.i644
  %192 = zext i32 %191 to i64
  %193 = load i64, i64* %PC.i643
  %194 = add i64 %193, 3
  store i64 %194, i64* %PC.i643
  %195 = sub i32 %191, 3
  %196 = icmp ult i32 %191, 3
  %197 = zext i1 %196 to i8
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %197, i8* %198, align 1
  %199 = and i32 %195, 255
  %200 = call i32 @llvm.ctpop.i32(i32 %199)
  %201 = trunc i32 %200 to i8
  %202 = and i8 %201, 1
  %203 = xor i8 %202, 1
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %203, i8* %204, align 1
  %205 = xor i64 3, %192
  %206 = trunc i64 %205 to i32
  %207 = xor i32 %206, %195
  %208 = lshr i32 %207, 4
  %209 = trunc i32 %208 to i8
  %210 = and i8 %209, 1
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %210, i8* %211, align 1
  %212 = icmp eq i32 %195, 0
  %213 = zext i1 %212 to i8
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %213, i8* %214, align 1
  %215 = lshr i32 %195, 31
  %216 = trunc i32 %215 to i8
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %216, i8* %217, align 1
  %218 = lshr i32 %191, 31
  %219 = xor i32 %215, %218
  %220 = add i32 %219, %218
  %221 = icmp eq i32 %220, 2
  %222 = zext i1 %221 to i8
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %222, i8* %223, align 1
  store %struct.Memory* %loadMem_429d3f, %struct.Memory** %MEMORY
  %loadMem_429d42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 33
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %PC.i845
  %228 = add i64 %227, 1053
  %229 = load i64, i64* %PC.i845
  %230 = add i64 %229, 6
  %231 = load i64, i64* %PC.i845
  %232 = add i64 %231, 6
  store i64 %232, i64* %PC.i845
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %234 = load i8, i8* %233, align 1
  store i8 %234, i8* %BRANCH_TAKEN, align 1
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %236 = icmp ne i8 %234, 0
  %237 = select i1 %236, i64 %228, i64 %230
  store i64 %237, i64* %235, align 8
  store %struct.Memory* %loadMem_429d42, %struct.Memory** %MEMORY
  %loadBr_429d42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429d42 = icmp eq i8 %loadBr_429d42, 1
  br i1 %cmpBr_429d42, label %block_.L_42a15f, label %block_429d48

block_429d48:                                     ; preds = %block_429d33
  %loadMem_429d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %239 = getelementptr inbounds %struct.GPR, %struct.GPR* %238, i32 0, i32 33
  %240 = getelementptr inbounds %struct.Reg, %struct.Reg* %239, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %240 to i64*
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %242 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %241, i64 0, i64 0
  %YMM0.i986 = bitcast %union.VectorReg* %242 to %"class.std::bitset"*
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %244 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %243, i64 0, i64 0
  %XMM0.i987 = bitcast %union.VectorReg* %244 to %union.vec128_t*
  %245 = bitcast %"class.std::bitset"* %YMM0.i986 to i8*
  %246 = bitcast %"class.std::bitset"* %YMM0.i986 to i8*
  %247 = bitcast %union.vec128_t* %XMM0.i987 to i8*
  %248 = load i64, i64* %PC.i985
  %249 = add i64 %248, 3
  store i64 %249, i64* %PC.i985
  %250 = bitcast i8* %246 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = getelementptr inbounds i8, i8* %246, i64 8
  %253 = bitcast i8* %252 to i64*
  %254 = load i64, i64* %253, align 1
  %255 = bitcast i8* %247 to i64*
  %256 = load i64, i64* %255, align 1
  %257 = getelementptr inbounds i8, i8* %247, i64 8
  %258 = bitcast i8* %257 to i64*
  %259 = load i64, i64* %258, align 1
  %260 = xor i64 %256, %251
  %261 = xor i64 %259, %254
  %262 = trunc i64 %260 to i32
  %263 = lshr i64 %260, 32
  %264 = trunc i64 %263 to i32
  %265 = bitcast i8* %245 to i32*
  store i32 %262, i32* %265, align 1
  %266 = getelementptr inbounds i8, i8* %245, i64 4
  %267 = bitcast i8* %266 to i32*
  store i32 %264, i32* %267, align 1
  %268 = trunc i64 %261 to i32
  %269 = getelementptr inbounds i8, i8* %245, i64 8
  %270 = bitcast i8* %269 to i32*
  store i32 %268, i32* %270, align 1
  %271 = lshr i64 %261, 32
  %272 = trunc i64 %271 to i32
  %273 = getelementptr inbounds i8, i8* %245, i64 12
  %274 = bitcast i8* %273 to i32*
  store i32 %272, i32* %274, align 1
  store %struct.Memory* %loadMem_429d48, %struct.Memory** %MEMORY
  %loadMem_429d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %280 to i64*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 15
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RBP.i1014 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RBP.i1014
  %285 = sub i64 %284, 12
  %286 = load i64, i64* %PC.i1012
  %287 = add i64 %286, 4
  store i64 %287, i64* %PC.i1012
  %288 = inttoptr i64 %285 to i32*
  %289 = load i32, i32* %288
  %290 = sext i32 %289 to i64
  store i64 %290, i64* %RAX.i1013, align 8
  store %struct.Memory* %loadMem_429d4b, %struct.Memory** %MEMORY
  %loadMem_429d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 1
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 15
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %299 to i64*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 0
  %XMM0.i1050 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = load i64, i64* %RBP.i1049
  %303 = load i64, i64* %RAX.i1048
  %304 = mul i64 %303, 4
  %305 = add i64 %302, -1632
  %306 = add i64 %305, %304
  %307 = bitcast %union.vec128_t* %XMM0.i1050 to i8*
  %308 = load i64, i64* %PC.i1047
  %309 = add i64 %308, 9
  store i64 %309, i64* %PC.i1047
  %310 = bitcast i8* %307 to <2 x float>*
  %311 = load <2 x float>, <2 x float>* %310, align 1
  %312 = extractelement <2 x float> %311, i32 0
  %313 = inttoptr i64 %306 to float*
  store float %312, float* %313
  store %struct.Memory* %loadMem_429d4f, %struct.Memory** %MEMORY
  %loadMem_429d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 33
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %316 to i64*
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 1
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %319 to i64*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 15
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %322 to i64*
  %323 = load i64, i64* %RBP.i1069
  %324 = sub i64 %323, 8
  %325 = load i64, i64* %PC.i1067
  %326 = add i64 %325, 4
  store i64 %326, i64* %PC.i1067
  %327 = inttoptr i64 %324 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %RAX.i1068, align 8
  store %struct.Memory* %loadMem_429d58, %struct.Memory** %MEMORY
  %loadMem_429d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 33
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %331 to i64*
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 5
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %334 to i64*
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %336 = getelementptr inbounds %struct.GPR, %struct.GPR* %335, i32 0, i32 15
  %337 = getelementptr inbounds %struct.Reg, %struct.Reg* %336, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %337 to i64*
  %338 = load i64, i64* %RBP.i1097
  %339 = sub i64 %338, 12
  %340 = load i64, i64* %PC.i1095
  %341 = add i64 %340, 4
  store i64 %341, i64* %PC.i1095
  %342 = inttoptr i64 %339 to i32*
  %343 = load i32, i32* %342
  %344 = sext i32 %343 to i64
  store i64 %344, i64* %RCX.i1096, align 8
  store %struct.Memory* %loadMem_429d5c, %struct.Memory** %MEMORY
  %loadMem_429d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 33
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %347 to i64*
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 1
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %350 to i64*
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %352 = getelementptr inbounds %struct.GPR, %struct.GPR* %351, i32 0, i32 5
  %353 = getelementptr inbounds %struct.Reg, %struct.Reg* %352, i32 0, i32 0
  %RCX.i1126 = bitcast %union.anon* %353 to i64*
  %354 = load i64, i64* %RAX.i1125
  %355 = load i64, i64* %RCX.i1126
  %356 = add i64 %355, %354
  %357 = load i64, i64* %PC.i1124
  %358 = add i64 %357, 4
  store i64 %358, i64* %PC.i1124
  %359 = inttoptr i64 %356 to i8*
  %360 = load i8, i8* %359
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %361, align 1
  %362 = zext i8 %360 to i32
  %363 = call i32 @llvm.ctpop.i32(i32 %362)
  %364 = trunc i32 %363 to i8
  %365 = and i8 %364, 1
  %366 = xor i8 %365, 1
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %366, i8* %367, align 1
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %368, align 1
  %369 = icmp eq i8 %360, 0
  %370 = zext i1 %369 to i8
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %370, i8* %371, align 1
  %372 = lshr i8 %360, 7
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %372, i8* %373, align 1
  %374 = lshr i8 %360, 7
  %375 = xor i8 %372, %374
  %376 = add i8 %375, %374
  %377 = icmp eq i8 %376, 2
  %378 = zext i1 %377 to i8
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %378, i8* %379, align 1
  store %struct.Memory* %loadMem_429d60, %struct.Memory** %MEMORY
  %loadMem_429d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 33
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %382 to i64*
  %383 = load i64, i64* %PC.i1159
  %384 = add i64 %383, 989
  %385 = load i64, i64* %PC.i1159
  %386 = add i64 %385, 6
  %387 = load i64, i64* %PC.i1159
  %388 = add i64 %387, 6
  store i64 %388, i64* %PC.i1159
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %390 = load i8, i8* %389, align 1
  %391 = icmp eq i8 %390, 0
  %392 = zext i1 %391 to i8
  store i8 %392, i8* %BRANCH_TAKEN, align 1
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %394 = select i1 %391, i64 %384, i64 %386
  store i64 %394, i64* %393, align 8
  store %struct.Memory* %loadMem_429d64, %struct.Memory** %MEMORY
  %loadBr_429d64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429d64 = icmp eq i8 %loadBr_429d64, 1
  br i1 %cmpBr_429d64, label %block_.L_42a141, label %block_429d6a

block_429d6a:                                     ; preds = %block_429d48
  %loadMem_429d6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 33
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %397 to i64*
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %398, i64 0, i64 0
  %YMM0.i1177 = bitcast %union.VectorReg* %399 to %"class.std::bitset"*
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %401 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %400, i64 0, i64 0
  %XMM0.i1178 = bitcast %union.VectorReg* %401 to %union.vec128_t*
  %402 = bitcast %"class.std::bitset"* %YMM0.i1177 to i8*
  %403 = bitcast %"class.std::bitset"* %YMM0.i1177 to i8*
  %404 = bitcast %union.vec128_t* %XMM0.i1178 to i8*
  %405 = load i64, i64* %PC.i1176
  %406 = add i64 %405, 3
  store i64 %406, i64* %PC.i1176
  %407 = bitcast i8* %403 to i64*
  %408 = load i64, i64* %407, align 1
  %409 = getelementptr inbounds i8, i8* %403, i64 8
  %410 = bitcast i8* %409 to i64*
  %411 = load i64, i64* %410, align 1
  %412 = bitcast i8* %404 to i64*
  %413 = load i64, i64* %412, align 1
  %414 = getelementptr inbounds i8, i8* %404, i64 8
  %415 = bitcast i8* %414 to i64*
  %416 = load i64, i64* %415, align 1
  %417 = xor i64 %413, %408
  %418 = xor i64 %416, %411
  %419 = trunc i64 %417 to i32
  %420 = lshr i64 %417, 32
  %421 = trunc i64 %420 to i32
  %422 = bitcast i8* %402 to i32*
  store i32 %419, i32* %422, align 1
  %423 = getelementptr inbounds i8, i8* %402, i64 4
  %424 = bitcast i8* %423 to i32*
  store i32 %421, i32* %424, align 1
  %425 = trunc i64 %418 to i32
  %426 = getelementptr inbounds i8, i8* %402, i64 8
  %427 = bitcast i8* %426 to i32*
  store i32 %425, i32* %427, align 1
  %428 = lshr i64 %418, 32
  %429 = trunc i64 %428 to i32
  %430 = getelementptr inbounds i8, i8* %402, i64 12
  %431 = bitcast i8* %430 to i32*
  store i32 %429, i32* %431, align 1
  store %struct.Memory* %loadMem_429d6a, %struct.Memory** %MEMORY
  %loadMem_429d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %433 = getelementptr inbounds %struct.GPR, %struct.GPR* %432, i32 0, i32 33
  %434 = getelementptr inbounds %struct.Reg, %struct.Reg* %433, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %434 to i64*
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 15
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %RBP.i1262 = bitcast %union.anon* %437 to i64*
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %438, i64 0, i64 0
  %XMM0.i1263 = bitcast %union.VectorReg* %439 to %union.vec128_t*
  %440 = load i64, i64* %RBP.i1262
  %441 = sub i64 %440, 1644
  %442 = bitcast %union.vec128_t* %XMM0.i1263 to i8*
  %443 = load i64, i64* %PC.i1261
  %444 = add i64 %443, 8
  store i64 %444, i64* %PC.i1261
  %445 = bitcast i8* %442 to <2 x float>*
  %446 = load <2 x float>, <2 x float>* %445, align 1
  %447 = extractelement <2 x float> %446, i32 0
  %448 = inttoptr i64 %441 to float*
  store float %447, float* %448
  store %struct.Memory* %loadMem_429d6d, %struct.Memory** %MEMORY
  %loadMem_429d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %450 = getelementptr inbounds %struct.GPR, %struct.GPR* %449, i32 0, i32 33
  %451 = getelementptr inbounds %struct.Reg, %struct.Reg* %450, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %451 to i64*
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %453 = getelementptr inbounds %struct.GPR, %struct.GPR* %452, i32 0, i32 1
  %454 = getelementptr inbounds %struct.Reg, %struct.Reg* %453, i32 0, i32 0
  %RAX.i1282 = bitcast %union.anon* %454 to i64*
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %456 = getelementptr inbounds %struct.GPR, %struct.GPR* %455, i32 0, i32 15
  %457 = getelementptr inbounds %struct.Reg, %struct.Reg* %456, i32 0, i32 0
  %RBP.i1283 = bitcast %union.anon* %457 to i64*
  %458 = load i64, i64* %RBP.i1283
  %459 = sub i64 %458, 8
  %460 = load i64, i64* %PC.i1281
  %461 = add i64 %460, 4
  store i64 %461, i64* %PC.i1281
  %462 = inttoptr i64 %459 to i64*
  %463 = load i64, i64* %462
  store i64 %463, i64* %RAX.i1282, align 8
  store %struct.Memory* %loadMem_429d75, %struct.Memory** %MEMORY
  %loadMem_429d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %465 = getelementptr inbounds %struct.GPR, %struct.GPR* %464, i32 0, i32 33
  %466 = getelementptr inbounds %struct.Reg, %struct.Reg* %465, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %466 to i64*
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %468 = getelementptr inbounds %struct.GPR, %struct.GPR* %467, i32 0, i32 5
  %469 = getelementptr inbounds %struct.Reg, %struct.Reg* %468, i32 0, i32 0
  %RCX.i1279 = bitcast %union.anon* %469 to i64*
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %471 = getelementptr inbounds %struct.GPR, %struct.GPR* %470, i32 0, i32 15
  %472 = getelementptr inbounds %struct.Reg, %struct.Reg* %471, i32 0, i32 0
  %RBP.i1280 = bitcast %union.anon* %472 to i64*
  %473 = load i64, i64* %RBP.i1280
  %474 = sub i64 %473, 12
  %475 = load i64, i64* %PC.i1278
  %476 = add i64 %475, 4
  store i64 %476, i64* %PC.i1278
  %477 = inttoptr i64 %474 to i32*
  %478 = load i32, i32* %477
  %479 = sext i32 %478 to i64
  store i64 %479, i64* %RCX.i1279, align 8
  store %struct.Memory* %loadMem_429d79, %struct.Memory** %MEMORY
  %loadMem_429d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 33
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 1
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RAX.i1275 = bitcast %union.anon* %485 to i64*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 5
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %RCX.i1276 = bitcast %union.anon* %488 to i64*
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %490 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %489, i64 0, i64 1
  %YMM1.i1277 = bitcast %union.VectorReg* %490 to %"class.std::bitset"*
  %491 = bitcast %"class.std::bitset"* %YMM1.i1277 to i8*
  %492 = load i64, i64* %RAX.i1275
  %493 = load i64, i64* %RCX.i1276
  %494 = mul i64 %493, 4
  %495 = add i64 %492, 400
  %496 = add i64 %495, %494
  %497 = load i64, i64* %PC.i1274
  %498 = add i64 %497, 9
  store i64 %498, i64* %PC.i1274
  %499 = inttoptr i64 %496 to float*
  %500 = load float, float* %499
  %501 = bitcast i8* %491 to float*
  store float %500, float* %501, align 1
  %502 = getelementptr inbounds i8, i8* %491, i64 4
  %503 = bitcast i8* %502 to float*
  store float 0.000000e+00, float* %503, align 1
  %504 = getelementptr inbounds i8, i8* %491, i64 8
  %505 = bitcast i8* %504 to float*
  store float 0.000000e+00, float* %505, align 1
  %506 = getelementptr inbounds i8, i8* %491, i64 12
  %507 = bitcast i8* %506 to float*
  store float 0.000000e+00, float* %507, align 1
  store %struct.Memory* %loadMem_429d7d, %struct.Memory** %MEMORY
  %loadMem_429d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 33
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %510 to i64*
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 1
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %RAX.i1272 = bitcast %union.anon* %513 to i64*
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 15
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %516 to i64*
  %517 = load i64, i64* %RBP.i1273
  %518 = sub i64 %517, 8
  %519 = load i64, i64* %PC.i1271
  %520 = add i64 %519, 4
  store i64 %520, i64* %PC.i1271
  %521 = inttoptr i64 %518 to i64*
  %522 = load i64, i64* %521
  store i64 %522, i64* %RAX.i1272, align 8
  store %struct.Memory* %loadMem_429d86, %struct.Memory** %MEMORY
  %loadMem_429d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %524 = getelementptr inbounds %struct.GPR, %struct.GPR* %523, i32 0, i32 33
  %525 = getelementptr inbounds %struct.Reg, %struct.Reg* %524, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %525 to i64*
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %527 = getelementptr inbounds %struct.GPR, %struct.GPR* %526, i32 0, i32 5
  %528 = getelementptr inbounds %struct.Reg, %struct.Reg* %527, i32 0, i32 0
  %RCX.i1269 = bitcast %union.anon* %528 to i64*
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 15
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %531 to i64*
  %532 = load i64, i64* %RBP.i1270
  %533 = sub i64 %532, 12
  %534 = load i64, i64* %PC.i1268
  %535 = add i64 %534, 4
  store i64 %535, i64* %PC.i1268
  %536 = inttoptr i64 %533 to i32*
  %537 = load i32, i32* %536
  %538 = sext i32 %537 to i64
  store i64 %538, i64* %RCX.i1269, align 8
  store %struct.Memory* %loadMem_429d8a, %struct.Memory** %MEMORY
  %loadMem_429d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 33
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %541 to i64*
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 1
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %RAX.i1265 = bitcast %union.anon* %544 to i64*
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %546 = getelementptr inbounds %struct.GPR, %struct.GPR* %545, i32 0, i32 5
  %547 = getelementptr inbounds %struct.Reg, %struct.Reg* %546, i32 0, i32 0
  %RCX.i1266 = bitcast %union.anon* %547 to i64*
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %548, i64 0, i64 1
  %YMM1.i1267 = bitcast %union.VectorReg* %549 to %"class.std::bitset"*
  %550 = bitcast %"class.std::bitset"* %YMM1.i1267 to i8*
  %551 = bitcast %"class.std::bitset"* %YMM1.i1267 to i8*
  %552 = load i64, i64* %RAX.i1265
  %553 = load i64, i64* %RCX.i1266
  %554 = mul i64 %553, 4
  %555 = add i64 %552, 2000
  %556 = add i64 %555, %554
  %557 = load i64, i64* %PC.i1264
  %558 = add i64 %557, 9
  store i64 %558, i64* %PC.i1264
  %559 = bitcast i8* %551 to <2 x float>*
  %560 = load <2 x float>, <2 x float>* %559, align 1
  %561 = getelementptr inbounds i8, i8* %551, i64 8
  %562 = bitcast i8* %561 to <2 x i32>*
  %563 = load <2 x i32>, <2 x i32>* %562, align 1
  %564 = inttoptr i64 %556 to float*
  %565 = load float, float* %564
  %566 = extractelement <2 x float> %560, i32 0
  %567 = fadd float %566, %565
  %568 = bitcast i8* %550 to float*
  store float %567, float* %568, align 1
  %569 = bitcast <2 x float> %560 to <2 x i32>
  %570 = extractelement <2 x i32> %569, i32 1
  %571 = getelementptr inbounds i8, i8* %550, i64 4
  %572 = bitcast i8* %571 to i32*
  store i32 %570, i32* %572, align 1
  %573 = extractelement <2 x i32> %563, i32 0
  %574 = getelementptr inbounds i8, i8* %550, i64 8
  %575 = bitcast i8* %574 to i32*
  store i32 %573, i32* %575, align 1
  %576 = extractelement <2 x i32> %563, i32 1
  %577 = getelementptr inbounds i8, i8* %550, i64 12
  %578 = bitcast i8* %577 to i32*
  store i32 %576, i32* %578, align 1
  store %struct.Memory* %loadMem_429d8e, %struct.Memory** %MEMORY
  %loadMem_429d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 33
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %581 to i64*
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %583 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %582, i64 0, i64 0
  %XMM0.i1258 = bitcast %union.VectorReg* %583 to %union.vec128_t*
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %585 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %584, i64 0, i64 1
  %XMM1.i1259 = bitcast %union.VectorReg* %585 to %union.vec128_t*
  %586 = bitcast %union.vec128_t* %XMM1.i1259 to i8*
  %587 = bitcast %union.vec128_t* %XMM0.i1258 to i8*
  %588 = load i64, i64* %PC.i1257
  %589 = add i64 %588, 3
  store i64 %589, i64* %PC.i1257
  %590 = bitcast i8* %586 to <2 x float>*
  %591 = load <2 x float>, <2 x float>* %590, align 1
  %592 = extractelement <2 x float> %591, i32 0
  %593 = bitcast i8* %587 to <2 x float>*
  %594 = load <2 x float>, <2 x float>* %593, align 1
  %595 = extractelement <2 x float> %594, i32 0
  %596 = fcmp uno float %592, %595
  br i1 %596, label %597, label %609

; <label>:597:                                    ; preds = %block_429d6a
  %598 = fadd float %592, %595
  %599 = bitcast float %598 to i32
  %600 = and i32 %599, 2143289344
  %601 = icmp eq i32 %600, 2139095040
  %602 = and i32 %599, 4194303
  %603 = icmp ne i32 %602, 0
  %604 = and i1 %601, %603
  br i1 %604, label %605, label %615

; <label>:605:                                    ; preds = %597
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %607 = load i64, i64* %606, align 8
  %608 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %607, %struct.Memory* %loadMem_429d97)
  br label %routine_ucomiss__xmm0___xmm1.exit1260

; <label>:609:                                    ; preds = %block_429d6a
  %610 = fcmp ogt float %592, %595
  br i1 %610, label %615, label %611

; <label>:611:                                    ; preds = %609
  %612 = fcmp olt float %592, %595
  br i1 %612, label %615, label %613

; <label>:613:                                    ; preds = %611
  %614 = fcmp oeq float %592, %595
  br i1 %614, label %615, label %622

; <label>:615:                                    ; preds = %613, %611, %609, %597
  %616 = phi i8 [ 0, %609 ], [ 0, %611 ], [ 1, %613 ], [ 1, %597 ]
  %617 = phi i8 [ 0, %609 ], [ 0, %611 ], [ 0, %613 ], [ 1, %597 ]
  %618 = phi i8 [ 0, %609 ], [ 1, %611 ], [ 0, %613 ], [ 1, %597 ]
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %616, i8* %619, align 1
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %617, i8* %620, align 1
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %618, i8* %621, align 1
  br label %622

; <label>:622:                                    ; preds = %615, %613
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %623, align 1
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %624, align 1
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %625, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit1260

routine_ucomiss__xmm0___xmm1.exit1260:            ; preds = %605, %622
  %626 = phi %struct.Memory* [ %608, %605 ], [ %loadMem_429d97, %622 ]
  store %struct.Memory* %626, %struct.Memory** %MEMORY
  %loadMem_429d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 33
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %629 to i64*
  %630 = load i64, i64* %PC.i1256
  %631 = add i64 %630, 86
  %632 = load i64, i64* %PC.i1256
  %633 = add i64 %632, 6
  %634 = load i64, i64* %PC.i1256
  %635 = add i64 %634, 6
  store i64 %635, i64* %PC.i1256
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %637 = load i8, i8* %636, align 1
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %639 = load i8, i8* %638, align 1
  %640 = or i8 %639, %637
  %641 = icmp ne i8 %640, 0
  %642 = zext i1 %641 to i8
  store i8 %642, i8* %BRANCH_TAKEN, align 1
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %644 = select i1 %641, i64 %631, i64 %633
  store i64 %644, i64* %643, align 8
  store %struct.Memory* %loadMem_429d9a, %struct.Memory** %MEMORY
  %loadBr_429d9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429d9a = icmp eq i8 %loadBr_429d9a, 1
  br i1 %cmpBr_429d9a, label %block_.L_429df0, label %block_429da0

block_429da0:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit1260
  %loadMem_429da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %647 to i64*
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 1
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %RAX.i1254 = bitcast %union.anon* %650 to i64*
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %652 = getelementptr inbounds %struct.GPR, %struct.GPR* %651, i32 0, i32 15
  %653 = getelementptr inbounds %struct.Reg, %struct.Reg* %652, i32 0, i32 0
  %RBP.i1255 = bitcast %union.anon* %653 to i64*
  %654 = load i64, i64* %RBP.i1255
  %655 = sub i64 %654, 8
  %656 = load i64, i64* %PC.i1253
  %657 = add i64 %656, 4
  store i64 %657, i64* %PC.i1253
  %658 = inttoptr i64 %655 to i64*
  %659 = load i64, i64* %658
  store i64 %659, i64* %RAX.i1254, align 8
  store %struct.Memory* %loadMem_429da0, %struct.Memory** %MEMORY
  %loadMem_429da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %661 = getelementptr inbounds %struct.GPR, %struct.GPR* %660, i32 0, i32 33
  %662 = getelementptr inbounds %struct.Reg, %struct.Reg* %661, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %662 to i64*
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %664 = getelementptr inbounds %struct.GPR, %struct.GPR* %663, i32 0, i32 5
  %665 = getelementptr inbounds %struct.Reg, %struct.Reg* %664, i32 0, i32 0
  %RCX.i1251 = bitcast %union.anon* %665 to i64*
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %667 = getelementptr inbounds %struct.GPR, %struct.GPR* %666, i32 0, i32 15
  %668 = getelementptr inbounds %struct.Reg, %struct.Reg* %667, i32 0, i32 0
  %RBP.i1252 = bitcast %union.anon* %668 to i64*
  %669 = load i64, i64* %RBP.i1252
  %670 = sub i64 %669, 12
  %671 = load i64, i64* %PC.i1250
  %672 = add i64 %671, 4
  store i64 %672, i64* %PC.i1250
  %673 = inttoptr i64 %670 to i32*
  %674 = load i32, i32* %673
  %675 = sext i32 %674 to i64
  store i64 %675, i64* %RCX.i1251, align 8
  store %struct.Memory* %loadMem_429da4, %struct.Memory** %MEMORY
  %loadMem_429da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 33
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %678 to i64*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 1
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RAX.i1247 = bitcast %union.anon* %681 to i64*
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 5
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %RCX.i1248 = bitcast %union.anon* %684 to i64*
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %686 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %685, i64 0, i64 0
  %YMM0.i1249 = bitcast %union.VectorReg* %686 to %"class.std::bitset"*
  %687 = bitcast %"class.std::bitset"* %YMM0.i1249 to i8*
  %688 = load i64, i64* %RAX.i1247
  %689 = load i64, i64* %RCX.i1248
  %690 = mul i64 %689, 4
  %691 = add i64 %688, 400
  %692 = add i64 %691, %690
  %693 = load i64, i64* %PC.i1246
  %694 = add i64 %693, 9
  store i64 %694, i64* %PC.i1246
  %695 = inttoptr i64 %692 to float*
  %696 = load float, float* %695
  %697 = bitcast i8* %687 to float*
  store float %696, float* %697, align 1
  %698 = getelementptr inbounds i8, i8* %687, i64 4
  %699 = bitcast i8* %698 to float*
  store float 0.000000e+00, float* %699, align 1
  %700 = getelementptr inbounds i8, i8* %687, i64 8
  %701 = bitcast i8* %700 to float*
  store float 0.000000e+00, float* %701, align 1
  %702 = getelementptr inbounds i8, i8* %687, i64 12
  %703 = bitcast i8* %702 to float*
  store float 0.000000e+00, float* %703, align 1
  store %struct.Memory* %loadMem_429da8, %struct.Memory** %MEMORY
  %loadMem_429db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 33
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %706 to i64*
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 1
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %RAX.i1244 = bitcast %union.anon* %709 to i64*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 15
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %712 to i64*
  %713 = load i64, i64* %RBP.i1245
  %714 = sub i64 %713, 8
  %715 = load i64, i64* %PC.i1243
  %716 = add i64 %715, 4
  store i64 %716, i64* %PC.i1243
  %717 = inttoptr i64 %714 to i64*
  %718 = load i64, i64* %717
  store i64 %718, i64* %RAX.i1244, align 8
  store %struct.Memory* %loadMem_429db1, %struct.Memory** %MEMORY
  %loadMem_429db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 33
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %721 to i64*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 5
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %RCX.i1241 = bitcast %union.anon* %724 to i64*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 15
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %727 to i64*
  %728 = load i64, i64* %RBP.i1242
  %729 = sub i64 %728, 12
  %730 = load i64, i64* %PC.i1240
  %731 = add i64 %730, 4
  store i64 %731, i64* %PC.i1240
  %732 = inttoptr i64 %729 to i32*
  %733 = load i32, i32* %732
  %734 = sext i32 %733 to i64
  store i64 %734, i64* %RCX.i1241, align 8
  store %struct.Memory* %loadMem_429db5, %struct.Memory** %MEMORY
  %loadMem_429db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 33
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 1
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RAX.i1237 = bitcast %union.anon* %740 to i64*
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %742 = getelementptr inbounds %struct.GPR, %struct.GPR* %741, i32 0, i32 5
  %743 = getelementptr inbounds %struct.Reg, %struct.Reg* %742, i32 0, i32 0
  %RCX.i1238 = bitcast %union.anon* %743 to i64*
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %745 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %744, i64 0, i64 0
  %YMM0.i1239 = bitcast %union.VectorReg* %745 to %"class.std::bitset"*
  %746 = bitcast %"class.std::bitset"* %YMM0.i1239 to i8*
  %747 = bitcast %"class.std::bitset"* %YMM0.i1239 to i8*
  %748 = load i64, i64* %RAX.i1237
  %749 = load i64, i64* %RCX.i1238
  %750 = mul i64 %749, 4
  %751 = add i64 %748, 2000
  %752 = add i64 %751, %750
  %753 = load i64, i64* %PC.i1236
  %754 = add i64 %753, 9
  store i64 %754, i64* %PC.i1236
  %755 = bitcast i8* %747 to <2 x float>*
  %756 = load <2 x float>, <2 x float>* %755, align 1
  %757 = getelementptr inbounds i8, i8* %747, i64 8
  %758 = bitcast i8* %757 to <2 x i32>*
  %759 = load <2 x i32>, <2 x i32>* %758, align 1
  %760 = inttoptr i64 %752 to float*
  %761 = load float, float* %760
  %762 = extractelement <2 x float> %756, i32 0
  %763 = fsub float %762, %761
  %764 = bitcast i8* %746 to float*
  store float %763, float* %764, align 1
  %765 = bitcast <2 x float> %756 to <2 x i32>
  %766 = extractelement <2 x i32> %765, i32 1
  %767 = getelementptr inbounds i8, i8* %746, i64 4
  %768 = bitcast i8* %767 to i32*
  store i32 %766, i32* %768, align 1
  %769 = extractelement <2 x i32> %759, i32 0
  %770 = getelementptr inbounds i8, i8* %746, i64 8
  %771 = bitcast i8* %770 to i32*
  store i32 %769, i32* %771, align 1
  %772 = extractelement <2 x i32> %759, i32 1
  %773 = getelementptr inbounds i8, i8* %746, i64 12
  %774 = bitcast i8* %773 to i32*
  store i32 %772, i32* %774, align 1
  store %struct.Memory* %loadMem_429db9, %struct.Memory** %MEMORY
  %loadMem_429dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %776 = getelementptr inbounds %struct.GPR, %struct.GPR* %775, i32 0, i32 33
  %777 = getelementptr inbounds %struct.Reg, %struct.Reg* %776, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %777 to i64*
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 1
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %RAX.i1234 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 15
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %783 to i64*
  %784 = load i64, i64* %RBP.i1235
  %785 = sub i64 %784, 8
  %786 = load i64, i64* %PC.i1233
  %787 = add i64 %786, 4
  store i64 %787, i64* %PC.i1233
  %788 = inttoptr i64 %785 to i64*
  %789 = load i64, i64* %788
  store i64 %789, i64* %RAX.i1234, align 8
  store %struct.Memory* %loadMem_429dc2, %struct.Memory** %MEMORY
  %loadMem_429dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 33
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %792 to i64*
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 5
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %795 to i64*
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 15
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %RBP.i1232 = bitcast %union.anon* %798 to i64*
  %799 = load i64, i64* %RBP.i1232
  %800 = sub i64 %799, 12
  %801 = load i64, i64* %PC.i1230
  %802 = add i64 %801, 4
  store i64 %802, i64* %PC.i1230
  %803 = inttoptr i64 %800 to i32*
  %804 = load i32, i32* %803
  %805 = sext i32 %804 to i64
  store i64 %805, i64* %RCX.i1231, align 8
  store %struct.Memory* %loadMem_429dc6, %struct.Memory** %MEMORY
  %loadMem_429dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 33
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %808 to i64*
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 1
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 5
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RCX.i1228 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %816 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %815, i64 0, i64 1
  %YMM1.i1229 = bitcast %union.VectorReg* %816 to %"class.std::bitset"*
  %817 = bitcast %"class.std::bitset"* %YMM1.i1229 to i8*
  %818 = load i64, i64* %RAX.i1227
  %819 = load i64, i64* %RCX.i1228
  %820 = mul i64 %819, 4
  %821 = add i64 %818, 400
  %822 = add i64 %821, %820
  %823 = load i64, i64* %PC.i1226
  %824 = add i64 %823, 9
  store i64 %824, i64* %PC.i1226
  %825 = inttoptr i64 %822 to float*
  %826 = load float, float* %825
  %827 = bitcast i8* %817 to float*
  store float %826, float* %827, align 1
  %828 = getelementptr inbounds i8, i8* %817, i64 4
  %829 = bitcast i8* %828 to float*
  store float 0.000000e+00, float* %829, align 1
  %830 = getelementptr inbounds i8, i8* %817, i64 8
  %831 = bitcast i8* %830 to float*
  store float 0.000000e+00, float* %831, align 1
  %832 = getelementptr inbounds i8, i8* %817, i64 12
  %833 = bitcast i8* %832 to float*
  store float 0.000000e+00, float* %833, align 1
  store %struct.Memory* %loadMem_429dca, %struct.Memory** %MEMORY
  %loadMem_429dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %835 = getelementptr inbounds %struct.GPR, %struct.GPR* %834, i32 0, i32 33
  %836 = getelementptr inbounds %struct.Reg, %struct.Reg* %835, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %836 to i64*
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %838 = getelementptr inbounds %struct.GPR, %struct.GPR* %837, i32 0, i32 1
  %839 = getelementptr inbounds %struct.Reg, %struct.Reg* %838, i32 0, i32 0
  %RAX.i1224 = bitcast %union.anon* %839 to i64*
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 15
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %RBP.i1225 = bitcast %union.anon* %842 to i64*
  %843 = load i64, i64* %RBP.i1225
  %844 = sub i64 %843, 8
  %845 = load i64, i64* %PC.i1223
  %846 = add i64 %845, 4
  store i64 %846, i64* %PC.i1223
  %847 = inttoptr i64 %844 to i64*
  %848 = load i64, i64* %847
  store i64 %848, i64* %RAX.i1224, align 8
  store %struct.Memory* %loadMem_429dd3, %struct.Memory** %MEMORY
  %loadMem_429dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 5
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %RCX.i1221 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 15
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RBP.i1222 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RBP.i1222
  %859 = sub i64 %858, 12
  %860 = load i64, i64* %PC.i1220
  %861 = add i64 %860, 4
  store i64 %861, i64* %PC.i1220
  %862 = inttoptr i64 %859 to i32*
  %863 = load i32, i32* %862
  %864 = sext i32 %863 to i64
  store i64 %864, i64* %RCX.i1221, align 8
  store %struct.Memory* %loadMem_429dd7, %struct.Memory** %MEMORY
  %loadMem_429ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %867 to i64*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 1
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %RAX.i1217 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 5
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %RCX.i1218 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %874, i64 0, i64 1
  %YMM1.i1219 = bitcast %union.VectorReg* %875 to %"class.std::bitset"*
  %876 = bitcast %"class.std::bitset"* %YMM1.i1219 to i8*
  %877 = bitcast %"class.std::bitset"* %YMM1.i1219 to i8*
  %878 = load i64, i64* %RAX.i1217
  %879 = load i64, i64* %RCX.i1218
  %880 = mul i64 %879, 4
  %881 = add i64 %878, 2000
  %882 = add i64 %881, %880
  %883 = load i64, i64* %PC.i1216
  %884 = add i64 %883, 9
  store i64 %884, i64* %PC.i1216
  %885 = bitcast i8* %877 to <2 x float>*
  %886 = load <2 x float>, <2 x float>* %885, align 1
  %887 = getelementptr inbounds i8, i8* %877, i64 8
  %888 = bitcast i8* %887 to <2 x i32>*
  %889 = load <2 x i32>, <2 x i32>* %888, align 1
  %890 = inttoptr i64 %882 to float*
  %891 = load float, float* %890
  %892 = extractelement <2 x float> %886, i32 0
  %893 = fadd float %892, %891
  %894 = bitcast i8* %876 to float*
  store float %893, float* %894, align 1
  %895 = bitcast <2 x float> %886 to <2 x i32>
  %896 = extractelement <2 x i32> %895, i32 1
  %897 = getelementptr inbounds i8, i8* %876, i64 4
  %898 = bitcast i8* %897 to i32*
  store i32 %896, i32* %898, align 1
  %899 = extractelement <2 x i32> %889, i32 0
  %900 = getelementptr inbounds i8, i8* %876, i64 8
  %901 = bitcast i8* %900 to i32*
  store i32 %899, i32* %901, align 1
  %902 = extractelement <2 x i32> %889, i32 1
  %903 = getelementptr inbounds i8, i8* %876, i64 12
  %904 = bitcast i8* %903 to i32*
  store i32 %902, i32* %904, align 1
  store %struct.Memory* %loadMem_429ddb, %struct.Memory** %MEMORY
  %loadMem_429de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 33
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %907 to i64*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %909 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %908, i64 0, i64 0
  %YMM0.i1214 = bitcast %union.VectorReg* %909 to %"class.std::bitset"*
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %910, i64 0, i64 1
  %XMM1.i1215 = bitcast %union.VectorReg* %911 to %union.vec128_t*
  %912 = bitcast %"class.std::bitset"* %YMM0.i1214 to i8*
  %913 = bitcast %"class.std::bitset"* %YMM0.i1214 to i8*
  %914 = bitcast %union.vec128_t* %XMM1.i1215 to i8*
  %915 = load i64, i64* %PC.i1213
  %916 = add i64 %915, 4
  store i64 %916, i64* %PC.i1213
  %917 = bitcast i8* %913 to <2 x float>*
  %918 = load <2 x float>, <2 x float>* %917, align 1
  %919 = getelementptr inbounds i8, i8* %913, i64 8
  %920 = bitcast i8* %919 to <2 x i32>*
  %921 = load <2 x i32>, <2 x i32>* %920, align 1
  %922 = bitcast i8* %914 to <2 x float>*
  %923 = load <2 x float>, <2 x float>* %922, align 1
  %924 = extractelement <2 x float> %918, i32 0
  %925 = extractelement <2 x float> %923, i32 0
  %926 = fdiv float %924, %925
  %927 = bitcast i8* %912 to float*
  store float %926, float* %927, align 1
  %928 = bitcast <2 x float> %918 to <2 x i32>
  %929 = extractelement <2 x i32> %928, i32 1
  %930 = getelementptr inbounds i8, i8* %912, i64 4
  %931 = bitcast i8* %930 to i32*
  store i32 %929, i32* %931, align 1
  %932 = extractelement <2 x i32> %921, i32 0
  %933 = getelementptr inbounds i8, i8* %912, i64 8
  %934 = bitcast i8* %933 to i32*
  store i32 %932, i32* %934, align 1
  %935 = extractelement <2 x i32> %921, i32 1
  %936 = getelementptr inbounds i8, i8* %912, i64 12
  %937 = bitcast i8* %936 to i32*
  store i32 %935, i32* %937, align 1
  store %struct.Memory* %loadMem_429de4, %struct.Memory** %MEMORY
  %loadMem_429de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 33
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 15
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RBP.i1211 = bitcast %union.anon* %943 to i64*
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %944, i64 0, i64 0
  %XMM0.i1212 = bitcast %union.VectorReg* %945 to %union.vec128_t*
  %946 = load i64, i64* %RBP.i1211
  %947 = sub i64 %946, 1644
  %948 = bitcast %union.vec128_t* %XMM0.i1212 to i8*
  %949 = load i64, i64* %PC.i1210
  %950 = add i64 %949, 8
  store i64 %950, i64* %PC.i1210
  %951 = bitcast i8* %948 to <2 x float>*
  %952 = load <2 x float>, <2 x float>* %951, align 1
  %953 = extractelement <2 x float> %952, i32 0
  %954 = inttoptr i64 %947 to float*
  store float %953, float* %954
  store %struct.Memory* %loadMem_429de8, %struct.Memory** %MEMORY
  br label %block_.L_429df0

block_.L_429df0:                                  ; preds = %block_429da0, %routine_ucomiss__xmm0___xmm1.exit1260
  %loadMem_429df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 33
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 1
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %960 to i64*
  %961 = load i64, i64* %PC.i1208
  %962 = add i64 %961, 5
  store i64 %962, i64* %PC.i1208
  store i64 20, i64* %RAX.i1209, align 8
  store %struct.Memory* %loadMem_429df0, %struct.Memory** %MEMORY
  %loadMem_429df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 33
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 15
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %969, i64 0, i64 0
  %YMM0.i1207 = bitcast %union.VectorReg* %970 to %"class.std::bitset"*
  %971 = bitcast %"class.std::bitset"* %YMM0.i1207 to i8*
  %972 = load i64, i64* %RBP.i1206
  %973 = sub i64 %972, 1644
  %974 = load i64, i64* %PC.i1205
  %975 = add i64 %974, 8
  store i64 %975, i64* %PC.i1205
  %976 = inttoptr i64 %973 to float*
  %977 = load float, float* %976
  %978 = bitcast i8* %971 to float*
  store float %977, float* %978, align 1
  %979 = getelementptr inbounds i8, i8* %971, i64 4
  %980 = bitcast i8* %979 to float*
  store float 0.000000e+00, float* %980, align 1
  %981 = getelementptr inbounds i8, i8* %971, i64 8
  %982 = bitcast i8* %981 to float*
  store float 0.000000e+00, float* %982, align 1
  %983 = getelementptr inbounds i8, i8* %971, i64 12
  %984 = bitcast i8* %983 to float*
  store float 0.000000e+00, float* %984, align 1
  store %struct.Memory* %loadMem_429df5, %struct.Memory** %MEMORY
  %loadMem_429dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 33
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %987 to i64*
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %989 = getelementptr inbounds %struct.GPR, %struct.GPR* %988, i32 0, i32 15
  %990 = getelementptr inbounds %struct.Reg, %struct.Reg* %989, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %990 to i64*
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %992 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %991, i64 0, i64 0
  %YMM0.i1204 = bitcast %union.VectorReg* %992 to %"class.std::bitset"*
  %993 = bitcast %"class.std::bitset"* %YMM0.i1204 to i8*
  %994 = bitcast %"class.std::bitset"* %YMM0.i1204 to i8*
  %995 = load i64, i64* %RBP.i1203
  %996 = sub i64 %995, 1644
  %997 = load i64, i64* %PC.i1202
  %998 = add i64 %997, 8
  store i64 %998, i64* %PC.i1202
  %999 = bitcast i8* %994 to <2 x float>*
  %1000 = load <2 x float>, <2 x float>* %999, align 1
  %1001 = getelementptr inbounds i8, i8* %994, i64 8
  %1002 = bitcast i8* %1001 to <2 x i32>*
  %1003 = load <2 x i32>, <2 x i32>* %1002, align 1
  %1004 = inttoptr i64 %996 to float*
  %1005 = load float, float* %1004
  %1006 = extractelement <2 x float> %1000, i32 0
  %1007 = fmul float %1006, %1005
  %1008 = bitcast i8* %993 to float*
  store float %1007, float* %1008, align 1
  %1009 = bitcast <2 x float> %1000 to <2 x i32>
  %1010 = extractelement <2 x i32> %1009, i32 1
  %1011 = getelementptr inbounds i8, i8* %993, i64 4
  %1012 = bitcast i8* %1011 to i32*
  store i32 %1010, i32* %1012, align 1
  %1013 = extractelement <2 x i32> %1003, i32 0
  %1014 = getelementptr inbounds i8, i8* %993, i64 8
  %1015 = bitcast i8* %1014 to i32*
  store i32 %1013, i32* %1015, align 1
  %1016 = extractelement <2 x i32> %1003, i32 1
  %1017 = getelementptr inbounds i8, i8* %993, i64 12
  %1018 = bitcast i8* %1017 to i32*
  store i32 %1016, i32* %1018, align 1
  store %struct.Memory* %loadMem_429dfd, %struct.Memory** %MEMORY
  %loadMem_429e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1020 = getelementptr inbounds %struct.GPR, %struct.GPR* %1019, i32 0, i32 33
  %1021 = getelementptr inbounds %struct.Reg, %struct.Reg* %1020, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %1021 to i64*
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1023 = getelementptr inbounds %struct.GPR, %struct.GPR* %1022, i32 0, i32 15
  %1024 = getelementptr inbounds %struct.Reg, %struct.Reg* %1023, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %1024 to i64*
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1025, i64 0, i64 0
  %YMM0.i1201 = bitcast %union.VectorReg* %1026 to %"class.std::bitset"*
  %1027 = bitcast %"class.std::bitset"* %YMM0.i1201 to i8*
  %1028 = bitcast %"class.std::bitset"* %YMM0.i1201 to i8*
  %1029 = load i64, i64* %RBP.i1200
  %1030 = sub i64 %1029, 1644
  %1031 = load i64, i64* %PC.i1199
  %1032 = add i64 %1031, 8
  store i64 %1032, i64* %PC.i1199
  %1033 = bitcast i8* %1028 to <2 x float>*
  %1034 = load <2 x float>, <2 x float>* %1033, align 1
  %1035 = getelementptr inbounds i8, i8* %1028, i64 8
  %1036 = bitcast i8* %1035 to <2 x i32>*
  %1037 = load <2 x i32>, <2 x i32>* %1036, align 1
  %1038 = inttoptr i64 %1030 to float*
  %1039 = load float, float* %1038
  %1040 = extractelement <2 x float> %1034, i32 0
  %1041 = fmul float %1040, %1039
  %1042 = bitcast i8* %1027 to float*
  store float %1041, float* %1042, align 1
  %1043 = bitcast <2 x float> %1034 to <2 x i32>
  %1044 = extractelement <2 x i32> %1043, i32 1
  %1045 = getelementptr inbounds i8, i8* %1027, i64 4
  %1046 = bitcast i8* %1045 to i32*
  store i32 %1044, i32* %1046, align 1
  %1047 = extractelement <2 x i32> %1037, i32 0
  %1048 = getelementptr inbounds i8, i8* %1027, i64 8
  %1049 = bitcast i8* %1048 to i32*
  store i32 %1047, i32* %1049, align 1
  %1050 = extractelement <2 x i32> %1037, i32 1
  %1051 = getelementptr inbounds i8, i8* %1027, i64 12
  %1052 = bitcast i8* %1051 to i32*
  store i32 %1050, i32* %1052, align 1
  store %struct.Memory* %loadMem_429e05, %struct.Memory** %MEMORY
  %loadMem_429e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 33
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %1055 to i64*
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 5
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %1058 to i64*
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 15
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %1061 to i64*
  %1062 = load i64, i64* %RBP.i1198
  %1063 = sub i64 %1062, 12
  %1064 = load i64, i64* %PC.i1196
  %1065 = add i64 %1064, 4
  store i64 %1065, i64* %PC.i1196
  %1066 = inttoptr i64 %1063 to i32*
  %1067 = load i32, i32* %1066
  %1068 = sext i32 %1067 to i64
  store i64 %1068, i64* %RCX.i1197, align 8
  store %struct.Memory* %loadMem_429e0d, %struct.Memory** %MEMORY
  %loadMem_429e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 33
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %1071 to i64*
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1073 = getelementptr inbounds %struct.GPR, %struct.GPR* %1072, i32 0, i32 5
  %1074 = getelementptr inbounds %struct.Reg, %struct.Reg* %1073, i32 0, i32 0
  %RCX.i1193 = bitcast %union.anon* %1074 to i64*
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1076 = getelementptr inbounds %struct.GPR, %struct.GPR* %1075, i32 0, i32 15
  %1077 = getelementptr inbounds %struct.Reg, %struct.Reg* %1076, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %1077 to i64*
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1079 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1078, i64 0, i64 0
  %XMM0.i1195 = bitcast %union.VectorReg* %1079 to %union.vec128_t*
  %1080 = load i64, i64* %RBP.i1194
  %1081 = load i64, i64* %RCX.i1193
  %1082 = mul i64 %1081, 4
  %1083 = add i64 %1080, -1632
  %1084 = add i64 %1083, %1082
  %1085 = bitcast %union.vec128_t* %XMM0.i1195 to i8*
  %1086 = load i64, i64* %PC.i1192
  %1087 = add i64 %1086, 9
  store i64 %1087, i64* %PC.i1192
  %1088 = bitcast i8* %1085 to <2 x float>*
  %1089 = load <2 x float>, <2 x float>* %1088, align 1
  %1090 = extractelement <2 x float> %1089, i32 0
  %1091 = inttoptr i64 %1084 to float*
  store float %1090, float* %1091
  store %struct.Memory* %loadMem_429e11, %struct.Memory** %MEMORY
  %loadMem_429e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 33
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %1094 to i64*
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 7
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %RDX.i1190 = bitcast %union.anon* %1097 to i64*
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 15
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %1100 to i64*
  %1101 = load i64, i64* %RBP.i1191
  %1102 = sub i64 %1101, 12
  %1103 = load i64, i64* %PC.i1189
  %1104 = add i64 %1103, 3
  store i64 %1104, i64* %PC.i1189
  %1105 = inttoptr i64 %1102 to i32*
  %1106 = load i32, i32* %1105
  %1107 = zext i32 %1106 to i64
  store i64 %1107, i64* %RDX.i1190, align 8
  store %struct.Memory* %loadMem_429e1a, %struct.Memory** %MEMORY
  %loadMem_429e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 33
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %1110 to i64*
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 1
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %EAX.i1187 = bitcast %union.anon* %1113 to i32*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 15
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %1116 to i64*
  %1117 = load i64, i64* %RBP.i1188
  %1118 = sub i64 %1117, 1656
  %1119 = load i32, i32* %EAX.i1187
  %1120 = zext i32 %1119 to i64
  %1121 = load i64, i64* %PC.i1186
  %1122 = add i64 %1121, 6
  store i64 %1122, i64* %PC.i1186
  %1123 = inttoptr i64 %1118 to i32*
  store i32 %1119, i32* %1123
  store %struct.Memory* %loadMem_429e1d, %struct.Memory** %MEMORY
  %loadMem_429e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1125 = getelementptr inbounds %struct.GPR, %struct.GPR* %1124, i32 0, i32 33
  %1126 = getelementptr inbounds %struct.Reg, %struct.Reg* %1125, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %1126 to i64*
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 7
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %EDX.i1184 = bitcast %union.anon* %1129 to i32*
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1131 = getelementptr inbounds %struct.GPR, %struct.GPR* %1130, i32 0, i32 1
  %1132 = getelementptr inbounds %struct.Reg, %struct.Reg* %1131, i32 0, i32 0
  %RAX.i1185 = bitcast %union.anon* %1132 to i64*
  %1133 = load i32, i32* %EDX.i1184
  %1134 = zext i32 %1133 to i64
  %1135 = load i64, i64* %PC.i1183
  %1136 = add i64 %1135, 2
  store i64 %1136, i64* %PC.i1183
  %1137 = and i64 %1134, 4294967295
  store i64 %1137, i64* %RAX.i1185, align 8
  store %struct.Memory* %loadMem_429e23, %struct.Memory** %MEMORY
  %loadMem_429e25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 33
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %PC.i1182
  %1142 = add i64 %1141, 1
  store i64 %1142, i64* %PC.i1182
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1145 = bitcast %union.anon* %1144 to i32*
  %1146 = load i32, i32* %1145, align 8
  %1147 = sext i32 %1146 to i64
  %1148 = lshr i64 %1147, 32
  store i64 %1148, i64* %1143, align 8
  store %struct.Memory* %loadMem_429e25, %struct.Memory** %MEMORY
  %loadMem_429e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1150 = getelementptr inbounds %struct.GPR, %struct.GPR* %1149, i32 0, i32 33
  %1151 = getelementptr inbounds %struct.Reg, %struct.Reg* %1150, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %1151 to i64*
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1153 = getelementptr inbounds %struct.GPR, %struct.GPR* %1152, i32 0, i32 9
  %1154 = getelementptr inbounds %struct.Reg, %struct.Reg* %1153, i32 0, i32 0
  %RSI.i1180 = bitcast %union.anon* %1154 to i64*
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1156 = getelementptr inbounds %struct.GPR, %struct.GPR* %1155, i32 0, i32 15
  %1157 = getelementptr inbounds %struct.Reg, %struct.Reg* %1156, i32 0, i32 0
  %RBP.i1181 = bitcast %union.anon* %1157 to i64*
  %1158 = load i64, i64* %RBP.i1181
  %1159 = sub i64 %1158, 1656
  %1160 = load i64, i64* %PC.i1179
  %1161 = add i64 %1160, 6
  store i64 %1161, i64* %PC.i1179
  %1162 = inttoptr i64 %1159 to i32*
  %1163 = load i32, i32* %1162
  %1164 = zext i32 %1163 to i64
  store i64 %1164, i64* %RSI.i1180, align 8
  store %struct.Memory* %loadMem_429e26, %struct.Memory** %MEMORY
  %loadMem_429e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1166 = getelementptr inbounds %struct.GPR, %struct.GPR* %1165, i32 0, i32 33
  %1167 = getelementptr inbounds %struct.Reg, %struct.Reg* %1166, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1167 to i64*
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 9
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %ESI.i1174 = bitcast %union.anon* %1170 to i32*
  %1171 = load i32, i32* %ESI.i1174
  %1172 = zext i32 %1171 to i64
  %1173 = load i64, i64* %PC.i1173
  %1174 = add i64 %1173, 2
  store i64 %1174, i64* %PC.i1173
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1176 = bitcast %union.anon* %1175 to i32*
  %1177 = load i32, i32* %1176, align 8
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1180 = bitcast %union.anon* %1179 to i32*
  %1181 = load i32, i32* %1180, align 8
  %1182 = zext i32 %1181 to i64
  %1183 = shl i64 %1172, 32
  %1184 = ashr exact i64 %1183, 32
  %1185 = shl i64 %1182, 32
  %1186 = or i64 %1185, %1178
  %1187 = sdiv i64 %1186, %1184
  %1188 = shl i64 %1187, 32
  %1189 = ashr exact i64 %1188, 32
  %1190 = icmp eq i64 %1187, %1189
  br i1 %1190, label %1195, label %1191

; <label>:1191:                                   ; preds = %block_.L_429df0
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1193 = load i64, i64* %1192, align 8
  %1194 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1193, %struct.Memory* %loadMem_429e2c)
  br label %routine_idivl__esi.exit1175

; <label>:1195:                                   ; preds = %block_.L_429df0
  %1196 = srem i64 %1186, %1184
  %1197 = getelementptr inbounds %union.anon, %union.anon* %1175, i64 0, i32 0
  %1198 = and i64 %1187, 4294967295
  store i64 %1198, i64* %1197, align 8
  %1199 = getelementptr inbounds %union.anon, %union.anon* %1179, i64 0, i32 0
  %1200 = and i64 %1196, 4294967295
  store i64 %1200, i64* %1199, align 8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1201, align 1
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1202, align 1
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1203, align 1
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1204, align 1
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1205, align 1
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1206, align 1
  br label %routine_idivl__esi.exit1175

routine_idivl__esi.exit1175:                      ; preds = %1191, %1195
  %1207 = phi %struct.Memory* [ %1194, %1191 ], [ %loadMem_429e2c, %1195 ]
  store %struct.Memory* %1207, %struct.Memory** %MEMORY
  %loadMem_429e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 33
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %1210 to i64*
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 1
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %RAX.i1172 = bitcast %union.anon* %1213 to i64*
  %1214 = load i64, i64* %RAX.i1172
  %1215 = load i64, i64* %PC.i1171
  %1216 = add i64 %1215, 3
  store i64 %1216, i64* %PC.i1171
  %1217 = trunc i64 %1214 to i32
  %1218 = sub i32 %1217, 1
  %1219 = zext i32 %1218 to i64
  store i64 %1219, i64* %RAX.i1172, align 8
  %1220 = icmp ult i32 %1217, 1
  %1221 = zext i1 %1220 to i8
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1221, i8* %1222, align 1
  %1223 = and i32 %1218, 255
  %1224 = call i32 @llvm.ctpop.i32(i32 %1223)
  %1225 = trunc i32 %1224 to i8
  %1226 = and i8 %1225, 1
  %1227 = xor i8 %1226, 1
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1227, i8* %1228, align 1
  %1229 = xor i64 1, %1214
  %1230 = trunc i64 %1229 to i32
  %1231 = xor i32 %1230, %1218
  %1232 = lshr i32 %1231, 4
  %1233 = trunc i32 %1232 to i8
  %1234 = and i8 %1233, 1
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1234, i8* %1235, align 1
  %1236 = icmp eq i32 %1218, 0
  %1237 = zext i1 %1236 to i8
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1237, i8* %1238, align 1
  %1239 = lshr i32 %1218, 31
  %1240 = trunc i32 %1239 to i8
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1240, i8* %1241, align 1
  %1242 = lshr i32 %1217, 31
  %1243 = xor i32 %1239, %1242
  %1244 = add i32 %1243, %1242
  %1245 = icmp eq i32 %1244, 2
  %1246 = zext i1 %1245 to i8
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1246, i8* %1247, align 1
  store %struct.Memory* %loadMem_429e2e, %struct.Memory** %MEMORY
  %loadMem_429e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 33
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %1250 to i64*
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 11
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %RDI.i1170 = bitcast %union.anon* %1253 to i64*
  %1254 = load i64, i64* %PC.i1169
  %1255 = add i64 %1254, 7
  store i64 %1255, i64* %PC.i1169
  %1256 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %1257 = zext i32 %1256 to i64
  store i64 %1257, i64* %RDI.i1170, align 8
  store %struct.Memory* %loadMem_429e31, %struct.Memory** %MEMORY
  %loadMem_429e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 33
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %1260 to i64*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 17
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %R8D.i1167 = bitcast %union.anon* %1263 to i32*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 15
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %1266 to i64*
  %1267 = bitcast i32* %R8D.i1167 to i64*
  %1268 = load i64, i64* %RBP.i1168
  %1269 = sub i64 %1268, 12
  %1270 = load i64, i64* %PC.i1166
  %1271 = add i64 %1270, 4
  store i64 %1271, i64* %PC.i1166
  %1272 = inttoptr i64 %1269 to i32*
  %1273 = load i32, i32* %1272
  %1274 = zext i32 %1273 to i64
  store i64 %1274, i64* %1267, align 8
  store %struct.Memory* %loadMem_429e38, %struct.Memory** %MEMORY
  %loadMem_429e3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1276 = getelementptr inbounds %struct.GPR, %struct.GPR* %1275, i32 0, i32 33
  %1277 = getelementptr inbounds %struct.Reg, %struct.Reg* %1276, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %1277 to i64*
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1279 = getelementptr inbounds %struct.GPR, %struct.GPR* %1278, i32 0, i32 1
  %1280 = getelementptr inbounds %struct.Reg, %struct.Reg* %1279, i32 0, i32 0
  %EAX.i1164 = bitcast %union.anon* %1280 to i32*
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 15
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %1283 to i64*
  %1284 = load i64, i64* %RBP.i1165
  %1285 = sub i64 %1284, 1660
  %1286 = load i32, i32* %EAX.i1164
  %1287 = zext i32 %1286 to i64
  %1288 = load i64, i64* %PC.i1163
  %1289 = add i64 %1288, 6
  store i64 %1289, i64* %PC.i1163
  %1290 = inttoptr i64 %1285 to i32*
  store i32 %1286, i32* %1290
  store %struct.Memory* %loadMem_429e3c, %struct.Memory** %MEMORY
  %loadMem_429e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1292 = getelementptr inbounds %struct.GPR, %struct.GPR* %1291, i32 0, i32 33
  %1293 = getelementptr inbounds %struct.Reg, %struct.Reg* %1292, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %1293 to i64*
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 17
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1296 to i32*
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 1
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %1299 to i64*
  %1300 = load i32, i32* %R8D.i
  %1301 = zext i32 %1300 to i64
  %1302 = load i64, i64* %PC.i1161
  %1303 = add i64 %1302, 3
  store i64 %1303, i64* %PC.i1161
  %1304 = and i64 %1301, 4294967295
  store i64 %1304, i64* %RAX.i1162, align 8
  store %struct.Memory* %loadMem_429e42, %struct.Memory** %MEMORY
  %loadMem_429e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 33
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %1307 to i64*
  %1308 = load i64, i64* %PC.i1160
  %1309 = add i64 %1308, 1
  store i64 %1309, i64* %PC.i1160
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1312 = bitcast %union.anon* %1311 to i32*
  %1313 = load i32, i32* %1312, align 8
  %1314 = sext i32 %1313 to i64
  %1315 = lshr i64 %1314, 32
  store i64 %1315, i64* %1310, align 8
  store %struct.Memory* %loadMem_429e45, %struct.Memory** %MEMORY
  %loadMem_429e46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 33
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %1318 to i64*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 9
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %ESI.i1157 = bitcast %union.anon* %1321 to i32*
  %1322 = load i32, i32* %ESI.i1157
  %1323 = zext i32 %1322 to i64
  %1324 = load i64, i64* %PC.i1156
  %1325 = add i64 %1324, 2
  store i64 %1325, i64* %PC.i1156
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1327 = bitcast %union.anon* %1326 to i32*
  %1328 = load i32, i32* %1327, align 8
  %1329 = zext i32 %1328 to i64
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1331 = bitcast %union.anon* %1330 to i32*
  %1332 = load i32, i32* %1331, align 8
  %1333 = zext i32 %1332 to i64
  %1334 = shl i64 %1323, 32
  %1335 = ashr exact i64 %1334, 32
  %1336 = shl i64 %1333, 32
  %1337 = or i64 %1336, %1329
  %1338 = sdiv i64 %1337, %1335
  %1339 = shl i64 %1338, 32
  %1340 = ashr exact i64 %1339, 32
  %1341 = icmp eq i64 %1338, %1340
  br i1 %1341, label %1346, label %1342

; <label>:1342:                                   ; preds = %routine_idivl__esi.exit1175
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1344 = load i64, i64* %1343, align 8
  %1345 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1344, %struct.Memory* %loadMem_429e46)
  br label %routine_idivl__esi.exit1158

; <label>:1346:                                   ; preds = %routine_idivl__esi.exit1175
  %1347 = srem i64 %1337, %1335
  %1348 = getelementptr inbounds %union.anon, %union.anon* %1326, i64 0, i32 0
  %1349 = and i64 %1338, 4294967295
  store i64 %1349, i64* %1348, align 8
  %1350 = getelementptr inbounds %union.anon, %union.anon* %1330, i64 0, i32 0
  %1351 = and i64 %1347, 4294967295
  store i64 %1351, i64* %1350, align 8
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1352, align 1
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1353, align 1
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1354, align 1
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1355, align 1
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1356, align 1
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1357, align 1
  br label %routine_idivl__esi.exit1158

routine_idivl__esi.exit1158:                      ; preds = %1342, %1346
  %1358 = phi %struct.Memory* [ %1345, %1342 ], [ %loadMem_429e46, %1346 ]
  store %struct.Memory* %1358, %struct.Memory** %MEMORY
  %loadMem_429e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 33
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 1
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %RAX.i1155 = bitcast %union.anon* %1364 to i64*
  %1365 = load i64, i64* %RAX.i1155
  %1366 = load i64, i64* %PC.i1154
  %1367 = add i64 %1366, 3
  store i64 %1367, i64* %PC.i1154
  %1368 = trunc i64 %1365 to i32
  %1369 = sub i32 %1368, 1
  %1370 = zext i32 %1369 to i64
  store i64 %1370, i64* %RAX.i1155, align 8
  %1371 = icmp ult i32 %1368, 1
  %1372 = zext i1 %1371 to i8
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1372, i8* %1373, align 1
  %1374 = and i32 %1369, 255
  %1375 = call i32 @llvm.ctpop.i32(i32 %1374)
  %1376 = trunc i32 %1375 to i8
  %1377 = and i8 %1376, 1
  %1378 = xor i8 %1377, 1
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1378, i8* %1379, align 1
  %1380 = xor i64 1, %1365
  %1381 = trunc i64 %1380 to i32
  %1382 = xor i32 %1381, %1369
  %1383 = lshr i32 %1382, 4
  %1384 = trunc i32 %1383 to i8
  %1385 = and i8 %1384, 1
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1385, i8* %1386, align 1
  %1387 = icmp eq i32 %1369, 0
  %1388 = zext i1 %1387 to i8
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1388, i8* %1389, align 1
  %1390 = lshr i32 %1369, 31
  %1391 = trunc i32 %1390 to i8
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1391, i8* %1392, align 1
  %1393 = lshr i32 %1368, 31
  %1394 = xor i32 %1390, %1393
  %1395 = add i32 %1394, %1393
  %1396 = icmp eq i32 %1395, 2
  %1397 = zext i1 %1396 to i8
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1397, i8* %1398, align 1
  store %struct.Memory* %loadMem_429e48, %struct.Memory** %MEMORY
  %loadMem_429e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1400 = getelementptr inbounds %struct.GPR, %struct.GPR* %1399, i32 0, i32 33
  %1401 = getelementptr inbounds %struct.Reg, %struct.Reg* %1400, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %1401 to i64*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 1
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %EAX.i1152 = bitcast %union.anon* %1404 to i32*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 11
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %1407 to i64*
  %1408 = load i64, i64* %RDI.i1153
  %1409 = load i32, i32* %EAX.i1152
  %1410 = zext i32 %1409 to i64
  %1411 = load i64, i64* %PC.i1151
  %1412 = add i64 %1411, 2
  store i64 %1412, i64* %PC.i1151
  %1413 = trunc i64 %1408 to i32
  %1414 = sub i32 %1413, %1409
  %1415 = zext i32 %1414 to i64
  store i64 %1415, i64* %RDI.i1153, align 8
  %1416 = icmp ult i32 %1413, %1409
  %1417 = zext i1 %1416 to i8
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1417, i8* %1418, align 1
  %1419 = and i32 %1414, 255
  %1420 = call i32 @llvm.ctpop.i32(i32 %1419)
  %1421 = trunc i32 %1420 to i8
  %1422 = and i8 %1421, 1
  %1423 = xor i8 %1422, 1
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1423, i8* %1424, align 1
  %1425 = xor i64 %1410, %1408
  %1426 = trunc i64 %1425 to i32
  %1427 = xor i32 %1426, %1414
  %1428 = lshr i32 %1427, 4
  %1429 = trunc i32 %1428 to i8
  %1430 = and i8 %1429, 1
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1430, i8* %1431, align 1
  %1432 = icmp eq i32 %1414, 0
  %1433 = zext i1 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1433, i8* %1434, align 1
  %1435 = lshr i32 %1414, 31
  %1436 = trunc i32 %1435 to i8
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1436, i8* %1437, align 1
  %1438 = lshr i32 %1413, 31
  %1439 = lshr i32 %1409, 31
  %1440 = xor i32 %1439, %1438
  %1441 = xor i32 %1435, %1438
  %1442 = add i32 %1441, %1440
  %1443 = icmp eq i32 %1442, 2
  %1444 = zext i1 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1444, i8* %1445, align 1
  store %struct.Memory* %loadMem_429e4b, %struct.Memory** %MEMORY
  %loadMem_429e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 33
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %1448 to i64*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 11
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %RDI.i1150 = bitcast %union.anon* %1451 to i64*
  %1452 = load i64, i64* %RDI.i1150
  %1453 = load i64, i64* %PC.i1149
  %1454 = add i64 %1453, 3
  store i64 %1454, i64* %PC.i1149
  %1455 = trunc i64 %1452 to i32
  %1456 = sub i32 %1455, 1
  %1457 = zext i32 %1456 to i64
  store i64 %1457, i64* %RDI.i1150, align 8
  %1458 = icmp ult i32 %1455, 1
  %1459 = zext i1 %1458 to i8
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1459, i8* %1460, align 1
  %1461 = and i32 %1456, 255
  %1462 = call i32 @llvm.ctpop.i32(i32 %1461)
  %1463 = trunc i32 %1462 to i8
  %1464 = and i8 %1463, 1
  %1465 = xor i8 %1464, 1
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1465, i8* %1466, align 1
  %1467 = xor i64 1, %1452
  %1468 = trunc i64 %1467 to i32
  %1469 = xor i32 %1468, %1456
  %1470 = lshr i32 %1469, 4
  %1471 = trunc i32 %1470 to i8
  %1472 = and i8 %1471, 1
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1472, i8* %1473, align 1
  %1474 = icmp eq i32 %1456, 0
  %1475 = zext i1 %1474 to i8
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1475, i8* %1476, align 1
  %1477 = lshr i32 %1456, 31
  %1478 = trunc i32 %1477 to i8
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1478, i8* %1479, align 1
  %1480 = lshr i32 %1455, 31
  %1481 = xor i32 %1477, %1480
  %1482 = add i32 %1481, %1480
  %1483 = icmp eq i32 %1482, 2
  %1484 = zext i1 %1483 to i8
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1484, i8* %1485, align 1
  store %struct.Memory* %loadMem_429e4d, %struct.Memory** %MEMORY
  %loadMem_429e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1487 = getelementptr inbounds %struct.GPR, %struct.GPR* %1486, i32 0, i32 33
  %1488 = getelementptr inbounds %struct.Reg, %struct.Reg* %1487, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %1488 to i64*
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 1
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %1491 to i64*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 15
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %1494 to i64*
  %1495 = load i64, i64* %RBP.i1148
  %1496 = sub i64 %1495, 1660
  %1497 = load i64, i64* %PC.i1146
  %1498 = add i64 %1497, 6
  store i64 %1498, i64* %PC.i1146
  %1499 = inttoptr i64 %1496 to i32*
  %1500 = load i32, i32* %1499
  %1501 = zext i32 %1500 to i64
  store i64 %1501, i64* %RAX.i1147, align 8
  store %struct.Memory* %loadMem_429e50, %struct.Memory** %MEMORY
  %loadMem_429e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 1
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %EAX.i1144 = bitcast %union.anon* %1507 to i32*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 11
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %EDI.i1145 = bitcast %union.anon* %1510 to i32*
  %1511 = load i32, i32* %EAX.i1144
  %1512 = zext i32 %1511 to i64
  %1513 = load i32, i32* %EDI.i1145
  %1514 = zext i32 %1513 to i64
  %1515 = load i64, i64* %PC.i1143
  %1516 = add i64 %1515, 2
  store i64 %1516, i64* %PC.i1143
  %1517 = sub i32 %1511, %1513
  %1518 = icmp ult i32 %1511, %1513
  %1519 = zext i1 %1518 to i8
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1519, i8* %1520, align 1
  %1521 = and i32 %1517, 255
  %1522 = call i32 @llvm.ctpop.i32(i32 %1521)
  %1523 = trunc i32 %1522 to i8
  %1524 = and i8 %1523, 1
  %1525 = xor i8 %1524, 1
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1525, i8* %1526, align 1
  %1527 = xor i64 %1514, %1512
  %1528 = trunc i64 %1527 to i32
  %1529 = xor i32 %1528, %1517
  %1530 = lshr i32 %1529, 4
  %1531 = trunc i32 %1530 to i8
  %1532 = and i8 %1531, 1
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1532, i8* %1533, align 1
  %1534 = icmp eq i32 %1517, 0
  %1535 = zext i1 %1534 to i8
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1535, i8* %1536, align 1
  %1537 = lshr i32 %1517, 31
  %1538 = trunc i32 %1537 to i8
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1538, i8* %1539, align 1
  %1540 = lshr i32 %1511, 31
  %1541 = lshr i32 %1513, 31
  %1542 = xor i32 %1541, %1540
  %1543 = xor i32 %1537, %1540
  %1544 = add i32 %1543, %1542
  %1545 = icmp eq i32 %1544, 2
  %1546 = zext i1 %1545 to i8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1546, i8* %1547, align 1
  store %struct.Memory* %loadMem_429e56, %struct.Memory** %MEMORY
  %loadMem_429e58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %1550 to i64*
  %1551 = load i64, i64* %PC.i1142
  %1552 = add i64 %1551, 45
  %1553 = load i64, i64* %PC.i1142
  %1554 = add i64 %1553, 6
  %1555 = load i64, i64* %PC.i1142
  %1556 = add i64 %1555, 6
  store i64 %1556, i64* %PC.i1142
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1558 = load i8, i8* %1557, align 1
  %1559 = icmp ne i8 %1558, 0
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1561 = load i8, i8* %1560, align 1
  %1562 = icmp ne i8 %1561, 0
  %1563 = xor i1 %1559, %1562
  %1564 = xor i1 %1563, true
  %1565 = zext i1 %1564 to i8
  store i8 %1565, i8* %BRANCH_TAKEN, align 1
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1567 = select i1 %1563, i64 %1554, i64 %1552
  store i64 %1567, i64* %1566, align 8
  store %struct.Memory* %loadMem_429e58, %struct.Memory** %MEMORY
  %loadBr_429e58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429e58 = icmp eq i8 %loadBr_429e58, 1
  br i1 %cmpBr_429e58, label %block_.L_429e85, label %block_429e5e

block_429e5e:                                     ; preds = %routine_idivl__esi.exit1158
  %loadMem_429e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 33
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %1570 to i64*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 1
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %1573 to i64*
  %1574 = load i64, i64* %PC.i1140
  %1575 = add i64 %1574, 5
  store i64 %1575, i64* %PC.i1140
  store i64 20, i64* %RAX.i1141, align 8
  store %struct.Memory* %loadMem_429e5e, %struct.Memory** %MEMORY
  %loadMem_429e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1577 = getelementptr inbounds %struct.GPR, %struct.GPR* %1576, i32 0, i32 33
  %1578 = getelementptr inbounds %struct.Reg, %struct.Reg* %1577, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %1578 to i64*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1580 = getelementptr inbounds %struct.GPR, %struct.GPR* %1579, i32 0, i32 5
  %1581 = getelementptr inbounds %struct.Reg, %struct.Reg* %1580, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %1581 to i64*
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1583 = getelementptr inbounds %struct.GPR, %struct.GPR* %1582, i32 0, i32 15
  %1584 = getelementptr inbounds %struct.Reg, %struct.Reg* %1583, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %1584 to i64*
  %1585 = load i64, i64* %RBP.i1139
  %1586 = sub i64 %1585, 12
  %1587 = load i64, i64* %PC.i1137
  %1588 = add i64 %1587, 3
  store i64 %1588, i64* %PC.i1137
  %1589 = inttoptr i64 %1586 to i32*
  %1590 = load i32, i32* %1589
  %1591 = zext i32 %1590 to i64
  store i64 %1591, i64* %RCX.i1138, align 8
  store %struct.Memory* %loadMem_429e63, %struct.Memory** %MEMORY
  %loadMem_429e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 33
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 1
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %EAX.i1135 = bitcast %union.anon* %1597 to i32*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 15
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %RBP.i1136 = bitcast %union.anon* %1600 to i64*
  %1601 = load i64, i64* %RBP.i1136
  %1602 = sub i64 %1601, 1664
  %1603 = load i32, i32* %EAX.i1135
  %1604 = zext i32 %1603 to i64
  %1605 = load i64, i64* %PC.i1134
  %1606 = add i64 %1605, 6
  store i64 %1606, i64* %PC.i1134
  %1607 = inttoptr i64 %1602 to i32*
  store i32 %1603, i32* %1607
  store %struct.Memory* %loadMem_429e66, %struct.Memory** %MEMORY
  %loadMem_429e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 33
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %1610 to i64*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 5
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %ECX.i1132 = bitcast %union.anon* %1613 to i32*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 1
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %1616 to i64*
  %1617 = load i32, i32* %ECX.i1132
  %1618 = zext i32 %1617 to i64
  %1619 = load i64, i64* %PC.i1131
  %1620 = add i64 %1619, 2
  store i64 %1620, i64* %PC.i1131
  %1621 = and i64 %1618, 4294967295
  store i64 %1621, i64* %RAX.i1133, align 8
  store %struct.Memory* %loadMem_429e6c, %struct.Memory** %MEMORY
  %loadMem_429e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1623 = getelementptr inbounds %struct.GPR, %struct.GPR* %1622, i32 0, i32 33
  %1624 = getelementptr inbounds %struct.Reg, %struct.Reg* %1623, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %1624 to i64*
  %1625 = load i64, i64* %PC.i1130
  %1626 = add i64 %1625, 1
  store i64 %1626, i64* %PC.i1130
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1629 = bitcast %union.anon* %1628 to i32*
  %1630 = load i32, i32* %1629, align 8
  %1631 = sext i32 %1630 to i64
  %1632 = lshr i64 %1631, 32
  store i64 %1632, i64* %1627, align 8
  store %struct.Memory* %loadMem_429e6e, %struct.Memory** %MEMORY
  %loadMem_429e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1634 = getelementptr inbounds %struct.GPR, %struct.GPR* %1633, i32 0, i32 33
  %1635 = getelementptr inbounds %struct.Reg, %struct.Reg* %1634, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %1635 to i64*
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 5
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %RCX.i1128 = bitcast %union.anon* %1638 to i64*
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 15
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %1641 to i64*
  %1642 = load i64, i64* %RBP.i1129
  %1643 = sub i64 %1642, 1664
  %1644 = load i64, i64* %PC.i1127
  %1645 = add i64 %1644, 6
  store i64 %1645, i64* %PC.i1127
  %1646 = inttoptr i64 %1643 to i32*
  %1647 = load i32, i32* %1646
  %1648 = zext i32 %1647 to i64
  store i64 %1648, i64* %RCX.i1128, align 8
  store %struct.Memory* %loadMem_429e6f, %struct.Memory** %MEMORY
  %loadMem_429e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 33
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %1651 to i64*
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 5
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %ECX.i1122 = bitcast %union.anon* %1654 to i32*
  %1655 = load i32, i32* %ECX.i1122
  %1656 = zext i32 %1655 to i64
  %1657 = load i64, i64* %PC.i1121
  %1658 = add i64 %1657, 2
  store i64 %1658, i64* %PC.i1121
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1660 = bitcast %union.anon* %1659 to i32*
  %1661 = load i32, i32* %1660, align 8
  %1662 = zext i32 %1661 to i64
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1664 = bitcast %union.anon* %1663 to i32*
  %1665 = load i32, i32* %1664, align 8
  %1666 = zext i32 %1665 to i64
  %1667 = shl i64 %1656, 32
  %1668 = ashr exact i64 %1667, 32
  %1669 = shl i64 %1666, 32
  %1670 = or i64 %1669, %1662
  %1671 = sdiv i64 %1670, %1668
  %1672 = shl i64 %1671, 32
  %1673 = ashr exact i64 %1672, 32
  %1674 = icmp eq i64 %1671, %1673
  br i1 %1674, label %1679, label %1675

; <label>:1675:                                   ; preds = %block_429e5e
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1677 = load i64, i64* %1676, align 8
  %1678 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1677, %struct.Memory* %loadMem_429e75)
  br label %routine_idivl__ecx.exit1123

; <label>:1679:                                   ; preds = %block_429e5e
  %1680 = srem i64 %1670, %1668
  %1681 = getelementptr inbounds %union.anon, %union.anon* %1659, i64 0, i32 0
  %1682 = and i64 %1671, 4294967295
  store i64 %1682, i64* %1681, align 8
  %1683 = getelementptr inbounds %union.anon, %union.anon* %1663, i64 0, i32 0
  %1684 = and i64 %1680, 4294967295
  store i64 %1684, i64* %1683, align 8
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1685, align 1
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1686, align 1
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1687, align 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1688, align 1
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1689, align 1
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1690, align 1
  br label %routine_idivl__ecx.exit1123

routine_idivl__ecx.exit1123:                      ; preds = %1675, %1679
  %1691 = phi %struct.Memory* [ %1678, %1675 ], [ %loadMem_429e75, %1679 ]
  store %struct.Memory* %1691, %struct.Memory** %MEMORY
  %loadMem_429e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 33
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %1694 to i64*
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1696 = getelementptr inbounds %struct.GPR, %struct.GPR* %1695, i32 0, i32 1
  %1697 = getelementptr inbounds %struct.Reg, %struct.Reg* %1696, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %1697 to i64*
  %1698 = load i64, i64* %RAX.i1120
  %1699 = load i64, i64* %PC.i1119
  %1700 = add i64 %1699, 3
  store i64 %1700, i64* %PC.i1119
  %1701 = trunc i64 %1698 to i32
  %1702 = sub i32 %1701, 1
  %1703 = zext i32 %1702 to i64
  store i64 %1703, i64* %RAX.i1120, align 8
  %1704 = icmp ult i32 %1701, 1
  %1705 = zext i1 %1704 to i8
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1705, i8* %1706, align 1
  %1707 = and i32 %1702, 255
  %1708 = call i32 @llvm.ctpop.i32(i32 %1707)
  %1709 = trunc i32 %1708 to i8
  %1710 = and i8 %1709, 1
  %1711 = xor i8 %1710, 1
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1711, i8* %1712, align 1
  %1713 = xor i64 1, %1698
  %1714 = trunc i64 %1713 to i32
  %1715 = xor i32 %1714, %1702
  %1716 = lshr i32 %1715, 4
  %1717 = trunc i32 %1716 to i8
  %1718 = and i8 %1717, 1
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1718, i8* %1719, align 1
  %1720 = icmp eq i32 %1702, 0
  %1721 = zext i1 %1720 to i8
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1721, i8* %1722, align 1
  %1723 = lshr i32 %1702, 31
  %1724 = trunc i32 %1723 to i8
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1724, i8* %1725, align 1
  %1726 = lshr i32 %1701, 31
  %1727 = xor i32 %1723, %1726
  %1728 = add i32 %1727, %1726
  %1729 = icmp eq i32 %1728, 2
  %1730 = zext i1 %1729 to i8
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1730, i8* %1731, align 1
  store %struct.Memory* %loadMem_429e77, %struct.Memory** %MEMORY
  %loadMem_429e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 33
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %1734 to i64*
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 1
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %EAX.i1117 = bitcast %union.anon* %1737 to i32*
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 15
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %1740 to i64*
  %1741 = load i64, i64* %RBP.i1118
  %1742 = sub i64 %1741, 1668
  %1743 = load i32, i32* %EAX.i1117
  %1744 = zext i32 %1743 to i64
  %1745 = load i64, i64* %PC.i1116
  %1746 = add i64 %1745, 6
  store i64 %1746, i64* %PC.i1116
  %1747 = inttoptr i64 %1742 to i32*
  store i32 %1743, i32* %1747
  store %struct.Memory* %loadMem_429e7a, %struct.Memory** %MEMORY
  %loadMem_429e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 33
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %1750 to i64*
  %1751 = load i64, i64* %PC.i1115
  %1752 = add i64 %1751, 51
  %1753 = load i64, i64* %PC.i1115
  %1754 = add i64 %1753, 5
  store i64 %1754, i64* %PC.i1115
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1752, i64* %1755, align 8
  store %struct.Memory* %loadMem_429e80, %struct.Memory** %MEMORY
  br label %block_.L_429eb3

block_.L_429e85:                                  ; preds = %routine_idivl__esi.exit1158
  %loadMem_429e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 33
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %1758 to i64*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 1
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %1761 to i64*
  %1762 = load i64, i64* %PC.i1113
  %1763 = add i64 %1762, 5
  store i64 %1763, i64* %PC.i1113
  store i64 20, i64* %RAX.i1114, align 8
  store %struct.Memory* %loadMem_429e85, %struct.Memory** %MEMORY
  %loadMem_429e8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1765 = getelementptr inbounds %struct.GPR, %struct.GPR* %1764, i32 0, i32 33
  %1766 = getelementptr inbounds %struct.Reg, %struct.Reg* %1765, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %1766 to i64*
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 5
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %1769 to i64*
  %1770 = load i64, i64* %PC.i1111
  %1771 = add i64 %1770, 7
  store i64 %1771, i64* %PC.i1111
  %1772 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %1773 = zext i32 %1772 to i64
  store i64 %1773, i64* %RCX.i1112, align 8
  store %struct.Memory* %loadMem_429e8a, %struct.Memory** %MEMORY
  %loadMem_429e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 33
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %1776 to i64*
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1778 = getelementptr inbounds %struct.GPR, %struct.GPR* %1777, i32 0, i32 7
  %1779 = getelementptr inbounds %struct.Reg, %struct.Reg* %1778, i32 0, i32 0
  %RDX.i1109 = bitcast %union.anon* %1779 to i64*
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 15
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %1782 to i64*
  %1783 = load i64, i64* %RBP.i1110
  %1784 = sub i64 %1783, 12
  %1785 = load i64, i64* %PC.i1108
  %1786 = add i64 %1785, 3
  store i64 %1786, i64* %PC.i1108
  %1787 = inttoptr i64 %1784 to i32*
  %1788 = load i32, i32* %1787
  %1789 = zext i32 %1788 to i64
  store i64 %1789, i64* %RDX.i1109, align 8
  store %struct.Memory* %loadMem_429e91, %struct.Memory** %MEMORY
  %loadMem_429e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 33
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %1792 to i64*
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 1
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %EAX.i1106 = bitcast %union.anon* %1795 to i32*
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 15
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %1798 to i64*
  %1799 = load i64, i64* %RBP.i1107
  %1800 = sub i64 %1799, 1672
  %1801 = load i32, i32* %EAX.i1106
  %1802 = zext i32 %1801 to i64
  %1803 = load i64, i64* %PC.i1105
  %1804 = add i64 %1803, 6
  store i64 %1804, i64* %PC.i1105
  %1805 = inttoptr i64 %1800 to i32*
  store i32 %1801, i32* %1805
  store %struct.Memory* %loadMem_429e94, %struct.Memory** %MEMORY
  %loadMem_429e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 33
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %1808 to i64*
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 7
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %EDX.i1103 = bitcast %union.anon* %1811 to i32*
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 1
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %1814 to i64*
  %1815 = load i32, i32* %EDX.i1103
  %1816 = zext i32 %1815 to i64
  %1817 = load i64, i64* %PC.i1102
  %1818 = add i64 %1817, 2
  store i64 %1818, i64* %PC.i1102
  %1819 = and i64 %1816, 4294967295
  store i64 %1819, i64* %RAX.i1104, align 8
  store %struct.Memory* %loadMem_429e9a, %struct.Memory** %MEMORY
  %loadMem_429e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 33
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %1822 to i64*
  %1823 = load i64, i64* %PC.i1101
  %1824 = add i64 %1823, 1
  store i64 %1824, i64* %PC.i1101
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1827 = bitcast %union.anon* %1826 to i32*
  %1828 = load i32, i32* %1827, align 8
  %1829 = sext i32 %1828 to i64
  %1830 = lshr i64 %1829, 32
  store i64 %1830, i64* %1825, align 8
  store %struct.Memory* %loadMem_429e9c, %struct.Memory** %MEMORY
  %loadMem_429e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 33
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %1833 to i64*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 9
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %RSI.i1099 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 15
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RBP.i1100
  %1841 = sub i64 %1840, 1672
  %1842 = load i64, i64* %PC.i1098
  %1843 = add i64 %1842, 6
  store i64 %1843, i64* %PC.i1098
  %1844 = inttoptr i64 %1841 to i32*
  %1845 = load i32, i32* %1844
  %1846 = zext i32 %1845 to i64
  store i64 %1846, i64* %RSI.i1099, align 8
  store %struct.Memory* %loadMem_429e9d, %struct.Memory** %MEMORY
  %loadMem_429ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 33
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %1849 to i64*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 9
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %ESI.i1093 = bitcast %union.anon* %1852 to i32*
  %1853 = load i32, i32* %ESI.i1093
  %1854 = zext i32 %1853 to i64
  %1855 = load i64, i64* %PC.i1092
  %1856 = add i64 %1855, 2
  store i64 %1856, i64* %PC.i1092
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1858 = bitcast %union.anon* %1857 to i32*
  %1859 = load i32, i32* %1858, align 8
  %1860 = zext i32 %1859 to i64
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1862 = bitcast %union.anon* %1861 to i32*
  %1863 = load i32, i32* %1862, align 8
  %1864 = zext i32 %1863 to i64
  %1865 = shl i64 %1854, 32
  %1866 = ashr exact i64 %1865, 32
  %1867 = shl i64 %1864, 32
  %1868 = or i64 %1867, %1860
  %1869 = sdiv i64 %1868, %1866
  %1870 = shl i64 %1869, 32
  %1871 = ashr exact i64 %1870, 32
  %1872 = icmp eq i64 %1869, %1871
  br i1 %1872, label %1877, label %1873

; <label>:1873:                                   ; preds = %block_.L_429e85
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1875 = load i64, i64* %1874, align 8
  %1876 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1875, %struct.Memory* %loadMem_429ea3)
  br label %routine_idivl__esi.exit1094

; <label>:1877:                                   ; preds = %block_.L_429e85
  %1878 = srem i64 %1868, %1866
  %1879 = getelementptr inbounds %union.anon, %union.anon* %1857, i64 0, i32 0
  %1880 = and i64 %1869, 4294967295
  store i64 %1880, i64* %1879, align 8
  %1881 = getelementptr inbounds %union.anon, %union.anon* %1861, i64 0, i32 0
  %1882 = and i64 %1878, 4294967295
  store i64 %1882, i64* %1881, align 8
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1883, align 1
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1884, align 1
  %1885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1885, align 1
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1886, align 1
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1887, align 1
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1888, align 1
  br label %routine_idivl__esi.exit1094

routine_idivl__esi.exit1094:                      ; preds = %1873, %1877
  %1889 = phi %struct.Memory* [ %1876, %1873 ], [ %loadMem_429ea3, %1877 ]
  store %struct.Memory* %1889, %struct.Memory** %MEMORY
  %loadMem_429ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 33
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %1892 to i64*
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 1
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %1895 to i64*
  %1896 = load i64, i64* %RAX.i1091
  %1897 = load i64, i64* %PC.i1090
  %1898 = add i64 %1897, 3
  store i64 %1898, i64* %PC.i1090
  %1899 = trunc i64 %1896 to i32
  %1900 = sub i32 %1899, 1
  %1901 = zext i32 %1900 to i64
  store i64 %1901, i64* %RAX.i1091, align 8
  %1902 = icmp ult i32 %1899, 1
  %1903 = zext i1 %1902 to i8
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1903, i8* %1904, align 1
  %1905 = and i32 %1900, 255
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1909, i8* %1910, align 1
  %1911 = xor i64 1, %1896
  %1912 = trunc i64 %1911 to i32
  %1913 = xor i32 %1912, %1900
  %1914 = lshr i32 %1913, 4
  %1915 = trunc i32 %1914 to i8
  %1916 = and i8 %1915, 1
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1916, i8* %1917, align 1
  %1918 = icmp eq i32 %1900, 0
  %1919 = zext i1 %1918 to i8
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1919, i8* %1920, align 1
  %1921 = lshr i32 %1900, 31
  %1922 = trunc i32 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1922, i8* %1923, align 1
  %1924 = lshr i32 %1899, 31
  %1925 = xor i32 %1921, %1924
  %1926 = add i32 %1925, %1924
  %1927 = icmp eq i32 %1926, 2
  %1928 = zext i1 %1927 to i8
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1928, i8* %1929, align 1
  store %struct.Memory* %loadMem_429ea5, %struct.Memory** %MEMORY
  %loadMem_429ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1931 = getelementptr inbounds %struct.GPR, %struct.GPR* %1930, i32 0, i32 33
  %1932 = getelementptr inbounds %struct.Reg, %struct.Reg* %1931, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %1932 to i64*
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1934 = getelementptr inbounds %struct.GPR, %struct.GPR* %1933, i32 0, i32 1
  %1935 = getelementptr inbounds %struct.Reg, %struct.Reg* %1934, i32 0, i32 0
  %EAX.i1088 = bitcast %union.anon* %1935 to i32*
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 5
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %RCX.i1089 = bitcast %union.anon* %1938 to i64*
  %1939 = load i64, i64* %RCX.i1089
  %1940 = load i32, i32* %EAX.i1088
  %1941 = zext i32 %1940 to i64
  %1942 = load i64, i64* %PC.i1087
  %1943 = add i64 %1942, 2
  store i64 %1943, i64* %PC.i1087
  %1944 = trunc i64 %1939 to i32
  %1945 = sub i32 %1944, %1940
  %1946 = zext i32 %1945 to i64
  store i64 %1946, i64* %RCX.i1089, align 8
  %1947 = icmp ult i32 %1944, %1940
  %1948 = zext i1 %1947 to i8
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1948, i8* %1949, align 1
  %1950 = and i32 %1945, 255
  %1951 = call i32 @llvm.ctpop.i32(i32 %1950)
  %1952 = trunc i32 %1951 to i8
  %1953 = and i8 %1952, 1
  %1954 = xor i8 %1953, 1
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1954, i8* %1955, align 1
  %1956 = xor i64 %1941, %1939
  %1957 = trunc i64 %1956 to i32
  %1958 = xor i32 %1957, %1945
  %1959 = lshr i32 %1958, 4
  %1960 = trunc i32 %1959 to i8
  %1961 = and i8 %1960, 1
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1961, i8* %1962, align 1
  %1963 = icmp eq i32 %1945, 0
  %1964 = zext i1 %1963 to i8
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1964, i8* %1965, align 1
  %1966 = lshr i32 %1945, 31
  %1967 = trunc i32 %1966 to i8
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1967, i8* %1968, align 1
  %1969 = lshr i32 %1944, 31
  %1970 = lshr i32 %1940, 31
  %1971 = xor i32 %1970, %1969
  %1972 = xor i32 %1966, %1969
  %1973 = add i32 %1972, %1971
  %1974 = icmp eq i32 %1973, 2
  %1975 = zext i1 %1974 to i8
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1975, i8* %1976, align 1
  store %struct.Memory* %loadMem_429ea8, %struct.Memory** %MEMORY
  %loadMem_429eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 33
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %1979 to i64*
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 5
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %RCX.i1086 = bitcast %union.anon* %1982 to i64*
  %1983 = load i64, i64* %RCX.i1086
  %1984 = load i64, i64* %PC.i1085
  %1985 = add i64 %1984, 3
  store i64 %1985, i64* %PC.i1085
  %1986 = trunc i64 %1983 to i32
  %1987 = sub i32 %1986, 1
  %1988 = zext i32 %1987 to i64
  store i64 %1988, i64* %RCX.i1086, align 8
  %1989 = icmp ult i32 %1986, 1
  %1990 = zext i1 %1989 to i8
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1990, i8* %1991, align 1
  %1992 = and i32 %1987, 255
  %1993 = call i32 @llvm.ctpop.i32(i32 %1992)
  %1994 = trunc i32 %1993 to i8
  %1995 = and i8 %1994, 1
  %1996 = xor i8 %1995, 1
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1996, i8* %1997, align 1
  %1998 = xor i64 1, %1983
  %1999 = trunc i64 %1998 to i32
  %2000 = xor i32 %1999, %1987
  %2001 = lshr i32 %2000, 4
  %2002 = trunc i32 %2001 to i8
  %2003 = and i8 %2002, 1
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2003, i8* %2004, align 1
  %2005 = icmp eq i32 %1987, 0
  %2006 = zext i1 %2005 to i8
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2006, i8* %2007, align 1
  %2008 = lshr i32 %1987, 31
  %2009 = trunc i32 %2008 to i8
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2009, i8* %2010, align 1
  %2011 = lshr i32 %1986, 31
  %2012 = xor i32 %2008, %2011
  %2013 = add i32 %2012, %2011
  %2014 = icmp eq i32 %2013, 2
  %2015 = zext i1 %2014 to i8
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2015, i8* %2016, align 1
  store %struct.Memory* %loadMem_429eaa, %struct.Memory** %MEMORY
  %loadMem_429ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 33
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %2019 to i64*
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2021 = getelementptr inbounds %struct.GPR, %struct.GPR* %2020, i32 0, i32 5
  %2022 = getelementptr inbounds %struct.Reg, %struct.Reg* %2021, i32 0, i32 0
  %ECX.i1083 = bitcast %union.anon* %2022 to i32*
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 15
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %2025 to i64*
  %2026 = load i64, i64* %RBP.i1084
  %2027 = sub i64 %2026, 1668
  %2028 = load i32, i32* %ECX.i1083
  %2029 = zext i32 %2028 to i64
  %2030 = load i64, i64* %PC.i1082
  %2031 = add i64 %2030, 6
  store i64 %2031, i64* %PC.i1082
  %2032 = inttoptr i64 %2027 to i32*
  store i32 %2028, i32* %2032
  store %struct.Memory* %loadMem_429ead, %struct.Memory** %MEMORY
  br label %block_.L_429eb3

block_.L_429eb3:                                  ; preds = %routine_idivl__esi.exit1094, %routine_idivl__ecx.exit1123
  %loadMem_429eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 33
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 1
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %2038 to i64*
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 15
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %2041 to i64*
  %2042 = load i64, i64* %RBP.i1081
  %2043 = sub i64 %2042, 1668
  %2044 = load i64, i64* %PC.i1079
  %2045 = add i64 %2044, 6
  store i64 %2045, i64* %PC.i1079
  %2046 = inttoptr i64 %2043 to i32*
  %2047 = load i32, i32* %2046
  %2048 = zext i32 %2047 to i64
  store i64 %2048, i64* %RAX.i1080, align 8
  store %struct.Memory* %loadMem_429eb3, %struct.Memory** %MEMORY
  %loadMem_429eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 5
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RCX.i1078 = bitcast %union.anon* %2054 to i64*
  %2055 = load i64, i64* %PC.i1077
  %2056 = add i64 %2055, 5
  store i64 %2056, i64* %PC.i1077
  store i64 20, i64* %RCX.i1078, align 8
  store %struct.Memory* %loadMem_429eb9, %struct.Memory** %MEMORY
  %loadMem_429ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 33
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 1
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %EAX.i1075 = bitcast %union.anon* %2062 to i32*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2064 = getelementptr inbounds %struct.GPR, %struct.GPR* %2063, i32 0, i32 15
  %2065 = getelementptr inbounds %struct.Reg, %struct.Reg* %2064, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %2065 to i64*
  %2066 = load i64, i64* %RBP.i1076
  %2067 = sub i64 %2066, 16
  %2068 = load i32, i32* %EAX.i1075
  %2069 = zext i32 %2068 to i64
  %2070 = load i64, i64* %PC.i1074
  %2071 = add i64 %2070, 3
  store i64 %2071, i64* %PC.i1074
  %2072 = inttoptr i64 %2067 to i32*
  store i32 %2068, i32* %2072
  store %struct.Memory* %loadMem_429ebe, %struct.Memory** %MEMORY
  %loadMem_429ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 33
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 1
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %RAX.i1072 = bitcast %union.anon* %2078 to i64*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 15
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %2081 to i64*
  %2082 = load i64, i64* %RBP.i1073
  %2083 = sub i64 %2082, 12
  %2084 = load i64, i64* %PC.i1071
  %2085 = add i64 %2084, 3
  store i64 %2085, i64* %PC.i1071
  %2086 = inttoptr i64 %2083 to i32*
  %2087 = load i32, i32* %2086
  %2088 = zext i32 %2087 to i64
  store i64 %2088, i64* %RAX.i1072, align 8
  store %struct.Memory* %loadMem_429ec1, %struct.Memory** %MEMORY
  %loadMem_429ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 33
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %2091 to i64*
  %2092 = load i64, i64* %PC.i1070
  %2093 = add i64 %2092, 1
  store i64 %2093, i64* %PC.i1070
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2096 = bitcast %union.anon* %2095 to i32*
  %2097 = load i32, i32* %2096, align 8
  %2098 = sext i32 %2097 to i64
  %2099 = lshr i64 %2098, 32
  store i64 %2099, i64* %2094, align 8
  store %struct.Memory* %loadMem_429ec4, %struct.Memory** %MEMORY
  %loadMem_429ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2101 = getelementptr inbounds %struct.GPR, %struct.GPR* %2100, i32 0, i32 33
  %2102 = getelementptr inbounds %struct.Reg, %struct.Reg* %2101, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %2102 to i64*
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2104 = getelementptr inbounds %struct.GPR, %struct.GPR* %2103, i32 0, i32 5
  %2105 = getelementptr inbounds %struct.Reg, %struct.Reg* %2104, i32 0, i32 0
  %ECX.i1065 = bitcast %union.anon* %2105 to i32*
  %2106 = load i32, i32* %ECX.i1065
  %2107 = zext i32 %2106 to i64
  %2108 = load i64, i64* %PC.i1064
  %2109 = add i64 %2108, 2
  store i64 %2109, i64* %PC.i1064
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2111 = bitcast %union.anon* %2110 to i32*
  %2112 = load i32, i32* %2111, align 8
  %2113 = zext i32 %2112 to i64
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2115 = bitcast %union.anon* %2114 to i32*
  %2116 = load i32, i32* %2115, align 8
  %2117 = zext i32 %2116 to i64
  %2118 = shl i64 %2107, 32
  %2119 = ashr exact i64 %2118, 32
  %2120 = shl i64 %2117, 32
  %2121 = or i64 %2120, %2113
  %2122 = sdiv i64 %2121, %2119
  %2123 = shl i64 %2122, 32
  %2124 = ashr exact i64 %2123, 32
  %2125 = icmp eq i64 %2122, %2124
  br i1 %2125, label %2130, label %2126

; <label>:2126:                                   ; preds = %block_.L_429eb3
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2128 = load i64, i64* %2127, align 8
  %2129 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2128, %struct.Memory* %loadMem_429ec5)
  br label %routine_idivl__ecx.exit1066

; <label>:2130:                                   ; preds = %block_.L_429eb3
  %2131 = srem i64 %2121, %2119
  %2132 = getelementptr inbounds %union.anon, %union.anon* %2110, i64 0, i32 0
  %2133 = and i64 %2122, 4294967295
  store i64 %2133, i64* %2132, align 8
  %2134 = getelementptr inbounds %union.anon, %union.anon* %2114, i64 0, i32 0
  %2135 = and i64 %2131, 4294967295
  store i64 %2135, i64* %2134, align 8
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2136, align 1
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2137, align 1
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2138, align 1
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2139, align 1
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2140, align 1
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2141, align 1
  br label %routine_idivl__ecx.exit1066

routine_idivl__ecx.exit1066:                      ; preds = %2126, %2130
  %2142 = phi %struct.Memory* [ %2129, %2126 ], [ %loadMem_429ec5, %2130 ]
  store %struct.Memory* %2142, %struct.Memory** %MEMORY
  %loadMem_429ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2144 = getelementptr inbounds %struct.GPR, %struct.GPR* %2143, i32 0, i32 33
  %2145 = getelementptr inbounds %struct.Reg, %struct.Reg* %2144, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %2145 to i64*
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 7
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %RDX.i1063 = bitcast %union.anon* %2148 to i64*
  %2149 = load i64, i64* %RDX.i1063
  %2150 = load i64, i64* %PC.i1062
  %2151 = add i64 %2150, 3
  store i64 %2151, i64* %PC.i1062
  %2152 = trunc i64 %2149 to i32
  %2153 = sub i32 %2152, 1
  %2154 = zext i32 %2153 to i64
  store i64 %2154, i64* %RDX.i1063, align 8
  %2155 = icmp ult i32 %2152, 1
  %2156 = zext i1 %2155 to i8
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2156, i8* %2157, align 1
  %2158 = and i32 %2153, 255
  %2159 = call i32 @llvm.ctpop.i32(i32 %2158)
  %2160 = trunc i32 %2159 to i8
  %2161 = and i8 %2160, 1
  %2162 = xor i8 %2161, 1
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2162, i8* %2163, align 1
  %2164 = xor i64 1, %2149
  %2165 = trunc i64 %2164 to i32
  %2166 = xor i32 %2165, %2153
  %2167 = lshr i32 %2166, 4
  %2168 = trunc i32 %2167 to i8
  %2169 = and i8 %2168, 1
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2169, i8* %2170, align 1
  %2171 = icmp eq i32 %2153, 0
  %2172 = zext i1 %2171 to i8
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2172, i8* %2173, align 1
  %2174 = lshr i32 %2153, 31
  %2175 = trunc i32 %2174 to i8
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2175, i8* %2176, align 1
  %2177 = lshr i32 %2152, 31
  %2178 = xor i32 %2174, %2177
  %2179 = add i32 %2178, %2177
  %2180 = icmp eq i32 %2179, 2
  %2181 = zext i1 %2180 to i8
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2181, i8* %2182, align 1
  store %struct.Memory* %loadMem_429ec7, %struct.Memory** %MEMORY
  %loadMem_429eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2184 = getelementptr inbounds %struct.GPR, %struct.GPR* %2183, i32 0, i32 33
  %2185 = getelementptr inbounds %struct.Reg, %struct.Reg* %2184, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %2185 to i64*
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2187 = getelementptr inbounds %struct.GPR, %struct.GPR* %2186, i32 0, i32 9
  %2188 = getelementptr inbounds %struct.Reg, %struct.Reg* %2187, i32 0, i32 0
  %RSI.i1061 = bitcast %union.anon* %2188 to i64*
  %2189 = load i64, i64* %PC.i1060
  %2190 = add i64 %2189, 7
  store i64 %2190, i64* %PC.i1060
  %2191 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %2192 = zext i32 %2191 to i64
  store i64 %2192, i64* %RSI.i1061, align 8
  store %struct.Memory* %loadMem_429eca, %struct.Memory** %MEMORY
  %loadMem_429ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 33
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %2195 to i64*
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2197 = getelementptr inbounds %struct.GPR, %struct.GPR* %2196, i32 0, i32 11
  %2198 = getelementptr inbounds %struct.Reg, %struct.Reg* %2197, i32 0, i32 0
  %RDI.i1058 = bitcast %union.anon* %2198 to i64*
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2200 = getelementptr inbounds %struct.GPR, %struct.GPR* %2199, i32 0, i32 15
  %2201 = getelementptr inbounds %struct.Reg, %struct.Reg* %2200, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %2201 to i64*
  %2202 = load i64, i64* %RBP.i1059
  %2203 = sub i64 %2202, 12
  %2204 = load i64, i64* %PC.i1057
  %2205 = add i64 %2204, 3
  store i64 %2205, i64* %PC.i1057
  %2206 = inttoptr i64 %2203 to i32*
  %2207 = load i32, i32* %2206
  %2208 = zext i32 %2207 to i64
  store i64 %2208, i64* %RDI.i1058, align 8
  store %struct.Memory* %loadMem_429ed1, %struct.Memory** %MEMORY
  %loadMem_429ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 33
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %2211 to i64*
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2213 = getelementptr inbounds %struct.GPR, %struct.GPR* %2212, i32 0, i32 11
  %2214 = getelementptr inbounds %struct.Reg, %struct.Reg* %2213, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %2214 to i32*
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2216 = getelementptr inbounds %struct.GPR, %struct.GPR* %2215, i32 0, i32 1
  %2217 = getelementptr inbounds %struct.Reg, %struct.Reg* %2216, i32 0, i32 0
  %RAX.i1056 = bitcast %union.anon* %2217 to i64*
  %2218 = load i32, i32* %EDI.i
  %2219 = zext i32 %2218 to i64
  %2220 = load i64, i64* %PC.i1055
  %2221 = add i64 %2220, 2
  store i64 %2221, i64* %PC.i1055
  %2222 = and i64 %2219, 4294967295
  store i64 %2222, i64* %RAX.i1056, align 8
  store %struct.Memory* %loadMem_429ed4, %struct.Memory** %MEMORY
  %loadMem_429ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 7
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %EDX.i1053 = bitcast %union.anon* %2228 to i32*
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2230 = getelementptr inbounds %struct.GPR, %struct.GPR* %2229, i32 0, i32 15
  %2231 = getelementptr inbounds %struct.Reg, %struct.Reg* %2230, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %2231 to i64*
  %2232 = load i64, i64* %RBP.i1054
  %2233 = sub i64 %2232, 1676
  %2234 = load i32, i32* %EDX.i1053
  %2235 = zext i32 %2234 to i64
  %2236 = load i64, i64* %PC.i1052
  %2237 = add i64 %2236, 6
  store i64 %2237, i64* %PC.i1052
  %2238 = inttoptr i64 %2233 to i32*
  store i32 %2234, i32* %2238
  store %struct.Memory* %loadMem_429ed6, %struct.Memory** %MEMORY
  %loadMem_429edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 33
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %2241 to i64*
  %2242 = load i64, i64* %PC.i1051
  %2243 = add i64 %2242, 1
  store i64 %2243, i64* %PC.i1051
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2246 = bitcast %union.anon* %2245 to i32*
  %2247 = load i32, i32* %2246, align 8
  %2248 = sext i32 %2247 to i64
  %2249 = lshr i64 %2248, 32
  store i64 %2249, i64* %2244, align 8
  store %struct.Memory* %loadMem_429edc, %struct.Memory** %MEMORY
  %loadMem_429edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 33
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %2252 to i64*
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 5
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %ECX.i1045 = bitcast %union.anon* %2255 to i32*
  %2256 = load i32, i32* %ECX.i1045
  %2257 = zext i32 %2256 to i64
  %2258 = load i64, i64* %PC.i1044
  %2259 = add i64 %2258, 2
  store i64 %2259, i64* %PC.i1044
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2261 = bitcast %union.anon* %2260 to i32*
  %2262 = load i32, i32* %2261, align 8
  %2263 = zext i32 %2262 to i64
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2265 = bitcast %union.anon* %2264 to i32*
  %2266 = load i32, i32* %2265, align 8
  %2267 = zext i32 %2266 to i64
  %2268 = shl i64 %2257, 32
  %2269 = ashr exact i64 %2268, 32
  %2270 = shl i64 %2267, 32
  %2271 = or i64 %2270, %2263
  %2272 = sdiv i64 %2271, %2269
  %2273 = shl i64 %2272, 32
  %2274 = ashr exact i64 %2273, 32
  %2275 = icmp eq i64 %2272, %2274
  br i1 %2275, label %2280, label %2276

; <label>:2276:                                   ; preds = %routine_idivl__ecx.exit1066
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2278 = load i64, i64* %2277, align 8
  %2279 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2278, %struct.Memory* %loadMem_429edd)
  br label %routine_idivl__ecx.exit1046

; <label>:2280:                                   ; preds = %routine_idivl__ecx.exit1066
  %2281 = srem i64 %2271, %2269
  %2282 = getelementptr inbounds %union.anon, %union.anon* %2260, i64 0, i32 0
  %2283 = and i64 %2272, 4294967295
  store i64 %2283, i64* %2282, align 8
  %2284 = getelementptr inbounds %union.anon, %union.anon* %2264, i64 0, i32 0
  %2285 = and i64 %2281, 4294967295
  store i64 %2285, i64* %2284, align 8
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2286, align 1
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2287, align 1
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2288, align 1
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2289, align 1
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2290, align 1
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2291, align 1
  br label %routine_idivl__ecx.exit1046

routine_idivl__ecx.exit1046:                      ; preds = %2276, %2280
  %2292 = phi %struct.Memory* [ %2279, %2276 ], [ %loadMem_429edd, %2280 ]
  store %struct.Memory* %2292, %struct.Memory** %MEMORY
  %loadMem_429edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 7
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RDX.i1043 = bitcast %union.anon* %2298 to i64*
  %2299 = load i64, i64* %RDX.i1043
  %2300 = load i64, i64* %PC.i1042
  %2301 = add i64 %2300, 3
  store i64 %2301, i64* %PC.i1042
  %2302 = trunc i64 %2299 to i32
  %2303 = sub i32 %2302, 1
  %2304 = zext i32 %2303 to i64
  store i64 %2304, i64* %RDX.i1043, align 8
  %2305 = icmp ult i32 %2302, 1
  %2306 = zext i1 %2305 to i8
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2306, i8* %2307, align 1
  %2308 = and i32 %2303, 255
  %2309 = call i32 @llvm.ctpop.i32(i32 %2308)
  %2310 = trunc i32 %2309 to i8
  %2311 = and i8 %2310, 1
  %2312 = xor i8 %2311, 1
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2312, i8* %2313, align 1
  %2314 = xor i64 1, %2299
  %2315 = trunc i64 %2314 to i32
  %2316 = xor i32 %2315, %2303
  %2317 = lshr i32 %2316, 4
  %2318 = trunc i32 %2317 to i8
  %2319 = and i8 %2318, 1
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2319, i8* %2320, align 1
  %2321 = icmp eq i32 %2303, 0
  %2322 = zext i1 %2321 to i8
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2322, i8* %2323, align 1
  %2324 = lshr i32 %2303, 31
  %2325 = trunc i32 %2324 to i8
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2325, i8* %2326, align 1
  %2327 = lshr i32 %2302, 31
  %2328 = xor i32 %2324, %2327
  %2329 = add i32 %2328, %2327
  %2330 = icmp eq i32 %2329, 2
  %2331 = zext i1 %2330 to i8
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2331, i8* %2332, align 1
  store %struct.Memory* %loadMem_429edf, %struct.Memory** %MEMORY
  %loadMem_429ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 33
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %2335 to i64*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 7
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %EDX.i1040 = bitcast %union.anon* %2338 to i32*
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 9
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %RSI.i1041 = bitcast %union.anon* %2341 to i64*
  %2342 = load i64, i64* %RSI.i1041
  %2343 = load i32, i32* %EDX.i1040
  %2344 = zext i32 %2343 to i64
  %2345 = load i64, i64* %PC.i1039
  %2346 = add i64 %2345, 2
  store i64 %2346, i64* %PC.i1039
  %2347 = trunc i64 %2342 to i32
  %2348 = sub i32 %2347, %2343
  %2349 = zext i32 %2348 to i64
  store i64 %2349, i64* %RSI.i1041, align 8
  %2350 = icmp ult i32 %2347, %2343
  %2351 = zext i1 %2350 to i8
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2351, i8* %2352, align 1
  %2353 = and i32 %2348, 255
  %2354 = call i32 @llvm.ctpop.i32(i32 %2353)
  %2355 = trunc i32 %2354 to i8
  %2356 = and i8 %2355, 1
  %2357 = xor i8 %2356, 1
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2357, i8* %2358, align 1
  %2359 = xor i64 %2344, %2342
  %2360 = trunc i64 %2359 to i32
  %2361 = xor i32 %2360, %2348
  %2362 = lshr i32 %2361, 4
  %2363 = trunc i32 %2362 to i8
  %2364 = and i8 %2363, 1
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2364, i8* %2365, align 1
  %2366 = icmp eq i32 %2348, 0
  %2367 = zext i1 %2366 to i8
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2367, i8* %2368, align 1
  %2369 = lshr i32 %2348, 31
  %2370 = trunc i32 %2369 to i8
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2370, i8* %2371, align 1
  %2372 = lshr i32 %2347, 31
  %2373 = lshr i32 %2343, 31
  %2374 = xor i32 %2373, %2372
  %2375 = xor i32 %2369, %2372
  %2376 = add i32 %2375, %2374
  %2377 = icmp eq i32 %2376, 2
  %2378 = zext i1 %2377 to i8
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2378, i8* %2379, align 1
  store %struct.Memory* %loadMem_429ee2, %struct.Memory** %MEMORY
  %loadMem_429ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2381 = getelementptr inbounds %struct.GPR, %struct.GPR* %2380, i32 0, i32 33
  %2382 = getelementptr inbounds %struct.Reg, %struct.Reg* %2381, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %2382 to i64*
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 9
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %2385 to i64*
  %2386 = load i64, i64* %RSI.i1038
  %2387 = load i64, i64* %PC.i1037
  %2388 = add i64 %2387, 3
  store i64 %2388, i64* %PC.i1037
  %2389 = trunc i64 %2386 to i32
  %2390 = sub i32 %2389, 1
  %2391 = zext i32 %2390 to i64
  store i64 %2391, i64* %RSI.i1038, align 8
  %2392 = icmp ult i32 %2389, 1
  %2393 = zext i1 %2392 to i8
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2393, i8* %2394, align 1
  %2395 = and i32 %2390, 255
  %2396 = call i32 @llvm.ctpop.i32(i32 %2395)
  %2397 = trunc i32 %2396 to i8
  %2398 = and i8 %2397, 1
  %2399 = xor i8 %2398, 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2399, i8* %2400, align 1
  %2401 = xor i64 1, %2386
  %2402 = trunc i64 %2401 to i32
  %2403 = xor i32 %2402, %2390
  %2404 = lshr i32 %2403, 4
  %2405 = trunc i32 %2404 to i8
  %2406 = and i8 %2405, 1
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2406, i8* %2407, align 1
  %2408 = icmp eq i32 %2390, 0
  %2409 = zext i1 %2408 to i8
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2409, i8* %2410, align 1
  %2411 = lshr i32 %2390, 31
  %2412 = trunc i32 %2411 to i8
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2412, i8* %2413, align 1
  %2414 = lshr i32 %2389, 31
  %2415 = xor i32 %2411, %2414
  %2416 = add i32 %2415, %2414
  %2417 = icmp eq i32 %2416, 2
  %2418 = zext i1 %2417 to i8
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2418, i8* %2419, align 1
  store %struct.Memory* %loadMem_429ee4, %struct.Memory** %MEMORY
  %loadMem_429ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 33
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %2422 to i64*
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 5
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %RCX.i1035 = bitcast %union.anon* %2425 to i64*
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 15
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %2428 to i64*
  %2429 = load i64, i64* %RBP.i1036
  %2430 = sub i64 %2429, 1676
  %2431 = load i64, i64* %PC.i1034
  %2432 = add i64 %2431, 6
  store i64 %2432, i64* %PC.i1034
  %2433 = inttoptr i64 %2430 to i32*
  %2434 = load i32, i32* %2433
  %2435 = zext i32 %2434 to i64
  store i64 %2435, i64* %RCX.i1035, align 8
  store %struct.Memory* %loadMem_429ee7, %struct.Memory** %MEMORY
  %loadMem_429eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2437 = getelementptr inbounds %struct.GPR, %struct.GPR* %2436, i32 0, i32 33
  %2438 = getelementptr inbounds %struct.Reg, %struct.Reg* %2437, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %2438 to i64*
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2440 = getelementptr inbounds %struct.GPR, %struct.GPR* %2439, i32 0, i32 5
  %2441 = getelementptr inbounds %struct.Reg, %struct.Reg* %2440, i32 0, i32 0
  %ECX.i1032 = bitcast %union.anon* %2441 to i32*
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2443 = getelementptr inbounds %struct.GPR, %struct.GPR* %2442, i32 0, i32 9
  %2444 = getelementptr inbounds %struct.Reg, %struct.Reg* %2443, i32 0, i32 0
  %ESI.i1033 = bitcast %union.anon* %2444 to i32*
  %2445 = load i32, i32* %ECX.i1032
  %2446 = zext i32 %2445 to i64
  %2447 = load i32, i32* %ESI.i1033
  %2448 = zext i32 %2447 to i64
  %2449 = load i64, i64* %PC.i1031
  %2450 = add i64 %2449, 2
  store i64 %2450, i64* %PC.i1031
  %2451 = sub i32 %2445, %2447
  %2452 = icmp ult i32 %2445, %2447
  %2453 = zext i1 %2452 to i8
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2453, i8* %2454, align 1
  %2455 = and i32 %2451, 255
  %2456 = call i32 @llvm.ctpop.i32(i32 %2455)
  %2457 = trunc i32 %2456 to i8
  %2458 = and i8 %2457, 1
  %2459 = xor i8 %2458, 1
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2459, i8* %2460, align 1
  %2461 = xor i64 %2448, %2446
  %2462 = trunc i64 %2461 to i32
  %2463 = xor i32 %2462, %2451
  %2464 = lshr i32 %2463, 4
  %2465 = trunc i32 %2464 to i8
  %2466 = and i8 %2465, 1
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2466, i8* %2467, align 1
  %2468 = icmp eq i32 %2451, 0
  %2469 = zext i1 %2468 to i8
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2469, i8* %2470, align 1
  %2471 = lshr i32 %2451, 31
  %2472 = trunc i32 %2471 to i8
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2472, i8* %2473, align 1
  %2474 = lshr i32 %2445, 31
  %2475 = lshr i32 %2447, 31
  %2476 = xor i32 %2475, %2474
  %2477 = xor i32 %2471, %2474
  %2478 = add i32 %2477, %2476
  %2479 = icmp eq i32 %2478, 2
  %2480 = zext i1 %2479 to i8
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2480, i8* %2481, align 1
  store %struct.Memory* %loadMem_429eed, %struct.Memory** %MEMORY
  %loadMem_429eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2483 = getelementptr inbounds %struct.GPR, %struct.GPR* %2482, i32 0, i32 33
  %2484 = getelementptr inbounds %struct.Reg, %struct.Reg* %2483, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %2484 to i64*
  %2485 = load i64, i64* %PC.i1030
  %2486 = add i64 %2485, 45
  %2487 = load i64, i64* %PC.i1030
  %2488 = add i64 %2487, 6
  %2489 = load i64, i64* %PC.i1030
  %2490 = add i64 %2489, 6
  store i64 %2490, i64* %PC.i1030
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2492 = load i8, i8* %2491, align 1
  %2493 = icmp ne i8 %2492, 0
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2495 = load i8, i8* %2494, align 1
  %2496 = icmp ne i8 %2495, 0
  %2497 = xor i1 %2493, %2496
  %2498 = xor i1 %2497, true
  %2499 = zext i1 %2498 to i8
  store i8 %2499, i8* %BRANCH_TAKEN, align 1
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2501 = select i1 %2497, i64 %2488, i64 %2486
  store i64 %2501, i64* %2500, align 8
  store %struct.Memory* %loadMem_429eef, %struct.Memory** %MEMORY
  %loadBr_429eef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429eef = icmp eq i8 %loadBr_429eef, 1
  br i1 %cmpBr_429eef, label %block_.L_429f1c, label %block_429ef5

block_429ef5:                                     ; preds = %routine_idivl__ecx.exit1046
  %loadMem_429ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2503 = getelementptr inbounds %struct.GPR, %struct.GPR* %2502, i32 0, i32 33
  %2504 = getelementptr inbounds %struct.Reg, %struct.Reg* %2503, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %2504 to i64*
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 1
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %2507 to i64*
  %2508 = load i64, i64* %PC.i1028
  %2509 = add i64 %2508, 5
  store i64 %2509, i64* %PC.i1028
  store i64 20, i64* %RAX.i1029, align 8
  store %struct.Memory* %loadMem_429ef5, %struct.Memory** %MEMORY
  %loadMem_429efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 33
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %2512 to i64*
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 5
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %2515 to i64*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 15
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %2518 to i64*
  %2519 = load i64, i64* %RBP.i1027
  %2520 = sub i64 %2519, 12
  %2521 = load i64, i64* %PC.i1025
  %2522 = add i64 %2521, 3
  store i64 %2522, i64* %PC.i1025
  %2523 = inttoptr i64 %2520 to i32*
  %2524 = load i32, i32* %2523
  %2525 = zext i32 %2524 to i64
  store i64 %2525, i64* %RCX.i1026, align 8
  store %struct.Memory* %loadMem_429efa, %struct.Memory** %MEMORY
  %loadMem_429efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 33
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %2528 to i64*
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2530 = getelementptr inbounds %struct.GPR, %struct.GPR* %2529, i32 0, i32 1
  %2531 = getelementptr inbounds %struct.Reg, %struct.Reg* %2530, i32 0, i32 0
  %EAX.i1023 = bitcast %union.anon* %2531 to i32*
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 15
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %2534 to i64*
  %2535 = load i64, i64* %RBP.i1024
  %2536 = sub i64 %2535, 1680
  %2537 = load i32, i32* %EAX.i1023
  %2538 = zext i32 %2537 to i64
  %2539 = load i64, i64* %PC.i1022
  %2540 = add i64 %2539, 6
  store i64 %2540, i64* %PC.i1022
  %2541 = inttoptr i64 %2536 to i32*
  store i32 %2537, i32* %2541
  store %struct.Memory* %loadMem_429efd, %struct.Memory** %MEMORY
  %loadMem_429f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 33
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 5
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %ECX.i1020 = bitcast %union.anon* %2547 to i32*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 1
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %2550 to i64*
  %2551 = load i32, i32* %ECX.i1020
  %2552 = zext i32 %2551 to i64
  %2553 = load i64, i64* %PC.i1019
  %2554 = add i64 %2553, 2
  store i64 %2554, i64* %PC.i1019
  %2555 = and i64 %2552, 4294967295
  store i64 %2555, i64* %RAX.i1021, align 8
  store %struct.Memory* %loadMem_429f03, %struct.Memory** %MEMORY
  %loadMem_429f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 33
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2558 to i64*
  %2559 = load i64, i64* %PC.i1018
  %2560 = add i64 %2559, 1
  store i64 %2560, i64* %PC.i1018
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2563 = bitcast %union.anon* %2562 to i32*
  %2564 = load i32, i32* %2563, align 8
  %2565 = sext i32 %2564 to i64
  %2566 = lshr i64 %2565, 32
  store i64 %2566, i64* %2561, align 8
  store %struct.Memory* %loadMem_429f05, %struct.Memory** %MEMORY
  %loadMem_429f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2568 = getelementptr inbounds %struct.GPR, %struct.GPR* %2567, i32 0, i32 33
  %2569 = getelementptr inbounds %struct.Reg, %struct.Reg* %2568, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %2569 to i64*
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 5
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %RCX.i1016 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 15
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %2575 to i64*
  %2576 = load i64, i64* %RBP.i1017
  %2577 = sub i64 %2576, 1680
  %2578 = load i64, i64* %PC.i1015
  %2579 = add i64 %2578, 6
  store i64 %2579, i64* %PC.i1015
  %2580 = inttoptr i64 %2577 to i32*
  %2581 = load i32, i32* %2580
  %2582 = zext i32 %2581 to i64
  store i64 %2582, i64* %RCX.i1016, align 8
  store %struct.Memory* %loadMem_429f06, %struct.Memory** %MEMORY
  %loadMem_429f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 33
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %2585 to i64*
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 5
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %ECX.i1011 = bitcast %union.anon* %2588 to i32*
  %2589 = load i32, i32* %ECX.i1011
  %2590 = zext i32 %2589 to i64
  %2591 = load i64, i64* %PC.i1010
  %2592 = add i64 %2591, 2
  store i64 %2592, i64* %PC.i1010
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2594 = bitcast %union.anon* %2593 to i32*
  %2595 = load i32, i32* %2594, align 8
  %2596 = zext i32 %2595 to i64
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2598 = bitcast %union.anon* %2597 to i32*
  %2599 = load i32, i32* %2598, align 8
  %2600 = zext i32 %2599 to i64
  %2601 = shl i64 %2590, 32
  %2602 = ashr exact i64 %2601, 32
  %2603 = shl i64 %2600, 32
  %2604 = or i64 %2603, %2596
  %2605 = sdiv i64 %2604, %2602
  %2606 = shl i64 %2605, 32
  %2607 = ashr exact i64 %2606, 32
  %2608 = icmp eq i64 %2605, %2607
  br i1 %2608, label %2613, label %2609

; <label>:2609:                                   ; preds = %block_429ef5
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2611 = load i64, i64* %2610, align 8
  %2612 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2611, %struct.Memory* %loadMem_429f0c)
  br label %routine_idivl__ecx.exit

; <label>:2613:                                   ; preds = %block_429ef5
  %2614 = srem i64 %2604, %2602
  %2615 = getelementptr inbounds %union.anon, %union.anon* %2593, i64 0, i32 0
  %2616 = and i64 %2605, 4294967295
  store i64 %2616, i64* %2615, align 8
  %2617 = getelementptr inbounds %union.anon, %union.anon* %2597, i64 0, i32 0
  %2618 = and i64 %2614, 4294967295
  store i64 %2618, i64* %2617, align 8
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2619, align 1
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2620, align 1
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2621, align 1
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2622, align 1
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2623, align 1
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2624, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %2609, %2613
  %2625 = phi %struct.Memory* [ %2612, %2609 ], [ %loadMem_429f0c, %2613 ]
  store %struct.Memory* %2625, %struct.Memory** %MEMORY
  %loadMem_429f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 33
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %2628 to i64*
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 7
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %2631 to i64*
  %2632 = load i64, i64* %RDX.i1009
  %2633 = load i64, i64* %PC.i1008
  %2634 = add i64 %2633, 3
  store i64 %2634, i64* %PC.i1008
  %2635 = trunc i64 %2632 to i32
  %2636 = sub i32 %2635, 1
  %2637 = zext i32 %2636 to i64
  store i64 %2637, i64* %RDX.i1009, align 8
  %2638 = icmp ult i32 %2635, 1
  %2639 = zext i1 %2638 to i8
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2639, i8* %2640, align 1
  %2641 = and i32 %2636, 255
  %2642 = call i32 @llvm.ctpop.i32(i32 %2641)
  %2643 = trunc i32 %2642 to i8
  %2644 = and i8 %2643, 1
  %2645 = xor i8 %2644, 1
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2645, i8* %2646, align 1
  %2647 = xor i64 1, %2632
  %2648 = trunc i64 %2647 to i32
  %2649 = xor i32 %2648, %2636
  %2650 = lshr i32 %2649, 4
  %2651 = trunc i32 %2650 to i8
  %2652 = and i8 %2651, 1
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2652, i8* %2653, align 1
  %2654 = icmp eq i32 %2636, 0
  %2655 = zext i1 %2654 to i8
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2655, i8* %2656, align 1
  %2657 = lshr i32 %2636, 31
  %2658 = trunc i32 %2657 to i8
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2658, i8* %2659, align 1
  %2660 = lshr i32 %2635, 31
  %2661 = xor i32 %2657, %2660
  %2662 = add i32 %2661, %2660
  %2663 = icmp eq i32 %2662, 2
  %2664 = zext i1 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2664, i8* %2665, align 1
  store %struct.Memory* %loadMem_429f0e, %struct.Memory** %MEMORY
  %loadMem_429f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 33
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %2668 to i64*
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 7
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %EDX.i1006 = bitcast %union.anon* %2671 to i32*
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 15
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %2674 to i64*
  %2675 = load i64, i64* %RBP.i1007
  %2676 = sub i64 %2675, 1684
  %2677 = load i32, i32* %EDX.i1006
  %2678 = zext i32 %2677 to i64
  %2679 = load i64, i64* %PC.i1005
  %2680 = add i64 %2679, 6
  store i64 %2680, i64* %PC.i1005
  %2681 = inttoptr i64 %2676 to i32*
  store i32 %2677, i32* %2681
  store %struct.Memory* %loadMem_429f11, %struct.Memory** %MEMORY
  %loadMem_429f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2683 = getelementptr inbounds %struct.GPR, %struct.GPR* %2682, i32 0, i32 33
  %2684 = getelementptr inbounds %struct.Reg, %struct.Reg* %2683, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %2684 to i64*
  %2685 = load i64, i64* %PC.i1004
  %2686 = add i64 %2685, 51
  %2687 = load i64, i64* %PC.i1004
  %2688 = add i64 %2687, 5
  store i64 %2688, i64* %PC.i1004
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2686, i64* %2689, align 8
  store %struct.Memory* %loadMem_429f17, %struct.Memory** %MEMORY
  br label %block_.L_429f4a

block_.L_429f1c:                                  ; preds = %routine_idivl__ecx.exit1046
  %loadMem_429f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 33
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %2692 to i64*
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2694 = getelementptr inbounds %struct.GPR, %struct.GPR* %2693, i32 0, i32 1
  %2695 = getelementptr inbounds %struct.Reg, %struct.Reg* %2694, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %2695 to i64*
  %2696 = load i64, i64* %PC.i1002
  %2697 = add i64 %2696, 5
  store i64 %2697, i64* %PC.i1002
  store i64 20, i64* %RAX.i1003, align 8
  store %struct.Memory* %loadMem_429f1c, %struct.Memory** %MEMORY
  %loadMem_429f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2699 = getelementptr inbounds %struct.GPR, %struct.GPR* %2698, i32 0, i32 33
  %2700 = getelementptr inbounds %struct.Reg, %struct.Reg* %2699, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %2700 to i64*
  %2701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2702 = getelementptr inbounds %struct.GPR, %struct.GPR* %2701, i32 0, i32 5
  %2703 = getelementptr inbounds %struct.Reg, %struct.Reg* %2702, i32 0, i32 0
  %RCX.i1001 = bitcast %union.anon* %2703 to i64*
  %2704 = load i64, i64* %PC.i1000
  %2705 = add i64 %2704, 7
  store i64 %2705, i64* %PC.i1000
  %2706 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %2707 = zext i32 %2706 to i64
  store i64 %2707, i64* %RCX.i1001, align 8
  store %struct.Memory* %loadMem_429f21, %struct.Memory** %MEMORY
  %loadMem_429f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2709 = getelementptr inbounds %struct.GPR, %struct.GPR* %2708, i32 0, i32 33
  %2710 = getelementptr inbounds %struct.Reg, %struct.Reg* %2709, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %2710 to i64*
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 7
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %RDX.i998 = bitcast %union.anon* %2713 to i64*
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 15
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %2716 to i64*
  %2717 = load i64, i64* %RBP.i999
  %2718 = sub i64 %2717, 12
  %2719 = load i64, i64* %PC.i997
  %2720 = add i64 %2719, 3
  store i64 %2720, i64* %PC.i997
  %2721 = inttoptr i64 %2718 to i32*
  %2722 = load i32, i32* %2721
  %2723 = zext i32 %2722 to i64
  store i64 %2723, i64* %RDX.i998, align 8
  store %struct.Memory* %loadMem_429f28, %struct.Memory** %MEMORY
  %loadMem_429f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 33
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %2726 to i64*
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 1
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %EAX.i995 = bitcast %union.anon* %2729 to i32*
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 15
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %RBP.i996 = bitcast %union.anon* %2732 to i64*
  %2733 = load i64, i64* %RBP.i996
  %2734 = sub i64 %2733, 1688
  %2735 = load i32, i32* %EAX.i995
  %2736 = zext i32 %2735 to i64
  %2737 = load i64, i64* %PC.i994
  %2738 = add i64 %2737, 6
  store i64 %2738, i64* %PC.i994
  %2739 = inttoptr i64 %2734 to i32*
  store i32 %2735, i32* %2739
  store %struct.Memory* %loadMem_429f2b, %struct.Memory** %MEMORY
  %loadMem_429f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2741 = getelementptr inbounds %struct.GPR, %struct.GPR* %2740, i32 0, i32 33
  %2742 = getelementptr inbounds %struct.Reg, %struct.Reg* %2741, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %2742 to i64*
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 7
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %EDX.i992 = bitcast %union.anon* %2745 to i32*
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2747 = getelementptr inbounds %struct.GPR, %struct.GPR* %2746, i32 0, i32 1
  %2748 = getelementptr inbounds %struct.Reg, %struct.Reg* %2747, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %2748 to i64*
  %2749 = load i32, i32* %EDX.i992
  %2750 = zext i32 %2749 to i64
  %2751 = load i64, i64* %PC.i991
  %2752 = add i64 %2751, 2
  store i64 %2752, i64* %PC.i991
  %2753 = and i64 %2750, 4294967295
  store i64 %2753, i64* %RAX.i993, align 8
  store %struct.Memory* %loadMem_429f31, %struct.Memory** %MEMORY
  %loadMem_429f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 33
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %2756 to i64*
  %2757 = load i64, i64* %PC.i990
  %2758 = add i64 %2757, 1
  store i64 %2758, i64* %PC.i990
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2761 = bitcast %union.anon* %2760 to i32*
  %2762 = load i32, i32* %2761, align 8
  %2763 = sext i32 %2762 to i64
  %2764 = lshr i64 %2763, 32
  store i64 %2764, i64* %2759, align 8
  store %struct.Memory* %loadMem_429f33, %struct.Memory** %MEMORY
  %loadMem_429f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 9
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %2770 to i64*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 15
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %RBP.i989
  %2775 = sub i64 %2774, 1688
  %2776 = load i64, i64* %PC.i988
  %2777 = add i64 %2776, 6
  store i64 %2777, i64* %PC.i988
  %2778 = inttoptr i64 %2775 to i32*
  %2779 = load i32, i32* %2778
  %2780 = zext i32 %2779 to i64
  store i64 %2780, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_429f34, %struct.Memory** %MEMORY
  %loadMem_429f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2782 = getelementptr inbounds %struct.GPR, %struct.GPR* %2781, i32 0, i32 33
  %2783 = getelementptr inbounds %struct.Reg, %struct.Reg* %2782, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %2783 to i64*
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 9
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %2786 to i32*
  %2787 = load i32, i32* %ESI.i
  %2788 = zext i32 %2787 to i64
  %2789 = load i64, i64* %PC.i984
  %2790 = add i64 %2789, 2
  store i64 %2790, i64* %PC.i984
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2792 = bitcast %union.anon* %2791 to i32*
  %2793 = load i32, i32* %2792, align 8
  %2794 = zext i32 %2793 to i64
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2796 = bitcast %union.anon* %2795 to i32*
  %2797 = load i32, i32* %2796, align 8
  %2798 = zext i32 %2797 to i64
  %2799 = shl i64 %2788, 32
  %2800 = ashr exact i64 %2799, 32
  %2801 = shl i64 %2798, 32
  %2802 = or i64 %2801, %2794
  %2803 = sdiv i64 %2802, %2800
  %2804 = shl i64 %2803, 32
  %2805 = ashr exact i64 %2804, 32
  %2806 = icmp eq i64 %2803, %2805
  br i1 %2806, label %2811, label %2807

; <label>:2807:                                   ; preds = %block_.L_429f1c
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2809 = load i64, i64* %2808, align 8
  %2810 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2809, %struct.Memory* %loadMem_429f3a)
  br label %routine_idivl__esi.exit

; <label>:2811:                                   ; preds = %block_.L_429f1c
  %2812 = srem i64 %2802, %2800
  %2813 = getelementptr inbounds %union.anon, %union.anon* %2791, i64 0, i32 0
  %2814 = and i64 %2803, 4294967295
  store i64 %2814, i64* %2813, align 8
  %2815 = getelementptr inbounds %union.anon, %union.anon* %2795, i64 0, i32 0
  %2816 = and i64 %2812, 4294967295
  store i64 %2816, i64* %2815, align 8
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2817, align 1
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2818, align 1
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2819, align 1
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2820, align 1
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2821, align 1
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2822, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %2807, %2811
  %2823 = phi %struct.Memory* [ %2810, %2807 ], [ %loadMem_429f3a, %2811 ]
  store %struct.Memory* %2823, %struct.Memory** %MEMORY
  %loadMem_429f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2825 = getelementptr inbounds %struct.GPR, %struct.GPR* %2824, i32 0, i32 33
  %2826 = getelementptr inbounds %struct.Reg, %struct.Reg* %2825, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %2826 to i64*
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2828 = getelementptr inbounds %struct.GPR, %struct.GPR* %2827, i32 0, i32 7
  %2829 = getelementptr inbounds %struct.Reg, %struct.Reg* %2828, i32 0, i32 0
  %RDX.i983 = bitcast %union.anon* %2829 to i64*
  %2830 = load i64, i64* %RDX.i983
  %2831 = load i64, i64* %PC.i982
  %2832 = add i64 %2831, 3
  store i64 %2832, i64* %PC.i982
  %2833 = trunc i64 %2830 to i32
  %2834 = sub i32 %2833, 1
  %2835 = zext i32 %2834 to i64
  store i64 %2835, i64* %RDX.i983, align 8
  %2836 = icmp ult i32 %2833, 1
  %2837 = zext i1 %2836 to i8
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2837, i8* %2838, align 1
  %2839 = and i32 %2834, 255
  %2840 = call i32 @llvm.ctpop.i32(i32 %2839)
  %2841 = trunc i32 %2840 to i8
  %2842 = and i8 %2841, 1
  %2843 = xor i8 %2842, 1
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2843, i8* %2844, align 1
  %2845 = xor i64 1, %2830
  %2846 = trunc i64 %2845 to i32
  %2847 = xor i32 %2846, %2834
  %2848 = lshr i32 %2847, 4
  %2849 = trunc i32 %2848 to i8
  %2850 = and i8 %2849, 1
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2850, i8* %2851, align 1
  %2852 = icmp eq i32 %2834, 0
  %2853 = zext i1 %2852 to i8
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2853, i8* %2854, align 1
  %2855 = lshr i32 %2834, 31
  %2856 = trunc i32 %2855 to i8
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2856, i8* %2857, align 1
  %2858 = lshr i32 %2833, 31
  %2859 = xor i32 %2855, %2858
  %2860 = add i32 %2859, %2858
  %2861 = icmp eq i32 %2860, 2
  %2862 = zext i1 %2861 to i8
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2862, i8* %2863, align 1
  store %struct.Memory* %loadMem_429f3c, %struct.Memory** %MEMORY
  %loadMem_429f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2865 = getelementptr inbounds %struct.GPR, %struct.GPR* %2864, i32 0, i32 33
  %2866 = getelementptr inbounds %struct.Reg, %struct.Reg* %2865, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2866 to i64*
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 7
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %EDX.i980 = bitcast %union.anon* %2869 to i32*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 5
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %2872 to i64*
  %2873 = load i64, i64* %RCX.i981
  %2874 = load i32, i32* %EDX.i980
  %2875 = zext i32 %2874 to i64
  %2876 = load i64, i64* %PC.i979
  %2877 = add i64 %2876, 2
  store i64 %2877, i64* %PC.i979
  %2878 = trunc i64 %2873 to i32
  %2879 = sub i32 %2878, %2874
  %2880 = zext i32 %2879 to i64
  store i64 %2880, i64* %RCX.i981, align 8
  %2881 = icmp ult i32 %2878, %2874
  %2882 = zext i1 %2881 to i8
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2882, i8* %2883, align 1
  %2884 = and i32 %2879, 255
  %2885 = call i32 @llvm.ctpop.i32(i32 %2884)
  %2886 = trunc i32 %2885 to i8
  %2887 = and i8 %2886, 1
  %2888 = xor i8 %2887, 1
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2888, i8* %2889, align 1
  %2890 = xor i64 %2875, %2873
  %2891 = trunc i64 %2890 to i32
  %2892 = xor i32 %2891, %2879
  %2893 = lshr i32 %2892, 4
  %2894 = trunc i32 %2893 to i8
  %2895 = and i8 %2894, 1
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2895, i8* %2896, align 1
  %2897 = icmp eq i32 %2879, 0
  %2898 = zext i1 %2897 to i8
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2898, i8* %2899, align 1
  %2900 = lshr i32 %2879, 31
  %2901 = trunc i32 %2900 to i8
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2901, i8* %2902, align 1
  %2903 = lshr i32 %2878, 31
  %2904 = lshr i32 %2874, 31
  %2905 = xor i32 %2904, %2903
  %2906 = xor i32 %2900, %2903
  %2907 = add i32 %2906, %2905
  %2908 = icmp eq i32 %2907, 2
  %2909 = zext i1 %2908 to i8
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2909, i8* %2910, align 1
  store %struct.Memory* %loadMem_429f3f, %struct.Memory** %MEMORY
  %loadMem_429f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2912 = getelementptr inbounds %struct.GPR, %struct.GPR* %2911, i32 0, i32 33
  %2913 = getelementptr inbounds %struct.Reg, %struct.Reg* %2912, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2913 to i64*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 5
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %2916 to i64*
  %2917 = load i64, i64* %RCX.i978
  %2918 = load i64, i64* %PC.i977
  %2919 = add i64 %2918, 3
  store i64 %2919, i64* %PC.i977
  %2920 = trunc i64 %2917 to i32
  %2921 = sub i32 %2920, 1
  %2922 = zext i32 %2921 to i64
  store i64 %2922, i64* %RCX.i978, align 8
  %2923 = icmp ult i32 %2920, 1
  %2924 = zext i1 %2923 to i8
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2924, i8* %2925, align 1
  %2926 = and i32 %2921, 255
  %2927 = call i32 @llvm.ctpop.i32(i32 %2926)
  %2928 = trunc i32 %2927 to i8
  %2929 = and i8 %2928, 1
  %2930 = xor i8 %2929, 1
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2930, i8* %2931, align 1
  %2932 = xor i64 1, %2917
  %2933 = trunc i64 %2932 to i32
  %2934 = xor i32 %2933, %2921
  %2935 = lshr i32 %2934, 4
  %2936 = trunc i32 %2935 to i8
  %2937 = and i8 %2936, 1
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2937, i8* %2938, align 1
  %2939 = icmp eq i32 %2921, 0
  %2940 = zext i1 %2939 to i8
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2940, i8* %2941, align 1
  %2942 = lshr i32 %2921, 31
  %2943 = trunc i32 %2942 to i8
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2943, i8* %2944, align 1
  %2945 = lshr i32 %2920, 31
  %2946 = xor i32 %2942, %2945
  %2947 = add i32 %2946, %2945
  %2948 = icmp eq i32 %2947, 2
  %2949 = zext i1 %2948 to i8
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2949, i8* %2950, align 1
  store %struct.Memory* %loadMem_429f41, %struct.Memory** %MEMORY
  %loadMem_429f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 33
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2953 to i64*
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 5
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %ECX.i975 = bitcast %union.anon* %2956 to i32*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 15
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %2959 to i64*
  %2960 = load i64, i64* %RBP.i976
  %2961 = sub i64 %2960, 1684
  %2962 = load i32, i32* %ECX.i975
  %2963 = zext i32 %2962 to i64
  %2964 = load i64, i64* %PC.i974
  %2965 = add i64 %2964, 6
  store i64 %2965, i64* %PC.i974
  %2966 = inttoptr i64 %2961 to i32*
  store i32 %2962, i32* %2966
  store %struct.Memory* %loadMem_429f44, %struct.Memory** %MEMORY
  br label %block_.L_429f4a

block_.L_429f4a:                                  ; preds = %routine_idivl__esi.exit, %routine_idivl__ecx.exit
  %loadMem_429f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2968 = getelementptr inbounds %struct.GPR, %struct.GPR* %2967, i32 0, i32 33
  %2969 = getelementptr inbounds %struct.Reg, %struct.Reg* %2968, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %2969 to i64*
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 1
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %RAX.i972 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 15
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %RBP.i973
  %2977 = sub i64 %2976, 1684
  %2978 = load i64, i64* %PC.i971
  %2979 = add i64 %2978, 6
  store i64 %2979, i64* %PC.i971
  %2980 = inttoptr i64 %2977 to i32*
  %2981 = load i32, i32* %2980
  %2982 = zext i32 %2981 to i64
  store i64 %2982, i64* %RAX.i972, align 8
  store %struct.Memory* %loadMem_429f4a, %struct.Memory** %MEMORY
  %loadMem_429f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2984 = getelementptr inbounds %struct.GPR, %struct.GPR* %2983, i32 0, i32 33
  %2985 = getelementptr inbounds %struct.Reg, %struct.Reg* %2984, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %2985 to i64*
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 1
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %EAX.i969 = bitcast %union.anon* %2988 to i32*
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 15
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %2991 to i64*
  %2992 = load i64, i64* %RBP.i970
  %2993 = sub i64 %2992, 20
  %2994 = load i32, i32* %EAX.i969
  %2995 = zext i32 %2994 to i64
  %2996 = load i64, i64* %PC.i968
  %2997 = add i64 %2996, 3
  store i64 %2997, i64* %PC.i968
  %2998 = inttoptr i64 %2993 to i32*
  store i32 %2994, i32* %2998
  store %struct.Memory* %loadMem_429f50, %struct.Memory** %MEMORY
  %loadMem_429f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %3001 to i64*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 1
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %3004 to i64*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 15
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %3007 to i64*
  %3008 = load i64, i64* %RBP.i967
  %3009 = sub i64 %3008, 16
  %3010 = load i64, i64* %PC.i965
  %3011 = add i64 %3010, 3
  store i64 %3011, i64* %PC.i965
  %3012 = inttoptr i64 %3009 to i32*
  %3013 = load i32, i32* %3012
  %3014 = zext i32 %3013 to i64
  store i64 %3014, i64* %RAX.i966, align 8
  store %struct.Memory* %loadMem_429f53, %struct.Memory** %MEMORY
  %loadMem_429f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 33
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %3017 to i64*
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3019 = getelementptr inbounds %struct.GPR, %struct.GPR* %3018, i32 0, i32 1
  %3020 = getelementptr inbounds %struct.Reg, %struct.Reg* %3019, i32 0, i32 0
  %EAX.i963 = bitcast %union.anon* %3020 to i32*
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3022 = getelementptr inbounds %struct.GPR, %struct.GPR* %3021, i32 0, i32 15
  %3023 = getelementptr inbounds %struct.Reg, %struct.Reg* %3022, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %3023 to i64*
  %3024 = load i32, i32* %EAX.i963
  %3025 = zext i32 %3024 to i64
  %3026 = load i64, i64* %RBP.i964
  %3027 = sub i64 %3026, 20
  %3028 = load i64, i64* %PC.i962
  %3029 = add i64 %3028, 3
  store i64 %3029, i64* %PC.i962
  %3030 = inttoptr i64 %3027 to i32*
  %3031 = load i32, i32* %3030
  %3032 = sub i32 %3024, %3031
  %3033 = icmp ult i32 %3024, %3031
  %3034 = zext i1 %3033 to i8
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3034, i8* %3035, align 1
  %3036 = and i32 %3032, 255
  %3037 = call i32 @llvm.ctpop.i32(i32 %3036)
  %3038 = trunc i32 %3037 to i8
  %3039 = and i8 %3038, 1
  %3040 = xor i8 %3039, 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3040, i8* %3041, align 1
  %3042 = xor i32 %3031, %3024
  %3043 = xor i32 %3042, %3032
  %3044 = lshr i32 %3043, 4
  %3045 = trunc i32 %3044 to i8
  %3046 = and i8 %3045, 1
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3046, i8* %3047, align 1
  %3048 = icmp eq i32 %3032, 0
  %3049 = zext i1 %3048 to i8
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3049, i8* %3050, align 1
  %3051 = lshr i32 %3032, 31
  %3052 = trunc i32 %3051 to i8
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3052, i8* %3053, align 1
  %3054 = lshr i32 %3024, 31
  %3055 = lshr i32 %3031, 31
  %3056 = xor i32 %3055, %3054
  %3057 = xor i32 %3051, %3054
  %3058 = add i32 %3057, %3056
  %3059 = icmp eq i32 %3058, 2
  %3060 = zext i1 %3059 to i8
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3060, i8* %3061, align 1
  store %struct.Memory* %loadMem_429f56, %struct.Memory** %MEMORY
  %loadMem_429f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 33
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %3064 to i64*
  %3065 = load i64, i64* %PC.i961
  %3066 = add i64 %3065, 59
  %3067 = load i64, i64* %PC.i961
  %3068 = add i64 %3067, 6
  %3069 = load i64, i64* %PC.i961
  %3070 = add i64 %3069, 6
  store i64 %3070, i64* %PC.i961
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3072 = load i8, i8* %3071, align 1
  %3073 = icmp ne i8 %3072, 0
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3075 = load i8, i8* %3074, align 1
  %3076 = icmp ne i8 %3075, 0
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3078 = load i8, i8* %3077, align 1
  %3079 = icmp ne i8 %3078, 0
  %3080 = xor i1 %3076, %3079
  %3081 = or i1 %3073, %3080
  %3082 = zext i1 %3081 to i8
  store i8 %3082, i8* %BRANCH_TAKEN, align 1
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3084 = select i1 %3081, i64 %3066, i64 %3068
  store i64 %3084, i64* %3083, align 8
  store %struct.Memory* %loadMem_429f59, %struct.Memory** %MEMORY
  %loadBr_429f59 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429f59 = icmp eq i8 %loadBr_429f59, 1
  br i1 %cmpBr_429f59, label %block_.L_429f94, label %block_429f5f

block_429f5f:                                     ; preds = %block_.L_429f4a
  %loadMem_429f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 1
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %3090 to i64*
  %3091 = load i64, i64* %PC.i959
  %3092 = add i64 %3091, 5
  store i64 %3092, i64* %PC.i959
  store i64 4, i64* %RAX.i960, align 8
  store %struct.Memory* %loadMem_429f5f, %struct.Memory** %MEMORY
  %loadMem_429f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 33
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 1
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %EAX.i957 = bitcast %union.anon* %3098 to i32*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 15
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %3101 to i64*
  %3102 = load i32, i32* %EAX.i957
  %3103 = zext i32 %3102 to i64
  %3104 = load i64, i64* %RBP.i958
  %3105 = sub i64 %3104, 16
  %3106 = load i64, i64* %PC.i956
  %3107 = add i64 %3106, 3
  store i64 %3107, i64* %PC.i956
  %3108 = inttoptr i64 %3105 to i32*
  %3109 = load i32, i32* %3108
  %3110 = sub i32 %3102, %3109
  %3111 = icmp ult i32 %3102, %3109
  %3112 = zext i1 %3111 to i8
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3112, i8* %3113, align 1
  %3114 = and i32 %3110, 255
  %3115 = call i32 @llvm.ctpop.i32(i32 %3114)
  %3116 = trunc i32 %3115 to i8
  %3117 = and i8 %3116, 1
  %3118 = xor i8 %3117, 1
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3118, i8* %3119, align 1
  %3120 = xor i32 %3109, %3102
  %3121 = xor i32 %3120, %3110
  %3122 = lshr i32 %3121, 4
  %3123 = trunc i32 %3122 to i8
  %3124 = and i8 %3123, 1
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3124, i8* %3125, align 1
  %3126 = icmp eq i32 %3110, 0
  %3127 = zext i1 %3126 to i8
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3127, i8* %3128, align 1
  %3129 = lshr i32 %3110, 31
  %3130 = trunc i32 %3129 to i8
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3130, i8* %3131, align 1
  %3132 = lshr i32 %3102, 31
  %3133 = lshr i32 %3109, 31
  %3134 = xor i32 %3133, %3132
  %3135 = xor i32 %3129, %3132
  %3136 = add i32 %3135, %3134
  %3137 = icmp eq i32 %3136, 2
  %3138 = zext i1 %3137 to i8
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3138, i8* %3139, align 1
  store %struct.Memory* %loadMem_429f64, %struct.Memory** %MEMORY
  %loadMem_429f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3141 = getelementptr inbounds %struct.GPR, %struct.GPR* %3140, i32 0, i32 33
  %3142 = getelementptr inbounds %struct.Reg, %struct.Reg* %3141, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %3142 to i64*
  %3143 = load i64, i64* %PC.i955
  %3144 = add i64 %3143, 22
  %3145 = load i64, i64* %PC.i955
  %3146 = add i64 %3145, 6
  %3147 = load i64, i64* %PC.i955
  %3148 = add i64 %3147, 6
  store i64 %3148, i64* %PC.i955
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3150 = load i8, i8* %3149, align 1
  %3151 = icmp ne i8 %3150, 0
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3153 = load i8, i8* %3152, align 1
  %3154 = icmp ne i8 %3153, 0
  %3155 = xor i1 %3151, %3154
  %3156 = xor i1 %3155, true
  %3157 = zext i1 %3156 to i8
  store i8 %3157, i8* %BRANCH_TAKEN, align 1
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3159 = select i1 %3155, i64 %3146, i64 %3144
  store i64 %3159, i64* %3158, align 8
  store %struct.Memory* %loadMem_429f67, %struct.Memory** %MEMORY
  %loadBr_429f67 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429f67 = icmp eq i8 %loadBr_429f67, 1
  br i1 %cmpBr_429f67, label %block_.L_429f7d, label %block_429f6d

block_429f6d:                                     ; preds = %block_429f5f
  %loadMem_429f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 33
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 1
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %3165 to i64*
  %3166 = load i64, i64* %PC.i953
  %3167 = add i64 %3166, 5
  store i64 %3167, i64* %PC.i953
  store i64 4, i64* %RAX.i954, align 8
  store %struct.Memory* %loadMem_429f6d, %struct.Memory** %MEMORY
  %loadMem_429f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3169 = getelementptr inbounds %struct.GPR, %struct.GPR* %3168, i32 0, i32 33
  %3170 = getelementptr inbounds %struct.Reg, %struct.Reg* %3169, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %3170 to i64*
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3172 = getelementptr inbounds %struct.GPR, %struct.GPR* %3171, i32 0, i32 1
  %3173 = getelementptr inbounds %struct.Reg, %struct.Reg* %3172, i32 0, i32 0
  %EAX.i951 = bitcast %union.anon* %3173 to i32*
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 15
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %3176 to i64*
  %3177 = load i64, i64* %RBP.i952
  %3178 = sub i64 %3177, 1692
  %3179 = load i32, i32* %EAX.i951
  %3180 = zext i32 %3179 to i64
  %3181 = load i64, i64* %PC.i950
  %3182 = add i64 %3181, 6
  store i64 %3182, i64* %PC.i950
  %3183 = inttoptr i64 %3178 to i32*
  store i32 %3179, i32* %3183
  store %struct.Memory* %loadMem_429f72, %struct.Memory** %MEMORY
  %loadMem_429f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3185 = getelementptr inbounds %struct.GPR, %struct.GPR* %3184, i32 0, i32 33
  %3186 = getelementptr inbounds %struct.Reg, %struct.Reg* %3185, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %3186 to i64*
  %3187 = load i64, i64* %PC.i949
  %3188 = add i64 %3187, 14
  %3189 = load i64, i64* %PC.i949
  %3190 = add i64 %3189, 5
  store i64 %3190, i64* %PC.i949
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3188, i64* %3191, align 8
  store %struct.Memory* %loadMem_429f78, %struct.Memory** %MEMORY
  br label %block_.L_429f86

block_.L_429f7d:                                  ; preds = %block_429f5f
  %loadMem_429f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 33
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %3194 to i64*
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3196 = getelementptr inbounds %struct.GPR, %struct.GPR* %3195, i32 0, i32 1
  %3197 = getelementptr inbounds %struct.Reg, %struct.Reg* %3196, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %3197 to i64*
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 15
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %3200 to i64*
  %3201 = load i64, i64* %RBP.i948
  %3202 = sub i64 %3201, 16
  %3203 = load i64, i64* %PC.i946
  %3204 = add i64 %3203, 3
  store i64 %3204, i64* %PC.i946
  %3205 = inttoptr i64 %3202 to i32*
  %3206 = load i32, i32* %3205
  %3207 = zext i32 %3206 to i64
  store i64 %3207, i64* %RAX.i947, align 8
  store %struct.Memory* %loadMem_429f7d, %struct.Memory** %MEMORY
  %loadMem_429f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 33
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %3210 to i64*
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3212 = getelementptr inbounds %struct.GPR, %struct.GPR* %3211, i32 0, i32 1
  %3213 = getelementptr inbounds %struct.Reg, %struct.Reg* %3212, i32 0, i32 0
  %EAX.i944 = bitcast %union.anon* %3213 to i32*
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 15
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %3216 to i64*
  %3217 = load i64, i64* %RBP.i945
  %3218 = sub i64 %3217, 1692
  %3219 = load i32, i32* %EAX.i944
  %3220 = zext i32 %3219 to i64
  %3221 = load i64, i64* %PC.i943
  %3222 = add i64 %3221, 6
  store i64 %3222, i64* %PC.i943
  %3223 = inttoptr i64 %3218 to i32*
  store i32 %3219, i32* %3223
  store %struct.Memory* %loadMem_429f80, %struct.Memory** %MEMORY
  br label %block_.L_429f86

block_.L_429f86:                                  ; preds = %block_.L_429f7d, %block_429f6d
  %loadMem_429f86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 33
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %3226 to i64*
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 1
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %3229 to i64*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 15
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %3232 to i64*
  %3233 = load i64, i64* %RBP.i942
  %3234 = sub i64 %3233, 1692
  %3235 = load i64, i64* %PC.i940
  %3236 = add i64 %3235, 6
  store i64 %3236, i64* %PC.i940
  %3237 = inttoptr i64 %3234 to i32*
  %3238 = load i32, i32* %3237
  %3239 = zext i32 %3238 to i64
  store i64 %3239, i64* %RAX.i941, align 8
  store %struct.Memory* %loadMem_429f86, %struct.Memory** %MEMORY
  %loadMem_429f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 1
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %EAX.i938 = bitcast %union.anon* %3245 to i32*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 15
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RBP.i939 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RBP.i939
  %3250 = sub i64 %3249, 16
  %3251 = load i32, i32* %EAX.i938
  %3252 = zext i32 %3251 to i64
  %3253 = load i64, i64* %PC.i937
  %3254 = add i64 %3253, 3
  store i64 %3254, i64* %PC.i937
  %3255 = inttoptr i64 %3250 to i32*
  store i32 %3251, i32* %3255
  store %struct.Memory* %loadMem_429f8c, %struct.Memory** %MEMORY
  %loadMem_429f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 33
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %3258 to i64*
  %3259 = load i64, i64* %PC.i936
  %3260 = add i64 %3259, 53
  %3261 = load i64, i64* %PC.i936
  %3262 = add i64 %3261, 5
  store i64 %3262, i64* %PC.i936
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3260, i64* %3263, align 8
  store %struct.Memory* %loadMem_429f8f, %struct.Memory** %MEMORY
  br label %block_.L_429fc4

block_.L_429f94:                                  ; preds = %block_.L_429f4a
  %loadMem_429f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 33
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %3266 to i64*
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 1
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %3269 to i64*
  %3270 = load i64, i64* %PC.i934
  %3271 = add i64 %3270, 5
  store i64 %3271, i64* %PC.i934
  store i64 4, i64* %RAX.i935, align 8
  store %struct.Memory* %loadMem_429f94, %struct.Memory** %MEMORY
  %loadMem_429f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3273 = getelementptr inbounds %struct.GPR, %struct.GPR* %3272, i32 0, i32 33
  %3274 = getelementptr inbounds %struct.Reg, %struct.Reg* %3273, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %3274 to i64*
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 1
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %EAX.i932 = bitcast %union.anon* %3277 to i32*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 15
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %3280 to i64*
  %3281 = load i32, i32* %EAX.i932
  %3282 = zext i32 %3281 to i64
  %3283 = load i64, i64* %RBP.i933
  %3284 = sub i64 %3283, 20
  %3285 = load i64, i64* %PC.i931
  %3286 = add i64 %3285, 3
  store i64 %3286, i64* %PC.i931
  %3287 = inttoptr i64 %3284 to i32*
  %3288 = load i32, i32* %3287
  %3289 = sub i32 %3281, %3288
  %3290 = icmp ult i32 %3281, %3288
  %3291 = zext i1 %3290 to i8
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3291, i8* %3292, align 1
  %3293 = and i32 %3289, 255
  %3294 = call i32 @llvm.ctpop.i32(i32 %3293)
  %3295 = trunc i32 %3294 to i8
  %3296 = and i8 %3295, 1
  %3297 = xor i8 %3296, 1
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3297, i8* %3298, align 1
  %3299 = xor i32 %3288, %3281
  %3300 = xor i32 %3299, %3289
  %3301 = lshr i32 %3300, 4
  %3302 = trunc i32 %3301 to i8
  %3303 = and i8 %3302, 1
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3303, i8* %3304, align 1
  %3305 = icmp eq i32 %3289, 0
  %3306 = zext i1 %3305 to i8
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3306, i8* %3307, align 1
  %3308 = lshr i32 %3289, 31
  %3309 = trunc i32 %3308 to i8
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3309, i8* %3310, align 1
  %3311 = lshr i32 %3281, 31
  %3312 = lshr i32 %3288, 31
  %3313 = xor i32 %3312, %3311
  %3314 = xor i32 %3308, %3311
  %3315 = add i32 %3314, %3313
  %3316 = icmp eq i32 %3315, 2
  %3317 = zext i1 %3316 to i8
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3317, i8* %3318, align 1
  store %struct.Memory* %loadMem_429f99, %struct.Memory** %MEMORY
  %loadMem_429f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3320 = getelementptr inbounds %struct.GPR, %struct.GPR* %3319, i32 0, i32 33
  %3321 = getelementptr inbounds %struct.Reg, %struct.Reg* %3320, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %3321 to i64*
  %3322 = load i64, i64* %PC.i930
  %3323 = add i64 %3322, 22
  %3324 = load i64, i64* %PC.i930
  %3325 = add i64 %3324, 6
  %3326 = load i64, i64* %PC.i930
  %3327 = add i64 %3326, 6
  store i64 %3327, i64* %PC.i930
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3329 = load i8, i8* %3328, align 1
  %3330 = icmp ne i8 %3329, 0
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3332 = load i8, i8* %3331, align 1
  %3333 = icmp ne i8 %3332, 0
  %3334 = xor i1 %3330, %3333
  %3335 = xor i1 %3334, true
  %3336 = zext i1 %3335 to i8
  store i8 %3336, i8* %BRANCH_TAKEN, align 1
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3338 = select i1 %3334, i64 %3325, i64 %3323
  store i64 %3338, i64* %3337, align 8
  store %struct.Memory* %loadMem_429f9c, %struct.Memory** %MEMORY
  %loadBr_429f9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429f9c = icmp eq i8 %loadBr_429f9c, 1
  br i1 %cmpBr_429f9c, label %block_.L_429fb2, label %block_429fa2

block_429fa2:                                     ; preds = %block_.L_429f94
  %loadMem_429fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 1
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %3344 to i64*
  %3345 = load i64, i64* %PC.i928
  %3346 = add i64 %3345, 5
  store i64 %3346, i64* %PC.i928
  store i64 4, i64* %RAX.i929, align 8
  store %struct.Memory* %loadMem_429fa2, %struct.Memory** %MEMORY
  %loadMem_429fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 33
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %3349 to i64*
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 1
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %EAX.i926 = bitcast %union.anon* %3352 to i32*
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 15
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %3355 to i64*
  %3356 = load i64, i64* %RBP.i927
  %3357 = sub i64 %3356, 1696
  %3358 = load i32, i32* %EAX.i926
  %3359 = zext i32 %3358 to i64
  %3360 = load i64, i64* %PC.i925
  %3361 = add i64 %3360, 6
  store i64 %3361, i64* %PC.i925
  %3362 = inttoptr i64 %3357 to i32*
  store i32 %3358, i32* %3362
  store %struct.Memory* %loadMem_429fa7, %struct.Memory** %MEMORY
  %loadMem_429fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 33
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %3365 to i64*
  %3366 = load i64, i64* %PC.i924
  %3367 = add i64 %3366, 14
  %3368 = load i64, i64* %PC.i924
  %3369 = add i64 %3368, 5
  store i64 %3369, i64* %PC.i924
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3367, i64* %3370, align 8
  store %struct.Memory* %loadMem_429fad, %struct.Memory** %MEMORY
  br label %block_.L_429fbb

block_.L_429fb2:                                  ; preds = %block_.L_429f94
  %loadMem_429fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3372 = getelementptr inbounds %struct.GPR, %struct.GPR* %3371, i32 0, i32 33
  %3373 = getelementptr inbounds %struct.Reg, %struct.Reg* %3372, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %3373 to i64*
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 1
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %3376 to i64*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 15
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %3379 to i64*
  %3380 = load i64, i64* %RBP.i923
  %3381 = sub i64 %3380, 20
  %3382 = load i64, i64* %PC.i921
  %3383 = add i64 %3382, 3
  store i64 %3383, i64* %PC.i921
  %3384 = inttoptr i64 %3381 to i32*
  %3385 = load i32, i32* %3384
  %3386 = zext i32 %3385 to i64
  store i64 %3386, i64* %RAX.i922, align 8
  store %struct.Memory* %loadMem_429fb2, %struct.Memory** %MEMORY
  %loadMem_429fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 33
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %3389 to i64*
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 1
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %EAX.i919 = bitcast %union.anon* %3392 to i32*
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 15
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %3395 to i64*
  %3396 = load i64, i64* %RBP.i920
  %3397 = sub i64 %3396, 1696
  %3398 = load i32, i32* %EAX.i919
  %3399 = zext i32 %3398 to i64
  %3400 = load i64, i64* %PC.i918
  %3401 = add i64 %3400, 6
  store i64 %3401, i64* %PC.i918
  %3402 = inttoptr i64 %3397 to i32*
  store i32 %3398, i32* %3402
  store %struct.Memory* %loadMem_429fb5, %struct.Memory** %MEMORY
  br label %block_.L_429fbb

block_.L_429fbb:                                  ; preds = %block_.L_429fb2, %block_429fa2
  %loadMem_429fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 33
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %3405 to i64*
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 1
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %3408 to i64*
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 15
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %3411 to i64*
  %3412 = load i64, i64* %RBP.i917
  %3413 = sub i64 %3412, 1696
  %3414 = load i64, i64* %PC.i915
  %3415 = add i64 %3414, 6
  store i64 %3415, i64* %PC.i915
  %3416 = inttoptr i64 %3413 to i32*
  %3417 = load i32, i32* %3416
  %3418 = zext i32 %3417 to i64
  store i64 %3418, i64* %RAX.i916, align 8
  store %struct.Memory* %loadMem_429fbb, %struct.Memory** %MEMORY
  %loadMem_429fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 33
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3421 to i64*
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 1
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %EAX.i913 = bitcast %union.anon* %3424 to i32*
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 15
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %RBP.i914 = bitcast %union.anon* %3427 to i64*
  %3428 = load i64, i64* %RBP.i914
  %3429 = sub i64 %3428, 20
  %3430 = load i32, i32* %EAX.i913
  %3431 = zext i32 %3430 to i64
  %3432 = load i64, i64* %PC.i912
  %3433 = add i64 %3432, 3
  store i64 %3433, i64* %PC.i912
  %3434 = inttoptr i64 %3429 to i32*
  store i32 %3430, i32* %3434
  store %struct.Memory* %loadMem_429fc1, %struct.Memory** %MEMORY
  br label %block_.L_429fc4

block_.L_429fc4:                                  ; preds = %block_.L_429fbb, %block_.L_429f86
  %loadMem_429fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 33
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3437 to i64*
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 1
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %3440 to i64*
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 15
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %3443 to i64*
  %3444 = load i64, i64* %RBP.i911
  %3445 = sub i64 %3444, 16
  %3446 = load i64, i64* %PC.i909
  %3447 = add i64 %3446, 3
  store i64 %3447, i64* %PC.i909
  %3448 = inttoptr i64 %3445 to i32*
  %3449 = load i32, i32* %3448
  %3450 = zext i32 %3449 to i64
  store i64 %3450, i64* %RAX.i910, align 8
  store %struct.Memory* %loadMem_429fc4, %struct.Memory** %MEMORY
  %loadMem_429fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3452 = getelementptr inbounds %struct.GPR, %struct.GPR* %3451, i32 0, i32 33
  %3453 = getelementptr inbounds %struct.Reg, %struct.Reg* %3452, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %3453 to i64*
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 1
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %EAX.i907 = bitcast %union.anon* %3456 to i32*
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3458 = getelementptr inbounds %struct.GPR, %struct.GPR* %3457, i32 0, i32 15
  %3459 = getelementptr inbounds %struct.Reg, %struct.Reg* %3458, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %3459 to i64*
  %3460 = load i32, i32* %EAX.i907
  %3461 = zext i32 %3460 to i64
  %3462 = load i64, i64* %RBP.i908
  %3463 = sub i64 %3462, 20
  %3464 = load i64, i64* %PC.i906
  %3465 = add i64 %3464, 3
  store i64 %3465, i64* %PC.i906
  %3466 = inttoptr i64 %3463 to i32*
  %3467 = load i32, i32* %3466
  %3468 = sub i32 %3460, %3467
  %3469 = icmp ult i32 %3460, %3467
  %3470 = zext i1 %3469 to i8
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3470, i8* %3471, align 1
  %3472 = and i32 %3468, 255
  %3473 = call i32 @llvm.ctpop.i32(i32 %3472)
  %3474 = trunc i32 %3473 to i8
  %3475 = and i8 %3474, 1
  %3476 = xor i8 %3475, 1
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3476, i8* %3477, align 1
  %3478 = xor i32 %3467, %3460
  %3479 = xor i32 %3478, %3468
  %3480 = lshr i32 %3479, 4
  %3481 = trunc i32 %3480 to i8
  %3482 = and i8 %3481, 1
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3482, i8* %3483, align 1
  %3484 = icmp eq i32 %3468, 0
  %3485 = zext i1 %3484 to i8
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3485, i8* %3486, align 1
  %3487 = lshr i32 %3468, 31
  %3488 = trunc i32 %3487 to i8
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3488, i8* %3489, align 1
  %3490 = lshr i32 %3460, 31
  %3491 = lshr i32 %3467, 31
  %3492 = xor i32 %3491, %3490
  %3493 = xor i32 %3487, %3490
  %3494 = add i32 %3493, %3492
  %3495 = icmp eq i32 %3494, 2
  %3496 = zext i1 %3495 to i8
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3496, i8* %3497, align 1
  store %struct.Memory* %loadMem_429fc7, %struct.Memory** %MEMORY
  %loadMem_429fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 33
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %3500 to i64*
  %3501 = load i64, i64* %PC.i905
  %3502 = add i64 %3501, 20
  %3503 = load i64, i64* %PC.i905
  %3504 = add i64 %3503, 6
  %3505 = load i64, i64* %PC.i905
  %3506 = add i64 %3505, 6
  store i64 %3506, i64* %PC.i905
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3508 = load i8, i8* %3507, align 1
  %3509 = icmp ne i8 %3508, 0
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3511 = load i8, i8* %3510, align 1
  %3512 = icmp ne i8 %3511, 0
  %3513 = xor i1 %3509, %3512
  %3514 = xor i1 %3513, true
  %3515 = zext i1 %3514 to i8
  store i8 %3515, i8* %BRANCH_TAKEN, align 1
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3517 = select i1 %3513, i64 %3504, i64 %3502
  store i64 %3517, i64* %3516, align 8
  store %struct.Memory* %loadMem_429fca, %struct.Memory** %MEMORY
  %loadBr_429fca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_429fca = icmp eq i8 %loadBr_429fca, 1
  br i1 %cmpBr_429fca, label %block_.L_429fde, label %block_429fd0

block_429fd0:                                     ; preds = %block_.L_429fc4
  %loadMem_429fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 33
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %3520 to i64*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 1
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %3523 to i64*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 15
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %3526 to i64*
  %3527 = load i64, i64* %RBP.i904
  %3528 = sub i64 %3527, 16
  %3529 = load i64, i64* %PC.i902
  %3530 = add i64 %3529, 3
  store i64 %3530, i64* %PC.i902
  %3531 = inttoptr i64 %3528 to i32*
  %3532 = load i32, i32* %3531
  %3533 = zext i32 %3532 to i64
  store i64 %3533, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_429fd0, %struct.Memory** %MEMORY
  %loadMem_429fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 33
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %3536 to i64*
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 1
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %EAX.i900 = bitcast %union.anon* %3539 to i32*
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 15
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %RBP.i901 = bitcast %union.anon* %3542 to i64*
  %3543 = load i64, i64* %RBP.i901
  %3544 = sub i64 %3543, 1700
  %3545 = load i32, i32* %EAX.i900
  %3546 = zext i32 %3545 to i64
  %3547 = load i64, i64* %PC.i899
  %3548 = add i64 %3547, 6
  store i64 %3548, i64* %PC.i899
  %3549 = inttoptr i64 %3544 to i32*
  store i32 %3545, i32* %3549
  store %struct.Memory* %loadMem_429fd3, %struct.Memory** %MEMORY
  %loadMem_429fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3551 = getelementptr inbounds %struct.GPR, %struct.GPR* %3550, i32 0, i32 33
  %3552 = getelementptr inbounds %struct.Reg, %struct.Reg* %3551, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %3552 to i64*
  %3553 = load i64, i64* %PC.i898
  %3554 = add i64 %3553, 14
  %3555 = load i64, i64* %PC.i898
  %3556 = add i64 %3555, 5
  store i64 %3556, i64* %PC.i898
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3554, i64* %3557, align 8
  store %struct.Memory* %loadMem_429fd9, %struct.Memory** %MEMORY
  br label %block_.L_429fe7

block_.L_429fde:                                  ; preds = %block_.L_429fc4
  %loadMem_429fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3559 = getelementptr inbounds %struct.GPR, %struct.GPR* %3558, i32 0, i32 33
  %3560 = getelementptr inbounds %struct.Reg, %struct.Reg* %3559, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %3560 to i64*
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3562 = getelementptr inbounds %struct.GPR, %struct.GPR* %3561, i32 0, i32 1
  %3563 = getelementptr inbounds %struct.Reg, %struct.Reg* %3562, i32 0, i32 0
  %RAX.i896 = bitcast %union.anon* %3563 to i64*
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 15
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %RBP.i897 = bitcast %union.anon* %3566 to i64*
  %3567 = load i64, i64* %RBP.i897
  %3568 = sub i64 %3567, 20
  %3569 = load i64, i64* %PC.i895
  %3570 = add i64 %3569, 3
  store i64 %3570, i64* %PC.i895
  %3571 = inttoptr i64 %3568 to i32*
  %3572 = load i32, i32* %3571
  %3573 = zext i32 %3572 to i64
  store i64 %3573, i64* %RAX.i896, align 8
  store %struct.Memory* %loadMem_429fde, %struct.Memory** %MEMORY
  %loadMem_429fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3575 = getelementptr inbounds %struct.GPR, %struct.GPR* %3574, i32 0, i32 33
  %3576 = getelementptr inbounds %struct.Reg, %struct.Reg* %3575, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %3576 to i64*
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 1
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %EAX.i893 = bitcast %union.anon* %3579 to i32*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 15
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %RBP.i894
  %3584 = sub i64 %3583, 1700
  %3585 = load i32, i32* %EAX.i893
  %3586 = zext i32 %3585 to i64
  %3587 = load i64, i64* %PC.i892
  %3588 = add i64 %3587, 6
  store i64 %3588, i64* %PC.i892
  %3589 = inttoptr i64 %3584 to i32*
  store i32 %3585, i32* %3589
  store %struct.Memory* %loadMem_429fe1, %struct.Memory** %MEMORY
  br label %block_.L_429fe7

block_.L_429fe7:                                  ; preds = %block_.L_429fde, %block_429fd0
  %loadMem_429fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 33
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %3592 to i64*
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 1
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %RAX.i890 = bitcast %union.anon* %3595 to i64*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 15
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %3598 to i64*
  %3599 = load i64, i64* %RBP.i891
  %3600 = sub i64 %3599, 1700
  %3601 = load i64, i64* %PC.i889
  %3602 = add i64 %3601, 6
  store i64 %3602, i64* %PC.i889
  %3603 = inttoptr i64 %3600 to i32*
  %3604 = load i32, i32* %3603
  %3605 = zext i32 %3604 to i64
  store i64 %3605, i64* %RAX.i890, align 8
  store %struct.Memory* %loadMem_429fe7, %struct.Memory** %MEMORY
  %loadMem_429fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3607 = getelementptr inbounds %struct.GPR, %struct.GPR* %3606, i32 0, i32 33
  %3608 = getelementptr inbounds %struct.Reg, %struct.Reg* %3607, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %3608 to i64*
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3610 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3609, i64 0, i64 0
  %YMM0.i888 = bitcast %union.VectorReg* %3610 to %"class.std::bitset"*
  %3611 = bitcast %"class.std::bitset"* %YMM0.i888 to i8*
  %3612 = load i64, i64* %PC.i887
  %3613 = add i64 %3612, ptrtoint (%G_0xb913f__rip__type* @G_0xb913f__rip_ to i64)
  %3614 = load i64, i64* %PC.i887
  %3615 = add i64 %3614, 8
  store i64 %3615, i64* %PC.i887
  %3616 = inttoptr i64 %3613 to float*
  %3617 = load float, float* %3616
  %3618 = bitcast i8* %3611 to float*
  store float %3617, float* %3618, align 1
  %3619 = getelementptr inbounds i8, i8* %3611, i64 4
  %3620 = bitcast i8* %3619 to float*
  store float 0.000000e+00, float* %3620, align 1
  %3621 = getelementptr inbounds i8, i8* %3611, i64 8
  %3622 = bitcast i8* %3621 to float*
  store float 0.000000e+00, float* %3622, align 1
  %3623 = getelementptr inbounds i8, i8* %3611, i64 12
  %3624 = bitcast i8* %3623 to float*
  store float 0.000000e+00, float* %3624, align 1
  store %struct.Memory* %loadMem_429fed, %struct.Memory** %MEMORY
  %loadMem_429ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3626 = getelementptr inbounds %struct.GPR, %struct.GPR* %3625, i32 0, i32 33
  %3627 = getelementptr inbounds %struct.Reg, %struct.Reg* %3626, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %3627 to i64*
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 1
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %EAX.i885 = bitcast %union.anon* %3630 to i32*
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3632 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3631, i64 0, i64 1
  %YMM1.i886 = bitcast %union.VectorReg* %3632 to %"class.std::bitset"*
  %3633 = bitcast %"class.std::bitset"* %YMM1.i886 to i8*
  %3634 = load i32, i32* %EAX.i885
  %3635 = zext i32 %3634 to i64
  %3636 = load i64, i64* %PC.i884
  %3637 = add i64 %3636, 4
  store i64 %3637, i64* %PC.i884
  %3638 = bitcast i8* %3633 to <2 x i32>*
  %3639 = load <2 x i32>, <2 x i32>* %3638, align 1
  %3640 = getelementptr inbounds i8, i8* %3633, i64 8
  %3641 = bitcast i8* %3640 to <2 x i32>*
  %3642 = load <2 x i32>, <2 x i32>* %3641, align 1
  %3643 = sitofp i32 %3634 to float
  %3644 = bitcast i8* %3633 to float*
  store float %3643, float* %3644, align 1
  %3645 = extractelement <2 x i32> %3639, i32 1
  %3646 = getelementptr inbounds i8, i8* %3633, i64 4
  %3647 = bitcast i8* %3646 to i32*
  store i32 %3645, i32* %3647, align 1
  %3648 = extractelement <2 x i32> %3642, i32 0
  %3649 = bitcast i8* %3640 to i32*
  store i32 %3648, i32* %3649, align 1
  %3650 = extractelement <2 x i32> %3642, i32 1
  %3651 = getelementptr inbounds i8, i8* %3633, i64 12
  %3652 = bitcast i8* %3651 to i32*
  store i32 %3650, i32* %3652, align 1
  store %struct.Memory* %loadMem_429ff5, %struct.Memory** %MEMORY
  %loadMem_429ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 33
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %3655 to i64*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3657 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3656, i64 0, i64 0
  %YMM0.i882 = bitcast %union.VectorReg* %3657 to %"class.std::bitset"*
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3659 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3658, i64 0, i64 1
  %XMM1.i883 = bitcast %union.VectorReg* %3659 to %union.vec128_t*
  %3660 = bitcast %"class.std::bitset"* %YMM0.i882 to i8*
  %3661 = bitcast %"class.std::bitset"* %YMM0.i882 to i8*
  %3662 = bitcast %union.vec128_t* %XMM1.i883 to i8*
  %3663 = load i64, i64* %PC.i881
  %3664 = add i64 %3663, 4
  store i64 %3664, i64* %PC.i881
  %3665 = bitcast i8* %3661 to <2 x float>*
  %3666 = load <2 x float>, <2 x float>* %3665, align 1
  %3667 = getelementptr inbounds i8, i8* %3661, i64 8
  %3668 = bitcast i8* %3667 to <2 x i32>*
  %3669 = load <2 x i32>, <2 x i32>* %3668, align 1
  %3670 = bitcast i8* %3662 to <2 x float>*
  %3671 = load <2 x float>, <2 x float>* %3670, align 1
  %3672 = extractelement <2 x float> %3666, i32 0
  %3673 = extractelement <2 x float> %3671, i32 0
  %3674 = fmul float %3672, %3673
  %3675 = bitcast i8* %3660 to float*
  store float %3674, float* %3675, align 1
  %3676 = bitcast <2 x float> %3666 to <2 x i32>
  %3677 = extractelement <2 x i32> %3676, i32 1
  %3678 = getelementptr inbounds i8, i8* %3660, i64 4
  %3679 = bitcast i8* %3678 to i32*
  store i32 %3677, i32* %3679, align 1
  %3680 = extractelement <2 x i32> %3669, i32 0
  %3681 = getelementptr inbounds i8, i8* %3660, i64 8
  %3682 = bitcast i8* %3681 to i32*
  store i32 %3680, i32* %3682, align 1
  %3683 = extractelement <2 x i32> %3669, i32 1
  %3684 = getelementptr inbounds i8, i8* %3660, i64 12
  %3685 = bitcast i8* %3684 to i32*
  store i32 %3683, i32* %3685, align 1
  store %struct.Memory* %loadMem_429ff9, %struct.Memory** %MEMORY
  %loadMem_429ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 33
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %3688 to i64*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 15
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %3691 to i64*
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3693 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3692, i64 0, i64 1
  %YMM1.i880 = bitcast %union.VectorReg* %3693 to %"class.std::bitset"*
  %3694 = bitcast %"class.std::bitset"* %YMM1.i880 to i8*
  %3695 = load i64, i64* %RBP.i879
  %3696 = sub i64 %3695, 16
  %3697 = load i64, i64* %PC.i878
  %3698 = add i64 %3697, 5
  store i64 %3698, i64* %PC.i878
  %3699 = bitcast i8* %3694 to <2 x i32>*
  %3700 = load <2 x i32>, <2 x i32>* %3699, align 1
  %3701 = getelementptr inbounds i8, i8* %3694, i64 8
  %3702 = bitcast i8* %3701 to <2 x i32>*
  %3703 = load <2 x i32>, <2 x i32>* %3702, align 1
  %3704 = inttoptr i64 %3696 to i32*
  %3705 = load i32, i32* %3704
  %3706 = sitofp i32 %3705 to float
  %3707 = bitcast i8* %3694 to float*
  store float %3706, float* %3707, align 1
  %3708 = extractelement <2 x i32> %3700, i32 1
  %3709 = getelementptr inbounds i8, i8* %3694, i64 4
  %3710 = bitcast i8* %3709 to i32*
  store i32 %3708, i32* %3710, align 1
  %3711 = extractelement <2 x i32> %3703, i32 0
  %3712 = bitcast i8* %3701 to i32*
  store i32 %3711, i32* %3712, align 1
  %3713 = extractelement <2 x i32> %3703, i32 1
  %3714 = getelementptr inbounds i8, i8* %3694, i64 12
  %3715 = bitcast i8* %3714 to i32*
  store i32 %3713, i32* %3715, align 1
  store %struct.Memory* %loadMem_429ffd, %struct.Memory** %MEMORY
  %loadMem_42a002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 33
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3718 to i64*
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3720 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3719, i64 0, i64 0
  %YMM0.i876 = bitcast %union.VectorReg* %3720 to %"class.std::bitset"*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3722 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3721, i64 0, i64 1
  %XMM1.i877 = bitcast %union.VectorReg* %3722 to %union.vec128_t*
  %3723 = bitcast %"class.std::bitset"* %YMM0.i876 to i8*
  %3724 = bitcast %"class.std::bitset"* %YMM0.i876 to i8*
  %3725 = bitcast %union.vec128_t* %XMM1.i877 to i8*
  %3726 = load i64, i64* %PC.i875
  %3727 = add i64 %3726, 4
  store i64 %3727, i64* %PC.i875
  %3728 = bitcast i8* %3724 to <2 x float>*
  %3729 = load <2 x float>, <2 x float>* %3728, align 1
  %3730 = getelementptr inbounds i8, i8* %3724, i64 8
  %3731 = bitcast i8* %3730 to <2 x i32>*
  %3732 = load <2 x i32>, <2 x i32>* %3731, align 1
  %3733 = bitcast i8* %3725 to <2 x float>*
  %3734 = load <2 x float>, <2 x float>* %3733, align 1
  %3735 = extractelement <2 x float> %3729, i32 0
  %3736 = extractelement <2 x float> %3734, i32 0
  %3737 = fadd float %3735, %3736
  %3738 = bitcast i8* %3723 to float*
  store float %3737, float* %3738, align 1
  %3739 = bitcast <2 x float> %3729 to <2 x i32>
  %3740 = extractelement <2 x i32> %3739, i32 1
  %3741 = getelementptr inbounds i8, i8* %3723, i64 4
  %3742 = bitcast i8* %3741 to i32*
  store i32 %3740, i32* %3742, align 1
  %3743 = extractelement <2 x i32> %3732, i32 0
  %3744 = getelementptr inbounds i8, i8* %3723, i64 8
  %3745 = bitcast i8* %3744 to i32*
  store i32 %3743, i32* %3745, align 1
  %3746 = extractelement <2 x i32> %3732, i32 1
  %3747 = getelementptr inbounds i8, i8* %3723, i64 12
  %3748 = bitcast i8* %3747 to i32*
  store i32 %3746, i32* %3748, align 1
  store %struct.Memory* %loadMem_42a002, %struct.Memory** %MEMORY
  %loadMem_42a006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 33
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 15
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %3754 to i64*
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3756 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3755, i64 0, i64 1
  %YMM1.i874 = bitcast %union.VectorReg* %3756 to %"class.std::bitset"*
  %3757 = bitcast %"class.std::bitset"* %YMM1.i874 to i8*
  %3758 = load i64, i64* %RBP.i873
  %3759 = sub i64 %3758, 20
  %3760 = load i64, i64* %PC.i872
  %3761 = add i64 %3760, 5
  store i64 %3761, i64* %PC.i872
  %3762 = bitcast i8* %3757 to <2 x i32>*
  %3763 = load <2 x i32>, <2 x i32>* %3762, align 1
  %3764 = getelementptr inbounds i8, i8* %3757, i64 8
  %3765 = bitcast i8* %3764 to <2 x i32>*
  %3766 = load <2 x i32>, <2 x i32>* %3765, align 1
  %3767 = inttoptr i64 %3759 to i32*
  %3768 = load i32, i32* %3767
  %3769 = sitofp i32 %3768 to float
  %3770 = bitcast i8* %3757 to float*
  store float %3769, float* %3770, align 1
  %3771 = extractelement <2 x i32> %3763, i32 1
  %3772 = getelementptr inbounds i8, i8* %3757, i64 4
  %3773 = bitcast i8* %3772 to i32*
  store i32 %3771, i32* %3773, align 1
  %3774 = extractelement <2 x i32> %3766, i32 0
  %3775 = bitcast i8* %3764 to i32*
  store i32 %3774, i32* %3775, align 1
  %3776 = extractelement <2 x i32> %3766, i32 1
  %3777 = getelementptr inbounds i8, i8* %3757, i64 12
  %3778 = bitcast i8* %3777 to i32*
  store i32 %3776, i32* %3778, align 1
  store %struct.Memory* %loadMem_42a006, %struct.Memory** %MEMORY
  %loadMem_42a00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 33
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %3781 to i64*
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3783 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3782, i64 0, i64 0
  %YMM0.i870 = bitcast %union.VectorReg* %3783 to %"class.std::bitset"*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3785 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3784, i64 0, i64 1
  %XMM1.i871 = bitcast %union.VectorReg* %3785 to %union.vec128_t*
  %3786 = bitcast %"class.std::bitset"* %YMM0.i870 to i8*
  %3787 = bitcast %"class.std::bitset"* %YMM0.i870 to i8*
  %3788 = bitcast %union.vec128_t* %XMM1.i871 to i8*
  %3789 = load i64, i64* %PC.i869
  %3790 = add i64 %3789, 4
  store i64 %3790, i64* %PC.i869
  %3791 = bitcast i8* %3787 to <2 x float>*
  %3792 = load <2 x float>, <2 x float>* %3791, align 1
  %3793 = getelementptr inbounds i8, i8* %3787, i64 8
  %3794 = bitcast i8* %3793 to <2 x i32>*
  %3795 = load <2 x i32>, <2 x i32>* %3794, align 1
  %3796 = bitcast i8* %3788 to <2 x float>*
  %3797 = load <2 x float>, <2 x float>* %3796, align 1
  %3798 = extractelement <2 x float> %3792, i32 0
  %3799 = extractelement <2 x float> %3797, i32 0
  %3800 = fadd float %3798, %3799
  %3801 = bitcast i8* %3786 to float*
  store float %3800, float* %3801, align 1
  %3802 = bitcast <2 x float> %3792 to <2 x i32>
  %3803 = extractelement <2 x i32> %3802, i32 1
  %3804 = getelementptr inbounds i8, i8* %3786, i64 4
  %3805 = bitcast i8* %3804 to i32*
  store i32 %3803, i32* %3805, align 1
  %3806 = extractelement <2 x i32> %3795, i32 0
  %3807 = getelementptr inbounds i8, i8* %3786, i64 8
  %3808 = bitcast i8* %3807 to i32*
  store i32 %3806, i32* %3808, align 1
  %3809 = extractelement <2 x i32> %3795, i32 1
  %3810 = getelementptr inbounds i8, i8* %3786, i64 12
  %3811 = bitcast i8* %3810 to i32*
  store i32 %3809, i32* %3811, align 1
  store %struct.Memory* %loadMem_42a00b, %struct.Memory** %MEMORY
  %loadMem_42a00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 33
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 15
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %3817 to i64*
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3819 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3818, i64 0, i64 0
  %XMM0.i868 = bitcast %union.VectorReg* %3819 to %union.vec128_t*
  %3820 = load i64, i64* %RBP.i867
  %3821 = sub i64 %3820, 24
  %3822 = bitcast %union.vec128_t* %XMM0.i868 to i8*
  %3823 = load i64, i64* %PC.i866
  %3824 = add i64 %3823, 5
  store i64 %3824, i64* %PC.i866
  %3825 = bitcast i8* %3822 to <2 x float>*
  %3826 = load <2 x float>, <2 x float>* %3825, align 1
  %3827 = extractelement <2 x float> %3826, i32 0
  %3828 = inttoptr i64 %3821 to float*
  store float %3827, float* %3828
  store %struct.Memory* %loadMem_42a00f, %struct.Memory** %MEMORY
  %loadMem_42a014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3830 = getelementptr inbounds %struct.GPR, %struct.GPR* %3829, i32 0, i32 33
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %3831 to i64*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3833 = getelementptr inbounds %struct.GPR, %struct.GPR* %3832, i32 0, i32 5
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %RCX.i864 = bitcast %union.anon* %3834 to i64*
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 15
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %3837 to i64*
  %3838 = load i64, i64* %RBP.i865
  %3839 = sub i64 %3838, 8
  %3840 = load i64, i64* %PC.i863
  %3841 = add i64 %3840, 4
  store i64 %3841, i64* %PC.i863
  %3842 = inttoptr i64 %3839 to i64*
  %3843 = load i64, i64* %3842
  store i64 %3843, i64* %RCX.i864, align 8
  store %struct.Memory* %loadMem_42a014, %struct.Memory** %MEMORY
  %loadMem_42a018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3845 = getelementptr inbounds %struct.GPR, %struct.GPR* %3844, i32 0, i32 33
  %3846 = getelementptr inbounds %struct.Reg, %struct.Reg* %3845, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %3846 to i64*
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3848 = getelementptr inbounds %struct.GPR, %struct.GPR* %3847, i32 0, i32 7
  %3849 = getelementptr inbounds %struct.Reg, %struct.Reg* %3848, i32 0, i32 0
  %RDX.i861 = bitcast %union.anon* %3849 to i64*
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3851 = getelementptr inbounds %struct.GPR, %struct.GPR* %3850, i32 0, i32 15
  %3852 = getelementptr inbounds %struct.Reg, %struct.Reg* %3851, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %3852 to i64*
  %3853 = load i64, i64* %RBP.i862
  %3854 = sub i64 %3853, 12
  %3855 = load i64, i64* %PC.i860
  %3856 = add i64 %3855, 4
  store i64 %3856, i64* %PC.i860
  %3857 = inttoptr i64 %3854 to i32*
  %3858 = load i32, i32* %3857
  %3859 = sext i32 %3858 to i64
  store i64 %3859, i64* %RDX.i861, align 8
  store %struct.Memory* %loadMem_42a018, %struct.Memory** %MEMORY
  %loadMem_42a01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3861 = getelementptr inbounds %struct.GPR, %struct.GPR* %3860, i32 0, i32 33
  %3862 = getelementptr inbounds %struct.Reg, %struct.Reg* %3861, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %3862 to i64*
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3864 = getelementptr inbounds %struct.GPR, %struct.GPR* %3863, i32 0, i32 5
  %3865 = getelementptr inbounds %struct.Reg, %struct.Reg* %3864, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %3865 to i64*
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3867 = getelementptr inbounds %struct.GPR, %struct.GPR* %3866, i32 0, i32 7
  %3868 = getelementptr inbounds %struct.Reg, %struct.Reg* %3867, i32 0, i32 0
  %RDX.i858 = bitcast %union.anon* %3868 to i64*
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3869, i64 0, i64 0
  %YMM0.i859 = bitcast %union.VectorReg* %3870 to %"class.std::bitset"*
  %3871 = bitcast %"class.std::bitset"* %YMM0.i859 to i8*
  %3872 = load i64, i64* %RCX.i857
  %3873 = load i64, i64* %RDX.i858
  %3874 = mul i64 %3873, 4
  %3875 = add i64 %3872, 2000
  %3876 = add i64 %3875, %3874
  %3877 = load i64, i64* %PC.i856
  %3878 = add i64 %3877, 9
  store i64 %3878, i64* %PC.i856
  %3879 = inttoptr i64 %3876 to float*
  %3880 = load float, float* %3879
  %3881 = bitcast i8* %3871 to float*
  store float %3880, float* %3881, align 1
  %3882 = getelementptr inbounds i8, i8* %3871, i64 4
  %3883 = bitcast i8* %3882 to float*
  store float 0.000000e+00, float* %3883, align 1
  %3884 = getelementptr inbounds i8, i8* %3871, i64 8
  %3885 = bitcast i8* %3884 to float*
  store float 0.000000e+00, float* %3885, align 1
  %3886 = getelementptr inbounds i8, i8* %3871, i64 12
  %3887 = bitcast i8* %3886 to float*
  store float 0.000000e+00, float* %3887, align 1
  store %struct.Memory* %loadMem_42a01c, %struct.Memory** %MEMORY
  %loadMem_42a025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 33
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3890 to i64*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 5
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %RCX.i854 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 15
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %3896 to i64*
  %3897 = load i64, i64* %RBP.i855
  %3898 = sub i64 %3897, 8
  %3899 = load i64, i64* %PC.i853
  %3900 = add i64 %3899, 4
  store i64 %3900, i64* %PC.i853
  %3901 = inttoptr i64 %3898 to i64*
  %3902 = load i64, i64* %3901
  store i64 %3902, i64* %RCX.i854, align 8
  store %struct.Memory* %loadMem_42a025, %struct.Memory** %MEMORY
  %loadMem_42a029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 33
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %3905 to i64*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 7
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RDX.i851 = bitcast %union.anon* %3908 to i64*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 15
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %3911 to i64*
  %3912 = load i64, i64* %RBP.i852
  %3913 = sub i64 %3912, 12
  %3914 = load i64, i64* %PC.i850
  %3915 = add i64 %3914, 4
  store i64 %3915, i64* %PC.i850
  %3916 = inttoptr i64 %3913 to i32*
  %3917 = load i32, i32* %3916
  %3918 = sext i32 %3917 to i64
  store i64 %3918, i64* %RDX.i851, align 8
  store %struct.Memory* %loadMem_42a029, %struct.Memory** %MEMORY
  %loadMem_42a02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 33
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %3921 to i64*
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3923 = getelementptr inbounds %struct.GPR, %struct.GPR* %3922, i32 0, i32 5
  %3924 = getelementptr inbounds %struct.Reg, %struct.Reg* %3923, i32 0, i32 0
  %RCX.i847 = bitcast %union.anon* %3924 to i64*
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3926 = getelementptr inbounds %struct.GPR, %struct.GPR* %3925, i32 0, i32 7
  %3927 = getelementptr inbounds %struct.Reg, %struct.Reg* %3926, i32 0, i32 0
  %RDX.i848 = bitcast %union.anon* %3927 to i64*
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3928, i64 0, i64 1
  %YMM1.i849 = bitcast %union.VectorReg* %3929 to %"class.std::bitset"*
  %3930 = bitcast %"class.std::bitset"* %YMM1.i849 to i8*
  %3931 = load i64, i64* %RCX.i847
  %3932 = load i64, i64* %RDX.i848
  %3933 = mul i64 %3932, 4
  %3934 = add i64 %3931, 400
  %3935 = add i64 %3934, %3933
  %3936 = load i64, i64* %PC.i846
  %3937 = add i64 %3936, 9
  store i64 %3937, i64* %PC.i846
  %3938 = inttoptr i64 %3935 to float*
  %3939 = load float, float* %3938
  %3940 = bitcast i8* %3930 to float*
  store float %3939, float* %3940, align 1
  %3941 = getelementptr inbounds i8, i8* %3930, i64 4
  %3942 = bitcast i8* %3941 to float*
  store float 0.000000e+00, float* %3942, align 1
  %3943 = getelementptr inbounds i8, i8* %3930, i64 8
  %3944 = bitcast i8* %3943 to float*
  store float 0.000000e+00, float* %3944, align 1
  %3945 = getelementptr inbounds i8, i8* %3930, i64 12
  %3946 = bitcast i8* %3945 to float*
  store float 0.000000e+00, float* %3946, align 1
  store %struct.Memory* %loadMem_42a02d, %struct.Memory** %MEMORY
  %loadMem_42a036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 33
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %3949 to i64*
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3951 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3950, i64 0, i64 0
  %XMM0.i842 = bitcast %union.VectorReg* %3951 to %union.vec128_t*
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3952, i64 0, i64 1
  %XMM1.i843 = bitcast %union.VectorReg* %3953 to %union.vec128_t*
  %3954 = bitcast %union.vec128_t* %XMM1.i843 to i8*
  %3955 = bitcast %union.vec128_t* %XMM0.i842 to i8*
  %3956 = load i64, i64* %PC.i841
  %3957 = add i64 %3956, 3
  store i64 %3957, i64* %PC.i841
  %3958 = bitcast i8* %3954 to <2 x float>*
  %3959 = load <2 x float>, <2 x float>* %3958, align 1
  %3960 = extractelement <2 x float> %3959, i32 0
  %3961 = bitcast i8* %3955 to <2 x float>*
  %3962 = load <2 x float>, <2 x float>* %3961, align 1
  %3963 = extractelement <2 x float> %3962, i32 0
  %3964 = fcmp uno float %3960, %3963
  br i1 %3964, label %3965, label %3977

; <label>:3965:                                   ; preds = %block_.L_429fe7
  %3966 = fadd float %3960, %3963
  %3967 = bitcast float %3966 to i32
  %3968 = and i32 %3967, 2143289344
  %3969 = icmp eq i32 %3968, 2139095040
  %3970 = and i32 %3967, 4194303
  %3971 = icmp ne i32 %3970, 0
  %3972 = and i1 %3969, %3971
  br i1 %3972, label %3973, label %3983

; <label>:3973:                                   ; preds = %3965
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3975 = load i64, i64* %3974, align 8
  %3976 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3975, %struct.Memory* %loadMem_42a036)
  br label %routine_ucomiss__xmm0___xmm1.exit844

; <label>:3977:                                   ; preds = %block_.L_429fe7
  %3978 = fcmp ogt float %3960, %3963
  br i1 %3978, label %3983, label %3979

; <label>:3979:                                   ; preds = %3977
  %3980 = fcmp olt float %3960, %3963
  br i1 %3980, label %3983, label %3981

; <label>:3981:                                   ; preds = %3979
  %3982 = fcmp oeq float %3960, %3963
  br i1 %3982, label %3983, label %3990

; <label>:3983:                                   ; preds = %3981, %3979, %3977, %3965
  %3984 = phi i8 [ 0, %3977 ], [ 0, %3979 ], [ 1, %3981 ], [ 1, %3965 ]
  %3985 = phi i8 [ 0, %3977 ], [ 0, %3979 ], [ 0, %3981 ], [ 1, %3965 ]
  %3986 = phi i8 [ 0, %3977 ], [ 1, %3979 ], [ 0, %3981 ], [ 1, %3965 ]
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3984, i8* %3987, align 1
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3985, i8* %3988, align 1
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3986, i8* %3989, align 1
  br label %3990

; <label>:3990:                                   ; preds = %3983, %3981
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3991, align 1
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3992, align 1
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3993, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit844

routine_ucomiss__xmm0___xmm1.exit844:             ; preds = %3973, %3990
  %3994 = phi %struct.Memory* [ %3976, %3973 ], [ %loadMem_42a036, %3990 ]
  store %struct.Memory* %3994, %struct.Memory** %MEMORY
  %loadMem_42a039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3996 = getelementptr inbounds %struct.GPR, %struct.GPR* %3995, i32 0, i32 33
  %3997 = getelementptr inbounds %struct.Reg, %struct.Reg* %3996, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %3997 to i64*
  %3998 = load i64, i64* %PC.i840
  %3999 = add i64 %3998, 36
  %4000 = load i64, i64* %PC.i840
  %4001 = add i64 %4000, 6
  %4002 = load i64, i64* %PC.i840
  %4003 = add i64 %4002, 6
  store i64 %4003, i64* %PC.i840
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4005 = load i8, i8* %4004, align 1
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4007 = load i8, i8* %4006, align 1
  %4008 = or i8 %4007, %4005
  %4009 = icmp ne i8 %4008, 0
  %4010 = zext i1 %4009 to i8
  store i8 %4010, i8* %BRANCH_TAKEN, align 1
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4012 = select i1 %4009, i64 %3999, i64 %4001
  store i64 %4012, i64* %4011, align 8
  store %struct.Memory* %loadMem_42a039, %struct.Memory** %MEMORY
  %loadBr_42a039 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a039 = icmp eq i8 %loadBr_42a039, 1
  br i1 %cmpBr_42a039, label %block_.L_42a05d, label %block_42a03f

block_42a03f:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit844
  %loadMem_42a03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %4015 to i64*
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 1
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %4018 to i64*
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 15
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %4021 to i64*
  %4022 = load i64, i64* %RBP.i839
  %4023 = sub i64 %4022, 8
  %4024 = load i64, i64* %PC.i837
  %4025 = add i64 %4024, 4
  store i64 %4025, i64* %PC.i837
  %4026 = inttoptr i64 %4023 to i64*
  %4027 = load i64, i64* %4026
  store i64 %4027, i64* %RAX.i838, align 8
  store %struct.Memory* %loadMem_42a03f, %struct.Memory** %MEMORY
  %loadMem_42a043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 33
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %4030 to i64*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 5
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RCX.i835 = bitcast %union.anon* %4033 to i64*
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 15
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %RBP.i836 = bitcast %union.anon* %4036 to i64*
  %4037 = load i64, i64* %RBP.i836
  %4038 = sub i64 %4037, 12
  %4039 = load i64, i64* %PC.i834
  %4040 = add i64 %4039, 4
  store i64 %4040, i64* %PC.i834
  %4041 = inttoptr i64 %4038 to i32*
  %4042 = load i32, i32* %4041
  %4043 = sext i32 %4042 to i64
  store i64 %4043, i64* %RCX.i835, align 8
  store %struct.Memory* %loadMem_42a043, %struct.Memory** %MEMORY
  %loadMem_42a047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 33
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 1
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RAX.i831 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 5
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %RCX.i832 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4054 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4053, i64 0, i64 0
  %YMM0.i833 = bitcast %union.VectorReg* %4054 to %"class.std::bitset"*
  %4055 = bitcast %"class.std::bitset"* %YMM0.i833 to i8*
  %4056 = load i64, i64* %RAX.i831
  %4057 = load i64, i64* %RCX.i832
  %4058 = mul i64 %4057, 4
  %4059 = add i64 %4056, 400
  %4060 = add i64 %4059, %4058
  %4061 = load i64, i64* %PC.i830
  %4062 = add i64 %4061, 9
  store i64 %4062, i64* %PC.i830
  %4063 = inttoptr i64 %4060 to float*
  %4064 = load float, float* %4063
  %4065 = bitcast i8* %4055 to float*
  store float %4064, float* %4065, align 1
  %4066 = getelementptr inbounds i8, i8* %4055, i64 4
  %4067 = bitcast i8* %4066 to float*
  store float 0.000000e+00, float* %4067, align 1
  %4068 = getelementptr inbounds i8, i8* %4055, i64 8
  %4069 = bitcast i8* %4068 to float*
  store float 0.000000e+00, float* %4069, align 1
  %4070 = getelementptr inbounds i8, i8* %4055, i64 12
  %4071 = bitcast i8* %4070 to float*
  store float 0.000000e+00, float* %4071, align 1
  store %struct.Memory* %loadMem_42a047, %struct.Memory** %MEMORY
  %loadMem_42a050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4073 = getelementptr inbounds %struct.GPR, %struct.GPR* %4072, i32 0, i32 33
  %4074 = getelementptr inbounds %struct.Reg, %struct.Reg* %4073, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %4074 to i64*
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 15
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %4077 to i64*
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4079 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4078, i64 0, i64 0
  %XMM0.i829 = bitcast %union.VectorReg* %4079 to %union.vec128_t*
  %4080 = load i64, i64* %RBP.i828
  %4081 = sub i64 %4080, 1704
  %4082 = bitcast %union.vec128_t* %XMM0.i829 to i8*
  %4083 = load i64, i64* %PC.i827
  %4084 = add i64 %4083, 8
  store i64 %4084, i64* %PC.i827
  %4085 = bitcast i8* %4082 to <2 x float>*
  %4086 = load <2 x float>, <2 x float>* %4085, align 1
  %4087 = extractelement <2 x float> %4086, i32 0
  %4088 = inttoptr i64 %4081 to float*
  store float %4087, float* %4088
  store %struct.Memory* %loadMem_42a050, %struct.Memory** %MEMORY
  %loadMem_42a058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4090 = getelementptr inbounds %struct.GPR, %struct.GPR* %4089, i32 0, i32 33
  %4091 = getelementptr inbounds %struct.Reg, %struct.Reg* %4090, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %4091 to i64*
  %4092 = load i64, i64* %PC.i826
  %4093 = add i64 %4092, 30
  %4094 = load i64, i64* %PC.i826
  %4095 = add i64 %4094, 5
  store i64 %4095, i64* %PC.i826
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4093, i64* %4096, align 8
  store %struct.Memory* %loadMem_42a058, %struct.Memory** %MEMORY
  br label %block_.L_42a076

block_.L_42a05d:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit844
  %loadMem_42a05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 33
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %4099 to i64*
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 1
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %RAX.i824 = bitcast %union.anon* %4102 to i64*
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 15
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %4105 to i64*
  %4106 = load i64, i64* %RBP.i825
  %4107 = sub i64 %4106, 8
  %4108 = load i64, i64* %PC.i823
  %4109 = add i64 %4108, 4
  store i64 %4109, i64* %PC.i823
  %4110 = inttoptr i64 %4107 to i64*
  %4111 = load i64, i64* %4110
  store i64 %4111, i64* %RAX.i824, align 8
  store %struct.Memory* %loadMem_42a05d, %struct.Memory** %MEMORY
  %loadMem_42a061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 33
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %4114 to i64*
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 5
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %RCX.i821 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 15
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %RBP.i822
  %4122 = sub i64 %4121, 12
  %4123 = load i64, i64* %PC.i820
  %4124 = add i64 %4123, 4
  store i64 %4124, i64* %PC.i820
  %4125 = inttoptr i64 %4122 to i32*
  %4126 = load i32, i32* %4125
  %4127 = sext i32 %4126 to i64
  store i64 %4127, i64* %RCX.i821, align 8
  store %struct.Memory* %loadMem_42a061, %struct.Memory** %MEMORY
  %loadMem_42a065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 33
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %4130 to i64*
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 1
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %RAX.i817 = bitcast %union.anon* %4133 to i64*
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 5
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %RCX.i818 = bitcast %union.anon* %4136 to i64*
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4137, i64 0, i64 0
  %YMM0.i819 = bitcast %union.VectorReg* %4138 to %"class.std::bitset"*
  %4139 = bitcast %"class.std::bitset"* %YMM0.i819 to i8*
  %4140 = load i64, i64* %RAX.i817
  %4141 = load i64, i64* %RCX.i818
  %4142 = mul i64 %4141, 4
  %4143 = add i64 %4140, 2000
  %4144 = add i64 %4143, %4142
  %4145 = load i64, i64* %PC.i816
  %4146 = add i64 %4145, 9
  store i64 %4146, i64* %PC.i816
  %4147 = inttoptr i64 %4144 to float*
  %4148 = load float, float* %4147
  %4149 = bitcast i8* %4139 to float*
  store float %4148, float* %4149, align 1
  %4150 = getelementptr inbounds i8, i8* %4139, i64 4
  %4151 = bitcast i8* %4150 to float*
  store float 0.000000e+00, float* %4151, align 1
  %4152 = getelementptr inbounds i8, i8* %4139, i64 8
  %4153 = bitcast i8* %4152 to float*
  store float 0.000000e+00, float* %4153, align 1
  %4154 = getelementptr inbounds i8, i8* %4139, i64 12
  %4155 = bitcast i8* %4154 to float*
  store float 0.000000e+00, float* %4155, align 1
  store %struct.Memory* %loadMem_42a065, %struct.Memory** %MEMORY
  %loadMem_42a06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 33
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %4158 to i64*
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4160 = getelementptr inbounds %struct.GPR, %struct.GPR* %4159, i32 0, i32 15
  %4161 = getelementptr inbounds %struct.Reg, %struct.Reg* %4160, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %4161 to i64*
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4163 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4162, i64 0, i64 0
  %XMM0.i815 = bitcast %union.VectorReg* %4163 to %union.vec128_t*
  %4164 = load i64, i64* %RBP.i814
  %4165 = sub i64 %4164, 1704
  %4166 = bitcast %union.vec128_t* %XMM0.i815 to i8*
  %4167 = load i64, i64* %PC.i813
  %4168 = add i64 %4167, 8
  store i64 %4168, i64* %PC.i813
  %4169 = bitcast i8* %4166 to <2 x float>*
  %4170 = load <2 x float>, <2 x float>* %4169, align 1
  %4171 = extractelement <2 x float> %4170, i32 0
  %4172 = inttoptr i64 %4165 to float*
  store float %4171, float* %4172
  store %struct.Memory* %loadMem_42a06e, %struct.Memory** %MEMORY
  br label %block_.L_42a076

block_.L_42a076:                                  ; preds = %block_.L_42a05d, %block_42a03f
  %loadMem_42a076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %4175 to i64*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 15
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4180 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4179, i64 0, i64 0
  %YMM0.i812 = bitcast %union.VectorReg* %4180 to %"class.std::bitset"*
  %4181 = bitcast %"class.std::bitset"* %YMM0.i812 to i8*
  %4182 = load i64, i64* %RBP.i811
  %4183 = sub i64 %4182, 1704
  %4184 = load i64, i64* %PC.i810
  %4185 = add i64 %4184, 8
  store i64 %4185, i64* %PC.i810
  %4186 = inttoptr i64 %4183 to float*
  %4187 = load float, float* %4186
  %4188 = bitcast i8* %4181 to float*
  store float %4187, float* %4188, align 1
  %4189 = getelementptr inbounds i8, i8* %4181, i64 4
  %4190 = bitcast i8* %4189 to float*
  store float 0.000000e+00, float* %4190, align 1
  %4191 = getelementptr inbounds i8, i8* %4181, i64 8
  %4192 = bitcast i8* %4191 to float*
  store float 0.000000e+00, float* %4192, align 1
  %4193 = getelementptr inbounds i8, i8* %4181, i64 12
  %4194 = bitcast i8* %4193 to float*
  store float 0.000000e+00, float* %4194, align 1
  store %struct.Memory* %loadMem_42a076, %struct.Memory** %MEMORY
  %loadMem_42a07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 33
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %4197 to i64*
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 11
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %RDI.i809 = bitcast %union.anon* %4200 to i64*
  %4201 = load i64, i64* %PC.i808
  %4202 = add i64 %4201, 10
  store i64 %4202, i64* %PC.i808
  store i64 ptrtoint (%G__0x7ae468_type* @G__0x7ae468 to i64), i64* %RDI.i809, align 8
  store %struct.Memory* %loadMem_42a07e, %struct.Memory** %MEMORY
  %loadMem_42a088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 33
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %4205 to i64*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 15
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4210 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4209, i64 0, i64 1
  %YMM1.i807 = bitcast %union.VectorReg* %4210 to %"class.std::bitset"*
  %4211 = bitcast %"class.std::bitset"* %YMM1.i807 to i8*
  %4212 = load i64, i64* %RBP.i806
  %4213 = sub i64 %4212, 24
  %4214 = load i64, i64* %PC.i805
  %4215 = add i64 %4214, 5
  store i64 %4215, i64* %PC.i805
  %4216 = inttoptr i64 %4213 to float*
  %4217 = load float, float* %4216
  %4218 = bitcast i8* %4211 to float*
  store float %4217, float* %4218, align 1
  %4219 = getelementptr inbounds i8, i8* %4211, i64 4
  %4220 = bitcast i8* %4219 to float*
  store float 0.000000e+00, float* %4220, align 1
  %4221 = getelementptr inbounds i8, i8* %4211, i64 8
  %4222 = bitcast i8* %4221 to float*
  store float 0.000000e+00, float* %4222, align 1
  %4223 = getelementptr inbounds i8, i8* %4211, i64 12
  %4224 = bitcast i8* %4223 to float*
  store float 0.000000e+00, float* %4224, align 1
  store %struct.Memory* %loadMem_42a088, %struct.Memory** %MEMORY
  %loadMem_42a08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4226 = getelementptr inbounds %struct.GPR, %struct.GPR* %4225, i32 0, i32 33
  %4227 = getelementptr inbounds %struct.Reg, %struct.Reg* %4226, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %4227 to i64*
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4229 = getelementptr inbounds %struct.GPR, %struct.GPR* %4228, i32 0, i32 15
  %4230 = getelementptr inbounds %struct.Reg, %struct.Reg* %4229, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %4230 to i64*
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4231, i64 0, i64 0
  %XMM0.i804 = bitcast %union.VectorReg* %4232 to %union.vec128_t*
  %4233 = load i64, i64* %RBP.i803
  %4234 = sub i64 %4233, 1708
  %4235 = bitcast %union.vec128_t* %XMM0.i804 to i8*
  %4236 = load i64, i64* %PC.i802
  %4237 = add i64 %4236, 8
  store i64 %4237, i64* %PC.i802
  %4238 = bitcast i8* %4235 to <2 x float>*
  %4239 = load <2 x float>, <2 x float>* %4238, align 1
  %4240 = extractelement <2 x float> %4239, i32 0
  %4241 = inttoptr i64 %4234 to float*
  store float %4240, float* %4241
  store %struct.Memory* %loadMem_42a08d, %struct.Memory** %MEMORY
  %loadMem_42a095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 33
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4246 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4245, i64 0, i64 0
  %YMM0.i800 = bitcast %union.VectorReg* %4246 to %"class.std::bitset"*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4248 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4247, i64 0, i64 1
  %XMM1.i801 = bitcast %union.VectorReg* %4248 to %union.vec128_t*
  %4249 = bitcast %"class.std::bitset"* %YMM0.i800 to i8*
  %4250 = bitcast %union.vec128_t* %XMM1.i801 to i8*
  %4251 = load i64, i64* %PC.i799
  %4252 = add i64 %4251, 3
  store i64 %4252, i64* %PC.i799
  %4253 = bitcast i8* %4250 to <2 x i32>*
  %4254 = load <2 x i32>, <2 x i32>* %4253, align 1
  %4255 = getelementptr inbounds i8, i8* %4250, i64 8
  %4256 = bitcast i8* %4255 to <2 x i32>*
  %4257 = load <2 x i32>, <2 x i32>* %4256, align 1
  %4258 = extractelement <2 x i32> %4254, i32 0
  %4259 = bitcast i8* %4249 to i32*
  store i32 %4258, i32* %4259, align 1
  %4260 = extractelement <2 x i32> %4254, i32 1
  %4261 = getelementptr inbounds i8, i8* %4249, i64 4
  %4262 = bitcast i8* %4261 to i32*
  store i32 %4260, i32* %4262, align 1
  %4263 = extractelement <2 x i32> %4257, i32 0
  %4264 = getelementptr inbounds i8, i8* %4249, i64 8
  %4265 = bitcast i8* %4264 to i32*
  store i32 %4263, i32* %4265, align 1
  %4266 = extractelement <2 x i32> %4257, i32 1
  %4267 = getelementptr inbounds i8, i8* %4249, i64 12
  %4268 = bitcast i8* %4267 to i32*
  store i32 %4266, i32* %4268, align 1
  store %struct.Memory* %loadMem_42a095, %struct.Memory** %MEMORY
  %loadMem1_42a098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 33
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %4271 to i64*
  %4272 = load i64, i64* %PC.i798
  %4273 = add i64 %4272, 755656
  %4274 = load i64, i64* %PC.i798
  %4275 = add i64 %4274, 5
  %4276 = load i64, i64* %PC.i798
  %4277 = add i64 %4276, 5
  store i64 %4277, i64* %PC.i798
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4279 = load i64, i64* %4278, align 8
  %4280 = add i64 %4279, -8
  %4281 = inttoptr i64 %4280 to i64*
  store i64 %4275, i64* %4281
  store i64 %4280, i64* %4278, align 8
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4273, i64* %4282, align 8
  store %struct.Memory* %loadMem1_42a098, %struct.Memory** %MEMORY
  %loadMem2_42a098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42a098 = load i64, i64* %3
  %call2_42a098 = call %struct.Memory* @sub_4e2860.gg_interpolate(%struct.State* %0, i64 %loadPC_42a098, %struct.Memory* %loadMem2_42a098)
  store %struct.Memory* %call2_42a098, %struct.Memory** %MEMORY
  %loadMem_42a09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 33
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %4285 to i64*
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 11
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %RDI.i797 = bitcast %union.anon* %4288 to i64*
  %4289 = load i64, i64* %PC.i796
  %4290 = add i64 %4289, 10
  store i64 %4290, i64* %PC.i796
  store i64 ptrtoint (%G__0x7ae4c8_type* @G__0x7ae4c8 to i64), i64* %RDI.i797, align 8
  store %struct.Memory* %loadMem_42a09d, %struct.Memory** %MEMORY
  %loadMem_42a0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 33
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %4293 to i64*
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 15
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4298 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4297, i64 0, i64 1
  %YMM1.i795 = bitcast %union.VectorReg* %4298 to %"class.std::bitset"*
  %4299 = bitcast %"class.std::bitset"* %YMM1.i795 to i8*
  %4300 = load i64, i64* %RBP.i794
  %4301 = sub i64 %4300, 1708
  %4302 = load i64, i64* %PC.i793
  %4303 = add i64 %4302, 8
  store i64 %4303, i64* %PC.i793
  %4304 = inttoptr i64 %4301 to float*
  %4305 = load float, float* %4304
  %4306 = bitcast i8* %4299 to float*
  store float %4305, float* %4306, align 1
  %4307 = getelementptr inbounds i8, i8* %4299, i64 4
  %4308 = bitcast i8* %4307 to float*
  store float 0.000000e+00, float* %4308, align 1
  %4309 = getelementptr inbounds i8, i8* %4299, i64 8
  %4310 = bitcast i8* %4309 to float*
  store float 0.000000e+00, float* %4310, align 1
  %4311 = getelementptr inbounds i8, i8* %4299, i64 12
  %4312 = bitcast i8* %4311 to float*
  store float 0.000000e+00, float* %4312, align 1
  store %struct.Memory* %loadMem_42a0a7, %struct.Memory** %MEMORY
  %loadMem_42a0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 33
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %4315 to i64*
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4316, i64 0, i64 1
  %YMM1.i791 = bitcast %union.VectorReg* %4317 to %"class.std::bitset"*
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4318, i64 0, i64 0
  %XMM0.i792 = bitcast %union.VectorReg* %4319 to %union.vec128_t*
  %4320 = bitcast %"class.std::bitset"* %YMM1.i791 to i8*
  %4321 = bitcast %"class.std::bitset"* %YMM1.i791 to i8*
  %4322 = bitcast %union.vec128_t* %XMM0.i792 to i8*
  %4323 = load i64, i64* %PC.i790
  %4324 = add i64 %4323, 4
  store i64 %4324, i64* %PC.i790
  %4325 = bitcast i8* %4321 to <2 x float>*
  %4326 = load <2 x float>, <2 x float>* %4325, align 1
  %4327 = getelementptr inbounds i8, i8* %4321, i64 8
  %4328 = bitcast i8* %4327 to <2 x i32>*
  %4329 = load <2 x i32>, <2 x i32>* %4328, align 1
  %4330 = bitcast i8* %4322 to <2 x float>*
  %4331 = load <2 x float>, <2 x float>* %4330, align 1
  %4332 = extractelement <2 x float> %4326, i32 0
  %4333 = extractelement <2 x float> %4331, i32 0
  %4334 = fdiv float %4332, %4333
  %4335 = bitcast i8* %4320 to float*
  store float %4334, float* %4335, align 1
  %4336 = bitcast <2 x float> %4326 to <2 x i32>
  %4337 = extractelement <2 x i32> %4336, i32 1
  %4338 = getelementptr inbounds i8, i8* %4320, i64 4
  %4339 = bitcast i8* %4338 to i32*
  store i32 %4337, i32* %4339, align 1
  %4340 = extractelement <2 x i32> %4329, i32 0
  %4341 = getelementptr inbounds i8, i8* %4320, i64 8
  %4342 = bitcast i8* %4341 to i32*
  store i32 %4340, i32* %4342, align 1
  %4343 = extractelement <2 x i32> %4329, i32 1
  %4344 = getelementptr inbounds i8, i8* %4320, i64 12
  %4345 = bitcast i8* %4344 to i32*
  store i32 %4343, i32* %4345, align 1
  store %struct.Memory* %loadMem_42a0af, %struct.Memory** %MEMORY
  %loadMem_42a0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 33
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %4348 to i64*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 15
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %4351 to i64*
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4352, i64 0, i64 1
  %XMM1.i789 = bitcast %union.VectorReg* %4353 to %union.vec128_t*
  %4354 = load i64, i64* %RBP.i788
  %4355 = sub i64 %4354, 1636
  %4356 = bitcast %union.vec128_t* %XMM1.i789 to i8*
  %4357 = load i64, i64* %PC.i787
  %4358 = add i64 %4357, 8
  store i64 %4358, i64* %PC.i787
  %4359 = bitcast i8* %4356 to <2 x float>*
  %4360 = load <2 x float>, <2 x float>* %4359, align 1
  %4361 = extractelement <2 x float> %4360, i32 0
  %4362 = inttoptr i64 %4355 to float*
  store float %4361, float* %4362
  store %struct.Memory* %loadMem_42a0b3, %struct.Memory** %MEMORY
  %loadMem_42a0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4364 = getelementptr inbounds %struct.GPR, %struct.GPR* %4363, i32 0, i32 33
  %4365 = getelementptr inbounds %struct.Reg, %struct.Reg* %4364, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %4365 to i64*
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4367 = getelementptr inbounds %struct.GPR, %struct.GPR* %4366, i32 0, i32 15
  %4368 = getelementptr inbounds %struct.Reg, %struct.Reg* %4367, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %4368 to i64*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4369, i64 0, i64 0
  %YMM0.i786 = bitcast %union.VectorReg* %4370 to %"class.std::bitset"*
  %4371 = bitcast %"class.std::bitset"* %YMM0.i786 to i8*
  %4372 = load i64, i64* %RBP.i785
  %4373 = sub i64 %4372, 1636
  %4374 = load i64, i64* %PC.i784
  %4375 = add i64 %4374, 8
  store i64 %4375, i64* %PC.i784
  %4376 = inttoptr i64 %4373 to float*
  %4377 = load float, float* %4376
  %4378 = bitcast i8* %4371 to float*
  store float %4377, float* %4378, align 1
  %4379 = getelementptr inbounds i8, i8* %4371, i64 4
  %4380 = bitcast i8* %4379 to float*
  store float 0.000000e+00, float* %4380, align 1
  %4381 = getelementptr inbounds i8, i8* %4371, i64 8
  %4382 = bitcast i8* %4381 to float*
  store float 0.000000e+00, float* %4382, align 1
  %4383 = getelementptr inbounds i8, i8* %4371, i64 12
  %4384 = bitcast i8* %4383 to float*
  store float 0.000000e+00, float* %4384, align 1
  store %struct.Memory* %loadMem_42a0bb, %struct.Memory** %MEMORY
  %loadMem1_42a0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 33
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %4387 to i64*
  %4388 = load i64, i64* %PC.i783
  %4389 = add i64 %4388, 755613
  %4390 = load i64, i64* %PC.i783
  %4391 = add i64 %4390, 5
  %4392 = load i64, i64* %PC.i783
  %4393 = add i64 %4392, 5
  store i64 %4393, i64* %PC.i783
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4395 = load i64, i64* %4394, align 8
  %4396 = add i64 %4395, -8
  %4397 = inttoptr i64 %4396 to i64*
  store i64 %4391, i64* %4397
  store i64 %4396, i64* %4394, align 8
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4389, i64* %4398, align 8
  store %struct.Memory* %loadMem1_42a0c3, %struct.Memory** %MEMORY
  %loadMem2_42a0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42a0c3 = load i64, i64* %3
  %call2_42a0c3 = call %struct.Memory* @sub_4e2860.gg_interpolate(%struct.State* %0, i64 %loadPC_42a0c3, %struct.Memory* %loadMem2_42a0c3)
  store %struct.Memory* %call2_42a0c3, %struct.Memory** %MEMORY
  %loadMem_42a0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 33
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %4401 to i64*
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 11
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %RDI.i781 = bitcast %union.anon* %4404 to i64*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 15
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %4407 to i64*
  %4408 = load i64, i64* %RBP.i782
  %4409 = sub i64 %4408, 12
  %4410 = load i64, i64* %PC.i780
  %4411 = add i64 %4410, 4
  store i64 %4411, i64* %PC.i780
  %4412 = inttoptr i64 %4409 to i32*
  %4413 = load i32, i32* %4412
  %4414 = sext i32 %4413 to i64
  store i64 %4414, i64* %RDI.i781, align 8
  store %struct.Memory* %loadMem_42a0c8, %struct.Memory** %MEMORY
  %loadMem_42a0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 33
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %4417 to i64*
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4419 = getelementptr inbounds %struct.GPR, %struct.GPR* %4418, i32 0, i32 11
  %4420 = getelementptr inbounds %struct.Reg, %struct.Reg* %4419, i32 0, i32 0
  %RDI.i777 = bitcast %union.anon* %4420 to i64*
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4422 = getelementptr inbounds %struct.GPR, %struct.GPR* %4421, i32 0, i32 15
  %4423 = getelementptr inbounds %struct.Reg, %struct.Reg* %4422, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %4423 to i64*
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4425 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4424, i64 0, i64 0
  %YMM0.i779 = bitcast %union.VectorReg* %4425 to %"class.std::bitset"*
  %4426 = bitcast %"class.std::bitset"* %YMM0.i779 to i8*
  %4427 = bitcast %"class.std::bitset"* %YMM0.i779 to i8*
  %4428 = load i64, i64* %RBP.i778
  %4429 = load i64, i64* %RDI.i777
  %4430 = mul i64 %4429, 4
  %4431 = add i64 %4428, -1632
  %4432 = add i64 %4431, %4430
  %4433 = load i64, i64* %PC.i776
  %4434 = add i64 %4433, 9
  store i64 %4434, i64* %PC.i776
  %4435 = bitcast i8* %4427 to <2 x float>*
  %4436 = load <2 x float>, <2 x float>* %4435, align 1
  %4437 = getelementptr inbounds i8, i8* %4427, i64 8
  %4438 = bitcast i8* %4437 to <2 x i32>*
  %4439 = load <2 x i32>, <2 x i32>* %4438, align 1
  %4440 = inttoptr i64 %4432 to float*
  %4441 = load float, float* %4440
  %4442 = extractelement <2 x float> %4436, i32 0
  %4443 = fmul float %4442, %4441
  %4444 = bitcast i8* %4426 to float*
  store float %4443, float* %4444, align 1
  %4445 = bitcast <2 x float> %4436 to <2 x i32>
  %4446 = extractelement <2 x i32> %4445, i32 1
  %4447 = getelementptr inbounds i8, i8* %4426, i64 4
  %4448 = bitcast i8* %4447 to i32*
  store i32 %4446, i32* %4448, align 1
  %4449 = extractelement <2 x i32> %4439, i32 0
  %4450 = getelementptr inbounds i8, i8* %4426, i64 8
  %4451 = bitcast i8* %4450 to i32*
  store i32 %4449, i32* %4451, align 1
  %4452 = extractelement <2 x i32> %4439, i32 1
  %4453 = getelementptr inbounds i8, i8* %4426, i64 12
  %4454 = bitcast i8* %4453 to i32*
  store i32 %4452, i32* %4454, align 1
  store %struct.Memory* %loadMem_42a0cc, %struct.Memory** %MEMORY
  %loadMem_42a0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4456 = getelementptr inbounds %struct.GPR, %struct.GPR* %4455, i32 0, i32 33
  %4457 = getelementptr inbounds %struct.Reg, %struct.Reg* %4456, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %4457 to i64*
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 11
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %RDI.i773 = bitcast %union.anon* %4460 to i64*
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4462 = getelementptr inbounds %struct.GPR, %struct.GPR* %4461, i32 0, i32 15
  %4463 = getelementptr inbounds %struct.Reg, %struct.Reg* %4462, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %4463 to i64*
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4465 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4464, i64 0, i64 0
  %XMM0.i775 = bitcast %union.VectorReg* %4465 to %union.vec128_t*
  %4466 = load i64, i64* %RBP.i774
  %4467 = load i64, i64* %RDI.i773
  %4468 = mul i64 %4467, 4
  %4469 = add i64 %4466, -1632
  %4470 = add i64 %4469, %4468
  %4471 = bitcast %union.vec128_t* %XMM0.i775 to i8*
  %4472 = load i64, i64* %PC.i772
  %4473 = add i64 %4472, 9
  store i64 %4473, i64* %PC.i772
  %4474 = bitcast i8* %4471 to <2 x float>*
  %4475 = load <2 x float>, <2 x float>* %4474, align 1
  %4476 = extractelement <2 x float> %4475, i32 0
  %4477 = inttoptr i64 %4470 to float*
  store float %4476, float* %4477
  store %struct.Memory* %loadMem_42a0d5, %struct.Memory** %MEMORY
  %loadMem_42a0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 33
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %4480 to i64*
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4482 = getelementptr inbounds %struct.GPR, %struct.GPR* %4481, i32 0, i32 11
  %4483 = getelementptr inbounds %struct.Reg, %struct.Reg* %4482, i32 0, i32 0
  %RDI.i770 = bitcast %union.anon* %4483 to i64*
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4485 = getelementptr inbounds %struct.GPR, %struct.GPR* %4484, i32 0, i32 15
  %4486 = getelementptr inbounds %struct.Reg, %struct.Reg* %4485, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %4486 to i64*
  %4487 = load i64, i64* %RBP.i771
  %4488 = sub i64 %4487, 12
  %4489 = load i64, i64* %PC.i769
  %4490 = add i64 %4489, 4
  store i64 %4490, i64* %PC.i769
  %4491 = inttoptr i64 %4488 to i32*
  %4492 = load i32, i32* %4491
  %4493 = sext i32 %4492 to i64
  store i64 %4493, i64* %RDI.i770, align 8
  store %struct.Memory* %loadMem_42a0de, %struct.Memory** %MEMORY
  %loadMem_42a0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 33
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 1
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %4499 to i64*
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 11
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %RDI.i768 = bitcast %union.anon* %4502 to i64*
  %4503 = load i64, i64* %RDI.i768
  %4504 = add i64 %4503, 12099168
  %4505 = load i64, i64* %PC.i766
  %4506 = add i64 %4505, 8
  store i64 %4506, i64* %PC.i766
  %4507 = inttoptr i64 %4504 to i8*
  %4508 = load i8, i8* %4507
  %4509 = zext i8 %4508 to i64
  store i64 %4509, i64* %RAX.i767, align 8
  store %struct.Memory* %loadMem_42a0e2, %struct.Memory** %MEMORY
  %loadMem_42a0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 33
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %4512 to i64*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 1
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %EAX.i765 = bitcast %union.anon* %4515 to i32*
  %4516 = load i32, i32* %EAX.i765
  %4517 = zext i32 %4516 to i64
  %4518 = load i64, i64* %PC.i764
  %4519 = add i64 %4518, 3
  store i64 %4519, i64* %PC.i764
  %4520 = sub i32 %4516, 2
  %4521 = icmp ult i32 %4516, 2
  %4522 = zext i1 %4521 to i8
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4522, i8* %4523, align 1
  %4524 = and i32 %4520, 255
  %4525 = call i32 @llvm.ctpop.i32(i32 %4524)
  %4526 = trunc i32 %4525 to i8
  %4527 = and i8 %4526, 1
  %4528 = xor i8 %4527, 1
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4528, i8* %4529, align 1
  %4530 = xor i64 2, %4517
  %4531 = trunc i64 %4530 to i32
  %4532 = xor i32 %4531, %4520
  %4533 = lshr i32 %4532, 4
  %4534 = trunc i32 %4533 to i8
  %4535 = and i8 %4534, 1
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4535, i8* %4536, align 1
  %4537 = icmp eq i32 %4520, 0
  %4538 = zext i1 %4537 to i8
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4538, i8* %4539, align 1
  %4540 = lshr i32 %4520, 31
  %4541 = trunc i32 %4540 to i8
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4541, i8* %4542, align 1
  %4543 = lshr i32 %4516, 31
  %4544 = xor i32 %4540, %4543
  %4545 = add i32 %4544, %4543
  %4546 = icmp eq i32 %4545, 2
  %4547 = zext i1 %4546 to i8
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4547, i8* %4548, align 1
  store %struct.Memory* %loadMem_42a0ea, %struct.Memory** %MEMORY
  %loadMem_42a0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4550 = getelementptr inbounds %struct.GPR, %struct.GPR* %4549, i32 0, i32 33
  %4551 = getelementptr inbounds %struct.Reg, %struct.Reg* %4550, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %4551 to i64*
  %4552 = load i64, i64* %PC.i763
  %4553 = add i64 %4552, 32
  %4554 = load i64, i64* %PC.i763
  %4555 = add i64 %4554, 6
  %4556 = load i64, i64* %PC.i763
  %4557 = add i64 %4556, 6
  store i64 %4557, i64* %PC.i763
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4559 = load i8, i8* %4558, align 1
  %4560 = icmp eq i8 %4559, 0
  %4561 = zext i1 %4560 to i8
  store i8 %4561, i8* %BRANCH_TAKEN, align 1
  %4562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4563 = select i1 %4560, i64 %4553, i64 %4555
  store i64 %4563, i64* %4562, align 8
  store %struct.Memory* %loadMem_42a0ed, %struct.Memory** %MEMORY
  %loadBr_42a0ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a0ed = icmp eq i8 %loadBr_42a0ed, 1
  br i1 %cmpBr_42a0ed, label %block_.L_42a10d, label %block_42a0f3

block_42a0f3:                                     ; preds = %block_.L_42a076
  %loadMem_42a0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 33
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %4566 to i64*
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4567, i64 0, i64 0
  %YMM0.i762 = bitcast %union.VectorReg* %4568 to %"class.std::bitset"*
  %4569 = bitcast %"class.std::bitset"* %YMM0.i762 to i8*
  %4570 = load i64, i64* %PC.i761
  %4571 = add i64 %4570, ptrtoint (%G_0xb9011__rip__type* @G_0xb9011__rip_ to i64)
  %4572 = load i64, i64* %PC.i761
  %4573 = add i64 %4572, 8
  store i64 %4573, i64* %PC.i761
  %4574 = inttoptr i64 %4571 to float*
  %4575 = load float, float* %4574
  %4576 = bitcast i8* %4569 to float*
  store float %4575, float* %4576, align 1
  %4577 = getelementptr inbounds i8, i8* %4569, i64 4
  %4578 = bitcast i8* %4577 to float*
  store float 0.000000e+00, float* %4578, align 1
  %4579 = getelementptr inbounds i8, i8* %4569, i64 8
  %4580 = bitcast i8* %4579 to float*
  store float 0.000000e+00, float* %4580, align 1
  %4581 = getelementptr inbounds i8, i8* %4569, i64 12
  %4582 = bitcast i8* %4581 to float*
  store float 0.000000e+00, float* %4582, align 1
  store %struct.Memory* %loadMem_42a0f3, %struct.Memory** %MEMORY
  %loadMem_42a0fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 33
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %4585 to i64*
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 1
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %4588 to i64*
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4590 = getelementptr inbounds %struct.GPR, %struct.GPR* %4589, i32 0, i32 15
  %4591 = getelementptr inbounds %struct.Reg, %struct.Reg* %4590, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %4591 to i64*
  %4592 = load i64, i64* %RBP.i760
  %4593 = sub i64 %4592, 12
  %4594 = load i64, i64* %PC.i758
  %4595 = add i64 %4594, 4
  store i64 %4595, i64* %PC.i758
  %4596 = inttoptr i64 %4593 to i32*
  %4597 = load i32, i32* %4596
  %4598 = sext i32 %4597 to i64
  store i64 %4598, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_42a0fb, %struct.Memory** %MEMORY
  %loadMem_42a0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4600 = getelementptr inbounds %struct.GPR, %struct.GPR* %4599, i32 0, i32 33
  %4601 = getelementptr inbounds %struct.Reg, %struct.Reg* %4600, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4601 to i64*
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4603 = getelementptr inbounds %struct.GPR, %struct.GPR* %4602, i32 0, i32 1
  %4604 = getelementptr inbounds %struct.Reg, %struct.Reg* %4603, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %4604 to i64*
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 15
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %4607 to i64*
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4609 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4608, i64 0, i64 0
  %XMM0.i757 = bitcast %union.VectorReg* %4609 to %union.vec128_t*
  %4610 = load i64, i64* %RBP.i756
  %4611 = load i64, i64* %RAX.i755
  %4612 = mul i64 %4611, 4
  %4613 = add i64 %4610, -1632
  %4614 = add i64 %4613, %4612
  %4615 = bitcast %union.vec128_t* %XMM0.i757 to i8*
  %4616 = load i64, i64* %PC.i754
  %4617 = add i64 %4616, 9
  store i64 %4617, i64* %PC.i754
  %4618 = bitcast i8* %4615 to <2 x float>*
  %4619 = load <2 x float>, <2 x float>* %4618, align 1
  %4620 = extractelement <2 x float> %4619, i32 0
  %4621 = inttoptr i64 %4614 to float*
  store float %4620, float* %4621
  store %struct.Memory* %loadMem_42a0ff, %struct.Memory** %MEMORY
  %loadMem_42a108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 33
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %4624 to i64*
  %4625 = load i64, i64* %PC.i753
  %4626 = add i64 %4625, 52
  %4627 = load i64, i64* %PC.i753
  %4628 = add i64 %4627, 5
  store i64 %4628, i64* %PC.i753
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4626, i64* %4629, align 8
  store %struct.Memory* %loadMem_42a108, %struct.Memory** %MEMORY
  br label %block_.L_42a13c

block_.L_42a10d:                                  ; preds = %block_.L_42a076
  %loadMem_42a10d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 33
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %4632 to i64*
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 1
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %4635 to i64*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 15
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %4638 to i64*
  %4639 = load i64, i64* %RBP.i752
  %4640 = sub i64 %4639, 12
  %4641 = load i64, i64* %PC.i750
  %4642 = add i64 %4641, 4
  store i64 %4642, i64* %PC.i750
  %4643 = inttoptr i64 %4640 to i32*
  %4644 = load i32, i32* %4643
  %4645 = sext i32 %4644 to i64
  store i64 %4645, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_42a10d, %struct.Memory** %MEMORY
  %loadMem_42a111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 33
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %4648 to i64*
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 1
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %RAX.i748 = bitcast %union.anon* %4651 to i64*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 5
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %RCX.i749 = bitcast %union.anon* %4654 to i64*
  %4655 = load i64, i64* %RAX.i748
  %4656 = add i64 %4655, 12099168
  %4657 = load i64, i64* %PC.i747
  %4658 = add i64 %4657, 8
  store i64 %4658, i64* %PC.i747
  %4659 = inttoptr i64 %4656 to i8*
  %4660 = load i8, i8* %4659
  %4661 = zext i8 %4660 to i64
  store i64 %4661, i64* %RCX.i749, align 8
  store %struct.Memory* %loadMem_42a111, %struct.Memory** %MEMORY
  %loadMem_42a119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4663 = getelementptr inbounds %struct.GPR, %struct.GPR* %4662, i32 0, i32 33
  %4664 = getelementptr inbounds %struct.Reg, %struct.Reg* %4663, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %4664 to i64*
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4666 = getelementptr inbounds %struct.GPR, %struct.GPR* %4665, i32 0, i32 5
  %4667 = getelementptr inbounds %struct.Reg, %struct.Reg* %4666, i32 0, i32 0
  %ECX.i746 = bitcast %union.anon* %4667 to i32*
  %4668 = load i32, i32* %ECX.i746
  %4669 = zext i32 %4668 to i64
  %4670 = load i64, i64* %PC.i745
  %4671 = add i64 %4670, 3
  store i64 %4671, i64* %PC.i745
  %4672 = sub i32 %4668, 1
  %4673 = icmp ult i32 %4668, 1
  %4674 = zext i1 %4673 to i8
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4674, i8* %4675, align 1
  %4676 = and i32 %4672, 255
  %4677 = call i32 @llvm.ctpop.i32(i32 %4676)
  %4678 = trunc i32 %4677 to i8
  %4679 = and i8 %4678, 1
  %4680 = xor i8 %4679, 1
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4680, i8* %4681, align 1
  %4682 = xor i64 1, %4669
  %4683 = trunc i64 %4682 to i32
  %4684 = xor i32 %4683, %4672
  %4685 = lshr i32 %4684, 4
  %4686 = trunc i32 %4685 to i8
  %4687 = and i8 %4686, 1
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4687, i8* %4688, align 1
  %4689 = icmp eq i32 %4672, 0
  %4690 = zext i1 %4689 to i8
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4690, i8* %4691, align 1
  %4692 = lshr i32 %4672, 31
  %4693 = trunc i32 %4692 to i8
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4693, i8* %4694, align 1
  %4695 = lshr i32 %4668, 31
  %4696 = xor i32 %4692, %4695
  %4697 = add i32 %4696, %4695
  %4698 = icmp eq i32 %4697, 2
  %4699 = zext i1 %4698 to i8
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4699, i8* %4700, align 1
  store %struct.Memory* %loadMem_42a119, %struct.Memory** %MEMORY
  %loadMem_42a11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 33
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %4703 to i64*
  %4704 = load i64, i64* %PC.i744
  %4705 = add i64 %4704, 27
  %4706 = load i64, i64* %PC.i744
  %4707 = add i64 %4706, 6
  %4708 = load i64, i64* %PC.i744
  %4709 = add i64 %4708, 6
  store i64 %4709, i64* %PC.i744
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4711 = load i8, i8* %4710, align 1
  %4712 = icmp eq i8 %4711, 0
  %4713 = zext i1 %4712 to i8
  store i8 %4713, i8* %BRANCH_TAKEN, align 1
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4715 = select i1 %4712, i64 %4705, i64 %4707
  store i64 %4715, i64* %4714, align 8
  store %struct.Memory* %loadMem_42a11c, %struct.Memory** %MEMORY
  %loadBr_42a11c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a11c = icmp eq i8 %loadBr_42a11c, 1
  br i1 %cmpBr_42a11c, label %block_.L_42a137, label %block_42a122

block_42a122:                                     ; preds = %block_.L_42a10d
  %loadMem_42a122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 33
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %4718 to i64*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4720 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4719, i64 0, i64 0
  %YMM0.i743 = bitcast %union.VectorReg* %4720 to %"class.std::bitset"*
  %4721 = bitcast %"class.std::bitset"* %YMM0.i743 to i8*
  %4722 = load i64, i64* %PC.i742
  %4723 = add i64 %4722, ptrtoint (%G_0xb8fda__rip__type* @G_0xb8fda__rip_ to i64)
  %4724 = load i64, i64* %PC.i742
  %4725 = add i64 %4724, 8
  store i64 %4725, i64* %PC.i742
  %4726 = inttoptr i64 %4723 to float*
  %4727 = load float, float* %4726
  %4728 = bitcast i8* %4721 to float*
  store float %4727, float* %4728, align 1
  %4729 = getelementptr inbounds i8, i8* %4721, i64 4
  %4730 = bitcast i8* %4729 to float*
  store float 0.000000e+00, float* %4730, align 1
  %4731 = getelementptr inbounds i8, i8* %4721, i64 8
  %4732 = bitcast i8* %4731 to float*
  store float 0.000000e+00, float* %4732, align 1
  %4733 = getelementptr inbounds i8, i8* %4721, i64 12
  %4734 = bitcast i8* %4733 to float*
  store float 0.000000e+00, float* %4734, align 1
  store %struct.Memory* %loadMem_42a122, %struct.Memory** %MEMORY
  %loadMem_42a12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4736 = getelementptr inbounds %struct.GPR, %struct.GPR* %4735, i32 0, i32 33
  %4737 = getelementptr inbounds %struct.Reg, %struct.Reg* %4736, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %4737 to i64*
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4739 = getelementptr inbounds %struct.GPR, %struct.GPR* %4738, i32 0, i32 1
  %4740 = getelementptr inbounds %struct.Reg, %struct.Reg* %4739, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %4740 to i64*
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4742 = getelementptr inbounds %struct.GPR, %struct.GPR* %4741, i32 0, i32 15
  %4743 = getelementptr inbounds %struct.Reg, %struct.Reg* %4742, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %4743 to i64*
  %4744 = load i64, i64* %RBP.i741
  %4745 = sub i64 %4744, 12
  %4746 = load i64, i64* %PC.i739
  %4747 = add i64 %4746, 4
  store i64 %4747, i64* %PC.i739
  %4748 = inttoptr i64 %4745 to i32*
  %4749 = load i32, i32* %4748
  %4750 = sext i32 %4749 to i64
  store i64 %4750, i64* %RAX.i740, align 8
  store %struct.Memory* %loadMem_42a12a, %struct.Memory** %MEMORY
  %loadMem_42a12e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4752 = getelementptr inbounds %struct.GPR, %struct.GPR* %4751, i32 0, i32 33
  %4753 = getelementptr inbounds %struct.Reg, %struct.Reg* %4752, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %4753 to i64*
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4755 = getelementptr inbounds %struct.GPR, %struct.GPR* %4754, i32 0, i32 1
  %4756 = getelementptr inbounds %struct.Reg, %struct.Reg* %4755, i32 0, i32 0
  %RAX.i736 = bitcast %union.anon* %4756 to i64*
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4758 = getelementptr inbounds %struct.GPR, %struct.GPR* %4757, i32 0, i32 15
  %4759 = getelementptr inbounds %struct.Reg, %struct.Reg* %4758, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %4759 to i64*
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4761 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4760, i64 0, i64 0
  %XMM0.i738 = bitcast %union.VectorReg* %4761 to %union.vec128_t*
  %4762 = load i64, i64* %RBP.i737
  %4763 = load i64, i64* %RAX.i736
  %4764 = mul i64 %4763, 4
  %4765 = add i64 %4762, -1632
  %4766 = add i64 %4765, %4764
  %4767 = bitcast %union.vec128_t* %XMM0.i738 to i8*
  %4768 = load i64, i64* %PC.i735
  %4769 = add i64 %4768, 9
  store i64 %4769, i64* %PC.i735
  %4770 = bitcast i8* %4767 to <2 x float>*
  %4771 = load <2 x float>, <2 x float>* %4770, align 1
  %4772 = extractelement <2 x float> %4771, i32 0
  %4773 = inttoptr i64 %4766 to float*
  store float %4772, float* %4773
  store %struct.Memory* %loadMem_42a12e, %struct.Memory** %MEMORY
  br label %block_.L_42a137

block_.L_42a137:                                  ; preds = %block_42a122, %block_.L_42a10d
  %loadMem_42a137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4776 to i64*
  %4777 = load i64, i64* %PC.i734
  %4778 = add i64 %4777, 5
  %4779 = load i64, i64* %PC.i734
  %4780 = add i64 %4779, 5
  store i64 %4780, i64* %PC.i734
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4778, i64* %4781, align 8
  store %struct.Memory* %loadMem_42a137, %struct.Memory** %MEMORY
  br label %block_.L_42a13c

block_.L_42a13c:                                  ; preds = %block_.L_42a137, %block_42a0f3
  %loadMem_42a13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 33
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %4784 to i64*
  %4785 = load i64, i64* %PC.i733
  %4786 = add i64 %4785, 5
  %4787 = load i64, i64* %PC.i733
  %4788 = add i64 %4787, 5
  store i64 %4788, i64* %PC.i733
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4786, i64* %4789, align 8
  store %struct.Memory* %loadMem_42a13c, %struct.Memory** %MEMORY
  br label %block_.L_42a141

block_.L_42a141:                                  ; preds = %block_.L_42a13c, %block_429d48
  %loadMem_42a141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 33
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %4792 to i64*
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4794 = getelementptr inbounds %struct.GPR, %struct.GPR* %4793, i32 0, i32 1
  %4795 = getelementptr inbounds %struct.Reg, %struct.Reg* %4794, i32 0, i32 0
  %RAX.i731 = bitcast %union.anon* %4795 to i64*
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4797 = getelementptr inbounds %struct.GPR, %struct.GPR* %4796, i32 0, i32 15
  %4798 = getelementptr inbounds %struct.Reg, %struct.Reg* %4797, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %4798 to i64*
  %4799 = load i64, i64* %RBP.i732
  %4800 = sub i64 %4799, 12
  %4801 = load i64, i64* %PC.i730
  %4802 = add i64 %4801, 4
  store i64 %4802, i64* %PC.i730
  %4803 = inttoptr i64 %4800 to i32*
  %4804 = load i32, i32* %4803
  %4805 = sext i32 %4804 to i64
  store i64 %4805, i64* %RAX.i731, align 8
  store %struct.Memory* %loadMem_42a141, %struct.Memory** %MEMORY
  %loadMem_42a145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 33
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %4808 to i64*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 1
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 15
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4816 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4815, i64 0, i64 0
  %YMM0.i729 = bitcast %union.VectorReg* %4816 to %"class.std::bitset"*
  %4817 = bitcast %"class.std::bitset"* %YMM0.i729 to i8*
  %4818 = load i64, i64* %RBP.i728
  %4819 = load i64, i64* %RAX.i727
  %4820 = mul i64 %4819, 4
  %4821 = add i64 %4818, -1632
  %4822 = add i64 %4821, %4820
  %4823 = load i64, i64* %PC.i726
  %4824 = add i64 %4823, 9
  store i64 %4824, i64* %PC.i726
  %4825 = inttoptr i64 %4822 to float*
  %4826 = load float, float* %4825
  %4827 = bitcast i8* %4817 to float*
  store float %4826, float* %4827, align 1
  %4828 = getelementptr inbounds i8, i8* %4817, i64 4
  %4829 = bitcast i8* %4828 to float*
  store float 0.000000e+00, float* %4829, align 1
  %4830 = getelementptr inbounds i8, i8* %4817, i64 8
  %4831 = bitcast i8* %4830 to float*
  store float 0.000000e+00, float* %4831, align 1
  %4832 = getelementptr inbounds i8, i8* %4817, i64 12
  %4833 = bitcast i8* %4832 to float*
  store float 0.000000e+00, float* %4833, align 1
  store %struct.Memory* %loadMem_42a145, %struct.Memory** %MEMORY
  %loadMem_42a14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 1
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 15
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %4842 to i64*
  %4843 = load i64, i64* %RBP.i725
  %4844 = sub i64 %4843, 8
  %4845 = load i64, i64* %PC.i723
  %4846 = add i64 %4845, 4
  store i64 %4846, i64* %PC.i723
  %4847 = inttoptr i64 %4844 to i64*
  %4848 = load i64, i64* %4847
  store i64 %4848, i64* %RAX.i724, align 8
  store %struct.Memory* %loadMem_42a14e, %struct.Memory** %MEMORY
  %loadMem_42a152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4851 to i64*
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4853 = getelementptr inbounds %struct.GPR, %struct.GPR* %4852, i32 0, i32 5
  %4854 = getelementptr inbounds %struct.Reg, %struct.Reg* %4853, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %4854 to i64*
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 15
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %RBP.i722 = bitcast %union.anon* %4857 to i64*
  %4858 = load i64, i64* %RBP.i722
  %4859 = sub i64 %4858, 12
  %4860 = load i64, i64* %PC.i720
  %4861 = add i64 %4860, 4
  store i64 %4861, i64* %PC.i720
  %4862 = inttoptr i64 %4859 to i32*
  %4863 = load i32, i32* %4862
  %4864 = sext i32 %4863 to i64
  store i64 %4864, i64* %RCX.i721, align 8
  store %struct.Memory* %loadMem_42a152, %struct.Memory** %MEMORY
  %loadMem_42a156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4866 = getelementptr inbounds %struct.GPR, %struct.GPR* %4865, i32 0, i32 33
  %4867 = getelementptr inbounds %struct.Reg, %struct.Reg* %4866, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4867 to i64*
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 1
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %RAX.i717 = bitcast %union.anon* %4870 to i64*
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 5
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4874, i64 0, i64 0
  %XMM0.i719 = bitcast %union.VectorReg* %4875 to %union.vec128_t*
  %4876 = load i64, i64* %RAX.i717
  %4877 = load i64, i64* %RCX.i718
  %4878 = mul i64 %4877, 4
  %4879 = add i64 %4876, 31016
  %4880 = add i64 %4879, %4878
  %4881 = bitcast %union.vec128_t* %XMM0.i719 to i8*
  %4882 = load i64, i64* %PC.i716
  %4883 = add i64 %4882, 9
  store i64 %4883, i64* %PC.i716
  %4884 = bitcast i8* %4881 to <2 x float>*
  %4885 = load <2 x float>, <2 x float>* %4884, align 1
  %4886 = extractelement <2 x float> %4885, i32 0
  %4887 = inttoptr i64 %4880 to float*
  store float %4886, float* %4887
  store %struct.Memory* %loadMem_42a156, %struct.Memory** %MEMORY
  br label %block_.L_42a15f

block_.L_42a15f:                                  ; preds = %block_.L_42a141, %block_429d33
  %loadMem_42a15f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 33
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4890 to i64*
  %4891 = load i64, i64* %PC.i715
  %4892 = add i64 %4891, 5
  %4893 = load i64, i64* %PC.i715
  %4894 = add i64 %4893, 5
  store i64 %4894, i64* %PC.i715
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4892, i64* %4895, align 8
  store %struct.Memory* %loadMem_42a15f, %struct.Memory** %MEMORY
  br label %block_.L_42a164

block_.L_42a164:                                  ; preds = %block_.L_42a15f
  %loadMem_42a164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 33
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4898 to i64*
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 1
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %RAX.i713 = bitcast %union.anon* %4901 to i64*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4903 = getelementptr inbounds %struct.GPR, %struct.GPR* %4902, i32 0, i32 15
  %4904 = getelementptr inbounds %struct.Reg, %struct.Reg* %4903, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %4904 to i64*
  %4905 = load i64, i64* %RBP.i714
  %4906 = sub i64 %4905, 12
  %4907 = load i64, i64* %PC.i712
  %4908 = add i64 %4907, 3
  store i64 %4908, i64* %PC.i712
  %4909 = inttoptr i64 %4906 to i32*
  %4910 = load i32, i32* %4909
  %4911 = zext i32 %4910 to i64
  store i64 %4911, i64* %RAX.i713, align 8
  store %struct.Memory* %loadMem_42a164, %struct.Memory** %MEMORY
  %loadMem_42a167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 33
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4914 to i64*
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4916 = getelementptr inbounds %struct.GPR, %struct.GPR* %4915, i32 0, i32 1
  %4917 = getelementptr inbounds %struct.Reg, %struct.Reg* %4916, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %4917 to i64*
  %4918 = load i64, i64* %RAX.i711
  %4919 = load i64, i64* %PC.i710
  %4920 = add i64 %4919, 3
  store i64 %4920, i64* %PC.i710
  %4921 = trunc i64 %4918 to i32
  %4922 = add i32 1, %4921
  %4923 = zext i32 %4922 to i64
  store i64 %4923, i64* %RAX.i711, align 8
  %4924 = icmp ult i32 %4922, %4921
  %4925 = icmp ult i32 %4922, 1
  %4926 = or i1 %4924, %4925
  %4927 = zext i1 %4926 to i8
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4927, i8* %4928, align 1
  %4929 = and i32 %4922, 255
  %4930 = call i32 @llvm.ctpop.i32(i32 %4929)
  %4931 = trunc i32 %4930 to i8
  %4932 = and i8 %4931, 1
  %4933 = xor i8 %4932, 1
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4933, i8* %4934, align 1
  %4935 = xor i64 1, %4918
  %4936 = trunc i64 %4935 to i32
  %4937 = xor i32 %4936, %4922
  %4938 = lshr i32 %4937, 4
  %4939 = trunc i32 %4938 to i8
  %4940 = and i8 %4939, 1
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4940, i8* %4941, align 1
  %4942 = icmp eq i32 %4922, 0
  %4943 = zext i1 %4942 to i8
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4943, i8* %4944, align 1
  %4945 = lshr i32 %4922, 31
  %4946 = trunc i32 %4945 to i8
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4946, i8* %4947, align 1
  %4948 = lshr i32 %4921, 31
  %4949 = xor i32 %4945, %4948
  %4950 = add i32 %4949, %4945
  %4951 = icmp eq i32 %4950, 2
  %4952 = zext i1 %4951 to i8
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4952, i8* %4953, align 1
  store %struct.Memory* %loadMem_42a167, %struct.Memory** %MEMORY
  %loadMem_42a16a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 33
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4956 to i64*
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 1
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %EAX.i708 = bitcast %union.anon* %4959 to i32*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 15
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %4962 to i64*
  %4963 = load i64, i64* %RBP.i709
  %4964 = sub i64 %4963, 12
  %4965 = load i32, i32* %EAX.i708
  %4966 = zext i32 %4965 to i64
  %4967 = load i64, i64* %PC.i707
  %4968 = add i64 %4967, 3
  store i64 %4968, i64* %PC.i707
  %4969 = inttoptr i64 %4964 to i32*
  store i32 %4965, i32* %4969
  store %struct.Memory* %loadMem_42a16a, %struct.Memory** %MEMORY
  %loadMem_42a16d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 33
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %4972 to i64*
  %4973 = load i64, i64* %PC.i706
  %4974 = add i64 %4973, -1095
  %4975 = load i64, i64* %PC.i706
  %4976 = add i64 %4975, 5
  store i64 %4976, i64* %PC.i706
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4974, i64* %4977, align 8
  store %struct.Memory* %loadMem_42a16d, %struct.Memory** %MEMORY
  br label %block_.L_429d26

block_.L_42a172:                                  ; preds = %block_.L_429d26
  %loadMem_42a172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 33
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4980 to i64*
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 15
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %4983 to i64*
  %4984 = load i64, i64* %RBP.i705
  %4985 = sub i64 %4984, 12
  %4986 = load i64, i64* %PC.i704
  %4987 = add i64 %4986, 7
  store i64 %4987, i64* %PC.i704
  %4988 = inttoptr i64 %4985 to i32*
  store i32 21, i32* %4988
  store %struct.Memory* %loadMem_42a172, %struct.Memory** %MEMORY
  br label %block_.L_42a179

block_.L_42a179:                                  ; preds = %block_.L_42a571, %block_.L_42a172
  %loadMem_42a179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4990 = getelementptr inbounds %struct.GPR, %struct.GPR* %4989, i32 0, i32 33
  %4991 = getelementptr inbounds %struct.Reg, %struct.Reg* %4990, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4991 to i64*
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 15
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %4994 to i64*
  %4995 = load i64, i64* %RBP.i703
  %4996 = sub i64 %4995, 12
  %4997 = load i64, i64* %PC.i702
  %4998 = add i64 %4997, 7
  store i64 %4998, i64* %PC.i702
  %4999 = inttoptr i64 %4996 to i32*
  %5000 = load i32, i32* %4999
  %5001 = sub i32 %5000, 400
  %5002 = icmp ult i32 %5000, 400
  %5003 = zext i1 %5002 to i8
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5003, i8* %5004, align 1
  %5005 = and i32 %5001, 255
  %5006 = call i32 @llvm.ctpop.i32(i32 %5005)
  %5007 = trunc i32 %5006 to i8
  %5008 = and i8 %5007, 1
  %5009 = xor i8 %5008, 1
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5009, i8* %5010, align 1
  %5011 = xor i32 %5000, 400
  %5012 = xor i32 %5011, %5001
  %5013 = lshr i32 %5012, 4
  %5014 = trunc i32 %5013 to i8
  %5015 = and i8 %5014, 1
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5015, i8* %5016, align 1
  %5017 = icmp eq i32 %5001, 0
  %5018 = zext i1 %5017 to i8
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5018, i8* %5019, align 1
  %5020 = lshr i32 %5001, 31
  %5021 = trunc i32 %5020 to i8
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5021, i8* %5022, align 1
  %5023 = lshr i32 %5000, 31
  %5024 = xor i32 %5020, %5023
  %5025 = add i32 %5024, %5023
  %5026 = icmp eq i32 %5025, 2
  %5027 = zext i1 %5026 to i8
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5027, i8* %5028, align 1
  store %struct.Memory* %loadMem_42a179, %struct.Memory** %MEMORY
  %loadMem_42a180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 33
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %5031 to i64*
  %5032 = load i64, i64* %PC.i701
  %5033 = add i64 %5032, 1023
  %5034 = load i64, i64* %PC.i701
  %5035 = add i64 %5034, 6
  %5036 = load i64, i64* %PC.i701
  %5037 = add i64 %5036, 6
  store i64 %5037, i64* %PC.i701
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5039 = load i8, i8* %5038, align 1
  %5040 = icmp ne i8 %5039, 0
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5042 = load i8, i8* %5041, align 1
  %5043 = icmp ne i8 %5042, 0
  %5044 = xor i1 %5040, %5043
  %5045 = xor i1 %5044, true
  %5046 = zext i1 %5045 to i8
  store i8 %5046, i8* %BRANCH_TAKEN, align 1
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5048 = select i1 %5044, i64 %5035, i64 %5033
  store i64 %5048, i64* %5047, align 8
  store %struct.Memory* %loadMem_42a180, %struct.Memory** %MEMORY
  %loadBr_42a180 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a180 = icmp eq i8 %loadBr_42a180, 1
  br i1 %cmpBr_42a180, label %block_.L_42a57f, label %block_42a186

block_42a186:                                     ; preds = %block_.L_42a179
  %loadMem_42a186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 33
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %5051 to i64*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 1
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %5054 to i64*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 15
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %5057 to i64*
  %5058 = load i64, i64* %RBP.i700
  %5059 = sub i64 %5058, 12
  %5060 = load i64, i64* %PC.i698
  %5061 = add i64 %5060, 4
  store i64 %5061, i64* %PC.i698
  %5062 = inttoptr i64 %5059 to i32*
  %5063 = load i32, i32* %5062
  %5064 = sext i32 %5063 to i64
  store i64 %5064, i64* %RAX.i699, align 8
  store %struct.Memory* %loadMem_42a186, %struct.Memory** %MEMORY
  %loadMem_42a18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5066 = getelementptr inbounds %struct.GPR, %struct.GPR* %5065, i32 0, i32 33
  %5067 = getelementptr inbounds %struct.Reg, %struct.Reg* %5066, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %5067 to i64*
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5069 = getelementptr inbounds %struct.GPR, %struct.GPR* %5068, i32 0, i32 1
  %5070 = getelementptr inbounds %struct.Reg, %struct.Reg* %5069, i32 0, i32 0
  %RAX.i696 = bitcast %union.anon* %5070 to i64*
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5072 = getelementptr inbounds %struct.GPR, %struct.GPR* %5071, i32 0, i32 5
  %5073 = getelementptr inbounds %struct.Reg, %struct.Reg* %5072, i32 0, i32 0
  %RCX.i697 = bitcast %union.anon* %5073 to i64*
  %5074 = load i64, i64* %RAX.i696
  %5075 = add i64 %5074, 12099168
  %5076 = load i64, i64* %PC.i695
  %5077 = add i64 %5076, 8
  store i64 %5077, i64* %PC.i695
  %5078 = inttoptr i64 %5075 to i8*
  %5079 = load i8, i8* %5078
  %5080 = zext i8 %5079 to i64
  store i64 %5080, i64* %RCX.i697, align 8
  store %struct.Memory* %loadMem_42a18a, %struct.Memory** %MEMORY
  %loadMem_42a192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5082 = getelementptr inbounds %struct.GPR, %struct.GPR* %5081, i32 0, i32 33
  %5083 = getelementptr inbounds %struct.Reg, %struct.Reg* %5082, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %5083 to i64*
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5085 = getelementptr inbounds %struct.GPR, %struct.GPR* %5084, i32 0, i32 5
  %5086 = getelementptr inbounds %struct.Reg, %struct.Reg* %5085, i32 0, i32 0
  %ECX.i694 = bitcast %union.anon* %5086 to i32*
  %5087 = load i32, i32* %ECX.i694
  %5088 = zext i32 %5087 to i64
  %5089 = load i64, i64* %PC.i693
  %5090 = add i64 %5089, 3
  store i64 %5090, i64* %PC.i693
  %5091 = sub i32 %5087, 3
  %5092 = icmp ult i32 %5087, 3
  %5093 = zext i1 %5092 to i8
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5093, i8* %5094, align 1
  %5095 = and i32 %5091, 255
  %5096 = call i32 @llvm.ctpop.i32(i32 %5095)
  %5097 = trunc i32 %5096 to i8
  %5098 = and i8 %5097, 1
  %5099 = xor i8 %5098, 1
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5099, i8* %5100, align 1
  %5101 = xor i64 3, %5088
  %5102 = trunc i64 %5101 to i32
  %5103 = xor i32 %5102, %5091
  %5104 = lshr i32 %5103, 4
  %5105 = trunc i32 %5104 to i8
  %5106 = and i8 %5105, 1
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5106, i8* %5107, align 1
  %5108 = icmp eq i32 %5091, 0
  %5109 = zext i1 %5108 to i8
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5109, i8* %5110, align 1
  %5111 = lshr i32 %5091, 31
  %5112 = trunc i32 %5111 to i8
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5112, i8* %5113, align 1
  %5114 = lshr i32 %5087, 31
  %5115 = xor i32 %5111, %5114
  %5116 = add i32 %5115, %5114
  %5117 = icmp eq i32 %5116, 2
  %5118 = zext i1 %5117 to i8
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5118, i8* %5119, align 1
  store %struct.Memory* %loadMem_42a192, %struct.Memory** %MEMORY
  %loadMem_42a195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 33
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %5122 to i64*
  %5123 = load i64, i64* %PC.i692
  %5124 = add i64 %5123, 983
  %5125 = load i64, i64* %PC.i692
  %5126 = add i64 %5125, 6
  %5127 = load i64, i64* %PC.i692
  %5128 = add i64 %5127, 6
  store i64 %5128, i64* %PC.i692
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5130 = load i8, i8* %5129, align 1
  store i8 %5130, i8* %BRANCH_TAKEN, align 1
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5132 = icmp ne i8 %5130, 0
  %5133 = select i1 %5132, i64 %5124, i64 %5126
  store i64 %5133, i64* %5131, align 8
  store %struct.Memory* %loadMem_42a195, %struct.Memory** %MEMORY
  %loadBr_42a195 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a195 = icmp eq i8 %loadBr_42a195, 1
  br i1 %cmpBr_42a195, label %block_.L_42a56c, label %block_42a19b

block_42a19b:                                     ; preds = %block_42a186
  %loadMem_42a19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 33
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 1
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %5139 to i64*
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 15
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %5142 to i64*
  %5143 = load i64, i64* %RBP.i691
  %5144 = sub i64 %5143, 8
  %5145 = load i64, i64* %PC.i689
  %5146 = add i64 %5145, 4
  store i64 %5146, i64* %PC.i689
  %5147 = inttoptr i64 %5144 to i64*
  %5148 = load i64, i64* %5147
  store i64 %5148, i64* %RAX.i690, align 8
  store %struct.Memory* %loadMem_42a19b, %struct.Memory** %MEMORY
  %loadMem_42a19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 33
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %5151 to i64*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 5
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %RCX.i687 = bitcast %union.anon* %5154 to i64*
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 15
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %5157 to i64*
  %5158 = load i64, i64* %RBP.i688
  %5159 = sub i64 %5158, 12
  %5160 = load i64, i64* %PC.i686
  %5161 = add i64 %5160, 4
  store i64 %5161, i64* %PC.i686
  %5162 = inttoptr i64 %5159 to i32*
  %5163 = load i32, i32* %5162
  %5164 = sext i32 %5163 to i64
  store i64 %5164, i64* %RCX.i687, align 8
  store %struct.Memory* %loadMem_42a19f, %struct.Memory** %MEMORY
  %loadMem_42a1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %5167 to i64*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 1
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %5170 to i64*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 5
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RCX.i685 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RAX.i684
  %5175 = load i64, i64* %RCX.i685
  %5176 = add i64 %5175, %5174
  %5177 = load i64, i64* %PC.i683
  %5178 = add i64 %5177, 4
  store i64 %5178, i64* %PC.i683
  %5179 = inttoptr i64 %5176 to i8*
  %5180 = load i8, i8* %5179
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5181, align 1
  %5182 = zext i8 %5180 to i32
  %5183 = call i32 @llvm.ctpop.i32(i32 %5182)
  %5184 = trunc i32 %5183 to i8
  %5185 = and i8 %5184, 1
  %5186 = xor i8 %5185, 1
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5186, i8* %5187, align 1
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5188, align 1
  %5189 = icmp eq i8 %5180, 0
  %5190 = zext i1 %5189 to i8
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5190, i8* %5191, align 1
  %5192 = lshr i8 %5180, 7
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5192, i8* %5193, align 1
  %5194 = lshr i8 %5180, 7
  %5195 = xor i8 %5192, %5194
  %5196 = add i8 %5195, %5194
  %5197 = icmp eq i8 %5196, 2
  %5198 = zext i1 %5197 to i8
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5198, i8* %5199, align 1
  store %struct.Memory* %loadMem_42a1a3, %struct.Memory** %MEMORY
  %loadMem_42a1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5201 = getelementptr inbounds %struct.GPR, %struct.GPR* %5200, i32 0, i32 33
  %5202 = getelementptr inbounds %struct.Reg, %struct.Reg* %5201, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %5202 to i64*
  %5203 = load i64, i64* %PC.i682
  %5204 = add i64 %5203, 960
  %5205 = load i64, i64* %PC.i682
  %5206 = add i64 %5205, 6
  %5207 = load i64, i64* %PC.i682
  %5208 = add i64 %5207, 6
  store i64 %5208, i64* %PC.i682
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5210 = load i8, i8* %5209, align 1
  %5211 = icmp eq i8 %5210, 0
  %5212 = zext i1 %5211 to i8
  store i8 %5212, i8* %BRANCH_TAKEN, align 1
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5214 = select i1 %5211, i64 %5204, i64 %5206
  store i64 %5214, i64* %5213, align 8
  store %struct.Memory* %loadMem_42a1a7, %struct.Memory** %MEMORY
  %loadBr_42a1a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a1a7 = icmp eq i8 %loadBr_42a1a7, 1
  br i1 %cmpBr_42a1a7, label %block_.L_42a567, label %block_42a1ad

block_42a1ad:                                     ; preds = %block_42a19b
  %loadMem_42a1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 33
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %5217 to i64*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5219 = getelementptr inbounds %struct.GPR, %struct.GPR* %5218, i32 0, i32 15
  %5220 = getelementptr inbounds %struct.Reg, %struct.Reg* %5219, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %5220 to i64*
  %5221 = load i64, i64* %RBP.i681
  %5222 = sub i64 %5221, 1640
  %5223 = load i64, i64* %PC.i680
  %5224 = add i64 %5223, 10
  store i64 %5224, i64* %PC.i680
  %5225 = inttoptr i64 %5222 to i32*
  store i32 0, i32* %5225
  store %struct.Memory* %loadMem_42a1ad, %struct.Memory** %MEMORY
  br label %block_.L_42a1b7

block_.L_42a1b7:                                  ; preds = %block_.L_42a54e, %block_42a1ad
  %loadMem_42a1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 33
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %5228 to i64*
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 15
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %RBP.i679 = bitcast %union.anon* %5231 to i64*
  %5232 = load i64, i64* %RBP.i679
  %5233 = sub i64 %5232, 1640
  %5234 = load i64, i64* %PC.i678
  %5235 = add i64 %5234, 7
  store i64 %5235, i64* %PC.i678
  %5236 = inttoptr i64 %5233 to i32*
  %5237 = load i32, i32* %5236
  %5238 = sub i32 %5237, 4
  %5239 = icmp ult i32 %5237, 4
  %5240 = zext i1 %5239 to i8
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5240, i8* %5241, align 1
  %5242 = and i32 %5238, 255
  %5243 = call i32 @llvm.ctpop.i32(i32 %5242)
  %5244 = trunc i32 %5243 to i8
  %5245 = and i8 %5244, 1
  %5246 = xor i8 %5245, 1
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5246, i8* %5247, align 1
  %5248 = xor i32 %5237, 4
  %5249 = xor i32 %5248, %5238
  %5250 = lshr i32 %5249, 4
  %5251 = trunc i32 %5250 to i8
  %5252 = and i8 %5251, 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5252, i8* %5253, align 1
  %5254 = icmp eq i32 %5238, 0
  %5255 = zext i1 %5254 to i8
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5255, i8* %5256, align 1
  %5257 = lshr i32 %5238, 31
  %5258 = trunc i32 %5257 to i8
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5258, i8* %5259, align 1
  %5260 = lshr i32 %5237, 31
  %5261 = xor i32 %5257, %5260
  %5262 = add i32 %5261, %5260
  %5263 = icmp eq i32 %5262, 2
  %5264 = zext i1 %5263 to i8
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5264, i8* %5265, align 1
  store %struct.Memory* %loadMem_42a1b7, %struct.Memory** %MEMORY
  %loadMem_42a1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 33
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %5268 to i64*
  %5269 = load i64, i64* %PC.i677
  %5270 = add i64 %5269, 932
  %5271 = load i64, i64* %PC.i677
  %5272 = add i64 %5271, 6
  %5273 = load i64, i64* %PC.i677
  %5274 = add i64 %5273, 6
  store i64 %5274, i64* %PC.i677
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5276 = load i8, i8* %5275, align 1
  %5277 = icmp ne i8 %5276, 0
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5279 = load i8, i8* %5278, align 1
  %5280 = icmp ne i8 %5279, 0
  %5281 = xor i1 %5277, %5280
  %5282 = xor i1 %5281, true
  %5283 = zext i1 %5282 to i8
  store i8 %5283, i8* %BRANCH_TAKEN, align 1
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5285 = select i1 %5281, i64 %5272, i64 %5270
  store i64 %5285, i64* %5284, align 8
  store %struct.Memory* %loadMem_42a1be, %struct.Memory** %MEMORY
  %loadBr_42a1be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a1be = icmp eq i8 %loadBr_42a1be, 1
  br i1 %cmpBr_42a1be, label %block_.L_42a562, label %block_42a1c4

block_42a1c4:                                     ; preds = %block_.L_42a1b7
  %loadMem_42a1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5287 = getelementptr inbounds %struct.GPR, %struct.GPR* %5286, i32 0, i32 33
  %5288 = getelementptr inbounds %struct.Reg, %struct.Reg* %5287, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %5288 to i64*
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5290 = getelementptr inbounds %struct.GPR, %struct.GPR* %5289, i32 0, i32 1
  %5291 = getelementptr inbounds %struct.Reg, %struct.Reg* %5290, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %5291 to i64*
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5293 = getelementptr inbounds %struct.GPR, %struct.GPR* %5292, i32 0, i32 15
  %5294 = getelementptr inbounds %struct.Reg, %struct.Reg* %5293, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %5294 to i64*
  %5295 = load i64, i64* %RBP.i676
  %5296 = sub i64 %5295, 12
  %5297 = load i64, i64* %PC.i674
  %5298 = add i64 %5297, 3
  store i64 %5298, i64* %PC.i674
  %5299 = inttoptr i64 %5296 to i32*
  %5300 = load i32, i32* %5299
  %5301 = zext i32 %5300 to i64
  store i64 %5301, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_42a1c4, %struct.Memory** %MEMORY
  %loadMem_42a1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5303 = getelementptr inbounds %struct.GPR, %struct.GPR* %5302, i32 0, i32 33
  %5304 = getelementptr inbounds %struct.Reg, %struct.Reg* %5303, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %5304 to i64*
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5306 = getelementptr inbounds %struct.GPR, %struct.GPR* %5305, i32 0, i32 5
  %5307 = getelementptr inbounds %struct.Reg, %struct.Reg* %5306, i32 0, i32 0
  %RCX.i672 = bitcast %union.anon* %5307 to i64*
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5309 = getelementptr inbounds %struct.GPR, %struct.GPR* %5308, i32 0, i32 15
  %5310 = getelementptr inbounds %struct.Reg, %struct.Reg* %5309, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %5310 to i64*
  %5311 = load i64, i64* %RBP.i673
  %5312 = sub i64 %5311, 1640
  %5313 = load i64, i64* %PC.i671
  %5314 = add i64 %5313, 7
  store i64 %5314, i64* %PC.i671
  %5315 = inttoptr i64 %5312 to i32*
  %5316 = load i32, i32* %5315
  %5317 = sext i32 %5316 to i64
  store i64 %5317, i64* %RCX.i672, align 8
  store %struct.Memory* %loadMem_42a1c7, %struct.Memory** %MEMORY
  %loadMem_42a1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 1
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %5323 to i64*
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5325 = getelementptr inbounds %struct.GPR, %struct.GPR* %5324, i32 0, i32 5
  %5326 = getelementptr inbounds %struct.Reg, %struct.Reg* %5325, i32 0, i32 0
  %RCX.i670 = bitcast %union.anon* %5326 to i64*
  %5327 = load i64, i64* %RAX.i669
  %5328 = load i64, i64* %RCX.i670
  %5329 = mul i64 %5328, 4
  %5330 = add i64 %5329, 8053168
  %5331 = load i64, i64* %PC.i668
  %5332 = add i64 %5331, 7
  store i64 %5332, i64* %PC.i668
  %5333 = trunc i64 %5327 to i32
  %5334 = inttoptr i64 %5330 to i32*
  %5335 = load i32, i32* %5334
  %5336 = add i32 %5335, %5333
  %5337 = zext i32 %5336 to i64
  store i64 %5337, i64* %RAX.i669, align 8
  %5338 = icmp ult i32 %5336, %5333
  %5339 = icmp ult i32 %5336, %5335
  %5340 = or i1 %5338, %5339
  %5341 = zext i1 %5340 to i8
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5341, i8* %5342, align 1
  %5343 = and i32 %5336, 255
  %5344 = call i32 @llvm.ctpop.i32(i32 %5343)
  %5345 = trunc i32 %5344 to i8
  %5346 = and i8 %5345, 1
  %5347 = xor i8 %5346, 1
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5347, i8* %5348, align 1
  %5349 = xor i32 %5335, %5333
  %5350 = xor i32 %5349, %5336
  %5351 = lshr i32 %5350, 4
  %5352 = trunc i32 %5351 to i8
  %5353 = and i8 %5352, 1
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5353, i8* %5354, align 1
  %5355 = icmp eq i32 %5336, 0
  %5356 = zext i1 %5355 to i8
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5356, i8* %5357, align 1
  %5358 = lshr i32 %5336, 31
  %5359 = trunc i32 %5358 to i8
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5359, i8* %5360, align 1
  %5361 = lshr i32 %5333, 31
  %5362 = lshr i32 %5335, 31
  %5363 = xor i32 %5358, %5361
  %5364 = xor i32 %5358, %5362
  %5365 = add i32 %5363, %5364
  %5366 = icmp eq i32 %5365, 2
  %5367 = zext i1 %5366 to i8
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5367, i8* %5368, align 1
  store %struct.Memory* %loadMem_42a1ce, %struct.Memory** %MEMORY
  %loadMem_42a1d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 33
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 1
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %EAX.i666 = bitcast %union.anon* %5374 to i32*
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 5
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %RCX.i667 = bitcast %union.anon* %5377 to i64*
  %5378 = load i32, i32* %EAX.i666
  %5379 = zext i32 %5378 to i64
  %5380 = load i64, i64* %PC.i665
  %5381 = add i64 %5380, 3
  store i64 %5381, i64* %PC.i665
  %5382 = shl i64 %5379, 32
  %5383 = ashr exact i64 %5382, 32
  store i64 %5383, i64* %RCX.i667, align 8
  store %struct.Memory* %loadMem_42a1d5, %struct.Memory** %MEMORY
  %loadMem_42a1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 1
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 5
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %RCX.i664
  %5394 = add i64 %5393, 12099168
  %5395 = load i64, i64* %PC.i662
  %5396 = add i64 %5395, 8
  store i64 %5396, i64* %PC.i662
  %5397 = inttoptr i64 %5394 to i8*
  %5398 = load i8, i8* %5397
  %5399 = zext i8 %5398 to i64
  store i64 %5399, i64* %RAX.i663, align 8
  store %struct.Memory* %loadMem_42a1d8, %struct.Memory** %MEMORY
  %loadMem_42a1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 33
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 1
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %EAX.i661 = bitcast %union.anon* %5405 to i32*
  %5406 = load i32, i32* %EAX.i661
  %5407 = zext i32 %5406 to i64
  %5408 = load i64, i64* %PC.i660
  %5409 = add i64 %5408, 3
  store i64 %5409, i64* %PC.i660
  %5410 = sub i32 %5406, 3
  %5411 = icmp ult i32 %5406, 3
  %5412 = zext i1 %5411 to i8
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5412, i8* %5413, align 1
  %5414 = and i32 %5410, 255
  %5415 = call i32 @llvm.ctpop.i32(i32 %5414)
  %5416 = trunc i32 %5415 to i8
  %5417 = and i8 %5416, 1
  %5418 = xor i8 %5417, 1
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5418, i8* %5419, align 1
  %5420 = xor i64 3, %5407
  %5421 = trunc i64 %5420 to i32
  %5422 = xor i32 %5421, %5410
  %5423 = lshr i32 %5422, 4
  %5424 = trunc i32 %5423 to i8
  %5425 = and i8 %5424, 1
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5425, i8* %5426, align 1
  %5427 = icmp eq i32 %5410, 0
  %5428 = zext i1 %5427 to i8
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5428, i8* %5429, align 1
  %5430 = lshr i32 %5410, 31
  %5431 = trunc i32 %5430 to i8
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5431, i8* %5432, align 1
  %5433 = lshr i32 %5406, 31
  %5434 = xor i32 %5430, %5433
  %5435 = add i32 %5434, %5433
  %5436 = icmp eq i32 %5435, 2
  %5437 = zext i1 %5436 to i8
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5437, i8* %5438, align 1
  store %struct.Memory* %loadMem_42a1e0, %struct.Memory** %MEMORY
  %loadMem_42a1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 33
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5441 to i64*
  %5442 = load i64, i64* %PC.i659
  %5443 = add i64 %5442, 11
  %5444 = load i64, i64* %PC.i659
  %5445 = add i64 %5444, 6
  %5446 = load i64, i64* %PC.i659
  %5447 = add i64 %5446, 6
  store i64 %5447, i64* %PC.i659
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5449 = load i8, i8* %5448, align 1
  %5450 = icmp eq i8 %5449, 0
  %5451 = zext i1 %5450 to i8
  store i8 %5451, i8* %BRANCH_TAKEN, align 1
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5453 = select i1 %5450, i64 %5443, i64 %5445
  store i64 %5453, i64* %5452, align 8
  store %struct.Memory* %loadMem_42a1e3, %struct.Memory** %MEMORY
  %loadBr_42a1e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a1e3 = icmp eq i8 %loadBr_42a1e3, 1
  br i1 %cmpBr_42a1e3, label %block_.L_42a1ee, label %block_42a1e9

block_42a1e9:                                     ; preds = %block_42a1c4
  %loadMem_42a1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 33
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %5456 to i64*
  %5457 = load i64, i64* %PC.i658
  %5458 = add i64 %5457, 869
  %5459 = load i64, i64* %PC.i658
  %5460 = add i64 %5459, 5
  store i64 %5460, i64* %PC.i658
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5458, i64* %5461, align 8
  store %struct.Memory* %loadMem_42a1e9, %struct.Memory** %MEMORY
  br label %block_.L_42a54e

block_.L_42a1ee:                                  ; preds = %block_42a1c4
  %loadMem_42a1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5463 = getelementptr inbounds %struct.GPR, %struct.GPR* %5462, i32 0, i32 33
  %5464 = getelementptr inbounds %struct.Reg, %struct.Reg* %5463, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %5464 to i64*
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5466 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5465, i64 0, i64 0
  %YMM0.i656 = bitcast %union.VectorReg* %5466 to %"class.std::bitset"*
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5468 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5467, i64 0, i64 0
  %XMM0.i657 = bitcast %union.VectorReg* %5468 to %union.vec128_t*
  %5469 = bitcast %"class.std::bitset"* %YMM0.i656 to i8*
  %5470 = bitcast %"class.std::bitset"* %YMM0.i656 to i8*
  %5471 = bitcast %union.vec128_t* %XMM0.i657 to i8*
  %5472 = load i64, i64* %PC.i655
  %5473 = add i64 %5472, 3
  store i64 %5473, i64* %PC.i655
  %5474 = bitcast i8* %5470 to i64*
  %5475 = load i64, i64* %5474, align 1
  %5476 = getelementptr inbounds i8, i8* %5470, i64 8
  %5477 = bitcast i8* %5476 to i64*
  %5478 = load i64, i64* %5477, align 1
  %5479 = bitcast i8* %5471 to i64*
  %5480 = load i64, i64* %5479, align 1
  %5481 = getelementptr inbounds i8, i8* %5471, i64 8
  %5482 = bitcast i8* %5481 to i64*
  %5483 = load i64, i64* %5482, align 1
  %5484 = xor i64 %5480, %5475
  %5485 = xor i64 %5483, %5478
  %5486 = trunc i64 %5484 to i32
  %5487 = lshr i64 %5484, 32
  %5488 = trunc i64 %5487 to i32
  %5489 = bitcast i8* %5469 to i32*
  store i32 %5486, i32* %5489, align 1
  %5490 = getelementptr inbounds i8, i8* %5469, i64 4
  %5491 = bitcast i8* %5490 to i32*
  store i32 %5488, i32* %5491, align 1
  %5492 = trunc i64 %5485 to i32
  %5493 = getelementptr inbounds i8, i8* %5469, i64 8
  %5494 = bitcast i8* %5493 to i32*
  store i32 %5492, i32* %5494, align 1
  %5495 = lshr i64 %5485, 32
  %5496 = trunc i64 %5495 to i32
  %5497 = getelementptr inbounds i8, i8* %5469, i64 12
  %5498 = bitcast i8* %5497 to i32*
  store i32 %5496, i32* %5498, align 1
  store %struct.Memory* %loadMem_42a1ee, %struct.Memory** %MEMORY
  %loadMem_42a1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5500 = getelementptr inbounds %struct.GPR, %struct.GPR* %5499, i32 0, i32 33
  %5501 = getelementptr inbounds %struct.Reg, %struct.Reg* %5500, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %5501 to i64*
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 1
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %5504 to i64*
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5506 = getelementptr inbounds %struct.GPR, %struct.GPR* %5505, i32 0, i32 15
  %5507 = getelementptr inbounds %struct.Reg, %struct.Reg* %5506, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %5507 to i64*
  %5508 = load i64, i64* %RBP.i654
  %5509 = sub i64 %5508, 8
  %5510 = load i64, i64* %PC.i652
  %5511 = add i64 %5510, 4
  store i64 %5511, i64* %PC.i652
  %5512 = inttoptr i64 %5509 to i64*
  %5513 = load i64, i64* %5512
  store i64 %5513, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_42a1f1, %struct.Memory** %MEMORY
  %loadMem_42a1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5515 = getelementptr inbounds %struct.GPR, %struct.GPR* %5514, i32 0, i32 33
  %5516 = getelementptr inbounds %struct.Reg, %struct.Reg* %5515, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %5516 to i64*
  %5517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5518 = getelementptr inbounds %struct.GPR, %struct.GPR* %5517, i32 0, i32 5
  %5519 = getelementptr inbounds %struct.Reg, %struct.Reg* %5518, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %5519 to i64*
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 15
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %5522 to i64*
  %5523 = load i64, i64* %RBP.i651
  %5524 = sub i64 %5523, 12
  %5525 = load i64, i64* %PC.i649
  %5526 = add i64 %5525, 4
  store i64 %5526, i64* %PC.i649
  %5527 = inttoptr i64 %5524 to i32*
  %5528 = load i32, i32* %5527
  %5529 = sext i32 %5528 to i64
  store i64 %5529, i64* %RCX.i650, align 8
  store %struct.Memory* %loadMem_42a1f5, %struct.Memory** %MEMORY
  %loadMem_42a1f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5531 = getelementptr inbounds %struct.GPR, %struct.GPR* %5530, i32 0, i32 33
  %5532 = getelementptr inbounds %struct.Reg, %struct.Reg* %5531, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %5532 to i64*
  %5533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5534 = getelementptr inbounds %struct.GPR, %struct.GPR* %5533, i32 0, i32 1
  %5535 = getelementptr inbounds %struct.Reg, %struct.Reg* %5534, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %5535 to i64*
  %5536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5537 = getelementptr inbounds %struct.GPR, %struct.GPR* %5536, i32 0, i32 5
  %5538 = getelementptr inbounds %struct.Reg, %struct.Reg* %5537, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %5538 to i64*
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5539, i64 0, i64 1
  %YMM1.i648 = bitcast %union.VectorReg* %5540 to %"class.std::bitset"*
  %5541 = bitcast %"class.std::bitset"* %YMM1.i648 to i8*
  %5542 = load i64, i64* %RAX.i646
  %5543 = load i64, i64* %RCX.i647
  %5544 = mul i64 %5543, 4
  %5545 = add i64 %5542, 31016
  %5546 = add i64 %5545, %5544
  %5547 = load i64, i64* %PC.i645
  %5548 = add i64 %5547, 9
  store i64 %5548, i64* %PC.i645
  %5549 = inttoptr i64 %5546 to float*
  %5550 = load float, float* %5549
  %5551 = fpext float %5550 to double
  %5552 = bitcast i8* %5541 to double*
  store double %5551, double* %5552, align 1
  store %struct.Memory* %loadMem_42a1f9, %struct.Memory** %MEMORY
  %loadMem_42a202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 33
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %5555 to i64*
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5557 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5556, i64 0, i64 0
  %XMM0.i640 = bitcast %union.VectorReg* %5557 to %union.vec128_t*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5559 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5558, i64 0, i64 1
  %XMM1.i641 = bitcast %union.VectorReg* %5559 to %union.vec128_t*
  %5560 = bitcast %union.vec128_t* %XMM1.i641 to i8*
  %5561 = bitcast %union.vec128_t* %XMM0.i640 to i8*
  %5562 = load i64, i64* %PC.i639
  %5563 = add i64 %5562, 4
  store i64 %5563, i64* %PC.i639
  %5564 = bitcast i8* %5560 to double*
  %5565 = load double, double* %5564, align 1
  %5566 = bitcast i8* %5561 to double*
  %5567 = load double, double* %5566, align 1
  %5568 = fcmp uno double %5565, %5567
  br i1 %5568, label %5569, label %5581

; <label>:5569:                                   ; preds = %block_.L_42a1ee
  %5570 = fadd double %5565, %5567
  %5571 = bitcast double %5570 to i64
  %5572 = and i64 %5571, 9221120237041090560
  %5573 = icmp eq i64 %5572, 9218868437227405312
  %5574 = and i64 %5571, 2251799813685247
  %5575 = icmp ne i64 %5574, 0
  %5576 = and i1 %5573, %5575
  br i1 %5576, label %5577, label %5587

; <label>:5577:                                   ; preds = %5569
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5579 = load i64, i64* %5578, align 8
  %5580 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5579, %struct.Memory* %loadMem_42a202)
  br label %routine_ucomisd__xmm0___xmm1.exit642

; <label>:5581:                                   ; preds = %block_.L_42a1ee
  %5582 = fcmp ogt double %5565, %5567
  br i1 %5582, label %5587, label %5583

; <label>:5583:                                   ; preds = %5581
  %5584 = fcmp olt double %5565, %5567
  br i1 %5584, label %5587, label %5585

; <label>:5585:                                   ; preds = %5583
  %5586 = fcmp oeq double %5565, %5567
  br i1 %5586, label %5587, label %5594

; <label>:5587:                                   ; preds = %5585, %5583, %5581, %5569
  %5588 = phi i8 [ 0, %5581 ], [ 0, %5583 ], [ 1, %5585 ], [ 1, %5569 ]
  %5589 = phi i8 [ 0, %5581 ], [ 0, %5583 ], [ 0, %5585 ], [ 1, %5569 ]
  %5590 = phi i8 [ 0, %5581 ], [ 1, %5583 ], [ 0, %5585 ], [ 1, %5569 ]
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5588, i8* %5591, align 1
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5589, i8* %5592, align 1
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5590, i8* %5593, align 1
  br label %5594

; <label>:5594:                                   ; preds = %5587, %5585
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5595, align 1
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5596, align 1
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5597, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit642

routine_ucomisd__xmm0___xmm1.exit642:             ; preds = %5577, %5594
  %5598 = phi %struct.Memory* [ %5580, %5577 ], [ %loadMem_42a202, %5594 ]
  store %struct.Memory* %5598, %struct.Memory** %MEMORY
  %loadMem_42a206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5600 = getelementptr inbounds %struct.GPR, %struct.GPR* %5599, i32 0, i32 33
  %5601 = getelementptr inbounds %struct.Reg, %struct.Reg* %5600, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %5601 to i64*
  %5602 = load i64, i64* %PC.i638
  %5603 = add i64 %5602, 431
  %5604 = load i64, i64* %PC.i638
  %5605 = add i64 %5604, 6
  %5606 = load i64, i64* %PC.i638
  %5607 = add i64 %5606, 6
  store i64 %5607, i64* %PC.i638
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5609 = load i8, i8* %5608, align 1
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5611 = load i8, i8* %5610, align 1
  %5612 = or i8 %5611, %5609
  %5613 = icmp ne i8 %5612, 0
  %5614 = zext i1 %5613 to i8
  store i8 %5614, i8* %BRANCH_TAKEN, align 1
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5616 = select i1 %5613, i64 %5603, i64 %5605
  store i64 %5616, i64* %5615, align 8
  store %struct.Memory* %loadMem_42a206, %struct.Memory** %MEMORY
  %loadBr_42a206 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a206 = icmp eq i8 %loadBr_42a206, 1
  br i1 %cmpBr_42a206, label %block_.L_42a3b5, label %block_42a20c

block_42a20c:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit642
  %loadMem_42a20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 33
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %5619 to i64*
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 1
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %5622 to i64*
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 15
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %5625 to i64*
  %5626 = load i64, i64* %RBP.i637
  %5627 = sub i64 %5626, 8
  %5628 = load i64, i64* %PC.i635
  %5629 = add i64 %5628, 4
  store i64 %5629, i64* %PC.i635
  %5630 = inttoptr i64 %5627 to i64*
  %5631 = load i64, i64* %5630
  store i64 %5631, i64* %RAX.i636, align 8
  store %struct.Memory* %loadMem_42a20c, %struct.Memory** %MEMORY
  %loadMem_42a210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5633 = getelementptr inbounds %struct.GPR, %struct.GPR* %5632, i32 0, i32 33
  %5634 = getelementptr inbounds %struct.Reg, %struct.Reg* %5633, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %5634 to i64*
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5636 = getelementptr inbounds %struct.GPR, %struct.GPR* %5635, i32 0, i32 5
  %5637 = getelementptr inbounds %struct.Reg, %struct.Reg* %5636, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %5637 to i64*
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 15
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %5640 to i64*
  %5641 = load i64, i64* %RBP.i634
  %5642 = sub i64 %5641, 12
  %5643 = load i64, i64* %PC.i632
  %5644 = add i64 %5643, 3
  store i64 %5644, i64* %PC.i632
  %5645 = inttoptr i64 %5642 to i32*
  %5646 = load i32, i32* %5645
  %5647 = zext i32 %5646 to i64
  store i64 %5647, i64* %RCX.i633, align 8
  store %struct.Memory* %loadMem_42a210, %struct.Memory** %MEMORY
  %loadMem_42a213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 33
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %5650 to i64*
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 7
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %RDX.i630 = bitcast %union.anon* %5653 to i64*
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 15
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %RBP.i631 = bitcast %union.anon* %5656 to i64*
  %5657 = load i64, i64* %RBP.i631
  %5658 = sub i64 %5657, 1640
  %5659 = load i64, i64* %PC.i629
  %5660 = add i64 %5659, 7
  store i64 %5660, i64* %PC.i629
  %5661 = inttoptr i64 %5658 to i32*
  %5662 = load i32, i32* %5661
  %5663 = sext i32 %5662 to i64
  store i64 %5663, i64* %RDX.i630, align 8
  store %struct.Memory* %loadMem_42a213, %struct.Memory** %MEMORY
  %loadMem_42a21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5665 = getelementptr inbounds %struct.GPR, %struct.GPR* %5664, i32 0, i32 33
  %5666 = getelementptr inbounds %struct.Reg, %struct.Reg* %5665, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %5666 to i64*
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5668 = getelementptr inbounds %struct.GPR, %struct.GPR* %5667, i32 0, i32 5
  %5669 = getelementptr inbounds %struct.Reg, %struct.Reg* %5668, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %5669 to i64*
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5671 = getelementptr inbounds %struct.GPR, %struct.GPR* %5670, i32 0, i32 7
  %5672 = getelementptr inbounds %struct.Reg, %struct.Reg* %5671, i32 0, i32 0
  %RDX.i628 = bitcast %union.anon* %5672 to i64*
  %5673 = load i64, i64* %RCX.i627
  %5674 = load i64, i64* %RDX.i628
  %5675 = mul i64 %5674, 4
  %5676 = add i64 %5675, 8053168
  %5677 = load i64, i64* %PC.i626
  %5678 = add i64 %5677, 7
  store i64 %5678, i64* %PC.i626
  %5679 = trunc i64 %5673 to i32
  %5680 = inttoptr i64 %5676 to i32*
  %5681 = load i32, i32* %5680
  %5682 = add i32 %5681, %5679
  %5683 = zext i32 %5682 to i64
  store i64 %5683, i64* %RCX.i627, align 8
  %5684 = icmp ult i32 %5682, %5679
  %5685 = icmp ult i32 %5682, %5681
  %5686 = or i1 %5684, %5685
  %5687 = zext i1 %5686 to i8
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5687, i8* %5688, align 1
  %5689 = and i32 %5682, 255
  %5690 = call i32 @llvm.ctpop.i32(i32 %5689)
  %5691 = trunc i32 %5690 to i8
  %5692 = and i8 %5691, 1
  %5693 = xor i8 %5692, 1
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5693, i8* %5694, align 1
  %5695 = xor i32 %5681, %5679
  %5696 = xor i32 %5695, %5682
  %5697 = lshr i32 %5696, 4
  %5698 = trunc i32 %5697 to i8
  %5699 = and i8 %5698, 1
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5699, i8* %5700, align 1
  %5701 = icmp eq i32 %5682, 0
  %5702 = zext i1 %5701 to i8
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5702, i8* %5703, align 1
  %5704 = lshr i32 %5682, 31
  %5705 = trunc i32 %5704 to i8
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5705, i8* %5706, align 1
  %5707 = lshr i32 %5679, 31
  %5708 = lshr i32 %5681, 31
  %5709 = xor i32 %5704, %5707
  %5710 = xor i32 %5704, %5708
  %5711 = add i32 %5709, %5710
  %5712 = icmp eq i32 %5711, 2
  %5713 = zext i1 %5712 to i8
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5713, i8* %5714, align 1
  store %struct.Memory* %loadMem_42a21a, %struct.Memory** %MEMORY
  %loadMem_42a221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5716 = getelementptr inbounds %struct.GPR, %struct.GPR* %5715, i32 0, i32 33
  %5717 = getelementptr inbounds %struct.Reg, %struct.Reg* %5716, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %5717 to i64*
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 5
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %ECX.i624 = bitcast %union.anon* %5720 to i32*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 7
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %RDX.i625 = bitcast %union.anon* %5723 to i64*
  %5724 = load i32, i32* %ECX.i624
  %5725 = zext i32 %5724 to i64
  %5726 = load i64, i64* %PC.i623
  %5727 = add i64 %5726, 3
  store i64 %5727, i64* %PC.i623
  %5728 = shl i64 %5725, 32
  %5729 = ashr exact i64 %5728, 32
  store i64 %5729, i64* %RDX.i625, align 8
  store %struct.Memory* %loadMem_42a221, %struct.Memory** %MEMORY
  %loadMem_42a224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 33
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5732 to i64*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 1
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %RAX.i621 = bitcast %union.anon* %5735 to i64*
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5737 = getelementptr inbounds %struct.GPR, %struct.GPR* %5736, i32 0, i32 7
  %5738 = getelementptr inbounds %struct.Reg, %struct.Reg* %5737, i32 0, i32 0
  %RDX.i622 = bitcast %union.anon* %5738 to i64*
  %5739 = load i64, i64* %RAX.i621
  %5740 = load i64, i64* %RDX.i622
  %5741 = add i64 %5740, %5739
  %5742 = load i64, i64* %PC.i620
  %5743 = add i64 %5742, 4
  store i64 %5743, i64* %PC.i620
  %5744 = inttoptr i64 %5741 to i8*
  %5745 = load i8, i8* %5744
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5746, align 1
  %5747 = zext i8 %5745 to i32
  %5748 = call i32 @llvm.ctpop.i32(i32 %5747)
  %5749 = trunc i32 %5748 to i8
  %5750 = and i8 %5749, 1
  %5751 = xor i8 %5750, 1
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5751, i8* %5752, align 1
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5753, align 1
  %5754 = icmp eq i8 %5745, 0
  %5755 = zext i1 %5754 to i8
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5755, i8* %5756, align 1
  %5757 = lshr i8 %5745, 7
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5757, i8* %5758, align 1
  %5759 = lshr i8 %5745, 7
  %5760 = xor i8 %5757, %5759
  %5761 = add i8 %5760, %5759
  %5762 = icmp eq i8 %5761, 2
  %5763 = zext i1 %5762 to i8
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5763, i8* %5764, align 1
  store %struct.Memory* %loadMem_42a224, %struct.Memory** %MEMORY
  %loadMem_42a228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5766 = getelementptr inbounds %struct.GPR, %struct.GPR* %5765, i32 0, i32 33
  %5767 = getelementptr inbounds %struct.Reg, %struct.Reg* %5766, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %5767 to i64*
  %5768 = load i64, i64* %PC.i619
  %5769 = add i64 %5768, 392
  %5770 = load i64, i64* %PC.i619
  %5771 = add i64 %5770, 6
  %5772 = load i64, i64* %PC.i619
  %5773 = add i64 %5772, 6
  store i64 %5773, i64* %PC.i619
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5775 = load i8, i8* %5774, align 1
  %5776 = icmp eq i8 %5775, 0
  %5777 = zext i1 %5776 to i8
  store i8 %5777, i8* %BRANCH_TAKEN, align 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5779 = select i1 %5776, i64 %5769, i64 %5771
  store i64 %5779, i64* %5778, align 8
  store %struct.Memory* %loadMem_42a228, %struct.Memory** %MEMORY
  %loadBr_42a228 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a228 = icmp eq i8 %loadBr_42a228, 1
  br i1 %cmpBr_42a228, label %block_.L_42a3b0, label %block_42a22e

block_42a22e:                                     ; preds = %block_42a20c
  %loadMem_42a22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 33
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5782 to i64*
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5784 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5783, i64 0, i64 0
  %YMM0.i618 = bitcast %union.VectorReg* %5784 to %"class.std::bitset"*
  %5785 = bitcast %"class.std::bitset"* %YMM0.i618 to i8*
  %5786 = load i64, i64* %PC.i617
  %5787 = add i64 %5786, ptrtoint (%G_0xb8d2a__rip__type* @G_0xb8d2a__rip_ to i64)
  %5788 = load i64, i64* %PC.i617
  %5789 = add i64 %5788, 8
  store i64 %5789, i64* %PC.i617
  %5790 = inttoptr i64 %5787 to double*
  %5791 = load double, double* %5790
  %5792 = bitcast i8* %5785 to double*
  store double %5791, double* %5792, align 1
  %5793 = getelementptr inbounds i8, i8* %5785, i64 8
  %5794 = bitcast i8* %5793 to double*
  store double 0.000000e+00, double* %5794, align 1
  store %struct.Memory* %loadMem_42a22e, %struct.Memory** %MEMORY
  %loadMem_42a236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5797 to i64*
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 1
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %5800 to i64*
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 15
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %5803 to i64*
  %5804 = load i64, i64* %RBP.i616
  %5805 = sub i64 %5804, 8
  %5806 = load i64, i64* %PC.i614
  %5807 = add i64 %5806, 4
  store i64 %5807, i64* %PC.i614
  %5808 = inttoptr i64 %5805 to i64*
  %5809 = load i64, i64* %5808
  store i64 %5809, i64* %RAX.i615, align 8
  store %struct.Memory* %loadMem_42a236, %struct.Memory** %MEMORY
  %loadMem_42a23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5811 = getelementptr inbounds %struct.GPR, %struct.GPR* %5810, i32 0, i32 33
  %5812 = getelementptr inbounds %struct.Reg, %struct.Reg* %5811, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %5812 to i64*
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 5
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %5815 to i64*
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5817 = getelementptr inbounds %struct.GPR, %struct.GPR* %5816, i32 0, i32 15
  %5818 = getelementptr inbounds %struct.Reg, %struct.Reg* %5817, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %5818 to i64*
  %5819 = load i64, i64* %RBP.i613
  %5820 = sub i64 %5819, 12
  %5821 = load i64, i64* %PC.i611
  %5822 = add i64 %5821, 3
  store i64 %5822, i64* %PC.i611
  %5823 = inttoptr i64 %5820 to i32*
  %5824 = load i32, i32* %5823
  %5825 = zext i32 %5824 to i64
  store i64 %5825, i64* %RCX.i612, align 8
  store %struct.Memory* %loadMem_42a23a, %struct.Memory** %MEMORY
  %loadMem_42a23d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 33
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5828 to i64*
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5830 = getelementptr inbounds %struct.GPR, %struct.GPR* %5829, i32 0, i32 7
  %5831 = getelementptr inbounds %struct.Reg, %struct.Reg* %5830, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %5831 to i64*
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5833 = getelementptr inbounds %struct.GPR, %struct.GPR* %5832, i32 0, i32 15
  %5834 = getelementptr inbounds %struct.Reg, %struct.Reg* %5833, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %5834 to i64*
  %5835 = load i64, i64* %RBP.i610
  %5836 = sub i64 %5835, 1640
  %5837 = load i64, i64* %PC.i608
  %5838 = add i64 %5837, 7
  store i64 %5838, i64* %PC.i608
  %5839 = inttoptr i64 %5836 to i32*
  %5840 = load i32, i32* %5839
  %5841 = sext i32 %5840 to i64
  store i64 %5841, i64* %RDX.i609, align 8
  store %struct.Memory* %loadMem_42a23d, %struct.Memory** %MEMORY
  %loadMem_42a244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 33
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %5844 to i64*
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 5
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %5847 to i64*
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5849 = getelementptr inbounds %struct.GPR, %struct.GPR* %5848, i32 0, i32 7
  %5850 = getelementptr inbounds %struct.Reg, %struct.Reg* %5849, i32 0, i32 0
  %RDX.i607 = bitcast %union.anon* %5850 to i64*
  %5851 = load i64, i64* %RCX.i606
  %5852 = load i64, i64* %RDX.i607
  %5853 = mul i64 %5852, 4
  %5854 = add i64 %5853, 8053168
  %5855 = load i64, i64* %PC.i605
  %5856 = add i64 %5855, 7
  store i64 %5856, i64* %PC.i605
  %5857 = trunc i64 %5851 to i32
  %5858 = inttoptr i64 %5854 to i32*
  %5859 = load i32, i32* %5858
  %5860 = add i32 %5859, %5857
  %5861 = zext i32 %5860 to i64
  store i64 %5861, i64* %RCX.i606, align 8
  %5862 = icmp ult i32 %5860, %5857
  %5863 = icmp ult i32 %5860, %5859
  %5864 = or i1 %5862, %5863
  %5865 = zext i1 %5864 to i8
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5865, i8* %5866, align 1
  %5867 = and i32 %5860, 255
  %5868 = call i32 @llvm.ctpop.i32(i32 %5867)
  %5869 = trunc i32 %5868 to i8
  %5870 = and i8 %5869, 1
  %5871 = xor i8 %5870, 1
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5871, i8* %5872, align 1
  %5873 = xor i32 %5859, %5857
  %5874 = xor i32 %5873, %5860
  %5875 = lshr i32 %5874, 4
  %5876 = trunc i32 %5875 to i8
  %5877 = and i8 %5876, 1
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5877, i8* %5878, align 1
  %5879 = icmp eq i32 %5860, 0
  %5880 = zext i1 %5879 to i8
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5880, i8* %5881, align 1
  %5882 = lshr i32 %5860, 31
  %5883 = trunc i32 %5882 to i8
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5883, i8* %5884, align 1
  %5885 = lshr i32 %5857, 31
  %5886 = lshr i32 %5859, 31
  %5887 = xor i32 %5882, %5885
  %5888 = xor i32 %5882, %5886
  %5889 = add i32 %5887, %5888
  %5890 = icmp eq i32 %5889, 2
  %5891 = zext i1 %5890 to i8
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5891, i8* %5892, align 1
  store %struct.Memory* %loadMem_42a244, %struct.Memory** %MEMORY
  %loadMem_42a24b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 33
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %5895 to i64*
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 5
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %ECX.i603 = bitcast %union.anon* %5898 to i32*
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5900 = getelementptr inbounds %struct.GPR, %struct.GPR* %5899, i32 0, i32 7
  %5901 = getelementptr inbounds %struct.Reg, %struct.Reg* %5900, i32 0, i32 0
  %RDX.i604 = bitcast %union.anon* %5901 to i64*
  %5902 = load i32, i32* %ECX.i603
  %5903 = zext i32 %5902 to i64
  %5904 = load i64, i64* %PC.i602
  %5905 = add i64 %5904, 3
  store i64 %5905, i64* %PC.i602
  %5906 = shl i64 %5903, 32
  %5907 = ashr exact i64 %5906, 32
  store i64 %5907, i64* %RDX.i604, align 8
  store %struct.Memory* %loadMem_42a24b, %struct.Memory** %MEMORY
  %loadMem_42a24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 33
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 1
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %5913 to i64*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 7
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %RDX.i600 = bitcast %union.anon* %5916 to i64*
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5917, i64 0, i64 1
  %YMM1.i601 = bitcast %union.VectorReg* %5918 to %"class.std::bitset"*
  %5919 = bitcast %"class.std::bitset"* %YMM1.i601 to i8*
  %5920 = load i64, i64* %RAX.i599
  %5921 = load i64, i64* %RDX.i600
  %5922 = mul i64 %5921, 4
  %5923 = add i64 %5920, 11600
  %5924 = add i64 %5923, %5922
  %5925 = load i64, i64* %PC.i598
  %5926 = add i64 %5925, 9
  store i64 %5926, i64* %PC.i598
  %5927 = inttoptr i64 %5924 to float*
  %5928 = load float, float* %5927
  %5929 = bitcast i8* %5919 to float*
  store float %5928, float* %5929, align 1
  %5930 = getelementptr inbounds i8, i8* %5919, i64 4
  %5931 = bitcast i8* %5930 to float*
  store float 0.000000e+00, float* %5931, align 1
  %5932 = getelementptr inbounds i8, i8* %5919, i64 8
  %5933 = bitcast i8* %5932 to float*
  store float 0.000000e+00, float* %5933, align 1
  %5934 = getelementptr inbounds i8, i8* %5919, i64 12
  %5935 = bitcast i8* %5934 to float*
  store float 0.000000e+00, float* %5935, align 1
  store %struct.Memory* %loadMem_42a24e, %struct.Memory** %MEMORY
  %loadMem_42a257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 33
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5938 to i64*
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5940 = getelementptr inbounds %struct.GPR, %struct.GPR* %5939, i32 0, i32 5
  %5941 = getelementptr inbounds %struct.Reg, %struct.Reg* %5940, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %5941 to i64*
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5943 = getelementptr inbounds %struct.GPR, %struct.GPR* %5942, i32 0, i32 15
  %5944 = getelementptr inbounds %struct.Reg, %struct.Reg* %5943, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %5944 to i64*
  %5945 = load i64, i64* %RBP.i597
  %5946 = sub i64 %5945, 12
  %5947 = load i64, i64* %PC.i595
  %5948 = add i64 %5947, 3
  store i64 %5948, i64* %PC.i595
  %5949 = inttoptr i64 %5946 to i32*
  %5950 = load i32, i32* %5949
  %5951 = zext i32 %5950 to i64
  store i64 %5951, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_42a257, %struct.Memory** %MEMORY
  %loadMem_42a25a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5953 = getelementptr inbounds %struct.GPR, %struct.GPR* %5952, i32 0, i32 33
  %5954 = getelementptr inbounds %struct.Reg, %struct.Reg* %5953, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %5954 to i64*
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5956 = getelementptr inbounds %struct.GPR, %struct.GPR* %5955, i32 0, i32 1
  %5957 = getelementptr inbounds %struct.Reg, %struct.Reg* %5956, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %5957 to i64*
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 15
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %5960 to i64*
  %5961 = load i64, i64* %RBP.i594
  %5962 = sub i64 %5961, 1640
  %5963 = load i64, i64* %PC.i592
  %5964 = add i64 %5963, 7
  store i64 %5964, i64* %PC.i592
  %5965 = inttoptr i64 %5962 to i32*
  %5966 = load i32, i32* %5965
  %5967 = sext i32 %5966 to i64
  store i64 %5967, i64* %RAX.i593, align 8
  store %struct.Memory* %loadMem_42a25a, %struct.Memory** %MEMORY
  %loadMem_42a261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 33
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5970 to i64*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 1
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %5973 to i64*
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 5
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %5976 to i64*
  %5977 = load i64, i64* %RCX.i591
  %5978 = load i64, i64* %RAX.i590
  %5979 = mul i64 %5978, 4
  %5980 = add i64 %5979, 8053168
  %5981 = load i64, i64* %PC.i589
  %5982 = add i64 %5981, 7
  store i64 %5982, i64* %PC.i589
  %5983 = trunc i64 %5977 to i32
  %5984 = inttoptr i64 %5980 to i32*
  %5985 = load i32, i32* %5984
  %5986 = add i32 %5985, %5983
  %5987 = zext i32 %5986 to i64
  store i64 %5987, i64* %RCX.i591, align 8
  %5988 = icmp ult i32 %5986, %5983
  %5989 = icmp ult i32 %5986, %5985
  %5990 = or i1 %5988, %5989
  %5991 = zext i1 %5990 to i8
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5991, i8* %5992, align 1
  %5993 = and i32 %5986, 255
  %5994 = call i32 @llvm.ctpop.i32(i32 %5993)
  %5995 = trunc i32 %5994 to i8
  %5996 = and i8 %5995, 1
  %5997 = xor i8 %5996, 1
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5997, i8* %5998, align 1
  %5999 = xor i32 %5985, %5983
  %6000 = xor i32 %5999, %5986
  %6001 = lshr i32 %6000, 4
  %6002 = trunc i32 %6001 to i8
  %6003 = and i8 %6002, 1
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6003, i8* %6004, align 1
  %6005 = icmp eq i32 %5986, 0
  %6006 = zext i1 %6005 to i8
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6006, i8* %6007, align 1
  %6008 = lshr i32 %5986, 31
  %6009 = trunc i32 %6008 to i8
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6009, i8* %6010, align 1
  %6011 = lshr i32 %5983, 31
  %6012 = lshr i32 %5985, 31
  %6013 = xor i32 %6008, %6011
  %6014 = xor i32 %6008, %6012
  %6015 = add i32 %6013, %6014
  %6016 = icmp eq i32 %6015, 2
  %6017 = zext i1 %6016 to i8
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6017, i8* %6018, align 1
  store %struct.Memory* %loadMem_42a261, %struct.Memory** %MEMORY
  %loadMem_42a268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6020 = getelementptr inbounds %struct.GPR, %struct.GPR* %6019, i32 0, i32 33
  %6021 = getelementptr inbounds %struct.Reg, %struct.Reg* %6020, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %6021 to i64*
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6023 = getelementptr inbounds %struct.GPR, %struct.GPR* %6022, i32 0, i32 5
  %6024 = getelementptr inbounds %struct.Reg, %struct.Reg* %6023, i32 0, i32 0
  %ECX.i587 = bitcast %union.anon* %6024 to i32*
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 1
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %6027 to i64*
  %6028 = load i32, i32* %ECX.i587
  %6029 = zext i32 %6028 to i64
  %6030 = load i64, i64* %PC.i586
  %6031 = add i64 %6030, 3
  store i64 %6031, i64* %PC.i586
  %6032 = shl i64 %6029, 32
  %6033 = ashr exact i64 %6032, 32
  store i64 %6033, i64* %RAX.i588, align 8
  store %struct.Memory* %loadMem_42a268, %struct.Memory** %MEMORY
  %loadMem_42a26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 33
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %6036 to i64*
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6038 = getelementptr inbounds %struct.GPR, %struct.GPR* %6037, i32 0, i32 1
  %6039 = getelementptr inbounds %struct.Reg, %struct.Reg* %6038, i32 0, i32 0
  %RAX.i583 = bitcast %union.anon* %6039 to i64*
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6041 = getelementptr inbounds %struct.GPR, %struct.GPR* %6040, i32 0, i32 15
  %6042 = getelementptr inbounds %struct.Reg, %struct.Reg* %6041, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %6042 to i64*
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6043, i64 0, i64 1
  %YMM1.i585 = bitcast %union.VectorReg* %6044 to %"class.std::bitset"*
  %6045 = bitcast %"class.std::bitset"* %YMM1.i585 to i8*
  %6046 = bitcast %"class.std::bitset"* %YMM1.i585 to i8*
  %6047 = load i64, i64* %RBP.i584
  %6048 = load i64, i64* %RAX.i583
  %6049 = mul i64 %6048, 4
  %6050 = add i64 %6047, -1632
  %6051 = add i64 %6050, %6049
  %6052 = load i64, i64* %PC.i582
  %6053 = add i64 %6052, 9
  store i64 %6053, i64* %PC.i582
  %6054 = bitcast i8* %6046 to <2 x float>*
  %6055 = load <2 x float>, <2 x float>* %6054, align 1
  %6056 = getelementptr inbounds i8, i8* %6046, i64 8
  %6057 = bitcast i8* %6056 to <2 x i32>*
  %6058 = load <2 x i32>, <2 x i32>* %6057, align 1
  %6059 = inttoptr i64 %6051 to float*
  %6060 = load float, float* %6059
  %6061 = extractelement <2 x float> %6055, i32 0
  %6062 = fmul float %6061, %6060
  %6063 = bitcast i8* %6045 to float*
  store float %6062, float* %6063, align 1
  %6064 = bitcast <2 x float> %6055 to <2 x i32>
  %6065 = extractelement <2 x i32> %6064, i32 1
  %6066 = getelementptr inbounds i8, i8* %6045, i64 4
  %6067 = bitcast i8* %6066 to i32*
  store i32 %6065, i32* %6067, align 1
  %6068 = extractelement <2 x i32> %6058, i32 0
  %6069 = getelementptr inbounds i8, i8* %6045, i64 8
  %6070 = bitcast i8* %6069 to i32*
  store i32 %6068, i32* %6070, align 1
  %6071 = extractelement <2 x i32> %6058, i32 1
  %6072 = getelementptr inbounds i8, i8* %6045, i64 12
  %6073 = bitcast i8* %6072 to i32*
  store i32 %6071, i32* %6073, align 1
  store %struct.Memory* %loadMem_42a26b, %struct.Memory** %MEMORY
  %loadMem_42a274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 33
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %6076 to i64*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6078 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6077, i64 0, i64 1
  %YMM1.i580 = bitcast %union.VectorReg* %6078 to %"class.std::bitset"*
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6079, i64 0, i64 1
  %XMM1.i581 = bitcast %union.VectorReg* %6080 to %union.vec128_t*
  %6081 = bitcast %"class.std::bitset"* %YMM1.i580 to i8*
  %6082 = bitcast %union.vec128_t* %XMM1.i581 to i8*
  %6083 = load i64, i64* %PC.i579
  %6084 = add i64 %6083, 4
  store i64 %6084, i64* %PC.i579
  %6085 = bitcast i8* %6082 to <2 x float>*
  %6086 = load <2 x float>, <2 x float>* %6085, align 1
  %6087 = extractelement <2 x float> %6086, i32 0
  %6088 = fpext float %6087 to double
  %6089 = bitcast i8* %6081 to double*
  store double %6088, double* %6089, align 1
  store %struct.Memory* %loadMem_42a274, %struct.Memory** %MEMORY
  %loadMem_42a278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 33
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 1
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %6095 to i64*
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 15
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %6098 to i64*
  %6099 = load i64, i64* %RBP.i578
  %6100 = sub i64 %6099, 8
  %6101 = load i64, i64* %PC.i576
  %6102 = add i64 %6101, 4
  store i64 %6102, i64* %PC.i576
  %6103 = inttoptr i64 %6100 to i64*
  %6104 = load i64, i64* %6103
  store i64 %6104, i64* %RAX.i577, align 8
  store %struct.Memory* %loadMem_42a278, %struct.Memory** %MEMORY
  %loadMem_42a27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 33
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %6107 to i64*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6109 = getelementptr inbounds %struct.GPR, %struct.GPR* %6108, i32 0, i32 5
  %6110 = getelementptr inbounds %struct.Reg, %struct.Reg* %6109, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %6110 to i64*
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 15
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %6113 to i64*
  %6114 = load i64, i64* %RBP.i575
  %6115 = sub i64 %6114, 12
  %6116 = load i64, i64* %PC.i573
  %6117 = add i64 %6116, 3
  store i64 %6117, i64* %PC.i573
  %6118 = inttoptr i64 %6115 to i32*
  %6119 = load i32, i32* %6118
  %6120 = zext i32 %6119 to i64
  store i64 %6120, i64* %RCX.i574, align 8
  store %struct.Memory* %loadMem_42a27c, %struct.Memory** %MEMORY
  %loadMem_42a27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6122 = getelementptr inbounds %struct.GPR, %struct.GPR* %6121, i32 0, i32 33
  %6123 = getelementptr inbounds %struct.Reg, %struct.Reg* %6122, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %6123 to i64*
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6125 = getelementptr inbounds %struct.GPR, %struct.GPR* %6124, i32 0, i32 7
  %6126 = getelementptr inbounds %struct.Reg, %struct.Reg* %6125, i32 0, i32 0
  %RDX.i571 = bitcast %union.anon* %6126 to i64*
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 15
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %6129 to i64*
  %6130 = load i64, i64* %RBP.i572
  %6131 = sub i64 %6130, 1640
  %6132 = load i64, i64* %PC.i570
  %6133 = add i64 %6132, 7
  store i64 %6133, i64* %PC.i570
  %6134 = inttoptr i64 %6131 to i32*
  %6135 = load i32, i32* %6134
  %6136 = sext i32 %6135 to i64
  store i64 %6136, i64* %RDX.i571, align 8
  store %struct.Memory* %loadMem_42a27f, %struct.Memory** %MEMORY
  %loadMem_42a286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 33
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %6139 to i64*
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 5
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %6142 to i64*
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 7
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %6145 to i64*
  %6146 = load i64, i64* %RCX.i568
  %6147 = load i64, i64* %RDX.i569
  %6148 = mul i64 %6147, 4
  %6149 = add i64 %6148, 8053168
  %6150 = load i64, i64* %PC.i567
  %6151 = add i64 %6150, 7
  store i64 %6151, i64* %PC.i567
  %6152 = trunc i64 %6146 to i32
  %6153 = inttoptr i64 %6149 to i32*
  %6154 = load i32, i32* %6153
  %6155 = add i32 %6154, %6152
  %6156 = zext i32 %6155 to i64
  store i64 %6156, i64* %RCX.i568, align 8
  %6157 = icmp ult i32 %6155, %6152
  %6158 = icmp ult i32 %6155, %6154
  %6159 = or i1 %6157, %6158
  %6160 = zext i1 %6159 to i8
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6160, i8* %6161, align 1
  %6162 = and i32 %6155, 255
  %6163 = call i32 @llvm.ctpop.i32(i32 %6162)
  %6164 = trunc i32 %6163 to i8
  %6165 = and i8 %6164, 1
  %6166 = xor i8 %6165, 1
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6166, i8* %6167, align 1
  %6168 = xor i32 %6154, %6152
  %6169 = xor i32 %6168, %6155
  %6170 = lshr i32 %6169, 4
  %6171 = trunc i32 %6170 to i8
  %6172 = and i8 %6171, 1
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6172, i8* %6173, align 1
  %6174 = icmp eq i32 %6155, 0
  %6175 = zext i1 %6174 to i8
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6175, i8* %6176, align 1
  %6177 = lshr i32 %6155, 31
  %6178 = trunc i32 %6177 to i8
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6178, i8* %6179, align 1
  %6180 = lshr i32 %6152, 31
  %6181 = lshr i32 %6154, 31
  %6182 = xor i32 %6177, %6180
  %6183 = xor i32 %6177, %6181
  %6184 = add i32 %6182, %6183
  %6185 = icmp eq i32 %6184, 2
  %6186 = zext i1 %6185 to i8
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6186, i8* %6187, align 1
  store %struct.Memory* %loadMem_42a286, %struct.Memory** %MEMORY
  %loadMem_42a28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 33
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %6190 to i64*
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6192 = getelementptr inbounds %struct.GPR, %struct.GPR* %6191, i32 0, i32 5
  %6193 = getelementptr inbounds %struct.Reg, %struct.Reg* %6192, i32 0, i32 0
  %ECX.i565 = bitcast %union.anon* %6193 to i32*
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 7
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %RDX.i566 = bitcast %union.anon* %6196 to i64*
  %6197 = load i32, i32* %ECX.i565
  %6198 = zext i32 %6197 to i64
  %6199 = load i64, i64* %PC.i564
  %6200 = add i64 %6199, 3
  store i64 %6200, i64* %PC.i564
  %6201 = shl i64 %6198, 32
  %6202 = ashr exact i64 %6201, 32
  store i64 %6202, i64* %RDX.i566, align 8
  store %struct.Memory* %loadMem_42a28d, %struct.Memory** %MEMORY
  %loadMem_42a290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 33
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %6205 to i64*
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6207 = getelementptr inbounds %struct.GPR, %struct.GPR* %6206, i32 0, i32 1
  %6208 = getelementptr inbounds %struct.Reg, %struct.Reg* %6207, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %6208 to i64*
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6210 = getelementptr inbounds %struct.GPR, %struct.GPR* %6209, i32 0, i32 7
  %6211 = getelementptr inbounds %struct.Reg, %struct.Reg* %6210, i32 0, i32 0
  %RDX.i562 = bitcast %union.anon* %6211 to i64*
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6212, i64 0, i64 2
  %YMM2.i563 = bitcast %union.VectorReg* %6213 to %"class.std::bitset"*
  %6214 = bitcast %"class.std::bitset"* %YMM2.i563 to i8*
  %6215 = load i64, i64* %RAX.i561
  %6216 = load i64, i64* %RDX.i562
  %6217 = mul i64 %6216, 4
  %6218 = add i64 %6215, 11600
  %6219 = add i64 %6218, %6217
  %6220 = load i64, i64* %PC.i560
  %6221 = add i64 %6220, 9
  store i64 %6221, i64* %PC.i560
  %6222 = inttoptr i64 %6219 to float*
  %6223 = load float, float* %6222
  %6224 = fpext float %6223 to double
  %6225 = bitcast i8* %6214 to double*
  store double %6224, double* %6225, align 1
  store %struct.Memory* %loadMem_42a290, %struct.Memory** %MEMORY
  %loadMem_42a299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6227 = getelementptr inbounds %struct.GPR, %struct.GPR* %6226, i32 0, i32 33
  %6228 = getelementptr inbounds %struct.Reg, %struct.Reg* %6227, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %6228 to i64*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6229, i64 0, i64 0
  %YMM0.i558 = bitcast %union.VectorReg* %6230 to %"class.std::bitset"*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6231, i64 0, i64 2
  %XMM2.i559 = bitcast %union.VectorReg* %6232 to %union.vec128_t*
  %6233 = bitcast %"class.std::bitset"* %YMM0.i558 to i8*
  %6234 = bitcast %"class.std::bitset"* %YMM0.i558 to i8*
  %6235 = bitcast %union.vec128_t* %XMM2.i559 to i8*
  %6236 = load i64, i64* %PC.i557
  %6237 = add i64 %6236, 4
  store i64 %6237, i64* %PC.i557
  %6238 = bitcast i8* %6234 to double*
  %6239 = load double, double* %6238, align 1
  %6240 = getelementptr inbounds i8, i8* %6234, i64 8
  %6241 = bitcast i8* %6240 to i64*
  %6242 = load i64, i64* %6241, align 1
  %6243 = bitcast i8* %6235 to double*
  %6244 = load double, double* %6243, align 1
  %6245 = fsub double %6239, %6244
  %6246 = bitcast i8* %6233 to double*
  store double %6245, double* %6246, align 1
  %6247 = getelementptr inbounds i8, i8* %6233, i64 8
  %6248 = bitcast i8* %6247 to i64*
  store i64 %6242, i64* %6248, align 1
  store %struct.Memory* %loadMem_42a299, %struct.Memory** %MEMORY
  %loadMem_42a29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 1
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %6254 to i64*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 15
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %6257 to i64*
  %6258 = load i64, i64* %RBP.i556
  %6259 = sub i64 %6258, 12
  %6260 = load i64, i64* %PC.i554
  %6261 = add i64 %6260, 4
  store i64 %6261, i64* %PC.i554
  %6262 = inttoptr i64 %6259 to i32*
  %6263 = load i32, i32* %6262
  %6264 = sext i32 %6263 to i64
  store i64 %6264, i64* %RAX.i555, align 8
  store %struct.Memory* %loadMem_42a29d, %struct.Memory** %MEMORY
  %loadMem_42a2a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6266 = getelementptr inbounds %struct.GPR, %struct.GPR* %6265, i32 0, i32 33
  %6267 = getelementptr inbounds %struct.Reg, %struct.Reg* %6266, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %6267 to i64*
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6269 = getelementptr inbounds %struct.GPR, %struct.GPR* %6268, i32 0, i32 1
  %6270 = getelementptr inbounds %struct.Reg, %struct.Reg* %6269, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %6270 to i64*
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 15
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6274, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %6275 to %"class.std::bitset"*
  %6276 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %6277 = load i64, i64* %RBP.i553
  %6278 = load i64, i64* %RAX.i552
  %6279 = mul i64 %6278, 4
  %6280 = add i64 %6277, -1632
  %6281 = add i64 %6280, %6279
  %6282 = load i64, i64* %PC.i551
  %6283 = add i64 %6282, 9
  store i64 %6283, i64* %PC.i551
  %6284 = inttoptr i64 %6281 to float*
  %6285 = load float, float* %6284
  %6286 = fpext float %6285 to double
  %6287 = bitcast i8* %6276 to double*
  store double %6286, double* %6287, align 1
  store %struct.Memory* %loadMem_42a2a1, %struct.Memory** %MEMORY
  %loadMem_42a2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6292 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6291, i64 0, i64 0
  %YMM0.i550 = bitcast %union.VectorReg* %6292 to %"class.std::bitset"*
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6294 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6293, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %6294 to %union.vec128_t*
  %6295 = bitcast %"class.std::bitset"* %YMM0.i550 to i8*
  %6296 = bitcast %"class.std::bitset"* %YMM0.i550 to i8*
  %6297 = bitcast %union.vec128_t* %XMM2.i to i8*
  %6298 = load i64, i64* %PC.i549
  %6299 = add i64 %6298, 4
  store i64 %6299, i64* %PC.i549
  %6300 = bitcast i8* %6296 to double*
  %6301 = load double, double* %6300, align 1
  %6302 = getelementptr inbounds i8, i8* %6296, i64 8
  %6303 = bitcast i8* %6302 to i64*
  %6304 = load i64, i64* %6303, align 1
  %6305 = bitcast i8* %6297 to double*
  %6306 = load double, double* %6305, align 1
  %6307 = fmul double %6301, %6306
  %6308 = bitcast i8* %6295 to double*
  store double %6307, double* %6308, align 1
  %6309 = getelementptr inbounds i8, i8* %6295, i64 8
  %6310 = bitcast i8* %6309 to i64*
  store i64 %6304, i64* %6310, align 1
  store %struct.Memory* %loadMem_42a2aa, %struct.Memory** %MEMORY
  %loadMem_42a2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 33
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %6313 to i64*
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6314, i64 0, i64 1
  %YMM1.i547 = bitcast %union.VectorReg* %6315 to %"class.std::bitset"*
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6316, i64 0, i64 0
  %XMM0.i548 = bitcast %union.VectorReg* %6317 to %union.vec128_t*
  %6318 = bitcast %"class.std::bitset"* %YMM1.i547 to i8*
  %6319 = bitcast %"class.std::bitset"* %YMM1.i547 to i8*
  %6320 = bitcast %union.vec128_t* %XMM0.i548 to i8*
  %6321 = load i64, i64* %PC.i546
  %6322 = add i64 %6321, 4
  store i64 %6322, i64* %PC.i546
  %6323 = bitcast i8* %6319 to double*
  %6324 = load double, double* %6323, align 1
  %6325 = getelementptr inbounds i8, i8* %6319, i64 8
  %6326 = bitcast i8* %6325 to i64*
  %6327 = load i64, i64* %6326, align 1
  %6328 = bitcast i8* %6320 to double*
  %6329 = load double, double* %6328, align 1
  %6330 = fadd double %6324, %6329
  %6331 = bitcast i8* %6318 to double*
  store double %6330, double* %6331, align 1
  %6332 = getelementptr inbounds i8, i8* %6318, i64 8
  %6333 = bitcast i8* %6332 to i64*
  store i64 %6327, i64* %6333, align 1
  store %struct.Memory* %loadMem_42a2ae, %struct.Memory** %MEMORY
  %loadMem_42a2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6335 = getelementptr inbounds %struct.GPR, %struct.GPR* %6334, i32 0, i32 33
  %6336 = getelementptr inbounds %struct.Reg, %struct.Reg* %6335, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %6336 to i64*
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6338 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6337, i64 0, i64 0
  %YMM0.i544 = bitcast %union.VectorReg* %6338 to %"class.std::bitset"*
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6340 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6339, i64 0, i64 1
  %XMM1.i545 = bitcast %union.VectorReg* %6340 to %union.vec128_t*
  %6341 = bitcast %"class.std::bitset"* %YMM0.i544 to i8*
  %6342 = bitcast %union.vec128_t* %XMM1.i545 to i8*
  %6343 = load i64, i64* %PC.i543
  %6344 = add i64 %6343, 4
  store i64 %6344, i64* %PC.i543
  %6345 = bitcast i8* %6341 to <2 x i32>*
  %6346 = load <2 x i32>, <2 x i32>* %6345, align 1
  %6347 = getelementptr inbounds i8, i8* %6341, i64 8
  %6348 = bitcast i8* %6347 to <2 x i32>*
  %6349 = load <2 x i32>, <2 x i32>* %6348, align 1
  %6350 = bitcast i8* %6342 to double*
  %6351 = load double, double* %6350, align 1
  %6352 = fptrunc double %6351 to float
  %6353 = bitcast i8* %6341 to float*
  store float %6352, float* %6353, align 1
  %6354 = extractelement <2 x i32> %6346, i32 1
  %6355 = getelementptr inbounds i8, i8* %6341, i64 4
  %6356 = bitcast i8* %6355 to i32*
  store i32 %6354, i32* %6356, align 1
  %6357 = extractelement <2 x i32> %6349, i32 0
  %6358 = bitcast i8* %6347 to i32*
  store i32 %6357, i32* %6358, align 1
  %6359 = extractelement <2 x i32> %6349, i32 1
  %6360 = getelementptr inbounds i8, i8* %6341, i64 12
  %6361 = bitcast i8* %6360 to i32*
  store i32 %6359, i32* %6361, align 1
  store %struct.Memory* %loadMem_42a2b2, %struct.Memory** %MEMORY
  %loadMem_42a2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 33
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %6364 to i64*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 15
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %6367 to i64*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6369 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6368, i64 0, i64 0
  %XMM0.i542 = bitcast %union.VectorReg* %6369 to %union.vec128_t*
  %6370 = load i64, i64* %RBP.i541
  %6371 = sub i64 %6370, 1648
  %6372 = bitcast %union.vec128_t* %XMM0.i542 to i8*
  %6373 = load i64, i64* %PC.i540
  %6374 = add i64 %6373, 8
  store i64 %6374, i64* %PC.i540
  %6375 = bitcast i8* %6372 to <2 x float>*
  %6376 = load <2 x float>, <2 x float>* %6375, align 1
  %6377 = extractelement <2 x float> %6376, i32 0
  %6378 = inttoptr i64 %6371 to float*
  store float %6377, float* %6378
  store %struct.Memory* %loadMem_42a2b6, %struct.Memory** %MEMORY
  %loadMem_42a2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 33
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %6381 to i64*
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 1
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %6384 to i64*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 15
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %6387 to i64*
  %6388 = load i64, i64* %RBP.i539
  %6389 = sub i64 %6388, 8
  %6390 = load i64, i64* %PC.i537
  %6391 = add i64 %6390, 4
  store i64 %6391, i64* %PC.i537
  %6392 = inttoptr i64 %6389 to i64*
  %6393 = load i64, i64* %6392
  store i64 %6393, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_42a2be, %struct.Memory** %MEMORY
  %loadMem_42a2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6395 = getelementptr inbounds %struct.GPR, %struct.GPR* %6394, i32 0, i32 33
  %6396 = getelementptr inbounds %struct.Reg, %struct.Reg* %6395, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %6396 to i64*
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6398 = getelementptr inbounds %struct.GPR, %struct.GPR* %6397, i32 0, i32 7
  %6399 = getelementptr inbounds %struct.Reg, %struct.Reg* %6398, i32 0, i32 0
  %RDX.i535 = bitcast %union.anon* %6399 to i64*
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6401 = getelementptr inbounds %struct.GPR, %struct.GPR* %6400, i32 0, i32 15
  %6402 = getelementptr inbounds %struct.Reg, %struct.Reg* %6401, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %6402 to i64*
  %6403 = load i64, i64* %RBP.i536
  %6404 = sub i64 %6403, 12
  %6405 = load i64, i64* %PC.i534
  %6406 = add i64 %6405, 4
  store i64 %6406, i64* %PC.i534
  %6407 = inttoptr i64 %6404 to i32*
  %6408 = load i32, i32* %6407
  %6409 = sext i32 %6408 to i64
  store i64 %6409, i64* %RDX.i535, align 8
  store %struct.Memory* %loadMem_42a2c2, %struct.Memory** %MEMORY
  %loadMem_42a2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 33
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %6412 to i64*
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6414 = getelementptr inbounds %struct.GPR, %struct.GPR* %6413, i32 0, i32 1
  %6415 = getelementptr inbounds %struct.Reg, %struct.Reg* %6414, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %6415 to i64*
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6417 = getelementptr inbounds %struct.GPR, %struct.GPR* %6416, i32 0, i32 7
  %6418 = getelementptr inbounds %struct.Reg, %struct.Reg* %6417, i32 0, i32 0
  %RDX.i532 = bitcast %union.anon* %6418 to i64*
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6419, i64 0, i64 0
  %YMM0.i533 = bitcast %union.VectorReg* %6420 to %"class.std::bitset"*
  %6421 = bitcast %"class.std::bitset"* %YMM0.i533 to i8*
  %6422 = load i64, i64* %RAX.i531
  %6423 = load i64, i64* %RDX.i532
  %6424 = mul i64 %6423, 4
  %6425 = add i64 %6422, 31016
  %6426 = add i64 %6425, %6424
  %6427 = load i64, i64* %PC.i530
  %6428 = add i64 %6427, 9
  store i64 %6428, i64* %PC.i530
  %6429 = inttoptr i64 %6426 to float*
  %6430 = load float, float* %6429
  %6431 = bitcast i8* %6421 to float*
  store float %6430, float* %6431, align 1
  %6432 = getelementptr inbounds i8, i8* %6421, i64 4
  %6433 = bitcast i8* %6432 to float*
  store float 0.000000e+00, float* %6433, align 1
  %6434 = getelementptr inbounds i8, i8* %6421, i64 8
  %6435 = bitcast i8* %6434 to float*
  store float 0.000000e+00, float* %6435, align 1
  %6436 = getelementptr inbounds i8, i8* %6421, i64 12
  %6437 = bitcast i8* %6436 to float*
  store float 0.000000e+00, float* %6437, align 1
  store %struct.Memory* %loadMem_42a2c6, %struct.Memory** %MEMORY
  %loadMem_42a2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 15
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %6443 to i64*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6445 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6444, i64 0, i64 1
  %YMM1.i529 = bitcast %union.VectorReg* %6445 to %"class.std::bitset"*
  %6446 = bitcast %"class.std::bitset"* %YMM1.i529 to i8*
  %6447 = load i64, i64* %RBP.i528
  %6448 = sub i64 %6447, 1648
  %6449 = load i64, i64* %PC.i527
  %6450 = add i64 %6449, 8
  store i64 %6450, i64* %PC.i527
  %6451 = inttoptr i64 %6448 to float*
  %6452 = load float, float* %6451
  %6453 = bitcast i8* %6446 to float*
  store float %6452, float* %6453, align 1
  %6454 = getelementptr inbounds i8, i8* %6446, i64 4
  %6455 = bitcast i8* %6454 to float*
  store float 0.000000e+00, float* %6455, align 1
  %6456 = getelementptr inbounds i8, i8* %6446, i64 8
  %6457 = bitcast i8* %6456 to float*
  store float 0.000000e+00, float* %6457, align 1
  %6458 = getelementptr inbounds i8, i8* %6446, i64 12
  %6459 = bitcast i8* %6458 to float*
  store float 0.000000e+00, float* %6459, align 1
  store %struct.Memory* %loadMem_42a2cf, %struct.Memory** %MEMORY
  %loadMem_42a2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6461 = getelementptr inbounds %struct.GPR, %struct.GPR* %6460, i32 0, i32 33
  %6462 = getelementptr inbounds %struct.Reg, %struct.Reg* %6461, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %6462 to i64*
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6464 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6463, i64 0, i64 0
  %XMM0.i521 = bitcast %union.VectorReg* %6464 to %union.vec128_t*
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6466 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6465, i64 0, i64 1
  %XMM1.i522 = bitcast %union.VectorReg* %6466 to %union.vec128_t*
  %6467 = bitcast %union.vec128_t* %XMM1.i522 to i8*
  %6468 = bitcast %union.vec128_t* %XMM0.i521 to i8*
  %6469 = load i64, i64* %PC.i520
  %6470 = add i64 %6469, 3
  store i64 %6470, i64* %PC.i520
  %6471 = bitcast i8* %6467 to <2 x float>*
  %6472 = load <2 x float>, <2 x float>* %6471, align 1
  %6473 = extractelement <2 x float> %6472, i32 0
  %6474 = bitcast i8* %6468 to <2 x float>*
  %6475 = load <2 x float>, <2 x float>* %6474, align 1
  %6476 = extractelement <2 x float> %6475, i32 0
  %6477 = fcmp uno float %6473, %6476
  br i1 %6477, label %6478, label %6490

; <label>:6478:                                   ; preds = %block_42a22e
  %6479 = fadd float %6473, %6476
  %6480 = bitcast float %6479 to i32
  %6481 = and i32 %6480, 2143289344
  %6482 = icmp eq i32 %6481, 2139095040
  %6483 = and i32 %6480, 4194303
  %6484 = icmp ne i32 %6483, 0
  %6485 = and i1 %6482, %6484
  br i1 %6485, label %6486, label %6496

; <label>:6486:                                   ; preds = %6478
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6488 = load i64, i64* %6487, align 8
  %6489 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6488, %struct.Memory* %loadMem_42a2d7)
  br label %routine_ucomiss__xmm0___xmm1.exit523

; <label>:6490:                                   ; preds = %block_42a22e
  %6491 = fcmp ogt float %6473, %6476
  br i1 %6491, label %6496, label %6492

; <label>:6492:                                   ; preds = %6490
  %6493 = fcmp olt float %6473, %6476
  br i1 %6493, label %6496, label %6494

; <label>:6494:                                   ; preds = %6492
  %6495 = fcmp oeq float %6473, %6476
  br i1 %6495, label %6496, label %6503

; <label>:6496:                                   ; preds = %6494, %6492, %6490, %6478
  %6497 = phi i8 [ 0, %6490 ], [ 0, %6492 ], [ 1, %6494 ], [ 1, %6478 ]
  %6498 = phi i8 [ 0, %6490 ], [ 0, %6492 ], [ 0, %6494 ], [ 1, %6478 ]
  %6499 = phi i8 [ 0, %6490 ], [ 1, %6492 ], [ 0, %6494 ], [ 1, %6478 ]
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6497, i8* %6500, align 1
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6498, i8* %6501, align 1
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6499, i8* %6502, align 1
  br label %6503

; <label>:6503:                                   ; preds = %6496, %6494
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6504, align 1
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6505, align 1
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6506, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit523

routine_ucomiss__xmm0___xmm1.exit523:             ; preds = %6486, %6503
  %6507 = phi %struct.Memory* [ %6489, %6486 ], [ %loadMem_42a2d7, %6503 ]
  store %struct.Memory* %6507, %struct.Memory** %MEMORY
  %loadMem_42a2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 33
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %PC.i519
  %6512 = add i64 %6511, 36
  %6513 = load i64, i64* %PC.i519
  %6514 = add i64 %6513, 6
  %6515 = load i64, i64* %PC.i519
  %6516 = add i64 %6515, 6
  store i64 %6516, i64* %PC.i519
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6518 = load i8, i8* %6517, align 1
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6520 = load i8, i8* %6519, align 1
  %6521 = or i8 %6520, %6518
  %6522 = icmp ne i8 %6521, 0
  %6523 = zext i1 %6522 to i8
  store i8 %6523, i8* %BRANCH_TAKEN, align 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6525 = select i1 %6522, i64 %6512, i64 %6514
  store i64 %6525, i64* %6524, align 8
  store %struct.Memory* %loadMem_42a2da, %struct.Memory** %MEMORY
  %loadBr_42a2da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a2da = icmp eq i8 %loadBr_42a2da, 1
  br i1 %cmpBr_42a2da, label %block_.L_42a2fe, label %block_42a2e0

block_42a2e0:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit523
  %loadMem_42a2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 33
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %6528 to i64*
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6530 = getelementptr inbounds %struct.GPR, %struct.GPR* %6529, i32 0, i32 1
  %6531 = getelementptr inbounds %struct.Reg, %struct.Reg* %6530, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %6531 to i64*
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6533 = getelementptr inbounds %struct.GPR, %struct.GPR* %6532, i32 0, i32 15
  %6534 = getelementptr inbounds %struct.Reg, %struct.Reg* %6533, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %6534 to i64*
  %6535 = load i64, i64* %RBP.i518
  %6536 = sub i64 %6535, 8
  %6537 = load i64, i64* %PC.i516
  %6538 = add i64 %6537, 4
  store i64 %6538, i64* %PC.i516
  %6539 = inttoptr i64 %6536 to i64*
  %6540 = load i64, i64* %6539
  store i64 %6540, i64* %RAX.i517, align 8
  store %struct.Memory* %loadMem_42a2e0, %struct.Memory** %MEMORY
  %loadMem_42a2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 33
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %6543 to i64*
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 5
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %RCX.i514 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 15
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %6549 to i64*
  %6550 = load i64, i64* %RBP.i515
  %6551 = sub i64 %6550, 12
  %6552 = load i64, i64* %PC.i513
  %6553 = add i64 %6552, 4
  store i64 %6553, i64* %PC.i513
  %6554 = inttoptr i64 %6551 to i32*
  %6555 = load i32, i32* %6554
  %6556 = sext i32 %6555 to i64
  store i64 %6556, i64* %RCX.i514, align 8
  store %struct.Memory* %loadMem_42a2e4, %struct.Memory** %MEMORY
  %loadMem_42a2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6558 = getelementptr inbounds %struct.GPR, %struct.GPR* %6557, i32 0, i32 33
  %6559 = getelementptr inbounds %struct.Reg, %struct.Reg* %6558, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %6559 to i64*
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 1
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 5
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %6565 to i64*
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6566, i64 0, i64 0
  %YMM0.i512 = bitcast %union.VectorReg* %6567 to %"class.std::bitset"*
  %6568 = bitcast %"class.std::bitset"* %YMM0.i512 to i8*
  %6569 = load i64, i64* %RAX.i510
  %6570 = load i64, i64* %RCX.i511
  %6571 = mul i64 %6570, 4
  %6572 = add i64 %6569, 31016
  %6573 = add i64 %6572, %6571
  %6574 = load i64, i64* %PC.i509
  %6575 = add i64 %6574, 9
  store i64 %6575, i64* %PC.i509
  %6576 = inttoptr i64 %6573 to float*
  %6577 = load float, float* %6576
  %6578 = bitcast i8* %6568 to float*
  store float %6577, float* %6578, align 1
  %6579 = getelementptr inbounds i8, i8* %6568, i64 4
  %6580 = bitcast i8* %6579 to float*
  store float 0.000000e+00, float* %6580, align 1
  %6581 = getelementptr inbounds i8, i8* %6568, i64 8
  %6582 = bitcast i8* %6581 to float*
  store float 0.000000e+00, float* %6582, align 1
  %6583 = getelementptr inbounds i8, i8* %6568, i64 12
  %6584 = bitcast i8* %6583 to float*
  store float 0.000000e+00, float* %6584, align 1
  store %struct.Memory* %loadMem_42a2e8, %struct.Memory** %MEMORY
  %loadMem_42a2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6586 = getelementptr inbounds %struct.GPR, %struct.GPR* %6585, i32 0, i32 33
  %6587 = getelementptr inbounds %struct.Reg, %struct.Reg* %6586, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6587 to i64*
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 15
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6592 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6591, i64 0, i64 0
  %XMM0.i508 = bitcast %union.VectorReg* %6592 to %union.vec128_t*
  %6593 = load i64, i64* %RBP.i507
  %6594 = sub i64 %6593, 1712
  %6595 = bitcast %union.vec128_t* %XMM0.i508 to i8*
  %6596 = load i64, i64* %PC.i506
  %6597 = add i64 %6596, 8
  store i64 %6597, i64* %PC.i506
  %6598 = bitcast i8* %6595 to <2 x float>*
  %6599 = load <2 x float>, <2 x float>* %6598, align 1
  %6600 = extractelement <2 x float> %6599, i32 0
  %6601 = inttoptr i64 %6594 to float*
  store float %6600, float* %6601
  store %struct.Memory* %loadMem_42a2f1, %struct.Memory** %MEMORY
  %loadMem_42a2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6603 = getelementptr inbounds %struct.GPR, %struct.GPR* %6602, i32 0, i32 33
  %6604 = getelementptr inbounds %struct.Reg, %struct.Reg* %6603, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %6604 to i64*
  %6605 = load i64, i64* %PC.i505
  %6606 = add i64 %6605, 21
  %6607 = load i64, i64* %PC.i505
  %6608 = add i64 %6607, 5
  store i64 %6608, i64* %PC.i505
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6606, i64* %6609, align 8
  store %struct.Memory* %loadMem_42a2f9, %struct.Memory** %MEMORY
  br label %block_.L_42a30e

block_.L_42a2fe:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit523
  %loadMem_42a2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %6612 to i64*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 15
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %6615 to i64*
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6616, i64 0, i64 0
  %YMM0.i504 = bitcast %union.VectorReg* %6617 to %"class.std::bitset"*
  %6618 = bitcast %"class.std::bitset"* %YMM0.i504 to i8*
  %6619 = load i64, i64* %RBP.i503
  %6620 = sub i64 %6619, 1648
  %6621 = load i64, i64* %PC.i502
  %6622 = add i64 %6621, 8
  store i64 %6622, i64* %PC.i502
  %6623 = inttoptr i64 %6620 to float*
  %6624 = load float, float* %6623
  %6625 = bitcast i8* %6618 to float*
  store float %6624, float* %6625, align 1
  %6626 = getelementptr inbounds i8, i8* %6618, i64 4
  %6627 = bitcast i8* %6626 to float*
  store float 0.000000e+00, float* %6627, align 1
  %6628 = getelementptr inbounds i8, i8* %6618, i64 8
  %6629 = bitcast i8* %6628 to float*
  store float 0.000000e+00, float* %6629, align 1
  %6630 = getelementptr inbounds i8, i8* %6618, i64 12
  %6631 = bitcast i8* %6630 to float*
  store float 0.000000e+00, float* %6631, align 1
  store %struct.Memory* %loadMem_42a2fe, %struct.Memory** %MEMORY
  %loadMem_42a306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 15
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %6637 to i64*
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6639 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6638, i64 0, i64 0
  %XMM0.i501 = bitcast %union.VectorReg* %6639 to %union.vec128_t*
  %6640 = load i64, i64* %RBP.i500
  %6641 = sub i64 %6640, 1712
  %6642 = bitcast %union.vec128_t* %XMM0.i501 to i8*
  %6643 = load i64, i64* %PC.i499
  %6644 = add i64 %6643, 8
  store i64 %6644, i64* %PC.i499
  %6645 = bitcast i8* %6642 to <2 x float>*
  %6646 = load <2 x float>, <2 x float>* %6645, align 1
  %6647 = extractelement <2 x float> %6646, i32 0
  %6648 = inttoptr i64 %6641 to float*
  store float %6647, float* %6648
  store %struct.Memory* %loadMem_42a306, %struct.Memory** %MEMORY
  br label %block_.L_42a30e

block_.L_42a30e:                                  ; preds = %block_.L_42a2fe, %block_42a2e0
  %loadMem_42a30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 15
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %6654 to i64*
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6655, i64 0, i64 0
  %YMM0.i498 = bitcast %union.VectorReg* %6656 to %"class.std::bitset"*
  %6657 = bitcast %"class.std::bitset"* %YMM0.i498 to i8*
  %6658 = load i64, i64* %RBP.i497
  %6659 = sub i64 %6658, 1712
  %6660 = load i64, i64* %PC.i496
  %6661 = add i64 %6660, 8
  store i64 %6661, i64* %PC.i496
  %6662 = inttoptr i64 %6659 to float*
  %6663 = load float, float* %6662
  %6664 = bitcast i8* %6657 to float*
  store float %6663, float* %6664, align 1
  %6665 = getelementptr inbounds i8, i8* %6657, i64 4
  %6666 = bitcast i8* %6665 to float*
  store float 0.000000e+00, float* %6666, align 1
  %6667 = getelementptr inbounds i8, i8* %6657, i64 8
  %6668 = bitcast i8* %6667 to float*
  store float 0.000000e+00, float* %6668, align 1
  %6669 = getelementptr inbounds i8, i8* %6657, i64 12
  %6670 = bitcast i8* %6669 to float*
  store float 0.000000e+00, float* %6670, align 1
  store %struct.Memory* %loadMem_42a30e, %struct.Memory** %MEMORY
  %loadMem_42a316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6672 = getelementptr inbounds %struct.GPR, %struct.GPR* %6671, i32 0, i32 33
  %6673 = getelementptr inbounds %struct.Reg, %struct.Reg* %6672, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %6673 to i64*
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6675 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6674, i64 0, i64 1
  %YMM1.i494 = bitcast %union.VectorReg* %6675 to %"class.std::bitset"*
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6677 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6676, i64 0, i64 1
  %XMM1.i495 = bitcast %union.VectorReg* %6677 to %union.vec128_t*
  %6678 = bitcast %"class.std::bitset"* %YMM1.i494 to i8*
  %6679 = bitcast %"class.std::bitset"* %YMM1.i494 to i8*
  %6680 = bitcast %union.vec128_t* %XMM1.i495 to i8*
  %6681 = load i64, i64* %PC.i493
  %6682 = add i64 %6681, 3
  store i64 %6682, i64* %PC.i493
  %6683 = bitcast i8* %6679 to i64*
  %6684 = load i64, i64* %6683, align 1
  %6685 = getelementptr inbounds i8, i8* %6679, i64 8
  %6686 = bitcast i8* %6685 to i64*
  %6687 = load i64, i64* %6686, align 1
  %6688 = bitcast i8* %6680 to i64*
  %6689 = load i64, i64* %6688, align 1
  %6690 = getelementptr inbounds i8, i8* %6680, i64 8
  %6691 = bitcast i8* %6690 to i64*
  %6692 = load i64, i64* %6691, align 1
  %6693 = xor i64 %6689, %6684
  %6694 = xor i64 %6692, %6687
  %6695 = trunc i64 %6693 to i32
  %6696 = lshr i64 %6693, 32
  %6697 = trunc i64 %6696 to i32
  %6698 = bitcast i8* %6678 to i32*
  store i32 %6695, i32* %6698, align 1
  %6699 = getelementptr inbounds i8, i8* %6678, i64 4
  %6700 = bitcast i8* %6699 to i32*
  store i32 %6697, i32* %6700, align 1
  %6701 = trunc i64 %6694 to i32
  %6702 = getelementptr inbounds i8, i8* %6678, i64 8
  %6703 = bitcast i8* %6702 to i32*
  store i32 %6701, i32* %6703, align 1
  %6704 = lshr i64 %6694, 32
  %6705 = trunc i64 %6704 to i32
  %6706 = getelementptr inbounds i8, i8* %6678, i64 12
  %6707 = bitcast i8* %6706 to i32*
  store i32 %6705, i32* %6707, align 1
  store %struct.Memory* %loadMem_42a316, %struct.Memory** %MEMORY
  %loadMem_42a319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 33
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6710 to i64*
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6711, i64 0, i64 0
  %XMM0.i487 = bitcast %union.VectorReg* %6712 to %union.vec128_t*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6714 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6713, i64 0, i64 1
  %XMM1.i488 = bitcast %union.VectorReg* %6714 to %union.vec128_t*
  %6715 = bitcast %union.vec128_t* %XMM0.i487 to i8*
  %6716 = bitcast %union.vec128_t* %XMM1.i488 to i8*
  %6717 = load i64, i64* %PC.i486
  %6718 = add i64 %6717, 3
  store i64 %6718, i64* %PC.i486
  %6719 = bitcast i8* %6715 to <2 x float>*
  %6720 = load <2 x float>, <2 x float>* %6719, align 1
  %6721 = extractelement <2 x float> %6720, i32 0
  %6722 = bitcast i8* %6716 to <2 x float>*
  %6723 = load <2 x float>, <2 x float>* %6722, align 1
  %6724 = extractelement <2 x float> %6723, i32 0
  %6725 = fcmp uno float %6721, %6724
  br i1 %6725, label %6726, label %6738

; <label>:6726:                                   ; preds = %block_.L_42a30e
  %6727 = fadd float %6721, %6724
  %6728 = bitcast float %6727 to i32
  %6729 = and i32 %6728, 2143289344
  %6730 = icmp eq i32 %6729, 2139095040
  %6731 = and i32 %6728, 4194303
  %6732 = icmp ne i32 %6731, 0
  %6733 = and i1 %6730, %6732
  br i1 %6733, label %6734, label %6744

; <label>:6734:                                   ; preds = %6726
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6736 = load i64, i64* %6735, align 8
  %6737 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6736, %struct.Memory* %loadMem_42a319)
  br label %routine_ucomiss__xmm1___xmm0.exit489

; <label>:6738:                                   ; preds = %block_.L_42a30e
  %6739 = fcmp ogt float %6721, %6724
  br i1 %6739, label %6744, label %6740

; <label>:6740:                                   ; preds = %6738
  %6741 = fcmp olt float %6721, %6724
  br i1 %6741, label %6744, label %6742

; <label>:6742:                                   ; preds = %6740
  %6743 = fcmp oeq float %6721, %6724
  br i1 %6743, label %6744, label %6751

; <label>:6744:                                   ; preds = %6742, %6740, %6738, %6726
  %6745 = phi i8 [ 0, %6738 ], [ 0, %6740 ], [ 1, %6742 ], [ 1, %6726 ]
  %6746 = phi i8 [ 0, %6738 ], [ 0, %6740 ], [ 0, %6742 ], [ 1, %6726 ]
  %6747 = phi i8 [ 0, %6738 ], [ 1, %6740 ], [ 0, %6742 ], [ 1, %6726 ]
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6745, i8* %6748, align 1
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6746, i8* %6749, align 1
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6747, i8* %6750, align 1
  br label %6751

; <label>:6751:                                   ; preds = %6744, %6742
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6752, align 1
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6753, align 1
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6754, align 1
  br label %routine_ucomiss__xmm1___xmm0.exit489

routine_ucomiss__xmm1___xmm0.exit489:             ; preds = %6734, %6751
  %6755 = phi %struct.Memory* [ %6737, %6734 ], [ %loadMem_42a319, %6751 ]
  store %struct.Memory* %6755, %struct.Memory** %MEMORY
  %loadMem_42a31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 33
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6758 to i64*
  %6759 = load i64, i64* %PC.i485
  %6760 = add i64 %6759, 107
  %6761 = load i64, i64* %PC.i485
  %6762 = add i64 %6761, 6
  %6763 = load i64, i64* %PC.i485
  %6764 = add i64 %6763, 6
  store i64 %6764, i64* %PC.i485
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6766 = load i8, i8* %6765, align 1
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6768 = load i8, i8* %6767, align 1
  %6769 = or i8 %6768, %6766
  %6770 = icmp ne i8 %6769, 0
  %6771 = zext i1 %6770 to i8
  store i8 %6771, i8* %BRANCH_TAKEN, align 1
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6773 = select i1 %6770, i64 %6760, i64 %6762
  store i64 %6773, i64* %6772, align 8
  store %struct.Memory* %loadMem_42a31c, %struct.Memory** %MEMORY
  %loadBr_42a31c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a31c = icmp eq i8 %loadBr_42a31c, 1
  br i1 %cmpBr_42a31c, label %block_.L_42a387, label %block_42a322

block_42a322:                                     ; preds = %routine_ucomiss__xmm1___xmm0.exit489
  %loadMem_42a322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6775 = getelementptr inbounds %struct.GPR, %struct.GPR* %6774, i32 0, i32 33
  %6776 = getelementptr inbounds %struct.Reg, %struct.Reg* %6775, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %6776 to i64*
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6778 = getelementptr inbounds %struct.GPR, %struct.GPR* %6777, i32 0, i32 1
  %6779 = getelementptr inbounds %struct.Reg, %struct.Reg* %6778, i32 0, i32 0
  %RAX.i483 = bitcast %union.anon* %6779 to i64*
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 15
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %6782 to i64*
  %6783 = load i64, i64* %RBP.i484
  %6784 = sub i64 %6783, 8
  %6785 = load i64, i64* %PC.i482
  %6786 = add i64 %6785, 4
  store i64 %6786, i64* %PC.i482
  %6787 = inttoptr i64 %6784 to i64*
  %6788 = load i64, i64* %6787
  store i64 %6788, i64* %RAX.i483, align 8
  store %struct.Memory* %loadMem_42a322, %struct.Memory** %MEMORY
  %loadMem_42a326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 33
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %6791 to i64*
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6793 = getelementptr inbounds %struct.GPR, %struct.GPR* %6792, i32 0, i32 5
  %6794 = getelementptr inbounds %struct.Reg, %struct.Reg* %6793, i32 0, i32 0
  %RCX.i480 = bitcast %union.anon* %6794 to i64*
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6796 = getelementptr inbounds %struct.GPR, %struct.GPR* %6795, i32 0, i32 15
  %6797 = getelementptr inbounds %struct.Reg, %struct.Reg* %6796, i32 0, i32 0
  %RBP.i481 = bitcast %union.anon* %6797 to i64*
  %6798 = load i64, i64* %RBP.i481
  %6799 = sub i64 %6798, 12
  %6800 = load i64, i64* %PC.i479
  %6801 = add i64 %6800, 4
  store i64 %6801, i64* %PC.i479
  %6802 = inttoptr i64 %6799 to i32*
  %6803 = load i32, i32* %6802
  %6804 = sext i32 %6803 to i64
  store i64 %6804, i64* %RCX.i480, align 8
  store %struct.Memory* %loadMem_42a326, %struct.Memory** %MEMORY
  %loadMem_42a32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 1
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %6810 to i64*
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 5
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %RCX.i477 = bitcast %union.anon* %6813 to i64*
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6815 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6814, i64 0, i64 0
  %YMM0.i478 = bitcast %union.VectorReg* %6815 to %"class.std::bitset"*
  %6816 = bitcast %"class.std::bitset"* %YMM0.i478 to i8*
  %6817 = load i64, i64* %RAX.i476
  %6818 = load i64, i64* %RCX.i477
  %6819 = mul i64 %6818, 4
  %6820 = add i64 %6817, 31016
  %6821 = add i64 %6820, %6819
  %6822 = load i64, i64* %PC.i475
  %6823 = add i64 %6822, 9
  store i64 %6823, i64* %PC.i475
  %6824 = inttoptr i64 %6821 to float*
  %6825 = load float, float* %6824
  %6826 = bitcast i8* %6816 to float*
  store float %6825, float* %6826, align 1
  %6827 = getelementptr inbounds i8, i8* %6816, i64 4
  %6828 = bitcast i8* %6827 to float*
  store float 0.000000e+00, float* %6828, align 1
  %6829 = getelementptr inbounds i8, i8* %6816, i64 8
  %6830 = bitcast i8* %6829 to float*
  store float 0.000000e+00, float* %6830, align 1
  %6831 = getelementptr inbounds i8, i8* %6816, i64 12
  %6832 = bitcast i8* %6831 to float*
  store float 0.000000e+00, float* %6832, align 1
  store %struct.Memory* %loadMem_42a32a, %struct.Memory** %MEMORY
  %loadMem_42a333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6834 = getelementptr inbounds %struct.GPR, %struct.GPR* %6833, i32 0, i32 33
  %6835 = getelementptr inbounds %struct.Reg, %struct.Reg* %6834, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6835 to i64*
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6837 = getelementptr inbounds %struct.GPR, %struct.GPR* %6836, i32 0, i32 15
  %6838 = getelementptr inbounds %struct.Reg, %struct.Reg* %6837, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %6838 to i64*
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6840 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6839, i64 0, i64 1
  %YMM1.i474 = bitcast %union.VectorReg* %6840 to %"class.std::bitset"*
  %6841 = bitcast %"class.std::bitset"* %YMM1.i474 to i8*
  %6842 = load i64, i64* %RBP.i473
  %6843 = sub i64 %6842, 1648
  %6844 = load i64, i64* %PC.i472
  %6845 = add i64 %6844, 8
  store i64 %6845, i64* %PC.i472
  %6846 = inttoptr i64 %6843 to float*
  %6847 = load float, float* %6846
  %6848 = bitcast i8* %6841 to float*
  store float %6847, float* %6848, align 1
  %6849 = getelementptr inbounds i8, i8* %6841, i64 4
  %6850 = bitcast i8* %6849 to float*
  store float 0.000000e+00, float* %6850, align 1
  %6851 = getelementptr inbounds i8, i8* %6841, i64 8
  %6852 = bitcast i8* %6851 to float*
  store float 0.000000e+00, float* %6852, align 1
  %6853 = getelementptr inbounds i8, i8* %6841, i64 12
  %6854 = bitcast i8* %6853 to float*
  store float 0.000000e+00, float* %6854, align 1
  store %struct.Memory* %loadMem_42a333, %struct.Memory** %MEMORY
  %loadMem_42a33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6856 = getelementptr inbounds %struct.GPR, %struct.GPR* %6855, i32 0, i32 33
  %6857 = getelementptr inbounds %struct.Reg, %struct.Reg* %6856, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %6857 to i64*
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6859 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6858, i64 0, i64 0
  %XMM0.i468 = bitcast %union.VectorReg* %6859 to %union.vec128_t*
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6861 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6860, i64 0, i64 1
  %XMM1.i469 = bitcast %union.VectorReg* %6861 to %union.vec128_t*
  %6862 = bitcast %union.vec128_t* %XMM1.i469 to i8*
  %6863 = bitcast %union.vec128_t* %XMM0.i468 to i8*
  %6864 = load i64, i64* %PC.i467
  %6865 = add i64 %6864, 3
  store i64 %6865, i64* %PC.i467
  %6866 = bitcast i8* %6862 to <2 x float>*
  %6867 = load <2 x float>, <2 x float>* %6866, align 1
  %6868 = extractelement <2 x float> %6867, i32 0
  %6869 = bitcast i8* %6863 to <2 x float>*
  %6870 = load <2 x float>, <2 x float>* %6869, align 1
  %6871 = extractelement <2 x float> %6870, i32 0
  %6872 = fcmp uno float %6868, %6871
  br i1 %6872, label %6873, label %6885

; <label>:6873:                                   ; preds = %block_42a322
  %6874 = fadd float %6868, %6871
  %6875 = bitcast float %6874 to i32
  %6876 = and i32 %6875, 2143289344
  %6877 = icmp eq i32 %6876, 2139095040
  %6878 = and i32 %6875, 4194303
  %6879 = icmp ne i32 %6878, 0
  %6880 = and i1 %6877, %6879
  br i1 %6880, label %6881, label %6891

; <label>:6881:                                   ; preds = %6873
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6883 = load i64, i64* %6882, align 8
  %6884 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6883, %struct.Memory* %loadMem_42a33b)
  br label %routine_ucomiss__xmm0___xmm1.exit470

; <label>:6885:                                   ; preds = %block_42a322
  %6886 = fcmp ogt float %6868, %6871
  br i1 %6886, label %6891, label %6887

; <label>:6887:                                   ; preds = %6885
  %6888 = fcmp olt float %6868, %6871
  br i1 %6888, label %6891, label %6889

; <label>:6889:                                   ; preds = %6887
  %6890 = fcmp oeq float %6868, %6871
  br i1 %6890, label %6891, label %6898

; <label>:6891:                                   ; preds = %6889, %6887, %6885, %6873
  %6892 = phi i8 [ 0, %6885 ], [ 0, %6887 ], [ 1, %6889 ], [ 1, %6873 ]
  %6893 = phi i8 [ 0, %6885 ], [ 0, %6887 ], [ 0, %6889 ], [ 1, %6873 ]
  %6894 = phi i8 [ 0, %6885 ], [ 1, %6887 ], [ 0, %6889 ], [ 1, %6873 ]
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6892, i8* %6895, align 1
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6893, i8* %6896, align 1
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6894, i8* %6897, align 1
  br label %6898

; <label>:6898:                                   ; preds = %6891, %6889
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6899, align 1
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6900, align 1
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6901, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit470

routine_ucomiss__xmm0___xmm1.exit470:             ; preds = %6881, %6898
  %6902 = phi %struct.Memory* [ %6884, %6881 ], [ %loadMem_42a33b, %6898 ]
  store %struct.Memory* %6902, %struct.Memory** %MEMORY
  %loadMem_42a33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 33
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %6905 to i64*
  %6906 = load i64, i64* %PC.i466
  %6907 = add i64 %6906, 36
  %6908 = load i64, i64* %PC.i466
  %6909 = add i64 %6908, 6
  %6910 = load i64, i64* %PC.i466
  %6911 = add i64 %6910, 6
  store i64 %6911, i64* %PC.i466
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6913 = load i8, i8* %6912, align 1
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6915 = load i8, i8* %6914, align 1
  %6916 = or i8 %6915, %6913
  %6917 = icmp ne i8 %6916, 0
  %6918 = zext i1 %6917 to i8
  store i8 %6918, i8* %BRANCH_TAKEN, align 1
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6920 = select i1 %6917, i64 %6907, i64 %6909
  store i64 %6920, i64* %6919, align 8
  store %struct.Memory* %loadMem_42a33e, %struct.Memory** %MEMORY
  %loadBr_42a33e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a33e = icmp eq i8 %loadBr_42a33e, 1
  br i1 %cmpBr_42a33e, label %block_.L_42a362, label %block_42a344

block_42a344:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit470
  %loadMem_42a344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6922 = getelementptr inbounds %struct.GPR, %struct.GPR* %6921, i32 0, i32 33
  %6923 = getelementptr inbounds %struct.Reg, %struct.Reg* %6922, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6923 to i64*
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6925 = getelementptr inbounds %struct.GPR, %struct.GPR* %6924, i32 0, i32 1
  %6926 = getelementptr inbounds %struct.Reg, %struct.Reg* %6925, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %6926 to i64*
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6928 = getelementptr inbounds %struct.GPR, %struct.GPR* %6927, i32 0, i32 15
  %6929 = getelementptr inbounds %struct.Reg, %struct.Reg* %6928, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %6929 to i64*
  %6930 = load i64, i64* %RBP.i465
  %6931 = sub i64 %6930, 8
  %6932 = load i64, i64* %PC.i463
  %6933 = add i64 %6932, 4
  store i64 %6933, i64* %PC.i463
  %6934 = inttoptr i64 %6931 to i64*
  %6935 = load i64, i64* %6934
  store i64 %6935, i64* %RAX.i464, align 8
  store %struct.Memory* %loadMem_42a344, %struct.Memory** %MEMORY
  %loadMem_42a348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 5
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %6941 to i64*
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6943 = getelementptr inbounds %struct.GPR, %struct.GPR* %6942, i32 0, i32 15
  %6944 = getelementptr inbounds %struct.Reg, %struct.Reg* %6943, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %6944 to i64*
  %6945 = load i64, i64* %RBP.i462
  %6946 = sub i64 %6945, 12
  %6947 = load i64, i64* %PC.i460
  %6948 = add i64 %6947, 4
  store i64 %6948, i64* %PC.i460
  %6949 = inttoptr i64 %6946 to i32*
  %6950 = load i32, i32* %6949
  %6951 = sext i32 %6950 to i64
  store i64 %6951, i64* %RCX.i461, align 8
  store %struct.Memory* %loadMem_42a348, %struct.Memory** %MEMORY
  %loadMem_42a34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %6954 to i64*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6956 = getelementptr inbounds %struct.GPR, %struct.GPR* %6955, i32 0, i32 1
  %6957 = getelementptr inbounds %struct.Reg, %struct.Reg* %6956, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %6957 to i64*
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 5
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %RCX.i458 = bitcast %union.anon* %6960 to i64*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6962 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6961, i64 0, i64 0
  %YMM0.i459 = bitcast %union.VectorReg* %6962 to %"class.std::bitset"*
  %6963 = bitcast %"class.std::bitset"* %YMM0.i459 to i8*
  %6964 = load i64, i64* %RAX.i457
  %6965 = load i64, i64* %RCX.i458
  %6966 = mul i64 %6965, 4
  %6967 = add i64 %6964, 31016
  %6968 = add i64 %6967, %6966
  %6969 = load i64, i64* %PC.i456
  %6970 = add i64 %6969, 9
  store i64 %6970, i64* %PC.i456
  %6971 = inttoptr i64 %6968 to float*
  %6972 = load float, float* %6971
  %6973 = bitcast i8* %6963 to float*
  store float %6972, float* %6973, align 1
  %6974 = getelementptr inbounds i8, i8* %6963, i64 4
  %6975 = bitcast i8* %6974 to float*
  store float 0.000000e+00, float* %6975, align 1
  %6976 = getelementptr inbounds i8, i8* %6963, i64 8
  %6977 = bitcast i8* %6976 to float*
  store float 0.000000e+00, float* %6977, align 1
  %6978 = getelementptr inbounds i8, i8* %6963, i64 12
  %6979 = bitcast i8* %6978 to float*
  store float 0.000000e+00, float* %6979, align 1
  store %struct.Memory* %loadMem_42a34c, %struct.Memory** %MEMORY
  %loadMem_42a355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 33
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %6982 to i64*
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 15
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %RBP.i454 = bitcast %union.anon* %6985 to i64*
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6987 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6986, i64 0, i64 0
  %XMM0.i455 = bitcast %union.VectorReg* %6987 to %union.vec128_t*
  %6988 = load i64, i64* %RBP.i454
  %6989 = sub i64 %6988, 1716
  %6990 = bitcast %union.vec128_t* %XMM0.i455 to i8*
  %6991 = load i64, i64* %PC.i453
  %6992 = add i64 %6991, 8
  store i64 %6992, i64* %PC.i453
  %6993 = bitcast i8* %6990 to <2 x float>*
  %6994 = load <2 x float>, <2 x float>* %6993, align 1
  %6995 = extractelement <2 x float> %6994, i32 0
  %6996 = inttoptr i64 %6989 to float*
  store float %6995, float* %6996
  store %struct.Memory* %loadMem_42a355, %struct.Memory** %MEMORY
  %loadMem_42a35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6998 = getelementptr inbounds %struct.GPR, %struct.GPR* %6997, i32 0, i32 33
  %6999 = getelementptr inbounds %struct.Reg, %struct.Reg* %6998, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %6999 to i64*
  %7000 = load i64, i64* %PC.i452
  %7001 = add i64 %7000, 21
  %7002 = load i64, i64* %PC.i452
  %7003 = add i64 %7002, 5
  store i64 %7003, i64* %PC.i452
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7001, i64* %7004, align 8
  store %struct.Memory* %loadMem_42a35d, %struct.Memory** %MEMORY
  br label %block_.L_42a372

block_.L_42a362:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit470
  %loadMem_42a362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7006 = getelementptr inbounds %struct.GPR, %struct.GPR* %7005, i32 0, i32 33
  %7007 = getelementptr inbounds %struct.Reg, %struct.Reg* %7006, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %7007 to i64*
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7009 = getelementptr inbounds %struct.GPR, %struct.GPR* %7008, i32 0, i32 15
  %7010 = getelementptr inbounds %struct.Reg, %struct.Reg* %7009, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %7010 to i64*
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7011, i64 0, i64 0
  %YMM0.i451 = bitcast %union.VectorReg* %7012 to %"class.std::bitset"*
  %7013 = bitcast %"class.std::bitset"* %YMM0.i451 to i8*
  %7014 = load i64, i64* %RBP.i450
  %7015 = sub i64 %7014, 1648
  %7016 = load i64, i64* %PC.i449
  %7017 = add i64 %7016, 8
  store i64 %7017, i64* %PC.i449
  %7018 = inttoptr i64 %7015 to float*
  %7019 = load float, float* %7018
  %7020 = bitcast i8* %7013 to float*
  store float %7019, float* %7020, align 1
  %7021 = getelementptr inbounds i8, i8* %7013, i64 4
  %7022 = bitcast i8* %7021 to float*
  store float 0.000000e+00, float* %7022, align 1
  %7023 = getelementptr inbounds i8, i8* %7013, i64 8
  %7024 = bitcast i8* %7023 to float*
  store float 0.000000e+00, float* %7024, align 1
  %7025 = getelementptr inbounds i8, i8* %7013, i64 12
  %7026 = bitcast i8* %7025 to float*
  store float 0.000000e+00, float* %7026, align 1
  store %struct.Memory* %loadMem_42a362, %struct.Memory** %MEMORY
  %loadMem_42a36a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7028 = getelementptr inbounds %struct.GPR, %struct.GPR* %7027, i32 0, i32 33
  %7029 = getelementptr inbounds %struct.Reg, %struct.Reg* %7028, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %7029 to i64*
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7031 = getelementptr inbounds %struct.GPR, %struct.GPR* %7030, i32 0, i32 15
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %7032 to i64*
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7034 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7033, i64 0, i64 0
  %XMM0.i448 = bitcast %union.VectorReg* %7034 to %union.vec128_t*
  %7035 = load i64, i64* %RBP.i447
  %7036 = sub i64 %7035, 1716
  %7037 = bitcast %union.vec128_t* %XMM0.i448 to i8*
  %7038 = load i64, i64* %PC.i446
  %7039 = add i64 %7038, 8
  store i64 %7039, i64* %PC.i446
  %7040 = bitcast i8* %7037 to <2 x float>*
  %7041 = load <2 x float>, <2 x float>* %7040, align 1
  %7042 = extractelement <2 x float> %7041, i32 0
  %7043 = inttoptr i64 %7036 to float*
  store float %7042, float* %7043
  store %struct.Memory* %loadMem_42a36a, %struct.Memory** %MEMORY
  br label %block_.L_42a372

block_.L_42a372:                                  ; preds = %block_.L_42a362, %block_42a344
  %loadMem_42a372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 33
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %7046 to i64*
  %7047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7048 = getelementptr inbounds %struct.GPR, %struct.GPR* %7047, i32 0, i32 15
  %7049 = getelementptr inbounds %struct.Reg, %struct.Reg* %7048, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %7049 to i64*
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7051 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7050, i64 0, i64 0
  %YMM0.i445 = bitcast %union.VectorReg* %7051 to %"class.std::bitset"*
  %7052 = bitcast %"class.std::bitset"* %YMM0.i445 to i8*
  %7053 = load i64, i64* %RBP.i444
  %7054 = sub i64 %7053, 1716
  %7055 = load i64, i64* %PC.i443
  %7056 = add i64 %7055, 8
  store i64 %7056, i64* %PC.i443
  %7057 = inttoptr i64 %7054 to float*
  %7058 = load float, float* %7057
  %7059 = bitcast i8* %7052 to float*
  store float %7058, float* %7059, align 1
  %7060 = getelementptr inbounds i8, i8* %7052, i64 4
  %7061 = bitcast i8* %7060 to float*
  store float 0.000000e+00, float* %7061, align 1
  %7062 = getelementptr inbounds i8, i8* %7052, i64 8
  %7063 = bitcast i8* %7062 to float*
  store float 0.000000e+00, float* %7063, align 1
  %7064 = getelementptr inbounds i8, i8* %7052, i64 12
  %7065 = bitcast i8* %7064 to float*
  store float 0.000000e+00, float* %7065, align 1
  store %struct.Memory* %loadMem_42a372, %struct.Memory** %MEMORY
  %loadMem_42a37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7067 = getelementptr inbounds %struct.GPR, %struct.GPR* %7066, i32 0, i32 33
  %7068 = getelementptr inbounds %struct.Reg, %struct.Reg* %7067, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %7068 to i64*
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 15
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %7071 to i64*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7073 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7072, i64 0, i64 0
  %XMM0.i442 = bitcast %union.VectorReg* %7073 to %union.vec128_t*
  %7074 = load i64, i64* %RBP.i441
  %7075 = sub i64 %7074, 1720
  %7076 = bitcast %union.vec128_t* %XMM0.i442 to i8*
  %7077 = load i64, i64* %PC.i440
  %7078 = add i64 %7077, 8
  store i64 %7078, i64* %PC.i440
  %7079 = bitcast i8* %7076 to <2 x float>*
  %7080 = load <2 x float>, <2 x float>* %7079, align 1
  %7081 = extractelement <2 x float> %7080, i32 0
  %7082 = inttoptr i64 %7075 to float*
  store float %7081, float* %7082
  store %struct.Memory* %loadMem_42a37a, %struct.Memory** %MEMORY
  %loadMem_42a382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 33
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7085 to i64*
  %7086 = load i64, i64* %PC.i439
  %7087 = add i64 %7086, 21
  %7088 = load i64, i64* %PC.i439
  %7089 = add i64 %7088, 5
  store i64 %7089, i64* %PC.i439
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7087, i64* %7090, align 8
  store %struct.Memory* %loadMem_42a382, %struct.Memory** %MEMORY
  br label %block_.L_42a397

block_.L_42a387:                                  ; preds = %routine_ucomiss__xmm1___xmm0.exit489
  %loadMem_42a387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7092 = getelementptr inbounds %struct.GPR, %struct.GPR* %7091, i32 0, i32 33
  %7093 = getelementptr inbounds %struct.Reg, %struct.Reg* %7092, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %7093 to i64*
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7094, i64 0, i64 0
  %YMM0.i437 = bitcast %union.VectorReg* %7095 to %"class.std::bitset"*
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7096, i64 0, i64 0
  %XMM0.i438 = bitcast %union.VectorReg* %7097 to %union.vec128_t*
  %7098 = bitcast %"class.std::bitset"* %YMM0.i437 to i8*
  %7099 = bitcast %"class.std::bitset"* %YMM0.i437 to i8*
  %7100 = bitcast %union.vec128_t* %XMM0.i438 to i8*
  %7101 = load i64, i64* %PC.i436
  %7102 = add i64 %7101, 3
  store i64 %7102, i64* %PC.i436
  %7103 = bitcast i8* %7099 to i64*
  %7104 = load i64, i64* %7103, align 1
  %7105 = getelementptr inbounds i8, i8* %7099, i64 8
  %7106 = bitcast i8* %7105 to i64*
  %7107 = load i64, i64* %7106, align 1
  %7108 = bitcast i8* %7100 to i64*
  %7109 = load i64, i64* %7108, align 1
  %7110 = getelementptr inbounds i8, i8* %7100, i64 8
  %7111 = bitcast i8* %7110 to i64*
  %7112 = load i64, i64* %7111, align 1
  %7113 = xor i64 %7109, %7104
  %7114 = xor i64 %7112, %7107
  %7115 = trunc i64 %7113 to i32
  %7116 = lshr i64 %7113, 32
  %7117 = trunc i64 %7116 to i32
  %7118 = bitcast i8* %7098 to i32*
  store i32 %7115, i32* %7118, align 1
  %7119 = getelementptr inbounds i8, i8* %7098, i64 4
  %7120 = bitcast i8* %7119 to i32*
  store i32 %7117, i32* %7120, align 1
  %7121 = trunc i64 %7114 to i32
  %7122 = getelementptr inbounds i8, i8* %7098, i64 8
  %7123 = bitcast i8* %7122 to i32*
  store i32 %7121, i32* %7123, align 1
  %7124 = lshr i64 %7114, 32
  %7125 = trunc i64 %7124 to i32
  %7126 = getelementptr inbounds i8, i8* %7098, i64 12
  %7127 = bitcast i8* %7126 to i32*
  store i32 %7125, i32* %7127, align 1
  store %struct.Memory* %loadMem_42a387, %struct.Memory** %MEMORY
  %loadMem_42a38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7129 = getelementptr inbounds %struct.GPR, %struct.GPR* %7128, i32 0, i32 33
  %7130 = getelementptr inbounds %struct.Reg, %struct.Reg* %7129, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %7130 to i64*
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7132 = getelementptr inbounds %struct.GPR, %struct.GPR* %7131, i32 0, i32 15
  %7133 = getelementptr inbounds %struct.Reg, %struct.Reg* %7132, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %7133 to i64*
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7134, i64 0, i64 0
  %XMM0.i435 = bitcast %union.VectorReg* %7135 to %union.vec128_t*
  %7136 = load i64, i64* %RBP.i434
  %7137 = sub i64 %7136, 1720
  %7138 = bitcast %union.vec128_t* %XMM0.i435 to i8*
  %7139 = load i64, i64* %PC.i433
  %7140 = add i64 %7139, 8
  store i64 %7140, i64* %PC.i433
  %7141 = bitcast i8* %7138 to <2 x float>*
  %7142 = load <2 x float>, <2 x float>* %7141, align 1
  %7143 = extractelement <2 x float> %7142, i32 0
  %7144 = inttoptr i64 %7137 to float*
  store float %7143, float* %7144
  store %struct.Memory* %loadMem_42a38a, %struct.Memory** %MEMORY
  %loadMem_42a392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7146 = getelementptr inbounds %struct.GPR, %struct.GPR* %7145, i32 0, i32 33
  %7147 = getelementptr inbounds %struct.Reg, %struct.Reg* %7146, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7147 to i64*
  %7148 = load i64, i64* %PC.i432
  %7149 = add i64 %7148, 5
  %7150 = load i64, i64* %PC.i432
  %7151 = add i64 %7150, 5
  store i64 %7151, i64* %PC.i432
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7149, i64* %7152, align 8
  store %struct.Memory* %loadMem_42a392, %struct.Memory** %MEMORY
  br label %block_.L_42a397

block_.L_42a397:                                  ; preds = %block_.L_42a387, %block_.L_42a372
  %loadMem_42a397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 33
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %7155 to i64*
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7157 = getelementptr inbounds %struct.GPR, %struct.GPR* %7156, i32 0, i32 15
  %7158 = getelementptr inbounds %struct.Reg, %struct.Reg* %7157, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %7158 to i64*
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7160 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7159, i64 0, i64 0
  %YMM0.i431 = bitcast %union.VectorReg* %7160 to %"class.std::bitset"*
  %7161 = bitcast %"class.std::bitset"* %YMM0.i431 to i8*
  %7162 = load i64, i64* %RBP.i430
  %7163 = sub i64 %7162, 1720
  %7164 = load i64, i64* %PC.i429
  %7165 = add i64 %7164, 8
  store i64 %7165, i64* %PC.i429
  %7166 = inttoptr i64 %7163 to float*
  %7167 = load float, float* %7166
  %7168 = bitcast i8* %7161 to float*
  store float %7167, float* %7168, align 1
  %7169 = getelementptr inbounds i8, i8* %7161, i64 4
  %7170 = bitcast i8* %7169 to float*
  store float 0.000000e+00, float* %7170, align 1
  %7171 = getelementptr inbounds i8, i8* %7161, i64 8
  %7172 = bitcast i8* %7171 to float*
  store float 0.000000e+00, float* %7172, align 1
  %7173 = getelementptr inbounds i8, i8* %7161, i64 12
  %7174 = bitcast i8* %7173 to float*
  store float 0.000000e+00, float* %7174, align 1
  store %struct.Memory* %loadMem_42a397, %struct.Memory** %MEMORY
  %loadMem_42a39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 33
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %7177 to i64*
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7179 = getelementptr inbounds %struct.GPR, %struct.GPR* %7178, i32 0, i32 1
  %7180 = getelementptr inbounds %struct.Reg, %struct.Reg* %7179, i32 0, i32 0
  %RAX.i427 = bitcast %union.anon* %7180 to i64*
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 15
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %7183 to i64*
  %7184 = load i64, i64* %RBP.i428
  %7185 = sub i64 %7184, 8
  %7186 = load i64, i64* %PC.i426
  %7187 = add i64 %7186, 4
  store i64 %7187, i64* %PC.i426
  %7188 = inttoptr i64 %7185 to i64*
  %7189 = load i64, i64* %7188
  store i64 %7189, i64* %RAX.i427, align 8
  store %struct.Memory* %loadMem_42a39f, %struct.Memory** %MEMORY
  %loadMem_42a3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7191 = getelementptr inbounds %struct.GPR, %struct.GPR* %7190, i32 0, i32 33
  %7192 = getelementptr inbounds %struct.Reg, %struct.Reg* %7191, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %7192 to i64*
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7194 = getelementptr inbounds %struct.GPR, %struct.GPR* %7193, i32 0, i32 5
  %7195 = getelementptr inbounds %struct.Reg, %struct.Reg* %7194, i32 0, i32 0
  %RCX.i424 = bitcast %union.anon* %7195 to i64*
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 15
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %7198 to i64*
  %7199 = load i64, i64* %RBP.i425
  %7200 = sub i64 %7199, 12
  %7201 = load i64, i64* %PC.i423
  %7202 = add i64 %7201, 4
  store i64 %7202, i64* %PC.i423
  %7203 = inttoptr i64 %7200 to i32*
  %7204 = load i32, i32* %7203
  %7205 = sext i32 %7204 to i64
  store i64 %7205, i64* %RCX.i424, align 8
  store %struct.Memory* %loadMem_42a3a3, %struct.Memory** %MEMORY
  %loadMem_42a3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 33
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 1
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %7211 to i64*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 5
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RCX.i421 = bitcast %union.anon* %7214 to i64*
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7216 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7215, i64 0, i64 0
  %XMM0.i422 = bitcast %union.VectorReg* %7216 to %union.vec128_t*
  %7217 = load i64, i64* %RAX.i420
  %7218 = load i64, i64* %RCX.i421
  %7219 = mul i64 %7218, 4
  %7220 = add i64 %7217, 31016
  %7221 = add i64 %7220, %7219
  %7222 = bitcast %union.vec128_t* %XMM0.i422 to i8*
  %7223 = load i64, i64* %PC.i419
  %7224 = add i64 %7223, 9
  store i64 %7224, i64* %PC.i419
  %7225 = bitcast i8* %7222 to <2 x float>*
  %7226 = load <2 x float>, <2 x float>* %7225, align 1
  %7227 = extractelement <2 x float> %7226, i32 0
  %7228 = inttoptr i64 %7221 to float*
  store float %7227, float* %7228
  store %struct.Memory* %loadMem_42a3a7, %struct.Memory** %MEMORY
  br label %block_.L_42a3b0

block_.L_42a3b0:                                  ; preds = %block_.L_42a397, %block_42a20c
  %loadMem_42a3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 33
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %PC.i418
  %7233 = add i64 %7232, 409
  %7234 = load i64, i64* %PC.i418
  %7235 = add i64 %7234, 5
  store i64 %7235, i64* %PC.i418
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7233, i64* %7236, align 8
  store %struct.Memory* %loadMem_42a3b0, %struct.Memory** %MEMORY
  br label %block_.L_42a549

block_.L_42a3b5:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit642
  %loadMem_42a3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 33
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %7239 to i64*
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7241 = getelementptr inbounds %struct.GPR, %struct.GPR* %7240, i32 0, i32 1
  %7242 = getelementptr inbounds %struct.Reg, %struct.Reg* %7241, i32 0, i32 0
  %RAX.i416 = bitcast %union.anon* %7242 to i64*
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7244 = getelementptr inbounds %struct.GPR, %struct.GPR* %7243, i32 0, i32 15
  %7245 = getelementptr inbounds %struct.Reg, %struct.Reg* %7244, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %7245 to i64*
  %7246 = load i64, i64* %RBP.i417
  %7247 = sub i64 %7246, 8
  %7248 = load i64, i64* %PC.i415
  %7249 = add i64 %7248, 4
  store i64 %7249, i64* %PC.i415
  %7250 = inttoptr i64 %7247 to i64*
  %7251 = load i64, i64* %7250
  store i64 %7251, i64* %RAX.i416, align 8
  store %struct.Memory* %loadMem_42a3b5, %struct.Memory** %MEMORY
  %loadMem_42a3b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7253 = getelementptr inbounds %struct.GPR, %struct.GPR* %7252, i32 0, i32 33
  %7254 = getelementptr inbounds %struct.Reg, %struct.Reg* %7253, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %7254 to i64*
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 5
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %7257 to i64*
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 15
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %7260 to i64*
  %7261 = load i64, i64* %RBP.i414
  %7262 = sub i64 %7261, 12
  %7263 = load i64, i64* %PC.i412
  %7264 = add i64 %7263, 3
  store i64 %7264, i64* %PC.i412
  %7265 = inttoptr i64 %7262 to i32*
  %7266 = load i32, i32* %7265
  %7267 = zext i32 %7266 to i64
  store i64 %7267, i64* %RCX.i413, align 8
  store %struct.Memory* %loadMem_42a3b9, %struct.Memory** %MEMORY
  %loadMem_42a3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 33
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 7
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %RDX.i410 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 15
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RBP.i411
  %7278 = sub i64 %7277, 1640
  %7279 = load i64, i64* %PC.i409
  %7280 = add i64 %7279, 7
  store i64 %7280, i64* %PC.i409
  %7281 = inttoptr i64 %7278 to i32*
  %7282 = load i32, i32* %7281
  %7283 = sext i32 %7282 to i64
  store i64 %7283, i64* %RDX.i410, align 8
  store %struct.Memory* %loadMem_42a3bc, %struct.Memory** %MEMORY
  %loadMem_42a3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 5
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RCX.i407 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 7
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RDX.i408 = bitcast %union.anon* %7292 to i64*
  %7293 = load i64, i64* %RCX.i407
  %7294 = load i64, i64* %RDX.i408
  %7295 = mul i64 %7294, 4
  %7296 = add i64 %7295, 8053168
  %7297 = load i64, i64* %PC.i406
  %7298 = add i64 %7297, 7
  store i64 %7298, i64* %PC.i406
  %7299 = trunc i64 %7293 to i32
  %7300 = inttoptr i64 %7296 to i32*
  %7301 = load i32, i32* %7300
  %7302 = add i32 %7301, %7299
  %7303 = zext i32 %7302 to i64
  store i64 %7303, i64* %RCX.i407, align 8
  %7304 = icmp ult i32 %7302, %7299
  %7305 = icmp ult i32 %7302, %7301
  %7306 = or i1 %7304, %7305
  %7307 = zext i1 %7306 to i8
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7307, i8* %7308, align 1
  %7309 = and i32 %7302, 255
  %7310 = call i32 @llvm.ctpop.i32(i32 %7309)
  %7311 = trunc i32 %7310 to i8
  %7312 = and i8 %7311, 1
  %7313 = xor i8 %7312, 1
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7313, i8* %7314, align 1
  %7315 = xor i32 %7301, %7299
  %7316 = xor i32 %7315, %7302
  %7317 = lshr i32 %7316, 4
  %7318 = trunc i32 %7317 to i8
  %7319 = and i8 %7318, 1
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7319, i8* %7320, align 1
  %7321 = icmp eq i32 %7302, 0
  %7322 = zext i1 %7321 to i8
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7322, i8* %7323, align 1
  %7324 = lshr i32 %7302, 31
  %7325 = trunc i32 %7324 to i8
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7325, i8* %7326, align 1
  %7327 = lshr i32 %7299, 31
  %7328 = lshr i32 %7301, 31
  %7329 = xor i32 %7324, %7327
  %7330 = xor i32 %7324, %7328
  %7331 = add i32 %7329, %7330
  %7332 = icmp eq i32 %7331, 2
  %7333 = zext i1 %7332 to i8
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7333, i8* %7334, align 1
  store %struct.Memory* %loadMem_42a3c3, %struct.Memory** %MEMORY
  %loadMem_42a3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 33
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %7337 to i64*
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 5
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %ECX.i404 = bitcast %union.anon* %7340 to i32*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 7
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %7343 to i64*
  %7344 = load i32, i32* %ECX.i404
  %7345 = zext i32 %7344 to i64
  %7346 = load i64, i64* %PC.i403
  %7347 = add i64 %7346, 3
  store i64 %7347, i64* %PC.i403
  %7348 = shl i64 %7345, 32
  %7349 = ashr exact i64 %7348, 32
  store i64 %7349, i64* %RDX.i405, align 8
  store %struct.Memory* %loadMem_42a3ca, %struct.Memory** %MEMORY
  %loadMem_42a3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 33
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7352 to i64*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 1
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7355 to i64*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 7
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %7358 to i64*
  %7359 = load i64, i64* %RAX.i401
  %7360 = load i64, i64* %RDX.i402
  %7361 = add i64 %7360, %7359
  %7362 = load i64, i64* %PC.i400
  %7363 = add i64 %7362, 4
  store i64 %7363, i64* %PC.i400
  %7364 = inttoptr i64 %7361 to i8*
  %7365 = load i8, i8* %7364
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7366, align 1
  %7367 = zext i8 %7365 to i32
  %7368 = call i32 @llvm.ctpop.i32(i32 %7367)
  %7369 = trunc i32 %7368 to i8
  %7370 = and i8 %7369, 1
  %7371 = xor i8 %7370, 1
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7371, i8* %7372, align 1
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7373, align 1
  %7374 = icmp eq i8 %7365, 0
  %7375 = zext i1 %7374 to i8
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7375, i8* %7376, align 1
  %7377 = lshr i8 %7365, 7
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7377, i8* %7378, align 1
  %7379 = lshr i8 %7365, 7
  %7380 = xor i8 %7377, %7379
  %7381 = add i8 %7380, %7379
  %7382 = icmp eq i8 %7381, 2
  %7383 = zext i1 %7382 to i8
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7383, i8* %7384, align 1
  store %struct.Memory* %loadMem_42a3cd, %struct.Memory** %MEMORY
  %loadMem_42a3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 33
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %7387 to i64*
  %7388 = load i64, i64* %PC.i399
  %7389 = add i64 %7388, 371
  %7390 = load i64, i64* %PC.i399
  %7391 = add i64 %7390, 6
  %7392 = load i64, i64* %PC.i399
  %7393 = add i64 %7392, 6
  store i64 %7393, i64* %PC.i399
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7395 = load i8, i8* %7394, align 1
  %7396 = icmp eq i8 %7395, 0
  %7397 = zext i1 %7396 to i8
  store i8 %7397, i8* %BRANCH_TAKEN, align 1
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7399 = select i1 %7396, i64 %7389, i64 %7391
  store i64 %7399, i64* %7398, align 8
  store %struct.Memory* %loadMem_42a3d1, %struct.Memory** %MEMORY
  %loadBr_42a3d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a3d1 = icmp eq i8 %loadBr_42a3d1, 1
  br i1 %cmpBr_42a3d1, label %block_.L_42a544, label %block_42a3d7

block_42a3d7:                                     ; preds = %block_.L_42a3b5
  %loadMem_42a3d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7403, i64 0, i64 0
  %YMM0.i398 = bitcast %union.VectorReg* %7404 to %"class.std::bitset"*
  %7405 = bitcast %"class.std::bitset"* %YMM0.i398 to i8*
  %7406 = load i64, i64* %PC.i397
  %7407 = add i64 %7406, ptrtoint (%G_0xb8d2d__rip__type* @G_0xb8d2d__rip_ to i64)
  %7408 = load i64, i64* %PC.i397
  %7409 = add i64 %7408, 8
  store i64 %7409, i64* %PC.i397
  %7410 = inttoptr i64 %7407 to float*
  %7411 = load float, float* %7410
  %7412 = bitcast i8* %7405 to float*
  store float %7411, float* %7412, align 1
  %7413 = getelementptr inbounds i8, i8* %7405, i64 4
  %7414 = bitcast i8* %7413 to float*
  store float 0.000000e+00, float* %7414, align 1
  %7415 = getelementptr inbounds i8, i8* %7405, i64 8
  %7416 = bitcast i8* %7415 to float*
  store float 0.000000e+00, float* %7416, align 1
  %7417 = getelementptr inbounds i8, i8* %7405, i64 12
  %7418 = bitcast i8* %7417 to float*
  store float 0.000000e+00, float* %7418, align 1
  store %struct.Memory* %loadMem_42a3d7, %struct.Memory** %MEMORY
  %loadMem_42a3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 33
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %7421 to i64*
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7423 = getelementptr inbounds %struct.GPR, %struct.GPR* %7422, i32 0, i32 1
  %7424 = getelementptr inbounds %struct.Reg, %struct.Reg* %7423, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %7424 to i64*
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 15
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %7427 to i64*
  %7428 = load i64, i64* %RBP.i396
  %7429 = sub i64 %7428, 8
  %7430 = load i64, i64* %PC.i394
  %7431 = add i64 %7430, 4
  store i64 %7431, i64* %PC.i394
  %7432 = inttoptr i64 %7429 to i64*
  %7433 = load i64, i64* %7432
  store i64 %7433, i64* %RAX.i395, align 8
  store %struct.Memory* %loadMem_42a3df, %struct.Memory** %MEMORY
  %loadMem_42a3e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7435 = getelementptr inbounds %struct.GPR, %struct.GPR* %7434, i32 0, i32 33
  %7436 = getelementptr inbounds %struct.Reg, %struct.Reg* %7435, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %7436 to i64*
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7438 = getelementptr inbounds %struct.GPR, %struct.GPR* %7437, i32 0, i32 5
  %7439 = getelementptr inbounds %struct.Reg, %struct.Reg* %7438, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %7439 to i64*
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7441 = getelementptr inbounds %struct.GPR, %struct.GPR* %7440, i32 0, i32 15
  %7442 = getelementptr inbounds %struct.Reg, %struct.Reg* %7441, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %7442 to i64*
  %7443 = load i64, i64* %RBP.i393
  %7444 = sub i64 %7443, 12
  %7445 = load i64, i64* %PC.i391
  %7446 = add i64 %7445, 3
  store i64 %7446, i64* %PC.i391
  %7447 = inttoptr i64 %7444 to i32*
  %7448 = load i32, i32* %7447
  %7449 = zext i32 %7448 to i64
  store i64 %7449, i64* %RCX.i392, align 8
  store %struct.Memory* %loadMem_42a3e3, %struct.Memory** %MEMORY
  %loadMem_42a3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7451 = getelementptr inbounds %struct.GPR, %struct.GPR* %7450, i32 0, i32 33
  %7452 = getelementptr inbounds %struct.Reg, %struct.Reg* %7451, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %7452 to i64*
  %7453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7454 = getelementptr inbounds %struct.GPR, %struct.GPR* %7453, i32 0, i32 7
  %7455 = getelementptr inbounds %struct.Reg, %struct.Reg* %7454, i32 0, i32 0
  %RDX.i389 = bitcast %union.anon* %7455 to i64*
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7457 = getelementptr inbounds %struct.GPR, %struct.GPR* %7456, i32 0, i32 15
  %7458 = getelementptr inbounds %struct.Reg, %struct.Reg* %7457, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %7458 to i64*
  %7459 = load i64, i64* %RBP.i390
  %7460 = sub i64 %7459, 1640
  %7461 = load i64, i64* %PC.i388
  %7462 = add i64 %7461, 7
  store i64 %7462, i64* %PC.i388
  %7463 = inttoptr i64 %7460 to i32*
  %7464 = load i32, i32* %7463
  %7465 = sext i32 %7464 to i64
  store i64 %7465, i64* %RDX.i389, align 8
  store %struct.Memory* %loadMem_42a3e6, %struct.Memory** %MEMORY
  %loadMem_42a3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7467 = getelementptr inbounds %struct.GPR, %struct.GPR* %7466, i32 0, i32 33
  %7468 = getelementptr inbounds %struct.Reg, %struct.Reg* %7467, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %7468 to i64*
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7470 = getelementptr inbounds %struct.GPR, %struct.GPR* %7469, i32 0, i32 5
  %7471 = getelementptr inbounds %struct.Reg, %struct.Reg* %7470, i32 0, i32 0
  %RCX.i386 = bitcast %union.anon* %7471 to i64*
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7473 = getelementptr inbounds %struct.GPR, %struct.GPR* %7472, i32 0, i32 7
  %7474 = getelementptr inbounds %struct.Reg, %struct.Reg* %7473, i32 0, i32 0
  %RDX.i387 = bitcast %union.anon* %7474 to i64*
  %7475 = load i64, i64* %RCX.i386
  %7476 = load i64, i64* %RDX.i387
  %7477 = mul i64 %7476, 4
  %7478 = add i64 %7477, 8053168
  %7479 = load i64, i64* %PC.i385
  %7480 = add i64 %7479, 7
  store i64 %7480, i64* %PC.i385
  %7481 = trunc i64 %7475 to i32
  %7482 = inttoptr i64 %7478 to i32*
  %7483 = load i32, i32* %7482
  %7484 = add i32 %7483, %7481
  %7485 = zext i32 %7484 to i64
  store i64 %7485, i64* %RCX.i386, align 8
  %7486 = icmp ult i32 %7484, %7481
  %7487 = icmp ult i32 %7484, %7483
  %7488 = or i1 %7486, %7487
  %7489 = zext i1 %7488 to i8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7489, i8* %7490, align 1
  %7491 = and i32 %7484, 255
  %7492 = call i32 @llvm.ctpop.i32(i32 %7491)
  %7493 = trunc i32 %7492 to i8
  %7494 = and i8 %7493, 1
  %7495 = xor i8 %7494, 1
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7495, i8* %7496, align 1
  %7497 = xor i32 %7483, %7481
  %7498 = xor i32 %7497, %7484
  %7499 = lshr i32 %7498, 4
  %7500 = trunc i32 %7499 to i8
  %7501 = and i8 %7500, 1
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7501, i8* %7502, align 1
  %7503 = icmp eq i32 %7484, 0
  %7504 = zext i1 %7503 to i8
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7504, i8* %7505, align 1
  %7506 = lshr i32 %7484, 31
  %7507 = trunc i32 %7506 to i8
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7507, i8* %7508, align 1
  %7509 = lshr i32 %7481, 31
  %7510 = lshr i32 %7483, 31
  %7511 = xor i32 %7506, %7509
  %7512 = xor i32 %7506, %7510
  %7513 = add i32 %7511, %7512
  %7514 = icmp eq i32 %7513, 2
  %7515 = zext i1 %7514 to i8
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7515, i8* %7516, align 1
  store %struct.Memory* %loadMem_42a3ed, %struct.Memory** %MEMORY
  %loadMem_42a3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 33
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %7519 to i64*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 5
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %7522 to i32*
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7524 = getelementptr inbounds %struct.GPR, %struct.GPR* %7523, i32 0, i32 7
  %7525 = getelementptr inbounds %struct.Reg, %struct.Reg* %7524, i32 0, i32 0
  %RDX.i384 = bitcast %union.anon* %7525 to i64*
  %7526 = load i32, i32* %ECX.i383
  %7527 = zext i32 %7526 to i64
  %7528 = load i64, i64* %PC.i382
  %7529 = add i64 %7528, 3
  store i64 %7529, i64* %PC.i382
  %7530 = shl i64 %7527, 32
  %7531 = ashr exact i64 %7530, 32
  store i64 %7531, i64* %RDX.i384, align 8
  store %struct.Memory* %loadMem_42a3f4, %struct.Memory** %MEMORY
  %loadMem_42a3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 33
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %7534 to i64*
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 1
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %7537 to i64*
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 7
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %RDX.i380 = bitcast %union.anon* %7540 to i64*
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7541, i64 0, i64 1
  %YMM1.i381 = bitcast %union.VectorReg* %7542 to %"class.std::bitset"*
  %7543 = bitcast %"class.std::bitset"* %YMM1.i381 to i8*
  %7544 = load i64, i64* %RAX.i379
  %7545 = load i64, i64* %RDX.i380
  %7546 = mul i64 %7545, 4
  %7547 = add i64 %7544, 10000
  %7548 = add i64 %7547, %7546
  %7549 = load i64, i64* %PC.i378
  %7550 = add i64 %7549, 9
  store i64 %7550, i64* %PC.i378
  %7551 = inttoptr i64 %7548 to float*
  %7552 = load float, float* %7551
  %7553 = bitcast i8* %7543 to float*
  store float %7552, float* %7553, align 1
  %7554 = getelementptr inbounds i8, i8* %7543, i64 4
  %7555 = bitcast i8* %7554 to float*
  store float 0.000000e+00, float* %7555, align 1
  %7556 = getelementptr inbounds i8, i8* %7543, i64 8
  %7557 = bitcast i8* %7556 to float*
  store float 0.000000e+00, float* %7557, align 1
  %7558 = getelementptr inbounds i8, i8* %7543, i64 12
  %7559 = bitcast i8* %7558 to float*
  store float 0.000000e+00, float* %7559, align 1
  store %struct.Memory* %loadMem_42a3f7, %struct.Memory** %MEMORY
  %loadMem_42a400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7561 = getelementptr inbounds %struct.GPR, %struct.GPR* %7560, i32 0, i32 33
  %7562 = getelementptr inbounds %struct.Reg, %struct.Reg* %7561, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %7562 to i64*
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 5
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %RCX.i376 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 15
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %7568 to i64*
  %7569 = load i64, i64* %RBP.i377
  %7570 = sub i64 %7569, 12
  %7571 = load i64, i64* %PC.i375
  %7572 = add i64 %7571, 3
  store i64 %7572, i64* %PC.i375
  %7573 = inttoptr i64 %7570 to i32*
  %7574 = load i32, i32* %7573
  %7575 = zext i32 %7574 to i64
  store i64 %7575, i64* %RCX.i376, align 8
  store %struct.Memory* %loadMem_42a400, %struct.Memory** %MEMORY
  %loadMem_42a403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 33
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %7578 to i64*
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 1
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %7581 to i64*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 15
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %7584 to i64*
  %7585 = load i64, i64* %RBP.i374
  %7586 = sub i64 %7585, 1640
  %7587 = load i64, i64* %PC.i372
  %7588 = add i64 %7587, 7
  store i64 %7588, i64* %PC.i372
  %7589 = inttoptr i64 %7586 to i32*
  %7590 = load i32, i32* %7589
  %7591 = sext i32 %7590 to i64
  store i64 %7591, i64* %RAX.i373, align 8
  store %struct.Memory* %loadMem_42a403, %struct.Memory** %MEMORY
  %loadMem_42a40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 33
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %7594 to i64*
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 1
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 5
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %7600 to i64*
  %7601 = load i64, i64* %RCX.i371
  %7602 = load i64, i64* %RAX.i370
  %7603 = mul i64 %7602, 4
  %7604 = add i64 %7603, 8053168
  %7605 = load i64, i64* %PC.i369
  %7606 = add i64 %7605, 7
  store i64 %7606, i64* %PC.i369
  %7607 = trunc i64 %7601 to i32
  %7608 = inttoptr i64 %7604 to i32*
  %7609 = load i32, i32* %7608
  %7610 = add i32 %7609, %7607
  %7611 = zext i32 %7610 to i64
  store i64 %7611, i64* %RCX.i371, align 8
  %7612 = icmp ult i32 %7610, %7607
  %7613 = icmp ult i32 %7610, %7609
  %7614 = or i1 %7612, %7613
  %7615 = zext i1 %7614 to i8
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7615, i8* %7616, align 1
  %7617 = and i32 %7610, 255
  %7618 = call i32 @llvm.ctpop.i32(i32 %7617)
  %7619 = trunc i32 %7618 to i8
  %7620 = and i8 %7619, 1
  %7621 = xor i8 %7620, 1
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7621, i8* %7622, align 1
  %7623 = xor i32 %7609, %7607
  %7624 = xor i32 %7623, %7610
  %7625 = lshr i32 %7624, 4
  %7626 = trunc i32 %7625 to i8
  %7627 = and i8 %7626, 1
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7627, i8* %7628, align 1
  %7629 = icmp eq i32 %7610, 0
  %7630 = zext i1 %7629 to i8
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7630, i8* %7631, align 1
  %7632 = lshr i32 %7610, 31
  %7633 = trunc i32 %7632 to i8
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7633, i8* %7634, align 1
  %7635 = lshr i32 %7607, 31
  %7636 = lshr i32 %7609, 31
  %7637 = xor i32 %7632, %7635
  %7638 = xor i32 %7632, %7636
  %7639 = add i32 %7637, %7638
  %7640 = icmp eq i32 %7639, 2
  %7641 = zext i1 %7640 to i8
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7641, i8* %7642, align 1
  store %struct.Memory* %loadMem_42a40a, %struct.Memory** %MEMORY
  %loadMem_42a411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %7645 to i64*
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 5
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %ECX.i367 = bitcast %union.anon* %7648 to i32*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 1
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %7651 to i64*
  %7652 = load i32, i32* %ECX.i367
  %7653 = zext i32 %7652 to i64
  %7654 = load i64, i64* %PC.i366
  %7655 = add i64 %7654, 3
  store i64 %7655, i64* %PC.i366
  %7656 = shl i64 %7653, 32
  %7657 = ashr exact i64 %7656, 32
  store i64 %7657, i64* %RAX.i368, align 8
  store %struct.Memory* %loadMem_42a411, %struct.Memory** %MEMORY
  %loadMem_42a414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 33
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7660 to i64*
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7662 = getelementptr inbounds %struct.GPR, %struct.GPR* %7661, i32 0, i32 1
  %7663 = getelementptr inbounds %struct.Reg, %struct.Reg* %7662, i32 0, i32 0
  %RAX.i363 = bitcast %union.anon* %7663 to i64*
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 15
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %7666 to i64*
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7668 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7667, i64 0, i64 1
  %YMM1.i365 = bitcast %union.VectorReg* %7668 to %"class.std::bitset"*
  %7669 = bitcast %"class.std::bitset"* %YMM1.i365 to i8*
  %7670 = bitcast %"class.std::bitset"* %YMM1.i365 to i8*
  %7671 = load i64, i64* %RBP.i364
  %7672 = load i64, i64* %RAX.i363
  %7673 = mul i64 %7672, 4
  %7674 = add i64 %7671, -1632
  %7675 = add i64 %7674, %7673
  %7676 = load i64, i64* %PC.i362
  %7677 = add i64 %7676, 9
  store i64 %7677, i64* %PC.i362
  %7678 = bitcast i8* %7670 to <2 x float>*
  %7679 = load <2 x float>, <2 x float>* %7678, align 1
  %7680 = getelementptr inbounds i8, i8* %7670, i64 8
  %7681 = bitcast i8* %7680 to <2 x i32>*
  %7682 = load <2 x i32>, <2 x i32>* %7681, align 1
  %7683 = inttoptr i64 %7675 to float*
  %7684 = load float, float* %7683
  %7685 = extractelement <2 x float> %7679, i32 0
  %7686 = fmul float %7685, %7684
  %7687 = bitcast i8* %7669 to float*
  store float %7686, float* %7687, align 1
  %7688 = bitcast <2 x float> %7679 to <2 x i32>
  %7689 = extractelement <2 x i32> %7688, i32 1
  %7690 = getelementptr inbounds i8, i8* %7669, i64 4
  %7691 = bitcast i8* %7690 to i32*
  store i32 %7689, i32* %7691, align 1
  %7692 = extractelement <2 x i32> %7682, i32 0
  %7693 = getelementptr inbounds i8, i8* %7669, i64 8
  %7694 = bitcast i8* %7693 to i32*
  store i32 %7692, i32* %7694, align 1
  %7695 = extractelement <2 x i32> %7682, i32 1
  %7696 = getelementptr inbounds i8, i8* %7669, i64 12
  %7697 = bitcast i8* %7696 to i32*
  store i32 %7695, i32* %7697, align 1
  store %struct.Memory* %loadMem_42a414, %struct.Memory** %MEMORY
  %loadMem_42a41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 33
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 1
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 15
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RBP.i361
  %7708 = sub i64 %7707, 8
  %7709 = load i64, i64* %PC.i359
  %7710 = add i64 %7709, 4
  store i64 %7710, i64* %PC.i359
  %7711 = inttoptr i64 %7708 to i64*
  %7712 = load i64, i64* %7711
  store i64 %7712, i64* %RAX.i360, align 8
  store %struct.Memory* %loadMem_42a41d, %struct.Memory** %MEMORY
  %loadMem_42a421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7714 = getelementptr inbounds %struct.GPR, %struct.GPR* %7713, i32 0, i32 33
  %7715 = getelementptr inbounds %struct.Reg, %struct.Reg* %7714, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7715 to i64*
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7717 = getelementptr inbounds %struct.GPR, %struct.GPR* %7716, i32 0, i32 5
  %7718 = getelementptr inbounds %struct.Reg, %struct.Reg* %7717, i32 0, i32 0
  %RCX.i357 = bitcast %union.anon* %7718 to i64*
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7720 = getelementptr inbounds %struct.GPR, %struct.GPR* %7719, i32 0, i32 15
  %7721 = getelementptr inbounds %struct.Reg, %struct.Reg* %7720, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %7721 to i64*
  %7722 = load i64, i64* %RBP.i358
  %7723 = sub i64 %7722, 12
  %7724 = load i64, i64* %PC.i356
  %7725 = add i64 %7724, 3
  store i64 %7725, i64* %PC.i356
  %7726 = inttoptr i64 %7723 to i32*
  %7727 = load i32, i32* %7726
  %7728 = zext i32 %7727 to i64
  store i64 %7728, i64* %RCX.i357, align 8
  store %struct.Memory* %loadMem_42a421, %struct.Memory** %MEMORY
  %loadMem_42a424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 33
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7731 to i64*
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 7
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %RDX.i354 = bitcast %union.anon* %7734 to i64*
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 15
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %7737 to i64*
  %7738 = load i64, i64* %RBP.i355
  %7739 = sub i64 %7738, 1640
  %7740 = load i64, i64* %PC.i353
  %7741 = add i64 %7740, 7
  store i64 %7741, i64* %PC.i353
  %7742 = inttoptr i64 %7739 to i32*
  %7743 = load i32, i32* %7742
  %7744 = sext i32 %7743 to i64
  store i64 %7744, i64* %RDX.i354, align 8
  store %struct.Memory* %loadMem_42a424, %struct.Memory** %MEMORY
  %loadMem_42a42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 33
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7747 to i64*
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 5
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %RCX.i351 = bitcast %union.anon* %7750 to i64*
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7752 = getelementptr inbounds %struct.GPR, %struct.GPR* %7751, i32 0, i32 7
  %7753 = getelementptr inbounds %struct.Reg, %struct.Reg* %7752, i32 0, i32 0
  %RDX.i352 = bitcast %union.anon* %7753 to i64*
  %7754 = load i64, i64* %RCX.i351
  %7755 = load i64, i64* %RDX.i352
  %7756 = mul i64 %7755, 4
  %7757 = add i64 %7756, 8053168
  %7758 = load i64, i64* %PC.i350
  %7759 = add i64 %7758, 7
  store i64 %7759, i64* %PC.i350
  %7760 = trunc i64 %7754 to i32
  %7761 = inttoptr i64 %7757 to i32*
  %7762 = load i32, i32* %7761
  %7763 = add i32 %7762, %7760
  %7764 = zext i32 %7763 to i64
  store i64 %7764, i64* %RCX.i351, align 8
  %7765 = icmp ult i32 %7763, %7760
  %7766 = icmp ult i32 %7763, %7762
  %7767 = or i1 %7765, %7766
  %7768 = zext i1 %7767 to i8
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7768, i8* %7769, align 1
  %7770 = and i32 %7763, 255
  %7771 = call i32 @llvm.ctpop.i32(i32 %7770)
  %7772 = trunc i32 %7771 to i8
  %7773 = and i8 %7772, 1
  %7774 = xor i8 %7773, 1
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7774, i8* %7775, align 1
  %7776 = xor i32 %7762, %7760
  %7777 = xor i32 %7776, %7763
  %7778 = lshr i32 %7777, 4
  %7779 = trunc i32 %7778 to i8
  %7780 = and i8 %7779, 1
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7780, i8* %7781, align 1
  %7782 = icmp eq i32 %7763, 0
  %7783 = zext i1 %7782 to i8
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7783, i8* %7784, align 1
  %7785 = lshr i32 %7763, 31
  %7786 = trunc i32 %7785 to i8
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7786, i8* %7787, align 1
  %7788 = lshr i32 %7760, 31
  %7789 = lshr i32 %7762, 31
  %7790 = xor i32 %7785, %7788
  %7791 = xor i32 %7785, %7789
  %7792 = add i32 %7790, %7791
  %7793 = icmp eq i32 %7792, 2
  %7794 = zext i1 %7793 to i8
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7794, i8* %7795, align 1
  store %struct.Memory* %loadMem_42a42b, %struct.Memory** %MEMORY
  %loadMem_42a432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7797 = getelementptr inbounds %struct.GPR, %struct.GPR* %7796, i32 0, i32 33
  %7798 = getelementptr inbounds %struct.Reg, %struct.Reg* %7797, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7798 to i64*
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 5
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %ECX.i348 = bitcast %union.anon* %7801 to i32*
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7803 = getelementptr inbounds %struct.GPR, %struct.GPR* %7802, i32 0, i32 7
  %7804 = getelementptr inbounds %struct.Reg, %struct.Reg* %7803, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %7804 to i64*
  %7805 = load i32, i32* %ECX.i348
  %7806 = zext i32 %7805 to i64
  %7807 = load i64, i64* %PC.i347
  %7808 = add i64 %7807, 3
  store i64 %7808, i64* %PC.i347
  %7809 = shl i64 %7806, 32
  %7810 = ashr exact i64 %7809, 32
  store i64 %7810, i64* %RDX.i349, align 8
  store %struct.Memory* %loadMem_42a432, %struct.Memory** %MEMORY
  %loadMem_42a435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 33
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %7813 to i64*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 1
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %7816 to i64*
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 7
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %RDX.i345 = bitcast %union.anon* %7819 to i64*
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7821 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7820, i64 0, i64 0
  %YMM0.i346 = bitcast %union.VectorReg* %7821 to %"class.std::bitset"*
  %7822 = bitcast %"class.std::bitset"* %YMM0.i346 to i8*
  %7823 = bitcast %"class.std::bitset"* %YMM0.i346 to i8*
  %7824 = load i64, i64* %RAX.i344
  %7825 = load i64, i64* %RDX.i345
  %7826 = mul i64 %7825, 4
  %7827 = add i64 %7824, 10000
  %7828 = add i64 %7827, %7826
  %7829 = load i64, i64* %PC.i343
  %7830 = add i64 %7829, 9
  store i64 %7830, i64* %PC.i343
  %7831 = bitcast i8* %7823 to <2 x float>*
  %7832 = load <2 x float>, <2 x float>* %7831, align 1
  %7833 = getelementptr inbounds i8, i8* %7823, i64 8
  %7834 = bitcast i8* %7833 to <2 x i32>*
  %7835 = load <2 x i32>, <2 x i32>* %7834, align 1
  %7836 = inttoptr i64 %7828 to float*
  %7837 = load float, float* %7836
  %7838 = extractelement <2 x float> %7832, i32 0
  %7839 = fsub float %7838, %7837
  %7840 = bitcast i8* %7822 to float*
  store float %7839, float* %7840, align 1
  %7841 = bitcast <2 x float> %7832 to <2 x i32>
  %7842 = extractelement <2 x i32> %7841, i32 1
  %7843 = getelementptr inbounds i8, i8* %7822, i64 4
  %7844 = bitcast i8* %7843 to i32*
  store i32 %7842, i32* %7844, align 1
  %7845 = extractelement <2 x i32> %7835, i32 0
  %7846 = getelementptr inbounds i8, i8* %7822, i64 8
  %7847 = bitcast i8* %7846 to i32*
  store i32 %7845, i32* %7847, align 1
  %7848 = extractelement <2 x i32> %7835, i32 1
  %7849 = getelementptr inbounds i8, i8* %7822, i64 12
  %7850 = bitcast i8* %7849 to i32*
  store i32 %7848, i32* %7850, align 1
  store %struct.Memory* %loadMem_42a435, %struct.Memory** %MEMORY
  %loadMem_42a43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 33
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %7853 to i64*
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 1
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %7856 to i64*
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 15
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %7859 to i64*
  %7860 = load i64, i64* %RBP.i342
  %7861 = sub i64 %7860, 12
  %7862 = load i64, i64* %PC.i340
  %7863 = add i64 %7862, 4
  store i64 %7863, i64* %PC.i340
  %7864 = inttoptr i64 %7861 to i32*
  %7865 = load i32, i32* %7864
  %7866 = sext i32 %7865 to i64
  store i64 %7866, i64* %RAX.i341, align 8
  store %struct.Memory* %loadMem_42a43e, %struct.Memory** %MEMORY
  %loadMem_42a442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 33
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %7869 to i64*
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 1
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %7872 to i64*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 15
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %7875 to i64*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7877 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7876, i64 0, i64 0
  %YMM0.i339 = bitcast %union.VectorReg* %7877 to %"class.std::bitset"*
  %7878 = bitcast %"class.std::bitset"* %YMM0.i339 to i8*
  %7879 = bitcast %"class.std::bitset"* %YMM0.i339 to i8*
  %7880 = load i64, i64* %RBP.i338
  %7881 = load i64, i64* %RAX.i337
  %7882 = mul i64 %7881, 4
  %7883 = add i64 %7880, -1632
  %7884 = add i64 %7883, %7882
  %7885 = load i64, i64* %PC.i336
  %7886 = add i64 %7885, 9
  store i64 %7886, i64* %PC.i336
  %7887 = bitcast i8* %7879 to <2 x float>*
  %7888 = load <2 x float>, <2 x float>* %7887, align 1
  %7889 = getelementptr inbounds i8, i8* %7879, i64 8
  %7890 = bitcast i8* %7889 to <2 x i32>*
  %7891 = load <2 x i32>, <2 x i32>* %7890, align 1
  %7892 = inttoptr i64 %7884 to float*
  %7893 = load float, float* %7892
  %7894 = extractelement <2 x float> %7888, i32 0
  %7895 = fmul float %7894, %7893
  %7896 = bitcast i8* %7878 to float*
  store float %7895, float* %7896, align 1
  %7897 = bitcast <2 x float> %7888 to <2 x i32>
  %7898 = extractelement <2 x i32> %7897, i32 1
  %7899 = getelementptr inbounds i8, i8* %7878, i64 4
  %7900 = bitcast i8* %7899 to i32*
  store i32 %7898, i32* %7900, align 1
  %7901 = extractelement <2 x i32> %7891, i32 0
  %7902 = getelementptr inbounds i8, i8* %7878, i64 8
  %7903 = bitcast i8* %7902 to i32*
  store i32 %7901, i32* %7903, align 1
  %7904 = extractelement <2 x i32> %7891, i32 1
  %7905 = getelementptr inbounds i8, i8* %7878, i64 12
  %7906 = bitcast i8* %7905 to i32*
  store i32 %7904, i32* %7906, align 1
  store %struct.Memory* %loadMem_42a442, %struct.Memory** %MEMORY
  %loadMem_42a44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 33
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %7909 to i64*
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7910, i64 0, i64 1
  %YMM1.i334 = bitcast %union.VectorReg* %7911 to %"class.std::bitset"*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7912, i64 0, i64 0
  %XMM0.i335 = bitcast %union.VectorReg* %7913 to %union.vec128_t*
  %7914 = bitcast %"class.std::bitset"* %YMM1.i334 to i8*
  %7915 = bitcast %"class.std::bitset"* %YMM1.i334 to i8*
  %7916 = bitcast %union.vec128_t* %XMM0.i335 to i8*
  %7917 = load i64, i64* %PC.i333
  %7918 = add i64 %7917, 4
  store i64 %7918, i64* %PC.i333
  %7919 = bitcast i8* %7915 to <2 x float>*
  %7920 = load <2 x float>, <2 x float>* %7919, align 1
  %7921 = getelementptr inbounds i8, i8* %7915, i64 8
  %7922 = bitcast i8* %7921 to <2 x i32>*
  %7923 = load <2 x i32>, <2 x i32>* %7922, align 1
  %7924 = bitcast i8* %7916 to <2 x float>*
  %7925 = load <2 x float>, <2 x float>* %7924, align 1
  %7926 = extractelement <2 x float> %7920, i32 0
  %7927 = extractelement <2 x float> %7925, i32 0
  %7928 = fadd float %7926, %7927
  %7929 = bitcast i8* %7914 to float*
  store float %7928, float* %7929, align 1
  %7930 = bitcast <2 x float> %7920 to <2 x i32>
  %7931 = extractelement <2 x i32> %7930, i32 1
  %7932 = getelementptr inbounds i8, i8* %7914, i64 4
  %7933 = bitcast i8* %7932 to i32*
  store i32 %7931, i32* %7933, align 1
  %7934 = extractelement <2 x i32> %7923, i32 0
  %7935 = getelementptr inbounds i8, i8* %7914, i64 8
  %7936 = bitcast i8* %7935 to i32*
  store i32 %7934, i32* %7936, align 1
  %7937 = extractelement <2 x i32> %7923, i32 1
  %7938 = getelementptr inbounds i8, i8* %7914, i64 12
  %7939 = bitcast i8* %7938 to i32*
  store i32 %7937, i32* %7939, align 1
  store %struct.Memory* %loadMem_42a44b, %struct.Memory** %MEMORY
  %loadMem_42a44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 33
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %7942 to i64*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 15
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7946, i64 0, i64 1
  %XMM1.i332 = bitcast %union.VectorReg* %7947 to %union.vec128_t*
  %7948 = load i64, i64* %RBP.i331
  %7949 = sub i64 %7948, 1652
  %7950 = bitcast %union.vec128_t* %XMM1.i332 to i8*
  %7951 = load i64, i64* %PC.i330
  %7952 = add i64 %7951, 8
  store i64 %7952, i64* %PC.i330
  %7953 = bitcast i8* %7950 to <2 x float>*
  %7954 = load <2 x float>, <2 x float>* %7953, align 1
  %7955 = extractelement <2 x float> %7954, i32 0
  %7956 = inttoptr i64 %7949 to float*
  store float %7955, float* %7956
  store %struct.Memory* %loadMem_42a44f, %struct.Memory** %MEMORY
  %loadMem_42a457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7958 = getelementptr inbounds %struct.GPR, %struct.GPR* %7957, i32 0, i32 33
  %7959 = getelementptr inbounds %struct.Reg, %struct.Reg* %7958, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %7959 to i64*
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 1
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 15
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %RBP.i329 = bitcast %union.anon* %7965 to i64*
  %7966 = load i64, i64* %RBP.i329
  %7967 = sub i64 %7966, 8
  %7968 = load i64, i64* %PC.i327
  %7969 = add i64 %7968, 4
  store i64 %7969, i64* %PC.i327
  %7970 = inttoptr i64 %7967 to i64*
  %7971 = load i64, i64* %7970
  store i64 %7971, i64* %RAX.i328, align 8
  store %struct.Memory* %loadMem_42a457, %struct.Memory** %MEMORY
  %loadMem_42a45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 33
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %7974 to i64*
  %7975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7976 = getelementptr inbounds %struct.GPR, %struct.GPR* %7975, i32 0, i32 7
  %7977 = getelementptr inbounds %struct.Reg, %struct.Reg* %7976, i32 0, i32 0
  %RDX.i325 = bitcast %union.anon* %7977 to i64*
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 15
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %7980 to i64*
  %7981 = load i64, i64* %RBP.i326
  %7982 = sub i64 %7981, 12
  %7983 = load i64, i64* %PC.i324
  %7984 = add i64 %7983, 4
  store i64 %7984, i64* %PC.i324
  %7985 = inttoptr i64 %7982 to i32*
  %7986 = load i32, i32* %7985
  %7987 = sext i32 %7986 to i64
  store i64 %7987, i64* %RDX.i325, align 8
  store %struct.Memory* %loadMem_42a45b, %struct.Memory** %MEMORY
  %loadMem_42a45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 33
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %7990 to i64*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 1
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %7993 to i64*
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7995 = getelementptr inbounds %struct.GPR, %struct.GPR* %7994, i32 0, i32 7
  %7996 = getelementptr inbounds %struct.Reg, %struct.Reg* %7995, i32 0, i32 0
  %RDX.i322 = bitcast %union.anon* %7996 to i64*
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7997, i64 0, i64 0
  %YMM0.i323 = bitcast %union.VectorReg* %7998 to %"class.std::bitset"*
  %7999 = bitcast %"class.std::bitset"* %YMM0.i323 to i8*
  %8000 = load i64, i64* %RAX.i321
  %8001 = load i64, i64* %RDX.i322
  %8002 = mul i64 %8001, 4
  %8003 = add i64 %8000, 31016
  %8004 = add i64 %8003, %8002
  %8005 = load i64, i64* %PC.i320
  %8006 = add i64 %8005, 9
  store i64 %8006, i64* %PC.i320
  %8007 = inttoptr i64 %8004 to float*
  %8008 = load float, float* %8007
  %8009 = bitcast i8* %7999 to float*
  store float %8008, float* %8009, align 1
  %8010 = getelementptr inbounds i8, i8* %7999, i64 4
  %8011 = bitcast i8* %8010 to float*
  store float 0.000000e+00, float* %8011, align 1
  %8012 = getelementptr inbounds i8, i8* %7999, i64 8
  %8013 = bitcast i8* %8012 to float*
  store float 0.000000e+00, float* %8013, align 1
  %8014 = getelementptr inbounds i8, i8* %7999, i64 12
  %8015 = bitcast i8* %8014 to float*
  store float 0.000000e+00, float* %8015, align 1
  store %struct.Memory* %loadMem_42a45f, %struct.Memory** %MEMORY
  %loadMem_42a468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8017 = getelementptr inbounds %struct.GPR, %struct.GPR* %8016, i32 0, i32 33
  %8018 = getelementptr inbounds %struct.Reg, %struct.Reg* %8017, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %8018 to i64*
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 15
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %8021 to i64*
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8023 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8022, i64 0, i64 1
  %YMM1.i319 = bitcast %union.VectorReg* %8023 to %"class.std::bitset"*
  %8024 = bitcast %"class.std::bitset"* %YMM1.i319 to i8*
  %8025 = load i64, i64* %RBP.i318
  %8026 = sub i64 %8025, 1652
  %8027 = load i64, i64* %PC.i317
  %8028 = add i64 %8027, 8
  store i64 %8028, i64* %PC.i317
  %8029 = inttoptr i64 %8026 to float*
  %8030 = load float, float* %8029
  %8031 = bitcast i8* %8024 to float*
  store float %8030, float* %8031, align 1
  %8032 = getelementptr inbounds i8, i8* %8024, i64 4
  %8033 = bitcast i8* %8032 to float*
  store float 0.000000e+00, float* %8033, align 1
  %8034 = getelementptr inbounds i8, i8* %8024, i64 8
  %8035 = bitcast i8* %8034 to float*
  store float 0.000000e+00, float* %8035, align 1
  %8036 = getelementptr inbounds i8, i8* %8024, i64 12
  %8037 = bitcast i8* %8036 to float*
  store float 0.000000e+00, float* %8037, align 1
  store %struct.Memory* %loadMem_42a468, %struct.Memory** %MEMORY
  %loadMem_42a470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 33
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %8040 to i64*
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8041, i64 0, i64 0
  %XMM0.i312 = bitcast %union.VectorReg* %8042 to %union.vec128_t*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8043, i64 0, i64 1
  %XMM1.i313 = bitcast %union.VectorReg* %8044 to %union.vec128_t*
  %8045 = bitcast %union.vec128_t* %XMM1.i313 to i8*
  %8046 = bitcast %union.vec128_t* %XMM0.i312 to i8*
  %8047 = load i64, i64* %PC.i311
  %8048 = add i64 %8047, 3
  store i64 %8048, i64* %PC.i311
  %8049 = bitcast i8* %8045 to <2 x float>*
  %8050 = load <2 x float>, <2 x float>* %8049, align 1
  %8051 = extractelement <2 x float> %8050, i32 0
  %8052 = bitcast i8* %8046 to <2 x float>*
  %8053 = load <2 x float>, <2 x float>* %8052, align 1
  %8054 = extractelement <2 x float> %8053, i32 0
  %8055 = fcmp uno float %8051, %8054
  br i1 %8055, label %8056, label %8068

; <label>:8056:                                   ; preds = %block_42a3d7
  %8057 = fadd float %8051, %8054
  %8058 = bitcast float %8057 to i32
  %8059 = and i32 %8058, 2143289344
  %8060 = icmp eq i32 %8059, 2139095040
  %8061 = and i32 %8058, 4194303
  %8062 = icmp ne i32 %8061, 0
  %8063 = and i1 %8060, %8062
  br i1 %8063, label %8064, label %8074

; <label>:8064:                                   ; preds = %8056
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8066 = load i64, i64* %8065, align 8
  %8067 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8066, %struct.Memory* %loadMem_42a470)
  br label %routine_ucomiss__xmm0___xmm1.exit314

; <label>:8068:                                   ; preds = %block_42a3d7
  %8069 = fcmp ogt float %8051, %8054
  br i1 %8069, label %8074, label %8070

; <label>:8070:                                   ; preds = %8068
  %8071 = fcmp olt float %8051, %8054
  br i1 %8071, label %8074, label %8072

; <label>:8072:                                   ; preds = %8070
  %8073 = fcmp oeq float %8051, %8054
  br i1 %8073, label %8074, label %8081

; <label>:8074:                                   ; preds = %8072, %8070, %8068, %8056
  %8075 = phi i8 [ 0, %8068 ], [ 0, %8070 ], [ 1, %8072 ], [ 1, %8056 ]
  %8076 = phi i8 [ 0, %8068 ], [ 0, %8070 ], [ 0, %8072 ], [ 1, %8056 ]
  %8077 = phi i8 [ 0, %8068 ], [ 1, %8070 ], [ 0, %8072 ], [ 1, %8056 ]
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8075, i8* %8078, align 1
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8076, i8* %8079, align 1
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8077, i8* %8080, align 1
  br label %8081

; <label>:8081:                                   ; preds = %8074, %8072
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8082, align 1
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8083, align 1
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8084, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit314

routine_ucomiss__xmm0___xmm1.exit314:             ; preds = %8064, %8081
  %8085 = phi %struct.Memory* [ %8067, %8064 ], [ %loadMem_42a470, %8081 ]
  store %struct.Memory* %8085, %struct.Memory** %MEMORY
  %loadMem_42a473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8087 = getelementptr inbounds %struct.GPR, %struct.GPR* %8086, i32 0, i32 33
  %8088 = getelementptr inbounds %struct.Reg, %struct.Reg* %8087, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %8088 to i64*
  %8089 = load i64, i64* %PC.i310
  %8090 = add i64 %8089, 27
  %8091 = load i64, i64* %PC.i310
  %8092 = add i64 %8091, 6
  %8093 = load i64, i64* %PC.i310
  %8094 = add i64 %8093, 6
  store i64 %8094, i64* %PC.i310
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8096 = load i8, i8* %8095, align 1
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8098 = load i8, i8* %8097, align 1
  %8099 = or i8 %8098, %8096
  %8100 = icmp ne i8 %8099, 0
  %8101 = zext i1 %8100 to i8
  store i8 %8101, i8* %BRANCH_TAKEN, align 1
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8103 = select i1 %8100, i64 %8090, i64 %8092
  store i64 %8103, i64* %8102, align 8
  store %struct.Memory* %loadMem_42a473, %struct.Memory** %MEMORY
  %loadBr_42a473 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a473 = icmp eq i8 %loadBr_42a473, 1
  br i1 %cmpBr_42a473, label %block_.L_42a48e, label %block_42a479

block_42a479:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit314
  %loadMem_42a479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 33
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %8106 to i64*
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 15
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %8109 to i64*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8111 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8110, i64 0, i64 0
  %YMM0.i309 = bitcast %union.VectorReg* %8111 to %"class.std::bitset"*
  %8112 = bitcast %"class.std::bitset"* %YMM0.i309 to i8*
  %8113 = load i64, i64* %RBP.i308
  %8114 = sub i64 %8113, 1652
  %8115 = load i64, i64* %PC.i307
  %8116 = add i64 %8115, 8
  store i64 %8116, i64* %PC.i307
  %8117 = inttoptr i64 %8114 to float*
  %8118 = load float, float* %8117
  %8119 = bitcast i8* %8112 to float*
  store float %8118, float* %8119, align 1
  %8120 = getelementptr inbounds i8, i8* %8112, i64 4
  %8121 = bitcast i8* %8120 to float*
  store float 0.000000e+00, float* %8121, align 1
  %8122 = getelementptr inbounds i8, i8* %8112, i64 8
  %8123 = bitcast i8* %8122 to float*
  store float 0.000000e+00, float* %8123, align 1
  %8124 = getelementptr inbounds i8, i8* %8112, i64 12
  %8125 = bitcast i8* %8124 to float*
  store float 0.000000e+00, float* %8125, align 1
  store %struct.Memory* %loadMem_42a479, %struct.Memory** %MEMORY
  %loadMem_42a481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 33
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %8128 to i64*
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8130 = getelementptr inbounds %struct.GPR, %struct.GPR* %8129, i32 0, i32 15
  %8131 = getelementptr inbounds %struct.Reg, %struct.Reg* %8130, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %8131 to i64*
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8132, i64 0, i64 0
  %XMM0.i306 = bitcast %union.VectorReg* %8133 to %union.vec128_t*
  %8134 = load i64, i64* %RBP.i305
  %8135 = sub i64 %8134, 1724
  %8136 = bitcast %union.vec128_t* %XMM0.i306 to i8*
  %8137 = load i64, i64* %PC.i304
  %8138 = add i64 %8137, 8
  store i64 %8138, i64* %PC.i304
  %8139 = bitcast i8* %8136 to <2 x float>*
  %8140 = load <2 x float>, <2 x float>* %8139, align 1
  %8141 = extractelement <2 x float> %8140, i32 0
  %8142 = inttoptr i64 %8135 to float*
  store float %8141, float* %8142
  store %struct.Memory* %loadMem_42a481, %struct.Memory** %MEMORY
  %loadMem_42a489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 33
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %8145 to i64*
  %8146 = load i64, i64* %PC.i303
  %8147 = add i64 %8146, 30
  %8148 = load i64, i64* %PC.i303
  %8149 = add i64 %8148, 5
  store i64 %8149, i64* %PC.i303
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8147, i64* %8150, align 8
  store %struct.Memory* %loadMem_42a489, %struct.Memory** %MEMORY
  br label %block_.L_42a4a7

block_.L_42a48e:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit314
  %loadMem_42a48e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8152 = getelementptr inbounds %struct.GPR, %struct.GPR* %8151, i32 0, i32 33
  %8153 = getelementptr inbounds %struct.Reg, %struct.Reg* %8152, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %8153 to i64*
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8155 = getelementptr inbounds %struct.GPR, %struct.GPR* %8154, i32 0, i32 1
  %8156 = getelementptr inbounds %struct.Reg, %struct.Reg* %8155, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %8156 to i64*
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8158 = getelementptr inbounds %struct.GPR, %struct.GPR* %8157, i32 0, i32 15
  %8159 = getelementptr inbounds %struct.Reg, %struct.Reg* %8158, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %8159 to i64*
  %8160 = load i64, i64* %RBP.i302
  %8161 = sub i64 %8160, 8
  %8162 = load i64, i64* %PC.i300
  %8163 = add i64 %8162, 4
  store i64 %8163, i64* %PC.i300
  %8164 = inttoptr i64 %8161 to i64*
  %8165 = load i64, i64* %8164
  store i64 %8165, i64* %RAX.i301, align 8
  store %struct.Memory* %loadMem_42a48e, %struct.Memory** %MEMORY
  %loadMem_42a492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 33
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8168 to i64*
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 5
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %8171 to i64*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 15
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %8174 to i64*
  %8175 = load i64, i64* %RBP.i299
  %8176 = sub i64 %8175, 12
  %8177 = load i64, i64* %PC.i297
  %8178 = add i64 %8177, 4
  store i64 %8178, i64* %PC.i297
  %8179 = inttoptr i64 %8176 to i32*
  %8180 = load i32, i32* %8179
  %8181 = sext i32 %8180 to i64
  store i64 %8181, i64* %RCX.i298, align 8
  store %struct.Memory* %loadMem_42a492, %struct.Memory** %MEMORY
  %loadMem_42a496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 33
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %8184 to i64*
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8186 = getelementptr inbounds %struct.GPR, %struct.GPR* %8185, i32 0, i32 1
  %8187 = getelementptr inbounds %struct.Reg, %struct.Reg* %8186, i32 0, i32 0
  %RAX.i294 = bitcast %union.anon* %8187 to i64*
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 5
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %RCX.i295 = bitcast %union.anon* %8190 to i64*
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8192 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8191, i64 0, i64 0
  %YMM0.i296 = bitcast %union.VectorReg* %8192 to %"class.std::bitset"*
  %8193 = bitcast %"class.std::bitset"* %YMM0.i296 to i8*
  %8194 = load i64, i64* %RAX.i294
  %8195 = load i64, i64* %RCX.i295
  %8196 = mul i64 %8195, 4
  %8197 = add i64 %8194, 31016
  %8198 = add i64 %8197, %8196
  %8199 = load i64, i64* %PC.i293
  %8200 = add i64 %8199, 9
  store i64 %8200, i64* %PC.i293
  %8201 = inttoptr i64 %8198 to float*
  %8202 = load float, float* %8201
  %8203 = bitcast i8* %8193 to float*
  store float %8202, float* %8203, align 1
  %8204 = getelementptr inbounds i8, i8* %8193, i64 4
  %8205 = bitcast i8* %8204 to float*
  store float 0.000000e+00, float* %8205, align 1
  %8206 = getelementptr inbounds i8, i8* %8193, i64 8
  %8207 = bitcast i8* %8206 to float*
  store float 0.000000e+00, float* %8207, align 1
  %8208 = getelementptr inbounds i8, i8* %8193, i64 12
  %8209 = bitcast i8* %8208 to float*
  store float 0.000000e+00, float* %8209, align 1
  store %struct.Memory* %loadMem_42a496, %struct.Memory** %MEMORY
  %loadMem_42a49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 33
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 15
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8216, i64 0, i64 0
  %XMM0.i292 = bitcast %union.VectorReg* %8217 to %union.vec128_t*
  %8218 = load i64, i64* %RBP.i291
  %8219 = sub i64 %8218, 1724
  %8220 = bitcast %union.vec128_t* %XMM0.i292 to i8*
  %8221 = load i64, i64* %PC.i290
  %8222 = add i64 %8221, 8
  store i64 %8222, i64* %PC.i290
  %8223 = bitcast i8* %8220 to <2 x float>*
  %8224 = load <2 x float>, <2 x float>* %8223, align 1
  %8225 = extractelement <2 x float> %8224, i32 0
  %8226 = inttoptr i64 %8219 to float*
  store float %8225, float* %8226
  store %struct.Memory* %loadMem_42a49f, %struct.Memory** %MEMORY
  br label %block_.L_42a4a7

block_.L_42a4a7:                                  ; preds = %block_.L_42a48e, %block_42a479
  %loadMem_42a4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 33
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8229 to i64*
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 15
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %8232 to i64*
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8233, i64 0, i64 0
  %YMM0.i289 = bitcast %union.VectorReg* %8234 to %"class.std::bitset"*
  %8235 = bitcast %"class.std::bitset"* %YMM0.i289 to i8*
  %8236 = load i64, i64* %RBP.i288
  %8237 = sub i64 %8236, 1724
  %8238 = load i64, i64* %PC.i287
  %8239 = add i64 %8238, 8
  store i64 %8239, i64* %PC.i287
  %8240 = inttoptr i64 %8237 to float*
  %8241 = load float, float* %8240
  %8242 = bitcast i8* %8235 to float*
  store float %8241, float* %8242, align 1
  %8243 = getelementptr inbounds i8, i8* %8235, i64 4
  %8244 = bitcast i8* %8243 to float*
  store float 0.000000e+00, float* %8244, align 1
  %8245 = getelementptr inbounds i8, i8* %8235, i64 8
  %8246 = bitcast i8* %8245 to float*
  store float 0.000000e+00, float* %8246, align 1
  %8247 = getelementptr inbounds i8, i8* %8235, i64 12
  %8248 = bitcast i8* %8247 to float*
  store float 0.000000e+00, float* %8248, align 1
  store %struct.Memory* %loadMem_42a4a7, %struct.Memory** %MEMORY
  %loadMem_42a4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8250 = getelementptr inbounds %struct.GPR, %struct.GPR* %8249, i32 0, i32 33
  %8251 = getelementptr inbounds %struct.Reg, %struct.Reg* %8250, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8251 to i64*
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8252, i64 0, i64 1
  %YMM1.i285 = bitcast %union.VectorReg* %8253 to %"class.std::bitset"*
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8255 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8254, i64 0, i64 1
  %XMM1.i286 = bitcast %union.VectorReg* %8255 to %union.vec128_t*
  %8256 = bitcast %"class.std::bitset"* %YMM1.i285 to i8*
  %8257 = bitcast %"class.std::bitset"* %YMM1.i285 to i8*
  %8258 = bitcast %union.vec128_t* %XMM1.i286 to i8*
  %8259 = load i64, i64* %PC.i284
  %8260 = add i64 %8259, 3
  store i64 %8260, i64* %PC.i284
  %8261 = bitcast i8* %8257 to i64*
  %8262 = load i64, i64* %8261, align 1
  %8263 = getelementptr inbounds i8, i8* %8257, i64 8
  %8264 = bitcast i8* %8263 to i64*
  %8265 = load i64, i64* %8264, align 1
  %8266 = bitcast i8* %8258 to i64*
  %8267 = load i64, i64* %8266, align 1
  %8268 = getelementptr inbounds i8, i8* %8258, i64 8
  %8269 = bitcast i8* %8268 to i64*
  %8270 = load i64, i64* %8269, align 1
  %8271 = xor i64 %8267, %8262
  %8272 = xor i64 %8270, %8265
  %8273 = trunc i64 %8271 to i32
  %8274 = lshr i64 %8271, 32
  %8275 = trunc i64 %8274 to i32
  %8276 = bitcast i8* %8256 to i32*
  store i32 %8273, i32* %8276, align 1
  %8277 = getelementptr inbounds i8, i8* %8256, i64 4
  %8278 = bitcast i8* %8277 to i32*
  store i32 %8275, i32* %8278, align 1
  %8279 = trunc i64 %8272 to i32
  %8280 = getelementptr inbounds i8, i8* %8256, i64 8
  %8281 = bitcast i8* %8280 to i32*
  store i32 %8279, i32* %8281, align 1
  %8282 = lshr i64 %8272, 32
  %8283 = trunc i64 %8282 to i32
  %8284 = getelementptr inbounds i8, i8* %8256, i64 12
  %8285 = bitcast i8* %8284 to i32*
  store i32 %8283, i32* %8285, align 1
  store %struct.Memory* %loadMem_42a4af, %struct.Memory** %MEMORY
  %loadMem_42a4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8287 = getelementptr inbounds %struct.GPR, %struct.GPR* %8286, i32 0, i32 33
  %8288 = getelementptr inbounds %struct.Reg, %struct.Reg* %8287, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %8288 to i64*
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8290 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8289, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %8290 to %union.vec128_t*
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8292 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8291, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %8292 to %union.vec128_t*
  %8293 = bitcast %union.vec128_t* %XMM0.i280 to i8*
  %8294 = bitcast %union.vec128_t* %XMM1.i281 to i8*
  %8295 = load i64, i64* %PC.i279
  %8296 = add i64 %8295, 3
  store i64 %8296, i64* %PC.i279
  %8297 = bitcast i8* %8293 to <2 x float>*
  %8298 = load <2 x float>, <2 x float>* %8297, align 1
  %8299 = extractelement <2 x float> %8298, i32 0
  %8300 = bitcast i8* %8294 to <2 x float>*
  %8301 = load <2 x float>, <2 x float>* %8300, align 1
  %8302 = extractelement <2 x float> %8301, i32 0
  %8303 = fcmp uno float %8299, %8302
  br i1 %8303, label %8304, label %8316

; <label>:8304:                                   ; preds = %block_.L_42a4a7
  %8305 = fadd float %8299, %8302
  %8306 = bitcast float %8305 to i32
  %8307 = and i32 %8306, 2143289344
  %8308 = icmp eq i32 %8307, 2139095040
  %8309 = and i32 %8306, 4194303
  %8310 = icmp ne i32 %8309, 0
  %8311 = and i1 %8308, %8310
  br i1 %8311, label %8312, label %8322

; <label>:8312:                                   ; preds = %8304
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8314 = load i64, i64* %8313, align 8
  %8315 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8314, %struct.Memory* %loadMem_42a4b2)
  br label %routine_ucomiss__xmm1___xmm0.exit

; <label>:8316:                                   ; preds = %block_.L_42a4a7
  %8317 = fcmp ogt float %8299, %8302
  br i1 %8317, label %8322, label %8318

; <label>:8318:                                   ; preds = %8316
  %8319 = fcmp olt float %8299, %8302
  br i1 %8319, label %8322, label %8320

; <label>:8320:                                   ; preds = %8318
  %8321 = fcmp oeq float %8299, %8302
  br i1 %8321, label %8322, label %8329

; <label>:8322:                                   ; preds = %8320, %8318, %8316, %8304
  %8323 = phi i8 [ 0, %8316 ], [ 0, %8318 ], [ 1, %8320 ], [ 1, %8304 ]
  %8324 = phi i8 [ 0, %8316 ], [ 0, %8318 ], [ 0, %8320 ], [ 1, %8304 ]
  %8325 = phi i8 [ 0, %8316 ], [ 1, %8318 ], [ 0, %8320 ], [ 1, %8304 ]
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8323, i8* %8326, align 1
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8324, i8* %8327, align 1
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8325, i8* %8328, align 1
  br label %8329

; <label>:8329:                                   ; preds = %8322, %8320
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8330, align 1
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8331, align 1
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8332, align 1
  br label %routine_ucomiss__xmm1___xmm0.exit

routine_ucomiss__xmm1___xmm0.exit:                ; preds = %8312, %8329
  %8333 = phi %struct.Memory* [ %8315, %8312 ], [ %loadMem_42a4b2, %8329 ]
  store %struct.Memory* %8333, %struct.Memory** %MEMORY
  %loadMem_42a4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 33
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %8336 to i64*
  %8337 = load i64, i64* %PC.i278
  %8338 = add i64 %8337, 22
  %8339 = load i64, i64* %PC.i278
  %8340 = add i64 %8339, 6
  %8341 = load i64, i64* %PC.i278
  %8342 = add i64 %8341, 6
  store i64 %8342, i64* %PC.i278
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8344 = load i8, i8* %8343, align 1
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8346 = load i8, i8* %8345, align 1
  %8347 = or i8 %8346, %8344
  %8348 = icmp ne i8 %8347, 0
  %8349 = zext i1 %8348 to i8
  store i8 %8349, i8* %BRANCH_TAKEN, align 1
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8351 = select i1 %8348, i64 %8338, i64 %8340
  store i64 %8351, i64* %8350, align 8
  store %struct.Memory* %loadMem_42a4b5, %struct.Memory** %MEMORY
  %loadBr_42a4b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a4b5 = icmp eq i8 %loadBr_42a4b5, 1
  br i1 %cmpBr_42a4b5, label %block_.L_42a4cb, label %block_42a4bb

block_42a4bb:                                     ; preds = %routine_ucomiss__xmm1___xmm0.exit
  %loadMem_42a4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 33
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8356 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8355, i64 0, i64 0
  %YMM0.i276 = bitcast %union.VectorReg* %8356 to %"class.std::bitset"*
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8357, i64 0, i64 0
  %XMM0.i277 = bitcast %union.VectorReg* %8358 to %union.vec128_t*
  %8359 = bitcast %"class.std::bitset"* %YMM0.i276 to i8*
  %8360 = bitcast %"class.std::bitset"* %YMM0.i276 to i8*
  %8361 = bitcast %union.vec128_t* %XMM0.i277 to i8*
  %8362 = load i64, i64* %PC.i275
  %8363 = add i64 %8362, 3
  store i64 %8363, i64* %PC.i275
  %8364 = bitcast i8* %8360 to i64*
  %8365 = load i64, i64* %8364, align 1
  %8366 = getelementptr inbounds i8, i8* %8360, i64 8
  %8367 = bitcast i8* %8366 to i64*
  %8368 = load i64, i64* %8367, align 1
  %8369 = bitcast i8* %8361 to i64*
  %8370 = load i64, i64* %8369, align 1
  %8371 = getelementptr inbounds i8, i8* %8361, i64 8
  %8372 = bitcast i8* %8371 to i64*
  %8373 = load i64, i64* %8372, align 1
  %8374 = xor i64 %8370, %8365
  %8375 = xor i64 %8373, %8368
  %8376 = trunc i64 %8374 to i32
  %8377 = lshr i64 %8374, 32
  %8378 = trunc i64 %8377 to i32
  %8379 = bitcast i8* %8359 to i32*
  store i32 %8376, i32* %8379, align 1
  %8380 = getelementptr inbounds i8, i8* %8359, i64 4
  %8381 = bitcast i8* %8380 to i32*
  store i32 %8378, i32* %8381, align 1
  %8382 = trunc i64 %8375 to i32
  %8383 = getelementptr inbounds i8, i8* %8359, i64 8
  %8384 = bitcast i8* %8383 to i32*
  store i32 %8382, i32* %8384, align 1
  %8385 = lshr i64 %8375, 32
  %8386 = trunc i64 %8385 to i32
  %8387 = getelementptr inbounds i8, i8* %8359, i64 12
  %8388 = bitcast i8* %8387 to i32*
  store i32 %8386, i32* %8388, align 1
  store %struct.Memory* %loadMem_42a4bb, %struct.Memory** %MEMORY
  %loadMem_42a4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 33
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %8391 to i64*
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8393 = getelementptr inbounds %struct.GPR, %struct.GPR* %8392, i32 0, i32 15
  %8394 = getelementptr inbounds %struct.Reg, %struct.Reg* %8393, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %8394 to i64*
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8395, i64 0, i64 0
  %XMM0.i274 = bitcast %union.VectorReg* %8396 to %union.vec128_t*
  %8397 = load i64, i64* %RBP.i273
  %8398 = sub i64 %8397, 1728
  %8399 = bitcast %union.vec128_t* %XMM0.i274 to i8*
  %8400 = load i64, i64* %PC.i272
  %8401 = add i64 %8400, 8
  store i64 %8401, i64* %PC.i272
  %8402 = bitcast i8* %8399 to <2 x float>*
  %8403 = load <2 x float>, <2 x float>* %8402, align 1
  %8404 = extractelement <2 x float> %8403, i32 0
  %8405 = inttoptr i64 %8398 to float*
  store float %8404, float* %8405
  store %struct.Memory* %loadMem_42a4be, %struct.Memory** %MEMORY
  %loadMem_42a4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 33
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %8408 to i64*
  %8409 = load i64, i64* %PC.i271
  %8410 = add i64 %8409, 101
  %8411 = load i64, i64* %PC.i271
  %8412 = add i64 %8411, 5
  store i64 %8412, i64* %PC.i271
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8410, i64* %8413, align 8
  store %struct.Memory* %loadMem_42a4c6, %struct.Memory** %MEMORY
  br label %block_.L_42a52b

block_.L_42a4cb:                                  ; preds = %routine_ucomiss__xmm1___xmm0.exit
  %loadMem_42a4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8415 = getelementptr inbounds %struct.GPR, %struct.GPR* %8414, i32 0, i32 33
  %8416 = getelementptr inbounds %struct.Reg, %struct.Reg* %8415, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %8416 to i64*
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 1
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %RAX.i269 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 15
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %8422 to i64*
  %8423 = load i64, i64* %RBP.i270
  %8424 = sub i64 %8423, 8
  %8425 = load i64, i64* %PC.i268
  %8426 = add i64 %8425, 4
  store i64 %8426, i64* %PC.i268
  %8427 = inttoptr i64 %8424 to i64*
  %8428 = load i64, i64* %8427
  store i64 %8428, i64* %RAX.i269, align 8
  store %struct.Memory* %loadMem_42a4cb, %struct.Memory** %MEMORY
  %loadMem_42a4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8430 = getelementptr inbounds %struct.GPR, %struct.GPR* %8429, i32 0, i32 33
  %8431 = getelementptr inbounds %struct.Reg, %struct.Reg* %8430, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %8431 to i64*
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 5
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 15
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %8437 to i64*
  %8438 = load i64, i64* %RBP.i267
  %8439 = sub i64 %8438, 12
  %8440 = load i64, i64* %PC.i265
  %8441 = add i64 %8440, 4
  store i64 %8441, i64* %PC.i265
  %8442 = inttoptr i64 %8439 to i32*
  %8443 = load i32, i32* %8442
  %8444 = sext i32 %8443 to i64
  store i64 %8444, i64* %RCX.i266, align 8
  store %struct.Memory* %loadMem_42a4cf, %struct.Memory** %MEMORY
  %loadMem_42a4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %8447 to i64*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 1
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %RAX.i262 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 5
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RCX.i263 = bitcast %union.anon* %8453 to i64*
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8455 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8454, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %8455 to %"class.std::bitset"*
  %8456 = bitcast %"class.std::bitset"* %YMM0.i264 to i8*
  %8457 = load i64, i64* %RAX.i262
  %8458 = load i64, i64* %RCX.i263
  %8459 = mul i64 %8458, 4
  %8460 = add i64 %8457, 31016
  %8461 = add i64 %8460, %8459
  %8462 = load i64, i64* %PC.i261
  %8463 = add i64 %8462, 9
  store i64 %8463, i64* %PC.i261
  %8464 = inttoptr i64 %8461 to float*
  %8465 = load float, float* %8464
  %8466 = bitcast i8* %8456 to float*
  store float %8465, float* %8466, align 1
  %8467 = getelementptr inbounds i8, i8* %8456, i64 4
  %8468 = bitcast i8* %8467 to float*
  store float 0.000000e+00, float* %8468, align 1
  %8469 = getelementptr inbounds i8, i8* %8456, i64 8
  %8470 = bitcast i8* %8469 to float*
  store float 0.000000e+00, float* %8470, align 1
  %8471 = getelementptr inbounds i8, i8* %8456, i64 12
  %8472 = bitcast i8* %8471 to float*
  store float 0.000000e+00, float* %8472, align 1
  store %struct.Memory* %loadMem_42a4d3, %struct.Memory** %MEMORY
  %loadMem_42a4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 33
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %8475 to i64*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 15
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %8478 to i64*
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8480 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8479, i64 0, i64 1
  %YMM1.i260 = bitcast %union.VectorReg* %8480 to %"class.std::bitset"*
  %8481 = bitcast %"class.std::bitset"* %YMM1.i260 to i8*
  %8482 = load i64, i64* %RBP.i259
  %8483 = sub i64 %8482, 1652
  %8484 = load i64, i64* %PC.i258
  %8485 = add i64 %8484, 8
  store i64 %8485, i64* %PC.i258
  %8486 = inttoptr i64 %8483 to float*
  %8487 = load float, float* %8486
  %8488 = bitcast i8* %8481 to float*
  store float %8487, float* %8488, align 1
  %8489 = getelementptr inbounds i8, i8* %8481, i64 4
  %8490 = bitcast i8* %8489 to float*
  store float 0.000000e+00, float* %8490, align 1
  %8491 = getelementptr inbounds i8, i8* %8481, i64 8
  %8492 = bitcast i8* %8491 to float*
  store float 0.000000e+00, float* %8492, align 1
  %8493 = getelementptr inbounds i8, i8* %8481, i64 12
  %8494 = bitcast i8* %8493 to float*
  store float 0.000000e+00, float* %8494, align 1
  store %struct.Memory* %loadMem_42a4dc, %struct.Memory** %MEMORY
  %loadMem_42a4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 33
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %8497 to i64*
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8499 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8498, i64 0, i64 0
  %XMM0.i254 = bitcast %union.VectorReg* %8499 to %union.vec128_t*
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8501 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8500, i64 0, i64 1
  %XMM1.i255 = bitcast %union.VectorReg* %8501 to %union.vec128_t*
  %8502 = bitcast %union.vec128_t* %XMM1.i255 to i8*
  %8503 = bitcast %union.vec128_t* %XMM0.i254 to i8*
  %8504 = load i64, i64* %PC.i253
  %8505 = add i64 %8504, 3
  store i64 %8505, i64* %PC.i253
  %8506 = bitcast i8* %8502 to <2 x float>*
  %8507 = load <2 x float>, <2 x float>* %8506, align 1
  %8508 = extractelement <2 x float> %8507, i32 0
  %8509 = bitcast i8* %8503 to <2 x float>*
  %8510 = load <2 x float>, <2 x float>* %8509, align 1
  %8511 = extractelement <2 x float> %8510, i32 0
  %8512 = fcmp uno float %8508, %8511
  br i1 %8512, label %8513, label %8525

; <label>:8513:                                   ; preds = %block_.L_42a4cb
  %8514 = fadd float %8508, %8511
  %8515 = bitcast float %8514 to i32
  %8516 = and i32 %8515, 2143289344
  %8517 = icmp eq i32 %8516, 2139095040
  %8518 = and i32 %8515, 4194303
  %8519 = icmp ne i32 %8518, 0
  %8520 = and i1 %8517, %8519
  br i1 %8520, label %8521, label %8531

; <label>:8521:                                   ; preds = %8513
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8523 = load i64, i64* %8522, align 8
  %8524 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8523, %struct.Memory* %loadMem_42a4e4)
  br label %routine_ucomiss__xmm0___xmm1.exit

; <label>:8525:                                   ; preds = %block_.L_42a4cb
  %8526 = fcmp ogt float %8508, %8511
  br i1 %8526, label %8531, label %8527

; <label>:8527:                                   ; preds = %8525
  %8528 = fcmp olt float %8508, %8511
  br i1 %8528, label %8531, label %8529

; <label>:8529:                                   ; preds = %8527
  %8530 = fcmp oeq float %8508, %8511
  br i1 %8530, label %8531, label %8538

; <label>:8531:                                   ; preds = %8529, %8527, %8525, %8513
  %8532 = phi i8 [ 0, %8525 ], [ 0, %8527 ], [ 1, %8529 ], [ 1, %8513 ]
  %8533 = phi i8 [ 0, %8525 ], [ 0, %8527 ], [ 0, %8529 ], [ 1, %8513 ]
  %8534 = phi i8 [ 0, %8525 ], [ 1, %8527 ], [ 0, %8529 ], [ 1, %8513 ]
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8532, i8* %8535, align 1
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8533, i8* %8536, align 1
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8534, i8* %8537, align 1
  br label %8538

; <label>:8538:                                   ; preds = %8531, %8529
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8539, align 1
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8540, align 1
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8541, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit

routine_ucomiss__xmm0___xmm1.exit:                ; preds = %8521, %8538
  %8542 = phi %struct.Memory* [ %8524, %8521 ], [ %loadMem_42a4e4, %8538 ]
  store %struct.Memory* %8542, %struct.Memory** %MEMORY
  %loadMem_42a4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %8545 to i64*
  %8546 = load i64, i64* %PC.i252
  %8547 = add i64 %8546, 27
  %8548 = load i64, i64* %PC.i252
  %8549 = add i64 %8548, 6
  %8550 = load i64, i64* %PC.i252
  %8551 = add i64 %8550, 6
  store i64 %8551, i64* %PC.i252
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8553 = load i8, i8* %8552, align 1
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8555 = load i8, i8* %8554, align 1
  %8556 = or i8 %8555, %8553
  %8557 = icmp ne i8 %8556, 0
  %8558 = zext i1 %8557 to i8
  store i8 %8558, i8* %BRANCH_TAKEN, align 1
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8560 = select i1 %8557, i64 %8547, i64 %8549
  store i64 %8560, i64* %8559, align 8
  store %struct.Memory* %loadMem_42a4e7, %struct.Memory** %MEMORY
  %loadBr_42a4e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a4e7 = icmp eq i8 %loadBr_42a4e7, 1
  br i1 %cmpBr_42a4e7, label %block_.L_42a502, label %block_42a4ed

block_42a4ed:                                     ; preds = %routine_ucomiss__xmm0___xmm1.exit
  %loadMem_42a4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 33
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %8563 to i64*
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8565 = getelementptr inbounds %struct.GPR, %struct.GPR* %8564, i32 0, i32 15
  %8566 = getelementptr inbounds %struct.Reg, %struct.Reg* %8565, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %8566 to i64*
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8567, i64 0, i64 0
  %YMM0.i251 = bitcast %union.VectorReg* %8568 to %"class.std::bitset"*
  %8569 = bitcast %"class.std::bitset"* %YMM0.i251 to i8*
  %8570 = load i64, i64* %RBP.i250
  %8571 = sub i64 %8570, 1652
  %8572 = load i64, i64* %PC.i249
  %8573 = add i64 %8572, 8
  store i64 %8573, i64* %PC.i249
  %8574 = inttoptr i64 %8571 to float*
  %8575 = load float, float* %8574
  %8576 = bitcast i8* %8569 to float*
  store float %8575, float* %8576, align 1
  %8577 = getelementptr inbounds i8, i8* %8569, i64 4
  %8578 = bitcast i8* %8577 to float*
  store float 0.000000e+00, float* %8578, align 1
  %8579 = getelementptr inbounds i8, i8* %8569, i64 8
  %8580 = bitcast i8* %8579 to float*
  store float 0.000000e+00, float* %8580, align 1
  %8581 = getelementptr inbounds i8, i8* %8569, i64 12
  %8582 = bitcast i8* %8581 to float*
  store float 0.000000e+00, float* %8582, align 1
  store %struct.Memory* %loadMem_42a4ed, %struct.Memory** %MEMORY
  %loadMem_42a4f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 33
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 15
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RBP.i247 = bitcast %union.anon* %8588 to i64*
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8589, i64 0, i64 0
  %XMM0.i248 = bitcast %union.VectorReg* %8590 to %union.vec128_t*
  %8591 = load i64, i64* %RBP.i247
  %8592 = sub i64 %8591, 1732
  %8593 = bitcast %union.vec128_t* %XMM0.i248 to i8*
  %8594 = load i64, i64* %PC.i246
  %8595 = add i64 %8594, 8
  store i64 %8595, i64* %PC.i246
  %8596 = bitcast i8* %8593 to <2 x float>*
  %8597 = load <2 x float>, <2 x float>* %8596, align 1
  %8598 = extractelement <2 x float> %8597, i32 0
  %8599 = inttoptr i64 %8592 to float*
  store float %8598, float* %8599
  store %struct.Memory* %loadMem_42a4f5, %struct.Memory** %MEMORY
  %loadMem_42a4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8601 = getelementptr inbounds %struct.GPR, %struct.GPR* %8600, i32 0, i32 33
  %8602 = getelementptr inbounds %struct.Reg, %struct.Reg* %8601, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %8602 to i64*
  %8603 = load i64, i64* %PC.i245
  %8604 = add i64 %8603, 30
  %8605 = load i64, i64* %PC.i245
  %8606 = add i64 %8605, 5
  store i64 %8606, i64* %PC.i245
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8604, i64* %8607, align 8
  store %struct.Memory* %loadMem_42a4fd, %struct.Memory** %MEMORY
  br label %block_.L_42a51b

block_.L_42a502:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit
  %loadMem_42a502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 1
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 15
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RBP.i244 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RBP.i244
  %8618 = sub i64 %8617, 8
  %8619 = load i64, i64* %PC.i242
  %8620 = add i64 %8619, 4
  store i64 %8620, i64* %PC.i242
  %8621 = inttoptr i64 %8618 to i64*
  %8622 = load i64, i64* %8621
  store i64 %8622, i64* %RAX.i243, align 8
  store %struct.Memory* %loadMem_42a502, %struct.Memory** %MEMORY
  %loadMem_42a506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 33
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %8625 to i64*
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 5
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %RCX.i240 = bitcast %union.anon* %8628 to i64*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8630 = getelementptr inbounds %struct.GPR, %struct.GPR* %8629, i32 0, i32 15
  %8631 = getelementptr inbounds %struct.Reg, %struct.Reg* %8630, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %8631 to i64*
  %8632 = load i64, i64* %RBP.i241
  %8633 = sub i64 %8632, 12
  %8634 = load i64, i64* %PC.i239
  %8635 = add i64 %8634, 4
  store i64 %8635, i64* %PC.i239
  %8636 = inttoptr i64 %8633 to i32*
  %8637 = load i32, i32* %8636
  %8638 = sext i32 %8637 to i64
  store i64 %8638, i64* %RCX.i240, align 8
  store %struct.Memory* %loadMem_42a506, %struct.Memory** %MEMORY
  %loadMem_42a50a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8640 = getelementptr inbounds %struct.GPR, %struct.GPR* %8639, i32 0, i32 33
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %8641 to i64*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 1
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %8644 to i64*
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8646 = getelementptr inbounds %struct.GPR, %struct.GPR* %8645, i32 0, i32 5
  %8647 = getelementptr inbounds %struct.Reg, %struct.Reg* %8646, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %8647 to i64*
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8649 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8648, i64 0, i64 0
  %YMM0.i238 = bitcast %union.VectorReg* %8649 to %"class.std::bitset"*
  %8650 = bitcast %"class.std::bitset"* %YMM0.i238 to i8*
  %8651 = load i64, i64* %RAX.i236
  %8652 = load i64, i64* %RCX.i237
  %8653 = mul i64 %8652, 4
  %8654 = add i64 %8651, 31016
  %8655 = add i64 %8654, %8653
  %8656 = load i64, i64* %PC.i235
  %8657 = add i64 %8656, 9
  store i64 %8657, i64* %PC.i235
  %8658 = inttoptr i64 %8655 to float*
  %8659 = load float, float* %8658
  %8660 = bitcast i8* %8650 to float*
  store float %8659, float* %8660, align 1
  %8661 = getelementptr inbounds i8, i8* %8650, i64 4
  %8662 = bitcast i8* %8661 to float*
  store float 0.000000e+00, float* %8662, align 1
  %8663 = getelementptr inbounds i8, i8* %8650, i64 8
  %8664 = bitcast i8* %8663 to float*
  store float 0.000000e+00, float* %8664, align 1
  %8665 = getelementptr inbounds i8, i8* %8650, i64 12
  %8666 = bitcast i8* %8665 to float*
  store float 0.000000e+00, float* %8666, align 1
  store %struct.Memory* %loadMem_42a50a, %struct.Memory** %MEMORY
  %loadMem_42a513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 33
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %8669 to i64*
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 15
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %RBP.i233 = bitcast %union.anon* %8672 to i64*
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8674 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8673, i64 0, i64 0
  %XMM0.i234 = bitcast %union.VectorReg* %8674 to %union.vec128_t*
  %8675 = load i64, i64* %RBP.i233
  %8676 = sub i64 %8675, 1732
  %8677 = bitcast %union.vec128_t* %XMM0.i234 to i8*
  %8678 = load i64, i64* %PC.i232
  %8679 = add i64 %8678, 8
  store i64 %8679, i64* %PC.i232
  %8680 = bitcast i8* %8677 to <2 x float>*
  %8681 = load <2 x float>, <2 x float>* %8680, align 1
  %8682 = extractelement <2 x float> %8681, i32 0
  %8683 = inttoptr i64 %8676 to float*
  store float %8682, float* %8683
  store %struct.Memory* %loadMem_42a513, %struct.Memory** %MEMORY
  br label %block_.L_42a51b

block_.L_42a51b:                                  ; preds = %block_.L_42a502, %block_42a4ed
  %loadMem_42a51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8685 = getelementptr inbounds %struct.GPR, %struct.GPR* %8684, i32 0, i32 33
  %8686 = getelementptr inbounds %struct.Reg, %struct.Reg* %8685, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %8686 to i64*
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8688 = getelementptr inbounds %struct.GPR, %struct.GPR* %8687, i32 0, i32 15
  %8689 = getelementptr inbounds %struct.Reg, %struct.Reg* %8688, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %8689 to i64*
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8691 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8690, i64 0, i64 0
  %YMM0.i231 = bitcast %union.VectorReg* %8691 to %"class.std::bitset"*
  %8692 = bitcast %"class.std::bitset"* %YMM0.i231 to i8*
  %8693 = load i64, i64* %RBP.i230
  %8694 = sub i64 %8693, 1732
  %8695 = load i64, i64* %PC.i229
  %8696 = add i64 %8695, 8
  store i64 %8696, i64* %PC.i229
  %8697 = inttoptr i64 %8694 to float*
  %8698 = load float, float* %8697
  %8699 = bitcast i8* %8692 to float*
  store float %8698, float* %8699, align 1
  %8700 = getelementptr inbounds i8, i8* %8692, i64 4
  %8701 = bitcast i8* %8700 to float*
  store float 0.000000e+00, float* %8701, align 1
  %8702 = getelementptr inbounds i8, i8* %8692, i64 8
  %8703 = bitcast i8* %8702 to float*
  store float 0.000000e+00, float* %8703, align 1
  %8704 = getelementptr inbounds i8, i8* %8692, i64 12
  %8705 = bitcast i8* %8704 to float*
  store float 0.000000e+00, float* %8705, align 1
  store %struct.Memory* %loadMem_42a51b, %struct.Memory** %MEMORY
  %loadMem_42a523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8707 = getelementptr inbounds %struct.GPR, %struct.GPR* %8706, i32 0, i32 33
  %8708 = getelementptr inbounds %struct.Reg, %struct.Reg* %8707, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %8708 to i64*
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8710 = getelementptr inbounds %struct.GPR, %struct.GPR* %8709, i32 0, i32 15
  %8711 = getelementptr inbounds %struct.Reg, %struct.Reg* %8710, i32 0, i32 0
  %RBP.i227 = bitcast %union.anon* %8711 to i64*
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8713 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8712, i64 0, i64 0
  %XMM0.i228 = bitcast %union.VectorReg* %8713 to %union.vec128_t*
  %8714 = load i64, i64* %RBP.i227
  %8715 = sub i64 %8714, 1728
  %8716 = bitcast %union.vec128_t* %XMM0.i228 to i8*
  %8717 = load i64, i64* %PC.i226
  %8718 = add i64 %8717, 8
  store i64 %8718, i64* %PC.i226
  %8719 = bitcast i8* %8716 to <2 x float>*
  %8720 = load <2 x float>, <2 x float>* %8719, align 1
  %8721 = extractelement <2 x float> %8720, i32 0
  %8722 = inttoptr i64 %8715 to float*
  store float %8721, float* %8722
  store %struct.Memory* %loadMem_42a523, %struct.Memory** %MEMORY
  br label %block_.L_42a52b

block_.L_42a52b:                                  ; preds = %block_.L_42a51b, %block_42a4bb
  %loadMem_42a52b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 15
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %8728 to i64*
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8730 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8729, i64 0, i64 0
  %YMM0.i225 = bitcast %union.VectorReg* %8730 to %"class.std::bitset"*
  %8731 = bitcast %"class.std::bitset"* %YMM0.i225 to i8*
  %8732 = load i64, i64* %RBP.i224
  %8733 = sub i64 %8732, 1728
  %8734 = load i64, i64* %PC.i223
  %8735 = add i64 %8734, 8
  store i64 %8735, i64* %PC.i223
  %8736 = inttoptr i64 %8733 to float*
  %8737 = load float, float* %8736
  %8738 = bitcast i8* %8731 to float*
  store float %8737, float* %8738, align 1
  %8739 = getelementptr inbounds i8, i8* %8731, i64 4
  %8740 = bitcast i8* %8739 to float*
  store float 0.000000e+00, float* %8740, align 1
  %8741 = getelementptr inbounds i8, i8* %8731, i64 8
  %8742 = bitcast i8* %8741 to float*
  store float 0.000000e+00, float* %8742, align 1
  %8743 = getelementptr inbounds i8, i8* %8731, i64 12
  %8744 = bitcast i8* %8743 to float*
  store float 0.000000e+00, float* %8744, align 1
  store %struct.Memory* %loadMem_42a52b, %struct.Memory** %MEMORY
  %loadMem_42a533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 33
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %8747 to i64*
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8749 = getelementptr inbounds %struct.GPR, %struct.GPR* %8748, i32 0, i32 1
  %8750 = getelementptr inbounds %struct.Reg, %struct.Reg* %8749, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %8750 to i64*
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8752 = getelementptr inbounds %struct.GPR, %struct.GPR* %8751, i32 0, i32 15
  %8753 = getelementptr inbounds %struct.Reg, %struct.Reg* %8752, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %8753 to i64*
  %8754 = load i64, i64* %RBP.i222
  %8755 = sub i64 %8754, 8
  %8756 = load i64, i64* %PC.i220
  %8757 = add i64 %8756, 4
  store i64 %8757, i64* %PC.i220
  %8758 = inttoptr i64 %8755 to i64*
  %8759 = load i64, i64* %8758
  store i64 %8759, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_42a533, %struct.Memory** %MEMORY
  %loadMem_42a537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8761 = getelementptr inbounds %struct.GPR, %struct.GPR* %8760, i32 0, i32 33
  %8762 = getelementptr inbounds %struct.Reg, %struct.Reg* %8761, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8762 to i64*
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 5
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %RCX.i218 = bitcast %union.anon* %8765 to i64*
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 15
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %8768 to i64*
  %8769 = load i64, i64* %RBP.i219
  %8770 = sub i64 %8769, 12
  %8771 = load i64, i64* %PC.i217
  %8772 = add i64 %8771, 4
  store i64 %8772, i64* %PC.i217
  %8773 = inttoptr i64 %8770 to i32*
  %8774 = load i32, i32* %8773
  %8775 = sext i32 %8774 to i64
  store i64 %8775, i64* %RCX.i218, align 8
  store %struct.Memory* %loadMem_42a537, %struct.Memory** %MEMORY
  %loadMem_42a53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8777 = getelementptr inbounds %struct.GPR, %struct.GPR* %8776, i32 0, i32 33
  %8778 = getelementptr inbounds %struct.Reg, %struct.Reg* %8777, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8778 to i64*
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 1
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 5
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %8784 to i64*
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8786 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8785, i64 0, i64 0
  %XMM0.i216 = bitcast %union.VectorReg* %8786 to %union.vec128_t*
  %8787 = load i64, i64* %RAX.i214
  %8788 = load i64, i64* %RCX.i215
  %8789 = mul i64 %8788, 4
  %8790 = add i64 %8787, 31016
  %8791 = add i64 %8790, %8789
  %8792 = bitcast %union.vec128_t* %XMM0.i216 to i8*
  %8793 = load i64, i64* %PC.i213
  %8794 = add i64 %8793, 9
  store i64 %8794, i64* %PC.i213
  %8795 = bitcast i8* %8792 to <2 x float>*
  %8796 = load <2 x float>, <2 x float>* %8795, align 1
  %8797 = extractelement <2 x float> %8796, i32 0
  %8798 = inttoptr i64 %8791 to float*
  store float %8797, float* %8798
  store %struct.Memory* %loadMem_42a53b, %struct.Memory** %MEMORY
  br label %block_.L_42a544

block_.L_42a544:                                  ; preds = %block_.L_42a52b, %block_.L_42a3b5
  %loadMem_42a544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8800 = getelementptr inbounds %struct.GPR, %struct.GPR* %8799, i32 0, i32 33
  %8801 = getelementptr inbounds %struct.Reg, %struct.Reg* %8800, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %8801 to i64*
  %8802 = load i64, i64* %PC.i212
  %8803 = add i64 %8802, 5
  %8804 = load i64, i64* %PC.i212
  %8805 = add i64 %8804, 5
  store i64 %8805, i64* %PC.i212
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8803, i64* %8806, align 8
  store %struct.Memory* %loadMem_42a544, %struct.Memory** %MEMORY
  br label %block_.L_42a549

block_.L_42a549:                                  ; preds = %block_.L_42a544, %block_.L_42a3b0
  %loadMem_42a549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 33
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %8809 to i64*
  %8810 = load i64, i64* %PC.i211
  %8811 = add i64 %8810, 5
  %8812 = load i64, i64* %PC.i211
  %8813 = add i64 %8812, 5
  store i64 %8813, i64* %PC.i211
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8811, i64* %8814, align 8
  store %struct.Memory* %loadMem_42a549, %struct.Memory** %MEMORY
  br label %block_.L_42a54e

block_.L_42a54e:                                  ; preds = %block_.L_42a549, %block_42a1e9
  %loadMem_42a54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 33
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %8817 to i64*
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 1
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %RAX.i209 = bitcast %union.anon* %8820 to i64*
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8822 = getelementptr inbounds %struct.GPR, %struct.GPR* %8821, i32 0, i32 15
  %8823 = getelementptr inbounds %struct.Reg, %struct.Reg* %8822, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %8823 to i64*
  %8824 = load i64, i64* %RBP.i210
  %8825 = sub i64 %8824, 1640
  %8826 = load i64, i64* %PC.i208
  %8827 = add i64 %8826, 6
  store i64 %8827, i64* %PC.i208
  %8828 = inttoptr i64 %8825 to i32*
  %8829 = load i32, i32* %8828
  %8830 = zext i32 %8829 to i64
  store i64 %8830, i64* %RAX.i209, align 8
  store %struct.Memory* %loadMem_42a54e, %struct.Memory** %MEMORY
  %loadMem_42a554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 33
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8833 to i64*
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 1
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %8836 to i64*
  %8837 = load i64, i64* %RAX.i207
  %8838 = load i64, i64* %PC.i206
  %8839 = add i64 %8838, 3
  store i64 %8839, i64* %PC.i206
  %8840 = trunc i64 %8837 to i32
  %8841 = add i32 1, %8840
  %8842 = zext i32 %8841 to i64
  store i64 %8842, i64* %RAX.i207, align 8
  %8843 = icmp ult i32 %8841, %8840
  %8844 = icmp ult i32 %8841, 1
  %8845 = or i1 %8843, %8844
  %8846 = zext i1 %8845 to i8
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8846, i8* %8847, align 1
  %8848 = and i32 %8841, 255
  %8849 = call i32 @llvm.ctpop.i32(i32 %8848)
  %8850 = trunc i32 %8849 to i8
  %8851 = and i8 %8850, 1
  %8852 = xor i8 %8851, 1
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8852, i8* %8853, align 1
  %8854 = xor i64 1, %8837
  %8855 = trunc i64 %8854 to i32
  %8856 = xor i32 %8855, %8841
  %8857 = lshr i32 %8856, 4
  %8858 = trunc i32 %8857 to i8
  %8859 = and i8 %8858, 1
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8859, i8* %8860, align 1
  %8861 = icmp eq i32 %8841, 0
  %8862 = zext i1 %8861 to i8
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8862, i8* %8863, align 1
  %8864 = lshr i32 %8841, 31
  %8865 = trunc i32 %8864 to i8
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8865, i8* %8866, align 1
  %8867 = lshr i32 %8840, 31
  %8868 = xor i32 %8864, %8867
  %8869 = add i32 %8868, %8864
  %8870 = icmp eq i32 %8869, 2
  %8871 = zext i1 %8870 to i8
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8871, i8* %8872, align 1
  store %struct.Memory* %loadMem_42a554, %struct.Memory** %MEMORY
  %loadMem_42a557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 33
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 1
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %EAX.i204 = bitcast %union.anon* %8878 to i32*
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 15
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %8881 to i64*
  %8882 = load i64, i64* %RBP.i205
  %8883 = sub i64 %8882, 1640
  %8884 = load i32, i32* %EAX.i204
  %8885 = zext i32 %8884 to i64
  %8886 = load i64, i64* %PC.i203
  %8887 = add i64 %8886, 6
  store i64 %8887, i64* %PC.i203
  %8888 = inttoptr i64 %8883 to i32*
  store i32 %8884, i32* %8888
  store %struct.Memory* %loadMem_42a557, %struct.Memory** %MEMORY
  %loadMem_42a55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 33
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8891 to i64*
  %8892 = load i64, i64* %PC.i202
  %8893 = add i64 %8892, -934
  %8894 = load i64, i64* %PC.i202
  %8895 = add i64 %8894, 5
  store i64 %8895, i64* %PC.i202
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8893, i64* %8896, align 8
  store %struct.Memory* %loadMem_42a55d, %struct.Memory** %MEMORY
  br label %block_.L_42a1b7

block_.L_42a562:                                  ; preds = %block_.L_42a1b7
  %loadMem_42a562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 33
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8899 to i64*
  %8900 = load i64, i64* %PC.i201
  %8901 = add i64 %8900, 5
  %8902 = load i64, i64* %PC.i201
  %8903 = add i64 %8902, 5
  store i64 %8903, i64* %PC.i201
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8901, i64* %8904, align 8
  store %struct.Memory* %loadMem_42a562, %struct.Memory** %MEMORY
  br label %block_.L_42a567

block_.L_42a567:                                  ; preds = %block_.L_42a562, %block_42a19b
  %loadMem_42a567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 33
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8907 to i64*
  %8908 = load i64, i64* %PC.i200
  %8909 = add i64 %8908, 5
  %8910 = load i64, i64* %PC.i200
  %8911 = add i64 %8910, 5
  store i64 %8911, i64* %PC.i200
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8909, i64* %8912, align 8
  store %struct.Memory* %loadMem_42a567, %struct.Memory** %MEMORY
  br label %block_.L_42a56c

block_.L_42a56c:                                  ; preds = %block_.L_42a567, %block_42a186
  %loadMem_42a56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 33
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %8915 to i64*
  %8916 = load i64, i64* %PC.i199
  %8917 = add i64 %8916, 5
  %8918 = load i64, i64* %PC.i199
  %8919 = add i64 %8918, 5
  store i64 %8919, i64* %PC.i199
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8917, i64* %8920, align 8
  store %struct.Memory* %loadMem_42a56c, %struct.Memory** %MEMORY
  br label %block_.L_42a571

block_.L_42a571:                                  ; preds = %block_.L_42a56c
  %loadMem_42a571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 33
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %8923 to i64*
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8925 = getelementptr inbounds %struct.GPR, %struct.GPR* %8924, i32 0, i32 1
  %8926 = getelementptr inbounds %struct.Reg, %struct.Reg* %8925, i32 0, i32 0
  %RAX.i197 = bitcast %union.anon* %8926 to i64*
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 15
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %8929 to i64*
  %8930 = load i64, i64* %RBP.i198
  %8931 = sub i64 %8930, 12
  %8932 = load i64, i64* %PC.i196
  %8933 = add i64 %8932, 3
  store i64 %8933, i64* %PC.i196
  %8934 = inttoptr i64 %8931 to i32*
  %8935 = load i32, i32* %8934
  %8936 = zext i32 %8935 to i64
  store i64 %8936, i64* %RAX.i197, align 8
  store %struct.Memory* %loadMem_42a571, %struct.Memory** %MEMORY
  %loadMem_42a574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8938 = getelementptr inbounds %struct.GPR, %struct.GPR* %8937, i32 0, i32 33
  %8939 = getelementptr inbounds %struct.Reg, %struct.Reg* %8938, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8939 to i64*
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 1
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %RAX.i195 = bitcast %union.anon* %8942 to i64*
  %8943 = load i64, i64* %RAX.i195
  %8944 = load i64, i64* %PC.i194
  %8945 = add i64 %8944, 3
  store i64 %8945, i64* %PC.i194
  %8946 = trunc i64 %8943 to i32
  %8947 = add i32 1, %8946
  %8948 = zext i32 %8947 to i64
  store i64 %8948, i64* %RAX.i195, align 8
  %8949 = icmp ult i32 %8947, %8946
  %8950 = icmp ult i32 %8947, 1
  %8951 = or i1 %8949, %8950
  %8952 = zext i1 %8951 to i8
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8952, i8* %8953, align 1
  %8954 = and i32 %8947, 255
  %8955 = call i32 @llvm.ctpop.i32(i32 %8954)
  %8956 = trunc i32 %8955 to i8
  %8957 = and i8 %8956, 1
  %8958 = xor i8 %8957, 1
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8958, i8* %8959, align 1
  %8960 = xor i64 1, %8943
  %8961 = trunc i64 %8960 to i32
  %8962 = xor i32 %8961, %8947
  %8963 = lshr i32 %8962, 4
  %8964 = trunc i32 %8963 to i8
  %8965 = and i8 %8964, 1
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8965, i8* %8966, align 1
  %8967 = icmp eq i32 %8947, 0
  %8968 = zext i1 %8967 to i8
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8968, i8* %8969, align 1
  %8970 = lshr i32 %8947, 31
  %8971 = trunc i32 %8970 to i8
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8971, i8* %8972, align 1
  %8973 = lshr i32 %8946, 31
  %8974 = xor i32 %8970, %8973
  %8975 = add i32 %8974, %8970
  %8976 = icmp eq i32 %8975, 2
  %8977 = zext i1 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8977, i8* %8978, align 1
  store %struct.Memory* %loadMem_42a574, %struct.Memory** %MEMORY
  %loadMem_42a577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 1
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %EAX.i192 = bitcast %union.anon* %8984 to i32*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 15
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %8987 to i64*
  %8988 = load i64, i64* %RBP.i193
  %8989 = sub i64 %8988, 12
  %8990 = load i32, i32* %EAX.i192
  %8991 = zext i32 %8990 to i64
  %8992 = load i64, i64* %PC.i191
  %8993 = add i64 %8992, 3
  store i64 %8993, i64* %PC.i191
  %8994 = inttoptr i64 %8989 to i32*
  store i32 %8990, i32* %8994
  store %struct.Memory* %loadMem_42a577, %struct.Memory** %MEMORY
  %loadMem_42a57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 33
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %8997 to i64*
  %8998 = load i64, i64* %PC.i190
  %8999 = add i64 %8998, -1025
  %9000 = load i64, i64* %PC.i190
  %9001 = add i64 %9000, 5
  store i64 %9001, i64* %PC.i190
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8999, i64* %9002, align 8
  store %struct.Memory* %loadMem_42a57a, %struct.Memory** %MEMORY
  br label %block_.L_42a179

block_.L_42a57f:                                  ; preds = %block_.L_42a179
  %loadMem_42a57f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 33
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %9005 to i64*
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 15
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %RBP.i189 = bitcast %union.anon* %9008 to i64*
  %9009 = load i64, i64* %RBP.i189
  %9010 = sub i64 %9009, 12
  %9011 = load i64, i64* %PC.i188
  %9012 = add i64 %9011, 7
  store i64 %9012, i64* %PC.i188
  %9013 = inttoptr i64 %9010 to i32*
  store i32 21, i32* %9013
  store %struct.Memory* %loadMem_42a57f, %struct.Memory** %MEMORY
  br label %block_.L_42a586

block_.L_42a586:                                  ; preds = %block_.L_42a6eb, %block_.L_42a57f
  %loadMem_42a586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 33
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %9016 to i64*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 15
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %9019 to i64*
  %9020 = load i64, i64* %RBP.i187
  %9021 = sub i64 %9020, 12
  %9022 = load i64, i64* %PC.i186
  %9023 = add i64 %9022, 7
  store i64 %9023, i64* %PC.i186
  %9024 = inttoptr i64 %9021 to i32*
  %9025 = load i32, i32* %9024
  %9026 = sub i32 %9025, 400
  %9027 = icmp ult i32 %9025, 400
  %9028 = zext i1 %9027 to i8
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9028, i8* %9029, align 1
  %9030 = and i32 %9026, 255
  %9031 = call i32 @llvm.ctpop.i32(i32 %9030)
  %9032 = trunc i32 %9031 to i8
  %9033 = and i8 %9032, 1
  %9034 = xor i8 %9033, 1
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9034, i8* %9035, align 1
  %9036 = xor i32 %9025, 400
  %9037 = xor i32 %9036, %9026
  %9038 = lshr i32 %9037, 4
  %9039 = trunc i32 %9038 to i8
  %9040 = and i8 %9039, 1
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9040, i8* %9041, align 1
  %9042 = icmp eq i32 %9026, 0
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9043, i8* %9044, align 1
  %9045 = lshr i32 %9026, 31
  %9046 = trunc i32 %9045 to i8
  %9047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9046, i8* %9047, align 1
  %9048 = lshr i32 %9025, 31
  %9049 = xor i32 %9045, %9048
  %9050 = add i32 %9049, %9048
  %9051 = icmp eq i32 %9050, 2
  %9052 = zext i1 %9051 to i8
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9052, i8* %9053, align 1
  store %struct.Memory* %loadMem_42a586, %struct.Memory** %MEMORY
  %loadMem_42a58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9055 = getelementptr inbounds %struct.GPR, %struct.GPR* %9054, i32 0, i32 33
  %9056 = getelementptr inbounds %struct.Reg, %struct.Reg* %9055, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %9056 to i64*
  %9057 = load i64, i64* %PC.i185
  %9058 = add i64 %9057, 364
  %9059 = load i64, i64* %PC.i185
  %9060 = add i64 %9059, 6
  %9061 = load i64, i64* %PC.i185
  %9062 = add i64 %9061, 6
  store i64 %9062, i64* %PC.i185
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9064 = load i8, i8* %9063, align 1
  %9065 = icmp ne i8 %9064, 0
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9067 = load i8, i8* %9066, align 1
  %9068 = icmp ne i8 %9067, 0
  %9069 = xor i1 %9065, %9068
  %9070 = xor i1 %9069, true
  %9071 = zext i1 %9070 to i8
  store i8 %9071, i8* %BRANCH_TAKEN, align 1
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9073 = select i1 %9069, i64 %9060, i64 %9058
  store i64 %9073, i64* %9072, align 8
  store %struct.Memory* %loadMem_42a58d, %struct.Memory** %MEMORY
  %loadBr_42a58d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a58d = icmp eq i8 %loadBr_42a58d, 1
  br i1 %cmpBr_42a58d, label %block_.L_42a6f9, label %block_42a593

block_42a593:                                     ; preds = %block_.L_42a586
  %loadMem_42a593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 33
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %9076 to i64*
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 1
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %9079 to i64*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 15
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %RBP.i184 = bitcast %union.anon* %9082 to i64*
  %9083 = load i64, i64* %RBP.i184
  %9084 = sub i64 %9083, 12
  %9085 = load i64, i64* %PC.i182
  %9086 = add i64 %9085, 4
  store i64 %9086, i64* %PC.i182
  %9087 = inttoptr i64 %9084 to i32*
  %9088 = load i32, i32* %9087
  %9089 = sext i32 %9088 to i64
  store i64 %9089, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_42a593, %struct.Memory** %MEMORY
  %loadMem_42a597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 33
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 1
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RAX.i180 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 5
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %RAX.i180
  %9100 = add i64 %9099, 12099168
  %9101 = load i64, i64* %PC.i179
  %9102 = add i64 %9101, 8
  store i64 %9102, i64* %PC.i179
  %9103 = inttoptr i64 %9100 to i8*
  %9104 = load i8, i8* %9103
  %9105 = zext i8 %9104 to i64
  store i64 %9105, i64* %RCX.i181, align 8
  store %struct.Memory* %loadMem_42a597, %struct.Memory** %MEMORY
  %loadMem_42a59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 5
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %ECX.i178 = bitcast %union.anon* %9111 to i32*
  %9112 = load i32, i32* %ECX.i178
  %9113 = zext i32 %9112 to i64
  %9114 = load i64, i64* %PC.i177
  %9115 = add i64 %9114, 3
  store i64 %9115, i64* %PC.i177
  %9116 = sub i32 %9112, 3
  %9117 = icmp ult i32 %9112, 3
  %9118 = zext i1 %9117 to i8
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9118, i8* %9119, align 1
  %9120 = and i32 %9116, 255
  %9121 = call i32 @llvm.ctpop.i32(i32 %9120)
  %9122 = trunc i32 %9121 to i8
  %9123 = and i8 %9122, 1
  %9124 = xor i8 %9123, 1
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9124, i8* %9125, align 1
  %9126 = xor i64 3, %9113
  %9127 = trunc i64 %9126 to i32
  %9128 = xor i32 %9127, %9116
  %9129 = lshr i32 %9128, 4
  %9130 = trunc i32 %9129 to i8
  %9131 = and i8 %9130, 1
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9131, i8* %9132, align 1
  %9133 = icmp eq i32 %9116, 0
  %9134 = zext i1 %9133 to i8
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9134, i8* %9135, align 1
  %9136 = lshr i32 %9116, 31
  %9137 = trunc i32 %9136 to i8
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9137, i8* %9138, align 1
  %9139 = lshr i32 %9112, 31
  %9140 = xor i32 %9136, %9139
  %9141 = add i32 %9140, %9139
  %9142 = icmp eq i32 %9141, 2
  %9143 = zext i1 %9142 to i8
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9143, i8* %9144, align 1
  store %struct.Memory* %loadMem_42a59f, %struct.Memory** %MEMORY
  %loadMem_42a5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9146 = getelementptr inbounds %struct.GPR, %struct.GPR* %9145, i32 0, i32 33
  %9147 = getelementptr inbounds %struct.Reg, %struct.Reg* %9146, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9147 to i64*
  %9148 = load i64, i64* %PC.i176
  %9149 = add i64 %9148, 324
  %9150 = load i64, i64* %PC.i176
  %9151 = add i64 %9150, 6
  %9152 = load i64, i64* %PC.i176
  %9153 = add i64 %9152, 6
  store i64 %9153, i64* %PC.i176
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9155 = load i8, i8* %9154, align 1
  store i8 %9155, i8* %BRANCH_TAKEN, align 1
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9157 = icmp ne i8 %9155, 0
  %9158 = select i1 %9157, i64 %9149, i64 %9151
  store i64 %9158, i64* %9156, align 8
  store %struct.Memory* %loadMem_42a5a2, %struct.Memory** %MEMORY
  %loadBr_42a5a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a5a2 = icmp eq i8 %loadBr_42a5a2, 1
  br i1 %cmpBr_42a5a2, label %block_.L_42a6e6, label %block_42a5a8

block_42a5a8:                                     ; preds = %block_42a593
  %loadMem_42a5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 33
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 1
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %9164 to i64*
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 15
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %9167 to i64*
  %9168 = load i64, i64* %RBP.i175
  %9169 = sub i64 %9168, 8
  %9170 = load i64, i64* %PC.i173
  %9171 = add i64 %9170, 4
  store i64 %9171, i64* %PC.i173
  %9172 = inttoptr i64 %9169 to i64*
  %9173 = load i64, i64* %9172
  store i64 %9173, i64* %RAX.i174, align 8
  store %struct.Memory* %loadMem_42a5a8, %struct.Memory** %MEMORY
  %loadMem_42a5ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 33
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %9176 to i64*
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 5
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %RCX.i171 = bitcast %union.anon* %9179 to i64*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 15
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %RBP.i172
  %9184 = sub i64 %9183, 12
  %9185 = load i64, i64* %PC.i170
  %9186 = add i64 %9185, 4
  store i64 %9186, i64* %PC.i170
  %9187 = inttoptr i64 %9184 to i32*
  %9188 = load i32, i32* %9187
  %9189 = sext i32 %9188 to i64
  store i64 %9189, i64* %RCX.i171, align 8
  store %struct.Memory* %loadMem_42a5ac, %struct.Memory** %MEMORY
  %loadMem_42a5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 33
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %9192 to i64*
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9194 = getelementptr inbounds %struct.GPR, %struct.GPR* %9193, i32 0, i32 1
  %9195 = getelementptr inbounds %struct.Reg, %struct.Reg* %9194, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %9195 to i64*
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 5
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %RCX.i169 = bitcast %union.anon* %9198 to i64*
  %9199 = load i64, i64* %RAX.i168
  %9200 = load i64, i64* %RCX.i169
  %9201 = add i64 %9200, %9199
  %9202 = load i64, i64* %PC.i167
  %9203 = add i64 %9202, 4
  store i64 %9203, i64* %PC.i167
  %9204 = inttoptr i64 %9201 to i8*
  %9205 = load i8, i8* %9204
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9206, align 1
  %9207 = zext i8 %9205 to i32
  %9208 = call i32 @llvm.ctpop.i32(i32 %9207)
  %9209 = trunc i32 %9208 to i8
  %9210 = and i8 %9209, 1
  %9211 = xor i8 %9210, 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9211, i8* %9212, align 1
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9213, align 1
  %9214 = icmp eq i8 %9205, 0
  %9215 = zext i1 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9215, i8* %9216, align 1
  %9217 = lshr i8 %9205, 7
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9217, i8* %9218, align 1
  %9219 = lshr i8 %9205, 7
  %9220 = xor i8 %9217, %9219
  %9221 = add i8 %9220, %9219
  %9222 = icmp eq i8 %9221, 2
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9223, i8* %9224, align 1
  store %struct.Memory* %loadMem_42a5b0, %struct.Memory** %MEMORY
  %loadMem_42a5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %9227 to i64*
  %9228 = load i64, i64* %PC.i166
  %9229 = add i64 %9228, 301
  %9230 = load i64, i64* %PC.i166
  %9231 = add i64 %9230, 6
  %9232 = load i64, i64* %PC.i166
  %9233 = add i64 %9232, 6
  store i64 %9233, i64* %PC.i166
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9235 = load i8, i8* %9234, align 1
  %9236 = icmp eq i8 %9235, 0
  %9237 = zext i1 %9236 to i8
  store i8 %9237, i8* %BRANCH_TAKEN, align 1
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9239 = select i1 %9236, i64 %9229, i64 %9231
  store i64 %9239, i64* %9238, align 8
  store %struct.Memory* %loadMem_42a5b4, %struct.Memory** %MEMORY
  %loadBr_42a5b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a5b4 = icmp eq i8 %loadBr_42a5b4, 1
  br i1 %cmpBr_42a5b4, label %block_.L_42a6e1, label %block_42a5ba

block_42a5ba:                                     ; preds = %block_42a5a8
  %loadMem_42a5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9241 = getelementptr inbounds %struct.GPR, %struct.GPR* %9240, i32 0, i32 33
  %9242 = getelementptr inbounds %struct.Reg, %struct.Reg* %9241, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %9242 to i64*
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9244 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9243, i64 0, i64 0
  %YMM0.i164 = bitcast %union.VectorReg* %9244 to %"class.std::bitset"*
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9246 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9245, i64 0, i64 0
  %XMM0.i165 = bitcast %union.VectorReg* %9246 to %union.vec128_t*
  %9247 = bitcast %"class.std::bitset"* %YMM0.i164 to i8*
  %9248 = bitcast %"class.std::bitset"* %YMM0.i164 to i8*
  %9249 = bitcast %union.vec128_t* %XMM0.i165 to i8*
  %9250 = load i64, i64* %PC.i163
  %9251 = add i64 %9250, 3
  store i64 %9251, i64* %PC.i163
  %9252 = bitcast i8* %9248 to i64*
  %9253 = load i64, i64* %9252, align 1
  %9254 = getelementptr inbounds i8, i8* %9248, i64 8
  %9255 = bitcast i8* %9254 to i64*
  %9256 = load i64, i64* %9255, align 1
  %9257 = bitcast i8* %9249 to i64*
  %9258 = load i64, i64* %9257, align 1
  %9259 = getelementptr inbounds i8, i8* %9249, i64 8
  %9260 = bitcast i8* %9259 to i64*
  %9261 = load i64, i64* %9260, align 1
  %9262 = xor i64 %9258, %9253
  %9263 = xor i64 %9261, %9256
  %9264 = trunc i64 %9262 to i32
  %9265 = lshr i64 %9262, 32
  %9266 = trunc i64 %9265 to i32
  %9267 = bitcast i8* %9247 to i32*
  store i32 %9264, i32* %9267, align 1
  %9268 = getelementptr inbounds i8, i8* %9247, i64 4
  %9269 = bitcast i8* %9268 to i32*
  store i32 %9266, i32* %9269, align 1
  %9270 = trunc i64 %9263 to i32
  %9271 = getelementptr inbounds i8, i8* %9247, i64 8
  %9272 = bitcast i8* %9271 to i32*
  store i32 %9270, i32* %9272, align 1
  %9273 = lshr i64 %9263, 32
  %9274 = trunc i64 %9273 to i32
  %9275 = getelementptr inbounds i8, i8* %9247, i64 12
  %9276 = bitcast i8* %9275 to i32*
  store i32 %9274, i32* %9276, align 1
  store %struct.Memory* %loadMem_42a5ba, %struct.Memory** %MEMORY
  %loadMem_42a5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9278 = getelementptr inbounds %struct.GPR, %struct.GPR* %9277, i32 0, i32 33
  %9279 = getelementptr inbounds %struct.Reg, %struct.Reg* %9278, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %9279 to i64*
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9281 = getelementptr inbounds %struct.GPR, %struct.GPR* %9280, i32 0, i32 1
  %9282 = getelementptr inbounds %struct.Reg, %struct.Reg* %9281, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %9282 to i64*
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9284 = getelementptr inbounds %struct.GPR, %struct.GPR* %9283, i32 0, i32 15
  %9285 = getelementptr inbounds %struct.Reg, %struct.Reg* %9284, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %9285 to i64*
  %9286 = load i64, i64* %RBP.i162
  %9287 = sub i64 %9286, 8
  %9288 = load i64, i64* %PC.i160
  %9289 = add i64 %9288, 4
  store i64 %9289, i64* %PC.i160
  %9290 = inttoptr i64 %9287 to i64*
  %9291 = load i64, i64* %9290
  store i64 %9291, i64* %RAX.i161, align 8
  store %struct.Memory* %loadMem_42a5bd, %struct.Memory** %MEMORY
  %loadMem_42a5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 33
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %9294 to i64*
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9296 = getelementptr inbounds %struct.GPR, %struct.GPR* %9295, i32 0, i32 5
  %9297 = getelementptr inbounds %struct.Reg, %struct.Reg* %9296, i32 0, i32 0
  %RCX.i158 = bitcast %union.anon* %9297 to i64*
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 15
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %9300 to i64*
  %9301 = load i64, i64* %RBP.i159
  %9302 = sub i64 %9301, 12
  %9303 = load i64, i64* %PC.i157
  %9304 = add i64 %9303, 4
  store i64 %9304, i64* %PC.i157
  %9305 = inttoptr i64 %9302 to i32*
  %9306 = load i32, i32* %9305
  %9307 = sext i32 %9306 to i64
  store i64 %9307, i64* %RCX.i158, align 8
  store %struct.Memory* %loadMem_42a5c1, %struct.Memory** %MEMORY
  %loadMem_42a5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %9310 to i64*
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 1
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %9313 to i64*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 5
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %RCX.i155 = bitcast %union.anon* %9316 to i64*
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9318 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9317, i64 0, i64 1
  %YMM1.i156 = bitcast %union.VectorReg* %9318 to %"class.std::bitset"*
  %9319 = bitcast %"class.std::bitset"* %YMM1.i156 to i8*
  %9320 = load i64, i64* %RAX.i154
  %9321 = load i64, i64* %RCX.i155
  %9322 = mul i64 %9321, 4
  %9323 = add i64 %9320, 31016
  %9324 = add i64 %9323, %9322
  %9325 = load i64, i64* %PC.i153
  %9326 = add i64 %9325, 9
  store i64 %9326, i64* %PC.i153
  %9327 = inttoptr i64 %9324 to float*
  %9328 = load float, float* %9327
  %9329 = fpext float %9328 to double
  %9330 = bitcast i8* %9319 to double*
  store double %9329, double* %9330, align 1
  store %struct.Memory* %loadMem_42a5c5, %struct.Memory** %MEMORY
  %loadMem_42a5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 33
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9334, i64 0, i64 0
  %XMM0.i149 = bitcast %union.VectorReg* %9335 to %union.vec128_t*
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9336, i64 0, i64 1
  %XMM1.i150 = bitcast %union.VectorReg* %9337 to %union.vec128_t*
  %9338 = bitcast %union.vec128_t* %XMM1.i150 to i8*
  %9339 = bitcast %union.vec128_t* %XMM0.i149 to i8*
  %9340 = load i64, i64* %PC.i148
  %9341 = add i64 %9340, 4
  store i64 %9341, i64* %PC.i148
  %9342 = bitcast i8* %9338 to double*
  %9343 = load double, double* %9342, align 1
  %9344 = bitcast i8* %9339 to double*
  %9345 = load double, double* %9344, align 1
  %9346 = fcmp uno double %9343, %9345
  br i1 %9346, label %9347, label %9359

; <label>:9347:                                   ; preds = %block_42a5ba
  %9348 = fadd double %9343, %9345
  %9349 = bitcast double %9348 to i64
  %9350 = and i64 %9349, 9221120237041090560
  %9351 = icmp eq i64 %9350, 9218868437227405312
  %9352 = and i64 %9349, 2251799813685247
  %9353 = icmp ne i64 %9352, 0
  %9354 = and i1 %9351, %9353
  br i1 %9354, label %9355, label %9365

; <label>:9355:                                   ; preds = %9347
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9357 = load i64, i64* %9356, align 8
  %9358 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9357, %struct.Memory* %loadMem_42a5ce)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:9359:                                   ; preds = %block_42a5ba
  %9360 = fcmp ogt double %9343, %9345
  br i1 %9360, label %9365, label %9361

; <label>:9361:                                   ; preds = %9359
  %9362 = fcmp olt double %9343, %9345
  br i1 %9362, label %9365, label %9363

; <label>:9363:                                   ; preds = %9361
  %9364 = fcmp oeq double %9343, %9345
  br i1 %9364, label %9365, label %9372

; <label>:9365:                                   ; preds = %9363, %9361, %9359, %9347
  %9366 = phi i8 [ 0, %9359 ], [ 0, %9361 ], [ 1, %9363 ], [ 1, %9347 ]
  %9367 = phi i8 [ 0, %9359 ], [ 0, %9361 ], [ 0, %9363 ], [ 1, %9347 ]
  %9368 = phi i8 [ 0, %9359 ], [ 1, %9361 ], [ 0, %9363 ], [ 1, %9347 ]
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9366, i8* %9369, align 1
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9367, i8* %9370, align 1
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9368, i8* %9371, align 1
  br label %9372

; <label>:9372:                                   ; preds = %9365, %9363
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9373, align 1
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9374, align 1
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9375, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %9355, %9372
  %9376 = phi %struct.Memory* [ %9358, %9355 ], [ %loadMem_42a5ce, %9372 ]
  store %struct.Memory* %9376, %struct.Memory** %MEMORY
  %loadMem_42a5d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 33
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %9379 to i64*
  %9380 = load i64, i64* %PC.i147
  %9381 = add i64 %9380, 53
  %9382 = load i64, i64* %PC.i147
  %9383 = add i64 %9382, 6
  %9384 = load i64, i64* %PC.i147
  %9385 = add i64 %9384, 6
  store i64 %9385, i64* %PC.i147
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9387 = load i8, i8* %9386, align 1
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9389 = load i8, i8* %9388, align 1
  %9390 = or i8 %9389, %9387
  %9391 = icmp ne i8 %9390, 0
  %9392 = zext i1 %9391 to i8
  store i8 %9392, i8* %BRANCH_TAKEN, align 1
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9394 = select i1 %9391, i64 %9381, i64 %9383
  store i64 %9394, i64* %9393, align 8
  store %struct.Memory* %loadMem_42a5d2, %struct.Memory** %MEMORY
  %loadBr_42a5d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a5d2 = icmp eq i8 %loadBr_42a5d2, 1
  br i1 %cmpBr_42a5d2, label %block_.L_42a607, label %block_42a5d8

block_42a5d8:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_42a5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9396 = getelementptr inbounds %struct.GPR, %struct.GPR* %9395, i32 0, i32 33
  %9397 = getelementptr inbounds %struct.Reg, %struct.Reg* %9396, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %9397 to i64*
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9399 = getelementptr inbounds %struct.GPR, %struct.GPR* %9398, i32 0, i32 1
  %9400 = getelementptr inbounds %struct.Reg, %struct.Reg* %9399, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %9400 to i64*
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 15
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %9403 to i64*
  %9404 = load i64, i64* %RBP.i146
  %9405 = sub i64 %9404, 8
  %9406 = load i64, i64* %PC.i144
  %9407 = add i64 %9406, 4
  store i64 %9407, i64* %PC.i144
  %9408 = inttoptr i64 %9405 to i64*
  %9409 = load i64, i64* %9408
  store i64 %9409, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_42a5d8, %struct.Memory** %MEMORY
  %loadMem_42a5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9411 = getelementptr inbounds %struct.GPR, %struct.GPR* %9410, i32 0, i32 33
  %9412 = getelementptr inbounds %struct.Reg, %struct.Reg* %9411, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %9412 to i64*
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9414 = getelementptr inbounds %struct.GPR, %struct.GPR* %9413, i32 0, i32 5
  %9415 = getelementptr inbounds %struct.Reg, %struct.Reg* %9414, i32 0, i32 0
  %RCX.i142 = bitcast %union.anon* %9415 to i64*
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 15
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %9418 to i64*
  %9419 = load i64, i64* %RBP.i143
  %9420 = sub i64 %9419, 12
  %9421 = load i64, i64* %PC.i141
  %9422 = add i64 %9421, 4
  store i64 %9422, i64* %PC.i141
  %9423 = inttoptr i64 %9420 to i32*
  %9424 = load i32, i32* %9423
  %9425 = sext i32 %9424 to i64
  store i64 %9425, i64* %RCX.i142, align 8
  store %struct.Memory* %loadMem_42a5dc, %struct.Memory** %MEMORY
  %loadMem_42a5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 33
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %9428 to i64*
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 1
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %9431 to i64*
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 5
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %RCX.i139 = bitcast %union.anon* %9434 to i64*
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9436 = getelementptr inbounds %struct.GPR, %struct.GPR* %9435, i32 0, i32 7
  %9437 = getelementptr inbounds %struct.Reg, %struct.Reg* %9436, i32 0, i32 0
  %RDX.i140 = bitcast %union.anon* %9437 to i64*
  %9438 = load i64, i64* %RAX.i138
  %9439 = load i64, i64* %RCX.i139
  %9440 = mul i64 %9439, 4
  %9441 = add i64 %9438, 32616
  %9442 = add i64 %9441, %9440
  %9443 = load i64, i64* %PC.i137
  %9444 = add i64 %9443, 7
  store i64 %9444, i64* %PC.i137
  %9445 = inttoptr i64 %9442 to i32*
  %9446 = load i32, i32* %9445
  %9447 = zext i32 %9446 to i64
  store i64 %9447, i64* %RDX.i140, align 8
  store %struct.Memory* %loadMem_42a5e0, %struct.Memory** %MEMORY
  %loadMem_42a5e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 33
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %9450 to i64*
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 7
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %RDX.i136 = bitcast %union.anon* %9453 to i64*
  %9454 = load i64, i64* %RDX.i136
  %9455 = load i64, i64* %PC.i135
  %9456 = add i64 %9455, 3
  store i64 %9456, i64* %PC.i135
  %9457 = and i64 1, %9454
  %9458 = trunc i64 %9457 to i32
  store i64 %9457, i64* %RDX.i136, align 8
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9459, align 1
  %9460 = and i32 %9458, 255
  %9461 = call i32 @llvm.ctpop.i32(i32 %9460)
  %9462 = trunc i32 %9461 to i8
  %9463 = and i8 %9462, 1
  %9464 = xor i8 %9463, 1
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9464, i8* %9465, align 1
  %9466 = icmp eq i32 %9458, 0
  %9467 = zext i1 %9466 to i8
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9467, i8* %9468, align 1
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9469, align 1
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9470, align 1
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9471, align 1
  store %struct.Memory* %loadMem_42a5e7, %struct.Memory** %MEMORY
  %loadMem_42a5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9473 = getelementptr inbounds %struct.GPR, %struct.GPR* %9472, i32 0, i32 33
  %9474 = getelementptr inbounds %struct.Reg, %struct.Reg* %9473, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %9474 to i64*
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9476 = getelementptr inbounds %struct.GPR, %struct.GPR* %9475, i32 0, i32 7
  %9477 = getelementptr inbounds %struct.Reg, %struct.Reg* %9476, i32 0, i32 0
  %EDX.i134 = bitcast %union.anon* %9477 to i32*
  %9478 = load i32, i32* %EDX.i134
  %9479 = zext i32 %9478 to i64
  %9480 = load i64, i64* %PC.i133
  %9481 = add i64 %9480, 3
  store i64 %9481, i64* %PC.i133
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9482, align 1
  %9483 = and i32 %9478, 255
  %9484 = call i32 @llvm.ctpop.i32(i32 %9483)
  %9485 = trunc i32 %9484 to i8
  %9486 = and i8 %9485, 1
  %9487 = xor i8 %9486, 1
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9487, i8* %9488, align 1
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9489, align 1
  %9490 = icmp eq i32 %9478, 0
  %9491 = zext i1 %9490 to i8
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9491, i8* %9492, align 1
  %9493 = lshr i32 %9478, 31
  %9494 = trunc i32 %9493 to i8
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9494, i8* %9495, align 1
  %9496 = lshr i32 %9478, 31
  %9497 = xor i32 %9493, %9496
  %9498 = add i32 %9497, %9496
  %9499 = icmp eq i32 %9498, 2
  %9500 = zext i1 %9499 to i8
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9500, i8* %9501, align 1
  store %struct.Memory* %loadMem_42a5ea, %struct.Memory** %MEMORY
  %loadMem_42a5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9503 = getelementptr inbounds %struct.GPR, %struct.GPR* %9502, i32 0, i32 33
  %9504 = getelementptr inbounds %struct.Reg, %struct.Reg* %9503, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9504 to i64*
  %9505 = load i64, i64* %PC.i132
  %9506 = add i64 %9505, 26
  %9507 = load i64, i64* %PC.i132
  %9508 = add i64 %9507, 6
  %9509 = load i64, i64* %PC.i132
  %9510 = add i64 %9509, 6
  store i64 %9510, i64* %PC.i132
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9512 = load i8, i8* %9511, align 1
  store i8 %9512, i8* %BRANCH_TAKEN, align 1
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9514 = icmp ne i8 %9512, 0
  %9515 = select i1 %9514, i64 %9506, i64 %9508
  store i64 %9515, i64* %9513, align 8
  store %struct.Memory* %loadMem_42a5ed, %struct.Memory** %MEMORY
  %loadBr_42a5ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a5ed = icmp eq i8 %loadBr_42a5ed, 1
  br i1 %cmpBr_42a5ed, label %block_.L_42a607, label %block_42a5f3

block_42a5f3:                                     ; preds = %block_42a5d8
  %loadMem_42a5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9517 = getelementptr inbounds %struct.GPR, %struct.GPR* %9516, i32 0, i32 33
  %9518 = getelementptr inbounds %struct.Reg, %struct.Reg* %9517, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9518 to i64*
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9520 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9519, i64 0, i64 0
  %YMM0.i130 = bitcast %union.VectorReg* %9520 to %"class.std::bitset"*
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9522 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9521, i64 0, i64 0
  %XMM0.i131 = bitcast %union.VectorReg* %9522 to %union.vec128_t*
  %9523 = bitcast %"class.std::bitset"* %YMM0.i130 to i8*
  %9524 = bitcast %"class.std::bitset"* %YMM0.i130 to i8*
  %9525 = bitcast %union.vec128_t* %XMM0.i131 to i8*
  %9526 = load i64, i64* %PC.i129
  %9527 = add i64 %9526, 3
  store i64 %9527, i64* %PC.i129
  %9528 = bitcast i8* %9524 to i64*
  %9529 = load i64, i64* %9528, align 1
  %9530 = getelementptr inbounds i8, i8* %9524, i64 8
  %9531 = bitcast i8* %9530 to i64*
  %9532 = load i64, i64* %9531, align 1
  %9533 = bitcast i8* %9525 to i64*
  %9534 = load i64, i64* %9533, align 1
  %9535 = getelementptr inbounds i8, i8* %9525, i64 8
  %9536 = bitcast i8* %9535 to i64*
  %9537 = load i64, i64* %9536, align 1
  %9538 = xor i64 %9534, %9529
  %9539 = xor i64 %9537, %9532
  %9540 = trunc i64 %9538 to i32
  %9541 = lshr i64 %9538, 32
  %9542 = trunc i64 %9541 to i32
  %9543 = bitcast i8* %9523 to i32*
  store i32 %9540, i32* %9543, align 1
  %9544 = getelementptr inbounds i8, i8* %9523, i64 4
  %9545 = bitcast i8* %9544 to i32*
  store i32 %9542, i32* %9545, align 1
  %9546 = trunc i64 %9539 to i32
  %9547 = getelementptr inbounds i8, i8* %9523, i64 8
  %9548 = bitcast i8* %9547 to i32*
  store i32 %9546, i32* %9548, align 1
  %9549 = lshr i64 %9539, 32
  %9550 = trunc i64 %9549 to i32
  %9551 = getelementptr inbounds i8, i8* %9523, i64 12
  %9552 = bitcast i8* %9551 to i32*
  store i32 %9550, i32* %9552, align 1
  store %struct.Memory* %loadMem_42a5f3, %struct.Memory** %MEMORY
  %loadMem_42a5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 33
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %9555 to i64*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9557 = getelementptr inbounds %struct.GPR, %struct.GPR* %9556, i32 0, i32 1
  %9558 = getelementptr inbounds %struct.Reg, %struct.Reg* %9557, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %9558 to i64*
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9560 = getelementptr inbounds %struct.GPR, %struct.GPR* %9559, i32 0, i32 15
  %9561 = getelementptr inbounds %struct.Reg, %struct.Reg* %9560, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %9561 to i64*
  %9562 = load i64, i64* %RBP.i128
  %9563 = sub i64 %9562, 8
  %9564 = load i64, i64* %PC.i126
  %9565 = add i64 %9564, 4
  store i64 %9565, i64* %PC.i126
  %9566 = inttoptr i64 %9563 to i64*
  %9567 = load i64, i64* %9566
  store i64 %9567, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_42a5f6, %struct.Memory** %MEMORY
  %loadMem_42a5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9569 = getelementptr inbounds %struct.GPR, %struct.GPR* %9568, i32 0, i32 33
  %9570 = getelementptr inbounds %struct.Reg, %struct.Reg* %9569, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %9570 to i64*
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9572 = getelementptr inbounds %struct.GPR, %struct.GPR* %9571, i32 0, i32 5
  %9573 = getelementptr inbounds %struct.Reg, %struct.Reg* %9572, i32 0, i32 0
  %RCX.i124 = bitcast %union.anon* %9573 to i64*
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9575 = getelementptr inbounds %struct.GPR, %struct.GPR* %9574, i32 0, i32 15
  %9576 = getelementptr inbounds %struct.Reg, %struct.Reg* %9575, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %9576 to i64*
  %9577 = load i64, i64* %RBP.i125
  %9578 = sub i64 %9577, 12
  %9579 = load i64, i64* %PC.i123
  %9580 = add i64 %9579, 4
  store i64 %9580, i64* %PC.i123
  %9581 = inttoptr i64 %9578 to i32*
  %9582 = load i32, i32* %9581
  %9583 = sext i32 %9582 to i64
  store i64 %9583, i64* %RCX.i124, align 8
  store %struct.Memory* %loadMem_42a5fa, %struct.Memory** %MEMORY
  %loadMem_42a5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 33
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %9586 to i64*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 1
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %9589 to i64*
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 5
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %RCX.i121 = bitcast %union.anon* %9592 to i64*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9593, i64 0, i64 0
  %XMM0.i122 = bitcast %union.VectorReg* %9594 to %union.vec128_t*
  %9595 = load i64, i64* %RAX.i120
  %9596 = load i64, i64* %RCX.i121
  %9597 = mul i64 %9596, 4
  %9598 = add i64 %9595, 31016
  %9599 = add i64 %9598, %9597
  %9600 = bitcast %union.vec128_t* %XMM0.i122 to i8*
  %9601 = load i64, i64* %PC.i119
  %9602 = add i64 %9601, 9
  store i64 %9602, i64* %PC.i119
  %9603 = bitcast i8* %9600 to <2 x float>*
  %9604 = load <2 x float>, <2 x float>* %9603, align 1
  %9605 = extractelement <2 x float> %9604, i32 0
  %9606 = inttoptr i64 %9599 to float*
  store float %9605, float* %9606
  store %struct.Memory* %loadMem_42a5fe, %struct.Memory** %MEMORY
  br label %block_.L_42a607

block_.L_42a607:                                  ; preds = %block_42a5f3, %block_42a5d8, %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_42a607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9608 = getelementptr inbounds %struct.GPR, %struct.GPR* %9607, i32 0, i32 33
  %9609 = getelementptr inbounds %struct.Reg, %struct.Reg* %9608, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %9609 to i64*
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9611 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9610, i64 0, i64 0
  %YMM0.i117 = bitcast %union.VectorReg* %9611 to %"class.std::bitset"*
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9613 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9612, i64 0, i64 0
  %XMM0.i118 = bitcast %union.VectorReg* %9613 to %union.vec128_t*
  %9614 = bitcast %"class.std::bitset"* %YMM0.i117 to i8*
  %9615 = bitcast %"class.std::bitset"* %YMM0.i117 to i8*
  %9616 = bitcast %union.vec128_t* %XMM0.i118 to i8*
  %9617 = load i64, i64* %PC.i116
  %9618 = add i64 %9617, 3
  store i64 %9618, i64* %PC.i116
  %9619 = bitcast i8* %9615 to i64*
  %9620 = load i64, i64* %9619, align 1
  %9621 = getelementptr inbounds i8, i8* %9615, i64 8
  %9622 = bitcast i8* %9621 to i64*
  %9623 = load i64, i64* %9622, align 1
  %9624 = bitcast i8* %9616 to i64*
  %9625 = load i64, i64* %9624, align 1
  %9626 = getelementptr inbounds i8, i8* %9616, i64 8
  %9627 = bitcast i8* %9626 to i64*
  %9628 = load i64, i64* %9627, align 1
  %9629 = xor i64 %9625, %9620
  %9630 = xor i64 %9628, %9623
  %9631 = trunc i64 %9629 to i32
  %9632 = lshr i64 %9629, 32
  %9633 = trunc i64 %9632 to i32
  %9634 = bitcast i8* %9614 to i32*
  store i32 %9631, i32* %9634, align 1
  %9635 = getelementptr inbounds i8, i8* %9614, i64 4
  %9636 = bitcast i8* %9635 to i32*
  store i32 %9633, i32* %9636, align 1
  %9637 = trunc i64 %9630 to i32
  %9638 = getelementptr inbounds i8, i8* %9614, i64 8
  %9639 = bitcast i8* %9638 to i32*
  store i32 %9637, i32* %9639, align 1
  %9640 = lshr i64 %9630, 32
  %9641 = trunc i64 %9640 to i32
  %9642 = getelementptr inbounds i8, i8* %9614, i64 12
  %9643 = bitcast i8* %9642 to i32*
  store i32 %9641, i32* %9643, align 1
  store %struct.Memory* %loadMem_42a607, %struct.Memory** %MEMORY
  %loadMem_42a60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9645 = getelementptr inbounds %struct.GPR, %struct.GPR* %9644, i32 0, i32 33
  %9646 = getelementptr inbounds %struct.Reg, %struct.Reg* %9645, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %9646 to i64*
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 1
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %RAX.i114 = bitcast %union.anon* %9649 to i64*
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 15
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %9652 to i64*
  %9653 = load i64, i64* %RBP.i115
  %9654 = sub i64 %9653, 8
  %9655 = load i64, i64* %PC.i113
  %9656 = add i64 %9655, 4
  store i64 %9656, i64* %PC.i113
  %9657 = inttoptr i64 %9654 to i64*
  %9658 = load i64, i64* %9657
  store i64 %9658, i64* %RAX.i114, align 8
  store %struct.Memory* %loadMem_42a60a, %struct.Memory** %MEMORY
  %loadMem_42a60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 33
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %9661 to i64*
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9663 = getelementptr inbounds %struct.GPR, %struct.GPR* %9662, i32 0, i32 5
  %9664 = getelementptr inbounds %struct.Reg, %struct.Reg* %9663, i32 0, i32 0
  %RCX.i111 = bitcast %union.anon* %9664 to i64*
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 15
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %9667 to i64*
  %9668 = load i64, i64* %RBP.i112
  %9669 = sub i64 %9668, 12
  %9670 = load i64, i64* %PC.i110
  %9671 = add i64 %9670, 4
  store i64 %9671, i64* %PC.i110
  %9672 = inttoptr i64 %9669 to i32*
  %9673 = load i32, i32* %9672
  %9674 = sext i32 %9673 to i64
  store i64 %9674, i64* %RCX.i111, align 8
  store %struct.Memory* %loadMem_42a60e, %struct.Memory** %MEMORY
  %loadMem_42a612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9676 = getelementptr inbounds %struct.GPR, %struct.GPR* %9675, i32 0, i32 33
  %9677 = getelementptr inbounds %struct.Reg, %struct.Reg* %9676, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %9677 to i64*
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9679 = getelementptr inbounds %struct.GPR, %struct.GPR* %9678, i32 0, i32 1
  %9680 = getelementptr inbounds %struct.Reg, %struct.Reg* %9679, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %9680 to i64*
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 5
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %9683 to i64*
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9685 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9684, i64 0, i64 1
  %YMM1.i109 = bitcast %union.VectorReg* %9685 to %"class.std::bitset"*
  %9686 = bitcast %"class.std::bitset"* %YMM1.i109 to i8*
  %9687 = load i64, i64* %RAX.i107
  %9688 = load i64, i64* %RCX.i108
  %9689 = mul i64 %9688, 4
  %9690 = add i64 %9687, 31016
  %9691 = add i64 %9690, %9689
  %9692 = load i64, i64* %PC.i106
  %9693 = add i64 %9692, 9
  store i64 %9693, i64* %PC.i106
  %9694 = inttoptr i64 %9691 to float*
  %9695 = load float, float* %9694
  %9696 = fpext float %9695 to double
  %9697 = bitcast i8* %9686 to double*
  store double %9696, double* %9697, align 1
  store %struct.Memory* %loadMem_42a612, %struct.Memory** %MEMORY
  %loadMem_42a61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9699 = getelementptr inbounds %struct.GPR, %struct.GPR* %9698, i32 0, i32 33
  %9700 = getelementptr inbounds %struct.Reg, %struct.Reg* %9699, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %9700 to i64*
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9701, i64 0, i64 0
  %XMM0.i101 = bitcast %union.VectorReg* %9702 to %union.vec128_t*
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9704 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9703, i64 0, i64 1
  %XMM1.i102 = bitcast %union.VectorReg* %9704 to %union.vec128_t*
  %9705 = bitcast %union.vec128_t* %XMM0.i101 to i8*
  %9706 = bitcast %union.vec128_t* %XMM1.i102 to i8*
  %9707 = load i64, i64* %PC.i100
  %9708 = add i64 %9707, 4
  store i64 %9708, i64* %PC.i100
  %9709 = bitcast i8* %9705 to double*
  %9710 = load double, double* %9709, align 1
  %9711 = bitcast i8* %9706 to double*
  %9712 = load double, double* %9711, align 1
  %9713 = fcmp uno double %9710, %9712
  br i1 %9713, label %9714, label %9726

; <label>:9714:                                   ; preds = %block_.L_42a607
  %9715 = fadd double %9710, %9712
  %9716 = bitcast double %9715 to i64
  %9717 = and i64 %9716, 9221120237041090560
  %9718 = icmp eq i64 %9717, 9218868437227405312
  %9719 = and i64 %9716, 2251799813685247
  %9720 = icmp ne i64 %9719, 0
  %9721 = and i1 %9718, %9720
  br i1 %9721, label %9722, label %9732

; <label>:9722:                                   ; preds = %9714
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9724 = load i64, i64* %9723, align 8
  %9725 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9724, %struct.Memory* %loadMem_42a61b)
  br label %routine_ucomisd__xmm1___xmm0.exit

; <label>:9726:                                   ; preds = %block_.L_42a607
  %9727 = fcmp ogt double %9710, %9712
  br i1 %9727, label %9732, label %9728

; <label>:9728:                                   ; preds = %9726
  %9729 = fcmp olt double %9710, %9712
  br i1 %9729, label %9732, label %9730

; <label>:9730:                                   ; preds = %9728
  %9731 = fcmp oeq double %9710, %9712
  br i1 %9731, label %9732, label %9739

; <label>:9732:                                   ; preds = %9730, %9728, %9726, %9714
  %9733 = phi i8 [ 0, %9726 ], [ 0, %9728 ], [ 1, %9730 ], [ 1, %9714 ]
  %9734 = phi i8 [ 0, %9726 ], [ 0, %9728 ], [ 0, %9730 ], [ 1, %9714 ]
  %9735 = phi i8 [ 0, %9726 ], [ 1, %9728 ], [ 0, %9730 ], [ 1, %9714 ]
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9733, i8* %9736, align 1
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9734, i8* %9737, align 1
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9735, i8* %9738, align 1
  br label %9739

; <label>:9739:                                   ; preds = %9732, %9730
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9740, align 1
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9741, align 1
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9742, align 1
  br label %routine_ucomisd__xmm1___xmm0.exit

routine_ucomisd__xmm1___xmm0.exit:                ; preds = %9722, %9739
  %9743 = phi %struct.Memory* [ %9725, %9722 ], [ %loadMem_42a61b, %9739 ]
  store %struct.Memory* %9743, %struct.Memory** %MEMORY
  %loadMem_42a61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %PC.i99
  %9748 = add i64 %9747, 53
  %9749 = load i64, i64* %PC.i99
  %9750 = add i64 %9749, 6
  %9751 = load i64, i64* %PC.i99
  %9752 = add i64 %9751, 6
  store i64 %9752, i64* %PC.i99
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9754 = load i8, i8* %9753, align 1
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9756 = load i8, i8* %9755, align 1
  %9757 = or i8 %9756, %9754
  %9758 = icmp ne i8 %9757, 0
  %9759 = zext i1 %9758 to i8
  store i8 %9759, i8* %BRANCH_TAKEN, align 1
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9761 = select i1 %9758, i64 %9748, i64 %9750
  store i64 %9761, i64* %9760, align 8
  store %struct.Memory* %loadMem_42a61f, %struct.Memory** %MEMORY
  %loadBr_42a61f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a61f = icmp eq i8 %loadBr_42a61f, 1
  br i1 %cmpBr_42a61f, label %block_.L_42a654, label %block_42a625

block_42a625:                                     ; preds = %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_42a625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9763 = getelementptr inbounds %struct.GPR, %struct.GPR* %9762, i32 0, i32 33
  %9764 = getelementptr inbounds %struct.Reg, %struct.Reg* %9763, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %9764 to i64*
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9766 = getelementptr inbounds %struct.GPR, %struct.GPR* %9765, i32 0, i32 1
  %9767 = getelementptr inbounds %struct.Reg, %struct.Reg* %9766, i32 0, i32 0
  %RAX.i97 = bitcast %union.anon* %9767 to i64*
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 15
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %9770 to i64*
  %9771 = load i64, i64* %RBP.i98
  %9772 = sub i64 %9771, 8
  %9773 = load i64, i64* %PC.i96
  %9774 = add i64 %9773, 4
  store i64 %9774, i64* %PC.i96
  %9775 = inttoptr i64 %9772 to i64*
  %9776 = load i64, i64* %9775
  store i64 %9776, i64* %RAX.i97, align 8
  store %struct.Memory* %loadMem_42a625, %struct.Memory** %MEMORY
  %loadMem_42a629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 33
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %9779 to i64*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 5
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %9782 to i64*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 15
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %9785 to i64*
  %9786 = load i64, i64* %RBP.i95
  %9787 = sub i64 %9786, 12
  %9788 = load i64, i64* %PC.i93
  %9789 = add i64 %9788, 4
  store i64 %9789, i64* %PC.i93
  %9790 = inttoptr i64 %9787 to i32*
  %9791 = load i32, i32* %9790
  %9792 = sext i32 %9791 to i64
  store i64 %9792, i64* %RCX.i94, align 8
  store %struct.Memory* %loadMem_42a629, %struct.Memory** %MEMORY
  %loadMem_42a62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 33
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 1
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %9798 to i64*
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9800 = getelementptr inbounds %struct.GPR, %struct.GPR* %9799, i32 0, i32 5
  %9801 = getelementptr inbounds %struct.Reg, %struct.Reg* %9800, i32 0, i32 0
  %RCX.i91 = bitcast %union.anon* %9801 to i64*
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 7
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %RDX.i92 = bitcast %union.anon* %9804 to i64*
  %9805 = load i64, i64* %RAX.i90
  %9806 = load i64, i64* %RCX.i91
  %9807 = mul i64 %9806, 4
  %9808 = add i64 %9805, 32616
  %9809 = add i64 %9808, %9807
  %9810 = load i64, i64* %PC.i89
  %9811 = add i64 %9810, 7
  store i64 %9811, i64* %PC.i89
  %9812 = inttoptr i64 %9809 to i32*
  %9813 = load i32, i32* %9812
  %9814 = zext i32 %9813 to i64
  store i64 %9814, i64* %RDX.i92, align 8
  store %struct.Memory* %loadMem_42a62d, %struct.Memory** %MEMORY
  %loadMem_42a634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 33
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %9817 to i64*
  %9818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9819 = getelementptr inbounds %struct.GPR, %struct.GPR* %9818, i32 0, i32 7
  %9820 = getelementptr inbounds %struct.Reg, %struct.Reg* %9819, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9820 to i64*
  %9821 = load i64, i64* %RDX.i
  %9822 = load i64, i64* %PC.i88
  %9823 = add i64 %9822, 3
  store i64 %9823, i64* %PC.i88
  %9824 = and i64 2, %9821
  %9825 = trunc i64 %9824 to i32
  store i64 %9824, i64* %RDX.i, align 8
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9826, align 1
  %9827 = and i32 %9825, 255
  %9828 = call i32 @llvm.ctpop.i32(i32 %9827)
  %9829 = trunc i32 %9828 to i8
  %9830 = and i8 %9829, 1
  %9831 = xor i8 %9830, 1
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9831, i8* %9832, align 1
  %9833 = icmp eq i32 %9825, 0
  %9834 = zext i1 %9833 to i8
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9834, i8* %9835, align 1
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9836, align 1
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9837, align 1
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9838, align 1
  store %struct.Memory* %loadMem_42a634, %struct.Memory** %MEMORY
  %loadMem_42a637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 33
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9841 to i64*
  %9842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9843 = getelementptr inbounds %struct.GPR, %struct.GPR* %9842, i32 0, i32 7
  %9844 = getelementptr inbounds %struct.Reg, %struct.Reg* %9843, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %9844 to i32*
  %9845 = load i32, i32* %EDX.i
  %9846 = zext i32 %9845 to i64
  %9847 = load i64, i64* %PC.i87
  %9848 = add i64 %9847, 3
  store i64 %9848, i64* %PC.i87
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9849, align 1
  %9850 = and i32 %9845, 255
  %9851 = call i32 @llvm.ctpop.i32(i32 %9850)
  %9852 = trunc i32 %9851 to i8
  %9853 = and i8 %9852, 1
  %9854 = xor i8 %9853, 1
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9854, i8* %9855, align 1
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9856, align 1
  %9857 = icmp eq i32 %9845, 0
  %9858 = zext i1 %9857 to i8
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9858, i8* %9859, align 1
  %9860 = lshr i32 %9845, 31
  %9861 = trunc i32 %9860 to i8
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9861, i8* %9862, align 1
  %9863 = lshr i32 %9845, 31
  %9864 = xor i32 %9860, %9863
  %9865 = add i32 %9864, %9863
  %9866 = icmp eq i32 %9865, 2
  %9867 = zext i1 %9866 to i8
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9867, i8* %9868, align 1
  store %struct.Memory* %loadMem_42a637, %struct.Memory** %MEMORY
  %loadMem_42a63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 33
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %9871 to i64*
  %9872 = load i64, i64* %PC.i86
  %9873 = add i64 %9872, 26
  %9874 = load i64, i64* %PC.i86
  %9875 = add i64 %9874, 6
  %9876 = load i64, i64* %PC.i86
  %9877 = add i64 %9876, 6
  store i64 %9877, i64* %PC.i86
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9879 = load i8, i8* %9878, align 1
  store i8 %9879, i8* %BRANCH_TAKEN, align 1
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9881 = icmp ne i8 %9879, 0
  %9882 = select i1 %9881, i64 %9873, i64 %9875
  store i64 %9882, i64* %9880, align 8
  store %struct.Memory* %loadMem_42a63a, %struct.Memory** %MEMORY
  %loadBr_42a63a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a63a = icmp eq i8 %loadBr_42a63a, 1
  br i1 %cmpBr_42a63a, label %block_.L_42a654, label %block_42a640

block_42a640:                                     ; preds = %block_42a625
  %loadMem_42a640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 33
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %9885 to i64*
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9887 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9886, i64 0, i64 0
  %YMM0.i84 = bitcast %union.VectorReg* %9887 to %"class.std::bitset"*
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9888, i64 0, i64 0
  %XMM0.i85 = bitcast %union.VectorReg* %9889 to %union.vec128_t*
  %9890 = bitcast %"class.std::bitset"* %YMM0.i84 to i8*
  %9891 = bitcast %"class.std::bitset"* %YMM0.i84 to i8*
  %9892 = bitcast %union.vec128_t* %XMM0.i85 to i8*
  %9893 = load i64, i64* %PC.i83
  %9894 = add i64 %9893, 3
  store i64 %9894, i64* %PC.i83
  %9895 = bitcast i8* %9891 to i64*
  %9896 = load i64, i64* %9895, align 1
  %9897 = getelementptr inbounds i8, i8* %9891, i64 8
  %9898 = bitcast i8* %9897 to i64*
  %9899 = load i64, i64* %9898, align 1
  %9900 = bitcast i8* %9892 to i64*
  %9901 = load i64, i64* %9900, align 1
  %9902 = getelementptr inbounds i8, i8* %9892, i64 8
  %9903 = bitcast i8* %9902 to i64*
  %9904 = load i64, i64* %9903, align 1
  %9905 = xor i64 %9901, %9896
  %9906 = xor i64 %9904, %9899
  %9907 = trunc i64 %9905 to i32
  %9908 = lshr i64 %9905, 32
  %9909 = trunc i64 %9908 to i32
  %9910 = bitcast i8* %9890 to i32*
  store i32 %9907, i32* %9910, align 1
  %9911 = getelementptr inbounds i8, i8* %9890, i64 4
  %9912 = bitcast i8* %9911 to i32*
  store i32 %9909, i32* %9912, align 1
  %9913 = trunc i64 %9906 to i32
  %9914 = getelementptr inbounds i8, i8* %9890, i64 8
  %9915 = bitcast i8* %9914 to i32*
  store i32 %9913, i32* %9915, align 1
  %9916 = lshr i64 %9906, 32
  %9917 = trunc i64 %9916 to i32
  %9918 = getelementptr inbounds i8, i8* %9890, i64 12
  %9919 = bitcast i8* %9918 to i32*
  store i32 %9917, i32* %9919, align 1
  store %struct.Memory* %loadMem_42a640, %struct.Memory** %MEMORY
  %loadMem_42a643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 33
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %9922 to i64*
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 1
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %RAX.i81 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 15
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %RBP.i82 = bitcast %union.anon* %9928 to i64*
  %9929 = load i64, i64* %RBP.i82
  %9930 = sub i64 %9929, 8
  %9931 = load i64, i64* %PC.i80
  %9932 = add i64 %9931, 4
  store i64 %9932, i64* %PC.i80
  %9933 = inttoptr i64 %9930 to i64*
  %9934 = load i64, i64* %9933
  store i64 %9934, i64* %RAX.i81, align 8
  store %struct.Memory* %loadMem_42a643, %struct.Memory** %MEMORY
  %loadMem_42a647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9936 = getelementptr inbounds %struct.GPR, %struct.GPR* %9935, i32 0, i32 33
  %9937 = getelementptr inbounds %struct.Reg, %struct.Reg* %9936, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %9937 to i64*
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9939 = getelementptr inbounds %struct.GPR, %struct.GPR* %9938, i32 0, i32 5
  %9940 = getelementptr inbounds %struct.Reg, %struct.Reg* %9939, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %9940 to i64*
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9942 = getelementptr inbounds %struct.GPR, %struct.GPR* %9941, i32 0, i32 15
  %9943 = getelementptr inbounds %struct.Reg, %struct.Reg* %9942, i32 0, i32 0
  %RBP.i79 = bitcast %union.anon* %9943 to i64*
  %9944 = load i64, i64* %RBP.i79
  %9945 = sub i64 %9944, 12
  %9946 = load i64, i64* %PC.i77
  %9947 = add i64 %9946, 4
  store i64 %9947, i64* %PC.i77
  %9948 = inttoptr i64 %9945 to i32*
  %9949 = load i32, i32* %9948
  %9950 = sext i32 %9949 to i64
  store i64 %9950, i64* %RCX.i78, align 8
  store %struct.Memory* %loadMem_42a647, %struct.Memory** %MEMORY
  %loadMem_42a64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9952 = getelementptr inbounds %struct.GPR, %struct.GPR* %9951, i32 0, i32 33
  %9953 = getelementptr inbounds %struct.Reg, %struct.Reg* %9952, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9953 to i64*
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 1
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %9956 to i64*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 5
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %RCX.i75 = bitcast %union.anon* %9959 to i64*
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9960, i64 0, i64 0
  %XMM0.i76 = bitcast %union.VectorReg* %9961 to %union.vec128_t*
  %9962 = load i64, i64* %RAX.i74
  %9963 = load i64, i64* %RCX.i75
  %9964 = mul i64 %9963, 4
  %9965 = add i64 %9962, 31016
  %9966 = add i64 %9965, %9964
  %9967 = bitcast %union.vec128_t* %XMM0.i76 to i8*
  %9968 = load i64, i64* %PC.i73
  %9969 = add i64 %9968, 9
  store i64 %9969, i64* %PC.i73
  %9970 = bitcast i8* %9967 to <2 x float>*
  %9971 = load <2 x float>, <2 x float>* %9970, align 1
  %9972 = extractelement <2 x float> %9971, i32 0
  %9973 = inttoptr i64 %9966 to float*
  store float %9972, float* %9973
  store %struct.Memory* %loadMem_42a64b, %struct.Memory** %MEMORY
  br label %block_.L_42a654

block_.L_42a654:                                  ; preds = %block_42a640, %block_42a625, %routine_ucomisd__xmm1___xmm0.exit
  %loadMem_42a654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9975 = getelementptr inbounds %struct.GPR, %struct.GPR* %9974, i32 0, i32 33
  %9976 = getelementptr inbounds %struct.Reg, %struct.Reg* %9975, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %9976 to i64*
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9978 = getelementptr inbounds %struct.GPR, %struct.GPR* %9977, i32 0, i32 1
  %9979 = getelementptr inbounds %struct.Reg, %struct.Reg* %9978, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %9979 to i64*
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9981 = getelementptr inbounds %struct.GPR, %struct.GPR* %9980, i32 0, i32 15
  %9982 = getelementptr inbounds %struct.Reg, %struct.Reg* %9981, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %9982 to i64*
  %9983 = load i64, i64* %RBP.i72
  %9984 = sub i64 %9983, 12
  %9985 = load i64, i64* %PC.i70
  %9986 = add i64 %9985, 4
  store i64 %9986, i64* %PC.i70
  %9987 = inttoptr i64 %9984 to i32*
  %9988 = load i32, i32* %9987
  %9989 = sext i32 %9988 to i64
  store i64 %9989, i64* %RAX.i71, align 8
  store %struct.Memory* %loadMem_42a654, %struct.Memory** %MEMORY
  %loadMem_42a658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 33
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9992 to i64*
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 1
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %9995 to i64*
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 5
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %RCX.i69 = bitcast %union.anon* %9998 to i64*
  %9999 = load i64, i64* %RAX.i68
  %10000 = add i64 %9999, 12099168
  %10001 = load i64, i64* %PC.i67
  %10002 = add i64 %10001, 8
  store i64 %10002, i64* %PC.i67
  %10003 = inttoptr i64 %10000 to i8*
  %10004 = load i8, i8* %10003
  %10005 = zext i8 %10004 to i64
  store i64 %10005, i64* %RCX.i69, align 8
  store %struct.Memory* %loadMem_42a658, %struct.Memory** %MEMORY
  %loadMem_42a660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 33
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %10008 to i64*
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10010 = getelementptr inbounds %struct.GPR, %struct.GPR* %10009, i32 0, i32 5
  %10011 = getelementptr inbounds %struct.Reg, %struct.Reg* %10010, i32 0, i32 0
  %ECX.i66 = bitcast %union.anon* %10011 to i32*
  %10012 = load i32, i32* %ECX.i66
  %10013 = zext i32 %10012 to i64
  %10014 = load i64, i64* %PC.i65
  %10015 = add i64 %10014, 3
  store i64 %10015, i64* %PC.i65
  %10016 = sub i32 %10012, 2
  %10017 = icmp ult i32 %10012, 2
  %10018 = zext i1 %10017 to i8
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10018, i8* %10019, align 1
  %10020 = and i32 %10016, 255
  %10021 = call i32 @llvm.ctpop.i32(i32 %10020)
  %10022 = trunc i32 %10021 to i8
  %10023 = and i8 %10022, 1
  %10024 = xor i8 %10023, 1
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10024, i8* %10025, align 1
  %10026 = xor i64 2, %10013
  %10027 = trunc i64 %10026 to i32
  %10028 = xor i32 %10027, %10016
  %10029 = lshr i32 %10028, 4
  %10030 = trunc i32 %10029 to i8
  %10031 = and i8 %10030, 1
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10031, i8* %10032, align 1
  %10033 = icmp eq i32 %10016, 0
  %10034 = zext i1 %10033 to i8
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10034, i8* %10035, align 1
  %10036 = lshr i32 %10016, 31
  %10037 = trunc i32 %10036 to i8
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10037, i8* %10038, align 1
  %10039 = lshr i32 %10012, 31
  %10040 = xor i32 %10036, %10039
  %10041 = add i32 %10040, %10039
  %10042 = icmp eq i32 %10041, 2
  %10043 = zext i1 %10042 to i8
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10043, i8* %10044, align 1
  store %struct.Memory* %loadMem_42a660, %struct.Memory** %MEMORY
  %loadMem_42a663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10046 = getelementptr inbounds %struct.GPR, %struct.GPR* %10045, i32 0, i32 33
  %10047 = getelementptr inbounds %struct.Reg, %struct.Reg* %10046, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %10047 to i64*
  %10048 = load i64, i64* %PC.i64
  %10049 = add i64 %10048, 53
  %10050 = load i64, i64* %PC.i64
  %10051 = add i64 %10050, 6
  %10052 = load i64, i64* %PC.i64
  %10053 = add i64 %10052, 6
  store i64 %10053, i64* %PC.i64
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10055 = load i8, i8* %10054, align 1
  %10056 = icmp eq i8 %10055, 0
  %10057 = zext i1 %10056 to i8
  store i8 %10057, i8* %BRANCH_TAKEN, align 1
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10059 = select i1 %10056, i64 %10049, i64 %10051
  store i64 %10059, i64* %10058, align 8
  store %struct.Memory* %loadMem_42a663, %struct.Memory** %MEMORY
  %loadBr_42a663 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a663 = icmp eq i8 %loadBr_42a663, 1
  br i1 %cmpBr_42a663, label %block_.L_42a698, label %block_42a669

block_42a669:                                     ; preds = %block_.L_42a654
  %loadMem_42a669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 33
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %10062 to i64*
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10064 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10063, i64 0, i64 0
  %YMM0.i63 = bitcast %union.VectorReg* %10064 to %"class.std::bitset"*
  %10065 = bitcast %"class.std::bitset"* %YMM0.i63 to i8*
  %10066 = load i64, i64* %PC.i62
  %10067 = add i64 %10066, ptrtoint (%G_0xb88ef__rip__type* @G_0xb88ef__rip_ to i64)
  %10068 = load i64, i64* %PC.i62
  %10069 = add i64 %10068, 8
  store i64 %10069, i64* %PC.i62
  %10070 = inttoptr i64 %10067 to double*
  %10071 = load double, double* %10070
  %10072 = bitcast i8* %10065 to double*
  store double %10071, double* %10072, align 1
  %10073 = getelementptr inbounds i8, i8* %10065, i64 8
  %10074 = bitcast i8* %10073 to double*
  store double 0.000000e+00, double* %10074, align 1
  store %struct.Memory* %loadMem_42a669, %struct.Memory** %MEMORY
  %loadMem_42a671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 33
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %10077 to i64*
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10079 = getelementptr inbounds %struct.GPR, %struct.GPR* %10078, i32 0, i32 1
  %10080 = getelementptr inbounds %struct.Reg, %struct.Reg* %10079, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %10080 to i64*
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 15
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %10083 to i64*
  %10084 = load i64, i64* %RBP.i61
  %10085 = sub i64 %10084, 8
  %10086 = load i64, i64* %PC.i59
  %10087 = add i64 %10086, 4
  store i64 %10087, i64* %PC.i59
  %10088 = inttoptr i64 %10085 to i64*
  %10089 = load i64, i64* %10088
  store i64 %10089, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_42a671, %struct.Memory** %MEMORY
  %loadMem_42a675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 33
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 5
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %RCX.i57 = bitcast %union.anon* %10095 to i64*
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10097 = getelementptr inbounds %struct.GPR, %struct.GPR* %10096, i32 0, i32 15
  %10098 = getelementptr inbounds %struct.Reg, %struct.Reg* %10097, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %10098 to i64*
  %10099 = load i64, i64* %RBP.i58
  %10100 = sub i64 %10099, 12
  %10101 = load i64, i64* %PC.i56
  %10102 = add i64 %10101, 4
  store i64 %10102, i64* %PC.i56
  %10103 = inttoptr i64 %10100 to i32*
  %10104 = load i32, i32* %10103
  %10105 = sext i32 %10104 to i64
  store i64 %10105, i64* %RCX.i57, align 8
  store %struct.Memory* %loadMem_42a675, %struct.Memory** %MEMORY
  %loadMem_42a679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 33
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %10108 to i64*
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 1
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %10111 to i64*
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10113 = getelementptr inbounds %struct.GPR, %struct.GPR* %10112, i32 0, i32 5
  %10114 = getelementptr inbounds %struct.Reg, %struct.Reg* %10113, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %10114 to i64*
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10116 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10115, i64 0, i64 1
  %YMM1.i55 = bitcast %union.VectorReg* %10116 to %"class.std::bitset"*
  %10117 = bitcast %"class.std::bitset"* %YMM1.i55 to i8*
  %10118 = load i64, i64* %RAX.i53
  %10119 = load i64, i64* %RCX.i54
  %10120 = mul i64 %10119, 4
  %10121 = add i64 %10118, 31016
  %10122 = add i64 %10121, %10120
  %10123 = load i64, i64* %PC.i52
  %10124 = add i64 %10123, 9
  store i64 %10124, i64* %PC.i52
  %10125 = inttoptr i64 %10122 to float*
  %10126 = load float, float* %10125
  %10127 = fpext float %10126 to double
  %10128 = bitcast i8* %10117 to double*
  store double %10127, double* %10128, align 1
  store %struct.Memory* %loadMem_42a679, %struct.Memory** %MEMORY
  %loadMem_42a682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10130 = getelementptr inbounds %struct.GPR, %struct.GPR* %10129, i32 0, i32 33
  %10131 = getelementptr inbounds %struct.Reg, %struct.Reg* %10130, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %10131 to i64*
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10132, i64 0, i64 1
  %YMM1.i50 = bitcast %union.VectorReg* %10133 to %"class.std::bitset"*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10134, i64 0, i64 0
  %XMM0.i51 = bitcast %union.VectorReg* %10135 to %union.vec128_t*
  %10136 = bitcast %"class.std::bitset"* %YMM1.i50 to i8*
  %10137 = bitcast %"class.std::bitset"* %YMM1.i50 to i8*
  %10138 = bitcast %union.vec128_t* %XMM0.i51 to i8*
  %10139 = load i64, i64* %PC.i49
  %10140 = add i64 %10139, 4
  store i64 %10140, i64* %PC.i49
  %10141 = bitcast i8* %10137 to double*
  %10142 = load double, double* %10141, align 1
  %10143 = getelementptr inbounds i8, i8* %10137, i64 8
  %10144 = bitcast i8* %10143 to i64*
  %10145 = load i64, i64* %10144, align 1
  %10146 = bitcast i8* %10138 to double*
  %10147 = load double, double* %10146, align 1
  %10148 = fadd double %10142, %10147
  %10149 = bitcast i8* %10136 to double*
  store double %10148, double* %10149, align 1
  %10150 = getelementptr inbounds i8, i8* %10136, i64 8
  %10151 = bitcast i8* %10150 to i64*
  store i64 %10145, i64* %10151, align 1
  store %struct.Memory* %loadMem_42a682, %struct.Memory** %MEMORY
  %loadMem_42a686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10153 = getelementptr inbounds %struct.GPR, %struct.GPR* %10152, i32 0, i32 33
  %10154 = getelementptr inbounds %struct.Reg, %struct.Reg* %10153, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %10154 to i64*
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10156 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10155, i64 0, i64 0
  %YMM0.i47 = bitcast %union.VectorReg* %10156 to %"class.std::bitset"*
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10158 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10157, i64 0, i64 1
  %XMM1.i48 = bitcast %union.VectorReg* %10158 to %union.vec128_t*
  %10159 = bitcast %"class.std::bitset"* %YMM0.i47 to i8*
  %10160 = bitcast %union.vec128_t* %XMM1.i48 to i8*
  %10161 = load i64, i64* %PC.i46
  %10162 = add i64 %10161, 4
  store i64 %10162, i64* %PC.i46
  %10163 = bitcast i8* %10159 to <2 x i32>*
  %10164 = load <2 x i32>, <2 x i32>* %10163, align 1
  %10165 = getelementptr inbounds i8, i8* %10159, i64 8
  %10166 = bitcast i8* %10165 to <2 x i32>*
  %10167 = load <2 x i32>, <2 x i32>* %10166, align 1
  %10168 = bitcast i8* %10160 to double*
  %10169 = load double, double* %10168, align 1
  %10170 = fptrunc double %10169 to float
  %10171 = bitcast i8* %10159 to float*
  store float %10170, float* %10171, align 1
  %10172 = extractelement <2 x i32> %10164, i32 1
  %10173 = getelementptr inbounds i8, i8* %10159, i64 4
  %10174 = bitcast i8* %10173 to i32*
  store i32 %10172, i32* %10174, align 1
  %10175 = extractelement <2 x i32> %10167, i32 0
  %10176 = bitcast i8* %10165 to i32*
  store i32 %10175, i32* %10176, align 1
  %10177 = extractelement <2 x i32> %10167, i32 1
  %10178 = getelementptr inbounds i8, i8* %10159, i64 12
  %10179 = bitcast i8* %10178 to i32*
  store i32 %10177, i32* %10179, align 1
  store %struct.Memory* %loadMem_42a686, %struct.Memory** %MEMORY
  %loadMem_42a68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10181 = getelementptr inbounds %struct.GPR, %struct.GPR* %10180, i32 0, i32 33
  %10182 = getelementptr inbounds %struct.Reg, %struct.Reg* %10181, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %10182 to i64*
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10184 = getelementptr inbounds %struct.GPR, %struct.GPR* %10183, i32 0, i32 1
  %10185 = getelementptr inbounds %struct.Reg, %struct.Reg* %10184, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %10185 to i64*
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 5
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %RCX.i44 = bitcast %union.anon* %10188 to i64*
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10190 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10189, i64 0, i64 0
  %XMM0.i45 = bitcast %union.VectorReg* %10190 to %union.vec128_t*
  %10191 = load i64, i64* %RAX.i43
  %10192 = load i64, i64* %RCX.i44
  %10193 = mul i64 %10192, 4
  %10194 = add i64 %10191, 31016
  %10195 = add i64 %10194, %10193
  %10196 = bitcast %union.vec128_t* %XMM0.i45 to i8*
  %10197 = load i64, i64* %PC.i42
  %10198 = add i64 %10197, 9
  store i64 %10198, i64* %PC.i42
  %10199 = bitcast i8* %10196 to <2 x float>*
  %10200 = load <2 x float>, <2 x float>* %10199, align 1
  %10201 = extractelement <2 x float> %10200, i32 0
  %10202 = inttoptr i64 %10195 to float*
  store float %10201, float* %10202
  store %struct.Memory* %loadMem_42a68a, %struct.Memory** %MEMORY
  %loadMem_42a693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 33
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %10205 to i64*
  %10206 = load i64, i64* %PC.i41
  %10207 = add i64 %10206, 73
  %10208 = load i64, i64* %PC.i41
  %10209 = add i64 %10208, 5
  store i64 %10209, i64* %PC.i41
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10207, i64* %10210, align 8
  store %struct.Memory* %loadMem_42a693, %struct.Memory** %MEMORY
  br label %block_.L_42a6dc

block_.L_42a698:                                  ; preds = %block_.L_42a654
  %loadMem_42a698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10212 = getelementptr inbounds %struct.GPR, %struct.GPR* %10211, i32 0, i32 33
  %10213 = getelementptr inbounds %struct.Reg, %struct.Reg* %10212, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %10213 to i64*
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10215 = getelementptr inbounds %struct.GPR, %struct.GPR* %10214, i32 0, i32 1
  %10216 = getelementptr inbounds %struct.Reg, %struct.Reg* %10215, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %10216 to i64*
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10218 = getelementptr inbounds %struct.GPR, %struct.GPR* %10217, i32 0, i32 15
  %10219 = getelementptr inbounds %struct.Reg, %struct.Reg* %10218, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %10219 to i64*
  %10220 = load i64, i64* %RBP.i40
  %10221 = sub i64 %10220, 12
  %10222 = load i64, i64* %PC.i38
  %10223 = add i64 %10222, 4
  store i64 %10223, i64* %PC.i38
  %10224 = inttoptr i64 %10221 to i32*
  %10225 = load i32, i32* %10224
  %10226 = sext i32 %10225 to i64
  store i64 %10226, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_42a698, %struct.Memory** %MEMORY
  %loadMem_42a69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10228 = getelementptr inbounds %struct.GPR, %struct.GPR* %10227, i32 0, i32 33
  %10229 = getelementptr inbounds %struct.Reg, %struct.Reg* %10228, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %10229 to i64*
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10231 = getelementptr inbounds %struct.GPR, %struct.GPR* %10230, i32 0, i32 1
  %10232 = getelementptr inbounds %struct.Reg, %struct.Reg* %10231, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %10232 to i64*
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10234 = getelementptr inbounds %struct.GPR, %struct.GPR* %10233, i32 0, i32 5
  %10235 = getelementptr inbounds %struct.Reg, %struct.Reg* %10234, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %10235 to i64*
  %10236 = load i64, i64* %RAX.i36
  %10237 = add i64 %10236, 12099168
  %10238 = load i64, i64* %PC.i35
  %10239 = add i64 %10238, 8
  store i64 %10239, i64* %PC.i35
  %10240 = inttoptr i64 %10237 to i8*
  %10241 = load i8, i8* %10240
  %10242 = zext i8 %10241 to i64
  store i64 %10242, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_42a69c, %struct.Memory** %MEMORY
  %loadMem_42a6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10244 = getelementptr inbounds %struct.GPR, %struct.GPR* %10243, i32 0, i32 33
  %10245 = getelementptr inbounds %struct.Reg, %struct.Reg* %10244, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %10245 to i64*
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10247 = getelementptr inbounds %struct.GPR, %struct.GPR* %10246, i32 0, i32 5
  %10248 = getelementptr inbounds %struct.Reg, %struct.Reg* %10247, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10248 to i32*
  %10249 = load i32, i32* %ECX.i
  %10250 = zext i32 %10249 to i64
  %10251 = load i64, i64* %PC.i34
  %10252 = add i64 %10251, 3
  store i64 %10252, i64* %PC.i34
  %10253 = sub i32 %10249, 1
  %10254 = icmp ult i32 %10249, 1
  %10255 = zext i1 %10254 to i8
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10255, i8* %10256, align 1
  %10257 = and i32 %10253, 255
  %10258 = call i32 @llvm.ctpop.i32(i32 %10257)
  %10259 = trunc i32 %10258 to i8
  %10260 = and i8 %10259, 1
  %10261 = xor i8 %10260, 1
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10261, i8* %10262, align 1
  %10263 = xor i64 1, %10250
  %10264 = trunc i64 %10263 to i32
  %10265 = xor i32 %10264, %10253
  %10266 = lshr i32 %10265, 4
  %10267 = trunc i32 %10266 to i8
  %10268 = and i8 %10267, 1
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10268, i8* %10269, align 1
  %10270 = icmp eq i32 %10253, 0
  %10271 = zext i1 %10270 to i8
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10271, i8* %10272, align 1
  %10273 = lshr i32 %10253, 31
  %10274 = trunc i32 %10273 to i8
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10274, i8* %10275, align 1
  %10276 = lshr i32 %10249, 31
  %10277 = xor i32 %10273, %10276
  %10278 = add i32 %10277, %10276
  %10279 = icmp eq i32 %10278, 2
  %10280 = zext i1 %10279 to i8
  %10281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10280, i8* %10281, align 1
  store %struct.Memory* %loadMem_42a6a4, %struct.Memory** %MEMORY
  %loadMem_42a6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 33
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %10284 to i64*
  %10285 = load i64, i64* %PC.i33
  %10286 = add i64 %10285, 48
  %10287 = load i64, i64* %PC.i33
  %10288 = add i64 %10287, 6
  %10289 = load i64, i64* %PC.i33
  %10290 = add i64 %10289, 6
  store i64 %10290, i64* %PC.i33
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10292 = load i8, i8* %10291, align 1
  %10293 = icmp eq i8 %10292, 0
  %10294 = zext i1 %10293 to i8
  store i8 %10294, i8* %BRANCH_TAKEN, align 1
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10296 = select i1 %10293, i64 %10286, i64 %10288
  store i64 %10296, i64* %10295, align 8
  store %struct.Memory* %loadMem_42a6a7, %struct.Memory** %MEMORY
  %loadBr_42a6a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42a6a7 = icmp eq i8 %loadBr_42a6a7, 1
  br i1 %cmpBr_42a6a7, label %block_.L_42a6d7, label %block_42a6ad

block_42a6ad:                                     ; preds = %block_.L_42a698
  %loadMem_42a6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 33
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %10299 to i64*
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10300, i64 0, i64 0
  %YMM0.i32 = bitcast %union.VectorReg* %10301 to %"class.std::bitset"*
  %10302 = bitcast %"class.std::bitset"* %YMM0.i32 to i8*
  %10303 = load i64, i64* %PC.i31
  %10304 = add i64 %10303, ptrtoint (%G_0xb88ab__rip__type* @G_0xb88ab__rip_ to i64)
  %10305 = load i64, i64* %PC.i31
  %10306 = add i64 %10305, 8
  store i64 %10306, i64* %PC.i31
  %10307 = inttoptr i64 %10304 to double*
  %10308 = load double, double* %10307
  %10309 = bitcast i8* %10302 to double*
  store double %10308, double* %10309, align 1
  %10310 = getelementptr inbounds i8, i8* %10302, i64 8
  %10311 = bitcast i8* %10310 to double*
  store double 0.000000e+00, double* %10311, align 1
  store %struct.Memory* %loadMem_42a6ad, %struct.Memory** %MEMORY
  %loadMem_42a6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10313 = getelementptr inbounds %struct.GPR, %struct.GPR* %10312, i32 0, i32 33
  %10314 = getelementptr inbounds %struct.Reg, %struct.Reg* %10313, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %10314 to i64*
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 1
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 15
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %10320 to i64*
  %10321 = load i64, i64* %RBP.i30
  %10322 = sub i64 %10321, 8
  %10323 = load i64, i64* %PC.i28
  %10324 = add i64 %10323, 4
  store i64 %10324, i64* %PC.i28
  %10325 = inttoptr i64 %10322 to i64*
  %10326 = load i64, i64* %10325
  store i64 %10326, i64* %RAX.i29, align 8
  store %struct.Memory* %loadMem_42a6b5, %struct.Memory** %MEMORY
  %loadMem_42a6b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10328 = getelementptr inbounds %struct.GPR, %struct.GPR* %10327, i32 0, i32 33
  %10329 = getelementptr inbounds %struct.Reg, %struct.Reg* %10328, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %10329 to i64*
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 5
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %RCX.i26 = bitcast %union.anon* %10332 to i64*
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10334 = getelementptr inbounds %struct.GPR, %struct.GPR* %10333, i32 0, i32 15
  %10335 = getelementptr inbounds %struct.Reg, %struct.Reg* %10334, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %10335 to i64*
  %10336 = load i64, i64* %RBP.i27
  %10337 = sub i64 %10336, 12
  %10338 = load i64, i64* %PC.i25
  %10339 = add i64 %10338, 4
  store i64 %10339, i64* %PC.i25
  %10340 = inttoptr i64 %10337 to i32*
  %10341 = load i32, i32* %10340
  %10342 = sext i32 %10341 to i64
  store i64 %10342, i64* %RCX.i26, align 8
  store %struct.Memory* %loadMem_42a6b9, %struct.Memory** %MEMORY
  %loadMem_42a6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 33
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %10345 to i64*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 1
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %10348 to i64*
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10350 = getelementptr inbounds %struct.GPR, %struct.GPR* %10349, i32 0, i32 5
  %10351 = getelementptr inbounds %struct.Reg, %struct.Reg* %10350, i32 0, i32 0
  %RCX.i23 = bitcast %union.anon* %10351 to i64*
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10352, i64 0, i64 1
  %YMM1.i24 = bitcast %union.VectorReg* %10353 to %"class.std::bitset"*
  %10354 = bitcast %"class.std::bitset"* %YMM1.i24 to i8*
  %10355 = load i64, i64* %RAX.i22
  %10356 = load i64, i64* %RCX.i23
  %10357 = mul i64 %10356, 4
  %10358 = add i64 %10355, 31016
  %10359 = add i64 %10358, %10357
  %10360 = load i64, i64* %PC.i21
  %10361 = add i64 %10360, 9
  store i64 %10361, i64* %PC.i21
  %10362 = inttoptr i64 %10359 to float*
  %10363 = load float, float* %10362
  %10364 = fpext float %10363 to double
  %10365 = bitcast i8* %10354 to double*
  store double %10364, double* %10365, align 1
  store %struct.Memory* %loadMem_42a6bd, %struct.Memory** %MEMORY
  %loadMem_42a6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10367 = getelementptr inbounds %struct.GPR, %struct.GPR* %10366, i32 0, i32 33
  %10368 = getelementptr inbounds %struct.Reg, %struct.Reg* %10367, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %10368 to i64*
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10369, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %10370 to %"class.std::bitset"*
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10371, i64 0, i64 0
  %XMM0.i20 = bitcast %union.VectorReg* %10372 to %union.vec128_t*
  %10373 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %10374 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %10375 = bitcast %union.vec128_t* %XMM0.i20 to i8*
  %10376 = load i64, i64* %PC.i19
  %10377 = add i64 %10376, 4
  store i64 %10377, i64* %PC.i19
  %10378 = bitcast i8* %10374 to double*
  %10379 = load double, double* %10378, align 1
  %10380 = getelementptr inbounds i8, i8* %10374, i64 8
  %10381 = bitcast i8* %10380 to i64*
  %10382 = load i64, i64* %10381, align 1
  %10383 = bitcast i8* %10375 to double*
  %10384 = load double, double* %10383, align 1
  %10385 = fsub double %10379, %10384
  %10386 = bitcast i8* %10373 to double*
  store double %10385, double* %10386, align 1
  %10387 = getelementptr inbounds i8, i8* %10373, i64 8
  %10388 = bitcast i8* %10387 to i64*
  store i64 %10382, i64* %10388, align 1
  store %struct.Memory* %loadMem_42a6c6, %struct.Memory** %MEMORY
  %loadMem_42a6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10390 = getelementptr inbounds %struct.GPR, %struct.GPR* %10389, i32 0, i32 33
  %10391 = getelementptr inbounds %struct.Reg, %struct.Reg* %10390, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %10391 to i64*
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10392, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %10393 to %"class.std::bitset"*
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10394, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %10395 to %union.vec128_t*
  %10396 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %10397 = bitcast %union.vec128_t* %XMM1.i to i8*
  %10398 = load i64, i64* %PC.i18
  %10399 = add i64 %10398, 4
  store i64 %10399, i64* %PC.i18
  %10400 = bitcast i8* %10396 to <2 x i32>*
  %10401 = load <2 x i32>, <2 x i32>* %10400, align 1
  %10402 = getelementptr inbounds i8, i8* %10396, i64 8
  %10403 = bitcast i8* %10402 to <2 x i32>*
  %10404 = load <2 x i32>, <2 x i32>* %10403, align 1
  %10405 = bitcast i8* %10397 to double*
  %10406 = load double, double* %10405, align 1
  %10407 = fptrunc double %10406 to float
  %10408 = bitcast i8* %10396 to float*
  store float %10407, float* %10408, align 1
  %10409 = extractelement <2 x i32> %10401, i32 1
  %10410 = getelementptr inbounds i8, i8* %10396, i64 4
  %10411 = bitcast i8* %10410 to i32*
  store i32 %10409, i32* %10411, align 1
  %10412 = extractelement <2 x i32> %10404, i32 0
  %10413 = bitcast i8* %10402 to i32*
  store i32 %10412, i32* %10413, align 1
  %10414 = extractelement <2 x i32> %10404, i32 1
  %10415 = getelementptr inbounds i8, i8* %10396, i64 12
  %10416 = bitcast i8* %10415 to i32*
  store i32 %10414, i32* %10416, align 1
  store %struct.Memory* %loadMem_42a6ca, %struct.Memory** %MEMORY
  %loadMem_42a6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10418 = getelementptr inbounds %struct.GPR, %struct.GPR* %10417, i32 0, i32 33
  %10419 = getelementptr inbounds %struct.Reg, %struct.Reg* %10418, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %10419 to i64*
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10421 = getelementptr inbounds %struct.GPR, %struct.GPR* %10420, i32 0, i32 1
  %10422 = getelementptr inbounds %struct.Reg, %struct.Reg* %10421, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %10422 to i64*
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10424 = getelementptr inbounds %struct.GPR, %struct.GPR* %10423, i32 0, i32 5
  %10425 = getelementptr inbounds %struct.Reg, %struct.Reg* %10424, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %10425 to i64*
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10426, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %10427 to %union.vec128_t*
  %10428 = load i64, i64* %RAX.i17
  %10429 = load i64, i64* %RCX.i
  %10430 = mul i64 %10429, 4
  %10431 = add i64 %10428, 31016
  %10432 = add i64 %10431, %10430
  %10433 = bitcast %union.vec128_t* %XMM0.i to i8*
  %10434 = load i64, i64* %PC.i16
  %10435 = add i64 %10434, 9
  store i64 %10435, i64* %PC.i16
  %10436 = bitcast i8* %10433 to <2 x float>*
  %10437 = load <2 x float>, <2 x float>* %10436, align 1
  %10438 = extractelement <2 x float> %10437, i32 0
  %10439 = inttoptr i64 %10432 to float*
  store float %10438, float* %10439
  store %struct.Memory* %loadMem_42a6ce, %struct.Memory** %MEMORY
  br label %block_.L_42a6d7

block_.L_42a6d7:                                  ; preds = %block_42a6ad, %block_.L_42a698
  %loadMem_42a6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 33
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %10442 to i64*
  %10443 = load i64, i64* %PC.i15
  %10444 = add i64 %10443, 5
  %10445 = load i64, i64* %PC.i15
  %10446 = add i64 %10445, 5
  store i64 %10446, i64* %PC.i15
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10444, i64* %10447, align 8
  store %struct.Memory* %loadMem_42a6d7, %struct.Memory** %MEMORY
  br label %block_.L_42a6dc

block_.L_42a6dc:                                  ; preds = %block_.L_42a6d7, %block_42a669
  %loadMem_42a6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10449 = getelementptr inbounds %struct.GPR, %struct.GPR* %10448, i32 0, i32 33
  %10450 = getelementptr inbounds %struct.Reg, %struct.Reg* %10449, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %10450 to i64*
  %10451 = load i64, i64* %PC.i14
  %10452 = add i64 %10451, 5
  %10453 = load i64, i64* %PC.i14
  %10454 = add i64 %10453, 5
  store i64 %10454, i64* %PC.i14
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10452, i64* %10455, align 8
  store %struct.Memory* %loadMem_42a6dc, %struct.Memory** %MEMORY
  br label %block_.L_42a6e1

block_.L_42a6e1:                                  ; preds = %block_.L_42a6dc, %block_42a5a8
  %loadMem_42a6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10457 = getelementptr inbounds %struct.GPR, %struct.GPR* %10456, i32 0, i32 33
  %10458 = getelementptr inbounds %struct.Reg, %struct.Reg* %10457, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %10458 to i64*
  %10459 = load i64, i64* %PC.i13
  %10460 = add i64 %10459, 5
  %10461 = load i64, i64* %PC.i13
  %10462 = add i64 %10461, 5
  store i64 %10462, i64* %PC.i13
  %10463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10460, i64* %10463, align 8
  store %struct.Memory* %loadMem_42a6e1, %struct.Memory** %MEMORY
  br label %block_.L_42a6e6

block_.L_42a6e6:                                  ; preds = %block_.L_42a6e1, %block_42a593
  %loadMem_42a6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10465 = getelementptr inbounds %struct.GPR, %struct.GPR* %10464, i32 0, i32 33
  %10466 = getelementptr inbounds %struct.Reg, %struct.Reg* %10465, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %10466 to i64*
  %10467 = load i64, i64* %PC.i12
  %10468 = add i64 %10467, 5
  %10469 = load i64, i64* %PC.i12
  %10470 = add i64 %10469, 5
  store i64 %10470, i64* %PC.i12
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10468, i64* %10471, align 8
  store %struct.Memory* %loadMem_42a6e6, %struct.Memory** %MEMORY
  br label %block_.L_42a6eb

block_.L_42a6eb:                                  ; preds = %block_.L_42a6e6
  %loadMem_42a6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10473 = getelementptr inbounds %struct.GPR, %struct.GPR* %10472, i32 0, i32 33
  %10474 = getelementptr inbounds %struct.Reg, %struct.Reg* %10473, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10474 to i64*
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 1
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 15
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %10480 to i64*
  %10481 = load i64, i64* %RBP.i11
  %10482 = sub i64 %10481, 12
  %10483 = load i64, i64* %PC.i9
  %10484 = add i64 %10483, 3
  store i64 %10484, i64* %PC.i9
  %10485 = inttoptr i64 %10482 to i32*
  %10486 = load i32, i32* %10485
  %10487 = zext i32 %10486 to i64
  store i64 %10487, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_42a6eb, %struct.Memory** %MEMORY
  %loadMem_42a6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10489 = getelementptr inbounds %struct.GPR, %struct.GPR* %10488, i32 0, i32 33
  %10490 = getelementptr inbounds %struct.Reg, %struct.Reg* %10489, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %10490 to i64*
  %10491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10492 = getelementptr inbounds %struct.GPR, %struct.GPR* %10491, i32 0, i32 1
  %10493 = getelementptr inbounds %struct.Reg, %struct.Reg* %10492, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10493 to i64*
  %10494 = load i64, i64* %RAX.i
  %10495 = load i64, i64* %PC.i8
  %10496 = add i64 %10495, 3
  store i64 %10496, i64* %PC.i8
  %10497 = trunc i64 %10494 to i32
  %10498 = add i32 1, %10497
  %10499 = zext i32 %10498 to i64
  store i64 %10499, i64* %RAX.i, align 8
  %10500 = icmp ult i32 %10498, %10497
  %10501 = icmp ult i32 %10498, 1
  %10502 = or i1 %10500, %10501
  %10503 = zext i1 %10502 to i8
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10503, i8* %10504, align 1
  %10505 = and i32 %10498, 255
  %10506 = call i32 @llvm.ctpop.i32(i32 %10505)
  %10507 = trunc i32 %10506 to i8
  %10508 = and i8 %10507, 1
  %10509 = xor i8 %10508, 1
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10509, i8* %10510, align 1
  %10511 = xor i64 1, %10494
  %10512 = trunc i64 %10511 to i32
  %10513 = xor i32 %10512, %10498
  %10514 = lshr i32 %10513, 4
  %10515 = trunc i32 %10514 to i8
  %10516 = and i8 %10515, 1
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10516, i8* %10517, align 1
  %10518 = icmp eq i32 %10498, 0
  %10519 = zext i1 %10518 to i8
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10519, i8* %10520, align 1
  %10521 = lshr i32 %10498, 31
  %10522 = trunc i32 %10521 to i8
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10522, i8* %10523, align 1
  %10524 = lshr i32 %10497, 31
  %10525 = xor i32 %10521, %10524
  %10526 = add i32 %10525, %10521
  %10527 = icmp eq i32 %10526, 2
  %10528 = zext i1 %10527 to i8
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10528, i8* %10529, align 1
  store %struct.Memory* %loadMem_42a6ee, %struct.Memory** %MEMORY
  %loadMem_42a6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 33
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10532 to i64*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 1
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10535 to i32*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 15
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %10538 to i64*
  %10539 = load i64, i64* %RBP.i7
  %10540 = sub i64 %10539, 12
  %10541 = load i32, i32* %EAX.i
  %10542 = zext i32 %10541 to i64
  %10543 = load i64, i64* %PC.i6
  %10544 = add i64 %10543, 3
  store i64 %10544, i64* %PC.i6
  %10545 = inttoptr i64 %10540 to i32*
  store i32 %10541, i32* %10545
  store %struct.Memory* %loadMem_42a6f1, %struct.Memory** %MEMORY
  %loadMem_42a6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 33
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10548 to i64*
  %10549 = load i64, i64* %PC.i5
  %10550 = add i64 %10549, -366
  %10551 = load i64, i64* %PC.i5
  %10552 = add i64 %10551, 5
  store i64 %10552, i64* %PC.i5
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10550, i64* %10553, align 8
  store %struct.Memory* %loadMem_42a6f4, %struct.Memory** %MEMORY
  br label %block_.L_42a586

block_.L_42a6f9:                                  ; preds = %block_.L_42a586
  %loadMem_42a6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 33
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10556 to i64*
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 13
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10559 to i64*
  %10560 = load i64, i64* %RSP.i
  %10561 = load i64, i64* %PC.i4
  %10562 = add i64 %10561, 7
  store i64 %10562, i64* %PC.i4
  %10563 = add i64 1744, %10560
  store i64 %10563, i64* %RSP.i, align 8
  %10564 = icmp ult i64 %10563, %10560
  %10565 = icmp ult i64 %10563, 1744
  %10566 = or i1 %10564, %10565
  %10567 = zext i1 %10566 to i8
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10567, i8* %10568, align 1
  %10569 = trunc i64 %10563 to i32
  %10570 = and i32 %10569, 255
  %10571 = call i32 @llvm.ctpop.i32(i32 %10570)
  %10572 = trunc i32 %10571 to i8
  %10573 = and i8 %10572, 1
  %10574 = xor i8 %10573, 1
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10574, i8* %10575, align 1
  %10576 = xor i64 1744, %10560
  %10577 = xor i64 %10576, %10563
  %10578 = lshr i64 %10577, 4
  %10579 = trunc i64 %10578 to i8
  %10580 = and i8 %10579, 1
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10580, i8* %10581, align 1
  %10582 = icmp eq i64 %10563, 0
  %10583 = zext i1 %10582 to i8
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10583, i8* %10584, align 1
  %10585 = lshr i64 %10563, 63
  %10586 = trunc i64 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10586, i8* %10587, align 1
  %10588 = lshr i64 %10560, 63
  %10589 = xor i64 %10585, %10588
  %10590 = add i64 %10589, %10585
  %10591 = icmp eq i64 %10590, 2
  %10592 = zext i1 %10591 to i8
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10592, i8* %10593, align 1
  store %struct.Memory* %loadMem_42a6f9, %struct.Memory** %MEMORY
  %loadMem_42a700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10595 = getelementptr inbounds %struct.GPR, %struct.GPR* %10594, i32 0, i32 33
  %10596 = getelementptr inbounds %struct.Reg, %struct.Reg* %10595, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10596 to i64*
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10598 = getelementptr inbounds %struct.GPR, %struct.GPR* %10597, i32 0, i32 15
  %10599 = getelementptr inbounds %struct.Reg, %struct.Reg* %10598, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10599 to i64*
  %10600 = load i64, i64* %PC.i2
  %10601 = add i64 %10600, 1
  store i64 %10601, i64* %PC.i2
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10603 = load i64, i64* %10602, align 8
  %10604 = add i64 %10603, 8
  %10605 = inttoptr i64 %10603 to i64*
  %10606 = load i64, i64* %10605
  store i64 %10606, i64* %RBP.i3, align 8
  store i64 %10604, i64* %10602, align 8
  store %struct.Memory* %loadMem_42a700, %struct.Memory** %MEMORY
  %loadMem_42a701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 33
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10609 to i64*
  %10610 = load i64, i64* %PC.i1
  %10611 = add i64 %10610, 1
  store i64 %10611, i64* %PC.i1
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10614 = load i64, i64* %10613, align 8
  %10615 = inttoptr i64 %10614 to i64*
  %10616 = load i64, i64* %10615
  store i64 %10616, i64* %10612, align 8
  %10617 = add i64 %10614, 8
  store i64 %10617, i64* %10613, align 8
  store %struct.Memory* %loadMem_42a701, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_42a701
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x6d0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 1744
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 1744
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1744, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42a172(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42a15f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x660__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RBP
  %15 = load i64, i64* %RAX
  %16 = mul i64 %15, 4
  %17 = add i64 %14, -1632
  %18 = add i64 %17, %16
  %19 = bitcast %union.vec128_t* %XMM0 to i8*
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = bitcast i8* %19 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 1
  %24 = extractelement <2 x float> %23, i32 0
  %25 = inttoptr i64 %18 to float*
  store float %24, float* %25
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0____rax__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = zext i8 %18 to i32
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = icmp eq i8 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i8 %18, 7
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i8 %18, 7
  %33 = xor i8 %30, %32
  %34 = add i8 %33, %32
  %35 = icmp eq i8 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a141(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x66c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1644
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x190__rax__rcx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 400
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss_0x7d0__rax__rcx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 2000
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fadd float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = bitcast i8* %11 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fcmp uno float %16, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd float %16, %19
  %23 = bitcast float %22 to i32
  %24 = and i32 %23, 2143289344
  %25 = icmp eq i32 %24, 2139095040
  %26 = and i32 %23, 4194303
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt float %16, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt float %16, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq float %16, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_jbe_.L_429df0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x190__rax__rcx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 400
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_0x7d0__rax__rcx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 2000
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fsub float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x66c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1644
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x66c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1644
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fmul float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x660__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RBP
  %15 = load i64, i64* %RCX
  %16 = mul i64 %15, 4
  %17 = add i64 %14, -1632
  %18 = add i64 %17, %16
  %19 = bitcast %union.vec128_t* %XMM0 to i8*
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = bitcast i8* %19 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 1
  %24 = extractelement <2 x float> %23, i32 0
  %25 = inttoptr i64 %18 to float*
  store float %24, float* %25
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x678__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1656
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x678__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x67c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x67c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_429e85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x680__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1664
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x680__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429eb3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x688__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1672
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x688__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x684__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x68c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1676
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_429f1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x690__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1680
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x690__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x694__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1684
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429f4a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x698__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1688
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x698__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x694__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1684
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x694__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 20
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_429f94(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_429f7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x69c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1692
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429f86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x69c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429fc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_429fb2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1696
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429fbb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_429fde(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1700
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429fe7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6a4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xb913f__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb913f__rip__type* @G_0xb913f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fmul float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x10__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to i32*
  %22 = load i32, i32* %21
  %23 = sitofp i32 %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fadd float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x14__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to i32*
  %22 = load i32, i32* %21
  %23 = sitofp i32 %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x7d0__rcx__rdx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 2000
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x190__rcx__rdx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 400
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a05d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1704
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a076(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x7d0__rax__rcx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 2000
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6a8__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x7ae468___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x7ae468_type* @G__0x7ae468 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x18__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1708
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gg_interpolate(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x7ae4c8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x7ae4c8_type* @G__0x7ae4c8 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6ac__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x664__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1636
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x664__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1636
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x660__rbp__rdi_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1632
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fmul float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x660__rbp__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RBP
  %15 = load i64, i64* %RDI
  %16 = mul i64 %15, 4
  %17 = add i64 %14, -1632
  %18 = add i64 %17, %16
  %19 = bitcast %union.vec128_t* %XMM0 to i8*
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = bitcast i8* %19 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 1
  %24 = extractelement <2 x float> %23, i32 0
  %25 = inttoptr i64 %18 to float*
  store float %24, float* %25
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rdi_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xb9011__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb9011__rip__type* @G_0xb9011__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a13c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a137(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xb8fda__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb8fda__rip__type* @G_0xb8fda__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a141(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x660__rbp__rax_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1632
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__0x7928__rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %RCX
  %16 = mul i64 %15, 4
  %17 = add i64 %14, 31016
  %18 = add i64 %17, %16
  %19 = bitcast %union.vec128_t* %XMM0 to i8*
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = bitcast i8* %19 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 1
  %24 = extractelement <2 x float> %23, i32 0
  %25 = inttoptr i64 %18 to float*
  store float %24, float* %25
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a164(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_429d26(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42a57f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42a56c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a567(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x668__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x668__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42a562(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x668__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a1ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a54e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x7928__rax__rcx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 31016
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = fpext float %23 to double
  %25 = bitcast i8* %14 to double*
  store double %24, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_42a3b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x668__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RCX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0____rax__rdx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = zext i8 %18 to i32
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = icmp eq i8 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i8 %18, 7
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i8 %18, 7
  %33 = xor i8 %30, %32
  %34 = add i8 %33, %32
  %35 = icmp eq i8 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a3b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xb8d2a__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb8d2a__rip__type* @G_0xb8d2a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x2d50__rax__rdx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 11600
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x668__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RCX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x660__rbp__rax_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1632
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fmul float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x2d50__rax__rdx_4____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 11600
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = fpext float %23 to double
  %25 = bitcast i8* %14 to double*
  store double %24, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x660__rbp__rax_4____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1632
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = fpext float %23 to double
  %25 = bitcast i8* %14 to double*
  store double %24, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = bitcast i8* %11 to double*
  %20 = load double, double* %19, align 1
  %21 = fptrunc double %20 to float
  %22 = bitcast i8* %10 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %15, i32 1
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %18, i32 0
  %27 = bitcast i8* %16 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %18, i32 1
  %29 = getelementptr inbounds i8, i8* %10, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x670__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1648
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x7928__rax__rdx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 31016
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x670__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a2fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x7928__rax__rcx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 31016
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1712
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a30e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x670__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6b0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = bitcast i8* %11 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fcmp uno float %16, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd float %16, %19
  %23 = bitcast float %22 to i32
  %24 = and i32 %23, 2143289344
  %25 = icmp eq i32 %24, 2139095040
  %26 = and i32 %23, 4194303
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt float %16, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt float %16, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq float %16, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_jbe_.L_42a387(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a362(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1716
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a372(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6b4__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1720
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a397(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6b8__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1720
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a549(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a544(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xb8d2d__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb8d2d__rip__type* @G_0xb8d2d__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x2710__rax__rdx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 10000
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 9
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = bitcast i8* %14 to float*
  store float %23, float* %24, align 1
  %25 = getelementptr inbounds i8, i8* %14, i64 4
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 1
  %27 = getelementptr inbounds i8, i8* %14, i64 8
  %28 = bitcast i8* %27 to float*
  store float 0.000000e+00, float* %28, align 1
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = bitcast i8* %29 to float*
  store float 0.000000e+00, float* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_0x2710__rax__rdx_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 10000
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fsub float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss_MINUS0x660__rbp__rax_4____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1632
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 9
  store i64 %22, i64* %PC
  %23 = bitcast i8* %15 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 1
  %25 = getelementptr inbounds i8, i8* %15, i64 8
  %26 = bitcast i8* %25 to <2 x i32>*
  %27 = load <2 x i32>, <2 x i32>* %26, align 1
  %28 = inttoptr i64 %20 to float*
  %29 = load float, float* %28
  %30 = extractelement <2 x float> %24, i32 0
  %31 = fmul float %30, %29
  %32 = bitcast i8* %14 to float*
  store float %31, float* %32, align 1
  %33 = bitcast <2 x float> %24 to <2 x i32>
  %34 = extractelement <2 x i32> %33, i32 1
  %35 = getelementptr inbounds i8, i8* %14, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  %37 = extractelement <2 x i32> %27, i32 0
  %38 = getelementptr inbounds i8, i8* %14, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = extractelement <2 x i32> %27, i32 1
  %41 = getelementptr inbounds i8, i8* %14, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fadd float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x674__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1652
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x674__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a48e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x674__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1724
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a4a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6bc__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1724
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a4cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1728
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a52b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a502(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x6c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1732
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a51b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6c4__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1732
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x6c0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x668__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x668__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a1b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a567(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a56c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a571(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a179(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_42a6f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42a6e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a6e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jbe_.L_42a607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7f68__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 32616
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 1, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42a607(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_42a654(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_42a654(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a698(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xb88ef__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb88ef__rip__type* @G_0xb88ef__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a6dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_42a6d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xb88ab__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xb88ab__rip__type* @G_0xb88ab__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a6e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a6e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a6eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_42a586(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x6d0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1744, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1744
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1744, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
