; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0xab0f24_type = type <{ [4 x i8] }>
%G_0xab0f28_type = type <{ [1 x i8] }>
%G__0x57bdd8_type = type <{ [8 x i8] }>
%G__0x57d7b6_type = type <{ [8 x i8] }>
%G__0x57d8ef_type = type <{ [8 x i8] }>
%G__0x57d90a_type = type <{ [8 x i8] }>
%G__0x57d936_type = type <{ [8 x i8] }>
%G__0x57d962_type = type <{ [8 x i8] }>
%G__0x57d97a_type = type <{ [8 x i8] }>
%G__0x7cc820_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0xab0f24 = global %G_0xab0f24_type zeroinitializer
@G_0xab0f28 = global %G_0xab0f28_type zeroinitializer
@G__0x57bdd8 = global %G__0x57bdd8_type zeroinitializer
@G__0x57d7b6 = global %G__0x57d7b6_type zeroinitializer
@G__0x57d8ef = global %G__0x57d8ef_type zeroinitializer
@G__0x57d90a = global %G__0x57d90a_type zeroinitializer
@G__0x57d936 = global %G__0x57d936_type zeroinitializer
@G__0x57d962 = global %G__0x57d962_type zeroinitializer
@G__0x57d97a = global %G__0x57d97a_type zeroinitializer
@G__0x7cc820 = global %G__0x7cc820_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b030.is_halfeye(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b060.reset_map(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b0a0.first_map(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b0f0.next_map(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_46bc30.safe_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @recognize_eye(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43a330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43a330, %struct.Memory** %MEMORY
  %loadMem_43a331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1536 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1537 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1536
  %27 = load i64, i64* %PC.i1535
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1535
  store i64 %26, i64* %RBP.i1537, align 8
  store %struct.Memory* %loadMem_43a331, %struct.Memory** %MEMORY
  %loadMem_43a334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1534 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1534
  %36 = load i64, i64* %PC.i1533
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1533
  %38 = sub i64 %35, 448
  store i64 %38, i64* %RSP.i1534, align 8
  %39 = icmp ult i64 %35, 448
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 448, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_43a334, %struct.Memory** %MEMORY
  %loadMem_43a33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1531 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1532 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1532
  %77 = add i64 %76, 16
  %78 = load i64, i64* %PC.i1530
  %79 = add i64 %78, 4
  store i64 %79, i64* %PC.i1530
  %80 = inttoptr i64 %77 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %RAX.i1531, align 8
  store %struct.Memory* %loadMem_43a33b, %struct.Memory** %MEMORY
  %loadMem_43a33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 11
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %EDI.i1528 = bitcast %union.anon* %87 to i32*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i1529 = bitcast %union.anon* %90 to i64*
  %91 = load i64, i64* %RBP.i1529
  %92 = sub i64 %91, 8
  %93 = load i32, i32* %EDI.i1528
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %PC.i1527
  %96 = add i64 %95, 3
  store i64 %96, i64* %PC.i1527
  %97 = inttoptr i64 %92 to i32*
  store i32 %93, i32* %97
  store %struct.Memory* %loadMem_43a33f, %struct.Memory** %MEMORY
  %loadMem_43a342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %99 = getelementptr inbounds %struct.GPR, %struct.GPR* %98, i32 0, i32 33
  %100 = getelementptr inbounds %struct.Reg, %struct.Reg* %99, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %100 to i64*
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 9
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %RSI.i1525 = bitcast %union.anon* %103 to i64*
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 15
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %106 to i64*
  %107 = load i64, i64* %RBP.i1526
  %108 = sub i64 %107, 16
  %109 = load i64, i64* %RSI.i1525
  %110 = load i64, i64* %PC.i1524
  %111 = add i64 %110, 4
  store i64 %111, i64* %PC.i1524
  %112 = inttoptr i64 %108 to i64*
  store i64 %109, i64* %112
  store %struct.Memory* %loadMem_43a342, %struct.Memory** %MEMORY
  %loadMem_43a346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 33
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %115 to i64*
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %117 = getelementptr inbounds %struct.GPR, %struct.GPR* %116, i32 0, i32 7
  %118 = getelementptr inbounds %struct.Reg, %struct.Reg* %117, i32 0, i32 0
  %RDX.i1522 = bitcast %union.anon* %118 to i64*
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 15
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %121 to i64*
  %122 = load i64, i64* %RBP.i1523
  %123 = sub i64 %122, 24
  %124 = load i64, i64* %RDX.i1522
  %125 = load i64, i64* %PC.i1521
  %126 = add i64 %125, 4
  store i64 %126, i64* %PC.i1521
  %127 = inttoptr i64 %123 to i64*
  store i64 %124, i64* %127
  store %struct.Memory* %loadMem_43a346, %struct.Memory** %MEMORY
  %loadMem_43a34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %129 = getelementptr inbounds %struct.GPR, %struct.GPR* %128, i32 0, i32 33
  %130 = getelementptr inbounds %struct.Reg, %struct.Reg* %129, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %130 to i64*
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 5
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i1520
  %138 = sub i64 %137, 32
  %139 = load i64, i64* %RCX.i1519
  %140 = load i64, i64* %PC.i1518
  %141 = add i64 %140, 4
  store i64 %141, i64* %PC.i1518
  %142 = inttoptr i64 %138 to i64*
  store i64 %139, i64* %142
  store %struct.Memory* %loadMem_43a34a, %struct.Memory** %MEMORY
  %loadMem_43a34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 33
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %145 to i64*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 15
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %148 to i64*
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 17
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %R8.i = bitcast %union.anon* %151 to i64*
  %152 = load i64, i64* %RBP.i1517
  %153 = sub i64 %152, 40
  %154 = load i64, i64* %R8.i
  %155 = load i64, i64* %PC.i1516
  %156 = add i64 %155, 4
  store i64 %156, i64* %PC.i1516
  %157 = inttoptr i64 %153 to i64*
  store i64 %154, i64* %157
  store %struct.Memory* %loadMem_43a34e, %struct.Memory** %MEMORY
  %loadMem_43a352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 15
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %RBP.i1515 = bitcast %union.anon* %163 to i64*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 19
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %R9.i = bitcast %union.anon* %166 to i64*
  %167 = load i64, i64* %RBP.i1515
  %168 = sub i64 %167, 48
  %169 = load i64, i64* %R9.i
  %170 = load i64, i64* %PC.i1514
  %171 = add i64 %170, 4
  store i64 %171, i64* %PC.i1514
  %172 = inttoptr i64 %168 to i64*
  store i64 %169, i64* %172
  store %struct.Memory* %loadMem_43a352, %struct.Memory** %MEMORY
  %loadMem_43a356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 33
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %175 to i64*
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 1
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %RAX.i1512 = bitcast %union.anon* %178 to i64*
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 15
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %RBP.i1513 = bitcast %union.anon* %181 to i64*
  %182 = load i64, i64* %RBP.i1513
  %183 = sub i64 %182, 56
  %184 = load i64, i64* %RAX.i1512
  %185 = load i64, i64* %PC.i1511
  %186 = add i64 %185, 4
  store i64 %186, i64* %PC.i1511
  %187 = inttoptr i64 %183 to i64*
  store i64 %184, i64* %187
  store %struct.Memory* %loadMem_43a356, %struct.Memory** %MEMORY
  %loadMem_43a35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 33
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %190 to i64*
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 15
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %RBP.i1510 = bitcast %union.anon* %193 to i64*
  %194 = load i64, i64* %RBP.i1510
  %195 = sub i64 %194, 72
  %196 = load i64, i64* %PC.i1509
  %197 = add i64 %196, 7
  store i64 %197, i64* %PC.i1509
  %198 = inttoptr i64 %195 to i32*
  store i32 0, i32* %198
  store %struct.Memory* %loadMem_43a35a, %struct.Memory** %MEMORY
  %loadMem_43a361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %200 = getelementptr inbounds %struct.GPR, %struct.GPR* %199, i32 0, i32 33
  %201 = getelementptr inbounds %struct.Reg, %struct.Reg* %200, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %201 to i64*
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %203 = getelementptr inbounds %struct.GPR, %struct.GPR* %202, i32 0, i32 15
  %204 = getelementptr inbounds %struct.Reg, %struct.Reg* %203, i32 0, i32 0
  %RBP.i1508 = bitcast %union.anon* %204 to i64*
  %205 = load i64, i64* %RBP.i1508
  %206 = sub i64 %205, 76
  %207 = load i64, i64* %PC.i1507
  %208 = add i64 %207, 7
  store i64 %208, i64* %PC.i1507
  %209 = inttoptr i64 %206 to i32*
  store i32 0, i32* %209
  store %struct.Memory* %loadMem_43a361, %struct.Memory** %MEMORY
  %loadMem_43a368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 33
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 15
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %RBP.i1506 = bitcast %union.anon* %215 to i64*
  %216 = load i64, i64* %RBP.i1506
  %217 = sub i64 %216, 16
  %218 = load i64, i64* %PC.i1505
  %219 = add i64 %218, 5
  store i64 %219, i64* %PC.i1505
  %220 = inttoptr i64 %217 to i64*
  %221 = load i64, i64* %220
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %222, align 1
  %223 = trunc i64 %221 to i32
  %224 = and i32 %223, 255
  %225 = call i32 @llvm.ctpop.i32(i32 %224)
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 1
  %228 = xor i8 %227, 1
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %228, i8* %229, align 1
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %230, align 1
  %231 = icmp eq i64 %221, 0
  %232 = zext i1 %231 to i8
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %232, i8* %233, align 1
  %234 = lshr i64 %221, 63
  %235 = trunc i64 %234 to i8
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %235, i8* %236, align 1
  %237 = lshr i64 %221, 63
  %238 = xor i64 %234, %237
  %239 = add i64 %238, %237
  %240 = icmp eq i64 %239, 2
  %241 = zext i1 %240 to i8
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %241, i8* %242, align 1
  store %struct.Memory* %loadMem_43a368, %struct.Memory** %MEMORY
  %loadMem_43a36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 33
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %245 to i64*
  %246 = load i64, i64* %PC.i1504
  %247 = add i64 %246, 11
  %248 = load i64, i64* %PC.i1504
  %249 = add i64 %248, 6
  %250 = load i64, i64* %PC.i1504
  %251 = add i64 %250, 6
  store i64 %251, i64* %PC.i1504
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %253 = load i8, i8* %252, align 1
  store i8 %253, i8* %BRANCH_TAKEN, align 1
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %255 = icmp ne i8 %253, 0
  %256 = select i1 %255, i64 %247, i64 %249
  store i64 %256, i64* %254, align 8
  store %struct.Memory* %loadMem_43a36d, %struct.Memory** %MEMORY
  %loadBr_43a36d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a36d = icmp eq i8 %loadBr_43a36d, 1
  br i1 %cmpBr_43a36d, label %block_.L_43a378, label %block_43a373

block_43a373:                                     ; preds = %entry
  %loadMem_43a373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %258 = getelementptr inbounds %struct.GPR, %struct.GPR* %257, i32 0, i32 33
  %259 = getelementptr inbounds %struct.Reg, %struct.Reg* %258, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %259 to i64*
  %260 = load i64, i64* %PC.i1503
  %261 = add i64 %260, 45
  %262 = load i64, i64* %PC.i1503
  %263 = add i64 %262, 5
  store i64 %263, i64* %PC.i1503
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %261, i64* %264, align 8
  store %struct.Memory* %loadMem_43a373, %struct.Memory** %MEMORY
  br label %block_.L_43a3a0

block_.L_43a378:                                  ; preds = %entry
  %loadMem_43a378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 33
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %267 to i64*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 11
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RDI.i1502 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %PC.i1501
  %272 = add i64 %271, 10
  store i64 %272, i64* %PC.i1501
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI.i1502, align 8
  store %struct.Memory* %loadMem_43a378, %struct.Memory** %MEMORY
  %loadMem_43a382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 33
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %275 to i64*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 9
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %RSI.i1500 = bitcast %union.anon* %278 to i64*
  %279 = load i64, i64* %PC.i1499
  %280 = add i64 %279, 5
  store i64 %280, i64* %PC.i1499
  store i64 1107, i64* %RSI.i1500, align 8
  store %struct.Memory* %loadMem_43a382, %struct.Memory** %MEMORY
  %loadMem_43a387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 33
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %283 to i64*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 7
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %RDX.i1498 = bitcast %union.anon* %286 to i64*
  %287 = load i64, i64* %PC.i1497
  %288 = add i64 %287, 10
  store i64 %288, i64* %PC.i1497
  store i64 ptrtoint (%G__0x57d8ef_type* @G__0x57d8ef to i64), i64* %RDX.i1498, align 8
  store %struct.Memory* %loadMem_43a387, %struct.Memory** %MEMORY
  %loadMem_43a391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 33
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %291 to i64*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 1
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %RAX.i1496 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %PC.i1495
  %296 = add i64 %295, 5
  store i64 %296, i64* %PC.i1495
  store i64 4294967295, i64* %RAX.i1496, align 8
  store %struct.Memory* %loadMem_43a391, %struct.Memory** %MEMORY
  %loadMem_43a396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 33
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %299 to i64*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %301 = getelementptr inbounds %struct.GPR, %struct.GPR* %300, i32 0, i32 1
  %302 = getelementptr inbounds %struct.Reg, %struct.Reg* %301, i32 0, i32 0
  %EAX.i1493 = bitcast %union.anon* %302 to i32*
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 5
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %RCX.i1494 = bitcast %union.anon* %305 to i64*
  %306 = load i32, i32* %EAX.i1493
  %307 = zext i32 %306 to i64
  %308 = load i64, i64* %PC.i1492
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC.i1492
  %310 = and i64 %307, 4294967295
  store i64 %310, i64* %RCX.i1494, align 8
  store %struct.Memory* %loadMem_43a396, %struct.Memory** %MEMORY
  %loadMem_43a398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %312 = getelementptr inbounds %struct.GPR, %struct.GPR* %311, i32 0, i32 33
  %313 = getelementptr inbounds %struct.Reg, %struct.Reg* %312, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %313 to i64*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 1
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %EAX.i1490 = bitcast %union.anon* %316 to i32*
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 17
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %R8D.i1491 = bitcast %union.anon* %319 to i32*
  %320 = bitcast i32* %R8D.i1491 to i64*
  %321 = load i32, i32* %EAX.i1490
  %322 = zext i32 %321 to i64
  %323 = load i64, i64* %PC.i1489
  %324 = add i64 %323, 3
  store i64 %324, i64* %PC.i1489
  %325 = and i64 %322, 4294967295
  store i64 %325, i64* %320, align 8
  store %struct.Memory* %loadMem_43a398, %struct.Memory** %MEMORY
  %loadMem1_43a39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 33
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %328 to i64*
  %329 = load i64, i64* %PC.i1488
  %330 = add i64 %329, 97525
  %331 = load i64, i64* %PC.i1488
  %332 = add i64 %331, 5
  %333 = load i64, i64* %PC.i1488
  %334 = add i64 %333, 5
  store i64 %334, i64* %PC.i1488
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %336 = load i64, i64* %335, align 8
  %337 = add i64 %336, -8
  %338 = inttoptr i64 %337 to i64*
  store i64 %332, i64* %338
  store i64 %337, i64* %335, align 8
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %330, i64* %339, align 8
  store %struct.Memory* %loadMem1_43a39b, %struct.Memory** %MEMORY
  %loadMem2_43a39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a39b = load i64, i64* %3
  %call2_43a39b = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_43a39b, %struct.Memory* %loadMem2_43a39b)
  store %struct.Memory* %call2_43a39b, %struct.Memory** %MEMORY
  br label %block_.L_43a3a0

block_.L_43a3a0:                                  ; preds = %block_.L_43a378, %block_43a373
  %loadMem_43a3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 33
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %342 to i64*
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 15
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %RBP.i1487 = bitcast %union.anon* %345 to i64*
  %346 = load i64, i64* %RBP.i1487
  %347 = sub i64 %346, 24
  %348 = load i64, i64* %PC.i1486
  %349 = add i64 %348, 5
  store i64 %349, i64* %PC.i1486
  %350 = inttoptr i64 %347 to i64*
  %351 = load i64, i64* %350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %352, align 1
  %353 = trunc i64 %351 to i32
  %354 = and i32 %353, 255
  %355 = call i32 @llvm.ctpop.i32(i32 %354)
  %356 = trunc i32 %355 to i8
  %357 = and i8 %356, 1
  %358 = xor i8 %357, 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %358, i8* %359, align 1
  %360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %360, align 1
  %361 = icmp eq i64 %351, 0
  %362 = zext i1 %361 to i8
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %362, i8* %363, align 1
  %364 = lshr i64 %351, 63
  %365 = trunc i64 %364 to i8
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %365, i8* %366, align 1
  %367 = lshr i64 %351, 63
  %368 = xor i64 %364, %367
  %369 = add i64 %368, %367
  %370 = icmp eq i64 %369, 2
  %371 = zext i1 %370 to i8
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %371, i8* %372, align 1
  store %struct.Memory* %loadMem_43a3a0, %struct.Memory** %MEMORY
  %loadMem_43a3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 33
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %375 to i64*
  %376 = load i64, i64* %PC.i1485
  %377 = add i64 %376, 11
  %378 = load i64, i64* %PC.i1485
  %379 = add i64 %378, 6
  %380 = load i64, i64* %PC.i1485
  %381 = add i64 %380, 6
  store i64 %381, i64* %PC.i1485
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %383 = load i8, i8* %382, align 1
  store i8 %383, i8* %BRANCH_TAKEN, align 1
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %385 = icmp ne i8 %383, 0
  %386 = select i1 %385, i64 %377, i64 %379
  store i64 %386, i64* %384, align 8
  store %struct.Memory* %loadMem_43a3a5, %struct.Memory** %MEMORY
  %loadBr_43a3a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a3a5 = icmp eq i8 %loadBr_43a3a5, 1
  br i1 %cmpBr_43a3a5, label %block_.L_43a3b0, label %block_43a3ab

block_43a3ab:                                     ; preds = %block_.L_43a3a0
  %loadMem_43a3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 33
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %389 to i64*
  %390 = load i64, i64* %PC.i1484
  %391 = add i64 %390, 45
  %392 = load i64, i64* %PC.i1484
  %393 = add i64 %392, 5
  store i64 %393, i64* %PC.i1484
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %391, i64* %394, align 8
  store %struct.Memory* %loadMem_43a3ab, %struct.Memory** %MEMORY
  br label %block_.L_43a3d8

block_.L_43a3b0:                                  ; preds = %block_.L_43a3a0
  %loadMem_43a3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 33
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %397 to i64*
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 11
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %RDI.i1483 = bitcast %union.anon* %400 to i64*
  %401 = load i64, i64* %PC.i1482
  %402 = add i64 %401, 10
  store i64 %402, i64* %PC.i1482
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI.i1483, align 8
  store %struct.Memory* %loadMem_43a3b0, %struct.Memory** %MEMORY
  %loadMem_43a3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %404 = getelementptr inbounds %struct.GPR, %struct.GPR* %403, i32 0, i32 33
  %405 = getelementptr inbounds %struct.Reg, %struct.Reg* %404, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %405 to i64*
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 9
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %RSI.i1481 = bitcast %union.anon* %408 to i64*
  %409 = load i64, i64* %PC.i1480
  %410 = add i64 %409, 5
  store i64 %410, i64* %PC.i1480
  store i64 1108, i64* %RSI.i1481, align 8
  store %struct.Memory* %loadMem_43a3ba, %struct.Memory** %MEMORY
  %loadMem_43a3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %412 = getelementptr inbounds %struct.GPR, %struct.GPR* %411, i32 0, i32 33
  %413 = getelementptr inbounds %struct.Reg, %struct.Reg* %412, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %413 to i64*
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %415 = getelementptr inbounds %struct.GPR, %struct.GPR* %414, i32 0, i32 7
  %416 = getelementptr inbounds %struct.Reg, %struct.Reg* %415, i32 0, i32 0
  %RDX.i1479 = bitcast %union.anon* %416 to i64*
  %417 = load i64, i64* %PC.i1478
  %418 = add i64 %417, 10
  store i64 %418, i64* %PC.i1478
  store i64 ptrtoint (%G__0x57bdd8_type* @G__0x57bdd8 to i64), i64* %RDX.i1479, align 8
  store %struct.Memory* %loadMem_43a3bf, %struct.Memory** %MEMORY
  %loadMem_43a3c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %420 = getelementptr inbounds %struct.GPR, %struct.GPR* %419, i32 0, i32 33
  %421 = getelementptr inbounds %struct.Reg, %struct.Reg* %420, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %421 to i64*
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %423 = getelementptr inbounds %struct.GPR, %struct.GPR* %422, i32 0, i32 1
  %424 = getelementptr inbounds %struct.Reg, %struct.Reg* %423, i32 0, i32 0
  %RAX.i1477 = bitcast %union.anon* %424 to i64*
  %425 = load i64, i64* %PC.i1476
  %426 = add i64 %425, 5
  store i64 %426, i64* %PC.i1476
  store i64 4294967295, i64* %RAX.i1477, align 8
  store %struct.Memory* %loadMem_43a3c9, %struct.Memory** %MEMORY
  %loadMem_43a3ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 33
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %429 to i64*
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %431 = getelementptr inbounds %struct.GPR, %struct.GPR* %430, i32 0, i32 1
  %432 = getelementptr inbounds %struct.Reg, %struct.Reg* %431, i32 0, i32 0
  %EAX.i1474 = bitcast %union.anon* %432 to i32*
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %434 = getelementptr inbounds %struct.GPR, %struct.GPR* %433, i32 0, i32 5
  %435 = getelementptr inbounds %struct.Reg, %struct.Reg* %434, i32 0, i32 0
  %RCX.i1475 = bitcast %union.anon* %435 to i64*
  %436 = load i32, i32* %EAX.i1474
  %437 = zext i32 %436 to i64
  %438 = load i64, i64* %PC.i1473
  %439 = add i64 %438, 2
  store i64 %439, i64* %PC.i1473
  %440 = and i64 %437, 4294967295
  store i64 %440, i64* %RCX.i1475, align 8
  store %struct.Memory* %loadMem_43a3ce, %struct.Memory** %MEMORY
  %loadMem_43a3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 33
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 1
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %EAX.i1471 = bitcast %union.anon* %446 to i32*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 17
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %R8D.i1472 = bitcast %union.anon* %449 to i32*
  %450 = bitcast i32* %R8D.i1472 to i64*
  %451 = load i32, i32* %EAX.i1471
  %452 = zext i32 %451 to i64
  %453 = load i64, i64* %PC.i1470
  %454 = add i64 %453, 3
  store i64 %454, i64* %PC.i1470
  %455 = and i64 %452, 4294967295
  store i64 %455, i64* %450, align 8
  store %struct.Memory* %loadMem_43a3d0, %struct.Memory** %MEMORY
  %loadMem1_43a3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 33
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %458 to i64*
  %459 = load i64, i64* %PC.i1469
  %460 = add i64 %459, 97469
  %461 = load i64, i64* %PC.i1469
  %462 = add i64 %461, 5
  %463 = load i64, i64* %PC.i1469
  %464 = add i64 %463, 5
  store i64 %464, i64* %PC.i1469
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %466 = load i64, i64* %465, align 8
  %467 = add i64 %466, -8
  %468 = inttoptr i64 %467 to i64*
  store i64 %462, i64* %468
  store i64 %467, i64* %465, align 8
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %460, i64* %469, align 8
  store %struct.Memory* %loadMem1_43a3d3, %struct.Memory** %MEMORY
  %loadMem2_43a3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a3d3 = load i64, i64* %3
  %call2_43a3d3 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_43a3d3, %struct.Memory* %loadMem2_43a3d3)
  store %struct.Memory* %call2_43a3d3, %struct.Memory** %MEMORY
  br label %block_.L_43a3d8

block_.L_43a3d8:                                  ; preds = %block_.L_43a3b0, %block_43a3ab
  %loadMem_43a3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %471 = getelementptr inbounds %struct.GPR, %struct.GPR* %470, i32 0, i32 33
  %472 = getelementptr inbounds %struct.Reg, %struct.Reg* %471, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %472 to i64*
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 1
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %RAX.i1467 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 15
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %RBP.i1468 = bitcast %union.anon* %478 to i64*
  %479 = load i64, i64* %RBP.i1468
  %480 = sub i64 %479, 40
  %481 = load i64, i64* %PC.i1466
  %482 = add i64 %481, 4
  store i64 %482, i64* %PC.i1466
  %483 = inttoptr i64 %480 to i64*
  %484 = load i64, i64* %483
  store i64 %484, i64* %RAX.i1467, align 8
  store %struct.Memory* %loadMem_43a3d8, %struct.Memory** %MEMORY
  %loadMem_43a3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %486 = getelementptr inbounds %struct.GPR, %struct.GPR* %485, i32 0, i32 33
  %487 = getelementptr inbounds %struct.Reg, %struct.Reg* %486, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %487 to i64*
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %489 = getelementptr inbounds %struct.GPR, %struct.GPR* %488, i32 0, i32 5
  %490 = getelementptr inbounds %struct.Reg, %struct.Reg* %489, i32 0, i32 0
  %RCX.i1464 = bitcast %union.anon* %490 to i64*
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 15
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %RBP.i1465
  %495 = sub i64 %494, 8
  %496 = load i64, i64* %PC.i1463
  %497 = add i64 %496, 4
  store i64 %497, i64* %PC.i1463
  %498 = inttoptr i64 %495 to i32*
  %499 = load i32, i32* %498
  %500 = sext i32 %499 to i64
  store i64 %500, i64* %RCX.i1464, align 8
  store %struct.Memory* %loadMem_43a3dc, %struct.Memory** %MEMORY
  %loadMem_43a3e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 33
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %503 to i64*
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 5
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %RCX.i1462 = bitcast %union.anon* %506 to i64*
  %507 = load i64, i64* %RCX.i1462
  %508 = load i64, i64* %PC.i1461
  %509 = add i64 %508, 4
  store i64 %509, i64* %PC.i1461
  %510 = sext i64 %507 to i128
  %511 = and i128 %510, -18446744073709551616
  %512 = zext i64 %507 to i128
  %513 = or i128 %511, %512
  %514 = mul i128 36, %513
  %515 = trunc i128 %514 to i64
  store i64 %515, i64* %RCX.i1462, align 8
  %516 = sext i64 %515 to i128
  %517 = icmp ne i128 %516, %514
  %518 = zext i1 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %518, i8* %519, align 1
  %520 = trunc i128 %514 to i32
  %521 = and i32 %520, 255
  %522 = call i32 @llvm.ctpop.i32(i32 %521)
  %523 = trunc i32 %522 to i8
  %524 = and i8 %523, 1
  %525 = xor i8 %524, 1
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %525, i8* %526, align 1
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %527, align 1
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %528, align 1
  %529 = lshr i64 %515, 63
  %530 = trunc i64 %529 to i8
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %530, i8* %531, align 1
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %518, i8* %532, align 1
  store %struct.Memory* %loadMem_43a3e0, %struct.Memory** %MEMORY
  %loadMem_43a3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 33
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %535 to i64*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 1
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %RAX.i1459 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 5
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %RCX.i1460 = bitcast %union.anon* %541 to i64*
  %542 = load i64, i64* %RAX.i1459
  %543 = load i64, i64* %RCX.i1460
  %544 = load i64, i64* %PC.i1458
  %545 = add i64 %544, 3
  store i64 %545, i64* %PC.i1458
  %546 = add i64 %543, %542
  store i64 %546, i64* %RAX.i1459, align 8
  %547 = icmp ult i64 %546, %542
  %548 = icmp ult i64 %546, %543
  %549 = or i1 %547, %548
  %550 = zext i1 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %550, i8* %551, align 1
  %552 = trunc i64 %546 to i32
  %553 = and i32 %552, 255
  %554 = call i32 @llvm.ctpop.i32(i32 %553)
  %555 = trunc i32 %554 to i8
  %556 = and i8 %555, 1
  %557 = xor i8 %556, 1
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %557, i8* %558, align 1
  %559 = xor i64 %543, %542
  %560 = xor i64 %559, %546
  %561 = lshr i64 %560, 4
  %562 = trunc i64 %561 to i8
  %563 = and i8 %562, 1
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %563, i8* %564, align 1
  %565 = icmp eq i64 %546, 0
  %566 = zext i1 %565 to i8
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %566, i8* %567, align 1
  %568 = lshr i64 %546, 63
  %569 = trunc i64 %568 to i8
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %569, i8* %570, align 1
  %571 = lshr i64 %542, 63
  %572 = lshr i64 %543, 63
  %573 = xor i64 %568, %571
  %574 = xor i64 %568, %572
  %575 = add i64 %573, %574
  %576 = icmp eq i64 %575, 2
  %577 = zext i1 %576 to i8
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %577, i8* %578, align 1
  store %struct.Memory* %loadMem_43a3e4, %struct.Memory** %MEMORY
  %loadMem_43a3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 33
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %581 to i64*
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 1
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %RAX.i1456 = bitcast %union.anon* %584 to i64*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 7
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %587 to i64*
  %588 = load i64, i64* %RAX.i1456
  %589 = load i64, i64* %PC.i1455
  %590 = add i64 %589, 2
  store i64 %590, i64* %PC.i1455
  %591 = inttoptr i64 %588 to i32*
  %592 = load i32, i32* %591
  %593 = zext i32 %592 to i64
  store i64 %593, i64* %RDX.i1457, align 8
  store %struct.Memory* %loadMem_43a3e7, %struct.Memory** %MEMORY
  %loadMem_43a3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 33
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 7
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %EDX.i1453 = bitcast %union.anon* %599 to i32*
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 15
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %602 to i64*
  %603 = load i64, i64* %RBP.i1454
  %604 = sub i64 %603, 68
  %605 = load i32, i32* %EDX.i1453
  %606 = zext i32 %605 to i64
  %607 = load i64, i64* %PC.i1452
  %608 = add i64 %607, 3
  store i64 %608, i64* %PC.i1452
  %609 = inttoptr i64 %604 to i32*
  store i32 %605, i32* %609
  store %struct.Memory* %loadMem_43a3e9, %struct.Memory** %MEMORY
  %loadMem_43a3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 33
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %612 to i64*
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %614 = getelementptr inbounds %struct.GPR, %struct.GPR* %613, i32 0, i32 15
  %615 = getelementptr inbounds %struct.Reg, %struct.Reg* %614, i32 0, i32 0
  %RBP.i1451 = bitcast %union.anon* %615 to i64*
  %616 = load i64, i64* %RBP.i1451
  %617 = sub i64 %616, 68
  %618 = load i64, i64* %PC.i1450
  %619 = add i64 %618, 4
  store i64 %619, i64* %PC.i1450
  %620 = inttoptr i64 %617 to i32*
  %621 = load i32, i32* %620
  %622 = sub i32 %621, 5
  %623 = icmp ult i32 %621, 5
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %624, i8* %625, align 1
  %626 = and i32 %622, 255
  %627 = call i32 @llvm.ctpop.i32(i32 %626)
  %628 = trunc i32 %627 to i8
  %629 = and i8 %628, 1
  %630 = xor i8 %629, 1
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %630, i8* %631, align 1
  %632 = xor i32 %621, 5
  %633 = xor i32 %632, %622
  %634 = lshr i32 %633, 4
  %635 = trunc i32 %634 to i8
  %636 = and i8 %635, 1
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %636, i8* %637, align 1
  %638 = icmp eq i32 %622, 0
  %639 = zext i1 %638 to i8
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %639, i8* %640, align 1
  %641 = lshr i32 %622, 31
  %642 = trunc i32 %641 to i8
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %642, i8* %643, align 1
  %644 = lshr i32 %621, 31
  %645 = xor i32 %641, %644
  %646 = add i32 %645, %644
  %647 = icmp eq i32 %646, 2
  %648 = zext i1 %647 to i8
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %648, i8* %649, align 1
  store %struct.Memory* %loadMem_43a3ec, %struct.Memory** %MEMORY
  %loadMem_43a3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %651 = getelementptr inbounds %struct.GPR, %struct.GPR* %650, i32 0, i32 33
  %652 = getelementptr inbounds %struct.Reg, %struct.Reg* %651, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %652 to i64*
  %653 = load i64, i64* %PC.i1449
  %654 = add i64 %653, 13
  %655 = load i64, i64* %PC.i1449
  %656 = add i64 %655, 6
  %657 = load i64, i64* %PC.i1449
  %658 = add i64 %657, 6
  store i64 %658, i64* %PC.i1449
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %660 = load i8, i8* %659, align 1
  %661 = icmp eq i8 %660, 0
  %662 = zext i1 %661 to i8
  store i8 %662, i8* %BRANCH_TAKEN, align 1
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %664 = select i1 %661, i64 %654, i64 %656
  store i64 %664, i64* %663, align 8
  store %struct.Memory* %loadMem_43a3f0, %struct.Memory** %MEMORY
  %loadBr_43a3f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a3f0 = icmp eq i8 %loadBr_43a3f0, 1
  br i1 %cmpBr_43a3f0, label %block_.L_43a3fd, label %block_43a3f6

block_43a3f6:                                     ; preds = %block_.L_43a3d8
  %loadMem_43a3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %666 = getelementptr inbounds %struct.GPR, %struct.GPR* %665, i32 0, i32 33
  %667 = getelementptr inbounds %struct.Reg, %struct.Reg* %666, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %667 to i64*
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 15
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %RBP.i1448 = bitcast %union.anon* %670 to i64*
  %671 = load i64, i64* %RBP.i1448
  %672 = sub i64 %671, 68
  %673 = load i64, i64* %PC.i1447
  %674 = add i64 %673, 7
  store i64 %674, i64* %PC.i1447
  %675 = inttoptr i64 %672 to i32*
  store i32 2, i32* %675
  store %struct.Memory* %loadMem_43a3f6, %struct.Memory** %MEMORY
  br label %block_.L_43a3fd

block_.L_43a3fd:                                  ; preds = %block_43a3f6, %block_.L_43a3d8
  %loadMem_43a3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 33
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %678 to i64*
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 15
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %681 to i64*
  %682 = load i64, i64* %RBP.i1446
  %683 = sub i64 %682, 68
  %684 = load i64, i64* %PC.i1445
  %685 = add i64 %684, 4
  store i64 %685, i64* %PC.i1445
  %686 = inttoptr i64 %683 to i32*
  %687 = load i32, i32* %686
  %688 = sub i32 %687, 4
  %689 = icmp ult i32 %687, 4
  %690 = zext i1 %689 to i8
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %690, i8* %691, align 1
  %692 = and i32 %688, 255
  %693 = call i32 @llvm.ctpop.i32(i32 %692)
  %694 = trunc i32 %693 to i8
  %695 = and i8 %694, 1
  %696 = xor i8 %695, 1
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %696, i8* %697, align 1
  %698 = xor i32 %687, 4
  %699 = xor i32 %698, %688
  %700 = lshr i32 %699, 4
  %701 = trunc i32 %700 to i8
  %702 = and i8 %701, 1
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %702, i8* %703, align 1
  %704 = icmp eq i32 %688, 0
  %705 = zext i1 %704 to i8
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %705, i8* %706, align 1
  %707 = lshr i32 %688, 31
  %708 = trunc i32 %707 to i8
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %708, i8* %709, align 1
  %710 = lshr i32 %687, 31
  %711 = xor i32 %707, %710
  %712 = add i32 %711, %710
  %713 = icmp eq i32 %712, 2
  %714 = zext i1 %713 to i8
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %714, i8* %715, align 1
  store %struct.Memory* %loadMem_43a3fd, %struct.Memory** %MEMORY
  %loadMem_43a401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 33
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %718 to i64*
  %719 = load i64, i64* %PC.i1444
  %720 = add i64 %719, 13
  %721 = load i64, i64* %PC.i1444
  %722 = add i64 %721, 6
  %723 = load i64, i64* %PC.i1444
  %724 = add i64 %723, 6
  store i64 %724, i64* %PC.i1444
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %726 = load i8, i8* %725, align 1
  %727 = icmp eq i8 %726, 0
  %728 = zext i1 %727 to i8
  store i8 %728, i8* %BRANCH_TAKEN, align 1
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %730 = select i1 %727, i64 %720, i64 %722
  store i64 %730, i64* %729, align 8
  store %struct.Memory* %loadMem_43a401, %struct.Memory** %MEMORY
  %loadBr_43a401 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a401 = icmp eq i8 %loadBr_43a401, 1
  br i1 %cmpBr_43a401, label %block_.L_43a40e, label %block_43a407

block_43a407:                                     ; preds = %block_.L_43a3fd
  %loadMem_43a407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 33
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %733 to i64*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 15
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RBP.i1443
  %738 = sub i64 %737, 68
  %739 = load i64, i64* %PC.i1442
  %740 = add i64 %739, 7
  store i64 %740, i64* %PC.i1442
  %741 = inttoptr i64 %738 to i32*
  store i32 1, i32* %741
  store %struct.Memory* %loadMem_43a407, %struct.Memory** %MEMORY
  br label %block_.L_43a40e

block_.L_43a40e:                                  ; preds = %block_43a407, %block_.L_43a3fd
  %loadMem_43a40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 33
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %744 to i64*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 1
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %747 to i64*
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %749 = getelementptr inbounds %struct.GPR, %struct.GPR* %748, i32 0, i32 15
  %750 = getelementptr inbounds %struct.Reg, %struct.Reg* %749, i32 0, i32 0
  %RBP.i1441 = bitcast %union.anon* %750 to i64*
  %751 = load i64, i64* %RBP.i1441
  %752 = sub i64 %751, 40
  %753 = load i64, i64* %PC.i1439
  %754 = add i64 %753, 4
  store i64 %754, i64* %PC.i1439
  %755 = inttoptr i64 %752 to i64*
  %756 = load i64, i64* %755
  store i64 %756, i64* %RAX.i1440, align 8
  store %struct.Memory* %loadMem_43a40e, %struct.Memory** %MEMORY
  %loadMem_43a412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 33
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %759 to i64*
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %761 = getelementptr inbounds %struct.GPR, %struct.GPR* %760, i32 0, i32 5
  %762 = getelementptr inbounds %struct.Reg, %struct.Reg* %761, i32 0, i32 0
  %RCX.i1437 = bitcast %union.anon* %762 to i64*
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %764 = getelementptr inbounds %struct.GPR, %struct.GPR* %763, i32 0, i32 15
  %765 = getelementptr inbounds %struct.Reg, %struct.Reg* %764, i32 0, i32 0
  %RBP.i1438 = bitcast %union.anon* %765 to i64*
  %766 = load i64, i64* %RBP.i1438
  %767 = sub i64 %766, 8
  %768 = load i64, i64* %PC.i1436
  %769 = add i64 %768, 4
  store i64 %769, i64* %PC.i1436
  %770 = inttoptr i64 %767 to i32*
  %771 = load i32, i32* %770
  %772 = sext i32 %771 to i64
  store i64 %772, i64* %RCX.i1437, align 8
  store %struct.Memory* %loadMem_43a412, %struct.Memory** %MEMORY
  %loadMem_43a416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 33
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %PC.i1434 = bitcast %union.anon* %775 to i64*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 5
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %RCX.i1435 = bitcast %union.anon* %778 to i64*
  %779 = load i64, i64* %RCX.i1435
  %780 = load i64, i64* %PC.i1434
  %781 = add i64 %780, 4
  store i64 %781, i64* %PC.i1434
  %782 = sext i64 %779 to i128
  %783 = and i128 %782, -18446744073709551616
  %784 = zext i64 %779 to i128
  %785 = or i128 %783, %784
  %786 = mul i128 36, %785
  %787 = trunc i128 %786 to i64
  store i64 %787, i64* %RCX.i1435, align 8
  %788 = sext i64 %787 to i128
  %789 = icmp ne i128 %788, %786
  %790 = zext i1 %789 to i8
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %790, i8* %791, align 1
  %792 = trunc i128 %786 to i32
  %793 = and i32 %792, 255
  %794 = call i32 @llvm.ctpop.i32(i32 %793)
  %795 = trunc i32 %794 to i8
  %796 = and i8 %795, 1
  %797 = xor i8 %796, 1
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %797, i8* %798, align 1
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %799, align 1
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %800, align 1
  %801 = lshr i64 %787, 63
  %802 = trunc i64 %801 to i8
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %802, i8* %803, align 1
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %790, i8* %804, align 1
  store %struct.Memory* %loadMem_43a416, %struct.Memory** %MEMORY
  %loadMem_43a41a = load %struct.Memory*, %struct.Memory** %MEMORY
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 33
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %807 to i64*
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 1
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %RAX.i1432 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 5
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %RCX.i1433 = bitcast %union.anon* %813 to i64*
  %814 = load i64, i64* %RAX.i1432
  %815 = load i64, i64* %RCX.i1433
  %816 = load i64, i64* %PC.i1431
  %817 = add i64 %816, 3
  store i64 %817, i64* %PC.i1431
  %818 = add i64 %815, %814
  store i64 %818, i64* %RAX.i1432, align 8
  %819 = icmp ult i64 %818, %814
  %820 = icmp ult i64 %818, %815
  %821 = or i1 %819, %820
  %822 = zext i1 %821 to i8
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %822, i8* %823, align 1
  %824 = trunc i64 %818 to i32
  %825 = and i32 %824, 255
  %826 = call i32 @llvm.ctpop.i32(i32 %825)
  %827 = trunc i32 %826 to i8
  %828 = and i8 %827, 1
  %829 = xor i8 %828, 1
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %829, i8* %830, align 1
  %831 = xor i64 %815, %814
  %832 = xor i64 %831, %818
  %833 = lshr i64 %832, 4
  %834 = trunc i64 %833 to i8
  %835 = and i8 %834, 1
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %835, i8* %836, align 1
  %837 = icmp eq i64 %818, 0
  %838 = zext i1 %837 to i8
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %838, i8* %839, align 1
  %840 = lshr i64 %818, 63
  %841 = trunc i64 %840 to i8
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %841, i8* %842, align 1
  %843 = lshr i64 %814, 63
  %844 = lshr i64 %815, 63
  %845 = xor i64 %840, %843
  %846 = xor i64 %840, %844
  %847 = add i64 %845, %846
  %848 = icmp eq i64 %847, 2
  %849 = zext i1 %848 to i8
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %849, i8* %850, align 1
  store %struct.Memory* %loadMem_43a41a, %struct.Memory** %MEMORY
  %loadMem_43a41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 33
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %853 to i64*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 1
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %RAX.i1429 = bitcast %union.anon* %856 to i64*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 7
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %RDX.i1430 = bitcast %union.anon* %859 to i64*
  %860 = load i64, i64* %RAX.i1429
  %861 = add i64 %860, 4
  %862 = load i64, i64* %PC.i1428
  %863 = add i64 %862, 3
  store i64 %863, i64* %PC.i1428
  %864 = inttoptr i64 %861 to i32*
  %865 = load i32, i32* %864
  %866 = zext i32 %865 to i64
  store i64 %866, i64* %RDX.i1430, align 8
  store %struct.Memory* %loadMem_43a41d, %struct.Memory** %MEMORY
  %loadMem_43a420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %868 = getelementptr inbounds %struct.GPR, %struct.GPR* %867, i32 0, i32 33
  %869 = getelementptr inbounds %struct.Reg, %struct.Reg* %868, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %869 to i64*
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 1
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %RAX.i1426 = bitcast %union.anon* %872 to i64*
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 15
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %RBP.i1427 = bitcast %union.anon* %875 to i64*
  %876 = load i64, i64* %RBP.i1427
  %877 = sub i64 %876, 40
  %878 = load i64, i64* %PC.i1425
  %879 = add i64 %878, 4
  store i64 %879, i64* %PC.i1425
  %880 = inttoptr i64 %877 to i64*
  %881 = load i64, i64* %880
  store i64 %881, i64* %RAX.i1426, align 8
  store %struct.Memory* %loadMem_43a420, %struct.Memory** %MEMORY
  %loadMem_43a424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 33
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %884 to i64*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 5
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %RCX.i1423 = bitcast %union.anon* %887 to i64*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 15
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %RBP.i1424 = bitcast %union.anon* %890 to i64*
  %891 = load i64, i64* %RBP.i1424
  %892 = sub i64 %891, 8
  %893 = load i64, i64* %PC.i1422
  %894 = add i64 %893, 4
  store i64 %894, i64* %PC.i1422
  %895 = inttoptr i64 %892 to i32*
  %896 = load i32, i32* %895
  %897 = sext i32 %896 to i64
  store i64 %897, i64* %RCX.i1423, align 8
  store %struct.Memory* %loadMem_43a424, %struct.Memory** %MEMORY
  %loadMem_43a428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %900 to i64*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 5
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %RCX.i1421 = bitcast %union.anon* %903 to i64*
  %904 = load i64, i64* %RCX.i1421
  %905 = load i64, i64* %PC.i1420
  %906 = add i64 %905, 4
  store i64 %906, i64* %PC.i1420
  %907 = sext i64 %904 to i128
  %908 = and i128 %907, -18446744073709551616
  %909 = zext i64 %904 to i128
  %910 = or i128 %908, %909
  %911 = mul i128 36, %910
  %912 = trunc i128 %911 to i64
  store i64 %912, i64* %RCX.i1421, align 8
  %913 = sext i64 %912 to i128
  %914 = icmp ne i128 %913, %911
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %915, i8* %916, align 1
  %917 = trunc i128 %911 to i32
  %918 = and i32 %917, 255
  %919 = call i32 @llvm.ctpop.i32(i32 %918)
  %920 = trunc i32 %919 to i8
  %921 = and i8 %920, 1
  %922 = xor i8 %921, 1
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %922, i8* %923, align 1
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %924, align 1
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %925, align 1
  %926 = lshr i64 %912, 63
  %927 = trunc i64 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %927, i8* %928, align 1
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %915, i8* %929, align 1
  store %struct.Memory* %loadMem_43a428, %struct.Memory** %MEMORY
  %loadMem_43a42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %931 = getelementptr inbounds %struct.GPR, %struct.GPR* %930, i32 0, i32 33
  %932 = getelementptr inbounds %struct.Reg, %struct.Reg* %931, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %932 to i64*
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %934 = getelementptr inbounds %struct.GPR, %struct.GPR* %933, i32 0, i32 1
  %935 = getelementptr inbounds %struct.Reg, %struct.Reg* %934, i32 0, i32 0
  %RAX.i1418 = bitcast %union.anon* %935 to i64*
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 5
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %RCX.i1419 = bitcast %union.anon* %938 to i64*
  %939 = load i64, i64* %RAX.i1418
  %940 = load i64, i64* %RCX.i1419
  %941 = load i64, i64* %PC.i1417
  %942 = add i64 %941, 3
  store i64 %942, i64* %PC.i1417
  %943 = add i64 %940, %939
  store i64 %943, i64* %RAX.i1418, align 8
  %944 = icmp ult i64 %943, %939
  %945 = icmp ult i64 %943, %940
  %946 = or i1 %944, %945
  %947 = zext i1 %946 to i8
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %947, i8* %948, align 1
  %949 = trunc i64 %943 to i32
  %950 = and i32 %949, 255
  %951 = call i32 @llvm.ctpop.i32(i32 %950)
  %952 = trunc i32 %951 to i8
  %953 = and i8 %952, 1
  %954 = xor i8 %953, 1
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %954, i8* %955, align 1
  %956 = xor i64 %940, %939
  %957 = xor i64 %956, %943
  %958 = lshr i64 %957, 4
  %959 = trunc i64 %958 to i8
  %960 = and i8 %959, 1
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %960, i8* %961, align 1
  %962 = icmp eq i64 %943, 0
  %963 = zext i1 %962 to i8
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %963, i8* %964, align 1
  %965 = lshr i64 %943, 63
  %966 = trunc i64 %965 to i8
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %966, i8* %967, align 1
  %968 = lshr i64 %939, 63
  %969 = lshr i64 %940, 63
  %970 = xor i64 %965, %968
  %971 = xor i64 %965, %969
  %972 = add i64 %970, %971
  %973 = icmp eq i64 %972, 2
  %974 = zext i1 %973 to i8
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %974, i8* %975, align 1
  store %struct.Memory* %loadMem_43a42c, %struct.Memory** %MEMORY
  %loadMem_43a42f = load %struct.Memory*, %struct.Memory** %MEMORY
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 33
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %978 to i64*
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 1
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %RAX.i1415 = bitcast %union.anon* %981 to i64*
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %983 = getelementptr inbounds %struct.GPR, %struct.GPR* %982, i32 0, i32 7
  %984 = getelementptr inbounds %struct.Reg, %struct.Reg* %983, i32 0, i32 0
  %RDX.i1416 = bitcast %union.anon* %984 to i64*
  %985 = load i64, i64* %RDX.i1416
  %986 = load i64, i64* %RAX.i1415
  %987 = add i64 %986, 8
  %988 = load i64, i64* %PC.i1414
  %989 = add i64 %988, 3
  store i64 %989, i64* %PC.i1414
  %990 = trunc i64 %985 to i32
  %991 = inttoptr i64 %987 to i32*
  %992 = load i32, i32* %991
  %993 = sub i32 %990, %992
  %994 = zext i32 %993 to i64
  store i64 %994, i64* %RDX.i1416, align 8
  %995 = icmp ult i32 %990, %992
  %996 = zext i1 %995 to i8
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %996, i8* %997, align 1
  %998 = and i32 %993, 255
  %999 = call i32 @llvm.ctpop.i32(i32 %998)
  %1000 = trunc i32 %999 to i8
  %1001 = and i8 %1000, 1
  %1002 = xor i8 %1001, 1
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1002, i8* %1003, align 1
  %1004 = xor i32 %992, %990
  %1005 = xor i32 %1004, %993
  %1006 = lshr i32 %1005, 4
  %1007 = trunc i32 %1006 to i8
  %1008 = and i8 %1007, 1
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1008, i8* %1009, align 1
  %1010 = icmp eq i32 %993, 0
  %1011 = zext i1 %1010 to i8
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1011, i8* %1012, align 1
  %1013 = lshr i32 %993, 31
  %1014 = trunc i32 %1013 to i8
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1014, i8* %1015, align 1
  %1016 = lshr i32 %990, 31
  %1017 = lshr i32 %992, 31
  %1018 = xor i32 %1017, %1016
  %1019 = xor i32 %1013, %1016
  %1020 = add i32 %1019, %1018
  %1021 = icmp eq i32 %1020, 2
  %1022 = zext i1 %1021 to i8
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1022, i8* %1023, align 1
  store %struct.Memory* %loadMem_43a42f, %struct.Memory** %MEMORY
  %loadMem_43a432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 33
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %1026 to i64*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 7
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %EDX.i1413 = bitcast %union.anon* %1029 to i32*
  %1030 = load i32, i32* %EDX.i1413
  %1031 = zext i32 %1030 to i64
  %1032 = load i64, i64* %PC.i1412
  %1033 = add i64 %1032, 3
  store i64 %1033, i64* %PC.i1412
  %1034 = sub i32 %1030, 7
  %1035 = icmp ult i32 %1030, 7
  %1036 = zext i1 %1035 to i8
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1036, i8* %1037, align 1
  %1038 = and i32 %1034, 255
  %1039 = call i32 @llvm.ctpop.i32(i32 %1038)
  %1040 = trunc i32 %1039 to i8
  %1041 = and i8 %1040, 1
  %1042 = xor i8 %1041, 1
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1042, i8* %1043, align 1
  %1044 = xor i64 7, %1031
  %1045 = trunc i64 %1044 to i32
  %1046 = xor i32 %1045, %1034
  %1047 = lshr i32 %1046, 4
  %1048 = trunc i32 %1047 to i8
  %1049 = and i8 %1048, 1
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1049, i8* %1050, align 1
  %1051 = icmp eq i32 %1034, 0
  %1052 = zext i1 %1051 to i8
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1052, i8* %1053, align 1
  %1054 = lshr i32 %1034, 31
  %1055 = trunc i32 %1054 to i8
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1055, i8* %1056, align 1
  %1057 = lshr i32 %1030, 31
  %1058 = xor i32 %1054, %1057
  %1059 = add i32 %1058, %1057
  %1060 = icmp eq i32 %1059, 2
  %1061 = zext i1 %1060 to i8
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1061, i8* %1062, align 1
  store %struct.Memory* %loadMem_43a432, %struct.Memory** %MEMORY
  %loadMem_43a435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1064 = getelementptr inbounds %struct.GPR, %struct.GPR* %1063, i32 0, i32 33
  %1065 = getelementptr inbounds %struct.Reg, %struct.Reg* %1064, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %1065 to i64*
  %1066 = load i64, i64* %PC.i1411
  %1067 = add i64 %1066, 18
  %1068 = load i64, i64* %PC.i1411
  %1069 = add i64 %1068, 6
  %1070 = load i64, i64* %PC.i1411
  %1071 = add i64 %1070, 6
  store i64 %1071, i64* %PC.i1411
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1073 = load i8, i8* %1072, align 1
  %1074 = icmp ne i8 %1073, 0
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1076 = load i8, i8* %1075, align 1
  %1077 = icmp ne i8 %1076, 0
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1079 = load i8, i8* %1078, align 1
  %1080 = icmp ne i8 %1079, 0
  %1081 = xor i1 %1077, %1080
  %1082 = or i1 %1074, %1081
  %1083 = zext i1 %1082 to i8
  store i8 %1083, i8* %BRANCH_TAKEN, align 1
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1085 = select i1 %1082, i64 %1067, i64 %1069
  store i64 %1085, i64* %1084, align 8
  store %struct.Memory* %loadMem_43a435, %struct.Memory** %MEMORY
  %loadBr_43a435 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a435 = icmp eq i8 %loadBr_43a435, 1
  br i1 %cmpBr_43a435, label %block_.L_43a447, label %block_43a43b

block_43a43b:                                     ; preds = %block_.L_43a40e
  %loadMem_43a43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 15
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RBP.i1410 = bitcast %union.anon* %1091 to i64*
  %1092 = load i64, i64* %RBP.i1410
  %1093 = sub i64 %1092, 4
  %1094 = load i64, i64* %PC.i1409
  %1095 = add i64 %1094, 7
  store i64 %1095, i64* %PC.i1409
  %1096 = inttoptr i64 %1093 to i32*
  store i32 0, i32* %1096
  store %struct.Memory* %loadMem_43a43b, %struct.Memory** %MEMORY
  %loadMem_43a442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 33
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %1099 to i64*
  %1100 = load i64, i64* %PC.i1408
  %1101 = add i64 %1100, 3006
  %1102 = load i64, i64* %PC.i1408
  %1103 = add i64 %1102, 5
  store i64 %1103, i64* %PC.i1408
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1101, i64* %1104, align 8
  store %struct.Memory* %loadMem_43a442, %struct.Memory** %MEMORY
  br label %block_.L_43b000

block_.L_43a447:                                  ; preds = %block_.L_43a40e
  %loadMem_43a447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 33
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %1107 to i64*
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 1
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %RAX.i1406 = bitcast %union.anon* %1110 to i64*
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 15
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %RBP.i1407 = bitcast %union.anon* %1113 to i64*
  %1114 = load i64, i64* %RBP.i1407
  %1115 = sub i64 %1114, 40
  %1116 = load i64, i64* %PC.i1405
  %1117 = add i64 %1116, 4
  store i64 %1117, i64* %PC.i1405
  %1118 = inttoptr i64 %1115 to i64*
  %1119 = load i64, i64* %1118
  store i64 %1119, i64* %RAX.i1406, align 8
  store %struct.Memory* %loadMem_43a447, %struct.Memory** %MEMORY
  %loadMem_43a44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1121 = getelementptr inbounds %struct.GPR, %struct.GPR* %1120, i32 0, i32 33
  %1122 = getelementptr inbounds %struct.Reg, %struct.Reg* %1121, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %1122 to i64*
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 5
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %RCX.i1403 = bitcast %union.anon* %1125 to i64*
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 15
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %RBP.i1404 = bitcast %union.anon* %1128 to i64*
  %1129 = load i64, i64* %RBP.i1404
  %1130 = sub i64 %1129, 8
  %1131 = load i64, i64* %PC.i1402
  %1132 = add i64 %1131, 4
  store i64 %1132, i64* %PC.i1402
  %1133 = inttoptr i64 %1130 to i32*
  %1134 = load i32, i32* %1133
  %1135 = sext i32 %1134 to i64
  store i64 %1135, i64* %RCX.i1403, align 8
  store %struct.Memory* %loadMem_43a44b, %struct.Memory** %MEMORY
  %loadMem_43a44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1137 = getelementptr inbounds %struct.GPR, %struct.GPR* %1136, i32 0, i32 33
  %1138 = getelementptr inbounds %struct.Reg, %struct.Reg* %1137, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %1138 to i64*
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1140 = getelementptr inbounds %struct.GPR, %struct.GPR* %1139, i32 0, i32 5
  %1141 = getelementptr inbounds %struct.Reg, %struct.Reg* %1140, i32 0, i32 0
  %RCX.i1401 = bitcast %union.anon* %1141 to i64*
  %1142 = load i64, i64* %RCX.i1401
  %1143 = load i64, i64* %PC.i1400
  %1144 = add i64 %1143, 4
  store i64 %1144, i64* %PC.i1400
  %1145 = sext i64 %1142 to i128
  %1146 = and i128 %1145, -18446744073709551616
  %1147 = zext i64 %1142 to i128
  %1148 = or i128 %1146, %1147
  %1149 = mul i128 36, %1148
  %1150 = trunc i128 %1149 to i64
  store i64 %1150, i64* %RCX.i1401, align 8
  %1151 = sext i64 %1150 to i128
  %1152 = icmp ne i128 %1151, %1149
  %1153 = zext i1 %1152 to i8
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1153, i8* %1154, align 1
  %1155 = trunc i128 %1149 to i32
  %1156 = and i32 %1155, 255
  %1157 = call i32 @llvm.ctpop.i32(i32 %1156)
  %1158 = trunc i32 %1157 to i8
  %1159 = and i8 %1158, 1
  %1160 = xor i8 %1159, 1
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1160, i8* %1161, align 1
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1162, align 1
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1163, align 1
  %1164 = lshr i64 %1150, 63
  %1165 = trunc i64 %1164 to i8
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1165, i8* %1166, align 1
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1153, i8* %1167, align 1
  store %struct.Memory* %loadMem_43a44f, %struct.Memory** %MEMORY
  %loadMem_43a453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 33
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %1170 to i64*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 1
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %RAX.i1398 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 5
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %RCX.i1399 = bitcast %union.anon* %1176 to i64*
  %1177 = load i64, i64* %RAX.i1398
  %1178 = load i64, i64* %RCX.i1399
  %1179 = load i64, i64* %PC.i1397
  %1180 = add i64 %1179, 3
  store i64 %1180, i64* %PC.i1397
  %1181 = add i64 %1178, %1177
  store i64 %1181, i64* %RAX.i1398, align 8
  %1182 = icmp ult i64 %1181, %1177
  %1183 = icmp ult i64 %1181, %1178
  %1184 = or i1 %1182, %1183
  %1185 = zext i1 %1184 to i8
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1185, i8* %1186, align 1
  %1187 = trunc i64 %1181 to i32
  %1188 = and i32 %1187, 255
  %1189 = call i32 @llvm.ctpop.i32(i32 %1188)
  %1190 = trunc i32 %1189 to i8
  %1191 = and i8 %1190, 1
  %1192 = xor i8 %1191, 1
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1192, i8* %1193, align 1
  %1194 = xor i64 %1178, %1177
  %1195 = xor i64 %1194, %1181
  %1196 = lshr i64 %1195, 4
  %1197 = trunc i64 %1196 to i8
  %1198 = and i8 %1197, 1
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1198, i8* %1199, align 1
  %1200 = icmp eq i64 %1181, 0
  %1201 = zext i1 %1200 to i8
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1201, i8* %1202, align 1
  %1203 = lshr i64 %1181, 63
  %1204 = trunc i64 %1203 to i8
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1204, i8* %1205, align 1
  %1206 = lshr i64 %1177, 63
  %1207 = lshr i64 %1178, 63
  %1208 = xor i64 %1203, %1206
  %1209 = xor i64 %1203, %1207
  %1210 = add i64 %1208, %1209
  %1211 = icmp eq i64 %1210, 2
  %1212 = zext i1 %1211 to i8
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1212, i8* %1213, align 1
  store %struct.Memory* %loadMem_43a453, %struct.Memory** %MEMORY
  %loadMem_43a456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 33
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %1216 to i64*
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 1
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %RAX.i1396 = bitcast %union.anon* %1219 to i64*
  %1220 = load i64, i64* %RAX.i1396
  %1221 = add i64 %1220, 8
  %1222 = load i64, i64* %PC.i1395
  %1223 = add i64 %1222, 4
  store i64 %1223, i64* %PC.i1395
  %1224 = inttoptr i64 %1221 to i32*
  %1225 = load i32, i32* %1224
  %1226 = sub i32 %1225, 20
  %1227 = icmp ult i32 %1225, 20
  %1228 = zext i1 %1227 to i8
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1228, i8* %1229, align 1
  %1230 = and i32 %1226, 255
  %1231 = call i32 @llvm.ctpop.i32(i32 %1230)
  %1232 = trunc i32 %1231 to i8
  %1233 = and i8 %1232, 1
  %1234 = xor i8 %1233, 1
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1234, i8* %1235, align 1
  %1236 = xor i32 %1225, 20
  %1237 = xor i32 %1236, %1226
  %1238 = lshr i32 %1237, 4
  %1239 = trunc i32 %1238 to i8
  %1240 = and i8 %1239, 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1240, i8* %1241, align 1
  %1242 = icmp eq i32 %1226, 0
  %1243 = zext i1 %1242 to i8
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1243, i8* %1244, align 1
  %1245 = lshr i32 %1226, 31
  %1246 = trunc i32 %1245 to i8
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1246, i8* %1247, align 1
  %1248 = lshr i32 %1225, 31
  %1249 = xor i32 %1245, %1248
  %1250 = add i32 %1249, %1248
  %1251 = icmp eq i32 %1250, 2
  %1252 = zext i1 %1251 to i8
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1252, i8* %1253, align 1
  store %struct.Memory* %loadMem_43a456, %struct.Memory** %MEMORY
  %loadMem_43a45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1255 = getelementptr inbounds %struct.GPR, %struct.GPR* %1254, i32 0, i32 33
  %1256 = getelementptr inbounds %struct.Reg, %struct.Reg* %1255, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %1256 to i64*
  %1257 = load i64, i64* %PC.i1394
  %1258 = add i64 %1257, 18
  %1259 = load i64, i64* %PC.i1394
  %1260 = add i64 %1259, 6
  %1261 = load i64, i64* %PC.i1394
  %1262 = add i64 %1261, 6
  store i64 %1262, i64* %PC.i1394
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1264 = load i8, i8* %1263, align 1
  %1265 = icmp ne i8 %1264, 0
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1267 = load i8, i8* %1266, align 1
  %1268 = icmp ne i8 %1267, 0
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1270 = load i8, i8* %1269, align 1
  %1271 = icmp ne i8 %1270, 0
  %1272 = xor i1 %1268, %1271
  %1273 = or i1 %1265, %1272
  %1274 = zext i1 %1273 to i8
  store i8 %1274, i8* %BRANCH_TAKEN, align 1
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1276 = select i1 %1273, i64 %1258, i64 %1260
  store i64 %1276, i64* %1275, align 8
  store %struct.Memory* %loadMem_43a45a, %struct.Memory** %MEMORY
  %loadBr_43a45a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a45a = icmp eq i8 %loadBr_43a45a, 1
  br i1 %cmpBr_43a45a, label %block_.L_43a46c, label %block_43a460

block_43a460:                                     ; preds = %block_.L_43a447
  %loadMem_43a460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 15
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %RBP.i1393
  %1284 = sub i64 %1283, 4
  %1285 = load i64, i64* %PC.i1392
  %1286 = add i64 %1285, 7
  store i64 %1286, i64* %PC.i1392
  %1287 = inttoptr i64 %1284 to i32*
  store i32 0, i32* %1287
  store %struct.Memory* %loadMem_43a460, %struct.Memory** %MEMORY
  %loadMem_43a467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1289 = getelementptr inbounds %struct.GPR, %struct.GPR* %1288, i32 0, i32 33
  %1290 = getelementptr inbounds %struct.Reg, %struct.Reg* %1289, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %1290 to i64*
  %1291 = load i64, i64* %PC.i1391
  %1292 = add i64 %1291, 2969
  %1293 = load i64, i64* %PC.i1391
  %1294 = add i64 %1293, 5
  store i64 %1294, i64* %PC.i1391
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1292, i64* %1295, align 8
  store %struct.Memory* %loadMem_43a467, %struct.Memory** %MEMORY
  br label %block_.L_43b000

block_.L_43a46c:                                  ; preds = %block_.L_43a447
  %loadMem_43a46c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1297 = getelementptr inbounds %struct.GPR, %struct.GPR* %1296, i32 0, i32 33
  %1298 = getelementptr inbounds %struct.Reg, %struct.Reg* %1297, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %1298 to i64*
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1300 = getelementptr inbounds %struct.GPR, %struct.GPR* %1299, i32 0, i32 15
  %1301 = getelementptr inbounds %struct.Reg, %struct.Reg* %1300, i32 0, i32 0
  %RBP.i1390 = bitcast %union.anon* %1301 to i64*
  %1302 = load i64, i64* %RBP.i1390
  %1303 = sub i64 %1302, 60
  %1304 = load i64, i64* %PC.i1389
  %1305 = add i64 %1304, 7
  store i64 %1305, i64* %PC.i1389
  %1306 = inttoptr i64 %1303 to i32*
  store i32 0, i32* %1306
  store %struct.Memory* %loadMem_43a46c, %struct.Memory** %MEMORY
  br label %block_.L_43a473

block_.L_43a473:                                  ; preds = %block_.L_43a63d, %block_.L_43a46c
  %loadMem_43a473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 33
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 1
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RAX.i1387 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 15
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %RBP.i1388 = bitcast %union.anon* %1315 to i64*
  %1316 = load i64, i64* %RBP.i1388
  %1317 = sub i64 %1316, 60
  %1318 = load i64, i64* %PC.i1386
  %1319 = add i64 %1318, 3
  store i64 %1319, i64* %PC.i1386
  %1320 = inttoptr i64 %1317 to i32*
  %1321 = load i32, i32* %1320
  %1322 = zext i32 %1321 to i64
  store i64 %1322, i64* %RAX.i1387, align 8
  store %struct.Memory* %loadMem_43a473, %struct.Memory** %MEMORY
  %loadMem_43a476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 33
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %1325 to i64*
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 1
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %EAX.i1385 = bitcast %union.anon* %1328 to i32*
  %1329 = load i32, i32* %EAX.i1385
  %1330 = zext i32 %1329 to i64
  %1331 = load i64, i64* %PC.i1384
  %1332 = add i64 %1331, 7
  store i64 %1332, i64* %PC.i1384
  %1333 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %1334 = sub i32 %1329, %1333
  %1335 = icmp ult i32 %1329, %1333
  %1336 = zext i1 %1335 to i8
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1336, i8* %1337, align 1
  %1338 = and i32 %1334, 255
  %1339 = call i32 @llvm.ctpop.i32(i32 %1338)
  %1340 = trunc i32 %1339 to i8
  %1341 = and i8 %1340, 1
  %1342 = xor i8 %1341, 1
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1342, i8* %1343, align 1
  %1344 = xor i32 %1333, %1329
  %1345 = xor i32 %1344, %1334
  %1346 = lshr i32 %1345, 4
  %1347 = trunc i32 %1346 to i8
  %1348 = and i8 %1347, 1
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1348, i8* %1349, align 1
  %1350 = icmp eq i32 %1334, 0
  %1351 = zext i1 %1350 to i8
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1351, i8* %1352, align 1
  %1353 = lshr i32 %1334, 31
  %1354 = trunc i32 %1353 to i8
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1354, i8* %1355, align 1
  %1356 = lshr i32 %1329, 31
  %1357 = lshr i32 %1333, 31
  %1358 = xor i32 %1357, %1356
  %1359 = xor i32 %1353, %1356
  %1360 = add i32 %1359, %1358
  %1361 = icmp eq i32 %1360, 2
  %1362 = zext i1 %1361 to i8
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1362, i8* %1363, align 1
  store %struct.Memory* %loadMem_43a476, %struct.Memory** %MEMORY
  %loadMem_43a47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 33
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %1366 to i64*
  %1367 = load i64, i64* %PC.i1383
  %1368 = add i64 %1367, 462
  %1369 = load i64, i64* %PC.i1383
  %1370 = add i64 %1369, 6
  %1371 = load i64, i64* %PC.i1383
  %1372 = add i64 %1371, 6
  store i64 %1372, i64* %PC.i1383
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1374 = load i8, i8* %1373, align 1
  %1375 = icmp ne i8 %1374, 0
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1377 = load i8, i8* %1376, align 1
  %1378 = icmp ne i8 %1377, 0
  %1379 = xor i1 %1375, %1378
  %1380 = xor i1 %1379, true
  %1381 = zext i1 %1380 to i8
  store i8 %1381, i8* %BRANCH_TAKEN, align 1
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1383 = select i1 %1379, i64 %1370, i64 %1368
  store i64 %1383, i64* %1382, align 8
  store %struct.Memory* %loadMem_43a47d, %struct.Memory** %MEMORY
  %loadBr_43a47d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a47d = icmp eq i8 %loadBr_43a47d, 1
  br i1 %cmpBr_43a47d, label %block_.L_43a64b, label %block_43a483

block_43a483:                                     ; preds = %block_.L_43a473
  %loadMem_43a483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 33
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %1386 to i64*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 15
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %RBP.i1382 = bitcast %union.anon* %1389 to i64*
  %1390 = load i64, i64* %RBP.i1382
  %1391 = sub i64 %1390, 64
  %1392 = load i64, i64* %PC.i1381
  %1393 = add i64 %1392, 7
  store i64 %1393, i64* %PC.i1381
  %1394 = inttoptr i64 %1391 to i32*
  store i32 0, i32* %1394
  store %struct.Memory* %loadMem_43a483, %struct.Memory** %MEMORY
  br label %block_.L_43a48a

block_.L_43a48a:                                  ; preds = %block_.L_43a62a, %block_43a483
  %loadMem_43a48a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 33
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %1397 to i64*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 1
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %RAX.i1379 = bitcast %union.anon* %1400 to i64*
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 15
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %1403 to i64*
  %1404 = load i64, i64* %RBP.i1380
  %1405 = sub i64 %1404, 64
  %1406 = load i64, i64* %PC.i1378
  %1407 = add i64 %1406, 3
  store i64 %1407, i64* %PC.i1378
  %1408 = inttoptr i64 %1405 to i32*
  %1409 = load i32, i32* %1408
  %1410 = zext i32 %1409 to i64
  store i64 %1410, i64* %RAX.i1379, align 8
  store %struct.Memory* %loadMem_43a48a, %struct.Memory** %MEMORY
  %loadMem_43a48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 33
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %1413 to i64*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 1
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %EAX.i1377 = bitcast %union.anon* %1416 to i32*
  %1417 = load i32, i32* %EAX.i1377
  %1418 = zext i32 %1417 to i64
  %1419 = load i64, i64* %PC.i1376
  %1420 = add i64 %1419, 7
  store i64 %1420, i64* %PC.i1376
  %1421 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %1422 = sub i32 %1417, %1421
  %1423 = icmp ult i32 %1417, %1421
  %1424 = zext i1 %1423 to i8
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1424, i8* %1425, align 1
  %1426 = and i32 %1422, 255
  %1427 = call i32 @llvm.ctpop.i32(i32 %1426)
  %1428 = trunc i32 %1427 to i8
  %1429 = and i8 %1428, 1
  %1430 = xor i8 %1429, 1
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1430, i8* %1431, align 1
  %1432 = xor i32 %1421, %1417
  %1433 = xor i32 %1432, %1422
  %1434 = lshr i32 %1433, 4
  %1435 = trunc i32 %1434 to i8
  %1436 = and i8 %1435, 1
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1436, i8* %1437, align 1
  %1438 = icmp eq i32 %1422, 0
  %1439 = zext i1 %1438 to i8
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1439, i8* %1440, align 1
  %1441 = lshr i32 %1422, 31
  %1442 = trunc i32 %1441 to i8
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1442, i8* %1443, align 1
  %1444 = lshr i32 %1417, 31
  %1445 = lshr i32 %1421, 31
  %1446 = xor i32 %1445, %1444
  %1447 = xor i32 %1441, %1444
  %1448 = add i32 %1447, %1446
  %1449 = icmp eq i32 %1448, 2
  %1450 = zext i1 %1449 to i8
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1450, i8* %1451, align 1
  store %struct.Memory* %loadMem_43a48d, %struct.Memory** %MEMORY
  %loadMem_43a494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 33
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %1454 to i64*
  %1455 = load i64, i64* %PC.i1375
  %1456 = add i64 %1455, 420
  %1457 = load i64, i64* %PC.i1375
  %1458 = add i64 %1457, 6
  %1459 = load i64, i64* %PC.i1375
  %1460 = add i64 %1459, 6
  store i64 %1460, i64* %PC.i1375
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1462 = load i8, i8* %1461, align 1
  %1463 = icmp ne i8 %1462, 0
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1465 = load i8, i8* %1464, align 1
  %1466 = icmp ne i8 %1465, 0
  %1467 = xor i1 %1463, %1466
  %1468 = xor i1 %1467, true
  %1469 = zext i1 %1468 to i8
  store i8 %1469, i8* %BRANCH_TAKEN, align 1
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1471 = select i1 %1467, i64 %1458, i64 %1456
  store i64 %1471, i64* %1470, align 8
  store %struct.Memory* %loadMem_43a494, %struct.Memory** %MEMORY
  %loadBr_43a494 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a494 = icmp eq i8 %loadBr_43a494, 1
  br i1 %cmpBr_43a494, label %block_.L_43a638, label %block_43a49a

block_43a49a:                                     ; preds = %block_.L_43a48a
  %loadMem_43a49a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 33
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %1474 to i64*
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 1
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %1477 to i64*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 15
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %1480 to i64*
  %1481 = load i64, i64* %RBP.i1374
  %1482 = sub i64 %1481, 60
  %1483 = load i64, i64* %PC.i1372
  %1484 = add i64 %1483, 4
  store i64 %1484, i64* %PC.i1372
  %1485 = inttoptr i64 %1482 to i32*
  %1486 = load i32, i32* %1485
  %1487 = sext i32 %1486 to i64
  %1488 = mul i64 %1487, 20
  %1489 = trunc i64 %1488 to i32
  %1490 = and i64 %1488, 4294967295
  store i64 %1490, i64* %RAX.i1373, align 8
  %1491 = shl i64 %1488, 32
  %1492 = ashr exact i64 %1491, 32
  %1493 = icmp ne i64 %1492, %1488
  %1494 = zext i1 %1493 to i8
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1494, i8* %1495, align 1
  %1496 = and i32 %1489, 255
  %1497 = call i32 @llvm.ctpop.i32(i32 %1496)
  %1498 = trunc i32 %1497 to i8
  %1499 = and i8 %1498, 1
  %1500 = xor i8 %1499, 1
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1500, i8* %1501, align 1
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1502, align 1
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1503, align 1
  %1504 = lshr i32 %1489, 31
  %1505 = trunc i32 %1504 to i8
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1505, i8* %1506, align 1
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1494, i8* %1507, align 1
  store %struct.Memory* %loadMem_43a49a, %struct.Memory** %MEMORY
  %loadMem_43a49e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 33
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %1510 to i64*
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 1
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %1513 to i64*
  %1514 = load i64, i64* %RAX.i1371
  %1515 = load i64, i64* %PC.i1370
  %1516 = add i64 %1515, 3
  store i64 %1516, i64* %PC.i1370
  %1517 = trunc i64 %1514 to i32
  %1518 = add i32 21, %1517
  %1519 = zext i32 %1518 to i64
  store i64 %1519, i64* %RAX.i1371, align 8
  %1520 = icmp ult i32 %1518, %1517
  %1521 = icmp ult i32 %1518, 21
  %1522 = or i1 %1520, %1521
  %1523 = zext i1 %1522 to i8
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1523, i8* %1524, align 1
  %1525 = and i32 %1518, 255
  %1526 = call i32 @llvm.ctpop.i32(i32 %1525)
  %1527 = trunc i32 %1526 to i8
  %1528 = and i8 %1527, 1
  %1529 = xor i8 %1528, 1
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1529, i8* %1530, align 1
  %1531 = xor i64 21, %1514
  %1532 = trunc i64 %1531 to i32
  %1533 = xor i32 %1532, %1518
  %1534 = lshr i32 %1533, 4
  %1535 = trunc i32 %1534 to i8
  %1536 = and i8 %1535, 1
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1536, i8* %1537, align 1
  %1538 = icmp eq i32 %1518, 0
  %1539 = zext i1 %1538 to i8
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1539, i8* %1540, align 1
  %1541 = lshr i32 %1518, 31
  %1542 = trunc i32 %1541 to i8
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1542, i8* %1543, align 1
  %1544 = lshr i32 %1517, 31
  %1545 = xor i32 %1541, %1544
  %1546 = add i32 %1545, %1541
  %1547 = icmp eq i32 %1546, 2
  %1548 = zext i1 %1547 to i8
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1548, i8* %1549, align 1
  store %struct.Memory* %loadMem_43a49e, %struct.Memory** %MEMORY
  %loadMem_43a4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1551 = getelementptr inbounds %struct.GPR, %struct.GPR* %1550, i32 0, i32 33
  %1552 = getelementptr inbounds %struct.Reg, %struct.Reg* %1551, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %1552 to i64*
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 1
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %RAX.i1368 = bitcast %union.anon* %1555 to i64*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 15
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %RBP.i1369 = bitcast %union.anon* %1558 to i64*
  %1559 = load i64, i64* %RAX.i1368
  %1560 = load i64, i64* %RBP.i1369
  %1561 = sub i64 %1560, 64
  %1562 = load i64, i64* %PC.i1367
  %1563 = add i64 %1562, 3
  store i64 %1563, i64* %PC.i1367
  %1564 = trunc i64 %1559 to i32
  %1565 = inttoptr i64 %1561 to i32*
  %1566 = load i32, i32* %1565
  %1567 = add i32 %1566, %1564
  %1568 = zext i32 %1567 to i64
  store i64 %1568, i64* %RAX.i1368, align 8
  %1569 = icmp ult i32 %1567, %1564
  %1570 = icmp ult i32 %1567, %1566
  %1571 = or i1 %1569, %1570
  %1572 = zext i1 %1571 to i8
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1572, i8* %1573, align 1
  %1574 = and i32 %1567, 255
  %1575 = call i32 @llvm.ctpop.i32(i32 %1574)
  %1576 = trunc i32 %1575 to i8
  %1577 = and i8 %1576, 1
  %1578 = xor i8 %1577, 1
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1578, i8* %1579, align 1
  %1580 = xor i32 %1566, %1564
  %1581 = xor i32 %1580, %1567
  %1582 = lshr i32 %1581, 4
  %1583 = trunc i32 %1582 to i8
  %1584 = and i8 %1583, 1
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1584, i8* %1585, align 1
  %1586 = icmp eq i32 %1567, 0
  %1587 = zext i1 %1586 to i8
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1587, i8* %1588, align 1
  %1589 = lshr i32 %1567, 31
  %1590 = trunc i32 %1589 to i8
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1590, i8* %1591, align 1
  %1592 = lshr i32 %1564, 31
  %1593 = lshr i32 %1566, 31
  %1594 = xor i32 %1589, %1592
  %1595 = xor i32 %1589, %1593
  %1596 = add i32 %1594, %1595
  %1597 = icmp eq i32 %1596, 2
  %1598 = zext i1 %1597 to i8
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1598, i8* %1599, align 1
  store %struct.Memory* %loadMem_43a4a1, %struct.Memory** %MEMORY
  %loadMem_43a4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 33
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %1602 to i64*
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1604 = getelementptr inbounds %struct.GPR, %struct.GPR* %1603, i32 0, i32 1
  %1605 = getelementptr inbounds %struct.Reg, %struct.Reg* %1604, i32 0, i32 0
  %EAX.i1365 = bitcast %union.anon* %1605 to i32*
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1607 = getelementptr inbounds %struct.GPR, %struct.GPR* %1606, i32 0, i32 15
  %1608 = getelementptr inbounds %struct.Reg, %struct.Reg* %1607, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %1608 to i64*
  %1609 = load i64, i64* %RBP.i1366
  %1610 = sub i64 %1609, 356
  %1611 = load i32, i32* %EAX.i1365
  %1612 = zext i32 %1611 to i64
  %1613 = load i64, i64* %PC.i1364
  %1614 = add i64 %1613, 6
  store i64 %1614, i64* %PC.i1364
  %1615 = inttoptr i64 %1610 to i32*
  store i32 %1611, i32* %1615
  store %struct.Memory* %loadMem_43a4a4, %struct.Memory** %MEMORY
  %loadMem_43a4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 33
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %1618 to i64*
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1620 = getelementptr inbounds %struct.GPR, %struct.GPR* %1619, i32 0, i32 5
  %1621 = getelementptr inbounds %struct.Reg, %struct.Reg* %1620, i32 0, i32 0
  %RCX.i1362 = bitcast %union.anon* %1621 to i64*
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1623 = getelementptr inbounds %struct.GPR, %struct.GPR* %1622, i32 0, i32 15
  %1624 = getelementptr inbounds %struct.Reg, %struct.Reg* %1623, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %1624 to i64*
  %1625 = load i64, i64* %RBP.i1363
  %1626 = sub i64 %1625, 40
  %1627 = load i64, i64* %PC.i1361
  %1628 = add i64 %1627, 4
  store i64 %1628, i64* %PC.i1361
  %1629 = inttoptr i64 %1626 to i64*
  %1630 = load i64, i64* %1629
  store i64 %1630, i64* %RCX.i1362, align 8
  store %struct.Memory* %loadMem_43a4aa, %struct.Memory** %MEMORY
  %loadMem_43a4ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 33
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %1633 to i64*
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1635 = getelementptr inbounds %struct.GPR, %struct.GPR* %1634, i32 0, i32 7
  %1636 = getelementptr inbounds %struct.Reg, %struct.Reg* %1635, i32 0, i32 0
  %RDX.i1359 = bitcast %union.anon* %1636 to i64*
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 15
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %1639 to i64*
  %1640 = load i64, i64* %RBP.i1360
  %1641 = sub i64 %1640, 356
  %1642 = load i64, i64* %PC.i1358
  %1643 = add i64 %1642, 7
  store i64 %1643, i64* %PC.i1358
  %1644 = inttoptr i64 %1641 to i32*
  %1645 = load i32, i32* %1644
  %1646 = sext i32 %1645 to i64
  store i64 %1646, i64* %RDX.i1359, align 8
  store %struct.Memory* %loadMem_43a4ae, %struct.Memory** %MEMORY
  %loadMem_43a4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %1649 to i64*
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 7
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %RDX.i1357 = bitcast %union.anon* %1652 to i64*
  %1653 = load i64, i64* %RDX.i1357
  %1654 = load i64, i64* %PC.i1356
  %1655 = add i64 %1654, 4
  store i64 %1655, i64* %PC.i1356
  %1656 = sext i64 %1653 to i128
  %1657 = and i128 %1656, -18446744073709551616
  %1658 = zext i64 %1653 to i128
  %1659 = or i128 %1657, %1658
  %1660 = mul i128 36, %1659
  %1661 = trunc i128 %1660 to i64
  store i64 %1661, i64* %RDX.i1357, align 8
  %1662 = sext i64 %1661 to i128
  %1663 = icmp ne i128 %1662, %1660
  %1664 = zext i1 %1663 to i8
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1664, i8* %1665, align 1
  %1666 = trunc i128 %1660 to i32
  %1667 = and i32 %1666, 255
  %1668 = call i32 @llvm.ctpop.i32(i32 %1667)
  %1669 = trunc i32 %1668 to i8
  %1670 = and i8 %1669, 1
  %1671 = xor i8 %1670, 1
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1671, i8* %1672, align 1
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1673, align 1
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1674, align 1
  %1675 = lshr i64 %1661, 63
  %1676 = trunc i64 %1675 to i8
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1676, i8* %1677, align 1
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1664, i8* %1678, align 1
  store %struct.Memory* %loadMem_43a4b5, %struct.Memory** %MEMORY
  %loadMem_43a4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1680 = getelementptr inbounds %struct.GPR, %struct.GPR* %1679, i32 0, i32 33
  %1681 = getelementptr inbounds %struct.Reg, %struct.Reg* %1680, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %1681 to i64*
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1683 = getelementptr inbounds %struct.GPR, %struct.GPR* %1682, i32 0, i32 5
  %1684 = getelementptr inbounds %struct.Reg, %struct.Reg* %1683, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %1684 to i64*
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 7
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %1687 to i64*
  %1688 = load i64, i64* %RCX.i1354
  %1689 = load i64, i64* %RDX.i1355
  %1690 = load i64, i64* %PC.i1353
  %1691 = add i64 %1690, 3
  store i64 %1691, i64* %PC.i1353
  %1692 = add i64 %1689, %1688
  store i64 %1692, i64* %RCX.i1354, align 8
  %1693 = icmp ult i64 %1692, %1688
  %1694 = icmp ult i64 %1692, %1689
  %1695 = or i1 %1693, %1694
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1696, i8* %1697, align 1
  %1698 = trunc i64 %1692 to i32
  %1699 = and i32 %1698, 255
  %1700 = call i32 @llvm.ctpop.i32(i32 %1699)
  %1701 = trunc i32 %1700 to i8
  %1702 = and i8 %1701, 1
  %1703 = xor i8 %1702, 1
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1703, i8* %1704, align 1
  %1705 = xor i64 %1689, %1688
  %1706 = xor i64 %1705, %1692
  %1707 = lshr i64 %1706, 4
  %1708 = trunc i64 %1707 to i8
  %1709 = and i8 %1708, 1
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1709, i8* %1710, align 1
  %1711 = icmp eq i64 %1692, 0
  %1712 = zext i1 %1711 to i8
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1712, i8* %1713, align 1
  %1714 = lshr i64 %1692, 63
  %1715 = trunc i64 %1714 to i8
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1715, i8* %1716, align 1
  %1717 = lshr i64 %1688, 63
  %1718 = lshr i64 %1689, 63
  %1719 = xor i64 %1714, %1717
  %1720 = xor i64 %1714, %1718
  %1721 = add i64 %1719, %1720
  %1722 = icmp eq i64 %1721, 2
  %1723 = zext i1 %1722 to i8
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1723, i8* %1724, align 1
  store %struct.Memory* %loadMem_43a4b9, %struct.Memory** %MEMORY
  %loadMem_43a4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %1727 to i64*
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 1
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 5
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RCX.i1352 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RCX.i1352
  %1735 = add i64 %1734, 12
  %1736 = load i64, i64* %PC.i1350
  %1737 = add i64 %1736, 3
  store i64 %1737, i64* %PC.i1350
  %1738 = inttoptr i64 %1735 to i32*
  %1739 = load i32, i32* %1738
  %1740 = zext i32 %1739 to i64
  store i64 %1740, i64* %RAX.i1351, align 8
  store %struct.Memory* %loadMem_43a4bc, %struct.Memory** %MEMORY
  %loadMem_43a4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1742 = getelementptr inbounds %struct.GPR, %struct.GPR* %1741, i32 0, i32 33
  %1743 = getelementptr inbounds %struct.Reg, %struct.Reg* %1742, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %1743 to i64*
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 1
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %EAX.i1348 = bitcast %union.anon* %1746 to i32*
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 15
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %RBP.i1349 = bitcast %union.anon* %1749 to i64*
  %1750 = load i32, i32* %EAX.i1348
  %1751 = zext i32 %1750 to i64
  %1752 = load i64, i64* %RBP.i1349
  %1753 = sub i64 %1752, 8
  %1754 = load i64, i64* %PC.i1347
  %1755 = add i64 %1754, 3
  store i64 %1755, i64* %PC.i1347
  %1756 = inttoptr i64 %1753 to i32*
  %1757 = load i32, i32* %1756
  %1758 = sub i32 %1750, %1757
  %1759 = icmp ult i32 %1750, %1757
  %1760 = zext i1 %1759 to i8
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1760, i8* %1761, align 1
  %1762 = and i32 %1758, 255
  %1763 = call i32 @llvm.ctpop.i32(i32 %1762)
  %1764 = trunc i32 %1763 to i8
  %1765 = and i8 %1764, 1
  %1766 = xor i8 %1765, 1
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1766, i8* %1767, align 1
  %1768 = xor i32 %1757, %1750
  %1769 = xor i32 %1768, %1758
  %1770 = lshr i32 %1769, 4
  %1771 = trunc i32 %1770 to i8
  %1772 = and i8 %1771, 1
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1772, i8* %1773, align 1
  %1774 = icmp eq i32 %1758, 0
  %1775 = zext i1 %1774 to i8
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1775, i8* %1776, align 1
  %1777 = lshr i32 %1758, 31
  %1778 = trunc i32 %1777 to i8
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1778, i8* %1779, align 1
  %1780 = lshr i32 %1750, 31
  %1781 = lshr i32 %1757, 31
  %1782 = xor i32 %1781, %1780
  %1783 = xor i32 %1777, %1780
  %1784 = add i32 %1783, %1782
  %1785 = icmp eq i32 %1784, 2
  %1786 = zext i1 %1785 to i8
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1786, i8* %1787, align 1
  store %struct.Memory* %loadMem_43a4bf, %struct.Memory** %MEMORY
  %loadMem_43a4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 33
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %1790 to i64*
  %1791 = load i64, i64* %PC.i1346
  %1792 = add i64 %1791, 355
  %1793 = load i64, i64* %PC.i1346
  %1794 = add i64 %1793, 6
  %1795 = load i64, i64* %PC.i1346
  %1796 = add i64 %1795, 6
  store i64 %1796, i64* %PC.i1346
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1798 = load i8, i8* %1797, align 1
  %1799 = icmp eq i8 %1798, 0
  %1800 = zext i1 %1799 to i8
  store i8 %1800, i8* %BRANCH_TAKEN, align 1
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1802 = select i1 %1799, i64 %1792, i64 %1794
  store i64 %1802, i64* %1801, align 8
  store %struct.Memory* %loadMem_43a4c2, %struct.Memory** %MEMORY
  %loadBr_43a4c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a4c2 = icmp eq i8 %loadBr_43a4c2, 1
  br i1 %cmpBr_43a4c2, label %block_.L_43a625, label %block_43a4c8

block_43a4c8:                                     ; preds = %block_43a49a
  %loadMem_43a4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 33
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %1805 to i64*
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 1
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %RAX.i1344 = bitcast %union.anon* %1808 to i64*
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 15
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %RBP.i1345 = bitcast %union.anon* %1811 to i64*
  %1812 = load i64, i64* %RBP.i1345
  %1813 = sub i64 %1812, 356
  %1814 = load i64, i64* %PC.i1343
  %1815 = add i64 %1814, 6
  store i64 %1815, i64* %PC.i1343
  %1816 = inttoptr i64 %1813 to i32*
  %1817 = load i32, i32* %1816
  %1818 = zext i32 %1817 to i64
  store i64 %1818, i64* %RAX.i1344, align 8
  store %struct.Memory* %loadMem_43a4c8, %struct.Memory** %MEMORY
  %loadMem_43a4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1820 = getelementptr inbounds %struct.GPR, %struct.GPR* %1819, i32 0, i32 33
  %1821 = getelementptr inbounds %struct.Reg, %struct.Reg* %1820, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %1821 to i64*
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 5
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %RCX.i1341 = bitcast %union.anon* %1824 to i64*
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 15
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %RBP.i1342 = bitcast %union.anon* %1827 to i64*
  %1828 = load i64, i64* %RBP.i1342
  %1829 = sub i64 %1828, 72
  %1830 = load i64, i64* %PC.i1340
  %1831 = add i64 %1830, 4
  store i64 %1831, i64* %PC.i1340
  %1832 = inttoptr i64 %1829 to i32*
  %1833 = load i32, i32* %1832
  %1834 = sext i32 %1833 to i64
  store i64 %1834, i64* %RCX.i1341, align 8
  store %struct.Memory* %loadMem_43a4ce, %struct.Memory** %MEMORY
  %loadMem_43a4d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 33
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %1837 to i64*
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 1
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %EAX.i1337 = bitcast %union.anon* %1840 to i32*
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1842 = getelementptr inbounds %struct.GPR, %struct.GPR* %1841, i32 0, i32 5
  %1843 = getelementptr inbounds %struct.Reg, %struct.Reg* %1842, i32 0, i32 0
  %RCX.i1338 = bitcast %union.anon* %1843 to i64*
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 15
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %RBP.i1339 = bitcast %union.anon* %1846 to i64*
  %1847 = load i64, i64* %RBP.i1339
  %1848 = load i64, i64* %RCX.i1338
  %1849 = mul i64 %1848, 4
  %1850 = add i64 %1847, -160
  %1851 = add i64 %1850, %1849
  %1852 = load i32, i32* %EAX.i1337
  %1853 = zext i32 %1852 to i64
  %1854 = load i64, i64* %PC.i1336
  %1855 = add i64 %1854, 7
  store i64 %1855, i64* %PC.i1336
  %1856 = inttoptr i64 %1851 to i32*
  store i32 %1852, i32* %1856
  store %struct.Memory* %loadMem_43a4d2, %struct.Memory** %MEMORY
  %loadMem_43a4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 33
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %1859 to i64*
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 5
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %RCX.i1334 = bitcast %union.anon* %1862 to i64*
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1864 = getelementptr inbounds %struct.GPR, %struct.GPR* %1863, i32 0, i32 15
  %1865 = getelementptr inbounds %struct.Reg, %struct.Reg* %1864, i32 0, i32 0
  %RBP.i1335 = bitcast %union.anon* %1865 to i64*
  %1866 = load i64, i64* %RBP.i1335
  %1867 = sub i64 %1866, 40
  %1868 = load i64, i64* %PC.i1333
  %1869 = add i64 %1868, 4
  store i64 %1869, i64* %PC.i1333
  %1870 = inttoptr i64 %1867 to i64*
  %1871 = load i64, i64* %1870
  store i64 %1871, i64* %RCX.i1334, align 8
  store %struct.Memory* %loadMem_43a4d9, %struct.Memory** %MEMORY
  %loadMem_43a4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 33
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %1874 to i64*
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 7
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %RDX.i1331 = bitcast %union.anon* %1877 to i64*
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1879 = getelementptr inbounds %struct.GPR, %struct.GPR* %1878, i32 0, i32 15
  %1880 = getelementptr inbounds %struct.Reg, %struct.Reg* %1879, i32 0, i32 0
  %RBP.i1332 = bitcast %union.anon* %1880 to i64*
  %1881 = load i64, i64* %RBP.i1332
  %1882 = sub i64 %1881, 356
  %1883 = load i64, i64* %PC.i1330
  %1884 = add i64 %1883, 7
  store i64 %1884, i64* %PC.i1330
  %1885 = inttoptr i64 %1882 to i32*
  %1886 = load i32, i32* %1885
  %1887 = sext i32 %1886 to i64
  store i64 %1887, i64* %RDX.i1331, align 8
  store %struct.Memory* %loadMem_43a4dd, %struct.Memory** %MEMORY
  %loadMem_43a4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1889 = getelementptr inbounds %struct.GPR, %struct.GPR* %1888, i32 0, i32 33
  %1890 = getelementptr inbounds %struct.Reg, %struct.Reg* %1889, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %1890 to i64*
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1892 = getelementptr inbounds %struct.GPR, %struct.GPR* %1891, i32 0, i32 7
  %1893 = getelementptr inbounds %struct.Reg, %struct.Reg* %1892, i32 0, i32 0
  %RDX.i1329 = bitcast %union.anon* %1893 to i64*
  %1894 = load i64, i64* %RDX.i1329
  %1895 = load i64, i64* %PC.i1328
  %1896 = add i64 %1895, 4
  store i64 %1896, i64* %PC.i1328
  %1897 = sext i64 %1894 to i128
  %1898 = and i128 %1897, -18446744073709551616
  %1899 = zext i64 %1894 to i128
  %1900 = or i128 %1898, %1899
  %1901 = mul i128 36, %1900
  %1902 = trunc i128 %1901 to i64
  store i64 %1902, i64* %RDX.i1329, align 8
  %1903 = sext i64 %1902 to i128
  %1904 = icmp ne i128 %1903, %1901
  %1905 = zext i1 %1904 to i8
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1905, i8* %1906, align 1
  %1907 = trunc i128 %1901 to i32
  %1908 = and i32 %1907, 255
  %1909 = call i32 @llvm.ctpop.i32(i32 %1908)
  %1910 = trunc i32 %1909 to i8
  %1911 = and i8 %1910, 1
  %1912 = xor i8 %1911, 1
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1912, i8* %1913, align 1
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1914, align 1
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1915, align 1
  %1916 = lshr i64 %1902, 63
  %1917 = trunc i64 %1916 to i8
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1917, i8* %1918, align 1
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1905, i8* %1919, align 1
  store %struct.Memory* %loadMem_43a4e4, %struct.Memory** %MEMORY
  %loadMem_43a4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 33
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %1922 to i64*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 5
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %RCX.i1326 = bitcast %union.anon* %1925 to i64*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 7
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %RDX.i1327 = bitcast %union.anon* %1928 to i64*
  %1929 = load i64, i64* %RCX.i1326
  %1930 = load i64, i64* %RDX.i1327
  %1931 = load i64, i64* %PC.i1325
  %1932 = add i64 %1931, 3
  store i64 %1932, i64* %PC.i1325
  %1933 = add i64 %1930, %1929
  store i64 %1933, i64* %RCX.i1326, align 8
  %1934 = icmp ult i64 %1933, %1929
  %1935 = icmp ult i64 %1933, %1930
  %1936 = or i1 %1934, %1935
  %1937 = zext i1 %1936 to i8
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1937, i8* %1938, align 1
  %1939 = trunc i64 %1933 to i32
  %1940 = and i32 %1939, 255
  %1941 = call i32 @llvm.ctpop.i32(i32 %1940)
  %1942 = trunc i32 %1941 to i8
  %1943 = and i8 %1942, 1
  %1944 = xor i8 %1943, 1
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1944, i8* %1945, align 1
  %1946 = xor i64 %1930, %1929
  %1947 = xor i64 %1946, %1933
  %1948 = lshr i64 %1947, 4
  %1949 = trunc i64 %1948 to i8
  %1950 = and i8 %1949, 1
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1950, i8* %1951, align 1
  %1952 = icmp eq i64 %1933, 0
  %1953 = zext i1 %1952 to i8
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1953, i8* %1954, align 1
  %1955 = lshr i64 %1933, 63
  %1956 = trunc i64 %1955 to i8
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1956, i8* %1957, align 1
  %1958 = lshr i64 %1929, 63
  %1959 = lshr i64 %1930, 63
  %1960 = xor i64 %1955, %1958
  %1961 = xor i64 %1955, %1959
  %1962 = add i64 %1960, %1961
  %1963 = icmp eq i64 %1962, 2
  %1964 = zext i1 %1963 to i8
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1964, i8* %1965, align 1
  store %struct.Memory* %loadMem_43a4e8, %struct.Memory** %MEMORY
  %loadMem_43a4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 33
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %1968 to i64*
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1970 = getelementptr inbounds %struct.GPR, %struct.GPR* %1969, i32 0, i32 9
  %1971 = getelementptr inbounds %struct.Reg, %struct.Reg* %1970, i32 0, i32 0
  %1972 = bitcast %union.anon* %1971 to %struct.anon.2*
  %SIL.i1323 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1972, i32 0, i32 0
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 5
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %RCX.i1324 = bitcast %union.anon* %1975 to i64*
  %1976 = load i64, i64* %RCX.i1324
  %1977 = add i64 %1976, 28
  %1978 = load i64, i64* %PC.i1322
  %1979 = add i64 %1978, 4
  store i64 %1979, i64* %PC.i1322
  %1980 = inttoptr i64 %1977 to i8*
  %1981 = load i8, i8* %1980
  store i8 %1981, i8* %SIL.i1323, align 1
  store %struct.Memory* %loadMem_43a4eb, %struct.Memory** %MEMORY
  %loadMem_43a4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 33
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %1984 to i64*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 5
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %RCX.i1320 = bitcast %union.anon* %1987 to i64*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 15
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %RBP.i1321 = bitcast %union.anon* %1990 to i64*
  %1991 = load i64, i64* %RBP.i1321
  %1992 = sub i64 %1991, 72
  %1993 = load i64, i64* %PC.i1319
  %1994 = add i64 %1993, 4
  store i64 %1994, i64* %PC.i1319
  %1995 = inttoptr i64 %1992 to i32*
  %1996 = load i32, i32* %1995
  %1997 = sext i32 %1996 to i64
  store i64 %1997, i64* %RCX.i1320, align 8
  store %struct.Memory* %loadMem_43a4ef, %struct.Memory** %MEMORY
  %loadMem_43a4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 9
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %2004 = bitcast %union.anon* %2003 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2004, i32 0, i32 0
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2006 = getelementptr inbounds %struct.GPR, %struct.GPR* %2005, i32 0, i32 5
  %2007 = getelementptr inbounds %struct.Reg, %struct.Reg* %2006, i32 0, i32 0
  %RCX.i1317 = bitcast %union.anon* %2007 to i64*
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2009 = getelementptr inbounds %struct.GPR, %struct.GPR* %2008, i32 0, i32 15
  %2010 = getelementptr inbounds %struct.Reg, %struct.Reg* %2009, i32 0, i32 0
  %RBP.i1318 = bitcast %union.anon* %2010 to i64*
  %2011 = load i64, i64* %RBP.i1318
  %2012 = load i64, i64* %RCX.i1317
  %2013 = add i64 %2011, -192
  %2014 = add i64 %2013, %2012
  %2015 = load i8, i8* %SIL.i
  %2016 = zext i8 %2015 to i64
  %2017 = load i64, i64* %PC.i1316
  %2018 = add i64 %2017, 8
  store i64 %2018, i64* %PC.i1316
  %2019 = inttoptr i64 %2014 to i8*
  store i8 %2015, i8* %2019
  store %struct.Memory* %loadMem_43a4f3, %struct.Memory** %MEMORY
  %loadMem_43a4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2021 = getelementptr inbounds %struct.GPR, %struct.GPR* %2020, i32 0, i32 33
  %2022 = getelementptr inbounds %struct.Reg, %struct.Reg* %2021, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %2022 to i64*
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 5
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %RCX.i1314 = bitcast %union.anon* %2025 to i64*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 15
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %2028 to i64*
  %2029 = load i64, i64* %RBP.i1315
  %2030 = sub i64 %2029, 72
  %2031 = load i64, i64* %PC.i1313
  %2032 = add i64 %2031, 4
  store i64 %2032, i64* %PC.i1313
  %2033 = inttoptr i64 %2030 to i32*
  %2034 = load i32, i32* %2033
  %2035 = sext i32 %2034 to i64
  store i64 %2035, i64* %RCX.i1314, align 8
  store %struct.Memory* %loadMem_43a4fb, %struct.Memory** %MEMORY
  %loadMem_43a4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 33
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %2038 to i64*
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 5
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %RCX.i1311 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 15
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %2044 to i64*
  %2045 = load i64, i64* %RBP.i1312
  %2046 = load i64, i64* %RCX.i1311
  %2047 = add i64 %2045, -192
  %2048 = add i64 %2047, %2046
  %2049 = load i64, i64* %PC.i1310
  %2050 = add i64 %2049, 8
  store i64 %2050, i64* %PC.i1310
  %2051 = inttoptr i64 %2048 to i8*
  %2052 = load i8, i8* %2051
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2053, align 1
  %2054 = zext i8 %2052 to i32
  %2055 = call i32 @llvm.ctpop.i32(i32 %2054)
  %2056 = trunc i32 %2055 to i8
  %2057 = and i8 %2056, 1
  %2058 = xor i8 %2057, 1
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2058, i8* %2059, align 1
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2060, align 1
  %2061 = icmp eq i8 %2052, 0
  %2062 = zext i1 %2061 to i8
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2062, i8* %2063, align 1
  %2064 = lshr i8 %2052, 7
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2064, i8* %2065, align 1
  %2066 = lshr i8 %2052, 7
  %2067 = xor i8 %2064, %2066
  %2068 = add i8 %2067, %2066
  %2069 = icmp eq i8 %2068, 2
  %2070 = zext i1 %2069 to i8
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2070, i8* %2071, align 1
  store %struct.Memory* %loadMem_43a4ff, %struct.Memory** %MEMORY
  %loadMem_43a507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 33
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %2074 to i64*
  %2075 = load i64, i64* %PC.i1309
  %2076 = add i64 %2075, 15
  %2077 = load i64, i64* %PC.i1309
  %2078 = add i64 %2077, 6
  %2079 = load i64, i64* %PC.i1309
  %2080 = add i64 %2079, 6
  store i64 %2080, i64* %PC.i1309
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2082 = load i8, i8* %2081, align 1
  store i8 %2082, i8* %BRANCH_TAKEN, align 1
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2084 = icmp ne i8 %2082, 0
  %2085 = select i1 %2084, i64 %2076, i64 %2078
  store i64 %2085, i64* %2083, align 8
  store %struct.Memory* %loadMem_43a507, %struct.Memory** %MEMORY
  %loadBr_43a507 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a507 = icmp eq i8 %loadBr_43a507, 1
  br i1 %cmpBr_43a507, label %block_.L_43a516, label %block_43a50d

block_43a50d:                                     ; preds = %block_43a4c8
  %loadMem_43a50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 33
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %2088 to i64*
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 1
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %RAX.i1307 = bitcast %union.anon* %2091 to i64*
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2093 = getelementptr inbounds %struct.GPR, %struct.GPR* %2092, i32 0, i32 15
  %2094 = getelementptr inbounds %struct.Reg, %struct.Reg* %2093, i32 0, i32 0
  %RBP.i1308 = bitcast %union.anon* %2094 to i64*
  %2095 = load i64, i64* %RBP.i1308
  %2096 = sub i64 %2095, 76
  %2097 = load i64, i64* %PC.i1306
  %2098 = add i64 %2097, 3
  store i64 %2098, i64* %PC.i1306
  %2099 = inttoptr i64 %2096 to i32*
  %2100 = load i32, i32* %2099
  %2101 = zext i32 %2100 to i64
  store i64 %2101, i64* %RAX.i1307, align 8
  store %struct.Memory* %loadMem_43a50d, %struct.Memory** %MEMORY
  %loadMem_43a510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2103 = getelementptr inbounds %struct.GPR, %struct.GPR* %2102, i32 0, i32 33
  %2104 = getelementptr inbounds %struct.Reg, %struct.Reg* %2103, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %2104 to i64*
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 1
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %2107 to i64*
  %2108 = load i64, i64* %RAX.i1305
  %2109 = load i64, i64* %PC.i1304
  %2110 = add i64 %2109, 3
  store i64 %2110, i64* %PC.i1304
  %2111 = trunc i64 %2108 to i32
  %2112 = add i32 1, %2111
  %2113 = zext i32 %2112 to i64
  store i64 %2113, i64* %RAX.i1305, align 8
  %2114 = icmp ult i32 %2112, %2111
  %2115 = icmp ult i32 %2112, 1
  %2116 = or i1 %2114, %2115
  %2117 = zext i1 %2116 to i8
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2117, i8* %2118, align 1
  %2119 = and i32 %2112, 255
  %2120 = call i32 @llvm.ctpop.i32(i32 %2119)
  %2121 = trunc i32 %2120 to i8
  %2122 = and i8 %2121, 1
  %2123 = xor i8 %2122, 1
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2123, i8* %2124, align 1
  %2125 = xor i64 1, %2108
  %2126 = trunc i64 %2125 to i32
  %2127 = xor i32 %2126, %2112
  %2128 = lshr i32 %2127, 4
  %2129 = trunc i32 %2128 to i8
  %2130 = and i8 %2129, 1
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2130, i8* %2131, align 1
  %2132 = icmp eq i32 %2112, 0
  %2133 = zext i1 %2132 to i8
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2133, i8* %2134, align 1
  %2135 = lshr i32 %2112, 31
  %2136 = trunc i32 %2135 to i8
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2136, i8* %2137, align 1
  %2138 = lshr i32 %2111, 31
  %2139 = xor i32 %2135, %2138
  %2140 = add i32 %2139, %2135
  %2141 = icmp eq i32 %2140, 2
  %2142 = zext i1 %2141 to i8
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2142, i8* %2143, align 1
  store %struct.Memory* %loadMem_43a510, %struct.Memory** %MEMORY
  %loadMem_43a513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2145 = getelementptr inbounds %struct.GPR, %struct.GPR* %2144, i32 0, i32 33
  %2146 = getelementptr inbounds %struct.Reg, %struct.Reg* %2145, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %2146 to i64*
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2148 = getelementptr inbounds %struct.GPR, %struct.GPR* %2147, i32 0, i32 1
  %2149 = getelementptr inbounds %struct.Reg, %struct.Reg* %2148, i32 0, i32 0
  %EAX.i1302 = bitcast %union.anon* %2149 to i32*
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 15
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %2152 to i64*
  %2153 = load i64, i64* %RBP.i1303
  %2154 = sub i64 %2153, 76
  %2155 = load i32, i32* %EAX.i1302
  %2156 = zext i32 %2155 to i64
  %2157 = load i64, i64* %PC.i1301
  %2158 = add i64 %2157, 3
  store i64 %2158, i64* %PC.i1301
  %2159 = inttoptr i64 %2154 to i32*
  store i32 %2155, i32* %2159
  store %struct.Memory* %loadMem_43a513, %struct.Memory** %MEMORY
  br label %block_.L_43a516

block_.L_43a516:                                  ; preds = %block_43a50d, %block_43a4c8
  %loadMem_43a516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 33
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %2162 to i64*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 1
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %RAX.i1299 = bitcast %union.anon* %2165 to i64*
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 15
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %2168 to i64*
  %2169 = load i64, i64* %RBP.i1300
  %2170 = sub i64 %2169, 40
  %2171 = load i64, i64* %PC.i1298
  %2172 = add i64 %2171, 4
  store i64 %2172, i64* %PC.i1298
  %2173 = inttoptr i64 %2170 to i64*
  %2174 = load i64, i64* %2173
  store i64 %2174, i64* %RAX.i1299, align 8
  store %struct.Memory* %loadMem_43a516, %struct.Memory** %MEMORY
  %loadMem_43a51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 5
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %RCX.i1296 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 15
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RBP.i1297 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RBP.i1297
  %2185 = sub i64 %2184, 356
  %2186 = load i64, i64* %PC.i1295
  %2187 = add i64 %2186, 7
  store i64 %2187, i64* %PC.i1295
  %2188 = inttoptr i64 %2185 to i32*
  %2189 = load i32, i32* %2188
  %2190 = sext i32 %2189 to i64
  store i64 %2190, i64* %RCX.i1296, align 8
  store %struct.Memory* %loadMem_43a51a, %struct.Memory** %MEMORY
  %loadMem_43a521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2192 = getelementptr inbounds %struct.GPR, %struct.GPR* %2191, i32 0, i32 33
  %2193 = getelementptr inbounds %struct.Reg, %struct.Reg* %2192, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %2193 to i64*
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 5
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %RCX.i1294 = bitcast %union.anon* %2196 to i64*
  %2197 = load i64, i64* %RCX.i1294
  %2198 = load i64, i64* %PC.i1293
  %2199 = add i64 %2198, 4
  store i64 %2199, i64* %PC.i1293
  %2200 = sext i64 %2197 to i128
  %2201 = and i128 %2200, -18446744073709551616
  %2202 = zext i64 %2197 to i128
  %2203 = or i128 %2201, %2202
  %2204 = mul i128 36, %2203
  %2205 = trunc i128 %2204 to i64
  store i64 %2205, i64* %RCX.i1294, align 8
  %2206 = sext i64 %2205 to i128
  %2207 = icmp ne i128 %2206, %2204
  %2208 = zext i1 %2207 to i8
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2208, i8* %2209, align 1
  %2210 = trunc i128 %2204 to i32
  %2211 = and i32 %2210, 255
  %2212 = call i32 @llvm.ctpop.i32(i32 %2211)
  %2213 = trunc i32 %2212 to i8
  %2214 = and i8 %2213, 1
  %2215 = xor i8 %2214, 1
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2215, i8* %2216, align 1
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2217, align 1
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2218, align 1
  %2219 = lshr i64 %2205, 63
  %2220 = trunc i64 %2219 to i8
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2220, i8* %2221, align 1
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2208, i8* %2222, align 1
  store %struct.Memory* %loadMem_43a521, %struct.Memory** %MEMORY
  %loadMem_43a525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 1
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %2228 to i64*
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2230 = getelementptr inbounds %struct.GPR, %struct.GPR* %2229, i32 0, i32 5
  %2231 = getelementptr inbounds %struct.Reg, %struct.Reg* %2230, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %2231 to i64*
  %2232 = load i64, i64* %RAX.i1291
  %2233 = load i64, i64* %RCX.i1292
  %2234 = load i64, i64* %PC.i1290
  %2235 = add i64 %2234, 3
  store i64 %2235, i64* %PC.i1290
  %2236 = add i64 %2233, %2232
  store i64 %2236, i64* %RAX.i1291, align 8
  %2237 = icmp ult i64 %2236, %2232
  %2238 = icmp ult i64 %2236, %2233
  %2239 = or i1 %2237, %2238
  %2240 = zext i1 %2239 to i8
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2240, i8* %2241, align 1
  %2242 = trunc i64 %2236 to i32
  %2243 = and i32 %2242, 255
  %2244 = call i32 @llvm.ctpop.i32(i32 %2243)
  %2245 = trunc i32 %2244 to i8
  %2246 = and i8 %2245, 1
  %2247 = xor i8 %2246, 1
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2247, i8* %2248, align 1
  %2249 = xor i64 %2233, %2232
  %2250 = xor i64 %2249, %2236
  %2251 = lshr i64 %2250, 4
  %2252 = trunc i64 %2251 to i8
  %2253 = and i8 %2252, 1
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2253, i8* %2254, align 1
  %2255 = icmp eq i64 %2236, 0
  %2256 = zext i1 %2255 to i8
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2256, i8* %2257, align 1
  %2258 = lshr i64 %2236, 63
  %2259 = trunc i64 %2258 to i8
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2259, i8* %2260, align 1
  %2261 = lshr i64 %2232, 63
  %2262 = lshr i64 %2233, 63
  %2263 = xor i64 %2258, %2261
  %2264 = xor i64 %2258, %2262
  %2265 = add i64 %2263, %2264
  %2266 = icmp eq i64 %2265, 2
  %2267 = zext i1 %2266 to i8
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2267, i8* %2268, align 1
  store %struct.Memory* %loadMem_43a525, %struct.Memory** %MEMORY
  %loadMem_43a528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 33
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %2271 to i64*
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2273 = getelementptr inbounds %struct.GPR, %struct.GPR* %2272, i32 0, i32 7
  %2274 = getelementptr inbounds %struct.Reg, %struct.Reg* %2273, i32 0, i32 0
  %2275 = bitcast %union.anon* %2274 to %struct.anon.2*
  %DL.i1288 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2275, i32 0, i32 0
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 1
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %RAX.i1289 = bitcast %union.anon* %2278 to i64*
  %2279 = load i64, i64* %RAX.i1289
  %2280 = add i64 %2279, 30
  %2281 = load i64, i64* %PC.i1287
  %2282 = add i64 %2281, 3
  store i64 %2282, i64* %PC.i1287
  %2283 = inttoptr i64 %2280 to i8*
  %2284 = load i8, i8* %2283
  store i8 %2284, i8* %DL.i1288, align 1
  store %struct.Memory* %loadMem_43a528, %struct.Memory** %MEMORY
  %loadMem_43a52b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2286 = getelementptr inbounds %struct.GPR, %struct.GPR* %2285, i32 0, i32 33
  %2287 = getelementptr inbounds %struct.Reg, %struct.Reg* %2286, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %2287 to i64*
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 1
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %RAX.i1285 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 15
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %2293 to i64*
  %2294 = load i64, i64* %RBP.i1286
  %2295 = sub i64 %2294, 72
  %2296 = load i64, i64* %PC.i1284
  %2297 = add i64 %2296, 4
  store i64 %2297, i64* %PC.i1284
  %2298 = inttoptr i64 %2295 to i32*
  %2299 = load i32, i32* %2298
  %2300 = sext i32 %2299 to i64
  store i64 %2300, i64* %RAX.i1285, align 8
  store %struct.Memory* %loadMem_43a52b, %struct.Memory** %MEMORY
  %loadMem_43a52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 33
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %2303 to i64*
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2305 = getelementptr inbounds %struct.GPR, %struct.GPR* %2304, i32 0, i32 7
  %2306 = getelementptr inbounds %struct.Reg, %struct.Reg* %2305, i32 0, i32 0
  %2307 = bitcast %union.anon* %2306 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2307, i32 0, i32 0
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 1
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %RAX.i1282 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 15
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RBP.i1283 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %RBP.i1283
  %2315 = load i64, i64* %RAX.i1282
  %2316 = add i64 %2314, -256
  %2317 = add i64 %2316, %2315
  %2318 = load i8, i8* %DL.i
  %2319 = zext i8 %2318 to i64
  %2320 = load i64, i64* %PC.i1281
  %2321 = add i64 %2320, 7
  store i64 %2321, i64* %PC.i1281
  %2322 = inttoptr i64 %2317 to i8*
  store i8 %2318, i8* %2322
  store %struct.Memory* %loadMem_43a52f, %struct.Memory** %MEMORY
  %loadMem_43a536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 33
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 1
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %RAX.i1279 = bitcast %union.anon* %2328 to i64*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 15
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %RBP.i1280 = bitcast %union.anon* %2331 to i64*
  %2332 = load i64, i64* %RBP.i1280
  %2333 = sub i64 %2332, 72
  %2334 = load i64, i64* %PC.i1278
  %2335 = add i64 %2334, 4
  store i64 %2335, i64* %PC.i1278
  %2336 = inttoptr i64 %2333 to i32*
  %2337 = load i32, i32* %2336
  %2338 = sext i32 %2337 to i64
  store i64 %2338, i64* %RAX.i1279, align 8
  store %struct.Memory* %loadMem_43a536, %struct.Memory** %MEMORY
  %loadMem_43a53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 33
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %2341 to i64*
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 1
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %RAX.i1276 = bitcast %union.anon* %2344 to i64*
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 15
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %RBP.i1277 = bitcast %union.anon* %2347 to i64*
  %2348 = load i64, i64* %RBP.i1277
  %2349 = load i64, i64* %RAX.i1276
  %2350 = add i64 %2348, -224
  %2351 = add i64 %2350, %2349
  %2352 = load i64, i64* %PC.i1275
  %2353 = add i64 %2352, 8
  store i64 %2353, i64* %PC.i1275
  %2354 = inttoptr i64 %2351 to i8*
  store i8 0, i8* %2354
  store %struct.Memory* %loadMem_43a53a, %struct.Memory** %MEMORY
  %loadMem_43a542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 33
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %2357 to i64*
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 15
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %RBP.i1274 = bitcast %union.anon* %2360 to i64*
  %2361 = load i64, i64* %RBP.i1274
  %2362 = sub i64 %2361, 60
  %2363 = load i64, i64* %PC.i1273
  %2364 = add i64 %2363, 4
  store i64 %2364, i64* %PC.i1273
  %2365 = inttoptr i64 %2362 to i32*
  %2366 = load i32, i32* %2365
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2367, align 1
  %2368 = and i32 %2366, 255
  %2369 = call i32 @llvm.ctpop.i32(i32 %2368)
  %2370 = trunc i32 %2369 to i8
  %2371 = and i8 %2370, 1
  %2372 = xor i8 %2371, 1
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2372, i8* %2373, align 1
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2374, align 1
  %2375 = icmp eq i32 %2366, 0
  %2376 = zext i1 %2375 to i8
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2376, i8* %2377, align 1
  %2378 = lshr i32 %2366, 31
  %2379 = trunc i32 %2378 to i8
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2379, i8* %2380, align 1
  %2381 = lshr i32 %2366, 31
  %2382 = xor i32 %2378, %2381
  %2383 = add i32 %2382, %2381
  %2384 = icmp eq i32 %2383, 2
  %2385 = zext i1 %2384 to i8
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2385, i8* %2386, align 1
  store %struct.Memory* %loadMem_43a542, %struct.Memory** %MEMORY
  %loadMem_43a546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2388 = getelementptr inbounds %struct.GPR, %struct.GPR* %2387, i32 0, i32 33
  %2389 = getelementptr inbounds %struct.Reg, %struct.Reg* %2388, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %2389 to i64*
  %2390 = load i64, i64* %PC.i1272
  %2391 = add i64 %2390, 27
  %2392 = load i64, i64* %PC.i1272
  %2393 = add i64 %2392, 6
  %2394 = load i64, i64* %PC.i1272
  %2395 = add i64 %2394, 6
  store i64 %2395, i64* %PC.i1272
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2397 = load i8, i8* %2396, align 1
  store i8 %2397, i8* %BRANCH_TAKEN, align 1
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2399 = icmp ne i8 %2397, 0
  %2400 = select i1 %2399, i64 %2391, i64 %2393
  store i64 %2400, i64* %2398, align 8
  store %struct.Memory* %loadMem_43a546, %struct.Memory** %MEMORY
  %loadBr_43a546 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a546 = icmp eq i8 %loadBr_43a546, 1
  br i1 %cmpBr_43a546, label %block_.L_43a561, label %block_43a54c

block_43a54c:                                     ; preds = %block_.L_43a516
  %loadMem_43a54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2402 = getelementptr inbounds %struct.GPR, %struct.GPR* %2401, i32 0, i32 33
  %2403 = getelementptr inbounds %struct.Reg, %struct.Reg* %2402, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %2403 to i64*
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2405 = getelementptr inbounds %struct.GPR, %struct.GPR* %2404, i32 0, i32 1
  %2406 = getelementptr inbounds %struct.Reg, %struct.Reg* %2405, i32 0, i32 0
  %RAX.i1270 = bitcast %union.anon* %2406 to i64*
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2408 = getelementptr inbounds %struct.GPR, %struct.GPR* %2407, i32 0, i32 15
  %2409 = getelementptr inbounds %struct.Reg, %struct.Reg* %2408, i32 0, i32 0
  %RBP.i1271 = bitcast %union.anon* %2409 to i64*
  %2410 = load i64, i64* %RBP.i1271
  %2411 = sub i64 %2410, 60
  %2412 = load i64, i64* %PC.i1269
  %2413 = add i64 %2412, 3
  store i64 %2413, i64* %PC.i1269
  %2414 = inttoptr i64 %2411 to i32*
  %2415 = load i32, i32* %2414
  %2416 = zext i32 %2415 to i64
  store i64 %2416, i64* %RAX.i1270, align 8
  store %struct.Memory* %loadMem_43a54c, %struct.Memory** %MEMORY
  %loadMem_43a54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 33
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %2419 to i64*
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 5
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %RCX.i1268 = bitcast %union.anon* %2422 to i64*
  %2423 = load i64, i64* %PC.i1267
  %2424 = add i64 %2423, 7
  store i64 %2424, i64* %PC.i1267
  %2425 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %2426 = zext i32 %2425 to i64
  store i64 %2426, i64* %RCX.i1268, align 8
  store %struct.Memory* %loadMem_43a54f, %struct.Memory** %MEMORY
  %loadMem_43a556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 33
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 5
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %RCX.i1266 = bitcast %union.anon* %2432 to i64*
  %2433 = load i64, i64* %RCX.i1266
  %2434 = load i64, i64* %PC.i1265
  %2435 = add i64 %2434, 3
  store i64 %2435, i64* %PC.i1265
  %2436 = trunc i64 %2433 to i32
  %2437 = sub i32 %2436, 1
  %2438 = zext i32 %2437 to i64
  store i64 %2438, i64* %RCX.i1266, align 8
  %2439 = icmp ult i32 %2436, 1
  %2440 = zext i1 %2439 to i8
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2440, i8* %2441, align 1
  %2442 = and i32 %2437, 255
  %2443 = call i32 @llvm.ctpop.i32(i32 %2442)
  %2444 = trunc i32 %2443 to i8
  %2445 = and i8 %2444, 1
  %2446 = xor i8 %2445, 1
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2446, i8* %2447, align 1
  %2448 = xor i64 1, %2433
  %2449 = trunc i64 %2448 to i32
  %2450 = xor i32 %2449, %2437
  %2451 = lshr i32 %2450, 4
  %2452 = trunc i32 %2451 to i8
  %2453 = and i8 %2452, 1
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2453, i8* %2454, align 1
  %2455 = icmp eq i32 %2437, 0
  %2456 = zext i1 %2455 to i8
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2456, i8* %2457, align 1
  %2458 = lshr i32 %2437, 31
  %2459 = trunc i32 %2458 to i8
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2459, i8* %2460, align 1
  %2461 = lshr i32 %2436, 31
  %2462 = xor i32 %2458, %2461
  %2463 = add i32 %2462, %2461
  %2464 = icmp eq i32 %2463, 2
  %2465 = zext i1 %2464 to i8
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2465, i8* %2466, align 1
  store %struct.Memory* %loadMem_43a556, %struct.Memory** %MEMORY
  %loadMem_43a559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 33
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %2469 to i64*
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 1
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %EAX.i1263 = bitcast %union.anon* %2472 to i32*
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2474 = getelementptr inbounds %struct.GPR, %struct.GPR* %2473, i32 0, i32 5
  %2475 = getelementptr inbounds %struct.Reg, %struct.Reg* %2474, i32 0, i32 0
  %ECX.i1264 = bitcast %union.anon* %2475 to i32*
  %2476 = load i32, i32* %EAX.i1263
  %2477 = zext i32 %2476 to i64
  %2478 = load i32, i32* %ECX.i1264
  %2479 = zext i32 %2478 to i64
  %2480 = load i64, i64* %PC.i1262
  %2481 = add i64 %2480, 2
  store i64 %2481, i64* %PC.i1262
  %2482 = sub i32 %2476, %2478
  %2483 = icmp ult i32 %2476, %2478
  %2484 = zext i1 %2483 to i8
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2484, i8* %2485, align 1
  %2486 = and i32 %2482, 255
  %2487 = call i32 @llvm.ctpop.i32(i32 %2486)
  %2488 = trunc i32 %2487 to i8
  %2489 = and i8 %2488, 1
  %2490 = xor i8 %2489, 1
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2490, i8* %2491, align 1
  %2492 = xor i64 %2479, %2477
  %2493 = trunc i64 %2492 to i32
  %2494 = xor i32 %2493, %2482
  %2495 = lshr i32 %2494, 4
  %2496 = trunc i32 %2495 to i8
  %2497 = and i8 %2496, 1
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2497, i8* %2498, align 1
  %2499 = icmp eq i32 %2482, 0
  %2500 = zext i1 %2499 to i8
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2500, i8* %2501, align 1
  %2502 = lshr i32 %2482, 31
  %2503 = trunc i32 %2502 to i8
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2503, i8* %2504, align 1
  %2505 = lshr i32 %2476, 31
  %2506 = lshr i32 %2478, 31
  %2507 = xor i32 %2506, %2505
  %2508 = xor i32 %2502, %2505
  %2509 = add i32 %2508, %2507
  %2510 = icmp eq i32 %2509, 2
  %2511 = zext i1 %2510 to i8
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2511, i8* %2512, align 1
  store %struct.Memory* %loadMem_43a559, %struct.Memory** %MEMORY
  %loadMem_43a55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 33
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %2515 to i64*
  %2516 = load i64, i64* %PC.i1261
  %2517 = add i64 %2516, 27
  %2518 = load i64, i64* %PC.i1261
  %2519 = add i64 %2518, 6
  %2520 = load i64, i64* %PC.i1261
  %2521 = add i64 %2520, 6
  store i64 %2521, i64* %PC.i1261
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2523 = load i8, i8* %2522, align 1
  %2524 = icmp eq i8 %2523, 0
  %2525 = zext i1 %2524 to i8
  store i8 %2525, i8* %BRANCH_TAKEN, align 1
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2527 = select i1 %2524, i64 %2517, i64 %2519
  store i64 %2527, i64* %2526, align 8
  store %struct.Memory* %loadMem_43a55b, %struct.Memory** %MEMORY
  %loadBr_43a55b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a55b = icmp eq i8 %loadBr_43a55b, 1
  br i1 %cmpBr_43a55b, label %block_.L_43a576, label %block_.L_43a561

block_.L_43a561:                                  ; preds = %block_43a54c, %block_.L_43a516
  %loadMem_43a561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2529 = getelementptr inbounds %struct.GPR, %struct.GPR* %2528, i32 0, i32 33
  %2530 = getelementptr inbounds %struct.Reg, %struct.Reg* %2529, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %2530 to i64*
  %2531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2532 = getelementptr inbounds %struct.GPR, %struct.GPR* %2531, i32 0, i32 1
  %2533 = getelementptr inbounds %struct.Reg, %struct.Reg* %2532, i32 0, i32 0
  %RAX.i1259 = bitcast %union.anon* %2533 to i64*
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2535 = getelementptr inbounds %struct.GPR, %struct.GPR* %2534, i32 0, i32 15
  %2536 = getelementptr inbounds %struct.Reg, %struct.Reg* %2535, i32 0, i32 0
  %RBP.i1260 = bitcast %union.anon* %2536 to i64*
  %2537 = load i64, i64* %RBP.i1260
  %2538 = sub i64 %2537, 72
  %2539 = load i64, i64* %PC.i1258
  %2540 = add i64 %2539, 4
  store i64 %2540, i64* %PC.i1258
  %2541 = inttoptr i64 %2538 to i32*
  %2542 = load i32, i32* %2541
  %2543 = sext i32 %2542 to i64
  store i64 %2543, i64* %RAX.i1259, align 8
  store %struct.Memory* %loadMem_43a561, %struct.Memory** %MEMORY
  %loadMem_43a565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2545 = getelementptr inbounds %struct.GPR, %struct.GPR* %2544, i32 0, i32 33
  %2546 = getelementptr inbounds %struct.Reg, %struct.Reg* %2545, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %2546 to i64*
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 5
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %2550 = bitcast %union.anon* %2549 to %struct.anon.2*
  %CL.i1255 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2550, i32 0, i32 0
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 1
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %RAX.i1256 = bitcast %union.anon* %2553 to i64*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 15
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %2556 to i64*
  %2557 = load i64, i64* %RBP.i1257
  %2558 = load i64, i64* %RAX.i1256
  %2559 = add i64 %2557, -224
  %2560 = add i64 %2559, %2558
  %2561 = load i64, i64* %PC.i1254
  %2562 = add i64 %2561, 7
  store i64 %2562, i64* %PC.i1254
  %2563 = inttoptr i64 %2560 to i8*
  %2564 = load i8, i8* %2563
  store i8 %2564, i8* %CL.i1255, align 1
  store %struct.Memory* %loadMem_43a565, %struct.Memory** %MEMORY
  %loadMem_43a56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2566 = getelementptr inbounds %struct.GPR, %struct.GPR* %2565, i32 0, i32 33
  %2567 = getelementptr inbounds %struct.Reg, %struct.Reg* %2566, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %2567 to i64*
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 5
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %2571 = bitcast %union.anon* %2570 to %struct.anon.2*
  %CL.i1253 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2571, i32 0, i32 0
  %2572 = load i8, i8* %CL.i1253
  %2573 = zext i8 %2572 to i64
  %2574 = load i64, i64* %PC.i1252
  %2575 = add i64 %2574, 3
  store i64 %2575, i64* %PC.i1252
  %2576 = add i8 1, %2572
  store i8 %2576, i8* %CL.i1253, align 1
  %2577 = icmp ult i8 %2576, %2572
  %2578 = icmp ult i8 %2576, 1
  %2579 = or i1 %2577, %2578
  %2580 = zext i1 %2579 to i8
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2580, i8* %2581, align 1
  %2582 = zext i8 %2576 to i32
  %2583 = call i32 @llvm.ctpop.i32(i32 %2582)
  %2584 = trunc i32 %2583 to i8
  %2585 = and i8 %2584, 1
  %2586 = xor i8 %2585, 1
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2586, i8* %2587, align 1
  %2588 = xor i64 1, %2573
  %2589 = trunc i64 %2588 to i8
  %2590 = xor i8 %2589, %2576
  %2591 = lshr i8 %2590, 4
  %2592 = and i8 %2591, 1
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2592, i8* %2593, align 1
  %2594 = icmp eq i8 %2576, 0
  %2595 = zext i1 %2594 to i8
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2595, i8* %2596, align 1
  %2597 = lshr i8 %2576, 7
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2597, i8* %2598, align 1
  %2599 = lshr i8 %2572, 7
  %2600 = xor i8 %2597, %2599
  %2601 = add i8 %2600, %2597
  %2602 = icmp eq i8 %2601, 2
  %2603 = zext i1 %2602 to i8
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2603, i8* %2604, align 1
  store %struct.Memory* %loadMem_43a56c, %struct.Memory** %MEMORY
  %loadMem_43a56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 33
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %2607 to i64*
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 5
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %2611 = bitcast %union.anon* %2610 to %struct.anon.2*
  %CL.i1249 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2611, i32 0, i32 0
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2613 = getelementptr inbounds %struct.GPR, %struct.GPR* %2612, i32 0, i32 1
  %2614 = getelementptr inbounds %struct.Reg, %struct.Reg* %2613, i32 0, i32 0
  %RAX.i1250 = bitcast %union.anon* %2614 to i64*
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 15
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %2617 to i64*
  %2618 = load i64, i64* %RBP.i1251
  %2619 = load i64, i64* %RAX.i1250
  %2620 = add i64 %2618, -224
  %2621 = add i64 %2620, %2619
  %2622 = load i8, i8* %CL.i1249
  %2623 = zext i8 %2622 to i64
  %2624 = load i64, i64* %PC.i1248
  %2625 = add i64 %2624, 7
  store i64 %2625, i64* %PC.i1248
  %2626 = inttoptr i64 %2621 to i8*
  store i8 %2622, i8* %2626
  store %struct.Memory* %loadMem_43a56f, %struct.Memory** %MEMORY
  br label %block_.L_43a576

block_.L_43a576:                                  ; preds = %block_.L_43a561, %block_43a54c
  %loadMem_43a576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2628 = getelementptr inbounds %struct.GPR, %struct.GPR* %2627, i32 0, i32 33
  %2629 = getelementptr inbounds %struct.Reg, %struct.Reg* %2628, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %2629 to i64*
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2631 = getelementptr inbounds %struct.GPR, %struct.GPR* %2630, i32 0, i32 15
  %2632 = getelementptr inbounds %struct.Reg, %struct.Reg* %2631, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %2632 to i64*
  %2633 = load i64, i64* %RBP.i1247
  %2634 = sub i64 %2633, 64
  %2635 = load i64, i64* %PC.i1246
  %2636 = add i64 %2635, 4
  store i64 %2636, i64* %PC.i1246
  %2637 = inttoptr i64 %2634 to i32*
  %2638 = load i32, i32* %2637
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2639, align 1
  %2640 = and i32 %2638, 255
  %2641 = call i32 @llvm.ctpop.i32(i32 %2640)
  %2642 = trunc i32 %2641 to i8
  %2643 = and i8 %2642, 1
  %2644 = xor i8 %2643, 1
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2644, i8* %2645, align 1
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2646, align 1
  %2647 = icmp eq i32 %2638, 0
  %2648 = zext i1 %2647 to i8
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2648, i8* %2649, align 1
  %2650 = lshr i32 %2638, 31
  %2651 = trunc i32 %2650 to i8
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2651, i8* %2652, align 1
  %2653 = lshr i32 %2638, 31
  %2654 = xor i32 %2650, %2653
  %2655 = add i32 %2654, %2653
  %2656 = icmp eq i32 %2655, 2
  %2657 = zext i1 %2656 to i8
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2657, i8* %2658, align 1
  store %struct.Memory* %loadMem_43a576, %struct.Memory** %MEMORY
  %loadMem_43a57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 33
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %2661 to i64*
  %2662 = load i64, i64* %PC.i1245
  %2663 = add i64 %2662, 27
  %2664 = load i64, i64* %PC.i1245
  %2665 = add i64 %2664, 6
  %2666 = load i64, i64* %PC.i1245
  %2667 = add i64 %2666, 6
  store i64 %2667, i64* %PC.i1245
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2669 = load i8, i8* %2668, align 1
  store i8 %2669, i8* %BRANCH_TAKEN, align 1
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2671 = icmp ne i8 %2669, 0
  %2672 = select i1 %2671, i64 %2663, i64 %2665
  store i64 %2672, i64* %2670, align 8
  store %struct.Memory* %loadMem_43a57a, %struct.Memory** %MEMORY
  %loadBr_43a57a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a57a = icmp eq i8 %loadBr_43a57a, 1
  br i1 %cmpBr_43a57a, label %block_.L_43a595, label %block_43a580

block_43a580:                                     ; preds = %block_.L_43a576
  %loadMem_43a580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 33
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %2675 to i64*
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2677 = getelementptr inbounds %struct.GPR, %struct.GPR* %2676, i32 0, i32 1
  %2678 = getelementptr inbounds %struct.Reg, %struct.Reg* %2677, i32 0, i32 0
  %RAX.i1243 = bitcast %union.anon* %2678 to i64*
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 15
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %2681 to i64*
  %2682 = load i64, i64* %RBP.i1244
  %2683 = sub i64 %2682, 64
  %2684 = load i64, i64* %PC.i1242
  %2685 = add i64 %2684, 3
  store i64 %2685, i64* %PC.i1242
  %2686 = inttoptr i64 %2683 to i32*
  %2687 = load i32, i32* %2686
  %2688 = zext i32 %2687 to i64
  store i64 %2688, i64* %RAX.i1243, align 8
  store %struct.Memory* %loadMem_43a580, %struct.Memory** %MEMORY
  %loadMem_43a583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2690 = getelementptr inbounds %struct.GPR, %struct.GPR* %2689, i32 0, i32 33
  %2691 = getelementptr inbounds %struct.Reg, %struct.Reg* %2690, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %2691 to i64*
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2693 = getelementptr inbounds %struct.GPR, %struct.GPR* %2692, i32 0, i32 5
  %2694 = getelementptr inbounds %struct.Reg, %struct.Reg* %2693, i32 0, i32 0
  %RCX.i1241 = bitcast %union.anon* %2694 to i64*
  %2695 = load i64, i64* %PC.i1240
  %2696 = add i64 %2695, 7
  store i64 %2696, i64* %PC.i1240
  %2697 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %2698 = zext i32 %2697 to i64
  store i64 %2698, i64* %RCX.i1241, align 8
  store %struct.Memory* %loadMem_43a583, %struct.Memory** %MEMORY
  %loadMem_43a58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %2701 to i64*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 5
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %RCX.i1239 = bitcast %union.anon* %2704 to i64*
  %2705 = load i64, i64* %RCX.i1239
  %2706 = load i64, i64* %PC.i1238
  %2707 = add i64 %2706, 3
  store i64 %2707, i64* %PC.i1238
  %2708 = trunc i64 %2705 to i32
  %2709 = sub i32 %2708, 1
  %2710 = zext i32 %2709 to i64
  store i64 %2710, i64* %RCX.i1239, align 8
  %2711 = icmp ult i32 %2708, 1
  %2712 = zext i1 %2711 to i8
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2712, i8* %2713, align 1
  %2714 = and i32 %2709, 255
  %2715 = call i32 @llvm.ctpop.i32(i32 %2714)
  %2716 = trunc i32 %2715 to i8
  %2717 = and i8 %2716, 1
  %2718 = xor i8 %2717, 1
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2718, i8* %2719, align 1
  %2720 = xor i64 1, %2705
  %2721 = trunc i64 %2720 to i32
  %2722 = xor i32 %2721, %2709
  %2723 = lshr i32 %2722, 4
  %2724 = trunc i32 %2723 to i8
  %2725 = and i8 %2724, 1
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2725, i8* %2726, align 1
  %2727 = icmp eq i32 %2709, 0
  %2728 = zext i1 %2727 to i8
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2728, i8* %2729, align 1
  %2730 = lshr i32 %2709, 31
  %2731 = trunc i32 %2730 to i8
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2731, i8* %2732, align 1
  %2733 = lshr i32 %2708, 31
  %2734 = xor i32 %2730, %2733
  %2735 = add i32 %2734, %2733
  %2736 = icmp eq i32 %2735, 2
  %2737 = zext i1 %2736 to i8
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2737, i8* %2738, align 1
  store %struct.Memory* %loadMem_43a58a, %struct.Memory** %MEMORY
  %loadMem_43a58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 33
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %2741 to i64*
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2743 = getelementptr inbounds %struct.GPR, %struct.GPR* %2742, i32 0, i32 1
  %2744 = getelementptr inbounds %struct.Reg, %struct.Reg* %2743, i32 0, i32 0
  %EAX.i1236 = bitcast %union.anon* %2744 to i32*
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2746 = getelementptr inbounds %struct.GPR, %struct.GPR* %2745, i32 0, i32 5
  %2747 = getelementptr inbounds %struct.Reg, %struct.Reg* %2746, i32 0, i32 0
  %ECX.i1237 = bitcast %union.anon* %2747 to i32*
  %2748 = load i32, i32* %EAX.i1236
  %2749 = zext i32 %2748 to i64
  %2750 = load i32, i32* %ECX.i1237
  %2751 = zext i32 %2750 to i64
  %2752 = load i64, i64* %PC.i1235
  %2753 = add i64 %2752, 2
  store i64 %2753, i64* %PC.i1235
  %2754 = sub i32 %2748, %2750
  %2755 = icmp ult i32 %2748, %2750
  %2756 = zext i1 %2755 to i8
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2756, i8* %2757, align 1
  %2758 = and i32 %2754, 255
  %2759 = call i32 @llvm.ctpop.i32(i32 %2758)
  %2760 = trunc i32 %2759 to i8
  %2761 = and i8 %2760, 1
  %2762 = xor i8 %2761, 1
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2762, i8* %2763, align 1
  %2764 = xor i64 %2751, %2749
  %2765 = trunc i64 %2764 to i32
  %2766 = xor i32 %2765, %2754
  %2767 = lshr i32 %2766, 4
  %2768 = trunc i32 %2767 to i8
  %2769 = and i8 %2768, 1
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2769, i8* %2770, align 1
  %2771 = icmp eq i32 %2754, 0
  %2772 = zext i1 %2771 to i8
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2772, i8* %2773, align 1
  %2774 = lshr i32 %2754, 31
  %2775 = trunc i32 %2774 to i8
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2775, i8* %2776, align 1
  %2777 = lshr i32 %2748, 31
  %2778 = lshr i32 %2750, 31
  %2779 = xor i32 %2778, %2777
  %2780 = xor i32 %2774, %2777
  %2781 = add i32 %2780, %2779
  %2782 = icmp eq i32 %2781, 2
  %2783 = zext i1 %2782 to i8
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2783, i8* %2784, align 1
  store %struct.Memory* %loadMem_43a58d, %struct.Memory** %MEMORY
  %loadMem_43a58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 33
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %2787 to i64*
  %2788 = load i64, i64* %PC.i1234
  %2789 = add i64 %2788, 27
  %2790 = load i64, i64* %PC.i1234
  %2791 = add i64 %2790, 6
  %2792 = load i64, i64* %PC.i1234
  %2793 = add i64 %2792, 6
  store i64 %2793, i64* %PC.i1234
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2795 = load i8, i8* %2794, align 1
  %2796 = icmp eq i8 %2795, 0
  %2797 = zext i1 %2796 to i8
  store i8 %2797, i8* %BRANCH_TAKEN, align 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2799 = select i1 %2796, i64 %2789, i64 %2791
  store i64 %2799, i64* %2798, align 8
  store %struct.Memory* %loadMem_43a58f, %struct.Memory** %MEMORY
  %loadBr_43a58f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a58f = icmp eq i8 %loadBr_43a58f, 1
  br i1 %cmpBr_43a58f, label %block_.L_43a5aa, label %block_.L_43a595

block_.L_43a595:                                  ; preds = %block_43a580, %block_.L_43a576
  %loadMem_43a595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 33
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %2802 to i64*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 1
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RAX.i1232 = bitcast %union.anon* %2805 to i64*
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2807 = getelementptr inbounds %struct.GPR, %struct.GPR* %2806, i32 0, i32 15
  %2808 = getelementptr inbounds %struct.Reg, %struct.Reg* %2807, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %2808 to i64*
  %2809 = load i64, i64* %RBP.i1233
  %2810 = sub i64 %2809, 72
  %2811 = load i64, i64* %PC.i1231
  %2812 = add i64 %2811, 4
  store i64 %2812, i64* %PC.i1231
  %2813 = inttoptr i64 %2810 to i32*
  %2814 = load i32, i32* %2813
  %2815 = sext i32 %2814 to i64
  store i64 %2815, i64* %RAX.i1232, align 8
  store %struct.Memory* %loadMem_43a595, %struct.Memory** %MEMORY
  %loadMem_43a599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 33
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 5
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %2822 = bitcast %union.anon* %2821 to %struct.anon.2*
  %CL.i1228 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2822, i32 0, i32 0
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 1
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %2825 to i64*
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 15
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %2828 to i64*
  %2829 = load i64, i64* %RBP.i1230
  %2830 = load i64, i64* %RAX.i1229
  %2831 = add i64 %2829, -224
  %2832 = add i64 %2831, %2830
  %2833 = load i64, i64* %PC.i1227
  %2834 = add i64 %2833, 7
  store i64 %2834, i64* %PC.i1227
  %2835 = inttoptr i64 %2832 to i8*
  %2836 = load i8, i8* %2835
  store i8 %2836, i8* %CL.i1228, align 1
  store %struct.Memory* %loadMem_43a599, %struct.Memory** %MEMORY
  %loadMem_43a5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 33
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %2839 to i64*
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 5
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %2843 = bitcast %union.anon* %2842 to %struct.anon.2*
  %CL.i1226 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2843, i32 0, i32 0
  %2844 = load i8, i8* %CL.i1226
  %2845 = zext i8 %2844 to i64
  %2846 = load i64, i64* %PC.i1225
  %2847 = add i64 %2846, 3
  store i64 %2847, i64* %PC.i1225
  %2848 = add i8 1, %2844
  store i8 %2848, i8* %CL.i1226, align 1
  %2849 = icmp ult i8 %2848, %2844
  %2850 = icmp ult i8 %2848, 1
  %2851 = or i1 %2849, %2850
  %2852 = zext i1 %2851 to i8
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2852, i8* %2853, align 1
  %2854 = zext i8 %2848 to i32
  %2855 = call i32 @llvm.ctpop.i32(i32 %2854)
  %2856 = trunc i32 %2855 to i8
  %2857 = and i8 %2856, 1
  %2858 = xor i8 %2857, 1
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2858, i8* %2859, align 1
  %2860 = xor i64 1, %2845
  %2861 = trunc i64 %2860 to i8
  %2862 = xor i8 %2861, %2848
  %2863 = lshr i8 %2862, 4
  %2864 = and i8 %2863, 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2864, i8* %2865, align 1
  %2866 = icmp eq i8 %2848, 0
  %2867 = zext i1 %2866 to i8
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2867, i8* %2868, align 1
  %2869 = lshr i8 %2848, 7
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2869, i8* %2870, align 1
  %2871 = lshr i8 %2844, 7
  %2872 = xor i8 %2869, %2871
  %2873 = add i8 %2872, %2869
  %2874 = icmp eq i8 %2873, 2
  %2875 = zext i1 %2874 to i8
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2875, i8* %2876, align 1
  store %struct.Memory* %loadMem_43a5a0, %struct.Memory** %MEMORY
  %loadMem_43a5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2878 = getelementptr inbounds %struct.GPR, %struct.GPR* %2877, i32 0, i32 33
  %2879 = getelementptr inbounds %struct.Reg, %struct.Reg* %2878, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %2879 to i64*
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2881 = getelementptr inbounds %struct.GPR, %struct.GPR* %2880, i32 0, i32 5
  %2882 = getelementptr inbounds %struct.Reg, %struct.Reg* %2881, i32 0, i32 0
  %2883 = bitcast %union.anon* %2882 to %struct.anon.2*
  %CL.i1222 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2883, i32 0, i32 0
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 1
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %2886 to i64*
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2888 = getelementptr inbounds %struct.GPR, %struct.GPR* %2887, i32 0, i32 15
  %2889 = getelementptr inbounds %struct.Reg, %struct.Reg* %2888, i32 0, i32 0
  %RBP.i1224 = bitcast %union.anon* %2889 to i64*
  %2890 = load i64, i64* %RBP.i1224
  %2891 = load i64, i64* %RAX.i1223
  %2892 = add i64 %2890, -224
  %2893 = add i64 %2892, %2891
  %2894 = load i8, i8* %CL.i1222
  %2895 = zext i8 %2894 to i64
  %2896 = load i64, i64* %PC.i1221
  %2897 = add i64 %2896, 7
  store i64 %2897, i64* %PC.i1221
  %2898 = inttoptr i64 %2893 to i8*
  store i8 %2894, i8* %2898
  store %struct.Memory* %loadMem_43a5a3, %struct.Memory** %MEMORY
  br label %block_.L_43a5aa

block_.L_43a5aa:                                  ; preds = %block_.L_43a595, %block_43a580
  %loadMem_43a5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 11
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RDI.i1219 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 15
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RBP.i1220 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %RBP.i1220
  %2909 = sub i64 %2908, 48
  %2910 = load i64, i64* %PC.i1218
  %2911 = add i64 %2910, 4
  store i64 %2911, i64* %PC.i1218
  %2912 = inttoptr i64 %2909 to i64*
  %2913 = load i64, i64* %2912
  store i64 %2913, i64* %RDI.i1219, align 8
  store %struct.Memory* %loadMem_43a5aa, %struct.Memory** %MEMORY
  %loadMem_43a5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 9
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RSI.i1216 = bitcast %union.anon* %2919 to i64*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 15
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %RBP.i1217 = bitcast %union.anon* %2922 to i64*
  %2923 = load i64, i64* %RBP.i1217
  %2924 = sub i64 %2923, 356
  %2925 = load i64, i64* %PC.i1215
  %2926 = add i64 %2925, 6
  store i64 %2926, i64* %PC.i1215
  %2927 = inttoptr i64 %2924 to i32*
  %2928 = load i32, i32* %2927
  %2929 = zext i32 %2928 to i64
  store i64 %2929, i64* %RSI.i1216, align 8
  store %struct.Memory* %loadMem_43a5ae, %struct.Memory** %MEMORY
  %loadMem1_43a5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2931 = getelementptr inbounds %struct.GPR, %struct.GPR* %2930, i32 0, i32 33
  %2932 = getelementptr inbounds %struct.Reg, %struct.Reg* %2931, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %2932 to i64*
  %2933 = load i64, i64* %PC.i1214
  %2934 = add i64 %2933, 2684
  %2935 = load i64, i64* %PC.i1214
  %2936 = add i64 %2935, 5
  %2937 = load i64, i64* %PC.i1214
  %2938 = add i64 %2937, 5
  store i64 %2938, i64* %PC.i1214
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2940 = load i64, i64* %2939, align 8
  %2941 = add i64 %2940, -8
  %2942 = inttoptr i64 %2941 to i64*
  store i64 %2936, i64* %2942
  store i64 %2941, i64* %2939, align 8
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2934, i64* %2943, align 8
  store %struct.Memory* %loadMem1_43a5b4, %struct.Memory** %MEMORY
  %loadMem2_43a5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a5b4 = load i64, i64* %3
  %call2_43a5b4 = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43a5b4, %struct.Memory* %loadMem2_43a5b4)
  store %struct.Memory* %call2_43a5b4, %struct.Memory** %MEMORY
  %loadMem_43a5b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2945 = getelementptr inbounds %struct.GPR, %struct.GPR* %2944, i32 0, i32 33
  %2946 = getelementptr inbounds %struct.Reg, %struct.Reg* %2945, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %2946 to i64*
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2948 = getelementptr inbounds %struct.GPR, %struct.GPR* %2947, i32 0, i32 1
  %2949 = getelementptr inbounds %struct.Reg, %struct.Reg* %2948, i32 0, i32 0
  %EAX.i1213 = bitcast %union.anon* %2949 to i32*
  %2950 = load i32, i32* %EAX.i1213
  %2951 = zext i32 %2950 to i64
  %2952 = load i64, i64* %PC.i1212
  %2953 = add i64 %2952, 3
  store i64 %2953, i64* %PC.i1212
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2954, align 1
  %2955 = and i32 %2950, 255
  %2956 = call i32 @llvm.ctpop.i32(i32 %2955)
  %2957 = trunc i32 %2956 to i8
  %2958 = and i8 %2957, 1
  %2959 = xor i8 %2958, 1
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2959, i8* %2960, align 1
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2961, align 1
  %2962 = icmp eq i32 %2950, 0
  %2963 = zext i1 %2962 to i8
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2963, i8* %2964, align 1
  %2965 = lshr i32 %2950, 31
  %2966 = trunc i32 %2965 to i8
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2966, i8* %2967, align 1
  %2968 = lshr i32 %2950, 31
  %2969 = xor i32 %2965, %2968
  %2970 = add i32 %2969, %2968
  %2971 = icmp eq i32 %2970, 2
  %2972 = zext i1 %2971 to i8
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2972, i8* %2973, align 1
  store %struct.Memory* %loadMem_43a5b9, %struct.Memory** %MEMORY
  %loadMem_43a5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 33
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %2976 to i64*
  %2977 = load i64, i64* %PC.i1211
  %2978 = add i64 %2977, 96
  %2979 = load i64, i64* %PC.i1211
  %2980 = add i64 %2979, 6
  %2981 = load i64, i64* %PC.i1211
  %2982 = add i64 %2981, 6
  store i64 %2982, i64* %PC.i1211
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2984 = load i8, i8* %2983, align 1
  store i8 %2984, i8* %BRANCH_TAKEN, align 1
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2986 = icmp ne i8 %2984, 0
  %2987 = select i1 %2986, i64 %2978, i64 %2980
  store i64 %2987, i64* %2985, align 8
  store %struct.Memory* %loadMem_43a5bc, %struct.Memory** %MEMORY
  %loadBr_43a5bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5bc = icmp eq i8 %loadBr_43a5bc, 1
  br i1 %cmpBr_43a5bc, label %block_.L_43a61c, label %block_43a5c2

block_43a5c2:                                     ; preds = %block_.L_43a5aa
  %loadMem_43a5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2989 = getelementptr inbounds %struct.GPR, %struct.GPR* %2988, i32 0, i32 33
  %2990 = getelementptr inbounds %struct.Reg, %struct.Reg* %2989, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %2990 to i64*
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 1
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %2993 to i64*
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 15
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %2996 to i64*
  %2997 = load i64, i64* %RBP.i1210
  %2998 = sub i64 %2997, 72
  %2999 = load i64, i64* %PC.i1208
  %3000 = add i64 %2999, 4
  store i64 %3000, i64* %PC.i1208
  %3001 = inttoptr i64 %2998 to i32*
  %3002 = load i32, i32* %3001
  %3003 = sext i32 %3002 to i64
  store i64 %3003, i64* %RAX.i1209, align 8
  store %struct.Memory* %loadMem_43a5c2, %struct.Memory** %MEMORY
  %loadMem_43a5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3005 = getelementptr inbounds %struct.GPR, %struct.GPR* %3004, i32 0, i32 33
  %3006 = getelementptr inbounds %struct.Reg, %struct.Reg* %3005, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %3006 to i64*
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3008 = getelementptr inbounds %struct.GPR, %struct.GPR* %3007, i32 0, i32 5
  %3009 = getelementptr inbounds %struct.Reg, %struct.Reg* %3008, i32 0, i32 0
  %3010 = bitcast %union.anon* %3009 to %struct.anon.2*
  %CL.i1205 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3010, i32 0, i32 0
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 1
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %RAX.i1206 = bitcast %union.anon* %3013 to i64*
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 15
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %3016 to i64*
  %3017 = load i64, i64* %RBP.i1207
  %3018 = load i64, i64* %RAX.i1206
  %3019 = add i64 %3017, -256
  %3020 = add i64 %3019, %3018
  %3021 = load i64, i64* %PC.i1204
  %3022 = add i64 %3021, 7
  store i64 %3022, i64* %PC.i1204
  %3023 = inttoptr i64 %3020 to i8*
  %3024 = load i8, i8* %3023
  store i8 %3024, i8* %CL.i1205, align 1
  store %struct.Memory* %loadMem_43a5c6, %struct.Memory** %MEMORY
  %loadMem_43a5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 33
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %3027 to i64*
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3029 = getelementptr inbounds %struct.GPR, %struct.GPR* %3028, i32 0, i32 5
  %3030 = getelementptr inbounds %struct.Reg, %struct.Reg* %3029, i32 0, i32 0
  %3031 = bitcast %union.anon* %3030 to %struct.anon.2*
  %CL.i1203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3031, i32 0, i32 0
  %3032 = load i8, i8* %CL.i1203
  %3033 = zext i8 %3032 to i64
  %3034 = load i64, i64* %PC.i1202
  %3035 = add i64 %3034, 3
  store i64 %3035, i64* %PC.i1202
  %3036 = add i8 1, %3032
  store i8 %3036, i8* %CL.i1203, align 1
  %3037 = icmp ult i8 %3036, %3032
  %3038 = icmp ult i8 %3036, 1
  %3039 = or i1 %3037, %3038
  %3040 = zext i1 %3039 to i8
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3040, i8* %3041, align 1
  %3042 = zext i8 %3036 to i32
  %3043 = call i32 @llvm.ctpop.i32(i32 %3042)
  %3044 = trunc i32 %3043 to i8
  %3045 = and i8 %3044, 1
  %3046 = xor i8 %3045, 1
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3046, i8* %3047, align 1
  %3048 = xor i64 1, %3033
  %3049 = trunc i64 %3048 to i8
  %3050 = xor i8 %3049, %3036
  %3051 = lshr i8 %3050, 4
  %3052 = and i8 %3051, 1
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3052, i8* %3053, align 1
  %3054 = icmp eq i8 %3036, 0
  %3055 = zext i1 %3054 to i8
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3055, i8* %3056, align 1
  %3057 = lshr i8 %3036, 7
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3057, i8* %3058, align 1
  %3059 = lshr i8 %3032, 7
  %3060 = xor i8 %3057, %3059
  %3061 = add i8 %3060, %3057
  %3062 = icmp eq i8 %3061, 2
  %3063 = zext i1 %3062 to i8
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3063, i8* %3064, align 1
  store %struct.Memory* %loadMem_43a5cd, %struct.Memory** %MEMORY
  %loadMem_43a5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 33
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %3067 to i64*
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 5
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %3071 = bitcast %union.anon* %3070 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3071, i32 0, i32 0
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 1
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %RAX.i1200 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 15
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %3077 to i64*
  %3078 = load i64, i64* %RBP.i1201
  %3079 = load i64, i64* %RAX.i1200
  %3080 = add i64 %3078, -256
  %3081 = add i64 %3080, %3079
  %3082 = load i8, i8* %CL.i
  %3083 = zext i8 %3082 to i64
  %3084 = load i64, i64* %PC.i1199
  %3085 = add i64 %3084, 7
  store i64 %3085, i64* %PC.i1199
  %3086 = inttoptr i64 %3081 to i8*
  store i8 %3082, i8* %3086
  store %struct.Memory* %loadMem_43a5d0, %struct.Memory** %MEMORY
  %loadMem_43a5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3088 = getelementptr inbounds %struct.GPR, %struct.GPR* %3087, i32 0, i32 33
  %3089 = getelementptr inbounds %struct.Reg, %struct.Reg* %3088, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %3089 to i64*
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3091 = getelementptr inbounds %struct.GPR, %struct.GPR* %3090, i32 0, i32 7
  %3092 = getelementptr inbounds %struct.Reg, %struct.Reg* %3091, i32 0, i32 0
  %RDX.i1197 = bitcast %union.anon* %3092 to i64*
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 15
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %3095 to i64*
  %3096 = load i64, i64* %RBP.i1198
  %3097 = sub i64 %3096, 72
  %3098 = load i64, i64* %PC.i1196
  %3099 = add i64 %3098, 3
  store i64 %3099, i64* %PC.i1196
  %3100 = inttoptr i64 %3097 to i32*
  %3101 = load i32, i32* %3100
  %3102 = zext i32 %3101 to i64
  store i64 %3102, i64* %RDX.i1197, align 8
  store %struct.Memory* %loadMem_43a5d7, %struct.Memory** %MEMORY
  %loadMem_43a5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3104 = getelementptr inbounds %struct.GPR, %struct.GPR* %3103, i32 0, i32 33
  %3105 = getelementptr inbounds %struct.Reg, %struct.Reg* %3104, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %3105 to i64*
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 7
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %RDX.i1195 = bitcast %union.anon* %3108 to i64*
  %3109 = load i64, i64* %RDX.i1195
  %3110 = load i64, i64* %PC.i1194
  %3111 = add i64 %3110, 3
  store i64 %3111, i64* %PC.i1194
  %3112 = trunc i64 %3109 to i32
  %3113 = add i32 1, %3112
  %3114 = zext i32 %3113 to i64
  store i64 %3114, i64* %RDX.i1195, align 8
  %3115 = icmp ult i32 %3113, %3112
  %3116 = icmp ult i32 %3113, 1
  %3117 = or i1 %3115, %3116
  %3118 = zext i1 %3117 to i8
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3118, i8* %3119, align 1
  %3120 = and i32 %3113, 255
  %3121 = call i32 @llvm.ctpop.i32(i32 %3120)
  %3122 = trunc i32 %3121 to i8
  %3123 = and i8 %3122, 1
  %3124 = xor i8 %3123, 1
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3124, i8* %3125, align 1
  %3126 = xor i64 1, %3109
  %3127 = trunc i64 %3126 to i32
  %3128 = xor i32 %3127, %3113
  %3129 = lshr i32 %3128, 4
  %3130 = trunc i32 %3129 to i8
  %3131 = and i8 %3130, 1
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3131, i8* %3132, align 1
  %3133 = icmp eq i32 %3113, 0
  %3134 = zext i1 %3133 to i8
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3134, i8* %3135, align 1
  %3136 = lshr i32 %3113, 31
  %3137 = trunc i32 %3136 to i8
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3137, i8* %3138, align 1
  %3139 = lshr i32 %3112, 31
  %3140 = xor i32 %3136, %3139
  %3141 = add i32 %3140, %3136
  %3142 = icmp eq i32 %3141, 2
  %3143 = zext i1 %3142 to i8
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3143, i8* %3144, align 1
  store %struct.Memory* %loadMem_43a5da, %struct.Memory** %MEMORY
  %loadMem_43a5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3146 = getelementptr inbounds %struct.GPR, %struct.GPR* %3145, i32 0, i32 33
  %3147 = getelementptr inbounds %struct.Reg, %struct.Reg* %3146, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %3147 to i64*
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 7
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %EDX.i1192 = bitcast %union.anon* %3150 to i32*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 15
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %3153 to i64*
  %3154 = load i64, i64* %RBP.i1193
  %3155 = sub i64 %3154, 72
  %3156 = load i32, i32* %EDX.i1192
  %3157 = zext i32 %3156 to i64
  %3158 = load i64, i64* %PC.i1191
  %3159 = add i64 %3158, 3
  store i64 %3159, i64* %PC.i1191
  %3160 = inttoptr i64 %3155 to i32*
  store i32 %3156, i32* %3160
  store %struct.Memory* %loadMem_43a5dd, %struct.Memory** %MEMORY
  %loadMem_43a5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 33
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %3163 to i64*
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3165 = getelementptr inbounds %struct.GPR, %struct.GPR* %3164, i32 0, i32 1
  %3166 = getelementptr inbounds %struct.Reg, %struct.Reg* %3165, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %3166 to i64*
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3168 = getelementptr inbounds %struct.GPR, %struct.GPR* %3167, i32 0, i32 15
  %3169 = getelementptr inbounds %struct.Reg, %struct.Reg* %3168, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %3169 to i64*
  %3170 = load i64, i64* %RBP.i1190
  %3171 = sub i64 %3170, 72
  %3172 = load i64, i64* %PC.i1188
  %3173 = add i64 %3172, 4
  store i64 %3173, i64* %PC.i1188
  %3174 = inttoptr i64 %3171 to i32*
  %3175 = load i32, i32* %3174
  %3176 = sext i32 %3175 to i64
  store i64 %3176, i64* %RAX.i1189, align 8
  store %struct.Memory* %loadMem_43a5e0, %struct.Memory** %MEMORY
  %loadMem_43a5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 33
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %3179 to i64*
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3181 = getelementptr inbounds %struct.GPR, %struct.GPR* %3180, i32 0, i32 1
  %3182 = getelementptr inbounds %struct.Reg, %struct.Reg* %3181, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %3182 to i64*
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3184 = getelementptr inbounds %struct.GPR, %struct.GPR* %3183, i32 0, i32 15
  %3185 = getelementptr inbounds %struct.Reg, %struct.Reg* %3184, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %3185 to i64*
  %3186 = load i64, i64* %RBP.i1187
  %3187 = load i64, i64* %RAX.i1186
  %3188 = mul i64 %3187, 4
  %3189 = add i64 %3186, -160
  %3190 = add i64 %3189, %3188
  %3191 = load i64, i64* %PC.i1185
  %3192 = add i64 %3191, 11
  store i64 %3192, i64* %PC.i1185
  %3193 = inttoptr i64 %3190 to i32*
  store i32 0, i32* %3193
  store %struct.Memory* %loadMem_43a5e4, %struct.Memory** %MEMORY
  %loadMem_43a5ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 33
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %3196 to i64*
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3198 = getelementptr inbounds %struct.GPR, %struct.GPR* %3197, i32 0, i32 1
  %3199 = getelementptr inbounds %struct.Reg, %struct.Reg* %3198, i32 0, i32 0
  %RAX.i1183 = bitcast %union.anon* %3199 to i64*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 15
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %3202 to i64*
  %3203 = load i64, i64* %RBP.i1184
  %3204 = sub i64 %3203, 72
  %3205 = load i64, i64* %PC.i1182
  %3206 = add i64 %3205, 4
  store i64 %3206, i64* %PC.i1182
  %3207 = inttoptr i64 %3204 to i32*
  %3208 = load i32, i32* %3207
  %3209 = sext i32 %3208 to i64
  store i64 %3209, i64* %RAX.i1183, align 8
  store %struct.Memory* %loadMem_43a5ef, %struct.Memory** %MEMORY
  %loadMem_43a5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3211 = getelementptr inbounds %struct.GPR, %struct.GPR* %3210, i32 0, i32 33
  %3212 = getelementptr inbounds %struct.Reg, %struct.Reg* %3211, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %3212 to i64*
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3214 = getelementptr inbounds %struct.GPR, %struct.GPR* %3213, i32 0, i32 1
  %3215 = getelementptr inbounds %struct.Reg, %struct.Reg* %3214, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %3215 to i64*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3217 = getelementptr inbounds %struct.GPR, %struct.GPR* %3216, i32 0, i32 15
  %3218 = getelementptr inbounds %struct.Reg, %struct.Reg* %3217, i32 0, i32 0
  %RBP.i1181 = bitcast %union.anon* %3218 to i64*
  %3219 = load i64, i64* %RBP.i1181
  %3220 = load i64, i64* %RAX.i1180
  %3221 = add i64 %3219, -192
  %3222 = add i64 %3221, %3220
  %3223 = load i64, i64* %PC.i1179
  %3224 = add i64 %3223, 8
  store i64 %3224, i64* %PC.i1179
  %3225 = inttoptr i64 %3222 to i8*
  store i8 1, i8* %3225
  store %struct.Memory* %loadMem_43a5f3, %struct.Memory** %MEMORY
  %loadMem_43a5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3227 = getelementptr inbounds %struct.GPR, %struct.GPR* %3226, i32 0, i32 33
  %3228 = getelementptr inbounds %struct.Reg, %struct.Reg* %3227, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %3228 to i64*
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 7
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %RDX.i1177 = bitcast %union.anon* %3231 to i64*
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3233 = getelementptr inbounds %struct.GPR, %struct.GPR* %3232, i32 0, i32 15
  %3234 = getelementptr inbounds %struct.Reg, %struct.Reg* %3233, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %3234 to i64*
  %3235 = load i64, i64* %RBP.i1178
  %3236 = sub i64 %3235, 76
  %3237 = load i64, i64* %PC.i1176
  %3238 = add i64 %3237, 3
  store i64 %3238, i64* %PC.i1176
  %3239 = inttoptr i64 %3236 to i32*
  %3240 = load i32, i32* %3239
  %3241 = zext i32 %3240 to i64
  store i64 %3241, i64* %RDX.i1177, align 8
  store %struct.Memory* %loadMem_43a5fb, %struct.Memory** %MEMORY
  %loadMem_43a5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3243 = getelementptr inbounds %struct.GPR, %struct.GPR* %3242, i32 0, i32 33
  %3244 = getelementptr inbounds %struct.Reg, %struct.Reg* %3243, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %3244 to i64*
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3246 = getelementptr inbounds %struct.GPR, %struct.GPR* %3245, i32 0, i32 7
  %3247 = getelementptr inbounds %struct.Reg, %struct.Reg* %3246, i32 0, i32 0
  %RDX.i1175 = bitcast %union.anon* %3247 to i64*
  %3248 = load i64, i64* %RDX.i1175
  %3249 = load i64, i64* %PC.i1174
  %3250 = add i64 %3249, 3
  store i64 %3250, i64* %PC.i1174
  %3251 = trunc i64 %3248 to i32
  %3252 = add i32 1, %3251
  %3253 = zext i32 %3252 to i64
  store i64 %3253, i64* %RDX.i1175, align 8
  %3254 = icmp ult i32 %3252, %3251
  %3255 = icmp ult i32 %3252, 1
  %3256 = or i1 %3254, %3255
  %3257 = zext i1 %3256 to i8
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3257, i8* %3258, align 1
  %3259 = and i32 %3252, 255
  %3260 = call i32 @llvm.ctpop.i32(i32 %3259)
  %3261 = trunc i32 %3260 to i8
  %3262 = and i8 %3261, 1
  %3263 = xor i8 %3262, 1
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3263, i8* %3264, align 1
  %3265 = xor i64 1, %3248
  %3266 = trunc i64 %3265 to i32
  %3267 = xor i32 %3266, %3252
  %3268 = lshr i32 %3267, 4
  %3269 = trunc i32 %3268 to i8
  %3270 = and i8 %3269, 1
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3270, i8* %3271, align 1
  %3272 = icmp eq i32 %3252, 0
  %3273 = zext i1 %3272 to i8
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3273, i8* %3274, align 1
  %3275 = lshr i32 %3252, 31
  %3276 = trunc i32 %3275 to i8
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3276, i8* %3277, align 1
  %3278 = lshr i32 %3251, 31
  %3279 = xor i32 %3275, %3278
  %3280 = add i32 %3279, %3275
  %3281 = icmp eq i32 %3280, 2
  %3282 = zext i1 %3281 to i8
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3282, i8* %3283, align 1
  store %struct.Memory* %loadMem_43a5fe, %struct.Memory** %MEMORY
  %loadMem_43a601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3285 = getelementptr inbounds %struct.GPR, %struct.GPR* %3284, i32 0, i32 33
  %3286 = getelementptr inbounds %struct.Reg, %struct.Reg* %3285, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %3286 to i64*
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 7
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %EDX.i1172 = bitcast %union.anon* %3289 to i32*
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 15
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %3292 to i64*
  %3293 = load i64, i64* %RBP.i1173
  %3294 = sub i64 %3293, 76
  %3295 = load i32, i32* %EDX.i1172
  %3296 = zext i32 %3295 to i64
  %3297 = load i64, i64* %PC.i1171
  %3298 = add i64 %3297, 3
  store i64 %3298, i64* %PC.i1171
  %3299 = inttoptr i64 %3294 to i32*
  store i32 %3295, i32* %3299
  store %struct.Memory* %loadMem_43a601, %struct.Memory** %MEMORY
  %loadMem_43a604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 33
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %3302 to i64*
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 1
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %3305 to i64*
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 15
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %3308 to i64*
  %3309 = load i64, i64* %RBP.i1170
  %3310 = sub i64 %3309, 72
  %3311 = load i64, i64* %PC.i1168
  %3312 = add i64 %3311, 4
  store i64 %3312, i64* %PC.i1168
  %3313 = inttoptr i64 %3310 to i32*
  %3314 = load i32, i32* %3313
  %3315 = sext i32 %3314 to i64
  store i64 %3315, i64* %RAX.i1169, align 8
  store %struct.Memory* %loadMem_43a604, %struct.Memory** %MEMORY
  %loadMem_43a608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3317 = getelementptr inbounds %struct.GPR, %struct.GPR* %3316, i32 0, i32 33
  %3318 = getelementptr inbounds %struct.Reg, %struct.Reg* %3317, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %3318 to i64*
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3320 = getelementptr inbounds %struct.GPR, %struct.GPR* %3319, i32 0, i32 1
  %3321 = getelementptr inbounds %struct.Reg, %struct.Reg* %3320, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %3321 to i64*
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 15
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %3324 to i64*
  %3325 = load i64, i64* %RBP.i1167
  %3326 = load i64, i64* %RAX.i1166
  %3327 = add i64 %3325, -224
  %3328 = add i64 %3327, %3326
  %3329 = load i64, i64* %PC.i1165
  %3330 = add i64 %3329, 8
  store i64 %3330, i64* %PC.i1165
  %3331 = inttoptr i64 %3328 to i8*
  store i8 0, i8* %3331
  store %struct.Memory* %loadMem_43a608, %struct.Memory** %MEMORY
  %loadMem_43a610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3333 = getelementptr inbounds %struct.GPR, %struct.GPR* %3332, i32 0, i32 33
  %3334 = getelementptr inbounds %struct.Reg, %struct.Reg* %3333, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %3334 to i64*
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3336 = getelementptr inbounds %struct.GPR, %struct.GPR* %3335, i32 0, i32 1
  %3337 = getelementptr inbounds %struct.Reg, %struct.Reg* %3336, i32 0, i32 0
  %RAX.i1163 = bitcast %union.anon* %3337 to i64*
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 15
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %3340 to i64*
  %3341 = load i64, i64* %RBP.i1164
  %3342 = sub i64 %3341, 72
  %3343 = load i64, i64* %PC.i1162
  %3344 = add i64 %3343, 4
  store i64 %3344, i64* %PC.i1162
  %3345 = inttoptr i64 %3342 to i32*
  %3346 = load i32, i32* %3345
  %3347 = sext i32 %3346 to i64
  store i64 %3347, i64* %RAX.i1163, align 8
  store %struct.Memory* %loadMem_43a610, %struct.Memory** %MEMORY
  %loadMem_43a614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3349 = getelementptr inbounds %struct.GPR, %struct.GPR* %3348, i32 0, i32 33
  %3350 = getelementptr inbounds %struct.Reg, %struct.Reg* %3349, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %3350 to i64*
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3352 = getelementptr inbounds %struct.GPR, %struct.GPR* %3351, i32 0, i32 1
  %3353 = getelementptr inbounds %struct.Reg, %struct.Reg* %3352, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %3353 to i64*
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 15
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %RBP.i1161 = bitcast %union.anon* %3356 to i64*
  %3357 = load i64, i64* %RBP.i1161
  %3358 = load i64, i64* %RAX.i1160
  %3359 = add i64 %3357, -256
  %3360 = add i64 %3359, %3358
  %3361 = load i64, i64* %PC.i1159
  %3362 = add i64 %3361, 8
  store i64 %3362, i64* %PC.i1159
  %3363 = inttoptr i64 %3360 to i8*
  store i8 1, i8* %3363
  store %struct.Memory* %loadMem_43a614, %struct.Memory** %MEMORY
  br label %block_.L_43a61c

block_.L_43a61c:                                  ; preds = %block_43a5c2, %block_.L_43a5aa
  %loadMem_43a61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 33
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %3366 to i64*
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 1
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %3369 to i64*
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 15
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %3372 to i64*
  %3373 = load i64, i64* %RBP.i1158
  %3374 = sub i64 %3373, 72
  %3375 = load i64, i64* %PC.i1156
  %3376 = add i64 %3375, 3
  store i64 %3376, i64* %PC.i1156
  %3377 = inttoptr i64 %3374 to i32*
  %3378 = load i32, i32* %3377
  %3379 = zext i32 %3378 to i64
  store i64 %3379, i64* %RAX.i1157, align 8
  store %struct.Memory* %loadMem_43a61c, %struct.Memory** %MEMORY
  %loadMem_43a61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 1
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %RAX.i1155 = bitcast %union.anon* %3385 to i64*
  %3386 = load i64, i64* %RAX.i1155
  %3387 = load i64, i64* %PC.i1154
  %3388 = add i64 %3387, 3
  store i64 %3388, i64* %PC.i1154
  %3389 = trunc i64 %3386 to i32
  %3390 = add i32 1, %3389
  %3391 = zext i32 %3390 to i64
  store i64 %3391, i64* %RAX.i1155, align 8
  %3392 = icmp ult i32 %3390, %3389
  %3393 = icmp ult i32 %3390, 1
  %3394 = or i1 %3392, %3393
  %3395 = zext i1 %3394 to i8
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3395, i8* %3396, align 1
  %3397 = and i32 %3390, 255
  %3398 = call i32 @llvm.ctpop.i32(i32 %3397)
  %3399 = trunc i32 %3398 to i8
  %3400 = and i8 %3399, 1
  %3401 = xor i8 %3400, 1
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3401, i8* %3402, align 1
  %3403 = xor i64 1, %3386
  %3404 = trunc i64 %3403 to i32
  %3405 = xor i32 %3404, %3390
  %3406 = lshr i32 %3405, 4
  %3407 = trunc i32 %3406 to i8
  %3408 = and i8 %3407, 1
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3408, i8* %3409, align 1
  %3410 = icmp eq i32 %3390, 0
  %3411 = zext i1 %3410 to i8
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3411, i8* %3412, align 1
  %3413 = lshr i32 %3390, 31
  %3414 = trunc i32 %3413 to i8
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3414, i8* %3415, align 1
  %3416 = lshr i32 %3389, 31
  %3417 = xor i32 %3413, %3416
  %3418 = add i32 %3417, %3413
  %3419 = icmp eq i32 %3418, 2
  %3420 = zext i1 %3419 to i8
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3420, i8* %3421, align 1
  store %struct.Memory* %loadMem_43a61f, %struct.Memory** %MEMORY
  %loadMem_43a622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 33
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %3424 to i64*
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 1
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %EAX.i1152 = bitcast %union.anon* %3427 to i32*
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 15
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %RBP.i1153 = bitcast %union.anon* %3430 to i64*
  %3431 = load i64, i64* %RBP.i1153
  %3432 = sub i64 %3431, 72
  %3433 = load i32, i32* %EAX.i1152
  %3434 = zext i32 %3433 to i64
  %3435 = load i64, i64* %PC.i1151
  %3436 = add i64 %3435, 3
  store i64 %3436, i64* %PC.i1151
  %3437 = inttoptr i64 %3432 to i32*
  store i32 %3433, i32* %3437
  store %struct.Memory* %loadMem_43a622, %struct.Memory** %MEMORY
  br label %block_.L_43a625

block_.L_43a625:                                  ; preds = %block_.L_43a61c, %block_43a49a
  %loadMem_43a625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 33
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %3440 to i64*
  %3441 = load i64, i64* %PC.i1150
  %3442 = add i64 %3441, 5
  %3443 = load i64, i64* %PC.i1150
  %3444 = add i64 %3443, 5
  store i64 %3444, i64* %PC.i1150
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3442, i64* %3445, align 8
  store %struct.Memory* %loadMem_43a625, %struct.Memory** %MEMORY
  br label %block_.L_43a62a

block_.L_43a62a:                                  ; preds = %block_.L_43a625
  %loadMem_43a62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 33
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %3448 to i64*
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 1
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %RAX.i1148 = bitcast %union.anon* %3451 to i64*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 15
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %RBP.i1149 = bitcast %union.anon* %3454 to i64*
  %3455 = load i64, i64* %RBP.i1149
  %3456 = sub i64 %3455, 64
  %3457 = load i64, i64* %PC.i1147
  %3458 = add i64 %3457, 3
  store i64 %3458, i64* %PC.i1147
  %3459 = inttoptr i64 %3456 to i32*
  %3460 = load i32, i32* %3459
  %3461 = zext i32 %3460 to i64
  store i64 %3461, i64* %RAX.i1148, align 8
  store %struct.Memory* %loadMem_43a62a, %struct.Memory** %MEMORY
  %loadMem_43a62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 33
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %3464 to i64*
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3466 = getelementptr inbounds %struct.GPR, %struct.GPR* %3465, i32 0, i32 1
  %3467 = getelementptr inbounds %struct.Reg, %struct.Reg* %3466, i32 0, i32 0
  %RAX.i1146 = bitcast %union.anon* %3467 to i64*
  %3468 = load i64, i64* %RAX.i1146
  %3469 = load i64, i64* %PC.i1145
  %3470 = add i64 %3469, 3
  store i64 %3470, i64* %PC.i1145
  %3471 = trunc i64 %3468 to i32
  %3472 = add i32 1, %3471
  %3473 = zext i32 %3472 to i64
  store i64 %3473, i64* %RAX.i1146, align 8
  %3474 = icmp ult i32 %3472, %3471
  %3475 = icmp ult i32 %3472, 1
  %3476 = or i1 %3474, %3475
  %3477 = zext i1 %3476 to i8
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3477, i8* %3478, align 1
  %3479 = and i32 %3472, 255
  %3480 = call i32 @llvm.ctpop.i32(i32 %3479)
  %3481 = trunc i32 %3480 to i8
  %3482 = and i8 %3481, 1
  %3483 = xor i8 %3482, 1
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3483, i8* %3484, align 1
  %3485 = xor i64 1, %3468
  %3486 = trunc i64 %3485 to i32
  %3487 = xor i32 %3486, %3472
  %3488 = lshr i32 %3487, 4
  %3489 = trunc i32 %3488 to i8
  %3490 = and i8 %3489, 1
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3490, i8* %3491, align 1
  %3492 = icmp eq i32 %3472, 0
  %3493 = zext i1 %3492 to i8
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3493, i8* %3494, align 1
  %3495 = lshr i32 %3472, 31
  %3496 = trunc i32 %3495 to i8
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3496, i8* %3497, align 1
  %3498 = lshr i32 %3471, 31
  %3499 = xor i32 %3495, %3498
  %3500 = add i32 %3499, %3495
  %3501 = icmp eq i32 %3500, 2
  %3502 = zext i1 %3501 to i8
  %3503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3502, i8* %3503, align 1
  store %struct.Memory* %loadMem_43a62d, %struct.Memory** %MEMORY
  %loadMem_43a630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3505 = getelementptr inbounds %struct.GPR, %struct.GPR* %3504, i32 0, i32 33
  %3506 = getelementptr inbounds %struct.Reg, %struct.Reg* %3505, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %3506 to i64*
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3508 = getelementptr inbounds %struct.GPR, %struct.GPR* %3507, i32 0, i32 1
  %3509 = getelementptr inbounds %struct.Reg, %struct.Reg* %3508, i32 0, i32 0
  %EAX.i1143 = bitcast %union.anon* %3509 to i32*
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 15
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %3512 to i64*
  %3513 = load i64, i64* %RBP.i1144
  %3514 = sub i64 %3513, 64
  %3515 = load i32, i32* %EAX.i1143
  %3516 = zext i32 %3515 to i64
  %3517 = load i64, i64* %PC.i1142
  %3518 = add i64 %3517, 3
  store i64 %3518, i64* %PC.i1142
  %3519 = inttoptr i64 %3514 to i32*
  store i32 %3515, i32* %3519
  store %struct.Memory* %loadMem_43a630, %struct.Memory** %MEMORY
  %loadMem_43a633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 33
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %3522 to i64*
  %3523 = load i64, i64* %PC.i1141
  %3524 = add i64 %3523, -425
  %3525 = load i64, i64* %PC.i1141
  %3526 = add i64 %3525, 5
  store i64 %3526, i64* %PC.i1141
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3524, i64* %3527, align 8
  store %struct.Memory* %loadMem_43a633, %struct.Memory** %MEMORY
  br label %block_.L_43a48a

block_.L_43a638:                                  ; preds = %block_.L_43a48a
  %loadMem_43a638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3529 = getelementptr inbounds %struct.GPR, %struct.GPR* %3528, i32 0, i32 33
  %3530 = getelementptr inbounds %struct.Reg, %struct.Reg* %3529, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %3530 to i64*
  %3531 = load i64, i64* %PC.i1140
  %3532 = add i64 %3531, 5
  %3533 = load i64, i64* %PC.i1140
  %3534 = add i64 %3533, 5
  store i64 %3534, i64* %PC.i1140
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3532, i64* %3535, align 8
  store %struct.Memory* %loadMem_43a638, %struct.Memory** %MEMORY
  br label %block_.L_43a63d

block_.L_43a63d:                                  ; preds = %block_.L_43a638
  %loadMem_43a63d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 33
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 1
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RAX.i1138 = bitcast %union.anon* %3541 to i64*
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 15
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %3544 to i64*
  %3545 = load i64, i64* %RBP.i1139
  %3546 = sub i64 %3545, 60
  %3547 = load i64, i64* %PC.i1137
  %3548 = add i64 %3547, 3
  store i64 %3548, i64* %PC.i1137
  %3549 = inttoptr i64 %3546 to i32*
  %3550 = load i32, i32* %3549
  %3551 = zext i32 %3550 to i64
  store i64 %3551, i64* %RAX.i1138, align 8
  store %struct.Memory* %loadMem_43a63d, %struct.Memory** %MEMORY
  %loadMem_43a640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 33
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %3554 to i64*
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3556 = getelementptr inbounds %struct.GPR, %struct.GPR* %3555, i32 0, i32 1
  %3557 = getelementptr inbounds %struct.Reg, %struct.Reg* %3556, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %3557 to i64*
  %3558 = load i64, i64* %RAX.i1136
  %3559 = load i64, i64* %PC.i1135
  %3560 = add i64 %3559, 3
  store i64 %3560, i64* %PC.i1135
  %3561 = trunc i64 %3558 to i32
  %3562 = add i32 1, %3561
  %3563 = zext i32 %3562 to i64
  store i64 %3563, i64* %RAX.i1136, align 8
  %3564 = icmp ult i32 %3562, %3561
  %3565 = icmp ult i32 %3562, 1
  %3566 = or i1 %3564, %3565
  %3567 = zext i1 %3566 to i8
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3567, i8* %3568, align 1
  %3569 = and i32 %3562, 255
  %3570 = call i32 @llvm.ctpop.i32(i32 %3569)
  %3571 = trunc i32 %3570 to i8
  %3572 = and i8 %3571, 1
  %3573 = xor i8 %3572, 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3573, i8* %3574, align 1
  %3575 = xor i64 1, %3558
  %3576 = trunc i64 %3575 to i32
  %3577 = xor i32 %3576, %3562
  %3578 = lshr i32 %3577, 4
  %3579 = trunc i32 %3578 to i8
  %3580 = and i8 %3579, 1
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3580, i8* %3581, align 1
  %3582 = icmp eq i32 %3562, 0
  %3583 = zext i1 %3582 to i8
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3583, i8* %3584, align 1
  %3585 = lshr i32 %3562, 31
  %3586 = trunc i32 %3585 to i8
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3586, i8* %3587, align 1
  %3588 = lshr i32 %3561, 31
  %3589 = xor i32 %3585, %3588
  %3590 = add i32 %3589, %3585
  %3591 = icmp eq i32 %3590, 2
  %3592 = zext i1 %3591 to i8
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3592, i8* %3593, align 1
  store %struct.Memory* %loadMem_43a640, %struct.Memory** %MEMORY
  %loadMem_43a643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 33
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 1
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %EAX.i1133 = bitcast %union.anon* %3599 to i32*
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 15
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %3602 to i64*
  %3603 = load i64, i64* %RBP.i1134
  %3604 = sub i64 %3603, 60
  %3605 = load i32, i32* %EAX.i1133
  %3606 = zext i32 %3605 to i64
  %3607 = load i64, i64* %PC.i1132
  %3608 = add i64 %3607, 3
  store i64 %3608, i64* %PC.i1132
  %3609 = inttoptr i64 %3604 to i32*
  store i32 %3605, i32* %3609
  store %struct.Memory* %loadMem_43a643, %struct.Memory** %MEMORY
  %loadMem_43a646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3611 = getelementptr inbounds %struct.GPR, %struct.GPR* %3610, i32 0, i32 33
  %3612 = getelementptr inbounds %struct.Reg, %struct.Reg* %3611, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %3612 to i64*
  %3613 = load i64, i64* %PC.i1131
  %3614 = add i64 %3613, -467
  %3615 = load i64, i64* %PC.i1131
  %3616 = add i64 %3615, 5
  store i64 %3616, i64* %PC.i1131
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3614, i64* %3617, align 8
  store %struct.Memory* %loadMem_43a646, %struct.Memory** %MEMORY
  br label %block_.L_43a473

block_.L_43a64b:                                  ; preds = %block_.L_43a473
  %loadMem_43a64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 33
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %3620 to i64*
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 15
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %3623 to i64*
  %3624 = load i64, i64* %RBP.i1130
  %3625 = sub i64 %3624, 260
  %3626 = load i64, i64* %PC.i1129
  %3627 = add i64 %3626, 10
  store i64 %3627, i64* %PC.i1129
  %3628 = inttoptr i64 %3625 to i32*
  store i32 0, i32* %3628
  store %struct.Memory* %loadMem_43a64b, %struct.Memory** %MEMORY
  br label %block_.L_43a655

block_.L_43a655:                                  ; preds = %block_.L_43afe5, %block_.L_43a64b
  %loadMem_43a655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 33
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 1
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %3634 to i64*
  %3635 = load i64, i64* %PC.i1127
  %3636 = add i64 %3635, 10
  store i64 %3636, i64* %PC.i1127
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i1128, align 8
  store %struct.Memory* %loadMem_43a655, %struct.Memory** %MEMORY
  %loadMem_43a65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3638 = getelementptr inbounds %struct.GPR, %struct.GPR* %3637, i32 0, i32 33
  %3639 = getelementptr inbounds %struct.Reg, %struct.Reg* %3638, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %3639 to i64*
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 5
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %RCX.i1125 = bitcast %union.anon* %3642 to i64*
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3644 = getelementptr inbounds %struct.GPR, %struct.GPR* %3643, i32 0, i32 15
  %3645 = getelementptr inbounds %struct.Reg, %struct.Reg* %3644, i32 0, i32 0
  %RBP.i1126 = bitcast %union.anon* %3645 to i64*
  %3646 = load i64, i64* %RBP.i1126
  %3647 = sub i64 %3646, 260
  %3648 = load i64, i64* %PC.i1124
  %3649 = add i64 %3648, 7
  store i64 %3649, i64* %PC.i1124
  %3650 = inttoptr i64 %3647 to i32*
  %3651 = load i32, i32* %3650
  %3652 = sext i32 %3651 to i64
  store i64 %3652, i64* %RCX.i1125, align 8
  store %struct.Memory* %loadMem_43a65f, %struct.Memory** %MEMORY
  %loadMem_43a666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 33
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %3655 to i64*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 5
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %RCX.i1123 = bitcast %union.anon* %3658 to i64*
  %3659 = load i64, i64* %RCX.i1123
  %3660 = load i64, i64* %PC.i1122
  %3661 = add i64 %3660, 4
  store i64 %3661, i64* %PC.i1122
  %3662 = sext i64 %3659 to i128
  %3663 = and i128 %3662, -18446744073709551616
  %3664 = zext i64 %3659 to i128
  %3665 = or i128 %3663, %3664
  %3666 = mul i128 40, %3665
  %3667 = trunc i128 %3666 to i64
  store i64 %3667, i64* %RCX.i1123, align 8
  %3668 = sext i64 %3667 to i128
  %3669 = icmp ne i128 %3668, %3666
  %3670 = zext i1 %3669 to i8
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3670, i8* %3671, align 1
  %3672 = trunc i128 %3666 to i32
  %3673 = and i32 %3672, 255
  %3674 = call i32 @llvm.ctpop.i32(i32 %3673)
  %3675 = trunc i32 %3674 to i8
  %3676 = and i8 %3675, 1
  %3677 = xor i8 %3676, 1
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3677, i8* %3678, align 1
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3679, align 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3680, align 1
  %3681 = lshr i64 %3667, 63
  %3682 = trunc i64 %3681 to i8
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3682, i8* %3683, align 1
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3670, i8* %3684, align 1
  store %struct.Memory* %loadMem_43a666, %struct.Memory** %MEMORY
  %loadMem_43a66a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 33
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %3687 to i64*
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 1
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 5
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RCX.i1121 = bitcast %union.anon* %3693 to i64*
  %3694 = load i64, i64* %RAX.i1120
  %3695 = load i64, i64* %RCX.i1121
  %3696 = load i64, i64* %PC.i1119
  %3697 = add i64 %3696, 3
  store i64 %3697, i64* %PC.i1119
  %3698 = add i64 %3695, %3694
  store i64 %3698, i64* %RAX.i1120, align 8
  %3699 = icmp ult i64 %3698, %3694
  %3700 = icmp ult i64 %3698, %3695
  %3701 = or i1 %3699, %3700
  %3702 = zext i1 %3701 to i8
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3702, i8* %3703, align 1
  %3704 = trunc i64 %3698 to i32
  %3705 = and i32 %3704, 255
  %3706 = call i32 @llvm.ctpop.i32(i32 %3705)
  %3707 = trunc i32 %3706 to i8
  %3708 = and i8 %3707, 1
  %3709 = xor i8 %3708, 1
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3709, i8* %3710, align 1
  %3711 = xor i64 %3695, %3694
  %3712 = xor i64 %3711, %3698
  %3713 = lshr i64 %3712, 4
  %3714 = trunc i64 %3713 to i8
  %3715 = and i8 %3714, 1
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3715, i8* %3716, align 1
  %3717 = icmp eq i64 %3698, 0
  %3718 = zext i1 %3717 to i8
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3718, i8* %3719, align 1
  %3720 = lshr i64 %3698, 63
  %3721 = trunc i64 %3720 to i8
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3721, i8* %3722, align 1
  %3723 = lshr i64 %3694, 63
  %3724 = lshr i64 %3695, 63
  %3725 = xor i64 %3720, %3723
  %3726 = xor i64 %3720, %3724
  %3727 = add i64 %3725, %3726
  %3728 = icmp eq i64 %3727, 2
  %3729 = zext i1 %3728 to i8
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3729, i8* %3730, align 1
  store %struct.Memory* %loadMem_43a66a, %struct.Memory** %MEMORY
  %loadMem_43a66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 33
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %3733 to i64*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 1
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %RAX.i1118
  %3738 = load i64, i64* %PC.i1117
  %3739 = add i64 %3738, 4
  store i64 %3739, i64* %PC.i1117
  %3740 = inttoptr i64 %3737 to i64*
  %3741 = load i64, i64* %3740
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3742, align 1
  %3743 = trunc i64 %3741 to i32
  %3744 = and i32 %3743, 255
  %3745 = call i32 @llvm.ctpop.i32(i32 %3744)
  %3746 = trunc i32 %3745 to i8
  %3747 = and i8 %3746, 1
  %3748 = xor i8 %3747, 1
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3748, i8* %3749, align 1
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3750, align 1
  %3751 = icmp eq i64 %3741, 0
  %3752 = zext i1 %3751 to i8
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3752, i8* %3753, align 1
  %3754 = lshr i64 %3741, 63
  %3755 = trunc i64 %3754 to i8
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3755, i8* %3756, align 1
  %3757 = lshr i64 %3741, 63
  %3758 = xor i64 %3754, %3757
  %3759 = add i64 %3758, %3757
  %3760 = icmp eq i64 %3759, 2
  %3761 = zext i1 %3760 to i8
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3761, i8* %3762, align 1
  store %struct.Memory* %loadMem_43a66d, %struct.Memory** %MEMORY
  %loadMem_43a671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 33
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %3765 to i64*
  %3766 = load i64, i64* %PC.i1116
  %3767 = add i64 %3766, 2440
  %3768 = load i64, i64* %PC.i1116
  %3769 = add i64 %3768, 6
  %3770 = load i64, i64* %PC.i1116
  %3771 = add i64 %3770, 6
  store i64 %3771, i64* %PC.i1116
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3773 = load i8, i8* %3772, align 1
  store i8 %3773, i8* %BRANCH_TAKEN, align 1
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3775 = icmp ne i8 %3773, 0
  %3776 = select i1 %3775, i64 %3767, i64 %3769
  store i64 %3776, i64* %3774, align 8
  store %struct.Memory* %loadMem_43a671, %struct.Memory** %MEMORY
  %loadBr_43a671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a671 = icmp eq i8 %loadBr_43a671, 1
  br i1 %cmpBr_43a671, label %block_.L_43aff9, label %block_43a677

block_43a677:                                     ; preds = %block_.L_43a655
  %loadMem_43a677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 33
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %3779 to i64*
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 1
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %RAX.i1115 = bitcast %union.anon* %3782 to i64*
  %3783 = load i64, i64* %PC.i1114
  %3784 = add i64 %3783, 10
  store i64 %3784, i64* %PC.i1114
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i1115, align 8
  store %struct.Memory* %loadMem_43a677, %struct.Memory** %MEMORY
  %loadMem_43a681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3786 = getelementptr inbounds %struct.GPR, %struct.GPR* %3785, i32 0, i32 33
  %3787 = getelementptr inbounds %struct.Reg, %struct.Reg* %3786, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %3787 to i64*
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 5
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %RCX.i1112 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 15
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %3793 to i64*
  %3794 = load i64, i64* %RBP.i1113
  %3795 = sub i64 %3794, 260
  %3796 = load i64, i64* %PC.i1111
  %3797 = add i64 %3796, 7
  store i64 %3797, i64* %PC.i1111
  %3798 = inttoptr i64 %3795 to i32*
  %3799 = load i32, i32* %3798
  %3800 = sext i32 %3799 to i64
  store i64 %3800, i64* %RCX.i1112, align 8
  store %struct.Memory* %loadMem_43a681, %struct.Memory** %MEMORY
  %loadMem_43a688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3802 = getelementptr inbounds %struct.GPR, %struct.GPR* %3801, i32 0, i32 33
  %3803 = getelementptr inbounds %struct.Reg, %struct.Reg* %3802, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %3803 to i64*
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3805 = getelementptr inbounds %struct.GPR, %struct.GPR* %3804, i32 0, i32 5
  %3806 = getelementptr inbounds %struct.Reg, %struct.Reg* %3805, i32 0, i32 0
  %RCX.i1110 = bitcast %union.anon* %3806 to i64*
  %3807 = load i64, i64* %RCX.i1110
  %3808 = load i64, i64* %PC.i1109
  %3809 = add i64 %3808, 4
  store i64 %3809, i64* %PC.i1109
  %3810 = sext i64 %3807 to i128
  %3811 = and i128 %3810, -18446744073709551616
  %3812 = zext i64 %3807 to i128
  %3813 = or i128 %3811, %3812
  %3814 = mul i128 40, %3813
  %3815 = trunc i128 %3814 to i64
  store i64 %3815, i64* %RCX.i1110, align 8
  %3816 = sext i64 %3815 to i128
  %3817 = icmp ne i128 %3816, %3814
  %3818 = zext i1 %3817 to i8
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3818, i8* %3819, align 1
  %3820 = trunc i128 %3814 to i32
  %3821 = and i32 %3820, 255
  %3822 = call i32 @llvm.ctpop.i32(i32 %3821)
  %3823 = trunc i32 %3822 to i8
  %3824 = and i8 %3823, 1
  %3825 = xor i8 %3824, 1
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3825, i8* %3826, align 1
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3827, align 1
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3828, align 1
  %3829 = lshr i64 %3815, 63
  %3830 = trunc i64 %3829 to i8
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3830, i8* %3831, align 1
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3818, i8* %3832, align 1
  store %struct.Memory* %loadMem_43a688, %struct.Memory** %MEMORY
  %loadMem_43a68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 33
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %3835 to i64*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 1
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %RAX.i1107 = bitcast %union.anon* %3838 to i64*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 5
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %RCX.i1108 = bitcast %union.anon* %3841 to i64*
  %3842 = load i64, i64* %RAX.i1107
  %3843 = load i64, i64* %RCX.i1108
  %3844 = load i64, i64* %PC.i1106
  %3845 = add i64 %3844, 3
  store i64 %3845, i64* %PC.i1106
  %3846 = add i64 %3843, %3842
  store i64 %3846, i64* %RAX.i1107, align 8
  %3847 = icmp ult i64 %3846, %3842
  %3848 = icmp ult i64 %3846, %3843
  %3849 = or i1 %3847, %3848
  %3850 = zext i1 %3849 to i8
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3850, i8* %3851, align 1
  %3852 = trunc i64 %3846 to i32
  %3853 = and i32 %3852, 255
  %3854 = call i32 @llvm.ctpop.i32(i32 %3853)
  %3855 = trunc i32 %3854 to i8
  %3856 = and i8 %3855, 1
  %3857 = xor i8 %3856, 1
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3857, i8* %3858, align 1
  %3859 = xor i64 %3843, %3842
  %3860 = xor i64 %3859, %3846
  %3861 = lshr i64 %3860, 4
  %3862 = trunc i64 %3861 to i8
  %3863 = and i8 %3862, 1
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3863, i8* %3864, align 1
  %3865 = icmp eq i64 %3846, 0
  %3866 = zext i1 %3865 to i8
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3866, i8* %3867, align 1
  %3868 = lshr i64 %3846, 63
  %3869 = trunc i64 %3868 to i8
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3869, i8* %3870, align 1
  %3871 = lshr i64 %3842, 63
  %3872 = lshr i64 %3843, 63
  %3873 = xor i64 %3868, %3871
  %3874 = xor i64 %3868, %3872
  %3875 = add i64 %3873, %3874
  %3876 = icmp eq i64 %3875, 2
  %3877 = zext i1 %3876 to i8
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3877, i8* %3878, align 1
  store %struct.Memory* %loadMem_43a68c, %struct.Memory** %MEMORY
  %loadMem_43a68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 33
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %3881 to i64*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 1
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 7
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %RDX.i1105 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %RAX.i1104
  %3889 = add i64 %3888, 12
  %3890 = load i64, i64* %PC.i1103
  %3891 = add i64 %3890, 3
  store i64 %3891, i64* %PC.i1103
  %3892 = inttoptr i64 %3889 to i32*
  %3893 = load i32, i32* %3892
  %3894 = zext i32 %3893 to i64
  store i64 %3894, i64* %RDX.i1105, align 8
  store %struct.Memory* %loadMem_43a68f, %struct.Memory** %MEMORY
  %loadMem_43a692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3896 = getelementptr inbounds %struct.GPR, %struct.GPR* %3895, i32 0, i32 33
  %3897 = getelementptr inbounds %struct.Reg, %struct.Reg* %3896, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %3897 to i64*
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 7
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %EDX.i1101 = bitcast %union.anon* %3900 to i32*
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 15
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %3903 to i64*
  %3904 = load i32, i32* %EDX.i1101
  %3905 = zext i32 %3904 to i64
  %3906 = load i64, i64* %RBP.i1102
  %3907 = sub i64 %3906, 72
  %3908 = load i64, i64* %PC.i1100
  %3909 = add i64 %3908, 3
  store i64 %3909, i64* %PC.i1100
  %3910 = inttoptr i64 %3907 to i32*
  %3911 = load i32, i32* %3910
  %3912 = sub i32 %3904, %3911
  %3913 = icmp ult i32 %3904, %3911
  %3914 = zext i1 %3913 to i8
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3914, i8* %3915, align 1
  %3916 = and i32 %3912, 255
  %3917 = call i32 @llvm.ctpop.i32(i32 %3916)
  %3918 = trunc i32 %3917 to i8
  %3919 = and i8 %3918, 1
  %3920 = xor i8 %3919, 1
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3920, i8* %3921, align 1
  %3922 = xor i32 %3911, %3904
  %3923 = xor i32 %3922, %3912
  %3924 = lshr i32 %3923, 4
  %3925 = trunc i32 %3924 to i8
  %3926 = and i8 %3925, 1
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3926, i8* %3927, align 1
  %3928 = icmp eq i32 %3912, 0
  %3929 = zext i1 %3928 to i8
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3929, i8* %3930, align 1
  %3931 = lshr i32 %3912, 31
  %3932 = trunc i32 %3931 to i8
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3932, i8* %3933, align 1
  %3934 = lshr i32 %3904, 31
  %3935 = lshr i32 %3911, 31
  %3936 = xor i32 %3935, %3934
  %3937 = xor i32 %3931, %3934
  %3938 = add i32 %3937, %3936
  %3939 = icmp eq i32 %3938, 2
  %3940 = zext i1 %3939 to i8
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3940, i8* %3941, align 1
  store %struct.Memory* %loadMem_43a692, %struct.Memory** %MEMORY
  %loadMem_43a695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 33
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %3944 to i64*
  %3945 = load i64, i64* %PC.i1099
  %3946 = add i64 %3945, 42
  %3947 = load i64, i64* %PC.i1099
  %3948 = add i64 %3947, 6
  %3949 = load i64, i64* %PC.i1099
  %3950 = add i64 %3949, 6
  store i64 %3950, i64* %PC.i1099
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3952 = load i8, i8* %3951, align 1
  %3953 = icmp eq i8 %3952, 0
  %3954 = zext i1 %3953 to i8
  store i8 %3954, i8* %BRANCH_TAKEN, align 1
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3956 = select i1 %3953, i64 %3946, i64 %3948
  store i64 %3956, i64* %3955, align 8
  store %struct.Memory* %loadMem_43a695, %struct.Memory** %MEMORY
  %loadBr_43a695 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a695 = icmp eq i8 %loadBr_43a695, 1
  br i1 %cmpBr_43a695, label %block_.L_43a6bf, label %block_43a69b

block_43a69b:                                     ; preds = %block_43a677
  %loadMem_43a69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3958 = getelementptr inbounds %struct.GPR, %struct.GPR* %3957, i32 0, i32 33
  %3959 = getelementptr inbounds %struct.Reg, %struct.Reg* %3958, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %3959 to i64*
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3961 = getelementptr inbounds %struct.GPR, %struct.GPR* %3960, i32 0, i32 1
  %3962 = getelementptr inbounds %struct.Reg, %struct.Reg* %3961, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %3962 to i64*
  %3963 = load i64, i64* %PC.i1097
  %3964 = add i64 %3963, 10
  store i64 %3964, i64* %PC.i1097
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_43a69b, %struct.Memory** %MEMORY
  %loadMem_43a6a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 33
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %3967 to i64*
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 5
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %RCX.i1095 = bitcast %union.anon* %3970 to i64*
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 15
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %3973 to i64*
  %3974 = load i64, i64* %RBP.i1096
  %3975 = sub i64 %3974, 260
  %3976 = load i64, i64* %PC.i1094
  %3977 = add i64 %3976, 7
  store i64 %3977, i64* %PC.i1094
  %3978 = inttoptr i64 %3975 to i32*
  %3979 = load i32, i32* %3978
  %3980 = sext i32 %3979 to i64
  store i64 %3980, i64* %RCX.i1095, align 8
  store %struct.Memory* %loadMem_43a6a5, %struct.Memory** %MEMORY
  %loadMem_43a6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 33
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %3983 to i64*
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 5
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %RCX.i1093 = bitcast %union.anon* %3986 to i64*
  %3987 = load i64, i64* %RCX.i1093
  %3988 = load i64, i64* %PC.i1092
  %3989 = add i64 %3988, 4
  store i64 %3989, i64* %PC.i1092
  %3990 = sext i64 %3987 to i128
  %3991 = and i128 %3990, -18446744073709551616
  %3992 = zext i64 %3987 to i128
  %3993 = or i128 %3991, %3992
  %3994 = mul i128 40, %3993
  %3995 = trunc i128 %3994 to i64
  store i64 %3995, i64* %RCX.i1093, align 8
  %3996 = sext i64 %3995 to i128
  %3997 = icmp ne i128 %3996, %3994
  %3998 = zext i1 %3997 to i8
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3998, i8* %3999, align 1
  %4000 = trunc i128 %3994 to i32
  %4001 = and i32 %4000, 255
  %4002 = call i32 @llvm.ctpop.i32(i32 %4001)
  %4003 = trunc i32 %4002 to i8
  %4004 = and i8 %4003, 1
  %4005 = xor i8 %4004, 1
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4005, i8* %4006, align 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4007, align 1
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4008, align 1
  %4009 = lshr i64 %3995, 63
  %4010 = trunc i64 %4009 to i8
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4010, i8* %4011, align 1
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3998, i8* %4012, align 1
  store %struct.Memory* %loadMem_43a6ac, %struct.Memory** %MEMORY
  %loadMem_43a6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %4015 to i64*
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 1
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %4018 to i64*
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 5
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %RCX.i1091 = bitcast %union.anon* %4021 to i64*
  %4022 = load i64, i64* %RAX.i1090
  %4023 = load i64, i64* %RCX.i1091
  %4024 = load i64, i64* %PC.i1089
  %4025 = add i64 %4024, 3
  store i64 %4025, i64* %PC.i1089
  %4026 = add i64 %4023, %4022
  store i64 %4026, i64* %RAX.i1090, align 8
  %4027 = icmp ult i64 %4026, %4022
  %4028 = icmp ult i64 %4026, %4023
  %4029 = or i1 %4027, %4028
  %4030 = zext i1 %4029 to i8
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4030, i8* %4031, align 1
  %4032 = trunc i64 %4026 to i32
  %4033 = and i32 %4032, 255
  %4034 = call i32 @llvm.ctpop.i32(i32 %4033)
  %4035 = trunc i32 %4034 to i8
  %4036 = and i8 %4035, 1
  %4037 = xor i8 %4036, 1
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4037, i8* %4038, align 1
  %4039 = xor i64 %4023, %4022
  %4040 = xor i64 %4039, %4026
  %4041 = lshr i64 %4040, 4
  %4042 = trunc i64 %4041 to i8
  %4043 = and i8 %4042, 1
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4043, i8* %4044, align 1
  %4045 = icmp eq i64 %4026, 0
  %4046 = zext i1 %4045 to i8
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4046, i8* %4047, align 1
  %4048 = lshr i64 %4026, 63
  %4049 = trunc i64 %4048 to i8
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4049, i8* %4050, align 1
  %4051 = lshr i64 %4022, 63
  %4052 = lshr i64 %4023, 63
  %4053 = xor i64 %4048, %4051
  %4054 = xor i64 %4048, %4052
  %4055 = add i64 %4053, %4054
  %4056 = icmp eq i64 %4055, 2
  %4057 = zext i1 %4056 to i8
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4057, i8* %4058, align 1
  store %struct.Memory* %loadMem_43a6b0, %struct.Memory** %MEMORY
  %loadMem_43a6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 33
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %4061 to i64*
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 1
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %RAX.i1087 = bitcast %union.anon* %4064 to i64*
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 7
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %RDX.i1088 = bitcast %union.anon* %4067 to i64*
  %4068 = load i64, i64* %RAX.i1087
  %4069 = add i64 %4068, 16
  %4070 = load i64, i64* %PC.i1086
  %4071 = add i64 %4070, 3
  store i64 %4071, i64* %PC.i1086
  %4072 = inttoptr i64 %4069 to i32*
  %4073 = load i32, i32* %4072
  %4074 = zext i32 %4073 to i64
  store i64 %4074, i64* %RDX.i1088, align 8
  store %struct.Memory* %loadMem_43a6b3, %struct.Memory** %MEMORY
  %loadMem_43a6b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 33
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %4077 to i64*
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 7
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %EDX.i1084 = bitcast %union.anon* %4080 to i32*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 15
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %4083 to i64*
  %4084 = load i32, i32* %EDX.i1084
  %4085 = zext i32 %4084 to i64
  %4086 = load i64, i64* %RBP.i1085
  %4087 = sub i64 %4086, 76
  %4088 = load i64, i64* %PC.i1083
  %4089 = add i64 %4088, 3
  store i64 %4089, i64* %PC.i1083
  %4090 = inttoptr i64 %4087 to i32*
  %4091 = load i32, i32* %4090
  %4092 = sub i32 %4084, %4091
  %4093 = icmp ult i32 %4084, %4091
  %4094 = zext i1 %4093 to i8
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4094, i8* %4095, align 1
  %4096 = and i32 %4092, 255
  %4097 = call i32 @llvm.ctpop.i32(i32 %4096)
  %4098 = trunc i32 %4097 to i8
  %4099 = and i8 %4098, 1
  %4100 = xor i8 %4099, 1
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4100, i8* %4101, align 1
  %4102 = xor i32 %4091, %4084
  %4103 = xor i32 %4102, %4092
  %4104 = lshr i32 %4103, 4
  %4105 = trunc i32 %4104 to i8
  %4106 = and i8 %4105, 1
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4106, i8* %4107, align 1
  %4108 = icmp eq i32 %4092, 0
  %4109 = zext i1 %4108 to i8
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4109, i8* %4110, align 1
  %4111 = lshr i32 %4092, 31
  %4112 = trunc i32 %4111 to i8
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4112, i8* %4113, align 1
  %4114 = lshr i32 %4084, 31
  %4115 = lshr i32 %4091, 31
  %4116 = xor i32 %4115, %4114
  %4117 = xor i32 %4111, %4114
  %4118 = add i32 %4117, %4116
  %4119 = icmp eq i32 %4118, 2
  %4120 = zext i1 %4119 to i8
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4120, i8* %4121, align 1
  store %struct.Memory* %loadMem_43a6b6, %struct.Memory** %MEMORY
  %loadMem_43a6b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 33
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %4124 to i64*
  %4125 = load i64, i64* %PC.i1082
  %4126 = add i64 %4125, 11
  %4127 = load i64, i64* %PC.i1082
  %4128 = add i64 %4127, 6
  %4129 = load i64, i64* %PC.i1082
  %4130 = add i64 %4129, 6
  store i64 %4130, i64* %PC.i1082
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4132 = load i8, i8* %4131, align 1
  store i8 %4132, i8* %BRANCH_TAKEN, align 1
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4134 = icmp ne i8 %4132, 0
  %4135 = select i1 %4134, i64 %4126, i64 %4128
  store i64 %4135, i64* %4133, align 8
  store %struct.Memory* %loadMem_43a6b9, %struct.Memory** %MEMORY
  %loadBr_43a6b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a6b9 = icmp eq i8 %loadBr_43a6b9, 1
  br i1 %cmpBr_43a6b9, label %block_.L_43a6c4, label %block_.L_43a6bf

block_.L_43a6bf:                                  ; preds = %block_43a69b, %block_43a677
  %loadMem_43a6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4137 = getelementptr inbounds %struct.GPR, %struct.GPR* %4136, i32 0, i32 33
  %4138 = getelementptr inbounds %struct.Reg, %struct.Reg* %4137, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %4138 to i64*
  %4139 = load i64, i64* %PC.i1081
  %4140 = add i64 %4139, 2342
  %4141 = load i64, i64* %PC.i1081
  %4142 = add i64 %4141, 5
  store i64 %4142, i64* %PC.i1081
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4140, i64* %4143, align 8
  store %struct.Memory* %loadMem_43a6bf, %struct.Memory** %MEMORY
  br label %block_.L_43afe5

block_.L_43a6c4:                                  ; preds = %block_43a69b
  %loadMem_43a6c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 33
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %4146 to i64*
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 11
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %RDI.i1079 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 15
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %4152 to i64*
  %4153 = load i64, i64* %RBP.i1080
  %4154 = sub i64 %4153, 72
  %4155 = load i64, i64* %PC.i1078
  %4156 = add i64 %4155, 3
  store i64 %4156, i64* %PC.i1078
  %4157 = inttoptr i64 %4154 to i32*
  %4158 = load i32, i32* %4157
  %4159 = zext i32 %4158 to i64
  store i64 %4159, i64* %RDI.i1079, align 8
  store %struct.Memory* %loadMem_43a6c4, %struct.Memory** %MEMORY
  %loadMem1_43a6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 33
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %4162 to i64*
  %4163 = load i64, i64* %PC.i1077
  %4164 = add i64 %4163, 2457
  %4165 = load i64, i64* %PC.i1077
  %4166 = add i64 %4165, 5
  %4167 = load i64, i64* %PC.i1077
  %4168 = add i64 %4167, 5
  store i64 %4168, i64* %PC.i1077
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4170 = load i64, i64* %4169, align 8
  %4171 = add i64 %4170, -8
  %4172 = inttoptr i64 %4171 to i64*
  store i64 %4166, i64* %4172
  store i64 %4171, i64* %4169, align 8
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4164, i64* %4173, align 8
  store %struct.Memory* %loadMem1_43a6c7, %struct.Memory** %MEMORY
  %loadMem2_43a6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a6c7 = load i64, i64* %3
  %call2_43a6c7 = call %struct.Memory* @sub_43b060.reset_map(%struct.State* %0, i64 %loadPC_43a6c7, %struct.Memory* %loadMem2_43a6c7)
  store %struct.Memory* %call2_43a6c7, %struct.Memory** %MEMORY
  %loadMem_43a6cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 33
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %4176 to i64*
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4178 = getelementptr inbounds %struct.GPR, %struct.GPR* %4177, i32 0, i32 11
  %4179 = getelementptr inbounds %struct.Reg, %struct.Reg* %4178, i32 0, i32 0
  %RDI.i1075 = bitcast %union.anon* %4179 to i64*
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 15
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %4182 to i64*
  %4183 = load i64, i64* %RBP.i1076
  %4184 = sub i64 %4183, 352
  %4185 = load i64, i64* %PC.i1074
  %4186 = add i64 %4185, 7
  store i64 %4186, i64* %PC.i1074
  store i64 %4184, i64* %RDI.i1075, align 8
  store %struct.Memory* %loadMem_43a6cc, %struct.Memory** %MEMORY
  %loadMem_43a6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 33
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %4189 to i64*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 15
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %4192 to i64*
  %4193 = load i64, i64* %RBP.i1073
  %4194 = sub i64 %4193, 360
  %4195 = load i64, i64* %PC.i1072
  %4196 = add i64 %4195, 10
  store i64 %4196, i64* %PC.i1072
  %4197 = inttoptr i64 %4194 to i32*
  store i32 0, i32* %4197
  store %struct.Memory* %loadMem_43a6d3, %struct.Memory** %MEMORY
  %loadMem1_43a6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 33
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %4200 to i64*
  %4201 = load i64, i64* %PC.i1071
  %4202 = add i64 %4201, 2499
  %4203 = load i64, i64* %PC.i1071
  %4204 = add i64 %4203, 5
  %4205 = load i64, i64* %PC.i1071
  %4206 = add i64 %4205, 5
  store i64 %4206, i64* %PC.i1071
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4208 = load i64, i64* %4207, align 8
  %4209 = add i64 %4208, -8
  %4210 = inttoptr i64 %4209 to i64*
  store i64 %4204, i64* %4210
  store i64 %4209, i64* %4207, align 8
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4202, i64* %4211, align 8
  store %struct.Memory* %loadMem1_43a6dd, %struct.Memory** %MEMORY
  %loadMem2_43a6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a6dd = load i64, i64* %3
  %call2_43a6dd = call %struct.Memory* @sub_43b0a0.first_map(%struct.State* %0, i64 %loadPC_43a6dd, %struct.Memory* %loadMem2_43a6dd)
  store %struct.Memory* %call2_43a6dd, %struct.Memory** %MEMORY
  br label %block_.L_43a6e2

block_.L_43a6e2:                                  ; preds = %block_.L_43aa92, %block_.L_43a6c4
  %loadMem_43a6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 33
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %4214 to i64*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 1
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %4217 to i64*
  %4218 = load i64, i64* %PC.i1069
  %4219 = add i64 %4218, 10
  store i64 %4219, i64* %PC.i1069
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i1070, align 8
  store %struct.Memory* %loadMem_43a6e2, %struct.Memory** %MEMORY
  %loadMem_43a6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 33
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %4222 to i64*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 5
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %RCX.i1067 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 15
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %4228 to i64*
  %4229 = load i64, i64* %RBP.i1068
  %4230 = sub i64 %4229, 260
  %4231 = load i64, i64* %PC.i1066
  %4232 = add i64 %4231, 7
  store i64 %4232, i64* %PC.i1066
  %4233 = inttoptr i64 %4230 to i32*
  %4234 = load i32, i32* %4233
  %4235 = sext i32 %4234 to i64
  store i64 %4235, i64* %RCX.i1067, align 8
  store %struct.Memory* %loadMem_43a6ec, %struct.Memory** %MEMORY
  %loadMem_43a6f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 33
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %4238 to i64*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 5
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %4241 to i64*
  %4242 = load i64, i64* %RCX.i1065
  %4243 = load i64, i64* %PC.i1064
  %4244 = add i64 %4243, 4
  store i64 %4244, i64* %PC.i1064
  %4245 = sext i64 %4242 to i128
  %4246 = and i128 %4245, -18446744073709551616
  %4247 = zext i64 %4242 to i128
  %4248 = or i128 %4246, %4247
  %4249 = mul i128 40, %4248
  %4250 = trunc i128 %4249 to i64
  store i64 %4250, i64* %RCX.i1065, align 8
  %4251 = sext i64 %4250 to i128
  %4252 = icmp ne i128 %4251, %4249
  %4253 = zext i1 %4252 to i8
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4253, i8* %4254, align 1
  %4255 = trunc i128 %4249 to i32
  %4256 = and i32 %4255, 255
  %4257 = call i32 @llvm.ctpop.i32(i32 %4256)
  %4258 = trunc i32 %4257 to i8
  %4259 = and i8 %4258, 1
  %4260 = xor i8 %4259, 1
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4260, i8* %4261, align 1
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4262, align 1
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4263, align 1
  %4264 = lshr i64 %4250, 63
  %4265 = trunc i64 %4264 to i8
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4265, i8* %4266, align 1
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4253, i8* %4267, align 1
  store %struct.Memory* %loadMem_43a6f3, %struct.Memory** %MEMORY
  %loadMem_43a6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 33
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %4270 to i64*
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 1
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %4273 to i64*
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 5
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %RCX.i1063 = bitcast %union.anon* %4276 to i64*
  %4277 = load i64, i64* %RAX.i1062
  %4278 = load i64, i64* %RCX.i1063
  %4279 = load i64, i64* %PC.i1061
  %4280 = add i64 %4279, 3
  store i64 %4280, i64* %PC.i1061
  %4281 = add i64 %4278, %4277
  store i64 %4281, i64* %RAX.i1062, align 8
  %4282 = icmp ult i64 %4281, %4277
  %4283 = icmp ult i64 %4281, %4278
  %4284 = or i1 %4282, %4283
  %4285 = zext i1 %4284 to i8
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4285, i8* %4286, align 1
  %4287 = trunc i64 %4281 to i32
  %4288 = and i32 %4287, 255
  %4289 = call i32 @llvm.ctpop.i32(i32 %4288)
  %4290 = trunc i32 %4289 to i8
  %4291 = and i8 %4290, 1
  %4292 = xor i8 %4291, 1
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4292, i8* %4293, align 1
  %4294 = xor i64 %4278, %4277
  %4295 = xor i64 %4294, %4281
  %4296 = lshr i64 %4295, 4
  %4297 = trunc i64 %4296 to i8
  %4298 = and i8 %4297, 1
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4298, i8* %4299, align 1
  %4300 = icmp eq i64 %4281, 0
  %4301 = zext i1 %4300 to i8
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4301, i8* %4302, align 1
  %4303 = lshr i64 %4281, 63
  %4304 = trunc i64 %4303 to i8
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4304, i8* %4305, align 1
  %4306 = lshr i64 %4277, 63
  %4307 = lshr i64 %4278, 63
  %4308 = xor i64 %4303, %4306
  %4309 = xor i64 %4303, %4307
  %4310 = add i64 %4308, %4309
  %4311 = icmp eq i64 %4310, 2
  %4312 = zext i1 %4311 to i8
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4312, i8* %4313, align 1
  store %struct.Memory* %loadMem_43a6f7, %struct.Memory** %MEMORY
  %loadMem_43a6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 33
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %4316 to i64*
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 1
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %4319 to i64*
  %4320 = load i64, i64* %RAX.i1060
  %4321 = load i64, i64* %PC.i1059
  %4322 = add i64 %4321, 3
  store i64 %4322, i64* %PC.i1059
  %4323 = inttoptr i64 %4320 to i64*
  %4324 = load i64, i64* %4323
  store i64 %4324, i64* %RAX.i1060, align 8
  store %struct.Memory* %loadMem_43a6fa, %struct.Memory** %MEMORY
  %loadMem_43a6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 33
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %4327 to i64*
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 5
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %RCX.i1057 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 15
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RBP.i1058 = bitcast %union.anon* %4333 to i64*
  %4334 = load i64, i64* %RBP.i1058
  %4335 = sub i64 %4334, 360
  %4336 = load i64, i64* %PC.i1056
  %4337 = add i64 %4336, 7
  store i64 %4337, i64* %PC.i1056
  %4338 = inttoptr i64 %4335 to i32*
  %4339 = load i32, i32* %4338
  %4340 = sext i32 %4339 to i64
  store i64 %4340, i64* %RCX.i1057, align 8
  store %struct.Memory* %loadMem_43a6fd, %struct.Memory** %MEMORY
  %loadMem_43a704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4342 = getelementptr inbounds %struct.GPR, %struct.GPR* %4341, i32 0, i32 33
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 5
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %RCX.i1055 = bitcast %union.anon* %4346 to i64*
  %4347 = load i64, i64* %RCX.i1055
  %4348 = load i64, i64* %PC.i1054
  %4349 = add i64 %4348, 4
  store i64 %4349, i64* %PC.i1054
  %4350 = sext i64 %4347 to i128
  %4351 = and i128 %4350, -18446744073709551616
  %4352 = zext i64 %4347 to i128
  %4353 = or i128 %4351, %4352
  %4354 = mul i128 20, %4353
  %4355 = trunc i128 %4354 to i64
  store i64 %4355, i64* %RCX.i1055, align 8
  %4356 = sext i64 %4355 to i128
  %4357 = icmp ne i128 %4356, %4354
  %4358 = zext i1 %4357 to i8
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4358, i8* %4359, align 1
  %4360 = trunc i128 %4354 to i32
  %4361 = and i32 %4360, 255
  %4362 = call i32 @llvm.ctpop.i32(i32 %4361)
  %4363 = trunc i32 %4362 to i8
  %4364 = and i8 %4363, 1
  %4365 = xor i8 %4364, 1
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4365, i8* %4366, align 1
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4367, align 1
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4368, align 1
  %4369 = lshr i64 %4355, 63
  %4370 = trunc i64 %4369 to i8
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4370, i8* %4371, align 1
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4358, i8* %4372, align 1
  store %struct.Memory* %loadMem_43a704, %struct.Memory** %MEMORY
  %loadMem_43a708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 33
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 1
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %4378 to i64*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 5
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %RCX.i1053 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %RAX.i1052
  %4383 = load i64, i64* %RCX.i1053
  %4384 = load i64, i64* %PC.i1051
  %4385 = add i64 %4384, 3
  store i64 %4385, i64* %PC.i1051
  %4386 = add i64 %4383, %4382
  store i64 %4386, i64* %RAX.i1052, align 8
  %4387 = icmp ult i64 %4386, %4382
  %4388 = icmp ult i64 %4386, %4383
  %4389 = or i1 %4387, %4388
  %4390 = zext i1 %4389 to i8
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4390, i8* %4391, align 1
  %4392 = trunc i64 %4386 to i32
  %4393 = and i32 %4392, 255
  %4394 = call i32 @llvm.ctpop.i32(i32 %4393)
  %4395 = trunc i32 %4394 to i8
  %4396 = and i8 %4395, 1
  %4397 = xor i8 %4396, 1
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4397, i8* %4398, align 1
  %4399 = xor i64 %4383, %4382
  %4400 = xor i64 %4399, %4386
  %4401 = lshr i64 %4400, 4
  %4402 = trunc i64 %4401 to i8
  %4403 = and i8 %4402, 1
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4403, i8* %4404, align 1
  %4405 = icmp eq i64 %4386, 0
  %4406 = zext i1 %4405 to i8
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4406, i8* %4407, align 1
  %4408 = lshr i64 %4386, 63
  %4409 = trunc i64 %4408 to i8
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4409, i8* %4410, align 1
  %4411 = lshr i64 %4382, 63
  %4412 = lshr i64 %4383, 63
  %4413 = xor i64 %4408, %4411
  %4414 = xor i64 %4408, %4412
  %4415 = add i64 %4413, %4414
  %4416 = icmp eq i64 %4415, 2
  %4417 = zext i1 %4416 to i8
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4417, i8* %4418, align 1
  store %struct.Memory* %loadMem_43a708, %struct.Memory** %MEMORY
  %loadMem_43a70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4420 = getelementptr inbounds %struct.GPR, %struct.GPR* %4419, i32 0, i32 33
  %4421 = getelementptr inbounds %struct.Reg, %struct.Reg* %4420, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %4421 to i64*
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4423 = getelementptr inbounds %struct.GPR, %struct.GPR* %4422, i32 0, i32 1
  %4424 = getelementptr inbounds %struct.Reg, %struct.Reg* %4423, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %4424 to i64*
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 15
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %4427 to i64*
  %4428 = load i64, i64* %RBP.i1050
  %4429 = sub i64 %4428, 368
  %4430 = load i64, i64* %RAX.i1049
  %4431 = load i64, i64* %PC.i1048
  %4432 = add i64 %4431, 7
  store i64 %4432, i64* %PC.i1048
  %4433 = inttoptr i64 %4429 to i64*
  store i64 %4430, i64* %4433
  store %struct.Memory* %loadMem_43a70b, %struct.Memory** %MEMORY
  %loadMem_43a712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4435 = getelementptr inbounds %struct.GPR, %struct.GPR* %4434, i32 0, i32 33
  %4436 = getelementptr inbounds %struct.Reg, %struct.Reg* %4435, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %4436 to i64*
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 1
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %4439 to i64*
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 15
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %4442 to i64*
  %4443 = load i64, i64* %RBP.i1047
  %4444 = sub i64 %4443, 360
  %4445 = load i64, i64* %PC.i1045
  %4446 = add i64 %4445, 7
  store i64 %4446, i64* %PC.i1045
  %4447 = inttoptr i64 %4444 to i32*
  %4448 = load i32, i32* %4447
  %4449 = sext i32 %4448 to i64
  store i64 %4449, i64* %RAX.i1046, align 8
  store %struct.Memory* %loadMem_43a712, %struct.Memory** %MEMORY
  %loadMem_43a719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 33
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %4452 to i64*
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 1
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %4455 to i64*
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 7
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %RDX.i1043 = bitcast %union.anon* %4458 to i64*
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 15
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %4461 to i64*
  %4462 = load i64, i64* %RBP.i1044
  %4463 = load i64, i64* %RAX.i1042
  %4464 = mul i64 %4463, 4
  %4465 = add i64 %4462, -352
  %4466 = add i64 %4465, %4464
  %4467 = load i64, i64* %PC.i1041
  %4468 = add i64 %4467, 7
  store i64 %4468, i64* %PC.i1041
  %4469 = inttoptr i64 %4466 to i32*
  %4470 = load i32, i32* %4469
  %4471 = zext i32 %4470 to i64
  store i64 %4471, i64* %RDX.i1043, align 8
  store %struct.Memory* %loadMem_43a719, %struct.Memory** %MEMORY
  %loadMem_43a720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 33
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %4474 to i64*
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4476 = getelementptr inbounds %struct.GPR, %struct.GPR* %4475, i32 0, i32 7
  %4477 = getelementptr inbounds %struct.Reg, %struct.Reg* %4476, i32 0, i32 0
  %EDX.i1039 = bitcast %union.anon* %4477 to i32*
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 15
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %4480 to i64*
  %4481 = load i64, i64* %RBP.i1040
  %4482 = sub i64 %4481, 372
  %4483 = load i32, i32* %EDX.i1039
  %4484 = zext i32 %4483 to i64
  %4485 = load i64, i64* %PC.i1038
  %4486 = add i64 %4485, 6
  store i64 %4486, i64* %PC.i1038
  %4487 = inttoptr i64 %4482 to i32*
  store i32 %4483, i32* %4487
  store %struct.Memory* %loadMem_43a720, %struct.Memory** %MEMORY
  %loadMem_43a726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 33
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %4490 to i64*
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 15
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %4493 to i64*
  %4494 = load i64, i64* %RBP.i1037
  %4495 = sub i64 %4494, 376
  %4496 = load i64, i64* %PC.i1036
  %4497 = add i64 %4496, 10
  store i64 %4497, i64* %PC.i1036
  %4498 = inttoptr i64 %4495 to i32*
  store i32 1, i32* %4498
  store %struct.Memory* %loadMem_43a726, %struct.Memory** %MEMORY
  %loadMem_43a730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 33
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %4501 to i64*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 1
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %4504 to i64*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 15
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %4507 to i64*
  %4508 = load i64, i64* %RBP.i1035
  %4509 = sub i64 %4508, 372
  %4510 = load i64, i64* %PC.i1033
  %4511 = add i64 %4510, 7
  store i64 %4511, i64* %PC.i1033
  %4512 = inttoptr i64 %4509 to i32*
  %4513 = load i32, i32* %4512
  %4514 = sext i32 %4513 to i64
  store i64 %4514, i64* %RAX.i1034, align 8
  store %struct.Memory* %loadMem_43a730, %struct.Memory** %MEMORY
  %loadMem_43a737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %4517 to i64*
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 1
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %4520 to i64*
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4522 = getelementptr inbounds %struct.GPR, %struct.GPR* %4521, i32 0, i32 7
  %4523 = getelementptr inbounds %struct.Reg, %struct.Reg* %4522, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %4523 to i64*
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4525 = getelementptr inbounds %struct.GPR, %struct.GPR* %4524, i32 0, i32 15
  %4526 = getelementptr inbounds %struct.Reg, %struct.Reg* %4525, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %4526 to i64*
  %4527 = load i64, i64* %RBP.i1032
  %4528 = load i64, i64* %RAX.i1030
  %4529 = add i64 %4527, -256
  %4530 = add i64 %4529, %4528
  %4531 = load i64, i64* %PC.i1029
  %4532 = add i64 %4531, 8
  store i64 %4532, i64* %PC.i1029
  %4533 = inttoptr i64 %4530 to i8*
  %4534 = load i8, i8* %4533
  %4535 = sext i8 %4534 to i64
  %4536 = and i64 %4535, 4294967295
  store i64 %4536, i64* %RDX.i1031, align 8
  store %struct.Memory* %loadMem_43a737, %struct.Memory** %MEMORY
  %loadMem_43a73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4538 = getelementptr inbounds %struct.GPR, %struct.GPR* %4537, i32 0, i32 33
  %4539 = getelementptr inbounds %struct.Reg, %struct.Reg* %4538, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %4539 to i64*
  %4540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4541 = getelementptr inbounds %struct.GPR, %struct.GPR* %4540, i32 0, i32 1
  %4542 = getelementptr inbounds %struct.Reg, %struct.Reg* %4541, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %4542 to i64*
  %4543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4544 = getelementptr inbounds %struct.GPR, %struct.GPR* %4543, i32 0, i32 15
  %4545 = getelementptr inbounds %struct.Reg, %struct.Reg* %4544, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %4545 to i64*
  %4546 = load i64, i64* %RBP.i1028
  %4547 = sub i64 %4546, 368
  %4548 = load i64, i64* %PC.i1026
  %4549 = add i64 %4548, 7
  store i64 %4549, i64* %PC.i1026
  %4550 = inttoptr i64 %4547 to i64*
  %4551 = load i64, i64* %4550
  store i64 %4551, i64* %RAX.i1027, align 8
  store %struct.Memory* %loadMem_43a73f, %struct.Memory** %MEMORY
  %loadMem_43a746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4553 = getelementptr inbounds %struct.GPR, %struct.GPR* %4552, i32 0, i32 33
  %4554 = getelementptr inbounds %struct.Reg, %struct.Reg* %4553, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %4554 to i64*
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4556 = getelementptr inbounds %struct.GPR, %struct.GPR* %4555, i32 0, i32 1
  %4557 = getelementptr inbounds %struct.Reg, %struct.Reg* %4556, i32 0, i32 0
  %RAX.i1024 = bitcast %union.anon* %4557 to i64*
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4559 = getelementptr inbounds %struct.GPR, %struct.GPR* %4558, i32 0, i32 9
  %4560 = getelementptr inbounds %struct.Reg, %struct.Reg* %4559, i32 0, i32 0
  %RSI.i1025 = bitcast %union.anon* %4560 to i64*
  %4561 = load i64, i64* %RAX.i1024
  %4562 = add i64 %4561, 3
  %4563 = load i64, i64* %PC.i1023
  %4564 = add i64 %4563, 4
  store i64 %4564, i64* %PC.i1023
  %4565 = inttoptr i64 %4562 to i8*
  %4566 = load i8, i8* %4565
  %4567 = sext i8 %4566 to i64
  %4568 = and i64 %4567, 4294967295
  store i64 %4568, i64* %RSI.i1025, align 8
  store %struct.Memory* %loadMem_43a746, %struct.Memory** %MEMORY
  %loadMem_43a74a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4570 = getelementptr inbounds %struct.GPR, %struct.GPR* %4569, i32 0, i32 33
  %4571 = getelementptr inbounds %struct.Reg, %struct.Reg* %4570, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %4571 to i64*
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4573 = getelementptr inbounds %struct.GPR, %struct.GPR* %4572, i32 0, i32 7
  %4574 = getelementptr inbounds %struct.Reg, %struct.Reg* %4573, i32 0, i32 0
  %EDX.i1021 = bitcast %union.anon* %4574 to i32*
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 9
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %ESI.i1022 = bitcast %union.anon* %4577 to i32*
  %4578 = load i32, i32* %EDX.i1021
  %4579 = zext i32 %4578 to i64
  %4580 = load i32, i32* %ESI.i1022
  %4581 = zext i32 %4580 to i64
  %4582 = load i64, i64* %PC.i1020
  %4583 = add i64 %4582, 2
  store i64 %4583, i64* %PC.i1020
  %4584 = sub i32 %4578, %4580
  %4585 = icmp ult i32 %4578, %4580
  %4586 = zext i1 %4585 to i8
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4586, i8* %4587, align 1
  %4588 = and i32 %4584, 255
  %4589 = call i32 @llvm.ctpop.i32(i32 %4588)
  %4590 = trunc i32 %4589 to i8
  %4591 = and i8 %4590, 1
  %4592 = xor i8 %4591, 1
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4592, i8* %4593, align 1
  %4594 = xor i64 %4581, %4579
  %4595 = trunc i64 %4594 to i32
  %4596 = xor i32 %4595, %4584
  %4597 = lshr i32 %4596, 4
  %4598 = trunc i32 %4597 to i8
  %4599 = and i8 %4598, 1
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4599, i8* %4600, align 1
  %4601 = icmp eq i32 %4584, 0
  %4602 = zext i1 %4601 to i8
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4602, i8* %4603, align 1
  %4604 = lshr i32 %4584, 31
  %4605 = trunc i32 %4604 to i8
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4605, i8* %4606, align 1
  %4607 = lshr i32 %4578, 31
  %4608 = lshr i32 %4580, 31
  %4609 = xor i32 %4608, %4607
  %4610 = xor i32 %4604, %4607
  %4611 = add i32 %4610, %4609
  %4612 = icmp eq i32 %4611, 2
  %4613 = zext i1 %4612 to i8
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4613, i8* %4614, align 1
  store %struct.Memory* %loadMem_43a74a, %struct.Memory** %MEMORY
  %loadMem_43a74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 33
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %4617 to i64*
  %4618 = load i64, i64* %PC.i1019
  %4619 = add i64 %4618, 73
  %4620 = load i64, i64* %PC.i1019
  %4621 = add i64 %4620, 6
  %4622 = load i64, i64* %PC.i1019
  %4623 = add i64 %4622, 6
  store i64 %4623, i64* %PC.i1019
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4625 = load i8, i8* %4624, align 1
  %4626 = icmp eq i8 %4625, 0
  %4627 = zext i1 %4626 to i8
  store i8 %4627, i8* %BRANCH_TAKEN, align 1
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4629 = select i1 %4626, i64 %4619, i64 %4621
  store i64 %4629, i64* %4628, align 8
  store %struct.Memory* %loadMem_43a74c, %struct.Memory** %MEMORY
  %loadBr_43a74c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a74c = icmp eq i8 %loadBr_43a74c, 1
  br i1 %cmpBr_43a74c, label %block_.L_43a795, label %block_43a752

block_43a752:                                     ; preds = %block_.L_43a6e2
  %loadMem_43a752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 33
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %4632 to i64*
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 1
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %4635 to i64*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 15
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %4638 to i64*
  %4639 = load i64, i64* %RBP.i1018
  %4640 = sub i64 %4639, 372
  %4641 = load i64, i64* %PC.i1016
  %4642 = add i64 %4641, 7
  store i64 %4642, i64* %PC.i1016
  %4643 = inttoptr i64 %4640 to i32*
  %4644 = load i32, i32* %4643
  %4645 = sext i32 %4644 to i64
  store i64 %4645, i64* %RAX.i1017, align 8
  store %struct.Memory* %loadMem_43a752, %struct.Memory** %MEMORY
  %loadMem_43a759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 33
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %4648 to i64*
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 1
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %4651 to i64*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 5
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %4654 to i64*
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4656 = getelementptr inbounds %struct.GPR, %struct.GPR* %4655, i32 0, i32 15
  %4657 = getelementptr inbounds %struct.Reg, %struct.Reg* %4656, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %4657 to i64*
  %4658 = load i64, i64* %RBP.i1015
  %4659 = load i64, i64* %RAX.i1013
  %4660 = add i64 %4658, -192
  %4661 = add i64 %4660, %4659
  %4662 = load i64, i64* %PC.i1012
  %4663 = add i64 %4662, 8
  store i64 %4663, i64* %PC.i1012
  %4664 = inttoptr i64 %4661 to i8*
  %4665 = load i8, i8* %4664
  %4666 = sext i8 %4665 to i64
  %4667 = and i64 %4666, 4294967295
  store i64 %4667, i64* %RCX.i1014, align 8
  store %struct.Memory* %loadMem_43a759, %struct.Memory** %MEMORY
  %loadMem_43a761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4669 = getelementptr inbounds %struct.GPR, %struct.GPR* %4668, i32 0, i32 33
  %4670 = getelementptr inbounds %struct.Reg, %struct.Reg* %4669, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %4670 to i64*
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4672 = getelementptr inbounds %struct.GPR, %struct.GPR* %4671, i32 0, i32 1
  %4673 = getelementptr inbounds %struct.Reg, %struct.Reg* %4672, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %4673 to i64*
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4675 = getelementptr inbounds %struct.GPR, %struct.GPR* %4674, i32 0, i32 15
  %4676 = getelementptr inbounds %struct.Reg, %struct.Reg* %4675, i32 0, i32 0
  %RBP.i1011 = bitcast %union.anon* %4676 to i64*
  %4677 = load i64, i64* %RBP.i1011
  %4678 = sub i64 %4677, 368
  %4679 = load i64, i64* %PC.i1009
  %4680 = add i64 %4679, 7
  store i64 %4680, i64* %PC.i1009
  %4681 = inttoptr i64 %4678 to i64*
  %4682 = load i64, i64* %4681
  store i64 %4682, i64* %RAX.i1010, align 8
  store %struct.Memory* %loadMem_43a761, %struct.Memory** %MEMORY
  %loadMem_43a768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %4685 to i64*
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4687 = getelementptr inbounds %struct.GPR, %struct.GPR* %4686, i32 0, i32 1
  %4688 = getelementptr inbounds %struct.Reg, %struct.Reg* %4687, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %4688 to i64*
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 7
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %RDX.i1008 = bitcast %union.anon* %4691 to i64*
  %4692 = load i64, i64* %RAX.i1007
  %4693 = load i64, i64* %PC.i1006
  %4694 = add i64 %4693, 3
  store i64 %4694, i64* %PC.i1006
  %4695 = inttoptr i64 %4692 to i8*
  %4696 = load i8, i8* %4695
  %4697 = sext i8 %4696 to i64
  %4698 = and i64 %4697, 4294967295
  store i64 %4698, i64* %RDX.i1008, align 8
  store %struct.Memory* %loadMem_43a768, %struct.Memory** %MEMORY
  %loadMem_43a76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 5
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %ECX.i1004 = bitcast %union.anon* %4704 to i32*
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 7
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %EDX.i1005 = bitcast %union.anon* %4707 to i32*
  %4708 = load i32, i32* %ECX.i1004
  %4709 = zext i32 %4708 to i64
  %4710 = load i32, i32* %EDX.i1005
  %4711 = zext i32 %4710 to i64
  %4712 = load i64, i64* %PC.i1003
  %4713 = add i64 %4712, 2
  store i64 %4713, i64* %PC.i1003
  %4714 = sub i32 %4708, %4710
  %4715 = icmp ult i32 %4708, %4710
  %4716 = zext i1 %4715 to i8
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4716, i8* %4717, align 1
  %4718 = and i32 %4714, 255
  %4719 = call i32 @llvm.ctpop.i32(i32 %4718)
  %4720 = trunc i32 %4719 to i8
  %4721 = and i8 %4720, 1
  %4722 = xor i8 %4721, 1
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4722, i8* %4723, align 1
  %4724 = xor i64 %4711, %4709
  %4725 = trunc i64 %4724 to i32
  %4726 = xor i32 %4725, %4714
  %4727 = lshr i32 %4726, 4
  %4728 = trunc i32 %4727 to i8
  %4729 = and i8 %4728, 1
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4729, i8* %4730, align 1
  %4731 = icmp eq i32 %4714, 0
  %4732 = zext i1 %4731 to i8
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4732, i8* %4733, align 1
  %4734 = lshr i32 %4714, 31
  %4735 = trunc i32 %4734 to i8
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4735, i8* %4736, align 1
  %4737 = lshr i32 %4708, 31
  %4738 = lshr i32 %4710, 31
  %4739 = xor i32 %4738, %4737
  %4740 = xor i32 %4734, %4737
  %4741 = add i32 %4740, %4739
  %4742 = icmp eq i32 %4741, 2
  %4743 = zext i1 %4742 to i8
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4743, i8* %4744, align 1
  store %struct.Memory* %loadMem_43a76b, %struct.Memory** %MEMORY
  %loadMem_43a76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %PC.i1002
  %4749 = add i64 %4748, 40
  %4750 = load i64, i64* %PC.i1002
  %4751 = add i64 %4750, 6
  %4752 = load i64, i64* %PC.i1002
  %4753 = add i64 %4752, 6
  store i64 %4753, i64* %PC.i1002
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4755 = load i8, i8* %4754, align 1
  %4756 = icmp eq i8 %4755, 0
  %4757 = zext i1 %4756 to i8
  store i8 %4757, i8* %BRANCH_TAKEN, align 1
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4759 = select i1 %4756, i64 %4749, i64 %4751
  store i64 %4759, i64* %4758, align 8
  store %struct.Memory* %loadMem_43a76d, %struct.Memory** %MEMORY
  %loadBr_43a76d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a76d = icmp eq i8 %loadBr_43a76d, 1
  br i1 %cmpBr_43a76d, label %block_.L_43a795, label %block_43a773

block_43a773:                                     ; preds = %block_43a752
  %loadMem_43a773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %4762 to i64*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 1
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %4765 to i64*
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4767 = getelementptr inbounds %struct.GPR, %struct.GPR* %4766, i32 0, i32 15
  %4768 = getelementptr inbounds %struct.Reg, %struct.Reg* %4767, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %4768 to i64*
  %4769 = load i64, i64* %RBP.i1001
  %4770 = sub i64 %4769, 372
  %4771 = load i64, i64* %PC.i999
  %4772 = add i64 %4771, 7
  store i64 %4772, i64* %PC.i999
  %4773 = inttoptr i64 %4770 to i32*
  %4774 = load i32, i32* %4773
  %4775 = sext i32 %4774 to i64
  store i64 %4775, i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_43a773, %struct.Memory** %MEMORY
  %loadMem_43a77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4777 = getelementptr inbounds %struct.GPR, %struct.GPR* %4776, i32 0, i32 33
  %4778 = getelementptr inbounds %struct.Reg, %struct.Reg* %4777, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %4778 to i64*
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4780 = getelementptr inbounds %struct.GPR, %struct.GPR* %4779, i32 0, i32 1
  %4781 = getelementptr inbounds %struct.Reg, %struct.Reg* %4780, i32 0, i32 0
  %RAX.i996 = bitcast %union.anon* %4781 to i64*
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 5
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %4784 to i64*
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4786 = getelementptr inbounds %struct.GPR, %struct.GPR* %4785, i32 0, i32 15
  %4787 = getelementptr inbounds %struct.Reg, %struct.Reg* %4786, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %4787 to i64*
  %4788 = load i64, i64* %RBP.i998
  %4789 = load i64, i64* %RAX.i996
  %4790 = add i64 %4788, -224
  %4791 = add i64 %4790, %4789
  %4792 = load i64, i64* %PC.i995
  %4793 = add i64 %4792, 8
  store i64 %4793, i64* %PC.i995
  %4794 = inttoptr i64 %4791 to i8*
  %4795 = load i8, i8* %4794
  %4796 = sext i8 %4795 to i64
  %4797 = and i64 %4796, 4294967295
  store i64 %4797, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_43a77a, %struct.Memory** %MEMORY
  %loadMem_43a782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4799 = getelementptr inbounds %struct.GPR, %struct.GPR* %4798, i32 0, i32 33
  %4800 = getelementptr inbounds %struct.Reg, %struct.Reg* %4799, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %4800 to i64*
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 1
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %4803 to i64*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 15
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RBP.i994 = bitcast %union.anon* %4806 to i64*
  %4807 = load i64, i64* %RBP.i994
  %4808 = sub i64 %4807, 368
  %4809 = load i64, i64* %PC.i992
  %4810 = add i64 %4809, 7
  store i64 %4810, i64* %PC.i992
  %4811 = inttoptr i64 %4808 to i64*
  %4812 = load i64, i64* %4811
  store i64 %4812, i64* %RAX.i993, align 8
  store %struct.Memory* %loadMem_43a782, %struct.Memory** %MEMORY
  %loadMem_43a789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 33
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %4815 to i64*
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 1
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 7
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %RDX.i991 = bitcast %union.anon* %4821 to i64*
  %4822 = load i64, i64* %RAX.i990
  %4823 = add i64 %4822, 1
  %4824 = load i64, i64* %PC.i989
  %4825 = add i64 %4824, 4
  store i64 %4825, i64* %PC.i989
  %4826 = inttoptr i64 %4823 to i8*
  %4827 = load i8, i8* %4826
  %4828 = sext i8 %4827 to i64
  %4829 = and i64 %4828, 4294967295
  store i64 %4829, i64* %RDX.i991, align 8
  store %struct.Memory* %loadMem_43a789, %struct.Memory** %MEMORY
  %loadMem_43a78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 33
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %4832 to i64*
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 5
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %ECX.i987 = bitcast %union.anon* %4835 to i32*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 7
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %EDX.i988 = bitcast %union.anon* %4838 to i32*
  %4839 = load i32, i32* %ECX.i987
  %4840 = zext i32 %4839 to i64
  %4841 = load i32, i32* %EDX.i988
  %4842 = zext i32 %4841 to i64
  %4843 = load i64, i64* %PC.i986
  %4844 = add i64 %4843, 2
  store i64 %4844, i64* %PC.i986
  %4845 = sub i32 %4839, %4841
  %4846 = icmp ult i32 %4839, %4841
  %4847 = zext i1 %4846 to i8
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4847, i8* %4848, align 1
  %4849 = and i32 %4845, 255
  %4850 = call i32 @llvm.ctpop.i32(i32 %4849)
  %4851 = trunc i32 %4850 to i8
  %4852 = and i8 %4851, 1
  %4853 = xor i8 %4852, 1
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4853, i8* %4854, align 1
  %4855 = xor i64 %4842, %4840
  %4856 = trunc i64 %4855 to i32
  %4857 = xor i32 %4856, %4845
  %4858 = lshr i32 %4857, 4
  %4859 = trunc i32 %4858 to i8
  %4860 = and i8 %4859, 1
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4860, i8* %4861, align 1
  %4862 = icmp eq i32 %4845, 0
  %4863 = zext i1 %4862 to i8
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4863, i8* %4864, align 1
  %4865 = lshr i32 %4845, 31
  %4866 = trunc i32 %4865 to i8
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4866, i8* %4867, align 1
  %4868 = lshr i32 %4839, 31
  %4869 = lshr i32 %4841, 31
  %4870 = xor i32 %4869, %4868
  %4871 = xor i32 %4865, %4868
  %4872 = add i32 %4871, %4870
  %4873 = icmp eq i32 %4872, 2
  %4874 = zext i1 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4874, i8* %4875, align 1
  store %struct.Memory* %loadMem_43a78d, %struct.Memory** %MEMORY
  %loadMem_43a78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 33
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %4878 to i64*
  %4879 = load i64, i64* %PC.i985
  %4880 = add i64 %4879, 16
  %4881 = load i64, i64* %PC.i985
  %4882 = add i64 %4881, 6
  %4883 = load i64, i64* %PC.i985
  %4884 = add i64 %4883, 6
  store i64 %4884, i64* %PC.i985
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4886 = load i8, i8* %4885, align 1
  %4887 = icmp ne i8 %4886, 0
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4889 = load i8, i8* %4888, align 1
  %4890 = icmp ne i8 %4889, 0
  %4891 = xor i1 %4887, %4890
  %4892 = xor i1 %4891, true
  %4893 = zext i1 %4892 to i8
  store i8 %4893, i8* %BRANCH_TAKEN, align 1
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4895 = select i1 %4891, i64 %4882, i64 %4880
  store i64 %4895, i64* %4894, align 8
  store %struct.Memory* %loadMem_43a78f, %struct.Memory** %MEMORY
  %loadBr_43a78f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a78f = icmp eq i8 %loadBr_43a78f, 1
  br i1 %cmpBr_43a78f, label %block_.L_43a79f, label %block_.L_43a795

block_.L_43a795:                                  ; preds = %block_43a773, %block_43a752, %block_.L_43a6e2
  %loadMem_43a795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 33
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %4898 to i64*
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 15
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %4901 to i64*
  %4902 = load i64, i64* %RBP.i984
  %4903 = sub i64 %4902, 376
  %4904 = load i64, i64* %PC.i983
  %4905 = add i64 %4904, 10
  store i64 %4905, i64* %PC.i983
  %4906 = inttoptr i64 %4903 to i32*
  store i32 0, i32* %4906
  store %struct.Memory* %loadMem_43a795, %struct.Memory** %MEMORY
  br label %block_.L_43a79f

block_.L_43a79f:                                  ; preds = %block_.L_43a795, %block_43a773
  %loadMem_43a79f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 33
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %4909 to i64*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4911 = getelementptr inbounds %struct.GPR, %struct.GPR* %4910, i32 0, i32 15
  %4912 = getelementptr inbounds %struct.Reg, %struct.Reg* %4911, i32 0, i32 0
  %RBP.i982 = bitcast %union.anon* %4912 to i64*
  %4913 = load i64, i64* %RBP.i982
  %4914 = sub i64 %4913, 376
  %4915 = load i64, i64* %PC.i981
  %4916 = add i64 %4915, 7
  store i64 %4916, i64* %PC.i981
  %4917 = inttoptr i64 %4914 to i32*
  %4918 = load i32, i32* %4917
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4919, align 1
  %4920 = and i32 %4918, 255
  %4921 = call i32 @llvm.ctpop.i32(i32 %4920)
  %4922 = trunc i32 %4921 to i8
  %4923 = and i8 %4922, 1
  %4924 = xor i8 %4923, 1
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4924, i8* %4925, align 1
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4926, align 1
  %4927 = icmp eq i32 %4918, 0
  %4928 = zext i1 %4927 to i8
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4928, i8* %4929, align 1
  %4930 = lshr i32 %4918, 31
  %4931 = trunc i32 %4930 to i8
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4931, i8* %4932, align 1
  %4933 = lshr i32 %4918, 31
  %4934 = xor i32 %4930, %4933
  %4935 = add i32 %4934, %4933
  %4936 = icmp eq i32 %4935, 2
  %4937 = zext i1 %4936 to i8
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4937, i8* %4938, align 1
  store %struct.Memory* %loadMem_43a79f, %struct.Memory** %MEMORY
  %loadMem_43a7a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 33
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %4941 to i64*
  %4942 = load i64, i64* %PC.i980
  %4943 = add i64 %4942, 151
  %4944 = load i64, i64* %PC.i980
  %4945 = add i64 %4944, 6
  %4946 = load i64, i64* %PC.i980
  %4947 = add i64 %4946, 6
  store i64 %4947, i64* %PC.i980
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4949 = load i8, i8* %4948, align 1
  store i8 %4949, i8* %BRANCH_TAKEN, align 1
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4951 = icmp ne i8 %4949, 0
  %4952 = select i1 %4951, i64 %4943, i64 %4945
  store i64 %4952, i64* %4950, align 8
  store %struct.Memory* %loadMem_43a7a6, %struct.Memory** %MEMORY
  %loadBr_43a7a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7a6 = icmp eq i8 %loadBr_43a7a6, 1
  br i1 %cmpBr_43a7a6, label %block_.L_43a83d, label %block_43a7ac

block_43a7ac:                                     ; preds = %block_.L_43a79f
  %loadMem_43a7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 33
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %4955 to i64*
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 1
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %4958 to i64*
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 15
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %4961 to i64*
  %4962 = load i64, i64* %RBP.i979
  %4963 = sub i64 %4962, 372
  %4964 = load i64, i64* %PC.i977
  %4965 = add i64 %4964, 7
  store i64 %4965, i64* %PC.i977
  %4966 = inttoptr i64 %4963 to i32*
  %4967 = load i32, i32* %4966
  %4968 = sext i32 %4967 to i64
  store i64 %4968, i64* %RAX.i978, align 8
  store %struct.Memory* %loadMem_43a7ac, %struct.Memory** %MEMORY
  %loadMem_43a7b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 33
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %4971 to i64*
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 1
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %4974 to i64*
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 15
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %4977 to i64*
  %4978 = load i64, i64* %RBP.i976
  %4979 = load i64, i64* %RAX.i975
  %4980 = mul i64 %4979, 4
  %4981 = add i64 %4978, -160
  %4982 = add i64 %4981, %4980
  %4983 = load i64, i64* %PC.i974
  %4984 = add i64 %4983, 8
  store i64 %4984, i64* %PC.i974
  %4985 = inttoptr i64 %4982 to i32*
  %4986 = load i32, i32* %4985
  %4987 = sext i32 %4986 to i64
  store i64 %4987, i64* %RAX.i975, align 8
  store %struct.Memory* %loadMem_43a7b3, %struct.Memory** %MEMORY
  %loadMem_43a7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 33
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %4990 to i64*
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 1
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %RAX.i972 = bitcast %union.anon* %4993 to i64*
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4995 = getelementptr inbounds %struct.GPR, %struct.GPR* %4994, i32 0, i32 5
  %4996 = getelementptr inbounds %struct.Reg, %struct.Reg* %4995, i32 0, i32 0
  %RCX.i973 = bitcast %union.anon* %4996 to i64*
  %4997 = load i64, i64* %RAX.i972
  %4998 = add i64 %4997, 12099168
  %4999 = load i64, i64* %PC.i971
  %5000 = add i64 %4999, 8
  store i64 %5000, i64* %PC.i971
  %5001 = inttoptr i64 %4998 to i8*
  %5002 = load i8, i8* %5001
  %5003 = zext i8 %5002 to i64
  store i64 %5003, i64* %RCX.i973, align 8
  store %struct.Memory* %loadMem_43a7bb, %struct.Memory** %MEMORY
  %loadMem_43a7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5005 = getelementptr inbounds %struct.GPR, %struct.GPR* %5004, i32 0, i32 33
  %5006 = getelementptr inbounds %struct.Reg, %struct.Reg* %5005, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %5006 to i64*
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 5
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %ECX.i970 = bitcast %union.anon* %5009 to i32*
  %5010 = load i32, i32* %ECX.i970
  %5011 = zext i32 %5010 to i64
  %5012 = load i64, i64* %PC.i969
  %5013 = add i64 %5012, 3
  store i64 %5013, i64* %PC.i969
  %5014 = sub i32 %5010, 1
  %5015 = icmp ult i32 %5010, 1
  %5016 = zext i1 %5015 to i8
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5016, i8* %5017, align 1
  %5018 = and i32 %5014, 255
  %5019 = call i32 @llvm.ctpop.i32(i32 %5018)
  %5020 = trunc i32 %5019 to i8
  %5021 = and i8 %5020, 1
  %5022 = xor i8 %5021, 1
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5022, i8* %5023, align 1
  %5024 = xor i64 1, %5011
  %5025 = trunc i64 %5024 to i32
  %5026 = xor i32 %5025, %5014
  %5027 = lshr i32 %5026, 4
  %5028 = trunc i32 %5027 to i8
  %5029 = and i8 %5028, 1
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5029, i8* %5030, align 1
  %5031 = icmp eq i32 %5014, 0
  %5032 = zext i1 %5031 to i8
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5032, i8* %5033, align 1
  %5034 = lshr i32 %5014, 31
  %5035 = trunc i32 %5034 to i8
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5035, i8* %5036, align 1
  %5037 = lshr i32 %5010, 31
  %5038 = xor i32 %5034, %5037
  %5039 = add i32 %5038, %5037
  %5040 = icmp eq i32 %5039, 2
  %5041 = zext i1 %5040 to i8
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5041, i8* %5042, align 1
  store %struct.Memory* %loadMem_43a7c3, %struct.Memory** %MEMORY
  %loadMem_43a7c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 33
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %5045 to i64*
  %5046 = load i64, i64* %PC.i968
  %5047 = add i64 %5046, 38
  %5048 = load i64, i64* %PC.i968
  %5049 = add i64 %5048, 6
  %5050 = load i64, i64* %PC.i968
  %5051 = add i64 %5050, 6
  store i64 %5051, i64* %PC.i968
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5053 = load i8, i8* %5052, align 1
  store i8 %5053, i8* %BRANCH_TAKEN, align 1
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5055 = icmp ne i8 %5053, 0
  %5056 = select i1 %5055, i64 %5047, i64 %5049
  store i64 %5056, i64* %5054, align 8
  store %struct.Memory* %loadMem_43a7c6, %struct.Memory** %MEMORY
  %loadBr_43a7c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7c6 = icmp eq i8 %loadBr_43a7c6, 1
  br i1 %cmpBr_43a7c6, label %block_.L_43a7ec, label %block_43a7cc

block_43a7cc:                                     ; preds = %block_43a7ac
  %loadMem_43a7cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5058 = getelementptr inbounds %struct.GPR, %struct.GPR* %5057, i32 0, i32 33
  %5059 = getelementptr inbounds %struct.Reg, %struct.Reg* %5058, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %5059 to i64*
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5061 = getelementptr inbounds %struct.GPR, %struct.GPR* %5060, i32 0, i32 1
  %5062 = getelementptr inbounds %struct.Reg, %struct.Reg* %5061, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %5062 to i64*
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5064 = getelementptr inbounds %struct.GPR, %struct.GPR* %5063, i32 0, i32 15
  %5065 = getelementptr inbounds %struct.Reg, %struct.Reg* %5064, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %5065 to i64*
  %5066 = load i64, i64* %RBP.i967
  %5067 = sub i64 %5066, 372
  %5068 = load i64, i64* %PC.i965
  %5069 = add i64 %5068, 7
  store i64 %5069, i64* %PC.i965
  %5070 = inttoptr i64 %5067 to i32*
  %5071 = load i32, i32* %5070
  %5072 = sext i32 %5071 to i64
  store i64 %5072, i64* %RAX.i966, align 8
  store %struct.Memory* %loadMem_43a7cc, %struct.Memory** %MEMORY
  %loadMem_43a7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 33
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %5075 to i64*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 1
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %5078 to i64*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 15
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %5081 to i64*
  %5082 = load i64, i64* %RBP.i964
  %5083 = load i64, i64* %RAX.i963
  %5084 = mul i64 %5083, 4
  %5085 = add i64 %5082, -160
  %5086 = add i64 %5085, %5084
  %5087 = load i64, i64* %PC.i962
  %5088 = add i64 %5087, 8
  store i64 %5088, i64* %PC.i962
  %5089 = inttoptr i64 %5086 to i32*
  %5090 = load i32, i32* %5089
  %5091 = sext i32 %5090 to i64
  store i64 %5091, i64* %RAX.i963, align 8
  store %struct.Memory* %loadMem_43a7d3, %struct.Memory** %MEMORY
  %loadMem_43a7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %5094 to i64*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 1
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %5097 to i64*
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 5
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %RCX.i961 = bitcast %union.anon* %5100 to i64*
  %5101 = load i64, i64* %RAX.i960
  %5102 = add i64 %5101, 12099168
  %5103 = load i64, i64* %PC.i959
  %5104 = add i64 %5103, 8
  store i64 %5104, i64* %PC.i959
  %5105 = inttoptr i64 %5102 to i8*
  %5106 = load i8, i8* %5105
  %5107 = zext i8 %5106 to i64
  store i64 %5107, i64* %RCX.i961, align 8
  store %struct.Memory* %loadMem_43a7db, %struct.Memory** %MEMORY
  %loadMem_43a7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5109 = getelementptr inbounds %struct.GPR, %struct.GPR* %5108, i32 0, i32 33
  %5110 = getelementptr inbounds %struct.Reg, %struct.Reg* %5109, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %5110 to i64*
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5112 = getelementptr inbounds %struct.GPR, %struct.GPR* %5111, i32 0, i32 5
  %5113 = getelementptr inbounds %struct.Reg, %struct.Reg* %5112, i32 0, i32 0
  %ECX.i958 = bitcast %union.anon* %5113 to i32*
  %5114 = load i32, i32* %ECX.i958
  %5115 = zext i32 %5114 to i64
  %5116 = load i64, i64* %PC.i957
  %5117 = add i64 %5116, 3
  store i64 %5117, i64* %PC.i957
  %5118 = sub i32 %5114, 2
  %5119 = icmp ult i32 %5114, 2
  %5120 = zext i1 %5119 to i8
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5120, i8* %5121, align 1
  %5122 = and i32 %5118, 255
  %5123 = call i32 @llvm.ctpop.i32(i32 %5122)
  %5124 = trunc i32 %5123 to i8
  %5125 = and i8 %5124, 1
  %5126 = xor i8 %5125, 1
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5126, i8* %5127, align 1
  %5128 = xor i64 2, %5115
  %5129 = trunc i64 %5128 to i32
  %5130 = xor i32 %5129, %5118
  %5131 = lshr i32 %5130, 4
  %5132 = trunc i32 %5131 to i8
  %5133 = and i8 %5132, 1
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5133, i8* %5134, align 1
  %5135 = icmp eq i32 %5118, 0
  %5136 = zext i1 %5135 to i8
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5136, i8* %5137, align 1
  %5138 = lshr i32 %5118, 31
  %5139 = trunc i32 %5138 to i8
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5139, i8* %5140, align 1
  %5141 = lshr i32 %5114, 31
  %5142 = xor i32 %5138, %5141
  %5143 = add i32 %5142, %5141
  %5144 = icmp eq i32 %5143, 2
  %5145 = zext i1 %5144 to i8
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5145, i8* %5146, align 1
  store %struct.Memory* %loadMem_43a7e3, %struct.Memory** %MEMORY
  %loadMem_43a7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 33
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %5149 to i64*
  %5150 = load i64, i64* %PC.i956
  %5151 = add i64 %5150, 44
  %5152 = load i64, i64* %PC.i956
  %5153 = add i64 %5152, 6
  %5154 = load i64, i64* %PC.i956
  %5155 = add i64 %5154, 6
  store i64 %5155, i64* %PC.i956
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5157 = load i8, i8* %5156, align 1
  %5158 = icmp eq i8 %5157, 0
  %5159 = zext i1 %5158 to i8
  store i8 %5159, i8* %BRANCH_TAKEN, align 1
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5161 = select i1 %5158, i64 %5151, i64 %5153
  store i64 %5161, i64* %5160, align 8
  store %struct.Memory* %loadMem_43a7e6, %struct.Memory** %MEMORY
  %loadBr_43a7e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7e6 = icmp eq i8 %loadBr_43a7e6, 1
  br i1 %cmpBr_43a7e6, label %block_.L_43a812, label %block_.L_43a7ec

block_.L_43a7ec:                                  ; preds = %block_43a7cc, %block_43a7ac
  %loadMem_43a7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5163 = getelementptr inbounds %struct.GPR, %struct.GPR* %5162, i32 0, i32 33
  %5164 = getelementptr inbounds %struct.Reg, %struct.Reg* %5163, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %5164 to i64*
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 1
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %5167 to i64*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 15
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %5170 to i64*
  %5171 = load i64, i64* %RBP.i955
  %5172 = sub i64 %5171, 368
  %5173 = load i64, i64* %PC.i953
  %5174 = add i64 %5173, 7
  store i64 %5174, i64* %PC.i953
  %5175 = inttoptr i64 %5172 to i64*
  %5176 = load i64, i64* %5175
  store i64 %5176, i64* %RAX.i954, align 8
  store %struct.Memory* %loadMem_43a7ec, %struct.Memory** %MEMORY
  %loadMem_43a7f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 33
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 1
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RAX.i951 = bitcast %union.anon* %5182 to i64*
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 5
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %RCX.i952 = bitcast %union.anon* %5185 to i64*
  %5186 = load i64, i64* %RAX.i951
  %5187 = add i64 %5186, 2
  %5188 = load i64, i64* %PC.i950
  %5189 = add i64 %5188, 4
  store i64 %5189, i64* %PC.i950
  %5190 = inttoptr i64 %5187 to i8*
  %5191 = load i8, i8* %5190
  %5192 = sext i8 %5191 to i64
  %5193 = and i64 %5192, 4294967295
  store i64 %5193, i64* %RCX.i952, align 8
  store %struct.Memory* %loadMem_43a7f3, %struct.Memory** %MEMORY
  %loadMem_43a7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5195 = getelementptr inbounds %struct.GPR, %struct.GPR* %5194, i32 0, i32 33
  %5196 = getelementptr inbounds %struct.Reg, %struct.Reg* %5195, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %5196 to i64*
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5198 = getelementptr inbounds %struct.GPR, %struct.GPR* %5197, i32 0, i32 5
  %5199 = getelementptr inbounds %struct.Reg, %struct.Reg* %5198, i32 0, i32 0
  %RCX.i949 = bitcast %union.anon* %5199 to i64*
  %5200 = load i64, i64* %RCX.i949
  %5201 = load i64, i64* %PC.i948
  %5202 = add i64 %5201, 3
  store i64 %5202, i64* %PC.i948
  %5203 = and i64 2, %5200
  %5204 = trunc i64 %5203 to i32
  store i64 %5203, i64* %RCX.i949, align 8
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5205, align 1
  %5206 = and i32 %5204, 255
  %5207 = call i32 @llvm.ctpop.i32(i32 %5206)
  %5208 = trunc i32 %5207 to i8
  %5209 = and i8 %5208, 1
  %5210 = xor i8 %5209, 1
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5210, i8* %5211, align 1
  %5212 = icmp eq i32 %5204, 0
  %5213 = zext i1 %5212 to i8
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5213, i8* %5214, align 1
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5215, align 1
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5216, align 1
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5217, align 1
  store %struct.Memory* %loadMem_43a7f7, %struct.Memory** %MEMORY
  %loadMem_43a7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5219 = getelementptr inbounds %struct.GPR, %struct.GPR* %5218, i32 0, i32 33
  %5220 = getelementptr inbounds %struct.Reg, %struct.Reg* %5219, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %5220 to i64*
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5222 = getelementptr inbounds %struct.GPR, %struct.GPR* %5221, i32 0, i32 5
  %5223 = getelementptr inbounds %struct.Reg, %struct.Reg* %5222, i32 0, i32 0
  %ECX.i947 = bitcast %union.anon* %5223 to i32*
  %5224 = load i32, i32* %ECX.i947
  %5225 = zext i32 %5224 to i64
  %5226 = load i64, i64* %PC.i946
  %5227 = add i64 %5226, 3
  store i64 %5227, i64* %PC.i946
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5228, align 1
  %5229 = and i32 %5224, 255
  %5230 = call i32 @llvm.ctpop.i32(i32 %5229)
  %5231 = trunc i32 %5230 to i8
  %5232 = and i8 %5231, 1
  %5233 = xor i8 %5232, 1
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5233, i8* %5234, align 1
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5235, align 1
  %5236 = icmp eq i32 %5224, 0
  %5237 = zext i1 %5236 to i8
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5237, i8* %5238, align 1
  %5239 = lshr i32 %5224, 31
  %5240 = trunc i32 %5239 to i8
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5240, i8* %5241, align 1
  %5242 = lshr i32 %5224, 31
  %5243 = xor i32 %5239, %5242
  %5244 = add i32 %5243, %5242
  %5245 = icmp eq i32 %5244, 2
  %5246 = zext i1 %5245 to i8
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5246, i8* %5247, align 1
  store %struct.Memory* %loadMem_43a7fa, %struct.Memory** %MEMORY
  %loadMem_43a7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 33
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %5250 to i64*
  %5251 = load i64, i64* %PC.i945
  %5252 = add i64 %5251, 16
  %5253 = load i64, i64* %PC.i945
  %5254 = add i64 %5253, 6
  %5255 = load i64, i64* %PC.i945
  %5256 = add i64 %5255, 6
  store i64 %5256, i64* %PC.i945
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5258 = load i8, i8* %5257, align 1
  %5259 = icmp eq i8 %5258, 0
  %5260 = zext i1 %5259 to i8
  store i8 %5260, i8* %BRANCH_TAKEN, align 1
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5262 = select i1 %5259, i64 %5252, i64 %5254
  store i64 %5262, i64* %5261, align 8
  store %struct.Memory* %loadMem_43a7fd, %struct.Memory** %MEMORY
  %loadBr_43a7fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7fd = icmp eq i8 %loadBr_43a7fd, 1
  br i1 %cmpBr_43a7fd, label %block_.L_43a80d, label %block_43a803

block_43a803:                                     ; preds = %block_.L_43a7ec
  %loadMem_43a803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 33
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %5265 to i64*
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 15
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %5268 to i64*
  %5269 = load i64, i64* %RBP.i944
  %5270 = sub i64 %5269, 376
  %5271 = load i64, i64* %PC.i943
  %5272 = add i64 %5271, 10
  store i64 %5272, i64* %PC.i943
  %5273 = inttoptr i64 %5270 to i32*
  store i32 0, i32* %5273
  store %struct.Memory* %loadMem_43a803, %struct.Memory** %MEMORY
  br label %block_.L_43a80d

block_.L_43a80d:                                  ; preds = %block_43a803, %block_.L_43a7ec
  %loadMem_43a80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5275 = getelementptr inbounds %struct.GPR, %struct.GPR* %5274, i32 0, i32 33
  %5276 = getelementptr inbounds %struct.Reg, %struct.Reg* %5275, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %5276 to i64*
  %5277 = load i64, i64* %PC.i942
  %5278 = add i64 %5277, 43
  %5279 = load i64, i64* %PC.i942
  %5280 = add i64 %5279, 5
  store i64 %5280, i64* %PC.i942
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5278, i64* %5281, align 8
  store %struct.Memory* %loadMem_43a80d, %struct.Memory** %MEMORY
  br label %block_.L_43a838

block_.L_43a812:                                  ; preds = %block_43a7cc
  %loadMem_43a812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 33
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %5284 to i64*
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 1
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %5287 to i64*
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 15
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %5290 to i64*
  %5291 = load i64, i64* %RBP.i941
  %5292 = sub i64 %5291, 368
  %5293 = load i64, i64* %PC.i939
  %5294 = add i64 %5293, 7
  store i64 %5294, i64* %PC.i939
  %5295 = inttoptr i64 %5292 to i64*
  %5296 = load i64, i64* %5295
  store i64 %5296, i64* %RAX.i940, align 8
  store %struct.Memory* %loadMem_43a812, %struct.Memory** %MEMORY
  %loadMem_43a819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 33
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 1
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %5302 to i64*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 5
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %RCX.i938 = bitcast %union.anon* %5305 to i64*
  %5306 = load i64, i64* %RAX.i937
  %5307 = add i64 %5306, 2
  %5308 = load i64, i64* %PC.i936
  %5309 = add i64 %5308, 4
  store i64 %5309, i64* %PC.i936
  %5310 = inttoptr i64 %5307 to i8*
  %5311 = load i8, i8* %5310
  %5312 = sext i8 %5311 to i64
  %5313 = and i64 %5312, 4294967295
  store i64 %5313, i64* %RCX.i938, align 8
  store %struct.Memory* %loadMem_43a819, %struct.Memory** %MEMORY
  %loadMem_43a81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 33
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %5316 to i64*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 5
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %5319 to i64*
  %5320 = load i64, i64* %RCX.i935
  %5321 = load i64, i64* %PC.i934
  %5322 = add i64 %5321, 3
  store i64 %5322, i64* %PC.i934
  %5323 = and i64 1, %5320
  %5324 = trunc i64 %5323 to i32
  store i64 %5323, i64* %RCX.i935, align 8
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5325, align 1
  %5326 = and i32 %5324, 255
  %5327 = call i32 @llvm.ctpop.i32(i32 %5326)
  %5328 = trunc i32 %5327 to i8
  %5329 = and i8 %5328, 1
  %5330 = xor i8 %5329, 1
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5330, i8* %5331, align 1
  %5332 = icmp eq i32 %5324, 0
  %5333 = zext i1 %5332 to i8
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5333, i8* %5334, align 1
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5335, align 1
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5336, align 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5337, align 1
  store %struct.Memory* %loadMem_43a81d, %struct.Memory** %MEMORY
  %loadMem_43a820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 5
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %ECX.i933 = bitcast %union.anon* %5343 to i32*
  %5344 = load i32, i32* %ECX.i933
  %5345 = zext i32 %5344 to i64
  %5346 = load i64, i64* %PC.i932
  %5347 = add i64 %5346, 3
  store i64 %5347, i64* %PC.i932
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5348, align 1
  %5349 = and i32 %5344, 255
  %5350 = call i32 @llvm.ctpop.i32(i32 %5349)
  %5351 = trunc i32 %5350 to i8
  %5352 = and i8 %5351, 1
  %5353 = xor i8 %5352, 1
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5353, i8* %5354, align 1
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5355, align 1
  %5356 = icmp eq i32 %5344, 0
  %5357 = zext i1 %5356 to i8
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5357, i8* %5358, align 1
  %5359 = lshr i32 %5344, 31
  %5360 = trunc i32 %5359 to i8
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5360, i8* %5361, align 1
  %5362 = lshr i32 %5344, 31
  %5363 = xor i32 %5359, %5362
  %5364 = add i32 %5363, %5362
  %5365 = icmp eq i32 %5364, 2
  %5366 = zext i1 %5365 to i8
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5366, i8* %5367, align 1
  store %struct.Memory* %loadMem_43a820, %struct.Memory** %MEMORY
  %loadMem_43a823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5369 = getelementptr inbounds %struct.GPR, %struct.GPR* %5368, i32 0, i32 33
  %5370 = getelementptr inbounds %struct.Reg, %struct.Reg* %5369, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %5370 to i64*
  %5371 = load i64, i64* %PC.i931
  %5372 = add i64 %5371, 16
  %5373 = load i64, i64* %PC.i931
  %5374 = add i64 %5373, 6
  %5375 = load i64, i64* %PC.i931
  %5376 = add i64 %5375, 6
  store i64 %5376, i64* %PC.i931
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5378 = load i8, i8* %5377, align 1
  %5379 = icmp eq i8 %5378, 0
  %5380 = zext i1 %5379 to i8
  store i8 %5380, i8* %BRANCH_TAKEN, align 1
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5382 = select i1 %5379, i64 %5372, i64 %5374
  store i64 %5382, i64* %5381, align 8
  store %struct.Memory* %loadMem_43a823, %struct.Memory** %MEMORY
  %loadBr_43a823 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a823 = icmp eq i8 %loadBr_43a823, 1
  br i1 %cmpBr_43a823, label %block_.L_43a833, label %block_43a829

block_43a829:                                     ; preds = %block_.L_43a812
  %loadMem_43a829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5384 = getelementptr inbounds %struct.GPR, %struct.GPR* %5383, i32 0, i32 33
  %5385 = getelementptr inbounds %struct.Reg, %struct.Reg* %5384, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %5385 to i64*
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5387 = getelementptr inbounds %struct.GPR, %struct.GPR* %5386, i32 0, i32 15
  %5388 = getelementptr inbounds %struct.Reg, %struct.Reg* %5387, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %5388 to i64*
  %5389 = load i64, i64* %RBP.i930
  %5390 = sub i64 %5389, 376
  %5391 = load i64, i64* %PC.i929
  %5392 = add i64 %5391, 10
  store i64 %5392, i64* %PC.i929
  %5393 = inttoptr i64 %5390 to i32*
  store i32 0, i32* %5393
  store %struct.Memory* %loadMem_43a829, %struct.Memory** %MEMORY
  br label %block_.L_43a833

block_.L_43a833:                                  ; preds = %block_43a829, %block_.L_43a812
  %loadMem_43a833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5395 = getelementptr inbounds %struct.GPR, %struct.GPR* %5394, i32 0, i32 33
  %5396 = getelementptr inbounds %struct.Reg, %struct.Reg* %5395, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %5396 to i64*
  %5397 = load i64, i64* %PC.i928
  %5398 = add i64 %5397, 5
  %5399 = load i64, i64* %PC.i928
  %5400 = add i64 %5399, 5
  store i64 %5400, i64* %PC.i928
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5398, i64* %5401, align 8
  store %struct.Memory* %loadMem_43a833, %struct.Memory** %MEMORY
  br label %block_.L_43a838

block_.L_43a838:                                  ; preds = %block_.L_43a833, %block_.L_43a80d
  %loadMem_43a838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 33
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %5404 to i64*
  %5405 = load i64, i64* %PC.i927
  %5406 = add i64 %5405, 5
  %5407 = load i64, i64* %PC.i927
  %5408 = add i64 %5407, 5
  store i64 %5408, i64* %PC.i927
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5406, i64* %5409, align 8
  store %struct.Memory* %loadMem_43a838, %struct.Memory** %MEMORY
  br label %block_.L_43a83d

block_.L_43a83d:                                  ; preds = %block_.L_43a838, %block_.L_43a79f
  %loadMem_43a83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 33
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %5412 to i64*
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 15
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %RBP.i926 = bitcast %union.anon* %5415 to i64*
  %5416 = load i64, i64* %RBP.i926
  %5417 = sub i64 %5416, 376
  %5418 = load i64, i64* %PC.i925
  %5419 = add i64 %5418, 7
  store i64 %5419, i64* %PC.i925
  %5420 = inttoptr i64 %5417 to i32*
  %5421 = load i32, i32* %5420
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5422, align 1
  %5423 = and i32 %5421, 255
  %5424 = call i32 @llvm.ctpop.i32(i32 %5423)
  %5425 = trunc i32 %5424 to i8
  %5426 = and i8 %5425, 1
  %5427 = xor i8 %5426, 1
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5427, i8* %5428, align 1
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5429, align 1
  %5430 = icmp eq i32 %5421, 0
  %5431 = zext i1 %5430 to i8
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5431, i8* %5432, align 1
  %5433 = lshr i32 %5421, 31
  %5434 = trunc i32 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5434, i8* %5435, align 1
  %5436 = lshr i32 %5421, 31
  %5437 = xor i32 %5433, %5436
  %5438 = add i32 %5437, %5436
  %5439 = icmp eq i32 %5438, 2
  %5440 = zext i1 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5440, i8* %5441, align 1
  store %struct.Memory* %loadMem_43a83d, %struct.Memory** %MEMORY
  %loadMem_43a844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 33
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %5444 to i64*
  %5445 = load i64, i64* %PC.i924
  %5446 = add i64 %5445, 475
  %5447 = load i64, i64* %PC.i924
  %5448 = add i64 %5447, 6
  %5449 = load i64, i64* %PC.i924
  %5450 = add i64 %5449, 6
  store i64 %5450, i64* %PC.i924
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5452 = load i8, i8* %5451, align 1
  store i8 %5452, i8* %BRANCH_TAKEN, align 1
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5454 = icmp ne i8 %5452, 0
  %5455 = select i1 %5454, i64 %5446, i64 %5448
  store i64 %5455, i64* %5453, align 8
  store %struct.Memory* %loadMem_43a844, %struct.Memory** %MEMORY
  %loadBr_43a844 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a844 = icmp eq i8 %loadBr_43a844, 1
  br i1 %cmpBr_43a844, label %block_.L_43aa1f, label %block_43a84a

block_43a84a:                                     ; preds = %block_.L_43a83d
  %loadMem_43a84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 33
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %5458 to i64*
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5460 = getelementptr inbounds %struct.GPR, %struct.GPR* %5459, i32 0, i32 15
  %5461 = getelementptr inbounds %struct.Reg, %struct.Reg* %5460, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %5461 to i64*
  %5462 = load i64, i64* %RBP.i923
  %5463 = sub i64 %5462, 380
  %5464 = load i64, i64* %PC.i922
  %5465 = add i64 %5464, 10
  store i64 %5465, i64* %PC.i922
  %5466 = inttoptr i64 %5463 to i32*
  store i32 0, i32* %5466
  store %struct.Memory* %loadMem_43a84a, %struct.Memory** %MEMORY
  br label %block_.L_43a854

block_.L_43a854:                                  ; preds = %block_.L_43aa06, %block_43a84a
  %loadMem_43a854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 33
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %5469 to i64*
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 1
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %5472 to i64*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 15
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %5475 to i64*
  %5476 = load i64, i64* %RBP.i921
  %5477 = sub i64 %5476, 380
  %5478 = load i64, i64* %PC.i919
  %5479 = add i64 %5478, 6
  store i64 %5479, i64* %PC.i919
  %5480 = inttoptr i64 %5477 to i32*
  %5481 = load i32, i32* %5480
  %5482 = zext i32 %5481 to i64
  store i64 %5482, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_43a854, %struct.Memory** %MEMORY
  %loadMem_43a85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5484 = getelementptr inbounds %struct.GPR, %struct.GPR* %5483, i32 0, i32 33
  %5485 = getelementptr inbounds %struct.Reg, %struct.Reg* %5484, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %5485 to i64*
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 5
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %RCX.i917 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 15
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %5491 to i64*
  %5492 = load i64, i64* %RBP.i918
  %5493 = sub i64 %5492, 368
  %5494 = load i64, i64* %PC.i916
  %5495 = add i64 %5494, 7
  store i64 %5495, i64* %PC.i916
  %5496 = inttoptr i64 %5493 to i64*
  %5497 = load i64, i64* %5496
  store i64 %5497, i64* %RCX.i917, align 8
  store %struct.Memory* %loadMem_43a85a, %struct.Memory** %MEMORY
  %loadMem_43a861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5499 = getelementptr inbounds %struct.GPR, %struct.GPR* %5498, i32 0, i32 33
  %5500 = getelementptr inbounds %struct.Reg, %struct.Reg* %5499, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %5500 to i64*
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5502 = getelementptr inbounds %struct.GPR, %struct.GPR* %5501, i32 0, i32 5
  %5503 = getelementptr inbounds %struct.Reg, %struct.Reg* %5502, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %5503 to i64*
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5505 = getelementptr inbounds %struct.GPR, %struct.GPR* %5504, i32 0, i32 7
  %5506 = getelementptr inbounds %struct.Reg, %struct.Reg* %5505, i32 0, i32 0
  %RDX.i915 = bitcast %union.anon* %5506 to i64*
  %5507 = load i64, i64* %RCX.i914
  %5508 = add i64 %5507, 3
  %5509 = load i64, i64* %PC.i913
  %5510 = add i64 %5509, 4
  store i64 %5510, i64* %PC.i913
  %5511 = inttoptr i64 %5508 to i8*
  %5512 = load i8, i8* %5511
  %5513 = sext i8 %5512 to i64
  %5514 = and i64 %5513, 4294967295
  store i64 %5514, i64* %RDX.i915, align 8
  store %struct.Memory* %loadMem_43a861, %struct.Memory** %MEMORY
  %loadMem_43a865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 33
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %5517 to i64*
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 1
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %EAX.i911 = bitcast %union.anon* %5520 to i32*
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5522 = getelementptr inbounds %struct.GPR, %struct.GPR* %5521, i32 0, i32 7
  %5523 = getelementptr inbounds %struct.Reg, %struct.Reg* %5522, i32 0, i32 0
  %EDX.i912 = bitcast %union.anon* %5523 to i32*
  %5524 = load i32, i32* %EAX.i911
  %5525 = zext i32 %5524 to i64
  %5526 = load i32, i32* %EDX.i912
  %5527 = zext i32 %5526 to i64
  %5528 = load i64, i64* %PC.i910
  %5529 = add i64 %5528, 2
  store i64 %5529, i64* %PC.i910
  %5530 = sub i32 %5524, %5526
  %5531 = icmp ult i32 %5524, %5526
  %5532 = zext i1 %5531 to i8
  %5533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5532, i8* %5533, align 1
  %5534 = and i32 %5530, 255
  %5535 = call i32 @llvm.ctpop.i32(i32 %5534)
  %5536 = trunc i32 %5535 to i8
  %5537 = and i8 %5536, 1
  %5538 = xor i8 %5537, 1
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5538, i8* %5539, align 1
  %5540 = xor i64 %5527, %5525
  %5541 = trunc i64 %5540 to i32
  %5542 = xor i32 %5541, %5530
  %5543 = lshr i32 %5542, 4
  %5544 = trunc i32 %5543 to i8
  %5545 = and i8 %5544, 1
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5545, i8* %5546, align 1
  %5547 = icmp eq i32 %5530, 0
  %5548 = zext i1 %5547 to i8
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5548, i8* %5549, align 1
  %5550 = lshr i32 %5530, 31
  %5551 = trunc i32 %5550 to i8
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5551, i8* %5552, align 1
  %5553 = lshr i32 %5524, 31
  %5554 = lshr i32 %5526, 31
  %5555 = xor i32 %5554, %5553
  %5556 = xor i32 %5550, %5553
  %5557 = add i32 %5556, %5555
  %5558 = icmp eq i32 %5557, 2
  %5559 = zext i1 %5558 to i8
  %5560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5559, i8* %5560, align 1
  store %struct.Memory* %loadMem_43a865, %struct.Memory** %MEMORY
  %loadMem_43a867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 33
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %5563 to i64*
  %5564 = load i64, i64* %PC.i909
  %5565 = add i64 %5564, 435
  %5566 = load i64, i64* %PC.i909
  %5567 = add i64 %5566, 6
  %5568 = load i64, i64* %PC.i909
  %5569 = add i64 %5568, 6
  store i64 %5569, i64* %PC.i909
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5571 = load i8, i8* %5570, align 1
  %5572 = icmp ne i8 %5571, 0
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5574 = load i8, i8* %5573, align 1
  %5575 = icmp ne i8 %5574, 0
  %5576 = xor i1 %5572, %5575
  %5577 = xor i1 %5576, true
  %5578 = zext i1 %5577 to i8
  store i8 %5578, i8* %BRANCH_TAKEN, align 1
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5580 = select i1 %5576, i64 %5567, i64 %5565
  store i64 %5580, i64* %5579, align 8
  store %struct.Memory* %loadMem_43a867, %struct.Memory** %MEMORY
  %loadBr_43a867 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a867 = icmp eq i8 %loadBr_43a867, 1
  br i1 %cmpBr_43a867, label %block_.L_43aa1a, label %block_43a86d

block_43a86d:                                     ; preds = %block_.L_43a854
  %loadMem_43a86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 33
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %5583 to i64*
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5585 = getelementptr inbounds %struct.GPR, %struct.GPR* %5584, i32 0, i32 1
  %5586 = getelementptr inbounds %struct.Reg, %struct.Reg* %5585, i32 0, i32 0
  %RAX.i907 = bitcast %union.anon* %5586 to i64*
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 15
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %5589 to i64*
  %5590 = load i64, i64* %RBP.i908
  %5591 = sub i64 %5590, 368
  %5592 = load i64, i64* %PC.i906
  %5593 = add i64 %5592, 7
  store i64 %5593, i64* %PC.i906
  %5594 = inttoptr i64 %5591 to i64*
  %5595 = load i64, i64* %5594
  store i64 %5595, i64* %RAX.i907, align 8
  store %struct.Memory* %loadMem_43a86d, %struct.Memory** %MEMORY
  %loadMem_43a874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 33
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %5598 to i64*
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5600 = getelementptr inbounds %struct.GPR, %struct.GPR* %5599, i32 0, i32 5
  %5601 = getelementptr inbounds %struct.Reg, %struct.Reg* %5600, i32 0, i32 0
  %RCX.i904 = bitcast %union.anon* %5601 to i64*
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5603 = getelementptr inbounds %struct.GPR, %struct.GPR* %5602, i32 0, i32 15
  %5604 = getelementptr inbounds %struct.Reg, %struct.Reg* %5603, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %5604 to i64*
  %5605 = load i64, i64* %RBP.i905
  %5606 = sub i64 %5605, 380
  %5607 = load i64, i64* %PC.i903
  %5608 = add i64 %5607, 7
  store i64 %5608, i64* %PC.i903
  %5609 = inttoptr i64 %5606 to i32*
  %5610 = load i32, i32* %5609
  %5611 = sext i32 %5610 to i64
  store i64 %5611, i64* %RCX.i904, align 8
  store %struct.Memory* %loadMem_43a874, %struct.Memory** %MEMORY
  %loadMem_43a87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5613 = getelementptr inbounds %struct.GPR, %struct.GPR* %5612, i32 0, i32 33
  %5614 = getelementptr inbounds %struct.Reg, %struct.Reg* %5613, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %5614 to i64*
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5616 = getelementptr inbounds %struct.GPR, %struct.GPR* %5615, i32 0, i32 1
  %5617 = getelementptr inbounds %struct.Reg, %struct.Reg* %5616, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %5617 to i64*
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 5
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %5620 to i64*
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5622 = getelementptr inbounds %struct.GPR, %struct.GPR* %5621, i32 0, i32 7
  %5623 = getelementptr inbounds %struct.Reg, %struct.Reg* %5622, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %5623 to i64*
  %5624 = load i64, i64* %RAX.i900
  %5625 = load i64, i64* %RCX.i901
  %5626 = mul i64 %5625, 4
  %5627 = add i64 %5624, 4
  %5628 = add i64 %5627, %5626
  %5629 = load i64, i64* %PC.i899
  %5630 = add i64 %5629, 4
  store i64 %5630, i64* %PC.i899
  %5631 = inttoptr i64 %5628 to i32*
  %5632 = load i32, i32* %5631
  %5633 = zext i32 %5632 to i64
  store i64 %5633, i64* %RDX.i902, align 8
  store %struct.Memory* %loadMem_43a87b, %struct.Memory** %MEMORY
  %loadMem_43a87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5635 = getelementptr inbounds %struct.GPR, %struct.GPR* %5634, i32 0, i32 33
  %5636 = getelementptr inbounds %struct.Reg, %struct.Reg* %5635, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %5636 to i64*
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5638 = getelementptr inbounds %struct.GPR, %struct.GPR* %5637, i32 0, i32 7
  %5639 = getelementptr inbounds %struct.Reg, %struct.Reg* %5638, i32 0, i32 0
  %EDX.i897 = bitcast %union.anon* %5639 to i32*
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 15
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %5642 to i64*
  %5643 = load i32, i32* %EDX.i897
  %5644 = zext i32 %5643 to i64
  %5645 = load i64, i64* %RBP.i898
  %5646 = sub i64 %5645, 360
  %5647 = load i64, i64* %PC.i896
  %5648 = add i64 %5647, 6
  store i64 %5648, i64* %PC.i896
  %5649 = inttoptr i64 %5646 to i32*
  %5650 = load i32, i32* %5649
  %5651 = sub i32 %5643, %5650
  %5652 = icmp ult i32 %5643, %5650
  %5653 = zext i1 %5652 to i8
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5653, i8* %5654, align 1
  %5655 = and i32 %5651, 255
  %5656 = call i32 @llvm.ctpop.i32(i32 %5655)
  %5657 = trunc i32 %5656 to i8
  %5658 = and i8 %5657, 1
  %5659 = xor i8 %5658, 1
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5659, i8* %5660, align 1
  %5661 = xor i32 %5650, %5643
  %5662 = xor i32 %5661, %5651
  %5663 = lshr i32 %5662, 4
  %5664 = trunc i32 %5663 to i8
  %5665 = and i8 %5664, 1
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5665, i8* %5666, align 1
  %5667 = icmp eq i32 %5651, 0
  %5668 = zext i1 %5667 to i8
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5668, i8* %5669, align 1
  %5670 = lshr i32 %5651, 31
  %5671 = trunc i32 %5670 to i8
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5671, i8* %5672, align 1
  %5673 = lshr i32 %5643, 31
  %5674 = lshr i32 %5650, 31
  %5675 = xor i32 %5674, %5673
  %5676 = xor i32 %5670, %5673
  %5677 = add i32 %5676, %5675
  %5678 = icmp eq i32 %5677, 2
  %5679 = zext i1 %5678 to i8
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5679, i8* %5680, align 1
  store %struct.Memory* %loadMem_43a87f, %struct.Memory** %MEMORY
  %loadMem_43a885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 33
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %5683 to i64*
  %5684 = load i64, i64* %PC.i895
  %5685 = add i64 %5684, 380
  %5686 = load i64, i64* %PC.i895
  %5687 = add i64 %5686, 6
  %5688 = load i64, i64* %PC.i895
  %5689 = add i64 %5688, 6
  store i64 %5689, i64* %PC.i895
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5691 = load i8, i8* %5690, align 1
  %5692 = icmp ne i8 %5691, 0
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5694 = load i8, i8* %5693, align 1
  %5695 = icmp ne i8 %5694, 0
  %5696 = xor i1 %5692, %5695
  %5697 = xor i1 %5696, true
  %5698 = zext i1 %5697 to i8
  store i8 %5698, i8* %BRANCH_TAKEN, align 1
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5700 = select i1 %5696, i64 %5687, i64 %5685
  store i64 %5700, i64* %5699, align 8
  store %struct.Memory* %loadMem_43a885, %struct.Memory** %MEMORY
  %loadBr_43a885 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a885 = icmp eq i8 %loadBr_43a885, 1
  br i1 %cmpBr_43a885, label %block_.L_43aa01, label %block_43a88b

block_43a88b:                                     ; preds = %block_43a86d
  %loadMem_43a88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 33
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %5703 to i64*
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 1
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %5706 to i64*
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 15
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %5709 to i64*
  %5710 = load i64, i64* %RBP.i894
  %5711 = sub i64 %5710, 368
  %5712 = load i64, i64* %PC.i892
  %5713 = add i64 %5712, 7
  store i64 %5713, i64* %PC.i892
  %5714 = inttoptr i64 %5711 to i64*
  %5715 = load i64, i64* %5714
  store i64 %5715, i64* %RAX.i893, align 8
  store %struct.Memory* %loadMem_43a88b, %struct.Memory** %MEMORY
  %loadMem_43a892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 33
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %5718 to i64*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 5
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %5721 to i64*
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 15
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %5724 to i64*
  %5725 = load i64, i64* %RBP.i891
  %5726 = sub i64 %5725, 380
  %5727 = load i64, i64* %PC.i889
  %5728 = add i64 %5727, 7
  store i64 %5728, i64* %PC.i889
  %5729 = inttoptr i64 %5726 to i32*
  %5730 = load i32, i32* %5729
  %5731 = sext i32 %5730 to i64
  store i64 %5731, i64* %RCX.i890, align 8
  store %struct.Memory* %loadMem_43a892, %struct.Memory** %MEMORY
  %loadMem_43a899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 33
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %5734 to i64*
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 1
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %5737 to i64*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 5
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %RCX.i888 = bitcast %union.anon* %5740 to i64*
  %5741 = load i64, i64* %RAX.i887
  %5742 = load i64, i64* %RCX.i888
  %5743 = mul i64 %5742, 4
  %5744 = add i64 %5741, 4
  %5745 = add i64 %5744, %5743
  %5746 = load i64, i64* %PC.i886
  %5747 = add i64 %5746, 5
  store i64 %5747, i64* %PC.i886
  %5748 = inttoptr i64 %5745 to i32*
  %5749 = load i32, i32* %5748
  %5750 = sext i32 %5749 to i64
  store i64 %5750, i64* %RAX.i887, align 8
  store %struct.Memory* %loadMem_43a899, %struct.Memory** %MEMORY
  %loadMem_43a89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 33
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %5753 to i64*
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 1
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %5756 to i64*
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 7
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %RDX.i884 = bitcast %union.anon* %5759 to i64*
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5761 = getelementptr inbounds %struct.GPR, %struct.GPR* %5760, i32 0, i32 15
  %5762 = getelementptr inbounds %struct.Reg, %struct.Reg* %5761, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %5762 to i64*
  %5763 = load i64, i64* %RBP.i885
  %5764 = load i64, i64* %RAX.i883
  %5765 = mul i64 %5764, 4
  %5766 = add i64 %5763, -352
  %5767 = add i64 %5766, %5765
  %5768 = load i64, i64* %PC.i882
  %5769 = add i64 %5768, 7
  store i64 %5769, i64* %PC.i882
  %5770 = inttoptr i64 %5767 to i32*
  %5771 = load i32, i32* %5770
  %5772 = zext i32 %5771 to i64
  store i64 %5772, i64* %RDX.i884, align 8
  store %struct.Memory* %loadMem_43a89e, %struct.Memory** %MEMORY
  %loadMem_43a8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 33
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %5775 to i64*
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5777 = getelementptr inbounds %struct.GPR, %struct.GPR* %5776, i32 0, i32 7
  %5778 = getelementptr inbounds %struct.Reg, %struct.Reg* %5777, i32 0, i32 0
  %EDX.i880 = bitcast %union.anon* %5778 to i32*
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5780 = getelementptr inbounds %struct.GPR, %struct.GPR* %5779, i32 0, i32 15
  %5781 = getelementptr inbounds %struct.Reg, %struct.Reg* %5780, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %5781 to i64*
  %5782 = load i64, i64* %RBP.i881
  %5783 = sub i64 %5782, 384
  %5784 = load i32, i32* %EDX.i880
  %5785 = zext i32 %5784 to i64
  %5786 = load i64, i64* %PC.i879
  %5787 = add i64 %5786, 6
  store i64 %5787, i64* %PC.i879
  %5788 = inttoptr i64 %5783 to i32*
  store i32 %5784, i32* %5788
  store %struct.Memory* %loadMem_43a8a5, %struct.Memory** %MEMORY
  %loadMem_43a8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5790 = getelementptr inbounds %struct.GPR, %struct.GPR* %5789, i32 0, i32 33
  %5791 = getelementptr inbounds %struct.Reg, %struct.Reg* %5790, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %5791 to i64*
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5793 = getelementptr inbounds %struct.GPR, %struct.GPR* %5792, i32 0, i32 1
  %5794 = getelementptr inbounds %struct.Reg, %struct.Reg* %5793, i32 0, i32 0
  %RAX.i877 = bitcast %union.anon* %5794 to i64*
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 15
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %5797 to i64*
  %5798 = load i64, i64* %RBP.i878
  %5799 = sub i64 %5798, 372
  %5800 = load i64, i64* %PC.i876
  %5801 = add i64 %5800, 7
  store i64 %5801, i64* %PC.i876
  %5802 = inttoptr i64 %5799 to i32*
  %5803 = load i32, i32* %5802
  %5804 = sext i32 %5803 to i64
  store i64 %5804, i64* %RAX.i877, align 8
  store %struct.Memory* %loadMem_43a8ab, %struct.Memory** %MEMORY
  %loadMem_43a8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 33
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %5807 to i64*
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5809 = getelementptr inbounds %struct.GPR, %struct.GPR* %5808, i32 0, i32 1
  %5810 = getelementptr inbounds %struct.Reg, %struct.Reg* %5809, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %5810 to i64*
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5812 = getelementptr inbounds %struct.GPR, %struct.GPR* %5811, i32 0, i32 7
  %5813 = getelementptr inbounds %struct.Reg, %struct.Reg* %5812, i32 0, i32 0
  %RDX.i874 = bitcast %union.anon* %5813 to i64*
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 15
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %5816 to i64*
  %5817 = load i64, i64* %RBP.i875
  %5818 = load i64, i64* %RAX.i873
  %5819 = mul i64 %5818, 4
  %5820 = add i64 %5817, -160
  %5821 = add i64 %5820, %5819
  %5822 = load i64, i64* %PC.i872
  %5823 = add i64 %5822, 7
  store i64 %5823, i64* %PC.i872
  %5824 = inttoptr i64 %5821 to i32*
  %5825 = load i32, i32* %5824
  %5826 = zext i32 %5825 to i64
  store i64 %5826, i64* %RDX.i874, align 8
  store %struct.Memory* %loadMem_43a8b2, %struct.Memory** %MEMORY
  %loadMem_43a8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5828 = getelementptr inbounds %struct.GPR, %struct.GPR* %5827, i32 0, i32 33
  %5829 = getelementptr inbounds %struct.Reg, %struct.Reg* %5828, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %5829 to i64*
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5831 = getelementptr inbounds %struct.GPR, %struct.GPR* %5830, i32 0, i32 1
  %5832 = getelementptr inbounds %struct.Reg, %struct.Reg* %5831, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %5832 to i64*
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 15
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %5835 to i64*
  %5836 = load i64, i64* %RBP.i871
  %5837 = sub i64 %5836, 384
  %5838 = load i64, i64* %PC.i869
  %5839 = add i64 %5838, 7
  store i64 %5839, i64* %PC.i869
  %5840 = inttoptr i64 %5837 to i32*
  %5841 = load i32, i32* %5840
  %5842 = sext i32 %5841 to i64
  store i64 %5842, i64* %RAX.i870, align 8
  store %struct.Memory* %loadMem_43a8b9, %struct.Memory** %MEMORY
  %loadMem_43a8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5844 = getelementptr inbounds %struct.GPR, %struct.GPR* %5843, i32 0, i32 33
  %5845 = getelementptr inbounds %struct.Reg, %struct.Reg* %5844, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %5845 to i64*
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5847 = getelementptr inbounds %struct.GPR, %struct.GPR* %5846, i32 0, i32 1
  %5848 = getelementptr inbounds %struct.Reg, %struct.Reg* %5847, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %5848 to i64*
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5850 = getelementptr inbounds %struct.GPR, %struct.GPR* %5849, i32 0, i32 9
  %5851 = getelementptr inbounds %struct.Reg, %struct.Reg* %5850, i32 0, i32 0
  %RSI.i867 = bitcast %union.anon* %5851 to i64*
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5853 = getelementptr inbounds %struct.GPR, %struct.GPR* %5852, i32 0, i32 15
  %5854 = getelementptr inbounds %struct.Reg, %struct.Reg* %5853, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %5854 to i64*
  %5855 = load i64, i64* %RBP.i868
  %5856 = load i64, i64* %RAX.i866
  %5857 = mul i64 %5856, 4
  %5858 = add i64 %5855, -160
  %5859 = add i64 %5858, %5857
  %5860 = load i64, i64* %PC.i865
  %5861 = add i64 %5860, 7
  store i64 %5861, i64* %PC.i865
  %5862 = inttoptr i64 %5859 to i32*
  %5863 = load i32, i32* %5862
  %5864 = zext i32 %5863 to i64
  store i64 %5864, i64* %RSI.i867, align 8
  store %struct.Memory* %loadMem_43a8c0, %struct.Memory** %MEMORY
  %loadMem_43a8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5866 = getelementptr inbounds %struct.GPR, %struct.GPR* %5865, i32 0, i32 33
  %5867 = getelementptr inbounds %struct.Reg, %struct.Reg* %5866, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %5867 to i64*
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 9
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %RSI.i864 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %RSI.i864
  %5872 = load i64, i64* %PC.i863
  %5873 = add i64 %5872, 3
  store i64 %5873, i64* %PC.i863
  %5874 = trunc i64 %5871 to i32
  %5875 = add i32 20, %5874
  %5876 = zext i32 %5875 to i64
  store i64 %5876, i64* %RSI.i864, align 8
  %5877 = icmp ult i32 %5875, %5874
  %5878 = icmp ult i32 %5875, 20
  %5879 = or i1 %5877, %5878
  %5880 = zext i1 %5879 to i8
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5880, i8* %5881, align 1
  %5882 = and i32 %5875, 255
  %5883 = call i32 @llvm.ctpop.i32(i32 %5882)
  %5884 = trunc i32 %5883 to i8
  %5885 = and i8 %5884, 1
  %5886 = xor i8 %5885, 1
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5886, i8* %5887, align 1
  %5888 = xor i64 20, %5871
  %5889 = trunc i64 %5888 to i32
  %5890 = xor i32 %5889, %5875
  %5891 = lshr i32 %5890, 4
  %5892 = trunc i32 %5891 to i8
  %5893 = and i8 %5892, 1
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5893, i8* %5894, align 1
  %5895 = icmp eq i32 %5875, 0
  %5896 = zext i1 %5895 to i8
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5896, i8* %5897, align 1
  %5898 = lshr i32 %5875, 31
  %5899 = trunc i32 %5898 to i8
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5899, i8* %5900, align 1
  %5901 = lshr i32 %5874, 31
  %5902 = xor i32 %5898, %5901
  %5903 = add i32 %5902, %5898
  %5904 = icmp eq i32 %5903, 2
  %5905 = zext i1 %5904 to i8
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5905, i8* %5906, align 1
  store %struct.Memory* %loadMem_43a8c7, %struct.Memory** %MEMORY
  %loadMem_43a8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 33
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %5909 to i64*
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5911 = getelementptr inbounds %struct.GPR, %struct.GPR* %5910, i32 0, i32 7
  %5912 = getelementptr inbounds %struct.Reg, %struct.Reg* %5911, i32 0, i32 0
  %EDX.i861 = bitcast %union.anon* %5912 to i32*
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 9
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %ESI.i862 = bitcast %union.anon* %5915 to i32*
  %5916 = load i32, i32* %EDX.i861
  %5917 = zext i32 %5916 to i64
  %5918 = load i32, i32* %ESI.i862
  %5919 = zext i32 %5918 to i64
  %5920 = load i64, i64* %PC.i860
  %5921 = add i64 %5920, 2
  store i64 %5921, i64* %PC.i860
  %5922 = sub i32 %5916, %5918
  %5923 = icmp ult i32 %5916, %5918
  %5924 = zext i1 %5923 to i8
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5924, i8* %5925, align 1
  %5926 = and i32 %5922, 255
  %5927 = call i32 @llvm.ctpop.i32(i32 %5926)
  %5928 = trunc i32 %5927 to i8
  %5929 = and i8 %5928, 1
  %5930 = xor i8 %5929, 1
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5930, i8* %5931, align 1
  %5932 = xor i64 %5919, %5917
  %5933 = trunc i64 %5932 to i32
  %5934 = xor i32 %5933, %5922
  %5935 = lshr i32 %5934, 4
  %5936 = trunc i32 %5935 to i8
  %5937 = and i8 %5936, 1
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5937, i8* %5938, align 1
  %5939 = icmp eq i32 %5922, 0
  %5940 = zext i1 %5939 to i8
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5940, i8* %5941, align 1
  %5942 = lshr i32 %5922, 31
  %5943 = trunc i32 %5942 to i8
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5943, i8* %5944, align 1
  %5945 = lshr i32 %5916, 31
  %5946 = lshr i32 %5918, 31
  %5947 = xor i32 %5946, %5945
  %5948 = xor i32 %5942, %5945
  %5949 = add i32 %5948, %5947
  %5950 = icmp eq i32 %5949, 2
  %5951 = zext i1 %5950 to i8
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5951, i8* %5952, align 1
  store %struct.Memory* %loadMem_43a8ca, %struct.Memory** %MEMORY
  %loadMem_43a8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5954 = getelementptr inbounds %struct.GPR, %struct.GPR* %5953, i32 0, i32 33
  %5955 = getelementptr inbounds %struct.Reg, %struct.Reg* %5954, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %5955 to i64*
  %5956 = load i64, i64* %PC.i859
  %5957 = add i64 %5956, 304
  %5958 = load i64, i64* %PC.i859
  %5959 = add i64 %5958, 6
  %5960 = load i64, i64* %PC.i859
  %5961 = add i64 %5960, 6
  store i64 %5961, i64* %PC.i859
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5963 = load i8, i8* %5962, align 1
  store i8 %5963, i8* %BRANCH_TAKEN, align 1
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5965 = icmp ne i8 %5963, 0
  %5966 = select i1 %5965, i64 %5957, i64 %5959
  store i64 %5966, i64* %5964, align 8
  store %struct.Memory* %loadMem_43a8cc, %struct.Memory** %MEMORY
  %loadBr_43a8cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a8cc = icmp eq i8 %loadBr_43a8cc, 1
  br i1 %cmpBr_43a8cc, label %block_.L_43a9fc, label %block_43a8d2

block_43a8d2:                                     ; preds = %block_43a88b
  %loadMem_43a8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 33
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %5969 to i64*
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5971 = getelementptr inbounds %struct.GPR, %struct.GPR* %5970, i32 0, i32 1
  %5972 = getelementptr inbounds %struct.Reg, %struct.Reg* %5971, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %5972 to i64*
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 15
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %5975 to i64*
  %5976 = load i64, i64* %RBP.i858
  %5977 = sub i64 %5976, 372
  %5978 = load i64, i64* %PC.i856
  %5979 = add i64 %5978, 7
  store i64 %5979, i64* %PC.i856
  %5980 = inttoptr i64 %5977 to i32*
  %5981 = load i32, i32* %5980
  %5982 = sext i32 %5981 to i64
  store i64 %5982, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_43a8d2, %struct.Memory** %MEMORY
  %loadMem_43a8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 33
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %5985 to i64*
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 1
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %RAX.i853 = bitcast %union.anon* %5988 to i64*
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 5
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %RCX.i854 = bitcast %union.anon* %5991 to i64*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 15
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %5994 to i64*
  %5995 = load i64, i64* %RBP.i855
  %5996 = load i64, i64* %RAX.i853
  %5997 = mul i64 %5996, 4
  %5998 = add i64 %5995, -160
  %5999 = add i64 %5998, %5997
  %6000 = load i64, i64* %PC.i852
  %6001 = add i64 %6000, 7
  store i64 %6001, i64* %PC.i852
  %6002 = inttoptr i64 %5999 to i32*
  %6003 = load i32, i32* %6002
  %6004 = zext i32 %6003 to i64
  store i64 %6004, i64* %RCX.i854, align 8
  store %struct.Memory* %loadMem_43a8d9, %struct.Memory** %MEMORY
  %loadMem_43a8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 33
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %6007 to i64*
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 1
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %6010 to i64*
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 15
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %6013 to i64*
  %6014 = load i64, i64* %RBP.i851
  %6015 = sub i64 %6014, 384
  %6016 = load i64, i64* %PC.i849
  %6017 = add i64 %6016, 7
  store i64 %6017, i64* %PC.i849
  %6018 = inttoptr i64 %6015 to i32*
  %6019 = load i32, i32* %6018
  %6020 = sext i32 %6019 to i64
  store i64 %6020, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_43a8e0, %struct.Memory** %MEMORY
  %loadMem_43a8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 33
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %6023 to i64*
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 1
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %6026 to i64*
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6028 = getelementptr inbounds %struct.GPR, %struct.GPR* %6027, i32 0, i32 7
  %6029 = getelementptr inbounds %struct.Reg, %struct.Reg* %6028, i32 0, i32 0
  %RDX.i847 = bitcast %union.anon* %6029 to i64*
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6031 = getelementptr inbounds %struct.GPR, %struct.GPR* %6030, i32 0, i32 15
  %6032 = getelementptr inbounds %struct.Reg, %struct.Reg* %6031, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %6032 to i64*
  %6033 = load i64, i64* %RBP.i848
  %6034 = load i64, i64* %RAX.i846
  %6035 = mul i64 %6034, 4
  %6036 = add i64 %6033, -160
  %6037 = add i64 %6036, %6035
  %6038 = load i64, i64* %PC.i845
  %6039 = add i64 %6038, 7
  store i64 %6039, i64* %PC.i845
  %6040 = inttoptr i64 %6037 to i32*
  %6041 = load i32, i32* %6040
  %6042 = zext i32 %6041 to i64
  store i64 %6042, i64* %RDX.i847, align 8
  store %struct.Memory* %loadMem_43a8e7, %struct.Memory** %MEMORY
  %loadMem_43a8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6044 = getelementptr inbounds %struct.GPR, %struct.GPR* %6043, i32 0, i32 33
  %6045 = getelementptr inbounds %struct.Reg, %struct.Reg* %6044, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %6045 to i64*
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6047 = getelementptr inbounds %struct.GPR, %struct.GPR* %6046, i32 0, i32 7
  %6048 = getelementptr inbounds %struct.Reg, %struct.Reg* %6047, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %6048 to i64*
  %6049 = load i64, i64* %RDX.i844
  %6050 = load i64, i64* %PC.i843
  %6051 = add i64 %6050, 3
  store i64 %6051, i64* %PC.i843
  %6052 = trunc i64 %6049 to i32
  %6053 = sub i32 %6052, 1
  %6054 = zext i32 %6053 to i64
  store i64 %6054, i64* %RDX.i844, align 8
  %6055 = icmp ult i32 %6052, 1
  %6056 = zext i1 %6055 to i8
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6056, i8* %6057, align 1
  %6058 = and i32 %6053, 255
  %6059 = call i32 @llvm.ctpop.i32(i32 %6058)
  %6060 = trunc i32 %6059 to i8
  %6061 = and i8 %6060, 1
  %6062 = xor i8 %6061, 1
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6062, i8* %6063, align 1
  %6064 = xor i64 1, %6049
  %6065 = trunc i64 %6064 to i32
  %6066 = xor i32 %6065, %6053
  %6067 = lshr i32 %6066, 4
  %6068 = trunc i32 %6067 to i8
  %6069 = and i8 %6068, 1
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6069, i8* %6070, align 1
  %6071 = icmp eq i32 %6053, 0
  %6072 = zext i1 %6071 to i8
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6072, i8* %6073, align 1
  %6074 = lshr i32 %6053, 31
  %6075 = trunc i32 %6074 to i8
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6075, i8* %6076, align 1
  %6077 = lshr i32 %6052, 31
  %6078 = xor i32 %6074, %6077
  %6079 = add i32 %6078, %6077
  %6080 = icmp eq i32 %6079, 2
  %6081 = zext i1 %6080 to i8
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6081, i8* %6082, align 1
  store %struct.Memory* %loadMem_43a8ee, %struct.Memory** %MEMORY
  %loadMem_43a8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6084 = getelementptr inbounds %struct.GPR, %struct.GPR* %6083, i32 0, i32 33
  %6085 = getelementptr inbounds %struct.Reg, %struct.Reg* %6084, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %6085 to i64*
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 5
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %ECX.i841 = bitcast %union.anon* %6088 to i32*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 7
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %EDX.i842 = bitcast %union.anon* %6091 to i32*
  %6092 = load i32, i32* %ECX.i841
  %6093 = zext i32 %6092 to i64
  %6094 = load i32, i32* %EDX.i842
  %6095 = zext i32 %6094 to i64
  %6096 = load i64, i64* %PC.i840
  %6097 = add i64 %6096, 2
  store i64 %6097, i64* %PC.i840
  %6098 = sub i32 %6092, %6094
  %6099 = icmp ult i32 %6092, %6094
  %6100 = zext i1 %6099 to i8
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6100, i8* %6101, align 1
  %6102 = and i32 %6098, 255
  %6103 = call i32 @llvm.ctpop.i32(i32 %6102)
  %6104 = trunc i32 %6103 to i8
  %6105 = and i8 %6104, 1
  %6106 = xor i8 %6105, 1
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6106, i8* %6107, align 1
  %6108 = xor i64 %6095, %6093
  %6109 = trunc i64 %6108 to i32
  %6110 = xor i32 %6109, %6098
  %6111 = lshr i32 %6110, 4
  %6112 = trunc i32 %6111 to i8
  %6113 = and i8 %6112, 1
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6113, i8* %6114, align 1
  %6115 = icmp eq i32 %6098, 0
  %6116 = zext i1 %6115 to i8
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6116, i8* %6117, align 1
  %6118 = lshr i32 %6098, 31
  %6119 = trunc i32 %6118 to i8
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6119, i8* %6120, align 1
  %6121 = lshr i32 %6092, 31
  %6122 = lshr i32 %6094, 31
  %6123 = xor i32 %6122, %6121
  %6124 = xor i32 %6118, %6121
  %6125 = add i32 %6124, %6123
  %6126 = icmp eq i32 %6125, 2
  %6127 = zext i1 %6126 to i8
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6127, i8* %6128, align 1
  store %struct.Memory* %loadMem_43a8f1, %struct.Memory** %MEMORY
  %loadMem_43a8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6130 = getelementptr inbounds %struct.GPR, %struct.GPR* %6129, i32 0, i32 33
  %6131 = getelementptr inbounds %struct.Reg, %struct.Reg* %6130, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %6131 to i64*
  %6132 = load i64, i64* %PC.i839
  %6133 = add i64 %6132, 265
  %6134 = load i64, i64* %PC.i839
  %6135 = add i64 %6134, 6
  %6136 = load i64, i64* %PC.i839
  %6137 = add i64 %6136, 6
  store i64 %6137, i64* %PC.i839
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6139 = load i8, i8* %6138, align 1
  store i8 %6139, i8* %BRANCH_TAKEN, align 1
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6141 = icmp ne i8 %6139, 0
  %6142 = select i1 %6141, i64 %6133, i64 %6135
  store i64 %6142, i64* %6140, align 8
  store %struct.Memory* %loadMem_43a8f3, %struct.Memory** %MEMORY
  %loadBr_43a8f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a8f3 = icmp eq i8 %loadBr_43a8f3, 1
  br i1 %cmpBr_43a8f3, label %block_.L_43a9fc, label %block_43a8f9

block_43a8f9:                                     ; preds = %block_43a8d2
  %loadMem_43a8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 33
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %6145 to i64*
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6147 = getelementptr inbounds %struct.GPR, %struct.GPR* %6146, i32 0, i32 1
  %6148 = getelementptr inbounds %struct.Reg, %struct.Reg* %6147, i32 0, i32 0
  %RAX.i837 = bitcast %union.anon* %6148 to i64*
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6150 = getelementptr inbounds %struct.GPR, %struct.GPR* %6149, i32 0, i32 15
  %6151 = getelementptr inbounds %struct.Reg, %struct.Reg* %6150, i32 0, i32 0
  %RBP.i838 = bitcast %union.anon* %6151 to i64*
  %6152 = load i64, i64* %RBP.i838
  %6153 = sub i64 %6152, 372
  %6154 = load i64, i64* %PC.i836
  %6155 = add i64 %6154, 7
  store i64 %6155, i64* %PC.i836
  %6156 = inttoptr i64 %6153 to i32*
  %6157 = load i32, i32* %6156
  %6158 = sext i32 %6157 to i64
  store i64 %6158, i64* %RAX.i837, align 8
  store %struct.Memory* %loadMem_43a8f9, %struct.Memory** %MEMORY
  %loadMem_43a900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6160 = getelementptr inbounds %struct.GPR, %struct.GPR* %6159, i32 0, i32 33
  %6161 = getelementptr inbounds %struct.Reg, %struct.Reg* %6160, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %6161 to i64*
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 1
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %6164 to i64*
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6166 = getelementptr inbounds %struct.GPR, %struct.GPR* %6165, i32 0, i32 5
  %6167 = getelementptr inbounds %struct.Reg, %struct.Reg* %6166, i32 0, i32 0
  %RCX.i834 = bitcast %union.anon* %6167 to i64*
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 15
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %6170 to i64*
  %6171 = load i64, i64* %RBP.i835
  %6172 = load i64, i64* %RAX.i833
  %6173 = mul i64 %6172, 4
  %6174 = add i64 %6171, -160
  %6175 = add i64 %6174, %6173
  %6176 = load i64, i64* %PC.i832
  %6177 = add i64 %6176, 7
  store i64 %6177, i64* %PC.i832
  %6178 = inttoptr i64 %6175 to i32*
  %6179 = load i32, i32* %6178
  %6180 = zext i32 %6179 to i64
  store i64 %6180, i64* %RCX.i834, align 8
  store %struct.Memory* %loadMem_43a900, %struct.Memory** %MEMORY
  %loadMem_43a907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 33
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %6183 to i64*
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 1
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %6186 to i64*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 15
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %6189 to i64*
  %6190 = load i64, i64* %RBP.i831
  %6191 = sub i64 %6190, 384
  %6192 = load i64, i64* %PC.i829
  %6193 = add i64 %6192, 7
  store i64 %6193, i64* %PC.i829
  %6194 = inttoptr i64 %6191 to i32*
  %6195 = load i32, i32* %6194
  %6196 = sext i32 %6195 to i64
  store i64 %6196, i64* %RAX.i830, align 8
  store %struct.Memory* %loadMem_43a907, %struct.Memory** %MEMORY
  %loadMem_43a90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 33
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %6199 to i64*
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 1
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %6202 to i64*
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 7
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %RDX.i827 = bitcast %union.anon* %6205 to i64*
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6207 = getelementptr inbounds %struct.GPR, %struct.GPR* %6206, i32 0, i32 15
  %6208 = getelementptr inbounds %struct.Reg, %struct.Reg* %6207, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %6208 to i64*
  %6209 = load i64, i64* %RBP.i828
  %6210 = load i64, i64* %RAX.i826
  %6211 = mul i64 %6210, 4
  %6212 = add i64 %6209, -160
  %6213 = add i64 %6212, %6211
  %6214 = load i64, i64* %PC.i825
  %6215 = add i64 %6214, 7
  store i64 %6215, i64* %PC.i825
  %6216 = inttoptr i64 %6213 to i32*
  %6217 = load i32, i32* %6216
  %6218 = zext i32 %6217 to i64
  store i64 %6218, i64* %RDX.i827, align 8
  store %struct.Memory* %loadMem_43a90e, %struct.Memory** %MEMORY
  %loadMem_43a915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 33
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %6221 to i64*
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 7
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %RDX.i824 = bitcast %union.anon* %6224 to i64*
  %6225 = load i64, i64* %RDX.i824
  %6226 = load i64, i64* %PC.i823
  %6227 = add i64 %6226, 3
  store i64 %6227, i64* %PC.i823
  %6228 = trunc i64 %6225 to i32
  %6229 = sub i32 %6228, 20
  %6230 = zext i32 %6229 to i64
  store i64 %6230, i64* %RDX.i824, align 8
  %6231 = icmp ult i32 %6228, 20
  %6232 = zext i1 %6231 to i8
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6232, i8* %6233, align 1
  %6234 = and i32 %6229, 255
  %6235 = call i32 @llvm.ctpop.i32(i32 %6234)
  %6236 = trunc i32 %6235 to i8
  %6237 = and i8 %6236, 1
  %6238 = xor i8 %6237, 1
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6238, i8* %6239, align 1
  %6240 = xor i64 20, %6225
  %6241 = trunc i64 %6240 to i32
  %6242 = xor i32 %6241, %6229
  %6243 = lshr i32 %6242, 4
  %6244 = trunc i32 %6243 to i8
  %6245 = and i8 %6244, 1
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6245, i8* %6246, align 1
  %6247 = icmp eq i32 %6229, 0
  %6248 = zext i1 %6247 to i8
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6248, i8* %6249, align 1
  %6250 = lshr i32 %6229, 31
  %6251 = trunc i32 %6250 to i8
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6251, i8* %6252, align 1
  %6253 = lshr i32 %6228, 31
  %6254 = xor i32 %6250, %6253
  %6255 = add i32 %6254, %6253
  %6256 = icmp eq i32 %6255, 2
  %6257 = zext i1 %6256 to i8
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6257, i8* %6258, align 1
  store %struct.Memory* %loadMem_43a915, %struct.Memory** %MEMORY
  %loadMem_43a918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 33
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %6261 to i64*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 5
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %ECX.i821 = bitcast %union.anon* %6264 to i32*
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6266 = getelementptr inbounds %struct.GPR, %struct.GPR* %6265, i32 0, i32 7
  %6267 = getelementptr inbounds %struct.Reg, %struct.Reg* %6266, i32 0, i32 0
  %EDX.i822 = bitcast %union.anon* %6267 to i32*
  %6268 = load i32, i32* %ECX.i821
  %6269 = zext i32 %6268 to i64
  %6270 = load i32, i32* %EDX.i822
  %6271 = zext i32 %6270 to i64
  %6272 = load i64, i64* %PC.i820
  %6273 = add i64 %6272, 2
  store i64 %6273, i64* %PC.i820
  %6274 = sub i32 %6268, %6270
  %6275 = icmp ult i32 %6268, %6270
  %6276 = zext i1 %6275 to i8
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6276, i8* %6277, align 1
  %6278 = and i32 %6274, 255
  %6279 = call i32 @llvm.ctpop.i32(i32 %6278)
  %6280 = trunc i32 %6279 to i8
  %6281 = and i8 %6280, 1
  %6282 = xor i8 %6281, 1
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6282, i8* %6283, align 1
  %6284 = xor i64 %6271, %6269
  %6285 = trunc i64 %6284 to i32
  %6286 = xor i32 %6285, %6274
  %6287 = lshr i32 %6286, 4
  %6288 = trunc i32 %6287 to i8
  %6289 = and i8 %6288, 1
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6289, i8* %6290, align 1
  %6291 = icmp eq i32 %6274, 0
  %6292 = zext i1 %6291 to i8
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6292, i8* %6293, align 1
  %6294 = lshr i32 %6274, 31
  %6295 = trunc i32 %6294 to i8
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6295, i8* %6296, align 1
  %6297 = lshr i32 %6268, 31
  %6298 = lshr i32 %6270, 31
  %6299 = xor i32 %6298, %6297
  %6300 = xor i32 %6294, %6297
  %6301 = add i32 %6300, %6299
  %6302 = icmp eq i32 %6301, 2
  %6303 = zext i1 %6302 to i8
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6303, i8* %6304, align 1
  store %struct.Memory* %loadMem_43a918, %struct.Memory** %MEMORY
  %loadMem_43a91a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %6307 to i64*
  %6308 = load i64, i64* %PC.i819
  %6309 = add i64 %6308, 226
  %6310 = load i64, i64* %PC.i819
  %6311 = add i64 %6310, 6
  %6312 = load i64, i64* %PC.i819
  %6313 = add i64 %6312, 6
  store i64 %6313, i64* %PC.i819
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6315 = load i8, i8* %6314, align 1
  store i8 %6315, i8* %BRANCH_TAKEN, align 1
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6317 = icmp ne i8 %6315, 0
  %6318 = select i1 %6317, i64 %6309, i64 %6311
  store i64 %6318, i64* %6316, align 8
  store %struct.Memory* %loadMem_43a91a, %struct.Memory** %MEMORY
  %loadBr_43a91a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a91a = icmp eq i8 %loadBr_43a91a, 1
  br i1 %cmpBr_43a91a, label %block_.L_43a9fc, label %block_43a920

block_43a920:                                     ; preds = %block_43a8f9
  %loadMem_43a920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 33
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %6321 to i64*
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 1
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %RAX.i817 = bitcast %union.anon* %6324 to i64*
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 15
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %RBP.i818 = bitcast %union.anon* %6327 to i64*
  %6328 = load i64, i64* %RBP.i818
  %6329 = sub i64 %6328, 372
  %6330 = load i64, i64* %PC.i816
  %6331 = add i64 %6330, 7
  store i64 %6331, i64* %PC.i816
  %6332 = inttoptr i64 %6329 to i32*
  %6333 = load i32, i32* %6332
  %6334 = sext i32 %6333 to i64
  store i64 %6334, i64* %RAX.i817, align 8
  store %struct.Memory* %loadMem_43a920, %struct.Memory** %MEMORY
  %loadMem_43a927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 33
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %6337 to i64*
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 1
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %6340 to i64*
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 5
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %6343 to i64*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 15
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %RBP.i815 = bitcast %union.anon* %6346 to i64*
  %6347 = load i64, i64* %RBP.i815
  %6348 = load i64, i64* %RAX.i813
  %6349 = mul i64 %6348, 4
  %6350 = add i64 %6347, -160
  %6351 = add i64 %6350, %6349
  %6352 = load i64, i64* %PC.i812
  %6353 = add i64 %6352, 7
  store i64 %6353, i64* %PC.i812
  %6354 = inttoptr i64 %6351 to i32*
  %6355 = load i32, i32* %6354
  %6356 = zext i32 %6355 to i64
  store i64 %6356, i64* %RCX.i814, align 8
  store %struct.Memory* %loadMem_43a927, %struct.Memory** %MEMORY
  %loadMem_43a92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 33
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %6359 to i64*
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 1
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %RAX.i810 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 15
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %6365 to i64*
  %6366 = load i64, i64* %RBP.i811
  %6367 = sub i64 %6366, 384
  %6368 = load i64, i64* %PC.i809
  %6369 = add i64 %6368, 7
  store i64 %6369, i64* %PC.i809
  %6370 = inttoptr i64 %6367 to i32*
  %6371 = load i32, i32* %6370
  %6372 = sext i32 %6371 to i64
  store i64 %6372, i64* %RAX.i810, align 8
  store %struct.Memory* %loadMem_43a92e, %struct.Memory** %MEMORY
  %loadMem_43a935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 33
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %6375 to i64*
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 1
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %6378 to i64*
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6380 = getelementptr inbounds %struct.GPR, %struct.GPR* %6379, i32 0, i32 7
  %6381 = getelementptr inbounds %struct.Reg, %struct.Reg* %6380, i32 0, i32 0
  %RDX.i807 = bitcast %union.anon* %6381 to i64*
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 15
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %6384 to i64*
  %6385 = load i64, i64* %RBP.i808
  %6386 = load i64, i64* %RAX.i806
  %6387 = mul i64 %6386, 4
  %6388 = add i64 %6385, -160
  %6389 = add i64 %6388, %6387
  %6390 = load i64, i64* %PC.i805
  %6391 = add i64 %6390, 7
  store i64 %6391, i64* %PC.i805
  %6392 = inttoptr i64 %6389 to i32*
  %6393 = load i32, i32* %6392
  %6394 = zext i32 %6393 to i64
  store i64 %6394, i64* %RDX.i807, align 8
  store %struct.Memory* %loadMem_43a935, %struct.Memory** %MEMORY
  %loadMem_43a93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 33
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %6397 to i64*
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6399 = getelementptr inbounds %struct.GPR, %struct.GPR* %6398, i32 0, i32 7
  %6400 = getelementptr inbounds %struct.Reg, %struct.Reg* %6399, i32 0, i32 0
  %RDX.i804 = bitcast %union.anon* %6400 to i64*
  %6401 = load i64, i64* %RDX.i804
  %6402 = load i64, i64* %PC.i803
  %6403 = add i64 %6402, 3
  store i64 %6403, i64* %PC.i803
  %6404 = trunc i64 %6401 to i32
  %6405 = add i32 1, %6404
  %6406 = zext i32 %6405 to i64
  store i64 %6406, i64* %RDX.i804, align 8
  %6407 = icmp ult i32 %6405, %6404
  %6408 = icmp ult i32 %6405, 1
  %6409 = or i1 %6407, %6408
  %6410 = zext i1 %6409 to i8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6410, i8* %6411, align 1
  %6412 = and i32 %6405, 255
  %6413 = call i32 @llvm.ctpop.i32(i32 %6412)
  %6414 = trunc i32 %6413 to i8
  %6415 = and i8 %6414, 1
  %6416 = xor i8 %6415, 1
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6416, i8* %6417, align 1
  %6418 = xor i64 1, %6401
  %6419 = trunc i64 %6418 to i32
  %6420 = xor i32 %6419, %6405
  %6421 = lshr i32 %6420, 4
  %6422 = trunc i32 %6421 to i8
  %6423 = and i8 %6422, 1
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6423, i8* %6424, align 1
  %6425 = icmp eq i32 %6405, 0
  %6426 = zext i1 %6425 to i8
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6426, i8* %6427, align 1
  %6428 = lshr i32 %6405, 31
  %6429 = trunc i32 %6428 to i8
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6429, i8* %6430, align 1
  %6431 = lshr i32 %6404, 31
  %6432 = xor i32 %6428, %6431
  %6433 = add i32 %6432, %6428
  %6434 = icmp eq i32 %6433, 2
  %6435 = zext i1 %6434 to i8
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6435, i8* %6436, align 1
  store %struct.Memory* %loadMem_43a93c, %struct.Memory** %MEMORY
  %loadMem_43a93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6438 = getelementptr inbounds %struct.GPR, %struct.GPR* %6437, i32 0, i32 33
  %6439 = getelementptr inbounds %struct.Reg, %struct.Reg* %6438, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %6439 to i64*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 5
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %ECX.i801 = bitcast %union.anon* %6442 to i32*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 7
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %EDX.i802 = bitcast %union.anon* %6445 to i32*
  %6446 = load i32, i32* %ECX.i801
  %6447 = zext i32 %6446 to i64
  %6448 = load i32, i32* %EDX.i802
  %6449 = zext i32 %6448 to i64
  %6450 = load i64, i64* %PC.i800
  %6451 = add i64 %6450, 2
  store i64 %6451, i64* %PC.i800
  %6452 = sub i32 %6446, %6448
  %6453 = icmp ult i32 %6446, %6448
  %6454 = zext i1 %6453 to i8
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6454, i8* %6455, align 1
  %6456 = and i32 %6452, 255
  %6457 = call i32 @llvm.ctpop.i32(i32 %6456)
  %6458 = trunc i32 %6457 to i8
  %6459 = and i8 %6458, 1
  %6460 = xor i8 %6459, 1
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6460, i8* %6461, align 1
  %6462 = xor i64 %6449, %6447
  %6463 = trunc i64 %6462 to i32
  %6464 = xor i32 %6463, %6452
  %6465 = lshr i32 %6464, 4
  %6466 = trunc i32 %6465 to i8
  %6467 = and i8 %6466, 1
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6467, i8* %6468, align 1
  %6469 = icmp eq i32 %6452, 0
  %6470 = zext i1 %6469 to i8
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6470, i8* %6471, align 1
  %6472 = lshr i32 %6452, 31
  %6473 = trunc i32 %6472 to i8
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6473, i8* %6474, align 1
  %6475 = lshr i32 %6446, 31
  %6476 = lshr i32 %6448, 31
  %6477 = xor i32 %6476, %6475
  %6478 = xor i32 %6472, %6475
  %6479 = add i32 %6478, %6477
  %6480 = icmp eq i32 %6479, 2
  %6481 = zext i1 %6480 to i8
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6481, i8* %6482, align 1
  store %struct.Memory* %loadMem_43a93f, %struct.Memory** %MEMORY
  %loadMem_43a941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 33
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %6485 to i64*
  %6486 = load i64, i64* %PC.i799
  %6487 = add i64 %6486, 187
  %6488 = load i64, i64* %PC.i799
  %6489 = add i64 %6488, 6
  %6490 = load i64, i64* %PC.i799
  %6491 = add i64 %6490, 6
  store i64 %6491, i64* %PC.i799
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6493 = load i8, i8* %6492, align 1
  store i8 %6493, i8* %BRANCH_TAKEN, align 1
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6495 = icmp ne i8 %6493, 0
  %6496 = select i1 %6495, i64 %6487, i64 %6489
  store i64 %6496, i64* %6494, align 8
  store %struct.Memory* %loadMem_43a941, %struct.Memory** %MEMORY
  %loadBr_43a941 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a941 = icmp eq i8 %loadBr_43a941, 1
  br i1 %cmpBr_43a941, label %block_.L_43a9fc, label %block_43a947

block_43a947:                                     ; preds = %block_43a920
  %loadMem_43a947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 33
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %6499 to i64*
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 1
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 15
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %6505 to i64*
  %6506 = load i64, i64* %RBP.i798
  %6507 = sub i64 %6506, 372
  %6508 = load i64, i64* %PC.i796
  %6509 = add i64 %6508, 6
  store i64 %6509, i64* %PC.i796
  %6510 = inttoptr i64 %6507 to i32*
  %6511 = load i32, i32* %6510
  %6512 = zext i32 %6511 to i64
  store i64 %6512, i64* %RAX.i797, align 8
  store %struct.Memory* %loadMem_43a947, %struct.Memory** %MEMORY
  %loadMem_43a94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6514 = getelementptr inbounds %struct.GPR, %struct.GPR* %6513, i32 0, i32 33
  %6515 = getelementptr inbounds %struct.Reg, %struct.Reg* %6514, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %6515 to i64*
  %6516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6517 = getelementptr inbounds %struct.GPR, %struct.GPR* %6516, i32 0, i32 5
  %6518 = getelementptr inbounds %struct.Reg, %struct.Reg* %6517, i32 0, i32 0
  %RCX.i794 = bitcast %union.anon* %6518 to i64*
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6520 = getelementptr inbounds %struct.GPR, %struct.GPR* %6519, i32 0, i32 15
  %6521 = getelementptr inbounds %struct.Reg, %struct.Reg* %6520, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %6521 to i64*
  %6522 = load i64, i64* %RBP.i795
  %6523 = sub i64 %6522, 384
  %6524 = load i64, i64* %PC.i793
  %6525 = add i64 %6524, 6
  store i64 %6525, i64* %PC.i793
  %6526 = inttoptr i64 %6523 to i32*
  %6527 = load i32, i32* %6526
  %6528 = zext i32 %6527 to i64
  store i64 %6528, i64* %RCX.i794, align 8
  store %struct.Memory* %loadMem_43a94d, %struct.Memory** %MEMORY
  %loadMem_43a953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6530 = getelementptr inbounds %struct.GPR, %struct.GPR* %6529, i32 0, i32 33
  %6531 = getelementptr inbounds %struct.Reg, %struct.Reg* %6530, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %6531 to i64*
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6533 = getelementptr inbounds %struct.GPR, %struct.GPR* %6532, i32 0, i32 5
  %6534 = getelementptr inbounds %struct.Reg, %struct.Reg* %6533, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %6534 to i64*
  %6535 = load i64, i64* %RCX.i792
  %6536 = load i64, i64* %PC.i791
  %6537 = add i64 %6536, 3
  store i64 %6537, i64* %PC.i791
  %6538 = trunc i64 %6535 to i32
  %6539 = sub i32 %6538, 1
  %6540 = zext i32 %6539 to i64
  store i64 %6540, i64* %RCX.i792, align 8
  %6541 = icmp ult i32 %6538, 1
  %6542 = zext i1 %6541 to i8
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6542, i8* %6543, align 1
  %6544 = and i32 %6539, 255
  %6545 = call i32 @llvm.ctpop.i32(i32 %6544)
  %6546 = trunc i32 %6545 to i8
  %6547 = and i8 %6546, 1
  %6548 = xor i8 %6547, 1
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6548, i8* %6549, align 1
  %6550 = xor i64 1, %6535
  %6551 = trunc i64 %6550 to i32
  %6552 = xor i32 %6551, %6539
  %6553 = lshr i32 %6552, 4
  %6554 = trunc i32 %6553 to i8
  %6555 = and i8 %6554, 1
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6555, i8* %6556, align 1
  %6557 = icmp eq i32 %6539, 0
  %6558 = zext i1 %6557 to i8
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6558, i8* %6559, align 1
  %6560 = lshr i32 %6539, 31
  %6561 = trunc i32 %6560 to i8
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6561, i8* %6562, align 1
  %6563 = lshr i32 %6538, 31
  %6564 = xor i32 %6560, %6563
  %6565 = add i32 %6564, %6563
  %6566 = icmp eq i32 %6565, 2
  %6567 = zext i1 %6566 to i8
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6567, i8* %6568, align 1
  store %struct.Memory* %loadMem_43a953, %struct.Memory** %MEMORY
  %loadMem_43a956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6570 = getelementptr inbounds %struct.GPR, %struct.GPR* %6569, i32 0, i32 33
  %6571 = getelementptr inbounds %struct.Reg, %struct.Reg* %6570, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %6571 to i64*
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 1
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %EAX.i789 = bitcast %union.anon* %6574 to i32*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 5
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %ECX.i790 = bitcast %union.anon* %6577 to i32*
  %6578 = load i32, i32* %EAX.i789
  %6579 = zext i32 %6578 to i64
  %6580 = load i32, i32* %ECX.i790
  %6581 = zext i32 %6580 to i64
  %6582 = load i64, i64* %PC.i788
  %6583 = add i64 %6582, 2
  store i64 %6583, i64* %PC.i788
  %6584 = sub i32 %6578, %6580
  %6585 = icmp ult i32 %6578, %6580
  %6586 = zext i1 %6585 to i8
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6586, i8* %6587, align 1
  %6588 = and i32 %6584, 255
  %6589 = call i32 @llvm.ctpop.i32(i32 %6588)
  %6590 = trunc i32 %6589 to i8
  %6591 = and i8 %6590, 1
  %6592 = xor i8 %6591, 1
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6592, i8* %6593, align 1
  %6594 = xor i64 %6581, %6579
  %6595 = trunc i64 %6594 to i32
  %6596 = xor i32 %6595, %6584
  %6597 = lshr i32 %6596, 4
  %6598 = trunc i32 %6597 to i8
  %6599 = and i8 %6598, 1
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6599, i8* %6600, align 1
  %6601 = icmp eq i32 %6584, 0
  %6602 = zext i1 %6601 to i8
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6602, i8* %6603, align 1
  %6604 = lshr i32 %6584, 31
  %6605 = trunc i32 %6604 to i8
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6605, i8* %6606, align 1
  %6607 = lshr i32 %6578, 31
  %6608 = lshr i32 %6580, 31
  %6609 = xor i32 %6608, %6607
  %6610 = xor i32 %6604, %6607
  %6611 = add i32 %6610, %6609
  %6612 = icmp eq i32 %6611, 2
  %6613 = zext i1 %6612 to i8
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6613, i8* %6614, align 1
  store %struct.Memory* %loadMem_43a956, %struct.Memory** %MEMORY
  %loadMem_43a958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6616 = getelementptr inbounds %struct.GPR, %struct.GPR* %6615, i32 0, i32 33
  %6617 = getelementptr inbounds %struct.Reg, %struct.Reg* %6616, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %6617 to i64*
  %6618 = load i64, i64* %PC.i787
  %6619 = add i64 %6618, 66
  %6620 = load i64, i64* %PC.i787
  %6621 = add i64 %6620, 6
  %6622 = load i64, i64* %PC.i787
  %6623 = add i64 %6622, 6
  store i64 %6623, i64* %PC.i787
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6625 = load i8, i8* %6624, align 1
  %6626 = icmp eq i8 %6625, 0
  %6627 = zext i1 %6626 to i8
  store i8 %6627, i8* %BRANCH_TAKEN, align 1
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6629 = select i1 %6626, i64 %6619, i64 %6621
  store i64 %6629, i64* %6628, align 8
  store %struct.Memory* %loadMem_43a958, %struct.Memory** %MEMORY
  %loadBr_43a958 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a958 = icmp eq i8 %loadBr_43a958, 1
  br i1 %cmpBr_43a958, label %block_.L_43a99a, label %block_43a95e

block_43a95e:                                     ; preds = %block_43a947
  %loadMem_43a95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6631 = getelementptr inbounds %struct.GPR, %struct.GPR* %6630, i32 0, i32 33
  %6632 = getelementptr inbounds %struct.Reg, %struct.Reg* %6631, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %6632 to i64*
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 1
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %6635 to i64*
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6637 = getelementptr inbounds %struct.GPR, %struct.GPR* %6636, i32 0, i32 15
  %6638 = getelementptr inbounds %struct.Reg, %struct.Reg* %6637, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %6638 to i64*
  %6639 = load i64, i64* %RBP.i786
  %6640 = sub i64 %6639, 372
  %6641 = load i64, i64* %PC.i784
  %6642 = add i64 %6641, 7
  store i64 %6642, i64* %PC.i784
  %6643 = inttoptr i64 %6640 to i32*
  %6644 = load i32, i32* %6643
  %6645 = sext i32 %6644 to i64
  store i64 %6645, i64* %RAX.i785, align 8
  store %struct.Memory* %loadMem_43a95e, %struct.Memory** %MEMORY
  %loadMem_43a965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 33
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %6648 to i64*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 1
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 15
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %6654 to i64*
  %6655 = load i64, i64* %RBP.i783
  %6656 = load i64, i64* %RAX.i782
  %6657 = mul i64 %6656, 4
  %6658 = add i64 %6655, -160
  %6659 = add i64 %6658, %6657
  %6660 = load i64, i64* %PC.i781
  %6661 = add i64 %6660, 8
  store i64 %6661, i64* %PC.i781
  %6662 = inttoptr i64 %6659 to i32*
  %6663 = load i32, i32* %6662
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6664, align 1
  %6665 = and i32 %6663, 255
  %6666 = call i32 @llvm.ctpop.i32(i32 %6665)
  %6667 = trunc i32 %6666 to i8
  %6668 = and i8 %6667, 1
  %6669 = xor i8 %6668, 1
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6669, i8* %6670, align 1
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6671, align 1
  %6672 = icmp eq i32 %6663, 0
  %6673 = zext i1 %6672 to i8
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6673, i8* %6674, align 1
  %6675 = lshr i32 %6663, 31
  %6676 = trunc i32 %6675 to i8
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6676, i8* %6677, align 1
  %6678 = lshr i32 %6663, 31
  %6679 = xor i32 %6675, %6678
  %6680 = add i32 %6679, %6678
  %6681 = icmp eq i32 %6680, 2
  %6682 = zext i1 %6681 to i8
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6682, i8* %6683, align 1
  store %struct.Memory* %loadMem_43a965, %struct.Memory** %MEMORY
  %loadMem_43a96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 33
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %6686 to i64*
  %6687 = load i64, i64* %PC.i780
  %6688 = add i64 %6687, 45
  %6689 = load i64, i64* %PC.i780
  %6690 = add i64 %6689, 6
  %6691 = load i64, i64* %PC.i780
  %6692 = add i64 %6691, 6
  store i64 %6692, i64* %PC.i780
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6694 = load i8, i8* %6693, align 1
  store i8 %6694, i8* %BRANCH_TAKEN, align 1
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6696 = icmp ne i8 %6694, 0
  %6697 = select i1 %6696, i64 %6688, i64 %6690
  store i64 %6697, i64* %6695, align 8
  store %struct.Memory* %loadMem_43a96d, %struct.Memory** %MEMORY
  %loadBr_43a96d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a96d = icmp eq i8 %loadBr_43a96d, 1
  br i1 %cmpBr_43a96d, label %block_.L_43a99a, label %block_43a973

block_43a973:                                     ; preds = %block_43a95e
  %loadMem_43a973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 33
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 1
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 15
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %6706 to i64*
  %6707 = load i64, i64* %RBP.i779
  %6708 = sub i64 %6707, 48
  %6709 = load i64, i64* %PC.i777
  %6710 = add i64 %6709, 4
  store i64 %6710, i64* %PC.i777
  %6711 = inttoptr i64 %6708 to i64*
  %6712 = load i64, i64* %6711
  store i64 %6712, i64* %RAX.i778, align 8
  store %struct.Memory* %loadMem_43a973, %struct.Memory** %MEMORY
  %loadMem_43a977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 33
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 5
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %RCX.i775 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 15
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %6721 to i64*
  %6722 = load i64, i64* %RBP.i776
  %6723 = sub i64 %6722, 372
  %6724 = load i64, i64* %PC.i774
  %6725 = add i64 %6724, 7
  store i64 %6725, i64* %PC.i774
  %6726 = inttoptr i64 %6723 to i32*
  %6727 = load i32, i32* %6726
  %6728 = sext i32 %6727 to i64
  store i64 %6728, i64* %RCX.i775, align 8
  store %struct.Memory* %loadMem_43a977, %struct.Memory** %MEMORY
  %loadMem_43a97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 33
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %6731 to i64*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 5
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %RCX.i772 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 15
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %6737 to i64*
  %6738 = load i64, i64* %RBP.i773
  %6739 = load i64, i64* %RCX.i772
  %6740 = mul i64 %6739, 4
  %6741 = add i64 %6738, -160
  %6742 = add i64 %6741, %6740
  %6743 = load i64, i64* %PC.i771
  %6744 = add i64 %6743, 8
  store i64 %6744, i64* %PC.i771
  %6745 = inttoptr i64 %6742 to i32*
  %6746 = load i32, i32* %6745
  %6747 = sext i32 %6746 to i64
  store i64 %6747, i64* %RCX.i772, align 8
  store %struct.Memory* %loadMem_43a97e, %struct.Memory** %MEMORY
  %loadMem_43a986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 33
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %6750 to i64*
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 5
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %6753 to i64*
  %6754 = load i64, i64* %RCX.i770
  %6755 = load i64, i64* %PC.i769
  %6756 = add i64 %6755, 4
  store i64 %6756, i64* %PC.i769
  %6757 = sext i64 %6754 to i128
  %6758 = and i128 %6757, -18446744073709551616
  %6759 = zext i64 %6754 to i128
  %6760 = or i128 %6758, %6759
  %6761 = mul i128 48, %6760
  %6762 = trunc i128 %6761 to i64
  store i64 %6762, i64* %RCX.i770, align 8
  %6763 = sext i64 %6762 to i128
  %6764 = icmp ne i128 %6763, %6761
  %6765 = zext i1 %6764 to i8
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6765, i8* %6766, align 1
  %6767 = trunc i128 %6761 to i32
  %6768 = and i32 %6767, 255
  %6769 = call i32 @llvm.ctpop.i32(i32 %6768)
  %6770 = trunc i32 %6769 to i8
  %6771 = and i8 %6770, 1
  %6772 = xor i8 %6771, 1
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6772, i8* %6773, align 1
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6774, align 1
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6775, align 1
  %6776 = lshr i64 %6762, 63
  %6777 = trunc i64 %6776 to i8
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6777, i8* %6778, align 1
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6765, i8* %6779, align 1
  store %struct.Memory* %loadMem_43a986, %struct.Memory** %MEMORY
  %loadMem_43a98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6781 = getelementptr inbounds %struct.GPR, %struct.GPR* %6780, i32 0, i32 33
  %6782 = getelementptr inbounds %struct.Reg, %struct.Reg* %6781, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %6782 to i64*
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6784 = getelementptr inbounds %struct.GPR, %struct.GPR* %6783, i32 0, i32 1
  %6785 = getelementptr inbounds %struct.Reg, %struct.Reg* %6784, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %6785 to i64*
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 5
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %RCX.i768 = bitcast %union.anon* %6788 to i64*
  %6789 = load i64, i64* %RAX.i767
  %6790 = load i64, i64* %RCX.i768
  %6791 = load i64, i64* %PC.i766
  %6792 = add i64 %6791, 3
  store i64 %6792, i64* %PC.i766
  %6793 = add i64 %6790, %6789
  store i64 %6793, i64* %RAX.i767, align 8
  %6794 = icmp ult i64 %6793, %6789
  %6795 = icmp ult i64 %6793, %6790
  %6796 = or i1 %6794, %6795
  %6797 = zext i1 %6796 to i8
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6797, i8* %6798, align 1
  %6799 = trunc i64 %6793 to i32
  %6800 = and i32 %6799, 255
  %6801 = call i32 @llvm.ctpop.i32(i32 %6800)
  %6802 = trunc i32 %6801 to i8
  %6803 = and i8 %6802, 1
  %6804 = xor i8 %6803, 1
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6804, i8* %6805, align 1
  %6806 = xor i64 %6790, %6789
  %6807 = xor i64 %6806, %6793
  %6808 = lshr i64 %6807, 4
  %6809 = trunc i64 %6808 to i8
  %6810 = and i8 %6809, 1
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6810, i8* %6811, align 1
  %6812 = icmp eq i64 %6793, 0
  %6813 = zext i1 %6812 to i8
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6813, i8* %6814, align 1
  %6815 = lshr i64 %6793, 63
  %6816 = trunc i64 %6815 to i8
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6816, i8* %6817, align 1
  %6818 = lshr i64 %6789, 63
  %6819 = lshr i64 %6790, 63
  %6820 = xor i64 %6815, %6818
  %6821 = xor i64 %6815, %6819
  %6822 = add i64 %6820, %6821
  %6823 = icmp eq i64 %6822, 2
  %6824 = zext i1 %6823 to i8
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6824, i8* %6825, align 1
  store %struct.Memory* %loadMem_43a98a, %struct.Memory** %MEMORY
  %loadMem_43a98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 1
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RAX.i764 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 7
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %6834 to i64*
  %6835 = load i64, i64* %RAX.i764
  %6836 = add i64 %6835, 4
  %6837 = load i64, i64* %PC.i763
  %6838 = add i64 %6837, 4
  store i64 %6838, i64* %PC.i763
  %6839 = inttoptr i64 %6836 to i8*
  %6840 = load i8, i8* %6839
  %6841 = sext i8 %6840 to i64
  %6842 = and i64 %6841, 4294967295
  store i64 %6842, i64* %RDX.i765, align 8
  store %struct.Memory* %loadMem_43a98d, %struct.Memory** %MEMORY
  %loadMem_43a991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 33
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %6845 to i64*
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 7
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %EDX.i762 = bitcast %union.anon* %6848 to i32*
  %6849 = load i32, i32* %EDX.i762
  %6850 = zext i32 %6849 to i64
  %6851 = load i64, i64* %PC.i761
  %6852 = add i64 %6851, 3
  store i64 %6852, i64* %PC.i761
  %6853 = sub i32 %6849, 2
  %6854 = icmp ult i32 %6849, 2
  %6855 = zext i1 %6854 to i8
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6855, i8* %6856, align 1
  %6857 = and i32 %6853, 255
  %6858 = call i32 @llvm.ctpop.i32(i32 %6857)
  %6859 = trunc i32 %6858 to i8
  %6860 = and i8 %6859, 1
  %6861 = xor i8 %6860, 1
  %6862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6861, i8* %6862, align 1
  %6863 = xor i64 2, %6850
  %6864 = trunc i64 %6863 to i32
  %6865 = xor i32 %6864, %6853
  %6866 = lshr i32 %6865, 4
  %6867 = trunc i32 %6866 to i8
  %6868 = and i8 %6867, 1
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6868, i8* %6869, align 1
  %6870 = icmp eq i32 %6853, 0
  %6871 = zext i1 %6870 to i8
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6871, i8* %6872, align 1
  %6873 = lshr i32 %6853, 31
  %6874 = trunc i32 %6873 to i8
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6874, i8* %6875, align 1
  %6876 = lshr i32 %6849, 31
  %6877 = xor i32 %6873, %6876
  %6878 = add i32 %6877, %6876
  %6879 = icmp eq i32 %6878, 2
  %6880 = zext i1 %6879 to i8
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6880, i8* %6881, align 1
  store %struct.Memory* %loadMem_43a991, %struct.Memory** %MEMORY
  %loadMem_43a994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6883 = getelementptr inbounds %struct.GPR, %struct.GPR* %6882, i32 0, i32 33
  %6884 = getelementptr inbounds %struct.Reg, %struct.Reg* %6883, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %6884 to i64*
  %6885 = load i64, i64* %PC.i760
  %6886 = add i64 %6885, 104
  %6887 = load i64, i64* %PC.i760
  %6888 = add i64 %6887, 6
  %6889 = load i64, i64* %PC.i760
  %6890 = add i64 %6889, 6
  store i64 %6890, i64* %PC.i760
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6892 = load i8, i8* %6891, align 1
  store i8 %6892, i8* %BRANCH_TAKEN, align 1
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6894 = icmp ne i8 %6892, 0
  %6895 = select i1 %6894, i64 %6886, i64 %6888
  store i64 %6895, i64* %6893, align 8
  store %struct.Memory* %loadMem_43a994, %struct.Memory** %MEMORY
  %loadBr_43a994 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a994 = icmp eq i8 %loadBr_43a994, 1
  br i1 %cmpBr_43a994, label %block_.L_43a9fc, label %block_.L_43a99a

block_.L_43a99a:                                  ; preds = %block_43a973, %block_43a95e, %block_43a947
  %loadMem_43a99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 33
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 1
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 15
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %6904 to i64*
  %6905 = load i64, i64* %RBP.i759
  %6906 = sub i64 %6905, 384
  %6907 = load i64, i64* %PC.i757
  %6908 = add i64 %6907, 6
  store i64 %6908, i64* %PC.i757
  %6909 = inttoptr i64 %6906 to i32*
  %6910 = load i32, i32* %6909
  %6911 = zext i32 %6910 to i64
  store i64 %6911, i64* %RAX.i758, align 8
  store %struct.Memory* %loadMem_43a99a, %struct.Memory** %MEMORY
  %loadMem_43a9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 33
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %6914 to i64*
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6916 = getelementptr inbounds %struct.GPR, %struct.GPR* %6915, i32 0, i32 5
  %6917 = getelementptr inbounds %struct.Reg, %struct.Reg* %6916, i32 0, i32 0
  %RCX.i755 = bitcast %union.anon* %6917 to i64*
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6919 = getelementptr inbounds %struct.GPR, %struct.GPR* %6918, i32 0, i32 15
  %6920 = getelementptr inbounds %struct.Reg, %struct.Reg* %6919, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %6920 to i64*
  %6921 = load i64, i64* %RBP.i756
  %6922 = sub i64 %6921, 372
  %6923 = load i64, i64* %PC.i754
  %6924 = add i64 %6923, 6
  store i64 %6924, i64* %PC.i754
  %6925 = inttoptr i64 %6922 to i32*
  %6926 = load i32, i32* %6925
  %6927 = zext i32 %6926 to i64
  store i64 %6927, i64* %RCX.i755, align 8
  store %struct.Memory* %loadMem_43a9a0, %struct.Memory** %MEMORY
  %loadMem_43a9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 33
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %6930 to i64*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 5
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %6933 to i64*
  %6934 = load i64, i64* %RCX.i753
  %6935 = load i64, i64* %PC.i752
  %6936 = add i64 %6935, 3
  store i64 %6936, i64* %PC.i752
  %6937 = trunc i64 %6934 to i32
  %6938 = sub i32 %6937, 1
  %6939 = zext i32 %6938 to i64
  store i64 %6939, i64* %RCX.i753, align 8
  %6940 = icmp ult i32 %6937, 1
  %6941 = zext i1 %6940 to i8
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6941, i8* %6942, align 1
  %6943 = and i32 %6938, 255
  %6944 = call i32 @llvm.ctpop.i32(i32 %6943)
  %6945 = trunc i32 %6944 to i8
  %6946 = and i8 %6945, 1
  %6947 = xor i8 %6946, 1
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6947, i8* %6948, align 1
  %6949 = xor i64 1, %6934
  %6950 = trunc i64 %6949 to i32
  %6951 = xor i32 %6950, %6938
  %6952 = lshr i32 %6951, 4
  %6953 = trunc i32 %6952 to i8
  %6954 = and i8 %6953, 1
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6954, i8* %6955, align 1
  %6956 = icmp eq i32 %6938, 0
  %6957 = zext i1 %6956 to i8
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6957, i8* %6958, align 1
  %6959 = lshr i32 %6938, 31
  %6960 = trunc i32 %6959 to i8
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6960, i8* %6961, align 1
  %6962 = lshr i32 %6937, 31
  %6963 = xor i32 %6959, %6962
  %6964 = add i32 %6963, %6962
  %6965 = icmp eq i32 %6964, 2
  %6966 = zext i1 %6965 to i8
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6966, i8* %6967, align 1
  store %struct.Memory* %loadMem_43a9a6, %struct.Memory** %MEMORY
  %loadMem_43a9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 33
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %6970 to i64*
  %6971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6972 = getelementptr inbounds %struct.GPR, %struct.GPR* %6971, i32 0, i32 1
  %6973 = getelementptr inbounds %struct.Reg, %struct.Reg* %6972, i32 0, i32 0
  %EAX.i750 = bitcast %union.anon* %6973 to i32*
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6975 = getelementptr inbounds %struct.GPR, %struct.GPR* %6974, i32 0, i32 5
  %6976 = getelementptr inbounds %struct.Reg, %struct.Reg* %6975, i32 0, i32 0
  %ECX.i751 = bitcast %union.anon* %6976 to i32*
  %6977 = load i32, i32* %EAX.i750
  %6978 = zext i32 %6977 to i64
  %6979 = load i32, i32* %ECX.i751
  %6980 = zext i32 %6979 to i64
  %6981 = load i64, i64* %PC.i749
  %6982 = add i64 %6981, 2
  store i64 %6982, i64* %PC.i749
  %6983 = sub i32 %6977, %6979
  %6984 = icmp ult i32 %6977, %6979
  %6985 = zext i1 %6984 to i8
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6985, i8* %6986, align 1
  %6987 = and i32 %6983, 255
  %6988 = call i32 @llvm.ctpop.i32(i32 %6987)
  %6989 = trunc i32 %6988 to i8
  %6990 = and i8 %6989, 1
  %6991 = xor i8 %6990, 1
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6991, i8* %6992, align 1
  %6993 = xor i64 %6980, %6978
  %6994 = trunc i64 %6993 to i32
  %6995 = xor i32 %6994, %6983
  %6996 = lshr i32 %6995, 4
  %6997 = trunc i32 %6996 to i8
  %6998 = and i8 %6997, 1
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6998, i8* %6999, align 1
  %7000 = icmp eq i32 %6983, 0
  %7001 = zext i1 %7000 to i8
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7001, i8* %7002, align 1
  %7003 = lshr i32 %6983, 31
  %7004 = trunc i32 %7003 to i8
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7004, i8* %7005, align 1
  %7006 = lshr i32 %6977, 31
  %7007 = lshr i32 %6979, 31
  %7008 = xor i32 %7007, %7006
  %7009 = xor i32 %7003, %7006
  %7010 = add i32 %7009, %7008
  %7011 = icmp eq i32 %7010, 2
  %7012 = zext i1 %7011 to i8
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7012, i8* %7013, align 1
  store %struct.Memory* %loadMem_43a9a9, %struct.Memory** %MEMORY
  %loadMem_43a9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 33
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %7016 to i64*
  %7017 = load i64, i64* %PC.i748
  %7018 = add i64 %7017, 66
  %7019 = load i64, i64* %PC.i748
  %7020 = add i64 %7019, 6
  %7021 = load i64, i64* %PC.i748
  %7022 = add i64 %7021, 6
  store i64 %7022, i64* %PC.i748
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7024 = load i8, i8* %7023, align 1
  %7025 = icmp eq i8 %7024, 0
  %7026 = zext i1 %7025 to i8
  store i8 %7026, i8* %BRANCH_TAKEN, align 1
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7028 = select i1 %7025, i64 %7018, i64 %7020
  store i64 %7028, i64* %7027, align 8
  store %struct.Memory* %loadMem_43a9ab, %struct.Memory** %MEMORY
  %loadBr_43a9ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9ab = icmp eq i8 %loadBr_43a9ab, 1
  br i1 %cmpBr_43a9ab, label %block_.L_43a9ed, label %block_43a9b1

block_43a9b1:                                     ; preds = %block_.L_43a99a
  %loadMem_43a9b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7030 = getelementptr inbounds %struct.GPR, %struct.GPR* %7029, i32 0, i32 33
  %7031 = getelementptr inbounds %struct.Reg, %struct.Reg* %7030, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %7031 to i64*
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 1
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 15
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %7037 to i64*
  %7038 = load i64, i64* %RBP.i747
  %7039 = sub i64 %7038, 384
  %7040 = load i64, i64* %PC.i745
  %7041 = add i64 %7040, 7
  store i64 %7041, i64* %PC.i745
  %7042 = inttoptr i64 %7039 to i32*
  %7043 = load i32, i32* %7042
  %7044 = sext i32 %7043 to i64
  store i64 %7044, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_43a9b1, %struct.Memory** %MEMORY
  %loadMem_43a9b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7046 = getelementptr inbounds %struct.GPR, %struct.GPR* %7045, i32 0, i32 33
  %7047 = getelementptr inbounds %struct.Reg, %struct.Reg* %7046, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %7047 to i64*
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 1
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %7050 to i64*
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7052 = getelementptr inbounds %struct.GPR, %struct.GPR* %7051, i32 0, i32 15
  %7053 = getelementptr inbounds %struct.Reg, %struct.Reg* %7052, i32 0, i32 0
  %RBP.i744 = bitcast %union.anon* %7053 to i64*
  %7054 = load i64, i64* %RBP.i744
  %7055 = load i64, i64* %RAX.i743
  %7056 = mul i64 %7055, 4
  %7057 = add i64 %7054, -160
  %7058 = add i64 %7057, %7056
  %7059 = load i64, i64* %PC.i742
  %7060 = add i64 %7059, 8
  store i64 %7060, i64* %PC.i742
  %7061 = inttoptr i64 %7058 to i32*
  %7062 = load i32, i32* %7061
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7063, align 1
  %7064 = and i32 %7062, 255
  %7065 = call i32 @llvm.ctpop.i32(i32 %7064)
  %7066 = trunc i32 %7065 to i8
  %7067 = and i8 %7066, 1
  %7068 = xor i8 %7067, 1
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7068, i8* %7069, align 1
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7070, align 1
  %7071 = icmp eq i32 %7062, 0
  %7072 = zext i1 %7071 to i8
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7072, i8* %7073, align 1
  %7074 = lshr i32 %7062, 31
  %7075 = trunc i32 %7074 to i8
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7075, i8* %7076, align 1
  %7077 = lshr i32 %7062, 31
  %7078 = xor i32 %7074, %7077
  %7079 = add i32 %7078, %7077
  %7080 = icmp eq i32 %7079, 2
  %7081 = zext i1 %7080 to i8
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7081, i8* %7082, align 1
  store %struct.Memory* %loadMem_43a9b8, %struct.Memory** %MEMORY
  %loadMem_43a9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 33
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %7085 to i64*
  %7086 = load i64, i64* %PC.i741
  %7087 = add i64 %7086, 45
  %7088 = load i64, i64* %PC.i741
  %7089 = add i64 %7088, 6
  %7090 = load i64, i64* %PC.i741
  %7091 = add i64 %7090, 6
  store i64 %7091, i64* %PC.i741
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7093 = load i8, i8* %7092, align 1
  store i8 %7093, i8* %BRANCH_TAKEN, align 1
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7095 = icmp ne i8 %7093, 0
  %7096 = select i1 %7095, i64 %7087, i64 %7089
  store i64 %7096, i64* %7094, align 8
  store %struct.Memory* %loadMem_43a9c0, %struct.Memory** %MEMORY
  %loadBr_43a9c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9c0 = icmp eq i8 %loadBr_43a9c0, 1
  br i1 %cmpBr_43a9c0, label %block_.L_43a9ed, label %block_43a9c6

block_43a9c6:                                     ; preds = %block_43a9b1
  %loadMem_43a9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7098 = getelementptr inbounds %struct.GPR, %struct.GPR* %7097, i32 0, i32 33
  %7099 = getelementptr inbounds %struct.Reg, %struct.Reg* %7098, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %7099 to i64*
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 1
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %RAX.i739 = bitcast %union.anon* %7102 to i64*
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7104 = getelementptr inbounds %struct.GPR, %struct.GPR* %7103, i32 0, i32 15
  %7105 = getelementptr inbounds %struct.Reg, %struct.Reg* %7104, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %7105 to i64*
  %7106 = load i64, i64* %RBP.i740
  %7107 = sub i64 %7106, 48
  %7108 = load i64, i64* %PC.i738
  %7109 = add i64 %7108, 4
  store i64 %7109, i64* %PC.i738
  %7110 = inttoptr i64 %7107 to i64*
  %7111 = load i64, i64* %7110
  store i64 %7111, i64* %RAX.i739, align 8
  store %struct.Memory* %loadMem_43a9c6, %struct.Memory** %MEMORY
  %loadMem_43a9ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 33
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %7114 to i64*
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 5
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %RCX.i736 = bitcast %union.anon* %7117 to i64*
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 15
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %7120 to i64*
  %7121 = load i64, i64* %RBP.i737
  %7122 = sub i64 %7121, 384
  %7123 = load i64, i64* %PC.i735
  %7124 = add i64 %7123, 7
  store i64 %7124, i64* %PC.i735
  %7125 = inttoptr i64 %7122 to i32*
  %7126 = load i32, i32* %7125
  %7127 = sext i32 %7126 to i64
  store i64 %7127, i64* %RCX.i736, align 8
  store %struct.Memory* %loadMem_43a9ca, %struct.Memory** %MEMORY
  %loadMem_43a9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7129 = getelementptr inbounds %struct.GPR, %struct.GPR* %7128, i32 0, i32 33
  %7130 = getelementptr inbounds %struct.Reg, %struct.Reg* %7129, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %7130 to i64*
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7132 = getelementptr inbounds %struct.GPR, %struct.GPR* %7131, i32 0, i32 5
  %7133 = getelementptr inbounds %struct.Reg, %struct.Reg* %7132, i32 0, i32 0
  %RCX.i733 = bitcast %union.anon* %7133 to i64*
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7135 = getelementptr inbounds %struct.GPR, %struct.GPR* %7134, i32 0, i32 15
  %7136 = getelementptr inbounds %struct.Reg, %struct.Reg* %7135, i32 0, i32 0
  %RBP.i734 = bitcast %union.anon* %7136 to i64*
  %7137 = load i64, i64* %RBP.i734
  %7138 = load i64, i64* %RCX.i733
  %7139 = mul i64 %7138, 4
  %7140 = add i64 %7137, -160
  %7141 = add i64 %7140, %7139
  %7142 = load i64, i64* %PC.i732
  %7143 = add i64 %7142, 8
  store i64 %7143, i64* %PC.i732
  %7144 = inttoptr i64 %7141 to i32*
  %7145 = load i32, i32* %7144
  %7146 = sext i32 %7145 to i64
  store i64 %7146, i64* %RCX.i733, align 8
  store %struct.Memory* %loadMem_43a9d1, %struct.Memory** %MEMORY
  %loadMem_43a9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7148 = getelementptr inbounds %struct.GPR, %struct.GPR* %7147, i32 0, i32 33
  %7149 = getelementptr inbounds %struct.Reg, %struct.Reg* %7148, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %7149 to i64*
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 5
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %RCX.i731 = bitcast %union.anon* %7152 to i64*
  %7153 = load i64, i64* %RCX.i731
  %7154 = load i64, i64* %PC.i730
  %7155 = add i64 %7154, 4
  store i64 %7155, i64* %PC.i730
  %7156 = sext i64 %7153 to i128
  %7157 = and i128 %7156, -18446744073709551616
  %7158 = zext i64 %7153 to i128
  %7159 = or i128 %7157, %7158
  %7160 = mul i128 48, %7159
  %7161 = trunc i128 %7160 to i64
  store i64 %7161, i64* %RCX.i731, align 8
  %7162 = sext i64 %7161 to i128
  %7163 = icmp ne i128 %7162, %7160
  %7164 = zext i1 %7163 to i8
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7164, i8* %7165, align 1
  %7166 = trunc i128 %7160 to i32
  %7167 = and i32 %7166, 255
  %7168 = call i32 @llvm.ctpop.i32(i32 %7167)
  %7169 = trunc i32 %7168 to i8
  %7170 = and i8 %7169, 1
  %7171 = xor i8 %7170, 1
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7171, i8* %7172, align 1
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7173, align 1
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7174, align 1
  %7175 = lshr i64 %7161, 63
  %7176 = trunc i64 %7175 to i8
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7176, i8* %7177, align 1
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7164, i8* %7178, align 1
  store %struct.Memory* %loadMem_43a9d9, %struct.Memory** %MEMORY
  %loadMem_43a9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7180 = getelementptr inbounds %struct.GPR, %struct.GPR* %7179, i32 0, i32 33
  %7181 = getelementptr inbounds %struct.Reg, %struct.Reg* %7180, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %7181 to i64*
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 1
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %7184 to i64*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 5
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %RCX.i729 = bitcast %union.anon* %7187 to i64*
  %7188 = load i64, i64* %RAX.i728
  %7189 = load i64, i64* %RCX.i729
  %7190 = load i64, i64* %PC.i727
  %7191 = add i64 %7190, 3
  store i64 %7191, i64* %PC.i727
  %7192 = add i64 %7189, %7188
  store i64 %7192, i64* %RAX.i728, align 8
  %7193 = icmp ult i64 %7192, %7188
  %7194 = icmp ult i64 %7192, %7189
  %7195 = or i1 %7193, %7194
  %7196 = zext i1 %7195 to i8
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7196, i8* %7197, align 1
  %7198 = trunc i64 %7192 to i32
  %7199 = and i32 %7198, 255
  %7200 = call i32 @llvm.ctpop.i32(i32 %7199)
  %7201 = trunc i32 %7200 to i8
  %7202 = and i8 %7201, 1
  %7203 = xor i8 %7202, 1
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7203, i8* %7204, align 1
  %7205 = xor i64 %7189, %7188
  %7206 = xor i64 %7205, %7192
  %7207 = lshr i64 %7206, 4
  %7208 = trunc i64 %7207 to i8
  %7209 = and i8 %7208, 1
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7209, i8* %7210, align 1
  %7211 = icmp eq i64 %7192, 0
  %7212 = zext i1 %7211 to i8
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7212, i8* %7213, align 1
  %7214 = lshr i64 %7192, 63
  %7215 = trunc i64 %7214 to i8
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7215, i8* %7216, align 1
  %7217 = lshr i64 %7188, 63
  %7218 = lshr i64 %7189, 63
  %7219 = xor i64 %7214, %7217
  %7220 = xor i64 %7214, %7218
  %7221 = add i64 %7219, %7220
  %7222 = icmp eq i64 %7221, 2
  %7223 = zext i1 %7222 to i8
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7223, i8* %7224, align 1
  store %struct.Memory* %loadMem_43a9dd, %struct.Memory** %MEMORY
  %loadMem_43a9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 1
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 7
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %RDX.i726 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %RAX.i725
  %7235 = add i64 %7234, 4
  %7236 = load i64, i64* %PC.i724
  %7237 = add i64 %7236, 4
  store i64 %7237, i64* %PC.i724
  %7238 = inttoptr i64 %7235 to i8*
  %7239 = load i8, i8* %7238
  %7240 = sext i8 %7239 to i64
  %7241 = and i64 %7240, 4294967295
  store i64 %7241, i64* %RDX.i726, align 8
  store %struct.Memory* %loadMem_43a9e0, %struct.Memory** %MEMORY
  %loadMem_43a9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 33
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %7244 to i64*
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7246 = getelementptr inbounds %struct.GPR, %struct.GPR* %7245, i32 0, i32 7
  %7247 = getelementptr inbounds %struct.Reg, %struct.Reg* %7246, i32 0, i32 0
  %EDX.i723 = bitcast %union.anon* %7247 to i32*
  %7248 = load i32, i32* %EDX.i723
  %7249 = zext i32 %7248 to i64
  %7250 = load i64, i64* %PC.i722
  %7251 = add i64 %7250, 3
  store i64 %7251, i64* %PC.i722
  %7252 = sub i32 %7248, 2
  %7253 = icmp ult i32 %7248, 2
  %7254 = zext i1 %7253 to i8
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7254, i8* %7255, align 1
  %7256 = and i32 %7252, 255
  %7257 = call i32 @llvm.ctpop.i32(i32 %7256)
  %7258 = trunc i32 %7257 to i8
  %7259 = and i8 %7258, 1
  %7260 = xor i8 %7259, 1
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7260, i8* %7261, align 1
  %7262 = xor i64 2, %7249
  %7263 = trunc i64 %7262 to i32
  %7264 = xor i32 %7263, %7252
  %7265 = lshr i32 %7264, 4
  %7266 = trunc i32 %7265 to i8
  %7267 = and i8 %7266, 1
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7267, i8* %7268, align 1
  %7269 = icmp eq i32 %7252, 0
  %7270 = zext i1 %7269 to i8
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7270, i8* %7271, align 1
  %7272 = lshr i32 %7252, 31
  %7273 = trunc i32 %7272 to i8
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7273, i8* %7274, align 1
  %7275 = lshr i32 %7248, 31
  %7276 = xor i32 %7272, %7275
  %7277 = add i32 %7276, %7275
  %7278 = icmp eq i32 %7277, 2
  %7279 = zext i1 %7278 to i8
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7279, i8* %7280, align 1
  store %struct.Memory* %loadMem_43a9e4, %struct.Memory** %MEMORY
  %loadMem_43a9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 33
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %7283 to i64*
  %7284 = load i64, i64* %PC.i721
  %7285 = add i64 %7284, 21
  %7286 = load i64, i64* %PC.i721
  %7287 = add i64 %7286, 6
  %7288 = load i64, i64* %PC.i721
  %7289 = add i64 %7288, 6
  store i64 %7289, i64* %PC.i721
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7291 = load i8, i8* %7290, align 1
  store i8 %7291, i8* %BRANCH_TAKEN, align 1
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7293 = icmp ne i8 %7291, 0
  %7294 = select i1 %7293, i64 %7285, i64 %7287
  store i64 %7294, i64* %7292, align 8
  store %struct.Memory* %loadMem_43a9e7, %struct.Memory** %MEMORY
  %loadBr_43a9e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9e7 = icmp eq i8 %loadBr_43a9e7, 1
  br i1 %cmpBr_43a9e7, label %block_.L_43a9fc, label %block_.L_43a9ed

block_.L_43a9ed:                                  ; preds = %block_43a9c6, %block_43a9b1, %block_.L_43a99a
  %loadMem_43a9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 33
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 15
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %RBP.i720 = bitcast %union.anon* %7300 to i64*
  %7301 = load i64, i64* %RBP.i720
  %7302 = sub i64 %7301, 376
  %7303 = load i64, i64* %PC.i719
  %7304 = add i64 %7303, 10
  store i64 %7304, i64* %PC.i719
  %7305 = inttoptr i64 %7302 to i32*
  store i32 0, i32* %7305
  store %struct.Memory* %loadMem_43a9ed, %struct.Memory** %MEMORY
  %loadMem_43a9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 33
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %7308 to i64*
  %7309 = load i64, i64* %PC.i718
  %7310 = add i64 %7309, 35
  %7311 = load i64, i64* %PC.i718
  %7312 = add i64 %7311, 5
  store i64 %7312, i64* %PC.i718
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7310, i64* %7313, align 8
  store %struct.Memory* %loadMem_43a9f7, %struct.Memory** %MEMORY
  br label %block_.L_43aa1a

block_.L_43a9fc:                                  ; preds = %block_43a9c6, %block_43a973, %block_43a920, %block_43a8f9, %block_43a8d2, %block_43a88b
  %loadMem_43a9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 33
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %7316 to i64*
  %7317 = load i64, i64* %PC.i717
  %7318 = add i64 %7317, 5
  %7319 = load i64, i64* %PC.i717
  %7320 = add i64 %7319, 5
  store i64 %7320, i64* %PC.i717
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7318, i64* %7321, align 8
  store %struct.Memory* %loadMem_43a9fc, %struct.Memory** %MEMORY
  br label %block_.L_43aa01

block_.L_43aa01:                                  ; preds = %block_.L_43a9fc, %block_43a86d
  %loadMem_43aa01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7323 = getelementptr inbounds %struct.GPR, %struct.GPR* %7322, i32 0, i32 33
  %7324 = getelementptr inbounds %struct.Reg, %struct.Reg* %7323, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %7324 to i64*
  %7325 = load i64, i64* %PC.i716
  %7326 = add i64 %7325, 5
  %7327 = load i64, i64* %PC.i716
  %7328 = add i64 %7327, 5
  store i64 %7328, i64* %PC.i716
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7326, i64* %7329, align 8
  store %struct.Memory* %loadMem_43aa01, %struct.Memory** %MEMORY
  br label %block_.L_43aa06

block_.L_43aa06:                                  ; preds = %block_.L_43aa01
  %loadMem_43aa06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 33
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %7332 to i64*
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7334 = getelementptr inbounds %struct.GPR, %struct.GPR* %7333, i32 0, i32 1
  %7335 = getelementptr inbounds %struct.Reg, %struct.Reg* %7334, i32 0, i32 0
  %RAX.i714 = bitcast %union.anon* %7335 to i64*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 15
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %RBP.i715
  %7340 = sub i64 %7339, 380
  %7341 = load i64, i64* %PC.i713
  %7342 = add i64 %7341, 6
  store i64 %7342, i64* %PC.i713
  %7343 = inttoptr i64 %7340 to i32*
  %7344 = load i32, i32* %7343
  %7345 = zext i32 %7344 to i64
  store i64 %7345, i64* %RAX.i714, align 8
  store %struct.Memory* %loadMem_43aa06, %struct.Memory** %MEMORY
  %loadMem_43aa0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 33
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %7348 to i64*
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 1
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %RAX.i712 = bitcast %union.anon* %7351 to i64*
  %7352 = load i64, i64* %RAX.i712
  %7353 = load i64, i64* %PC.i711
  %7354 = add i64 %7353, 3
  store i64 %7354, i64* %PC.i711
  %7355 = trunc i64 %7352 to i32
  %7356 = add i32 1, %7355
  %7357 = zext i32 %7356 to i64
  store i64 %7357, i64* %RAX.i712, align 8
  %7358 = icmp ult i32 %7356, %7355
  %7359 = icmp ult i32 %7356, 1
  %7360 = or i1 %7358, %7359
  %7361 = zext i1 %7360 to i8
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7361, i8* %7362, align 1
  %7363 = and i32 %7356, 255
  %7364 = call i32 @llvm.ctpop.i32(i32 %7363)
  %7365 = trunc i32 %7364 to i8
  %7366 = and i8 %7365, 1
  %7367 = xor i8 %7366, 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7367, i8* %7368, align 1
  %7369 = xor i64 1, %7352
  %7370 = trunc i64 %7369 to i32
  %7371 = xor i32 %7370, %7356
  %7372 = lshr i32 %7371, 4
  %7373 = trunc i32 %7372 to i8
  %7374 = and i8 %7373, 1
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7374, i8* %7375, align 1
  %7376 = icmp eq i32 %7356, 0
  %7377 = zext i1 %7376 to i8
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7377, i8* %7378, align 1
  %7379 = lshr i32 %7356, 31
  %7380 = trunc i32 %7379 to i8
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7380, i8* %7381, align 1
  %7382 = lshr i32 %7355, 31
  %7383 = xor i32 %7379, %7382
  %7384 = add i32 %7383, %7379
  %7385 = icmp eq i32 %7384, 2
  %7386 = zext i1 %7385 to i8
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7386, i8* %7387, align 1
  store %struct.Memory* %loadMem_43aa0c, %struct.Memory** %MEMORY
  %loadMem_43aa0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 1
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %EAX.i709 = bitcast %union.anon* %7393 to i32*
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 15
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %7396 to i64*
  %7397 = load i64, i64* %RBP.i710
  %7398 = sub i64 %7397, 380
  %7399 = load i32, i32* %EAX.i709
  %7400 = zext i32 %7399 to i64
  %7401 = load i64, i64* %PC.i708
  %7402 = add i64 %7401, 6
  store i64 %7402, i64* %PC.i708
  %7403 = inttoptr i64 %7398 to i32*
  store i32 %7399, i32* %7403
  store %struct.Memory* %loadMem_43aa0f, %struct.Memory** %MEMORY
  %loadMem_43aa15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7405 = getelementptr inbounds %struct.GPR, %struct.GPR* %7404, i32 0, i32 33
  %7406 = getelementptr inbounds %struct.Reg, %struct.Reg* %7405, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %7406 to i64*
  %7407 = load i64, i64* %PC.i707
  %7408 = add i64 %7407, -449
  %7409 = load i64, i64* %PC.i707
  %7410 = add i64 %7409, 5
  store i64 %7410, i64* %PC.i707
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7408, i64* %7411, align 8
  store %struct.Memory* %loadMem_43aa15, %struct.Memory** %MEMORY
  br label %block_.L_43a854

block_.L_43aa1a:                                  ; preds = %block_.L_43a9ed, %block_.L_43a854
  %loadMem_43aa1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 33
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %7414 to i64*
  %7415 = load i64, i64* %PC.i706
  %7416 = add i64 %7415, 5
  %7417 = load i64, i64* %PC.i706
  %7418 = add i64 %7417, 5
  store i64 %7418, i64* %PC.i706
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7416, i64* %7419, align 8
  store %struct.Memory* %loadMem_43aa1a, %struct.Memory** %MEMORY
  br label %block_.L_43aa1f

block_.L_43aa1f:                                  ; preds = %block_.L_43aa1a, %block_.L_43a83d
  %loadMem_43aa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7421 = getelementptr inbounds %struct.GPR, %struct.GPR* %7420, i32 0, i32 33
  %7422 = getelementptr inbounds %struct.Reg, %struct.Reg* %7421, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %7422 to i64*
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 15
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %7425 to i64*
  %7426 = load i64, i64* %RBP.i705
  %7427 = sub i64 %7426, 376
  %7428 = load i64, i64* %PC.i704
  %7429 = add i64 %7428, 7
  store i64 %7429, i64* %PC.i704
  %7430 = inttoptr i64 %7427 to i32*
  %7431 = load i32, i32* %7430
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7432, align 1
  %7433 = and i32 %7431, 255
  %7434 = call i32 @llvm.ctpop.i32(i32 %7433)
  %7435 = trunc i32 %7434 to i8
  %7436 = and i8 %7435, 1
  %7437 = xor i8 %7436, 1
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7437, i8* %7438, align 1
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7439, align 1
  %7440 = icmp eq i32 %7431, 0
  %7441 = zext i1 %7440 to i8
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7441, i8* %7442, align 1
  %7443 = lshr i32 %7431, 31
  %7444 = trunc i32 %7443 to i8
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7444, i8* %7445, align 1
  %7446 = lshr i32 %7431, 31
  %7447 = xor i32 %7443, %7446
  %7448 = add i32 %7447, %7446
  %7449 = icmp eq i32 %7448, 2
  %7450 = zext i1 %7449 to i8
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7450, i8* %7451, align 1
  store %struct.Memory* %loadMem_43aa1f, %struct.Memory** %MEMORY
  %loadMem_43aa26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 33
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %7454 to i64*
  %7455 = load i64, i64* %PC.i703
  %7456 = add i64 %7455, 44
  %7457 = load i64, i64* %PC.i703
  %7458 = add i64 %7457, 6
  %7459 = load i64, i64* %PC.i703
  %7460 = add i64 %7459, 6
  store i64 %7460, i64* %PC.i703
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7462 = load i8, i8* %7461, align 1
  %7463 = icmp eq i8 %7462, 0
  %7464 = zext i1 %7463 to i8
  store i8 %7464, i8* %BRANCH_TAKEN, align 1
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7466 = select i1 %7463, i64 %7456, i64 %7458
  store i64 %7466, i64* %7465, align 8
  store %struct.Memory* %loadMem_43aa26, %struct.Memory** %MEMORY
  %loadBr_43aa26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa26 = icmp eq i8 %loadBr_43aa26, 1
  br i1 %cmpBr_43aa26, label %block_.L_43aa52, label %block_43aa2c

block_43aa2c:                                     ; preds = %block_.L_43aa1f
  %loadMem_43aa2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7468 = getelementptr inbounds %struct.GPR, %struct.GPR* %7467, i32 0, i32 33
  %7469 = getelementptr inbounds %struct.Reg, %struct.Reg* %7468, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %7469 to i64*
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7471 = getelementptr inbounds %struct.GPR, %struct.GPR* %7470, i32 0, i32 11
  %7472 = getelementptr inbounds %struct.Reg, %struct.Reg* %7471, i32 0, i32 0
  %RDI.i701 = bitcast %union.anon* %7472 to i64*
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7474 = getelementptr inbounds %struct.GPR, %struct.GPR* %7473, i32 0, i32 15
  %7475 = getelementptr inbounds %struct.Reg, %struct.Reg* %7474, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %7475 to i64*
  %7476 = load i64, i64* %RBP.i702
  %7477 = sub i64 %7476, 360
  %7478 = load i64, i64* %PC.i700
  %7479 = add i64 %7478, 7
  store i64 %7479, i64* %PC.i700
  store i64 %7477, i64* %RDI.i701, align 8
  store %struct.Memory* %loadMem_43aa2c, %struct.Memory** %MEMORY
  %loadMem_43aa33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 33
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %7482 to i64*
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 9
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %RSI.i698 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 15
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %7488 to i64*
  %7489 = load i64, i64* %RBP.i699
  %7490 = sub i64 %7489, 352
  %7491 = load i64, i64* %PC.i697
  %7492 = add i64 %7491, 7
  store i64 %7492, i64* %PC.i697
  store i64 %7490, i64* %RSI.i698, align 8
  store %struct.Memory* %loadMem_43aa33, %struct.Memory** %MEMORY
  %loadMem1_43aa3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 33
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %PC.i696
  %7497 = add i64 %7496, 1718
  %7498 = load i64, i64* %PC.i696
  %7499 = add i64 %7498, 5
  %7500 = load i64, i64* %PC.i696
  %7501 = add i64 %7500, 5
  store i64 %7501, i64* %PC.i696
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7503 = load i64, i64* %7502, align 8
  %7504 = add i64 %7503, -8
  %7505 = inttoptr i64 %7504 to i64*
  store i64 %7499, i64* %7505
  store i64 %7504, i64* %7502, align 8
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7497, i64* %7506, align 8
  store %struct.Memory* %loadMem1_43aa3a, %struct.Memory** %MEMORY
  %loadMem2_43aa3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa3a = load i64, i64* %3
  %call2_43aa3a = call %struct.Memory* @sub_43b0f0.next_map(%struct.State* %0, i64 %loadPC_43aa3a, %struct.Memory* %loadMem2_43aa3a)
  store %struct.Memory* %call2_43aa3a, %struct.Memory** %MEMORY
  %loadMem_43aa3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 33
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %7509 to i64*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 1
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %EAX.i695 = bitcast %union.anon* %7512 to i32*
  %7513 = load i32, i32* %EAX.i695
  %7514 = zext i32 %7513 to i64
  %7515 = load i64, i64* %PC.i694
  %7516 = add i64 %7515, 3
  store i64 %7516, i64* %PC.i694
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7517, align 1
  %7518 = and i32 %7513, 255
  %7519 = call i32 @llvm.ctpop.i32(i32 %7518)
  %7520 = trunc i32 %7519 to i8
  %7521 = and i8 %7520, 1
  %7522 = xor i8 %7521, 1
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7522, i8* %7523, align 1
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7524, align 1
  %7525 = icmp eq i32 %7513, 0
  %7526 = zext i1 %7525 to i8
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7526, i8* %7527, align 1
  %7528 = lshr i32 %7513, 31
  %7529 = trunc i32 %7528 to i8
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7529, i8* %7530, align 1
  %7531 = lshr i32 %7513, 31
  %7532 = xor i32 %7528, %7531
  %7533 = add i32 %7532, %7531
  %7534 = icmp eq i32 %7533, 2
  %7535 = zext i1 %7534 to i8
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7535, i8* %7536, align 1
  store %struct.Memory* %loadMem_43aa3f, %struct.Memory** %MEMORY
  %loadMem_43aa42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 33
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %7539 to i64*
  %7540 = load i64, i64* %PC.i693
  %7541 = add i64 %7540, 11
  %7542 = load i64, i64* %PC.i693
  %7543 = add i64 %7542, 6
  %7544 = load i64, i64* %PC.i693
  %7545 = add i64 %7544, 6
  store i64 %7545, i64* %PC.i693
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7547 = load i8, i8* %7546, align 1
  %7548 = icmp eq i8 %7547, 0
  %7549 = zext i1 %7548 to i8
  store i8 %7549, i8* %BRANCH_TAKEN, align 1
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7551 = select i1 %7548, i64 %7541, i64 %7543
  store i64 %7551, i64* %7550, align 8
  store %struct.Memory* %loadMem_43aa42, %struct.Memory** %MEMORY
  %loadBr_43aa42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa42 = icmp eq i8 %loadBr_43aa42, 1
  br i1 %cmpBr_43aa42, label %block_.L_43aa4d, label %block_43aa48

block_43aa48:                                     ; preds = %block_43aa2c
  %loadMem_43aa48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 33
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %7554 to i64*
  %7555 = load i64, i64* %PC.i692
  %7556 = add i64 %7555, 79
  %7557 = load i64, i64* %PC.i692
  %7558 = add i64 %7557, 5
  store i64 %7558, i64* %PC.i692
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7556, i64* %7559, align 8
  store %struct.Memory* %loadMem_43aa48, %struct.Memory** %MEMORY
  br label %block_.L_43aa97

block_.L_43aa4d:                                  ; preds = %block_43aa2c
  %loadMem_43aa4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7561 = getelementptr inbounds %struct.GPR, %struct.GPR* %7560, i32 0, i32 33
  %7562 = getelementptr inbounds %struct.Reg, %struct.Reg* %7561, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %7562 to i64*
  %7563 = load i64, i64* %PC.i691
  %7564 = add i64 %7563, 69
  %7565 = load i64, i64* %PC.i691
  %7566 = add i64 %7565, 5
  store i64 %7566, i64* %PC.i691
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7564, i64* %7567, align 8
  store %struct.Memory* %loadMem_43aa4d, %struct.Memory** %MEMORY
  br label %block_.L_43aa92

block_.L_43aa52:                                  ; preds = %block_.L_43aa1f
  %loadMem_43aa52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7569 = getelementptr inbounds %struct.GPR, %struct.GPR* %7568, i32 0, i32 33
  %7570 = getelementptr inbounds %struct.Reg, %struct.Reg* %7569, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %7570 to i64*
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 1
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %7573 to i64*
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7575 = getelementptr inbounds %struct.GPR, %struct.GPR* %7574, i32 0, i32 15
  %7576 = getelementptr inbounds %struct.Reg, %struct.Reg* %7575, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %7576 to i64*
  %7577 = load i64, i64* %RBP.i690
  %7578 = sub i64 %7577, 360
  %7579 = load i64, i64* %PC.i688
  %7580 = add i64 %7579, 6
  store i64 %7580, i64* %PC.i688
  %7581 = inttoptr i64 %7578 to i32*
  %7582 = load i32, i32* %7581
  %7583 = zext i32 %7582 to i64
  store i64 %7583, i64* %RAX.i689, align 8
  store %struct.Memory* %loadMem_43aa52, %struct.Memory** %MEMORY
  %loadMem_43aa58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7585 = getelementptr inbounds %struct.GPR, %struct.GPR* %7584, i32 0, i32 33
  %7586 = getelementptr inbounds %struct.Reg, %struct.Reg* %7585, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %7586 to i64*
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7588 = getelementptr inbounds %struct.GPR, %struct.GPR* %7587, i32 0, i32 1
  %7589 = getelementptr inbounds %struct.Reg, %struct.Reg* %7588, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %7589 to i64*
  %7590 = load i64, i64* %RAX.i687
  %7591 = load i64, i64* %PC.i686
  %7592 = add i64 %7591, 3
  store i64 %7592, i64* %PC.i686
  %7593 = trunc i64 %7590 to i32
  %7594 = add i32 1, %7593
  %7595 = zext i32 %7594 to i64
  store i64 %7595, i64* %RAX.i687, align 8
  %7596 = icmp ult i32 %7594, %7593
  %7597 = icmp ult i32 %7594, 1
  %7598 = or i1 %7596, %7597
  %7599 = zext i1 %7598 to i8
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7599, i8* %7600, align 1
  %7601 = and i32 %7594, 255
  %7602 = call i32 @llvm.ctpop.i32(i32 %7601)
  %7603 = trunc i32 %7602 to i8
  %7604 = and i8 %7603, 1
  %7605 = xor i8 %7604, 1
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7605, i8* %7606, align 1
  %7607 = xor i64 1, %7590
  %7608 = trunc i64 %7607 to i32
  %7609 = xor i32 %7608, %7594
  %7610 = lshr i32 %7609, 4
  %7611 = trunc i32 %7610 to i8
  %7612 = and i8 %7611, 1
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7612, i8* %7613, align 1
  %7614 = icmp eq i32 %7594, 0
  %7615 = zext i1 %7614 to i8
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7615, i8* %7616, align 1
  %7617 = lshr i32 %7594, 31
  %7618 = trunc i32 %7617 to i8
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7618, i8* %7619, align 1
  %7620 = lshr i32 %7593, 31
  %7621 = xor i32 %7617, %7620
  %7622 = add i32 %7621, %7617
  %7623 = icmp eq i32 %7622, 2
  %7624 = zext i1 %7623 to i8
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7624, i8* %7625, align 1
  store %struct.Memory* %loadMem_43aa58, %struct.Memory** %MEMORY
  %loadMem_43aa5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7627 = getelementptr inbounds %struct.GPR, %struct.GPR* %7626, i32 0, i32 33
  %7628 = getelementptr inbounds %struct.Reg, %struct.Reg* %7627, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %7628 to i64*
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7630 = getelementptr inbounds %struct.GPR, %struct.GPR* %7629, i32 0, i32 1
  %7631 = getelementptr inbounds %struct.Reg, %struct.Reg* %7630, i32 0, i32 0
  %EAX.i684 = bitcast %union.anon* %7631 to i32*
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7633 = getelementptr inbounds %struct.GPR, %struct.GPR* %7632, i32 0, i32 15
  %7634 = getelementptr inbounds %struct.Reg, %struct.Reg* %7633, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %7634 to i64*
  %7635 = load i64, i64* %RBP.i685
  %7636 = sub i64 %7635, 360
  %7637 = load i32, i32* %EAX.i684
  %7638 = zext i32 %7637 to i64
  %7639 = load i64, i64* %PC.i683
  %7640 = add i64 %7639, 6
  store i64 %7640, i64* %PC.i683
  %7641 = inttoptr i64 %7636 to i32*
  store i32 %7637, i32* %7641
  store %struct.Memory* %loadMem_43aa5b, %struct.Memory** %MEMORY
  %loadMem_43aa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 33
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %7644 to i64*
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7646 = getelementptr inbounds %struct.GPR, %struct.GPR* %7645, i32 0, i32 1
  %7647 = getelementptr inbounds %struct.Reg, %struct.Reg* %7646, i32 0, i32 0
  %RAX.i681 = bitcast %union.anon* %7647 to i64*
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7649 = getelementptr inbounds %struct.GPR, %struct.GPR* %7648, i32 0, i32 15
  %7650 = getelementptr inbounds %struct.Reg, %struct.Reg* %7649, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %7650 to i64*
  %7651 = load i64, i64* %RBP.i682
  %7652 = sub i64 %7651, 360
  %7653 = load i64, i64* %PC.i680
  %7654 = add i64 %7653, 6
  store i64 %7654, i64* %PC.i680
  %7655 = inttoptr i64 %7652 to i32*
  %7656 = load i32, i32* %7655
  %7657 = zext i32 %7656 to i64
  store i64 %7657, i64* %RAX.i681, align 8
  store %struct.Memory* %loadMem_43aa61, %struct.Memory** %MEMORY
  %loadMem_43aa67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 33
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %7660 to i64*
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7662 = getelementptr inbounds %struct.GPR, %struct.GPR* %7661, i32 0, i32 1
  %7663 = getelementptr inbounds %struct.Reg, %struct.Reg* %7662, i32 0, i32 0
  %EAX.i678 = bitcast %union.anon* %7663 to i32*
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 15
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %RBP.i679 = bitcast %union.anon* %7666 to i64*
  %7667 = load i32, i32* %EAX.i678
  %7668 = zext i32 %7667 to i64
  %7669 = load i64, i64* %RBP.i679
  %7670 = sub i64 %7669, 72
  %7671 = load i64, i64* %PC.i677
  %7672 = add i64 %7671, 3
  store i64 %7672, i64* %PC.i677
  %7673 = inttoptr i64 %7670 to i32*
  %7674 = load i32, i32* %7673
  %7675 = sub i32 %7667, %7674
  %7676 = icmp ult i32 %7667, %7674
  %7677 = zext i1 %7676 to i8
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7677, i8* %7678, align 1
  %7679 = and i32 %7675, 255
  %7680 = call i32 @llvm.ctpop.i32(i32 %7679)
  %7681 = trunc i32 %7680 to i8
  %7682 = and i8 %7681, 1
  %7683 = xor i8 %7682, 1
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7683, i8* %7684, align 1
  %7685 = xor i32 %7674, %7667
  %7686 = xor i32 %7685, %7675
  %7687 = lshr i32 %7686, 4
  %7688 = trunc i32 %7687 to i8
  %7689 = and i8 %7688, 1
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7689, i8* %7690, align 1
  %7691 = icmp eq i32 %7675, 0
  %7692 = zext i1 %7691 to i8
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7692, i8* %7693, align 1
  %7694 = lshr i32 %7675, 31
  %7695 = trunc i32 %7694 to i8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7695, i8* %7696, align 1
  %7697 = lshr i32 %7667, 31
  %7698 = lshr i32 %7674, 31
  %7699 = xor i32 %7698, %7697
  %7700 = xor i32 %7694, %7697
  %7701 = add i32 %7700, %7699
  %7702 = icmp eq i32 %7701, 2
  %7703 = zext i1 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7703, i8* %7704, align 1
  store %struct.Memory* %loadMem_43aa67, %struct.Memory** %MEMORY
  %loadMem_43aa6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7706 = getelementptr inbounds %struct.GPR, %struct.GPR* %7705, i32 0, i32 33
  %7707 = getelementptr inbounds %struct.Reg, %struct.Reg* %7706, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %7707 to i64*
  %7708 = load i64, i64* %PC.i676
  %7709 = add i64 %7708, 11
  %7710 = load i64, i64* %PC.i676
  %7711 = add i64 %7710, 6
  %7712 = load i64, i64* %PC.i676
  %7713 = add i64 %7712, 6
  store i64 %7713, i64* %PC.i676
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7715 = load i8, i8* %7714, align 1
  %7716 = icmp eq i8 %7715, 0
  %7717 = zext i1 %7716 to i8
  store i8 %7717, i8* %BRANCH_TAKEN, align 1
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7719 = select i1 %7716, i64 %7709, i64 %7711
  store i64 %7719, i64* %7718, align 8
  store %struct.Memory* %loadMem_43aa6a, %struct.Memory** %MEMORY
  %loadBr_43aa6a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa6a = icmp eq i8 %loadBr_43aa6a, 1
  br i1 %cmpBr_43aa6a, label %block_.L_43aa75, label %block_43aa70

block_43aa70:                                     ; preds = %block_.L_43aa52
  %loadMem_43aa70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7721 = getelementptr inbounds %struct.GPR, %struct.GPR* %7720, i32 0, i32 33
  %7722 = getelementptr inbounds %struct.Reg, %struct.Reg* %7721, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %7722 to i64*
  %7723 = load i64, i64* %PC.i675
  %7724 = add i64 %7723, 39
  %7725 = load i64, i64* %PC.i675
  %7726 = add i64 %7725, 5
  store i64 %7726, i64* %PC.i675
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7724, i64* %7727, align 8
  store %struct.Memory* %loadMem_43aa70, %struct.Memory** %MEMORY
  br label %block_.L_43aa97

block_.L_43aa75:                                  ; preds = %block_.L_43aa52
  %loadMem_43aa75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7729 = getelementptr inbounds %struct.GPR, %struct.GPR* %7728, i32 0, i32 33
  %7730 = getelementptr inbounds %struct.Reg, %struct.Reg* %7729, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %7730 to i64*
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7732 = getelementptr inbounds %struct.GPR, %struct.GPR* %7731, i32 0, i32 1
  %7733 = getelementptr inbounds %struct.Reg, %struct.Reg* %7732, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %7733 to i64*
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7735 = getelementptr inbounds %struct.GPR, %struct.GPR* %7734, i32 0, i32 15
  %7736 = getelementptr inbounds %struct.Reg, %struct.Reg* %7735, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %7736 to i64*
  %7737 = load i64, i64* %RBP.i674
  %7738 = sub i64 %7737, 352
  %7739 = load i64, i64* %PC.i672
  %7740 = add i64 %7739, 7
  store i64 %7740, i64* %PC.i672
  store i64 %7738, i64* %RAX.i673, align 8
  store %struct.Memory* %loadMem_43aa75, %struct.Memory** %MEMORY
  %loadMem_43aa7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 33
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %7743 to i64*
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 5
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %RCX.i670 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 15
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %7749 to i64*
  %7750 = load i64, i64* %RBP.i671
  %7751 = sub i64 %7750, 360
  %7752 = load i64, i64* %PC.i669
  %7753 = add i64 %7752, 7
  store i64 %7753, i64* %PC.i669
  %7754 = inttoptr i64 %7751 to i32*
  %7755 = load i32, i32* %7754
  %7756 = sext i32 %7755 to i64
  store i64 %7756, i64* %RCX.i670, align 8
  store %struct.Memory* %loadMem_43aa7c, %struct.Memory** %MEMORY
  %loadMem_43aa83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7758 = getelementptr inbounds %struct.GPR, %struct.GPR* %7757, i32 0, i32 33
  %7759 = getelementptr inbounds %struct.Reg, %struct.Reg* %7758, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %7759 to i64*
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 5
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %RCX.i668 = bitcast %union.anon* %7762 to i64*
  %7763 = load i64, i64* %RCX.i668
  %7764 = load i64, i64* %PC.i667
  %7765 = add i64 %7764, 4
  store i64 %7765, i64* %PC.i667
  %7766 = shl i64 %7763, 1
  %7767 = icmp slt i64 %7766, 0
  %7768 = shl i64 %7766, 1
  store i64 %7768, i64* %RCX.i668, align 8
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7770 = zext i1 %7767 to i8
  store i8 %7770, i8* %7769, align 1
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7772 = trunc i64 %7768 to i32
  %7773 = and i32 %7772, 254
  %7774 = call i32 @llvm.ctpop.i32(i32 %7773)
  %7775 = trunc i32 %7774 to i8
  %7776 = and i8 %7775, 1
  %7777 = xor i8 %7776, 1
  store i8 %7777, i8* %7771, align 1
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7778, align 1
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7780 = icmp eq i64 %7768, 0
  %7781 = zext i1 %7780 to i8
  store i8 %7781, i8* %7779, align 1
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7783 = lshr i64 %7768, 63
  %7784 = trunc i64 %7783 to i8
  store i8 %7784, i8* %7782, align 1
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7785, align 1
  store %struct.Memory* %loadMem_43aa83, %struct.Memory** %MEMORY
  %loadMem_43aa87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 33
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %7788 to i64*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 1
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %7791 to i64*
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 5
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %7794 to i64*
  %7795 = load i64, i64* %RAX.i665
  %7796 = load i64, i64* %RCX.i666
  %7797 = load i64, i64* %PC.i664
  %7798 = add i64 %7797, 3
  store i64 %7798, i64* %PC.i664
  %7799 = add i64 %7796, %7795
  store i64 %7799, i64* %RAX.i665, align 8
  %7800 = icmp ult i64 %7799, %7795
  %7801 = icmp ult i64 %7799, %7796
  %7802 = or i1 %7800, %7801
  %7803 = zext i1 %7802 to i8
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7803, i8* %7804, align 1
  %7805 = trunc i64 %7799 to i32
  %7806 = and i32 %7805, 255
  %7807 = call i32 @llvm.ctpop.i32(i32 %7806)
  %7808 = trunc i32 %7807 to i8
  %7809 = and i8 %7808, 1
  %7810 = xor i8 %7809, 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7810, i8* %7811, align 1
  %7812 = xor i64 %7796, %7795
  %7813 = xor i64 %7812, %7799
  %7814 = lshr i64 %7813, 4
  %7815 = trunc i64 %7814 to i8
  %7816 = and i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7816, i8* %7817, align 1
  %7818 = icmp eq i64 %7799, 0
  %7819 = zext i1 %7818 to i8
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7819, i8* %7820, align 1
  %7821 = lshr i64 %7799, 63
  %7822 = trunc i64 %7821 to i8
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7822, i8* %7823, align 1
  %7824 = lshr i64 %7795, 63
  %7825 = lshr i64 %7796, 63
  %7826 = xor i64 %7821, %7824
  %7827 = xor i64 %7821, %7825
  %7828 = add i64 %7826, %7827
  %7829 = icmp eq i64 %7828, 2
  %7830 = zext i1 %7829 to i8
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7830, i8* %7831, align 1
  store %struct.Memory* %loadMem_43aa87, %struct.Memory** %MEMORY
  %loadMem_43aa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 33
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %7834 to i64*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 1
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %7837 to i64*
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 11
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %RDI.i663 = bitcast %union.anon* %7840 to i64*
  %7841 = load i64, i64* %RAX.i662
  %7842 = load i64, i64* %PC.i661
  %7843 = add i64 %7842, 3
  store i64 %7843, i64* %PC.i661
  store i64 %7841, i64* %RDI.i663, align 8
  store %struct.Memory* %loadMem_43aa8a, %struct.Memory** %MEMORY
  %loadMem1_43aa8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 33
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %7846 to i64*
  %7847 = load i64, i64* %PC.i660
  %7848 = add i64 %7847, 1555
  %7849 = load i64, i64* %PC.i660
  %7850 = add i64 %7849, 5
  %7851 = load i64, i64* %PC.i660
  %7852 = add i64 %7851, 5
  store i64 %7852, i64* %PC.i660
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7854 = load i64, i64* %7853, align 8
  %7855 = add i64 %7854, -8
  %7856 = inttoptr i64 %7855 to i64*
  store i64 %7850, i64* %7856
  store i64 %7855, i64* %7853, align 8
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7848, i64* %7857, align 8
  store %struct.Memory* %loadMem1_43aa8d, %struct.Memory** %MEMORY
  %loadMem2_43aa8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa8d = load i64, i64* %3
  %call2_43aa8d = call %struct.Memory* @sub_43b0a0.first_map(%struct.State* %0, i64 %loadPC_43aa8d, %struct.Memory* %loadMem2_43aa8d)
  store %struct.Memory* %call2_43aa8d, %struct.Memory** %MEMORY
  br label %block_.L_43aa92

block_.L_43aa92:                                  ; preds = %block_.L_43aa75, %block_.L_43aa4d
  %loadMem_43aa92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 33
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %7860 to i64*
  %7861 = load i64, i64* %PC.i659
  %7862 = add i64 %7861, -944
  %7863 = load i64, i64* %PC.i659
  %7864 = add i64 %7863, 5
  store i64 %7864, i64* %PC.i659
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7862, i64* %7865, align 8
  store %struct.Memory* %loadMem_43aa92, %struct.Memory** %MEMORY
  br label %block_.L_43a6e2

block_.L_43aa97:                                  ; preds = %block_43aa70, %block_43aa48
  %loadMem_43aa97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 33
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 1
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %7871 to i64*
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 15
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %7874 to i64*
  %7875 = load i64, i64* %RBP.i658
  %7876 = sub i64 %7875, 360
  %7877 = load i64, i64* %PC.i656
  %7878 = add i64 %7877, 6
  store i64 %7878, i64* %PC.i656
  %7879 = inttoptr i64 %7876 to i32*
  %7880 = load i32, i32* %7879
  %7881 = zext i32 %7880 to i64
  store i64 %7881, i64* %RAX.i657, align 8
  store %struct.Memory* %loadMem_43aa97, %struct.Memory** %MEMORY
  %loadMem_43aa9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 33
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %7884 to i64*
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 1
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %EAX.i654 = bitcast %union.anon* %7887 to i32*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 15
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %7890 to i64*
  %7891 = load i32, i32* %EAX.i654
  %7892 = zext i32 %7891 to i64
  %7893 = load i64, i64* %RBP.i655
  %7894 = sub i64 %7893, 72
  %7895 = load i64, i64* %PC.i653
  %7896 = add i64 %7895, 3
  store i64 %7896, i64* %PC.i653
  %7897 = inttoptr i64 %7894 to i32*
  %7898 = load i32, i32* %7897
  %7899 = sub i32 %7891, %7898
  %7900 = icmp ult i32 %7891, %7898
  %7901 = zext i1 %7900 to i8
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7901, i8* %7902, align 1
  %7903 = and i32 %7899, 255
  %7904 = call i32 @llvm.ctpop.i32(i32 %7903)
  %7905 = trunc i32 %7904 to i8
  %7906 = and i8 %7905, 1
  %7907 = xor i8 %7906, 1
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7907, i8* %7908, align 1
  %7909 = xor i32 %7898, %7891
  %7910 = xor i32 %7909, %7899
  %7911 = lshr i32 %7910, 4
  %7912 = trunc i32 %7911 to i8
  %7913 = and i8 %7912, 1
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7913, i8* %7914, align 1
  %7915 = icmp eq i32 %7899, 0
  %7916 = zext i1 %7915 to i8
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7916, i8* %7917, align 1
  %7918 = lshr i32 %7899, 31
  %7919 = trunc i32 %7918 to i8
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7919, i8* %7920, align 1
  %7921 = lshr i32 %7891, 31
  %7922 = lshr i32 %7898, 31
  %7923 = xor i32 %7922, %7921
  %7924 = xor i32 %7918, %7921
  %7925 = add i32 %7924, %7923
  %7926 = icmp eq i32 %7925, 2
  %7927 = zext i1 %7926 to i8
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7927, i8* %7928, align 1
  store %struct.Memory* %loadMem_43aa9d, %struct.Memory** %MEMORY
  %loadMem_43aaa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 33
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %PC.i652
  %7933 = add i64 %7932, 1344
  %7934 = load i64, i64* %PC.i652
  %7935 = add i64 %7934, 6
  %7936 = load i64, i64* %PC.i652
  %7937 = add i64 %7936, 6
  store i64 %7937, i64* %PC.i652
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7939 = load i8, i8* %7938, align 1
  %7940 = icmp eq i8 %7939, 0
  %7941 = zext i1 %7940 to i8
  store i8 %7941, i8* %BRANCH_TAKEN, align 1
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7943 = select i1 %7940, i64 %7933, i64 %7935
  store i64 %7943, i64* %7942, align 8
  store %struct.Memory* %loadMem_43aaa0, %struct.Memory** %MEMORY
  %loadBr_43aaa0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aaa0 = icmp eq i8 %loadBr_43aaa0, 1
  br i1 %cmpBr_43aaa0, label %block_.L_43afe0, label %block_43aaa6

block_43aaa6:                                     ; preds = %block_.L_43aa97
  %loadMem_43aaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 33
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %7946 to i64*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 1
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %7949 to i64*
  %7950 = load i64, i64* %PC.i650
  %7951 = add i64 %7950, 10
  store i64 %7951, i64* %PC.i650
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_43aaa6, %struct.Memory** %MEMORY
  %loadMem_43aab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7953 = getelementptr inbounds %struct.GPR, %struct.GPR* %7952, i32 0, i32 33
  %7954 = getelementptr inbounds %struct.Reg, %struct.Reg* %7953, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %7954 to i64*
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 5
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %RCX.i648 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 15
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %7960 to i64*
  %7961 = load i64, i64* %RBP.i649
  %7962 = sub i64 %7961, 32
  %7963 = load i64, i64* %PC.i647
  %7964 = add i64 %7963, 4
  store i64 %7964, i64* %PC.i647
  %7965 = inttoptr i64 %7962 to i64*
  %7966 = load i64, i64* %7965
  store i64 %7966, i64* %RCX.i648, align 8
  store %struct.Memory* %loadMem_43aab0, %struct.Memory** %MEMORY
  %loadMem_43aab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7968 = getelementptr inbounds %struct.GPR, %struct.GPR* %7967, i32 0, i32 33
  %7969 = getelementptr inbounds %struct.Reg, %struct.Reg* %7968, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %7969 to i64*
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7971 = getelementptr inbounds %struct.GPR, %struct.GPR* %7970, i32 0, i32 7
  %7972 = getelementptr inbounds %struct.Reg, %struct.Reg* %7971, i32 0, i32 0
  %RDX.i645 = bitcast %union.anon* %7972 to i64*
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 15
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %7975 to i64*
  %7976 = load i64, i64* %RBP.i646
  %7977 = sub i64 %7976, 260
  %7978 = load i64, i64* %PC.i644
  %7979 = add i64 %7978, 7
  store i64 %7979, i64* %PC.i644
  %7980 = inttoptr i64 %7977 to i32*
  %7981 = load i32, i32* %7980
  %7982 = sext i32 %7981 to i64
  store i64 %7982, i64* %RDX.i645, align 8
  store %struct.Memory* %loadMem_43aab4, %struct.Memory** %MEMORY
  %loadMem_43aabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 33
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %7985 to i64*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 7
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %RDX.i643 = bitcast %union.anon* %7988 to i64*
  %7989 = load i64, i64* %RDX.i643
  %7990 = load i64, i64* %PC.i642
  %7991 = add i64 %7990, 4
  store i64 %7991, i64* %PC.i642
  %7992 = sext i64 %7989 to i128
  %7993 = and i128 %7992, -18446744073709551616
  %7994 = zext i64 %7989 to i128
  %7995 = or i128 %7993, %7994
  %7996 = mul i128 40, %7995
  %7997 = trunc i128 %7996 to i64
  store i64 %7997, i64* %RDX.i643, align 8
  %7998 = sext i64 %7997 to i128
  %7999 = icmp ne i128 %7998, %7996
  %8000 = zext i1 %7999 to i8
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8000, i8* %8001, align 1
  %8002 = trunc i128 %7996 to i32
  %8003 = and i32 %8002, 255
  %8004 = call i32 @llvm.ctpop.i32(i32 %8003)
  %8005 = trunc i32 %8004 to i8
  %8006 = and i8 %8005, 1
  %8007 = xor i8 %8006, 1
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8007, i8* %8008, align 1
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8009, align 1
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8010, align 1
  %8011 = lshr i64 %7997, 63
  %8012 = trunc i64 %8011 to i8
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8012, i8* %8013, align 1
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8000, i8* %8014, align 1
  store %struct.Memory* %loadMem_43aabb, %struct.Memory** %MEMORY
  %loadMem_43aabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 33
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %8017 to i64*
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 1
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %8020 to i64*
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 7
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %RDX.i641 = bitcast %union.anon* %8023 to i64*
  %8024 = load i64, i64* %RAX.i640
  %8025 = load i64, i64* %RDX.i641
  %8026 = load i64, i64* %PC.i639
  %8027 = add i64 %8026, 3
  store i64 %8027, i64* %PC.i639
  %8028 = add i64 %8025, %8024
  store i64 %8028, i64* %RAX.i640, align 8
  %8029 = icmp ult i64 %8028, %8024
  %8030 = icmp ult i64 %8028, %8025
  %8031 = or i1 %8029, %8030
  %8032 = zext i1 %8031 to i8
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8032, i8* %8033, align 1
  %8034 = trunc i64 %8028 to i32
  %8035 = and i32 %8034, 255
  %8036 = call i32 @llvm.ctpop.i32(i32 %8035)
  %8037 = trunc i32 %8036 to i8
  %8038 = and i8 %8037, 1
  %8039 = xor i8 %8038, 1
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8039, i8* %8040, align 1
  %8041 = xor i64 %8025, %8024
  %8042 = xor i64 %8041, %8028
  %8043 = lshr i64 %8042, 4
  %8044 = trunc i64 %8043 to i8
  %8045 = and i8 %8044, 1
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8045, i8* %8046, align 1
  %8047 = icmp eq i64 %8028, 0
  %8048 = zext i1 %8047 to i8
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8048, i8* %8049, align 1
  %8050 = lshr i64 %8028, 63
  %8051 = trunc i64 %8050 to i8
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8051, i8* %8052, align 1
  %8053 = lshr i64 %8024, 63
  %8054 = lshr i64 %8025, 63
  %8055 = xor i64 %8050, %8053
  %8056 = xor i64 %8050, %8054
  %8057 = add i64 %8055, %8056
  %8058 = icmp eq i64 %8057, 2
  %8059 = zext i1 %8058 to i8
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8059, i8* %8060, align 1
  store %struct.Memory* %loadMem_43aabf, %struct.Memory** %MEMORY
  %loadMem_43aac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 33
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %8063 to i64*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 1
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %8066 to i64*
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8068 = getelementptr inbounds %struct.GPR, %struct.GPR* %8067, i32 0, i32 9
  %8069 = getelementptr inbounds %struct.Reg, %struct.Reg* %8068, i32 0, i32 0
  %RSI.i638 = bitcast %union.anon* %8069 to i64*
  %8070 = load i64, i64* %RAX.i637
  %8071 = add i64 %8070, 32
  %8072 = load i64, i64* %PC.i636
  %8073 = add i64 %8072, 3
  store i64 %8073, i64* %PC.i636
  %8074 = inttoptr i64 %8071 to i32*
  %8075 = load i32, i32* %8074
  %8076 = zext i32 %8075 to i64
  store i64 %8076, i64* %RSI.i638, align 8
  store %struct.Memory* %loadMem_43aac2, %struct.Memory** %MEMORY
  %loadMem_43aac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 33
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %8079 to i64*
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8081 = getelementptr inbounds %struct.GPR, %struct.GPR* %8080, i32 0, i32 9
  %8082 = getelementptr inbounds %struct.Reg, %struct.Reg* %8081, i32 0, i32 0
  %ESI.i634 = bitcast %union.anon* %8082 to i32*
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8084 = getelementptr inbounds %struct.GPR, %struct.GPR* %8083, i32 0, i32 5
  %8085 = getelementptr inbounds %struct.Reg, %struct.Reg* %8084, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %8085 to i64*
  %8086 = load i64, i64* %RCX.i635
  %8087 = load i32, i32* %ESI.i634
  %8088 = zext i32 %8087 to i64
  %8089 = load i64, i64* %PC.i633
  %8090 = add i64 %8089, 2
  store i64 %8090, i64* %PC.i633
  %8091 = inttoptr i64 %8086 to i32*
  store i32 %8087, i32* %8091
  store %struct.Memory* %loadMem_43aac5, %struct.Memory** %MEMORY
  %loadMem_43aac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 33
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %8094 to i64*
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 1
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %8097 to i64*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 15
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %8100 to i64*
  %8101 = load i64, i64* %RBP.i632
  %8102 = sub i64 %8101, 56
  %8103 = load i64, i64* %PC.i630
  %8104 = add i64 %8103, 4
  store i64 %8104, i64* %PC.i630
  %8105 = inttoptr i64 %8102 to i64*
  %8106 = load i64, i64* %8105
  store i64 %8106, i64* %RAX.i631, align 8
  store %struct.Memory* %loadMem_43aac7, %struct.Memory** %MEMORY
  %loadMem_43aacb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 33
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %8109 to i64*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 1
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %RAX.i629 = bitcast %union.anon* %8112 to i64*
  %8113 = load i64, i64* %RAX.i629
  %8114 = add i64 %8113, 640
  %8115 = load i64, i64* %PC.i628
  %8116 = add i64 %8115, 10
  store i64 %8116, i64* %PC.i628
  %8117 = inttoptr i64 %8114 to i32*
  store i32 0, i32* %8117
  store %struct.Memory* %loadMem_43aacb, %struct.Memory** %MEMORY
  %loadMem_43aad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 33
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %8120 to i64*
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 1
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %8123 to i64*
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 15
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %8126 to i64*
  %8127 = load i64, i64* %RBP.i627
  %8128 = sub i64 %8127, 56
  %8129 = load i64, i64* %PC.i625
  %8130 = add i64 %8129, 4
  store i64 %8130, i64* %PC.i625
  %8131 = inttoptr i64 %8128 to i64*
  %8132 = load i64, i64* %8131
  store i64 %8132, i64* %RAX.i626, align 8
  store %struct.Memory* %loadMem_43aad5, %struct.Memory** %MEMORY
  %loadMem_43aad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8134 = getelementptr inbounds %struct.GPR, %struct.GPR* %8133, i32 0, i32 33
  %8135 = getelementptr inbounds %struct.Reg, %struct.Reg* %8134, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %8135 to i64*
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8137 = getelementptr inbounds %struct.GPR, %struct.GPR* %8136, i32 0, i32 1
  %8138 = getelementptr inbounds %struct.Reg, %struct.Reg* %8137, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %8138 to i64*
  %8139 = load i64, i64* %RAX.i624
  %8140 = add i64 %8139, 644
  %8141 = load i64, i64* %PC.i623
  %8142 = add i64 %8141, 10
  store i64 %8142, i64* %PC.i623
  %8143 = inttoptr i64 %8140 to i32*
  store i32 0, i32* %8143
  store %struct.Memory* %loadMem_43aad9, %struct.Memory** %MEMORY
  %loadMem_43aae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8145 = getelementptr inbounds %struct.GPR, %struct.GPR* %8144, i32 0, i32 33
  %8146 = getelementptr inbounds %struct.Reg, %struct.Reg* %8145, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %8146 to i64*
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 11
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %RDI.i621 = bitcast %union.anon* %8149 to i64*
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8151 = getelementptr inbounds %struct.GPR, %struct.GPR* %8150, i32 0, i32 15
  %8152 = getelementptr inbounds %struct.Reg, %struct.Reg* %8151, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %8152 to i64*
  %8153 = load i64, i64* %RBP.i622
  %8154 = sub i64 %8153, 32
  %8155 = load i64, i64* %PC.i620
  %8156 = add i64 %8155, 4
  store i64 %8156, i64* %PC.i620
  %8157 = inttoptr i64 %8154 to i64*
  %8158 = load i64, i64* %8157
  store i64 %8158, i64* %RDI.i621, align 8
  store %struct.Memory* %loadMem_43aae3, %struct.Memory** %MEMORY
  %loadMem1_43aae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 33
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %8161 to i64*
  %8162 = load i64, i64* %PC.i619
  %8163 = add i64 %8162, 1721
  %8164 = load i64, i64* %PC.i619
  %8165 = add i64 %8164, 5
  %8166 = load i64, i64* %PC.i619
  %8167 = add i64 %8166, 5
  store i64 %8167, i64* %PC.i619
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8169 = load i64, i64* %8168, align 8
  %8170 = add i64 %8169, -8
  %8171 = inttoptr i64 %8170 to i64*
  store i64 %8165, i64* %8171
  store i64 %8170, i64* %8168, align 8
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8163, i64* %8172, align 8
  store %struct.Memory* %loadMem1_43aae7, %struct.Memory** %MEMORY
  %loadMem2_43aae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aae7 = load i64, i64* %3
  %call2_43aae7 = call %struct.Memory* @sub_43b1a0.eye_move_urgency(%struct.State* %0, i64 %loadPC_43aae7, %struct.Memory* %loadMem2_43aae7)
  store %struct.Memory* %call2_43aae7, %struct.Memory** %MEMORY
  %loadMem_43aaec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 33
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %8175 to i64*
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8177 = getelementptr inbounds %struct.GPR, %struct.GPR* %8176, i32 0, i32 1
  %8178 = getelementptr inbounds %struct.Reg, %struct.Reg* %8177, i32 0, i32 0
  %EAX.i618 = bitcast %union.anon* %8178 to i32*
  %8179 = load i32, i32* %EAX.i618
  %8180 = zext i32 %8179 to i64
  %8181 = load i64, i64* %PC.i617
  %8182 = add i64 %8181, 3
  store i64 %8182, i64* %PC.i617
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8183, align 1
  %8184 = and i32 %8179, 255
  %8185 = call i32 @llvm.ctpop.i32(i32 %8184)
  %8186 = trunc i32 %8185 to i8
  %8187 = and i8 %8186, 1
  %8188 = xor i8 %8187, 1
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8188, i8* %8189, align 1
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8190, align 1
  %8191 = icmp eq i32 %8179, 0
  %8192 = zext i1 %8191 to i8
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8192, i8* %8193, align 1
  %8194 = lshr i32 %8179, 31
  %8195 = trunc i32 %8194 to i8
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8195, i8* %8196, align 1
  %8197 = lshr i32 %8179, 31
  %8198 = xor i32 %8194, %8197
  %8199 = add i32 %8198, %8197
  %8200 = icmp eq i32 %8199, 2
  %8201 = zext i1 %8200 to i8
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8201, i8* %8202, align 1
  store %struct.Memory* %loadMem_43aaec, %struct.Memory** %MEMORY
  %loadMem_43aaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 33
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %8205 to i64*
  %8206 = load i64, i64* %PC.i616
  %8207 = add i64 %8206, 1182
  %8208 = load i64, i64* %PC.i616
  %8209 = add i64 %8208, 6
  %8210 = load i64, i64* %PC.i616
  %8211 = add i64 %8210, 6
  store i64 %8211, i64* %PC.i616
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8213 = load i8, i8* %8212, align 1
  %8214 = icmp ne i8 %8213, 0
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8216 = load i8, i8* %8215, align 1
  %8217 = icmp ne i8 %8216, 0
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8219 = load i8, i8* %8218, align 1
  %8220 = icmp ne i8 %8219, 0
  %8221 = xor i1 %8217, %8220
  %8222 = or i1 %8214, %8221
  %8223 = zext i1 %8222 to i8
  store i8 %8223, i8* %BRANCH_TAKEN, align 1
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8225 = select i1 %8222, i64 %8207, i64 %8209
  store i64 %8225, i64* %8224, align 8
  store %struct.Memory* %loadMem_43aaef, %struct.Memory** %MEMORY
  %loadBr_43aaef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aaef = icmp eq i8 %loadBr_43aaef, 1
  br i1 %cmpBr_43aaef, label %block_.L_43af8d, label %block_43aaf5

block_43aaf5:                                     ; preds = %block_43aaa6
  %loadMem_43aaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 33
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %8228 to i64*
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 15
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %8231 to i64*
  %8232 = load i64, i64* %RBP.i615
  %8233 = sub i64 %8232, 388
  %8234 = load i64, i64* %PC.i614
  %8235 = add i64 %8234, 10
  store i64 %8235, i64* %PC.i614
  %8236 = inttoptr i64 %8233 to i32*
  store i32 0, i32* %8236
  store %struct.Memory* %loadMem_43aaf5, %struct.Memory** %MEMORY
  br label %block_.L_43aaff

block_.L_43aaff:                                  ; preds = %block_.L_43ae0b, %block_43aaf5
  %loadMem_43aaff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8238 = getelementptr inbounds %struct.GPR, %struct.GPR* %8237, i32 0, i32 33
  %8239 = getelementptr inbounds %struct.Reg, %struct.Reg* %8238, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %8239 to i64*
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8241 = getelementptr inbounds %struct.GPR, %struct.GPR* %8240, i32 0, i32 1
  %8242 = getelementptr inbounds %struct.Reg, %struct.Reg* %8241, i32 0, i32 0
  %RAX.i612 = bitcast %union.anon* %8242 to i64*
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 15
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %8245 to i64*
  %8246 = load i64, i64* %RBP.i613
  %8247 = sub i64 %8246, 388
  %8248 = load i64, i64* %PC.i611
  %8249 = add i64 %8248, 6
  store i64 %8249, i64* %PC.i611
  %8250 = inttoptr i64 %8247 to i32*
  %8251 = load i32, i32* %8250
  %8252 = zext i32 %8251 to i64
  store i64 %8252, i64* %RAX.i612, align 8
  store %struct.Memory* %loadMem_43aaff, %struct.Memory** %MEMORY
  %loadMem_43ab05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 33
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %8255 to i64*
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 1
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %EAX.i609 = bitcast %union.anon* %8258 to i32*
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 15
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %8261 to i64*
  %8262 = load i32, i32* %EAX.i609
  %8263 = zext i32 %8262 to i64
  %8264 = load i64, i64* %RBP.i610
  %8265 = sub i64 %8264, 72
  %8266 = load i64, i64* %PC.i608
  %8267 = add i64 %8266, 3
  store i64 %8267, i64* %PC.i608
  %8268 = inttoptr i64 %8265 to i32*
  %8269 = load i32, i32* %8268
  %8270 = sub i32 %8262, %8269
  %8271 = icmp ult i32 %8262, %8269
  %8272 = zext i1 %8271 to i8
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8272, i8* %8273, align 1
  %8274 = and i32 %8270, 255
  %8275 = call i32 @llvm.ctpop.i32(i32 %8274)
  %8276 = trunc i32 %8275 to i8
  %8277 = and i8 %8276, 1
  %8278 = xor i8 %8277, 1
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8278, i8* %8279, align 1
  %8280 = xor i32 %8269, %8262
  %8281 = xor i32 %8280, %8270
  %8282 = lshr i32 %8281, 4
  %8283 = trunc i32 %8282 to i8
  %8284 = and i8 %8283, 1
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8284, i8* %8285, align 1
  %8286 = icmp eq i32 %8270, 0
  %8287 = zext i1 %8286 to i8
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8287, i8* %8288, align 1
  %8289 = lshr i32 %8270, 31
  %8290 = trunc i32 %8289 to i8
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8290, i8* %8291, align 1
  %8292 = lshr i32 %8262, 31
  %8293 = lshr i32 %8269, 31
  %8294 = xor i32 %8293, %8292
  %8295 = xor i32 %8289, %8292
  %8296 = add i32 %8295, %8294
  %8297 = icmp eq i32 %8296, 2
  %8298 = zext i1 %8297 to i8
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8298, i8* %8299, align 1
  store %struct.Memory* %loadMem_43ab05, %struct.Memory** %MEMORY
  %loadMem_43ab08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 33
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %8302 to i64*
  %8303 = load i64, i64* %PC.i607
  %8304 = add i64 %8303, 791
  %8305 = load i64, i64* %PC.i607
  %8306 = add i64 %8305, 6
  %8307 = load i64, i64* %PC.i607
  %8308 = add i64 %8307, 6
  store i64 %8308, i64* %PC.i607
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8310 = load i8, i8* %8309, align 1
  %8311 = icmp ne i8 %8310, 0
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8313 = load i8, i8* %8312, align 1
  %8314 = icmp ne i8 %8313, 0
  %8315 = xor i1 %8311, %8314
  %8316 = xor i1 %8315, true
  %8317 = zext i1 %8316 to i8
  store i8 %8317, i8* %BRANCH_TAKEN, align 1
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8319 = select i1 %8315, i64 %8306, i64 %8304
  store i64 %8319, i64* %8318, align 8
  store %struct.Memory* %loadMem_43ab08, %struct.Memory** %MEMORY
  %loadBr_43ab08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab08 = icmp eq i8 %loadBr_43ab08, 1
  br i1 %cmpBr_43ab08, label %block_.L_43ae1f, label %block_43ab0e

block_43ab0e:                                     ; preds = %block_.L_43aaff
  %loadMem_43ab0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 33
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %8322 to i64*
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 1
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %RAX.i606 = bitcast %union.anon* %8325 to i64*
  %8326 = load i64, i64* %PC.i605
  %8327 = add i64 %8326, 10
  store i64 %8327, i64* %PC.i605
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i606, align 8
  store %struct.Memory* %loadMem_43ab0e, %struct.Memory** %MEMORY
  %loadMem_43ab18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8329 = getelementptr inbounds %struct.GPR, %struct.GPR* %8328, i32 0, i32 33
  %8330 = getelementptr inbounds %struct.Reg, %struct.Reg* %8329, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %8330 to i64*
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 5
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %RCX.i603 = bitcast %union.anon* %8333 to i64*
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 15
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %8336 to i64*
  %8337 = load i64, i64* %RBP.i604
  %8338 = sub i64 %8337, 260
  %8339 = load i64, i64* %PC.i602
  %8340 = add i64 %8339, 7
  store i64 %8340, i64* %PC.i602
  %8341 = inttoptr i64 %8338 to i32*
  %8342 = load i32, i32* %8341
  %8343 = sext i32 %8342 to i64
  store i64 %8343, i64* %RCX.i603, align 8
  store %struct.Memory* %loadMem_43ab18, %struct.Memory** %MEMORY
  %loadMem_43ab1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8345 = getelementptr inbounds %struct.GPR, %struct.GPR* %8344, i32 0, i32 33
  %8346 = getelementptr inbounds %struct.Reg, %struct.Reg* %8345, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %8346 to i64*
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8348 = getelementptr inbounds %struct.GPR, %struct.GPR* %8347, i32 0, i32 5
  %8349 = getelementptr inbounds %struct.Reg, %struct.Reg* %8348, i32 0, i32 0
  %RCX.i601 = bitcast %union.anon* %8349 to i64*
  %8350 = load i64, i64* %RCX.i601
  %8351 = load i64, i64* %PC.i600
  %8352 = add i64 %8351, 4
  store i64 %8352, i64* %PC.i600
  %8353 = sext i64 %8350 to i128
  %8354 = and i128 %8353, -18446744073709551616
  %8355 = zext i64 %8350 to i128
  %8356 = or i128 %8354, %8355
  %8357 = mul i128 40, %8356
  %8358 = trunc i128 %8357 to i64
  store i64 %8358, i64* %RCX.i601, align 8
  %8359 = sext i64 %8358 to i128
  %8360 = icmp ne i128 %8359, %8357
  %8361 = zext i1 %8360 to i8
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8361, i8* %8362, align 1
  %8363 = trunc i128 %8357 to i32
  %8364 = and i32 %8363, 255
  %8365 = call i32 @llvm.ctpop.i32(i32 %8364)
  %8366 = trunc i32 %8365 to i8
  %8367 = and i8 %8366, 1
  %8368 = xor i8 %8367, 1
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8368, i8* %8369, align 1
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8370, align 1
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8371, align 1
  %8372 = lshr i64 %8358, 63
  %8373 = trunc i64 %8372 to i8
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8373, i8* %8374, align 1
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8361, i8* %8375, align 1
  store %struct.Memory* %loadMem_43ab1f, %struct.Memory** %MEMORY
  %loadMem_43ab23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 33
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %8378 to i64*
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 1
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %8381 to i64*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 5
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %RCX.i599 = bitcast %union.anon* %8384 to i64*
  %8385 = load i64, i64* %RAX.i598
  %8386 = load i64, i64* %RCX.i599
  %8387 = load i64, i64* %PC.i597
  %8388 = add i64 %8387, 3
  store i64 %8388, i64* %PC.i597
  %8389 = add i64 %8386, %8385
  store i64 %8389, i64* %RAX.i598, align 8
  %8390 = icmp ult i64 %8389, %8385
  %8391 = icmp ult i64 %8389, %8386
  %8392 = or i1 %8390, %8391
  %8393 = zext i1 %8392 to i8
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8393, i8* %8394, align 1
  %8395 = trunc i64 %8389 to i32
  %8396 = and i32 %8395, 255
  %8397 = call i32 @llvm.ctpop.i32(i32 %8396)
  %8398 = trunc i32 %8397 to i8
  %8399 = and i8 %8398, 1
  %8400 = xor i8 %8399, 1
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8400, i8* %8401, align 1
  %8402 = xor i64 %8386, %8385
  %8403 = xor i64 %8402, %8389
  %8404 = lshr i64 %8403, 4
  %8405 = trunc i64 %8404 to i8
  %8406 = and i8 %8405, 1
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8406, i8* %8407, align 1
  %8408 = icmp eq i64 %8389, 0
  %8409 = zext i1 %8408 to i8
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8409, i8* %8410, align 1
  %8411 = lshr i64 %8389, 63
  %8412 = trunc i64 %8411 to i8
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8412, i8* %8413, align 1
  %8414 = lshr i64 %8385, 63
  %8415 = lshr i64 %8386, 63
  %8416 = xor i64 %8411, %8414
  %8417 = xor i64 %8411, %8415
  %8418 = add i64 %8416, %8417
  %8419 = icmp eq i64 %8418, 2
  %8420 = zext i1 %8419 to i8
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8420, i8* %8421, align 1
  store %struct.Memory* %loadMem_43ab23, %struct.Memory** %MEMORY
  %loadMem_43ab26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 1
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RAX.i596 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %RAX.i596
  %8429 = load i64, i64* %PC.i595
  %8430 = add i64 %8429, 3
  store i64 %8430, i64* %PC.i595
  %8431 = inttoptr i64 %8428 to i64*
  %8432 = load i64, i64* %8431
  store i64 %8432, i64* %RAX.i596, align 8
  store %struct.Memory* %loadMem_43ab26, %struct.Memory** %MEMORY
  %loadMem_43ab29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 33
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %8435 to i64*
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 5
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %8438 to i64*
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8440 = getelementptr inbounds %struct.GPR, %struct.GPR* %8439, i32 0, i32 15
  %8441 = getelementptr inbounds %struct.Reg, %struct.Reg* %8440, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %8441 to i64*
  %8442 = load i64, i64* %RBP.i594
  %8443 = sub i64 %8442, 388
  %8444 = load i64, i64* %PC.i592
  %8445 = add i64 %8444, 7
  store i64 %8445, i64* %PC.i592
  %8446 = inttoptr i64 %8443 to i32*
  %8447 = load i32, i32* %8446
  %8448 = sext i32 %8447 to i64
  store i64 %8448, i64* %RCX.i593, align 8
  store %struct.Memory* %loadMem_43ab29, %struct.Memory** %MEMORY
  %loadMem_43ab30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 33
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %8451 to i64*
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 5
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %8454 to i64*
  %8455 = load i64, i64* %RCX.i591
  %8456 = load i64, i64* %PC.i590
  %8457 = add i64 %8456, 4
  store i64 %8457, i64* %PC.i590
  %8458 = sext i64 %8455 to i128
  %8459 = and i128 %8458, -18446744073709551616
  %8460 = zext i64 %8455 to i128
  %8461 = or i128 %8459, %8460
  %8462 = mul i128 20, %8461
  %8463 = trunc i128 %8462 to i64
  store i64 %8463, i64* %RCX.i591, align 8
  %8464 = sext i64 %8463 to i128
  %8465 = icmp ne i128 %8464, %8462
  %8466 = zext i1 %8465 to i8
  %8467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8466, i8* %8467, align 1
  %8468 = trunc i128 %8462 to i32
  %8469 = and i32 %8468, 255
  %8470 = call i32 @llvm.ctpop.i32(i32 %8469)
  %8471 = trunc i32 %8470 to i8
  %8472 = and i8 %8471, 1
  %8473 = xor i8 %8472, 1
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8473, i8* %8474, align 1
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8475, align 1
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8476, align 1
  %8477 = lshr i64 %8463, 63
  %8478 = trunc i64 %8477 to i8
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8478, i8* %8479, align 1
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8466, i8* %8480, align 1
  store %struct.Memory* %loadMem_43ab30, %struct.Memory** %MEMORY
  %loadMem_43ab34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 33
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 1
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 5
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RCX.i589 = bitcast %union.anon* %8489 to i64*
  %8490 = load i64, i64* %RAX.i588
  %8491 = load i64, i64* %RCX.i589
  %8492 = load i64, i64* %PC.i587
  %8493 = add i64 %8492, 3
  store i64 %8493, i64* %PC.i587
  %8494 = add i64 %8491, %8490
  store i64 %8494, i64* %RAX.i588, align 8
  %8495 = icmp ult i64 %8494, %8490
  %8496 = icmp ult i64 %8494, %8491
  %8497 = or i1 %8495, %8496
  %8498 = zext i1 %8497 to i8
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8498, i8* %8499, align 1
  %8500 = trunc i64 %8494 to i32
  %8501 = and i32 %8500, 255
  %8502 = call i32 @llvm.ctpop.i32(i32 %8501)
  %8503 = trunc i32 %8502 to i8
  %8504 = and i8 %8503, 1
  %8505 = xor i8 %8504, 1
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8505, i8* %8506, align 1
  %8507 = xor i64 %8491, %8490
  %8508 = xor i64 %8507, %8494
  %8509 = lshr i64 %8508, 4
  %8510 = trunc i64 %8509 to i8
  %8511 = and i8 %8510, 1
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8511, i8* %8512, align 1
  %8513 = icmp eq i64 %8494, 0
  %8514 = zext i1 %8513 to i8
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8514, i8* %8515, align 1
  %8516 = lshr i64 %8494, 63
  %8517 = trunc i64 %8516 to i8
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8517, i8* %8518, align 1
  %8519 = lshr i64 %8490, 63
  %8520 = lshr i64 %8491, 63
  %8521 = xor i64 %8516, %8519
  %8522 = xor i64 %8516, %8520
  %8523 = add i64 %8521, %8522
  %8524 = icmp eq i64 %8523, 2
  %8525 = zext i1 %8524 to i8
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8525, i8* %8526, align 1
  store %struct.Memory* %loadMem_43ab34, %struct.Memory** %MEMORY
  %loadMem_43ab37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 33
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %8529 to i64*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 1
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %8532 to i64*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 15
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %8535 to i64*
  %8536 = load i64, i64* %RBP.i586
  %8537 = sub i64 %8536, 400
  %8538 = load i64, i64* %RAX.i585
  %8539 = load i64, i64* %PC.i584
  %8540 = add i64 %8539, 7
  store i64 %8540, i64* %PC.i584
  %8541 = inttoptr i64 %8537 to i64*
  store i64 %8538, i64* %8541
  store %struct.Memory* %loadMem_43ab37, %struct.Memory** %MEMORY
  %loadMem_43ab3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8543 = getelementptr inbounds %struct.GPR, %struct.GPR* %8542, i32 0, i32 33
  %8544 = getelementptr inbounds %struct.Reg, %struct.Reg* %8543, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %8544 to i64*
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8546 = getelementptr inbounds %struct.GPR, %struct.GPR* %8545, i32 0, i32 1
  %8547 = getelementptr inbounds %struct.Reg, %struct.Reg* %8546, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %8547 to i64*
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8549 = getelementptr inbounds %struct.GPR, %struct.GPR* %8548, i32 0, i32 15
  %8550 = getelementptr inbounds %struct.Reg, %struct.Reg* %8549, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %8550 to i64*
  %8551 = load i64, i64* %RBP.i583
  %8552 = sub i64 %8551, 400
  %8553 = load i64, i64* %PC.i581
  %8554 = add i64 %8553, 7
  store i64 %8554, i64* %PC.i581
  %8555 = inttoptr i64 %8552 to i64*
  %8556 = load i64, i64* %8555
  store i64 %8556, i64* %RAX.i582, align 8
  store %struct.Memory* %loadMem_43ab3e, %struct.Memory** %MEMORY
  %loadMem_43ab45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 33
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %8559 to i64*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 1
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %8562 to i64*
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 7
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %RDX.i580 = bitcast %union.anon* %8565 to i64*
  %8566 = load i64, i64* %RAX.i579
  %8567 = add i64 %8566, 2
  %8568 = load i64, i64* %PC.i578
  %8569 = add i64 %8568, 4
  store i64 %8569, i64* %PC.i578
  %8570 = inttoptr i64 %8567 to i8*
  %8571 = load i8, i8* %8570
  %8572 = sext i8 %8571 to i64
  %8573 = and i64 %8572, 4294967295
  store i64 %8573, i64* %RDX.i580, align 8
  store %struct.Memory* %loadMem_43ab45, %struct.Memory** %MEMORY
  %loadMem_43ab49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 33
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %8576 to i64*
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 7
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %RDX.i577 = bitcast %union.anon* %8579 to i64*
  %8580 = load i64, i64* %RDX.i577
  %8581 = load i64, i64* %PC.i576
  %8582 = add i64 %8581, 3
  store i64 %8582, i64* %PC.i576
  %8583 = and i64 8, %8580
  %8584 = trunc i64 %8583 to i32
  store i64 %8583, i64* %RDX.i577, align 8
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8585, align 1
  %8586 = and i32 %8584, 255
  %8587 = call i32 @llvm.ctpop.i32(i32 %8586)
  %8588 = trunc i32 %8587 to i8
  %8589 = and i8 %8588, 1
  %8590 = xor i8 %8589, 1
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8590, i8* %8591, align 1
  %8592 = icmp eq i32 %8584, 0
  %8593 = zext i1 %8592 to i8
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8593, i8* %8594, align 1
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8595, align 1
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8596, align 1
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8597, align 1
  store %struct.Memory* %loadMem_43ab49, %struct.Memory** %MEMORY
  %loadMem_43ab4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 33
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %8600 to i64*
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 7
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %EDX.i575 = bitcast %union.anon* %8603 to i32*
  %8604 = load i32, i32* %EDX.i575
  %8605 = zext i32 %8604 to i64
  %8606 = load i64, i64* %PC.i574
  %8607 = add i64 %8606, 3
  store i64 %8607, i64* %PC.i574
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8608, align 1
  %8609 = and i32 %8604, 255
  %8610 = call i32 @llvm.ctpop.i32(i32 %8609)
  %8611 = trunc i32 %8610 to i8
  %8612 = and i8 %8611, 1
  %8613 = xor i8 %8612, 1
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8613, i8* %8614, align 1
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8615, align 1
  %8616 = icmp eq i32 %8604, 0
  %8617 = zext i1 %8616 to i8
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8617, i8* %8618, align 1
  %8619 = lshr i32 %8604, 31
  %8620 = trunc i32 %8619 to i8
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8620, i8* %8621, align 1
  %8622 = lshr i32 %8604, 31
  %8623 = xor i32 %8619, %8622
  %8624 = add i32 %8623, %8622
  %8625 = icmp eq i32 %8624, 2
  %8626 = zext i1 %8625 to i8
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8626, i8* %8627, align 1
  store %struct.Memory* %loadMem_43ab4c, %struct.Memory** %MEMORY
  %loadMem_43ab4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 33
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %8630 to i64*
  %8631 = load i64, i64* %PC.i573
  %8632 = add i64 %8631, 335
  %8633 = load i64, i64* %PC.i573
  %8634 = add i64 %8633, 6
  %8635 = load i64, i64* %PC.i573
  %8636 = add i64 %8635, 6
  store i64 %8636, i64* %PC.i573
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8638 = load i8, i8* %8637, align 1
  store i8 %8638, i8* %BRANCH_TAKEN, align 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8640 = icmp ne i8 %8638, 0
  %8641 = select i1 %8640, i64 %8632, i64 %8634
  store i64 %8641, i64* %8639, align 8
  store %struct.Memory* %loadMem_43ab4f, %struct.Memory** %MEMORY
  %loadBr_43ab4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab4f = icmp eq i8 %loadBr_43ab4f, 1
  br i1 %cmpBr_43ab4f, label %block_.L_43ac9e, label %block_43ab55

block_43ab55:                                     ; preds = %block_43ab0e
  %loadMem_43ab55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 33
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %8644 to i64*
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8646 = getelementptr inbounds %struct.GPR, %struct.GPR* %8645, i32 0, i32 1
  %8647 = getelementptr inbounds %struct.Reg, %struct.Reg* %8646, i32 0, i32 0
  %RAX.i571 = bitcast %union.anon* %8647 to i64*
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8649 = getelementptr inbounds %struct.GPR, %struct.GPR* %8648, i32 0, i32 15
  %8650 = getelementptr inbounds %struct.Reg, %struct.Reg* %8649, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %8650 to i64*
  %8651 = load i64, i64* %RBP.i572
  %8652 = sub i64 %8651, 400
  %8653 = load i64, i64* %PC.i570
  %8654 = add i64 %8653, 7
  store i64 %8654, i64* %PC.i570
  %8655 = inttoptr i64 %8652 to i64*
  %8656 = load i64, i64* %8655
  store i64 %8656, i64* %RAX.i571, align 8
  store %struct.Memory* %loadMem_43ab55, %struct.Memory** %MEMORY
  %loadMem_43ab5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 33
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %8659 to i64*
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 1
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %RAX.i568 = bitcast %union.anon* %8662 to i64*
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8664 = getelementptr inbounds %struct.GPR, %struct.GPR* %8663, i32 0, i32 5
  %8665 = getelementptr inbounds %struct.Reg, %struct.Reg* %8664, i32 0, i32 0
  %RCX.i569 = bitcast %union.anon* %8665 to i64*
  %8666 = load i64, i64* %RAX.i568
  %8667 = load i64, i64* %PC.i567
  %8668 = add i64 %8667, 3
  store i64 %8668, i64* %PC.i567
  %8669 = inttoptr i64 %8666 to i8*
  %8670 = load i8, i8* %8669
  %8671 = sext i8 %8670 to i64
  %8672 = and i64 %8671, 4294967295
  store i64 %8672, i64* %RCX.i569, align 8
  store %struct.Memory* %loadMem_43ab5c, %struct.Memory** %MEMORY
  %loadMem_43ab5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8674 = getelementptr inbounds %struct.GPR, %struct.GPR* %8673, i32 0, i32 33
  %8675 = getelementptr inbounds %struct.Reg, %struct.Reg* %8674, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %8675 to i64*
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8677 = getelementptr inbounds %struct.GPR, %struct.GPR* %8676, i32 0, i32 5
  %8678 = getelementptr inbounds %struct.Reg, %struct.Reg* %8677, i32 0, i32 0
  %ECX.i566 = bitcast %union.anon* %8678 to i32*
  %8679 = load i32, i32* %ECX.i566
  %8680 = zext i32 %8679 to i64
  %8681 = load i64, i64* %PC.i565
  %8682 = add i64 %8681, 3
  store i64 %8682, i64* %PC.i565
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8683, align 1
  %8684 = and i32 %8679, 255
  %8685 = call i32 @llvm.ctpop.i32(i32 %8684)
  %8686 = trunc i32 %8685 to i8
  %8687 = and i8 %8686, 1
  %8688 = xor i8 %8687, 1
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8688, i8* %8689, align 1
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8690, align 1
  %8691 = icmp eq i32 %8679, 0
  %8692 = zext i1 %8691 to i8
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8692, i8* %8693, align 1
  %8694 = lshr i32 %8679, 31
  %8695 = trunc i32 %8694 to i8
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8695, i8* %8696, align 1
  %8697 = lshr i32 %8679, 31
  %8698 = xor i32 %8694, %8697
  %8699 = add i32 %8698, %8697
  %8700 = icmp eq i32 %8699, 2
  %8701 = zext i1 %8700 to i8
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8701, i8* %8702, align 1
  store %struct.Memory* %loadMem_43ab5f, %struct.Memory** %MEMORY
  %loadMem_43ab62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 33
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %8705 to i64*
  %8706 = load i64, i64* %PC.i564
  %8707 = add i64 %8706, 258
  %8708 = load i64, i64* %PC.i564
  %8709 = add i64 %8708, 6
  %8710 = load i64, i64* %PC.i564
  %8711 = add i64 %8710, 6
  store i64 %8711, i64* %PC.i564
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8713 = load i8, i8* %8712, align 1
  store i8 %8713, i8* %BRANCH_TAKEN, align 1
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8715 = icmp ne i8 %8713, 0
  %8716 = select i1 %8715, i64 %8707, i64 %8709
  store i64 %8716, i64* %8714, align 8
  store %struct.Memory* %loadMem_43ab62, %struct.Memory** %MEMORY
  %loadBr_43ab62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab62 = icmp eq i8 %loadBr_43ab62, 1
  br i1 %cmpBr_43ab62, label %block_.L_43ac64, label %block_43ab68

block_43ab68:                                     ; preds = %block_43ab55
  %loadMem_43ab68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 33
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %8719 to i64*
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 1
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 15
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %8725 to i64*
  %8726 = load i64, i64* %RBP.i563
  %8727 = sub i64 %8726, 388
  %8728 = load i64, i64* %PC.i561
  %8729 = add i64 %8728, 7
  store i64 %8729, i64* %PC.i561
  %8730 = inttoptr i64 %8727 to i32*
  %8731 = load i32, i32* %8730
  %8732 = sext i32 %8731 to i64
  store i64 %8732, i64* %RAX.i562, align 8
  store %struct.Memory* %loadMem_43ab68, %struct.Memory** %MEMORY
  %loadMem_43ab6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8734 = getelementptr inbounds %struct.GPR, %struct.GPR* %8733, i32 0, i32 33
  %8735 = getelementptr inbounds %struct.Reg, %struct.Reg* %8734, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %8735 to i64*
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 1
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 15
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %8741 to i64*
  %8742 = load i64, i64* %RBP.i560
  %8743 = load i64, i64* %RAX.i559
  %8744 = mul i64 %8743, 4
  %8745 = add i64 %8742, -352
  %8746 = add i64 %8745, %8744
  %8747 = load i64, i64* %PC.i558
  %8748 = add i64 %8747, 8
  store i64 %8748, i64* %PC.i558
  %8749 = inttoptr i64 %8746 to i32*
  %8750 = load i32, i32* %8749
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8751, align 1
  %8752 = and i32 %8750, 255
  %8753 = call i32 @llvm.ctpop.i32(i32 %8752)
  %8754 = trunc i32 %8753 to i8
  %8755 = and i8 %8754, 1
  %8756 = xor i8 %8755, 1
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8756, i8* %8757, align 1
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8758, align 1
  %8759 = icmp eq i32 %8750, 0
  %8760 = zext i1 %8759 to i8
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8760, i8* %8761, align 1
  %8762 = lshr i32 %8750, 31
  %8763 = trunc i32 %8762 to i8
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8763, i8* %8764, align 1
  %8765 = lshr i32 %8750, 31
  %8766 = xor i32 %8762, %8765
  %8767 = add i32 %8766, %8765
  %8768 = icmp eq i32 %8767, 2
  %8769 = zext i1 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8769, i8* %8770, align 1
  store %struct.Memory* %loadMem_43ab6f, %struct.Memory** %MEMORY
  %loadMem_43ab77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 33
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %8773 to i64*
  %8774 = load i64, i64* %PC.i557
  %8775 = add i64 %8774, 237
  %8776 = load i64, i64* %PC.i557
  %8777 = add i64 %8776, 6
  %8778 = load i64, i64* %PC.i557
  %8779 = add i64 %8778, 6
  store i64 %8779, i64* %PC.i557
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8781 = load i8, i8* %8780, align 1
  %8782 = icmp ne i8 %8781, 0
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8784 = load i8, i8* %8783, align 1
  %8785 = icmp ne i8 %8784, 0
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8787 = load i8, i8* %8786, align 1
  %8788 = icmp ne i8 %8787, 0
  %8789 = xor i1 %8785, %8788
  %8790 = or i1 %8782, %8789
  %8791 = zext i1 %8790 to i8
  store i8 %8791, i8* %BRANCH_TAKEN, align 1
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8793 = select i1 %8790, i64 %8775, i64 %8777
  store i64 %8793, i64* %8792, align 8
  store %struct.Memory* %loadMem_43ab77, %struct.Memory** %MEMORY
  %loadBr_43ab77 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab77 = icmp eq i8 %loadBr_43ab77, 1
  br i1 %cmpBr_43ab77, label %block_.L_43ac64, label %block_43ab7d

block_43ab7d:                                     ; preds = %block_43ab68
  %loadMem_43ab7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 33
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %8796 to i64*
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 1
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %8799 to i64*
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 15
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %8802 to i64*
  %8803 = load i64, i64* %RBP.i556
  %8804 = sub i64 %8803, 388
  %8805 = load i64, i64* %PC.i554
  %8806 = add i64 %8805, 7
  store i64 %8806, i64* %PC.i554
  %8807 = inttoptr i64 %8804 to i32*
  %8808 = load i32, i32* %8807
  %8809 = sext i32 %8808 to i64
  store i64 %8809, i64* %RAX.i555, align 8
  store %struct.Memory* %loadMem_43ab7d, %struct.Memory** %MEMORY
  %loadMem_43ab84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8811 = getelementptr inbounds %struct.GPR, %struct.GPR* %8810, i32 0, i32 33
  %8812 = getelementptr inbounds %struct.Reg, %struct.Reg* %8811, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %8812 to i64*
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 1
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %8815 to i64*
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 5
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %8818 to i64*
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 15
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %8821 to i64*
  %8822 = load i64, i64* %RBP.i553
  %8823 = load i64, i64* %RAX.i551
  %8824 = mul i64 %8823, 4
  %8825 = add i64 %8822, -352
  %8826 = add i64 %8825, %8824
  %8827 = load i64, i64* %PC.i550
  %8828 = add i64 %8827, 7
  store i64 %8828, i64* %PC.i550
  %8829 = inttoptr i64 %8826 to i32*
  %8830 = load i32, i32* %8829
  %8831 = zext i32 %8830 to i64
  store i64 %8831, i64* %RCX.i552, align 8
  store %struct.Memory* %loadMem_43ab84, %struct.Memory** %MEMORY
  %loadMem_43ab8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 33
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %8834 to i64*
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8836 = getelementptr inbounds %struct.GPR, %struct.GPR* %8835, i32 0, i32 5
  %8837 = getelementptr inbounds %struct.Reg, %struct.Reg* %8836, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %8837 to i64*
  %8838 = load i64, i64* %RCX.i549
  %8839 = load i64, i64* %PC.i548
  %8840 = add i64 %8839, 3
  store i64 %8840, i64* %PC.i548
  %8841 = trunc i64 %8838 to i32
  %8842 = sub i32 %8841, 1
  %8843 = zext i32 %8842 to i64
  store i64 %8843, i64* %RCX.i549, align 8
  %8844 = icmp ult i32 %8841, 1
  %8845 = zext i1 %8844 to i8
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8845, i8* %8846, align 1
  %8847 = and i32 %8842, 255
  %8848 = call i32 @llvm.ctpop.i32(i32 %8847)
  %8849 = trunc i32 %8848 to i8
  %8850 = and i8 %8849, 1
  %8851 = xor i8 %8850, 1
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8851, i8* %8852, align 1
  %8853 = xor i64 1, %8838
  %8854 = trunc i64 %8853 to i32
  %8855 = xor i32 %8854, %8842
  %8856 = lshr i32 %8855, 4
  %8857 = trunc i32 %8856 to i8
  %8858 = and i8 %8857, 1
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8858, i8* %8859, align 1
  %8860 = icmp eq i32 %8842, 0
  %8861 = zext i1 %8860 to i8
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8861, i8* %8862, align 1
  %8863 = lshr i32 %8842, 31
  %8864 = trunc i32 %8863 to i8
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8864, i8* %8865, align 1
  %8866 = lshr i32 %8841, 31
  %8867 = xor i32 %8863, %8866
  %8868 = add i32 %8867, %8866
  %8869 = icmp eq i32 %8868, 2
  %8870 = zext i1 %8869 to i8
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8870, i8* %8871, align 1
  store %struct.Memory* %loadMem_43ab8b, %struct.Memory** %MEMORY
  %loadMem_43ab8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8873 = getelementptr inbounds %struct.GPR, %struct.GPR* %8872, i32 0, i32 33
  %8874 = getelementptr inbounds %struct.Reg, %struct.Reg* %8873, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %8874 to i64*
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 5
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %ECX.i546 = bitcast %union.anon* %8877 to i32*
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 1
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %8880 to i64*
  %8881 = load i32, i32* %ECX.i546
  %8882 = zext i32 %8881 to i64
  %8883 = load i64, i64* %PC.i545
  %8884 = add i64 %8883, 3
  store i64 %8884, i64* %PC.i545
  %8885 = shl i64 %8882, 32
  %8886 = ashr exact i64 %8885, 32
  store i64 %8886, i64* %RAX.i547, align 8
  store %struct.Memory* %loadMem_43ab8e, %struct.Memory** %MEMORY
  %loadMem_43ab91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 33
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %8889 to i64*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 1
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %8892 to i64*
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 15
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %RBP.i544 = bitcast %union.anon* %8895 to i64*
  %8896 = load i64, i64* %RBP.i544
  %8897 = load i64, i64* %RAX.i543
  %8898 = mul i64 %8897, 4
  %8899 = add i64 %8896, -160
  %8900 = add i64 %8899, %8898
  %8901 = load i64, i64* %PC.i542
  %8902 = add i64 %8901, 8
  store i64 %8902, i64* %PC.i542
  %8903 = inttoptr i64 %8900 to i32*
  %8904 = load i32, i32* %8903
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8905, align 1
  %8906 = and i32 %8904, 255
  %8907 = call i32 @llvm.ctpop.i32(i32 %8906)
  %8908 = trunc i32 %8907 to i8
  %8909 = and i8 %8908, 1
  %8910 = xor i8 %8909, 1
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8910, i8* %8911, align 1
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8912, align 1
  %8913 = icmp eq i32 %8904, 0
  %8914 = zext i1 %8913 to i8
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8914, i8* %8915, align 1
  %8916 = lshr i32 %8904, 31
  %8917 = trunc i32 %8916 to i8
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8917, i8* %8918, align 1
  %8919 = lshr i32 %8904, 31
  %8920 = xor i32 %8916, %8919
  %8921 = add i32 %8920, %8919
  %8922 = icmp eq i32 %8921, 2
  %8923 = zext i1 %8922 to i8
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8923, i8* %8924, align 1
  store %struct.Memory* %loadMem_43ab91, %struct.Memory** %MEMORY
  %loadMem_43ab99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 33
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %8927 to i64*
  %8928 = load i64, i64* %PC.i541
  %8929 = add i64 %8928, 203
  %8930 = load i64, i64* %PC.i541
  %8931 = add i64 %8930, 6
  %8932 = load i64, i64* %PC.i541
  %8933 = add i64 %8932, 6
  store i64 %8933, i64* %PC.i541
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8935 = load i8, i8* %8934, align 1
  store i8 %8935, i8* %BRANCH_TAKEN, align 1
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8937 = icmp ne i8 %8935, 0
  %8938 = select i1 %8937, i64 %8929, i64 %8931
  store i64 %8938, i64* %8936, align 8
  store %struct.Memory* %loadMem_43ab99, %struct.Memory** %MEMORY
  %loadBr_43ab99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab99 = icmp eq i8 %loadBr_43ab99, 1
  br i1 %cmpBr_43ab99, label %block_.L_43ac64, label %block_43ab9f

block_43ab9f:                                     ; preds = %block_43ab7d
  %loadMem_43ab9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8940 = getelementptr inbounds %struct.GPR, %struct.GPR* %8939, i32 0, i32 33
  %8941 = getelementptr inbounds %struct.Reg, %struct.Reg* %8940, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %8941 to i64*
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 11
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %RDI.i539 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 15
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RBP.i540 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %RBP.i540
  %8949 = sub i64 %8948, 48
  %8950 = load i64, i64* %PC.i538
  %8951 = add i64 %8950, 4
  store i64 %8951, i64* %PC.i538
  %8952 = inttoptr i64 %8949 to i64*
  %8953 = load i64, i64* %8952
  store i64 %8953, i64* %RDI.i539, align 8
  store %struct.Memory* %loadMem_43ab9f, %struct.Memory** %MEMORY
  %loadMem_43aba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8955 = getelementptr inbounds %struct.GPR, %struct.GPR* %8954, i32 0, i32 33
  %8956 = getelementptr inbounds %struct.Reg, %struct.Reg* %8955, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %8956 to i64*
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 1
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %RAX.i536 = bitcast %union.anon* %8959 to i64*
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8961 = getelementptr inbounds %struct.GPR, %struct.GPR* %8960, i32 0, i32 15
  %8962 = getelementptr inbounds %struct.Reg, %struct.Reg* %8961, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %8962 to i64*
  %8963 = load i64, i64* %RBP.i537
  %8964 = sub i64 %8963, 388
  %8965 = load i64, i64* %PC.i535
  %8966 = add i64 %8965, 7
  store i64 %8966, i64* %PC.i535
  %8967 = inttoptr i64 %8964 to i32*
  %8968 = load i32, i32* %8967
  %8969 = sext i32 %8968 to i64
  store i64 %8969, i64* %RAX.i536, align 8
  store %struct.Memory* %loadMem_43aba3, %struct.Memory** %MEMORY
  %loadMem_43abaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8971 = getelementptr inbounds %struct.GPR, %struct.GPR* %8970, i32 0, i32 33
  %8972 = getelementptr inbounds %struct.Reg, %struct.Reg* %8971, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %8972 to i64*
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8974 = getelementptr inbounds %struct.GPR, %struct.GPR* %8973, i32 0, i32 1
  %8975 = getelementptr inbounds %struct.Reg, %struct.Reg* %8974, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %8975 to i64*
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8977 = getelementptr inbounds %struct.GPR, %struct.GPR* %8976, i32 0, i32 5
  %8978 = getelementptr inbounds %struct.Reg, %struct.Reg* %8977, i32 0, i32 0
  %RCX.i533 = bitcast %union.anon* %8978 to i64*
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 15
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %RBP.i534 = bitcast %union.anon* %8981 to i64*
  %8982 = load i64, i64* %RBP.i534
  %8983 = load i64, i64* %RAX.i532
  %8984 = mul i64 %8983, 4
  %8985 = add i64 %8982, -352
  %8986 = add i64 %8985, %8984
  %8987 = load i64, i64* %PC.i531
  %8988 = add i64 %8987, 7
  store i64 %8988, i64* %PC.i531
  %8989 = inttoptr i64 %8986 to i32*
  %8990 = load i32, i32* %8989
  %8991 = zext i32 %8990 to i64
  store i64 %8991, i64* %RCX.i533, align 8
  store %struct.Memory* %loadMem_43abaa, %struct.Memory** %MEMORY
  %loadMem_43abb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 33
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %8994 to i64*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 5
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %RCX.i530 = bitcast %union.anon* %8997 to i64*
  %8998 = load i64, i64* %RCX.i530
  %8999 = load i64, i64* %PC.i529
  %9000 = add i64 %8999, 3
  store i64 %9000, i64* %PC.i529
  %9001 = trunc i64 %8998 to i32
  %9002 = sub i32 %9001, 1
  %9003 = zext i32 %9002 to i64
  store i64 %9003, i64* %RCX.i530, align 8
  %9004 = icmp ult i32 %9001, 1
  %9005 = zext i1 %9004 to i8
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9005, i8* %9006, align 1
  %9007 = and i32 %9002, 255
  %9008 = call i32 @llvm.ctpop.i32(i32 %9007)
  %9009 = trunc i32 %9008 to i8
  %9010 = and i8 %9009, 1
  %9011 = xor i8 %9010, 1
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9011, i8* %9012, align 1
  %9013 = xor i64 1, %8998
  %9014 = trunc i64 %9013 to i32
  %9015 = xor i32 %9014, %9002
  %9016 = lshr i32 %9015, 4
  %9017 = trunc i32 %9016 to i8
  %9018 = and i8 %9017, 1
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9018, i8* %9019, align 1
  %9020 = icmp eq i32 %9002, 0
  %9021 = zext i1 %9020 to i8
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9021, i8* %9022, align 1
  %9023 = lshr i32 %9002, 31
  %9024 = trunc i32 %9023 to i8
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9024, i8* %9025, align 1
  %9026 = lshr i32 %9001, 31
  %9027 = xor i32 %9023, %9026
  %9028 = add i32 %9027, %9026
  %9029 = icmp eq i32 %9028, 2
  %9030 = zext i1 %9029 to i8
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9030, i8* %9031, align 1
  store %struct.Memory* %loadMem_43abb1, %struct.Memory** %MEMORY
  %loadMem_43abb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 5
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %ECX.i527 = bitcast %union.anon* %9037 to i32*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 1
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %9040 to i64*
  %9041 = load i32, i32* %ECX.i527
  %9042 = zext i32 %9041 to i64
  %9043 = load i64, i64* %PC.i526
  %9044 = add i64 %9043, 3
  store i64 %9044, i64* %PC.i526
  %9045 = shl i64 %9042, 32
  %9046 = ashr exact i64 %9045, 32
  store i64 %9046, i64* %RAX.i528, align 8
  store %struct.Memory* %loadMem_43abb4, %struct.Memory** %MEMORY
  %loadMem_43abb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9048 = getelementptr inbounds %struct.GPR, %struct.GPR* %9047, i32 0, i32 33
  %9049 = getelementptr inbounds %struct.Reg, %struct.Reg* %9048, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %9049 to i64*
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 1
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 9
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %RSI.i524 = bitcast %union.anon* %9055 to i64*
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9057 = getelementptr inbounds %struct.GPR, %struct.GPR* %9056, i32 0, i32 15
  %9058 = getelementptr inbounds %struct.Reg, %struct.Reg* %9057, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %9058 to i64*
  %9059 = load i64, i64* %RBP.i525
  %9060 = load i64, i64* %RAX.i523
  %9061 = mul i64 %9060, 4
  %9062 = add i64 %9059, -160
  %9063 = add i64 %9062, %9061
  %9064 = load i64, i64* %PC.i522
  %9065 = add i64 %9064, 7
  store i64 %9065, i64* %PC.i522
  %9066 = inttoptr i64 %9063 to i32*
  %9067 = load i32, i32* %9066
  %9068 = zext i32 %9067 to i64
  store i64 %9068, i64* %RSI.i524, align 8
  store %struct.Memory* %loadMem_43abb7, %struct.Memory** %MEMORY
  %loadMem1_43abbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 33
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %9071 to i64*
  %9072 = load i64, i64* %PC.i521
  %9073 = add i64 %9072, 1138
  %9074 = load i64, i64* %PC.i521
  %9075 = add i64 %9074, 5
  %9076 = load i64, i64* %PC.i521
  %9077 = add i64 %9076, 5
  store i64 %9077, i64* %PC.i521
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9079 = load i64, i64* %9078, align 8
  %9080 = add i64 %9079, -8
  %9081 = inttoptr i64 %9080 to i64*
  store i64 %9075, i64* %9081
  store i64 %9080, i64* %9078, align 8
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9073, i64* %9082, align 8
  store %struct.Memory* %loadMem1_43abbe, %struct.Memory** %MEMORY
  %loadMem2_43abbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abbe = load i64, i64* %3
  %call2_43abbe = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43abbe, %struct.Memory* %loadMem2_43abbe)
  store %struct.Memory* %call2_43abbe, %struct.Memory** %MEMORY
  %loadMem_43abc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9084 = getelementptr inbounds %struct.GPR, %struct.GPR* %9083, i32 0, i32 33
  %9085 = getelementptr inbounds %struct.Reg, %struct.Reg* %9084, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %9085 to i64*
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 1
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %EAX.i520 = bitcast %union.anon* %9088 to i32*
  %9089 = load i32, i32* %EAX.i520
  %9090 = zext i32 %9089 to i64
  %9091 = load i64, i64* %PC.i519
  %9092 = add i64 %9091, 3
  store i64 %9092, i64* %PC.i519
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9093, align 1
  %9094 = and i32 %9089, 255
  %9095 = call i32 @llvm.ctpop.i32(i32 %9094)
  %9096 = trunc i32 %9095 to i8
  %9097 = and i8 %9096, 1
  %9098 = xor i8 %9097, 1
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9098, i8* %9099, align 1
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9100, align 1
  %9101 = icmp eq i32 %9089, 0
  %9102 = zext i1 %9101 to i8
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9102, i8* %9103, align 1
  %9104 = lshr i32 %9089, 31
  %9105 = trunc i32 %9104 to i8
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9105, i8* %9106, align 1
  %9107 = lshr i32 %9089, 31
  %9108 = xor i32 %9104, %9107
  %9109 = add i32 %9108, %9107
  %9110 = icmp eq i32 %9109, 2
  %9111 = zext i1 %9110 to i8
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9111, i8* %9112, align 1
  store %struct.Memory* %loadMem_43abc3, %struct.Memory** %MEMORY
  %loadMem_43abc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9114 = getelementptr inbounds %struct.GPR, %struct.GPR* %9113, i32 0, i32 33
  %9115 = getelementptr inbounds %struct.Reg, %struct.Reg* %9114, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %9115 to i64*
  %9116 = load i64, i64* %PC.i518
  %9117 = add i64 %9116, 158
  %9118 = load i64, i64* %PC.i518
  %9119 = add i64 %9118, 6
  %9120 = load i64, i64* %PC.i518
  %9121 = add i64 %9120, 6
  store i64 %9121, i64* %PC.i518
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9123 = load i8, i8* %9122, align 1
  store i8 %9123, i8* %BRANCH_TAKEN, align 1
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9125 = icmp ne i8 %9123, 0
  %9126 = select i1 %9125, i64 %9117, i64 %9119
  store i64 %9126, i64* %9124, align 8
  store %struct.Memory* %loadMem_43abc6, %struct.Memory** %MEMORY
  %loadBr_43abc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43abc6 = icmp eq i8 %loadBr_43abc6, 1
  br i1 %cmpBr_43abc6, label %block_.L_43ac64, label %block_43abcc

block_43abcc:                                     ; preds = %block_43ab9f
  %loadMem_43abcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9128 = getelementptr inbounds %struct.GPR, %struct.GPR* %9127, i32 0, i32 33
  %9129 = getelementptr inbounds %struct.Reg, %struct.Reg* %9128, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %9129 to i64*
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9131 = getelementptr inbounds %struct.GPR, %struct.GPR* %9130, i32 0, i32 1
  %9132 = getelementptr inbounds %struct.Reg, %struct.Reg* %9131, i32 0, i32 0
  %RAX.i516 = bitcast %union.anon* %9132 to i64*
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9134 = getelementptr inbounds %struct.GPR, %struct.GPR* %9133, i32 0, i32 15
  %9135 = getelementptr inbounds %struct.Reg, %struct.Reg* %9134, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %9135 to i64*
  %9136 = load i64, i64* %RBP.i517
  %9137 = sub i64 %9136, 48
  %9138 = load i64, i64* %PC.i515
  %9139 = add i64 %9138, 4
  store i64 %9139, i64* %PC.i515
  %9140 = inttoptr i64 %9137 to i64*
  %9141 = load i64, i64* %9140
  store i64 %9141, i64* %RAX.i516, align 8
  store %struct.Memory* %loadMem_43abcc, %struct.Memory** %MEMORY
  %loadMem_43abd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9143 = getelementptr inbounds %struct.GPR, %struct.GPR* %9142, i32 0, i32 33
  %9144 = getelementptr inbounds %struct.Reg, %struct.Reg* %9143, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %9144 to i64*
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9146 = getelementptr inbounds %struct.GPR, %struct.GPR* %9145, i32 0, i32 5
  %9147 = getelementptr inbounds %struct.Reg, %struct.Reg* %9146, i32 0, i32 0
  %RCX.i513 = bitcast %union.anon* %9147 to i64*
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9149 = getelementptr inbounds %struct.GPR, %struct.GPR* %9148, i32 0, i32 15
  %9150 = getelementptr inbounds %struct.Reg, %struct.Reg* %9149, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %9150 to i64*
  %9151 = load i64, i64* %RBP.i514
  %9152 = sub i64 %9151, 388
  %9153 = load i64, i64* %PC.i512
  %9154 = add i64 %9153, 7
  store i64 %9154, i64* %PC.i512
  %9155 = inttoptr i64 %9152 to i32*
  %9156 = load i32, i32* %9155
  %9157 = sext i32 %9156 to i64
  store i64 %9157, i64* %RCX.i513, align 8
  store %struct.Memory* %loadMem_43abd0, %struct.Memory** %MEMORY
  %loadMem_43abd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9159 = getelementptr inbounds %struct.GPR, %struct.GPR* %9158, i32 0, i32 33
  %9160 = getelementptr inbounds %struct.Reg, %struct.Reg* %9159, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %9160 to i64*
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 5
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %9163 to i64*
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 7
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %RDX.i510 = bitcast %union.anon* %9166 to i64*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 15
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %9169 to i64*
  %9170 = load i64, i64* %RBP.i511
  %9171 = load i64, i64* %RCX.i509
  %9172 = mul i64 %9171, 4
  %9173 = add i64 %9170, -352
  %9174 = add i64 %9173, %9172
  %9175 = load i64, i64* %PC.i508
  %9176 = add i64 %9175, 7
  store i64 %9176, i64* %PC.i508
  %9177 = inttoptr i64 %9174 to i32*
  %9178 = load i32, i32* %9177
  %9179 = zext i32 %9178 to i64
  store i64 %9179, i64* %RDX.i510, align 8
  store %struct.Memory* %loadMem_43abd7, %struct.Memory** %MEMORY
  %loadMem_43abde = load %struct.Memory*, %struct.Memory** %MEMORY
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 33
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %9182 to i64*
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 7
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %RDX.i507 = bitcast %union.anon* %9185 to i64*
  %9186 = load i64, i64* %RDX.i507
  %9187 = load i64, i64* %PC.i506
  %9188 = add i64 %9187, 3
  store i64 %9188, i64* %PC.i506
  %9189 = trunc i64 %9186 to i32
  %9190 = sub i32 %9189, 1
  %9191 = zext i32 %9190 to i64
  store i64 %9191, i64* %RDX.i507, align 8
  %9192 = icmp ult i32 %9189, 1
  %9193 = zext i1 %9192 to i8
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9193, i8* %9194, align 1
  %9195 = and i32 %9190, 255
  %9196 = call i32 @llvm.ctpop.i32(i32 %9195)
  %9197 = trunc i32 %9196 to i8
  %9198 = and i8 %9197, 1
  %9199 = xor i8 %9198, 1
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9199, i8* %9200, align 1
  %9201 = xor i64 1, %9186
  %9202 = trunc i64 %9201 to i32
  %9203 = xor i32 %9202, %9190
  %9204 = lshr i32 %9203, 4
  %9205 = trunc i32 %9204 to i8
  %9206 = and i8 %9205, 1
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9206, i8* %9207, align 1
  %9208 = icmp eq i32 %9190, 0
  %9209 = zext i1 %9208 to i8
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9209, i8* %9210, align 1
  %9211 = lshr i32 %9190, 31
  %9212 = trunc i32 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9212, i8* %9213, align 1
  %9214 = lshr i32 %9189, 31
  %9215 = xor i32 %9211, %9214
  %9216 = add i32 %9215, %9214
  %9217 = icmp eq i32 %9216, 2
  %9218 = zext i1 %9217 to i8
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9218, i8* %9219, align 1
  store %struct.Memory* %loadMem_43abde, %struct.Memory** %MEMORY
  %loadMem_43abe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 33
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %9222 to i64*
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9224 = getelementptr inbounds %struct.GPR, %struct.GPR* %9223, i32 0, i32 7
  %9225 = getelementptr inbounds %struct.Reg, %struct.Reg* %9224, i32 0, i32 0
  %EDX.i504 = bitcast %union.anon* %9225 to i32*
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 5
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %RCX.i505 = bitcast %union.anon* %9228 to i64*
  %9229 = load i32, i32* %EDX.i504
  %9230 = zext i32 %9229 to i64
  %9231 = load i64, i64* %PC.i503
  %9232 = add i64 %9231, 3
  store i64 %9232, i64* %PC.i503
  %9233 = shl i64 %9230, 32
  %9234 = ashr exact i64 %9233, 32
  store i64 %9234, i64* %RCX.i505, align 8
  store %struct.Memory* %loadMem_43abe1, %struct.Memory** %MEMORY
  %loadMem_43abe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 33
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %9237 to i64*
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 5
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 15
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %RBP.i502
  %9245 = load i64, i64* %RCX.i501
  %9246 = mul i64 %9245, 4
  %9247 = add i64 %9244, -160
  %9248 = add i64 %9247, %9246
  %9249 = load i64, i64* %PC.i500
  %9250 = add i64 %9249, 8
  store i64 %9250, i64* %PC.i500
  %9251 = inttoptr i64 %9248 to i32*
  %9252 = load i32, i32* %9251
  %9253 = sext i32 %9252 to i64
  store i64 %9253, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_43abe4, %struct.Memory** %MEMORY
  %loadMem_43abec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 33
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %9256 to i64*
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9258 = getelementptr inbounds %struct.GPR, %struct.GPR* %9257, i32 0, i32 5
  %9259 = getelementptr inbounds %struct.Reg, %struct.Reg* %9258, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %9259 to i64*
  %9260 = load i64, i64* %RCX.i499
  %9261 = load i64, i64* %PC.i498
  %9262 = add i64 %9261, 4
  store i64 %9262, i64* %PC.i498
  %9263 = sext i64 %9260 to i128
  %9264 = and i128 %9263, -18446744073709551616
  %9265 = zext i64 %9260 to i128
  %9266 = or i128 %9264, %9265
  %9267 = mul i128 48, %9266
  %9268 = trunc i128 %9267 to i64
  store i64 %9268, i64* %RCX.i499, align 8
  %9269 = sext i64 %9268 to i128
  %9270 = icmp ne i128 %9269, %9267
  %9271 = zext i1 %9270 to i8
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9271, i8* %9272, align 1
  %9273 = trunc i128 %9267 to i32
  %9274 = and i32 %9273, 255
  %9275 = call i32 @llvm.ctpop.i32(i32 %9274)
  %9276 = trunc i32 %9275 to i8
  %9277 = and i8 %9276, 1
  %9278 = xor i8 %9277, 1
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9278, i8* %9279, align 1
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9280, align 1
  %9281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9281, align 1
  %9282 = lshr i64 %9268, 63
  %9283 = trunc i64 %9282 to i8
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9283, i8* %9284, align 1
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9271, i8* %9285, align 1
  store %struct.Memory* %loadMem_43abec, %struct.Memory** %MEMORY
  %loadMem_43abf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 33
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %9288 to i64*
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 1
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %9291 to i64*
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 5
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %9294 to i64*
  %9295 = load i64, i64* %RAX.i496
  %9296 = load i64, i64* %RCX.i497
  %9297 = load i64, i64* %PC.i495
  %9298 = add i64 %9297, 3
  store i64 %9298, i64* %PC.i495
  %9299 = add i64 %9296, %9295
  store i64 %9299, i64* %RAX.i496, align 8
  %9300 = icmp ult i64 %9299, %9295
  %9301 = icmp ult i64 %9299, %9296
  %9302 = or i1 %9300, %9301
  %9303 = zext i1 %9302 to i8
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9303, i8* %9304, align 1
  %9305 = trunc i64 %9299 to i32
  %9306 = and i32 %9305, 255
  %9307 = call i32 @llvm.ctpop.i32(i32 %9306)
  %9308 = trunc i32 %9307 to i8
  %9309 = and i8 %9308, 1
  %9310 = xor i8 %9309, 1
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9310, i8* %9311, align 1
  %9312 = xor i64 %9296, %9295
  %9313 = xor i64 %9312, %9299
  %9314 = lshr i64 %9313, 4
  %9315 = trunc i64 %9314 to i8
  %9316 = and i8 %9315, 1
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9316, i8* %9317, align 1
  %9318 = icmp eq i64 %9299, 0
  %9319 = zext i1 %9318 to i8
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9319, i8* %9320, align 1
  %9321 = lshr i64 %9299, 63
  %9322 = trunc i64 %9321 to i8
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9322, i8* %9323, align 1
  %9324 = lshr i64 %9295, 63
  %9325 = lshr i64 %9296, 63
  %9326 = xor i64 %9321, %9324
  %9327 = xor i64 %9321, %9325
  %9328 = add i64 %9326, %9327
  %9329 = icmp eq i64 %9328, 2
  %9330 = zext i1 %9329 to i8
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9330, i8* %9331, align 1
  store %struct.Memory* %loadMem_43abf0, %struct.Memory** %MEMORY
  %loadMem_43abf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 33
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %9334 to i64*
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 1
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %9337 to i64*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 15
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %9340 to i64*
  %9341 = load i64, i64* %RBP.i494
  %9342 = sub i64 %9341, 416
  %9343 = load i64, i64* %RAX.i493
  %9344 = load i64, i64* %PC.i492
  %9345 = add i64 %9344, 7
  store i64 %9345, i64* %PC.i492
  %9346 = inttoptr i64 %9342 to i64*
  store i64 %9343, i64* %9346
  store %struct.Memory* %loadMem_43abf3, %struct.Memory** %MEMORY
  %loadMem_43abfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9348 = getelementptr inbounds %struct.GPR, %struct.GPR* %9347, i32 0, i32 33
  %9349 = getelementptr inbounds %struct.Reg, %struct.Reg* %9348, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %9349 to i64*
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9351 = getelementptr inbounds %struct.GPR, %struct.GPR* %9350, i32 0, i32 15
  %9352 = getelementptr inbounds %struct.Reg, %struct.Reg* %9351, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %9352 to i64*
  %9353 = load i64, i64* %RBP.i491
  %9354 = sub i64 %9353, 404
  %9355 = load i64, i64* %PC.i490
  %9356 = add i64 %9355, 10
  store i64 %9356, i64* %PC.i490
  %9357 = inttoptr i64 %9354 to i32*
  store i32 0, i32* %9357
  store %struct.Memory* %loadMem_43abfa, %struct.Memory** %MEMORY
  br label %block_.L_43ac04

block_.L_43ac04:                                  ; preds = %block_43ac1a, %block_43abcc
  %loadMem_43ac04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9359 = getelementptr inbounds %struct.GPR, %struct.GPR* %9358, i32 0, i32 33
  %9360 = getelementptr inbounds %struct.Reg, %struct.Reg* %9359, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %9360 to i64*
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 1
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %9363 to i64*
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 15
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %RBP.i489 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %RBP.i489
  %9368 = sub i64 %9367, 404
  %9369 = load i64, i64* %PC.i487
  %9370 = add i64 %9369, 6
  store i64 %9370, i64* %PC.i487
  %9371 = inttoptr i64 %9368 to i32*
  %9372 = load i32, i32* %9371
  %9373 = zext i32 %9372 to i64
  store i64 %9373, i64* %RAX.i488, align 8
  store %struct.Memory* %loadMem_43ac04, %struct.Memory** %MEMORY
  %loadMem_43ac0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9375 = getelementptr inbounds %struct.GPR, %struct.GPR* %9374, i32 0, i32 33
  %9376 = getelementptr inbounds %struct.Reg, %struct.Reg* %9375, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %9376 to i64*
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 5
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %RCX.i485 = bitcast %union.anon* %9379 to i64*
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 15
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %9382 to i64*
  %9383 = load i64, i64* %RBP.i486
  %9384 = sub i64 %9383, 416
  %9385 = load i64, i64* %PC.i484
  %9386 = add i64 %9385, 7
  store i64 %9386, i64* %PC.i484
  %9387 = inttoptr i64 %9384 to i64*
  %9388 = load i64, i64* %9387
  store i64 %9388, i64* %RCX.i485, align 8
  store %struct.Memory* %loadMem_43ac0a, %struct.Memory** %MEMORY
  %loadMem_43ac11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9390 = getelementptr inbounds %struct.GPR, %struct.GPR* %9389, i32 0, i32 33
  %9391 = getelementptr inbounds %struct.Reg, %struct.Reg* %9390, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %9391 to i64*
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9393 = getelementptr inbounds %struct.GPR, %struct.GPR* %9392, i32 0, i32 1
  %9394 = getelementptr inbounds %struct.Reg, %struct.Reg* %9393, i32 0, i32 0
  %EAX.i482 = bitcast %union.anon* %9394 to i32*
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9396 = getelementptr inbounds %struct.GPR, %struct.GPR* %9395, i32 0, i32 5
  %9397 = getelementptr inbounds %struct.Reg, %struct.Reg* %9396, i32 0, i32 0
  %RCX.i483 = bitcast %union.anon* %9397 to i64*
  %9398 = load i32, i32* %EAX.i482
  %9399 = zext i32 %9398 to i64
  %9400 = load i64, i64* %RCX.i483
  %9401 = add i64 %9400, 8
  %9402 = load i64, i64* %PC.i481
  %9403 = add i64 %9402, 3
  store i64 %9403, i64* %PC.i481
  %9404 = inttoptr i64 %9401 to i32*
  %9405 = load i32, i32* %9404
  %9406 = sub i32 %9398, %9405
  %9407 = icmp ult i32 %9398, %9405
  %9408 = zext i1 %9407 to i8
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9408, i8* %9409, align 1
  %9410 = and i32 %9406, 255
  %9411 = call i32 @llvm.ctpop.i32(i32 %9410)
  %9412 = trunc i32 %9411 to i8
  %9413 = and i8 %9412, 1
  %9414 = xor i8 %9413, 1
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9414, i8* %9415, align 1
  %9416 = xor i32 %9405, %9398
  %9417 = xor i32 %9416, %9406
  %9418 = lshr i32 %9417, 4
  %9419 = trunc i32 %9418 to i8
  %9420 = and i8 %9419, 1
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9420, i8* %9421, align 1
  %9422 = icmp eq i32 %9406, 0
  %9423 = zext i1 %9422 to i8
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9423, i8* %9424, align 1
  %9425 = lshr i32 %9406, 31
  %9426 = trunc i32 %9425 to i8
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9426, i8* %9427, align 1
  %9428 = lshr i32 %9398, 31
  %9429 = lshr i32 %9405, 31
  %9430 = xor i32 %9429, %9428
  %9431 = xor i32 %9425, %9428
  %9432 = add i32 %9431, %9430
  %9433 = icmp eq i32 %9432, 2
  %9434 = zext i1 %9433 to i8
  %9435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9434, i8* %9435, align 1
  store %struct.Memory* %loadMem_43ac11, %struct.Memory** %MEMORY
  %loadMem_43ac14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9437 = getelementptr inbounds %struct.GPR, %struct.GPR* %9436, i32 0, i32 33
  %9438 = getelementptr inbounds %struct.Reg, %struct.Reg* %9437, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %9438 to i64*
  %9439 = load i64, i64* %PC.i480
  %9440 = add i64 %9439, 75
  %9441 = load i64, i64* %PC.i480
  %9442 = add i64 %9441, 6
  %9443 = load i64, i64* %PC.i480
  %9444 = add i64 %9443, 6
  store i64 %9444, i64* %PC.i480
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9446 = load i8, i8* %9445, align 1
  %9447 = icmp ne i8 %9446, 0
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9449 = load i8, i8* %9448, align 1
  %9450 = icmp ne i8 %9449, 0
  %9451 = xor i1 %9447, %9450
  %9452 = xor i1 %9451, true
  %9453 = zext i1 %9452 to i8
  store i8 %9453, i8* %BRANCH_TAKEN, align 1
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9455 = select i1 %9451, i64 %9442, i64 %9440
  store i64 %9455, i64* %9454, align 8
  store %struct.Memory* %loadMem_43ac14, %struct.Memory** %MEMORY
  %loadBr_43ac14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ac14 = icmp eq i8 %loadBr_43ac14, 1
  br i1 %cmpBr_43ac14, label %block_.L_43ac5f, label %block_43ac1a

block_43ac1a:                                     ; preds = %block_.L_43ac04
  %loadMem_43ac1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9457 = getelementptr inbounds %struct.GPR, %struct.GPR* %9456, i32 0, i32 33
  %9458 = getelementptr inbounds %struct.Reg, %struct.Reg* %9457, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %9458 to i64*
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 1
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %9461 to i64*
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9463 = getelementptr inbounds %struct.GPR, %struct.GPR* %9462, i32 0, i32 15
  %9464 = getelementptr inbounds %struct.Reg, %struct.Reg* %9463, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %9464 to i64*
  %9465 = load i64, i64* %RBP.i479
  %9466 = sub i64 %9465, 416
  %9467 = load i64, i64* %PC.i477
  %9468 = add i64 %9467, 7
  store i64 %9468, i64* %PC.i477
  %9469 = inttoptr i64 %9466 to i64*
  %9470 = load i64, i64* %9469
  store i64 %9470, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_43ac1a, %struct.Memory** %MEMORY
  %loadMem_43ac21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 33
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %9473 to i64*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 5
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %RCX.i475 = bitcast %union.anon* %9476 to i64*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 15
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %9479 to i64*
  %9480 = load i64, i64* %RBP.i476
  %9481 = sub i64 %9480, 404
  %9482 = load i64, i64* %PC.i474
  %9483 = add i64 %9482, 7
  store i64 %9483, i64* %PC.i474
  %9484 = inttoptr i64 %9481 to i32*
  %9485 = load i32, i32* %9484
  %9486 = sext i32 %9485 to i64
  store i64 %9486, i64* %RCX.i475, align 8
  store %struct.Memory* %loadMem_43ac21, %struct.Memory** %MEMORY
  %loadMem_43ac28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 33
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %9489 to i64*
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 1
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %9492 to i64*
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9494 = getelementptr inbounds %struct.GPR, %struct.GPR* %9493, i32 0, i32 5
  %9495 = getelementptr inbounds %struct.Reg, %struct.Reg* %9494, i32 0, i32 0
  %RCX.i472 = bitcast %union.anon* %9495 to i64*
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 7
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %RDX.i473 = bitcast %union.anon* %9498 to i64*
  %9499 = load i64, i64* %RAX.i471
  %9500 = load i64, i64* %RCX.i472
  %9501 = mul i64 %9500, 4
  %9502 = add i64 %9499, 12
  %9503 = add i64 %9502, %9501
  %9504 = load i64, i64* %PC.i470
  %9505 = add i64 %9504, 4
  store i64 %9505, i64* %PC.i470
  %9506 = inttoptr i64 %9503 to i32*
  %9507 = load i32, i32* %9506
  %9508 = zext i32 %9507 to i64
  store i64 %9508, i64* %RDX.i473, align 8
  store %struct.Memory* %loadMem_43ac28, %struct.Memory** %MEMORY
  %loadMem_43ac2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 33
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %9511 to i64*
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 1
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 15
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %9517 to i64*
  %9518 = load i64, i64* %RBP.i469
  %9519 = sub i64 %9518, 56
  %9520 = load i64, i64* %PC.i467
  %9521 = add i64 %9520, 4
  store i64 %9521, i64* %PC.i467
  %9522 = inttoptr i64 %9519 to i64*
  %9523 = load i64, i64* %9522
  store i64 %9523, i64* %RAX.i468, align 8
  store %struct.Memory* %loadMem_43ac2c, %struct.Memory** %MEMORY
  %loadMem_43ac30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9525 = getelementptr inbounds %struct.GPR, %struct.GPR* %9524, i32 0, i32 33
  %9526 = getelementptr inbounds %struct.Reg, %struct.Reg* %9525, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %9526 to i64*
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9528 = getelementptr inbounds %struct.GPR, %struct.GPR* %9527, i32 0, i32 5
  %9529 = getelementptr inbounds %struct.Reg, %struct.Reg* %9528, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %9529 to i64*
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9531 = getelementptr inbounds %struct.GPR, %struct.GPR* %9530, i32 0, i32 15
  %9532 = getelementptr inbounds %struct.Reg, %struct.Reg* %9531, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %9532 to i64*
  %9533 = load i64, i64* %RBP.i466
  %9534 = sub i64 %9533, 56
  %9535 = load i64, i64* %PC.i464
  %9536 = add i64 %9535, 4
  store i64 %9536, i64* %PC.i464
  %9537 = inttoptr i64 %9534 to i64*
  %9538 = load i64, i64* %9537
  store i64 %9538, i64* %RCX.i465, align 8
  store %struct.Memory* %loadMem_43ac30, %struct.Memory** %MEMORY
  %loadMem_43ac34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9540 = getelementptr inbounds %struct.GPR, %struct.GPR* %9539, i32 0, i32 33
  %9541 = getelementptr inbounds %struct.Reg, %struct.Reg* %9540, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %9541 to i64*
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9543 = getelementptr inbounds %struct.GPR, %struct.GPR* %9542, i32 0, i32 5
  %9544 = getelementptr inbounds %struct.Reg, %struct.Reg* %9543, i32 0, i32 0
  %RCX.i462 = bitcast %union.anon* %9544 to i64*
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9546 = getelementptr inbounds %struct.GPR, %struct.GPR* %9545, i32 0, i32 9
  %9547 = getelementptr inbounds %struct.Reg, %struct.Reg* %9546, i32 0, i32 0
  %RSI.i463 = bitcast %union.anon* %9547 to i64*
  %9548 = load i64, i64* %RCX.i462
  %9549 = add i64 %9548, 640
  %9550 = load i64, i64* %PC.i461
  %9551 = add i64 %9550, 6
  store i64 %9551, i64* %PC.i461
  %9552 = inttoptr i64 %9549 to i32*
  %9553 = load i32, i32* %9552
  %9554 = zext i32 %9553 to i64
  store i64 %9554, i64* %RSI.i463, align 8
  store %struct.Memory* %loadMem_43ac34, %struct.Memory** %MEMORY
  %loadMem_43ac3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 33
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %9557 to i64*
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9559 = getelementptr inbounds %struct.GPR, %struct.GPR* %9558, i32 0, i32 9
  %9560 = getelementptr inbounds %struct.Reg, %struct.Reg* %9559, i32 0, i32 0
  %ESI.i459 = bitcast %union.anon* %9560 to i32*
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 11
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %RDI.i460 = bitcast %union.anon* %9563 to i64*
  %9564 = load i32, i32* %ESI.i459
  %9565 = zext i32 %9564 to i64
  %9566 = load i64, i64* %PC.i458
  %9567 = add i64 %9566, 2
  store i64 %9567, i64* %PC.i458
  %9568 = and i64 %9565, 4294967295
  store i64 %9568, i64* %RDI.i460, align 8
  store %struct.Memory* %loadMem_43ac3a, %struct.Memory** %MEMORY
  %loadMem_43ac3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9570 = getelementptr inbounds %struct.GPR, %struct.GPR* %9569, i32 0, i32 33
  %9571 = getelementptr inbounds %struct.Reg, %struct.Reg* %9570, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %9571 to i64*
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 11
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RDI.i457 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %RDI.i457
  %9576 = load i64, i64* %PC.i456
  %9577 = add i64 %9576, 3
  store i64 %9577, i64* %PC.i456
  %9578 = trunc i64 %9575 to i32
  %9579 = add i32 1, %9578
  %9580 = zext i32 %9579 to i64
  store i64 %9580, i64* %RDI.i457, align 8
  %9581 = icmp ult i32 %9579, %9578
  %9582 = icmp ult i32 %9579, 1
  %9583 = or i1 %9581, %9582
  %9584 = zext i1 %9583 to i8
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9584, i8* %9585, align 1
  %9586 = and i32 %9579, 255
  %9587 = call i32 @llvm.ctpop.i32(i32 %9586)
  %9588 = trunc i32 %9587 to i8
  %9589 = and i8 %9588, 1
  %9590 = xor i8 %9589, 1
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9590, i8* %9591, align 1
  %9592 = xor i64 1, %9575
  %9593 = trunc i64 %9592 to i32
  %9594 = xor i32 %9593, %9579
  %9595 = lshr i32 %9594, 4
  %9596 = trunc i32 %9595 to i8
  %9597 = and i8 %9596, 1
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9597, i8* %9598, align 1
  %9599 = icmp eq i32 %9579, 0
  %9600 = zext i1 %9599 to i8
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9600, i8* %9601, align 1
  %9602 = lshr i32 %9579, 31
  %9603 = trunc i32 %9602 to i8
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9603, i8* %9604, align 1
  %9605 = lshr i32 %9578, 31
  %9606 = xor i32 %9602, %9605
  %9607 = add i32 %9606, %9602
  %9608 = icmp eq i32 %9607, 2
  %9609 = zext i1 %9608 to i8
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9609, i8* %9610, align 1
  store %struct.Memory* %loadMem_43ac3c, %struct.Memory** %MEMORY
  %loadMem_43ac3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 33
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %9613 to i64*
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 11
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %EDI.i454 = bitcast %union.anon* %9616 to i32*
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 5
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %RCX.i455 = bitcast %union.anon* %9619 to i64*
  %9620 = load i64, i64* %RCX.i455
  %9621 = add i64 %9620, 640
  %9622 = load i32, i32* %EDI.i454
  %9623 = zext i32 %9622 to i64
  %9624 = load i64, i64* %PC.i453
  %9625 = add i64 %9624, 6
  store i64 %9625, i64* %PC.i453
  %9626 = inttoptr i64 %9621 to i32*
  store i32 %9622, i32* %9626
  store %struct.Memory* %loadMem_43ac3f, %struct.Memory** %MEMORY
  %loadMem_43ac45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9628 = getelementptr inbounds %struct.GPR, %struct.GPR* %9627, i32 0, i32 33
  %9629 = getelementptr inbounds %struct.Reg, %struct.Reg* %9628, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %9629 to i64*
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 9
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %ESI.i451 = bitcast %union.anon* %9632 to i32*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 5
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %RCX.i452 = bitcast %union.anon* %9635 to i64*
  %9636 = load i32, i32* %ESI.i451
  %9637 = zext i32 %9636 to i64
  %9638 = load i64, i64* %PC.i450
  %9639 = add i64 %9638, 3
  store i64 %9639, i64* %PC.i450
  %9640 = shl i64 %9637, 32
  %9641 = ashr exact i64 %9640, 32
  store i64 %9641, i64* %RCX.i452, align 8
  store %struct.Memory* %loadMem_43ac45, %struct.Memory** %MEMORY
  %loadMem_43ac48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 33
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %9644 to i64*
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 7
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %EDX.i447 = bitcast %union.anon* %9647 to i32*
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 1
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %RAX.i448 = bitcast %union.anon* %9650 to i64*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 5
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %9653 to i64*
  %9654 = load i64, i64* %RAX.i448
  %9655 = load i64, i64* %RCX.i449
  %9656 = mul i64 %9655, 4
  %9657 = add i64 %9656, %9654
  %9658 = load i32, i32* %EDX.i447
  %9659 = zext i32 %9658 to i64
  %9660 = load i64, i64* %PC.i446
  %9661 = add i64 %9660, 3
  store i64 %9661, i64* %PC.i446
  %9662 = inttoptr i64 %9657 to i32*
  store i32 %9658, i32* %9662
  store %struct.Memory* %loadMem_43ac48, %struct.Memory** %MEMORY
  %loadMem_43ac4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 33
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %9665 to i64*
  %9666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9667 = getelementptr inbounds %struct.GPR, %struct.GPR* %9666, i32 0, i32 1
  %9668 = getelementptr inbounds %struct.Reg, %struct.Reg* %9667, i32 0, i32 0
  %RAX.i444 = bitcast %union.anon* %9668 to i64*
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9670 = getelementptr inbounds %struct.GPR, %struct.GPR* %9669, i32 0, i32 15
  %9671 = getelementptr inbounds %struct.Reg, %struct.Reg* %9670, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %9671 to i64*
  %9672 = load i64, i64* %RBP.i445
  %9673 = sub i64 %9672, 404
  %9674 = load i64, i64* %PC.i443
  %9675 = add i64 %9674, 6
  store i64 %9675, i64* %PC.i443
  %9676 = inttoptr i64 %9673 to i32*
  %9677 = load i32, i32* %9676
  %9678 = zext i32 %9677 to i64
  store i64 %9678, i64* %RAX.i444, align 8
  store %struct.Memory* %loadMem_43ac4b, %struct.Memory** %MEMORY
  %loadMem_43ac51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 33
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %9681 to i64*
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 1
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %9684 to i64*
  %9685 = load i64, i64* %RAX.i442
  %9686 = load i64, i64* %PC.i441
  %9687 = add i64 %9686, 3
  store i64 %9687, i64* %PC.i441
  %9688 = trunc i64 %9685 to i32
  %9689 = add i32 1, %9688
  %9690 = zext i32 %9689 to i64
  store i64 %9690, i64* %RAX.i442, align 8
  %9691 = icmp ult i32 %9689, %9688
  %9692 = icmp ult i32 %9689, 1
  %9693 = or i1 %9691, %9692
  %9694 = zext i1 %9693 to i8
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9694, i8* %9695, align 1
  %9696 = and i32 %9689, 255
  %9697 = call i32 @llvm.ctpop.i32(i32 %9696)
  %9698 = trunc i32 %9697 to i8
  %9699 = and i8 %9698, 1
  %9700 = xor i8 %9699, 1
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9700, i8* %9701, align 1
  %9702 = xor i64 1, %9685
  %9703 = trunc i64 %9702 to i32
  %9704 = xor i32 %9703, %9689
  %9705 = lshr i32 %9704, 4
  %9706 = trunc i32 %9705 to i8
  %9707 = and i8 %9706, 1
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9707, i8* %9708, align 1
  %9709 = icmp eq i32 %9689, 0
  %9710 = zext i1 %9709 to i8
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9710, i8* %9711, align 1
  %9712 = lshr i32 %9689, 31
  %9713 = trunc i32 %9712 to i8
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9713, i8* %9714, align 1
  %9715 = lshr i32 %9688, 31
  %9716 = xor i32 %9712, %9715
  %9717 = add i32 %9716, %9712
  %9718 = icmp eq i32 %9717, 2
  %9719 = zext i1 %9718 to i8
  %9720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9719, i8* %9720, align 1
  store %struct.Memory* %loadMem_43ac51, %struct.Memory** %MEMORY
  %loadMem_43ac54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %9723 to i64*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 1
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %EAX.i439 = bitcast %union.anon* %9726 to i32*
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9728 = getelementptr inbounds %struct.GPR, %struct.GPR* %9727, i32 0, i32 15
  %9729 = getelementptr inbounds %struct.Reg, %struct.Reg* %9728, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %9729 to i64*
  %9730 = load i64, i64* %RBP.i440
  %9731 = sub i64 %9730, 404
  %9732 = load i32, i32* %EAX.i439
  %9733 = zext i32 %9732 to i64
  %9734 = load i64, i64* %PC.i438
  %9735 = add i64 %9734, 6
  store i64 %9735, i64* %PC.i438
  %9736 = inttoptr i64 %9731 to i32*
  store i32 %9732, i32* %9736
  store %struct.Memory* %loadMem_43ac54, %struct.Memory** %MEMORY
  %loadMem_43ac5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 33
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %9739 to i64*
  %9740 = load i64, i64* %PC.i437
  %9741 = add i64 %9740, -86
  %9742 = load i64, i64* %PC.i437
  %9743 = add i64 %9742, 5
  store i64 %9743, i64* %PC.i437
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9741, i64* %9744, align 8
  store %struct.Memory* %loadMem_43ac5a, %struct.Memory** %MEMORY
  br label %block_.L_43ac04

block_.L_43ac5f:                                  ; preds = %block_.L_43ac04
  %loadMem_43ac5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 33
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %9747 to i64*
  %9748 = load i64, i64* %PC.i436
  %9749 = add i64 %9748, 58
  %9750 = load i64, i64* %PC.i436
  %9751 = add i64 %9750, 5
  store i64 %9751, i64* %PC.i436
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9749, i64* %9752, align 8
  store %struct.Memory* %loadMem_43ac5f, %struct.Memory** %MEMORY
  br label %block_.L_43ac99

block_.L_43ac64:                                  ; preds = %block_43ab9f, %block_43ab7d, %block_43ab68, %block_43ab55
  %loadMem_43ac64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 1
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %9758 to i64*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 15
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %9761 to i64*
  %9762 = load i64, i64* %RBP.i435
  %9763 = sub i64 %9762, 388
  %9764 = load i64, i64* %PC.i433
  %9765 = add i64 %9764, 7
  store i64 %9765, i64* %PC.i433
  %9766 = inttoptr i64 %9763 to i32*
  %9767 = load i32, i32* %9766
  %9768 = sext i32 %9767 to i64
  store i64 %9768, i64* %RAX.i434, align 8
  store %struct.Memory* %loadMem_43ac64, %struct.Memory** %MEMORY
  %loadMem_43ac6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9770 = getelementptr inbounds %struct.GPR, %struct.GPR* %9769, i32 0, i32 33
  %9771 = getelementptr inbounds %struct.Reg, %struct.Reg* %9770, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %9771 to i64*
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 1
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %RAX.i431 = bitcast %union.anon* %9774 to i64*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 15
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RBP.i432 = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %RBP.i432
  %9779 = load i64, i64* %RAX.i431
  %9780 = mul i64 %9779, 4
  %9781 = add i64 %9778, -352
  %9782 = add i64 %9781, %9780
  %9783 = load i64, i64* %PC.i430
  %9784 = add i64 %9783, 8
  store i64 %9784, i64* %PC.i430
  %9785 = inttoptr i64 %9782 to i32*
  %9786 = load i32, i32* %9785
  %9787 = sext i32 %9786 to i64
  store i64 %9787, i64* %RAX.i431, align 8
  store %struct.Memory* %loadMem_43ac6b, %struct.Memory** %MEMORY
  %loadMem_43ac73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9789 = getelementptr inbounds %struct.GPR, %struct.GPR* %9788, i32 0, i32 33
  %9790 = getelementptr inbounds %struct.Reg, %struct.Reg* %9789, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %9790 to i64*
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9792 = getelementptr inbounds %struct.GPR, %struct.GPR* %9791, i32 0, i32 1
  %9793 = getelementptr inbounds %struct.Reg, %struct.Reg* %9792, i32 0, i32 0
  %RAX.i427 = bitcast %union.anon* %9793 to i64*
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 5
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %RCX.i428 = bitcast %union.anon* %9796 to i64*
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 15
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %9799 to i64*
  %9800 = load i64, i64* %RBP.i429
  %9801 = load i64, i64* %RAX.i427
  %9802 = mul i64 %9801, 4
  %9803 = add i64 %9800, -160
  %9804 = add i64 %9803, %9802
  %9805 = load i64, i64* %PC.i426
  %9806 = add i64 %9805, 7
  store i64 %9806, i64* %PC.i426
  %9807 = inttoptr i64 %9804 to i32*
  %9808 = load i32, i32* %9807
  %9809 = zext i32 %9808 to i64
  store i64 %9809, i64* %RCX.i428, align 8
  store %struct.Memory* %loadMem_43ac73, %struct.Memory** %MEMORY
  %loadMem_43ac7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9811 = getelementptr inbounds %struct.GPR, %struct.GPR* %9810, i32 0, i32 33
  %9812 = getelementptr inbounds %struct.Reg, %struct.Reg* %9811, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %9812 to i64*
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 1
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %RAX.i424 = bitcast %union.anon* %9815 to i64*
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 15
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %9818 to i64*
  %9819 = load i64, i64* %RBP.i425
  %9820 = sub i64 %9819, 56
  %9821 = load i64, i64* %PC.i423
  %9822 = add i64 %9821, 4
  store i64 %9822, i64* %PC.i423
  %9823 = inttoptr i64 %9820 to i64*
  %9824 = load i64, i64* %9823
  store i64 %9824, i64* %RAX.i424, align 8
  store %struct.Memory* %loadMem_43ac7a, %struct.Memory** %MEMORY
  %loadMem_43ac7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9826 = getelementptr inbounds %struct.GPR, %struct.GPR* %9825, i32 0, i32 33
  %9827 = getelementptr inbounds %struct.Reg, %struct.Reg* %9826, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %9827 to i64*
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9829 = getelementptr inbounds %struct.GPR, %struct.GPR* %9828, i32 0, i32 7
  %9830 = getelementptr inbounds %struct.Reg, %struct.Reg* %9829, i32 0, i32 0
  %RDX.i421 = bitcast %union.anon* %9830 to i64*
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9832 = getelementptr inbounds %struct.GPR, %struct.GPR* %9831, i32 0, i32 15
  %9833 = getelementptr inbounds %struct.Reg, %struct.Reg* %9832, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %9833 to i64*
  %9834 = load i64, i64* %RBP.i422
  %9835 = sub i64 %9834, 56
  %9836 = load i64, i64* %PC.i420
  %9837 = add i64 %9836, 4
  store i64 %9837, i64* %PC.i420
  %9838 = inttoptr i64 %9835 to i64*
  %9839 = load i64, i64* %9838
  store i64 %9839, i64* %RDX.i421, align 8
  store %struct.Memory* %loadMem_43ac7e, %struct.Memory** %MEMORY
  %loadMem_43ac82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 33
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %9842 to i64*
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9844 = getelementptr inbounds %struct.GPR, %struct.GPR* %9843, i32 0, i32 7
  %9845 = getelementptr inbounds %struct.Reg, %struct.Reg* %9844, i32 0, i32 0
  %RDX.i418 = bitcast %union.anon* %9845 to i64*
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9847 = getelementptr inbounds %struct.GPR, %struct.GPR* %9846, i32 0, i32 9
  %9848 = getelementptr inbounds %struct.Reg, %struct.Reg* %9847, i32 0, i32 0
  %RSI.i419 = bitcast %union.anon* %9848 to i64*
  %9849 = load i64, i64* %RDX.i418
  %9850 = add i64 %9849, 640
  %9851 = load i64, i64* %PC.i417
  %9852 = add i64 %9851, 6
  store i64 %9852, i64* %PC.i417
  %9853 = inttoptr i64 %9850 to i32*
  %9854 = load i32, i32* %9853
  %9855 = zext i32 %9854 to i64
  store i64 %9855, i64* %RSI.i419, align 8
  store %struct.Memory* %loadMem_43ac82, %struct.Memory** %MEMORY
  %loadMem_43ac88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 33
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %9858 to i64*
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 9
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %ESI.i415 = bitcast %union.anon* %9861 to i32*
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 11
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %RDI.i416 = bitcast %union.anon* %9864 to i64*
  %9865 = load i32, i32* %ESI.i415
  %9866 = zext i32 %9865 to i64
  %9867 = load i64, i64* %PC.i414
  %9868 = add i64 %9867, 2
  store i64 %9868, i64* %PC.i414
  %9869 = and i64 %9866, 4294967295
  store i64 %9869, i64* %RDI.i416, align 8
  store %struct.Memory* %loadMem_43ac88, %struct.Memory** %MEMORY
  %loadMem_43ac8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9871 = getelementptr inbounds %struct.GPR, %struct.GPR* %9870, i32 0, i32 33
  %9872 = getelementptr inbounds %struct.Reg, %struct.Reg* %9871, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %9872 to i64*
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9874 = getelementptr inbounds %struct.GPR, %struct.GPR* %9873, i32 0, i32 11
  %9875 = getelementptr inbounds %struct.Reg, %struct.Reg* %9874, i32 0, i32 0
  %RDI.i413 = bitcast %union.anon* %9875 to i64*
  %9876 = load i64, i64* %RDI.i413
  %9877 = load i64, i64* %PC.i412
  %9878 = add i64 %9877, 3
  store i64 %9878, i64* %PC.i412
  %9879 = trunc i64 %9876 to i32
  %9880 = add i32 1, %9879
  %9881 = zext i32 %9880 to i64
  store i64 %9881, i64* %RDI.i413, align 8
  %9882 = icmp ult i32 %9880, %9879
  %9883 = icmp ult i32 %9880, 1
  %9884 = or i1 %9882, %9883
  %9885 = zext i1 %9884 to i8
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9885, i8* %9886, align 1
  %9887 = and i32 %9880, 255
  %9888 = call i32 @llvm.ctpop.i32(i32 %9887)
  %9889 = trunc i32 %9888 to i8
  %9890 = and i8 %9889, 1
  %9891 = xor i8 %9890, 1
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9891, i8* %9892, align 1
  %9893 = xor i64 1, %9876
  %9894 = trunc i64 %9893 to i32
  %9895 = xor i32 %9894, %9880
  %9896 = lshr i32 %9895, 4
  %9897 = trunc i32 %9896 to i8
  %9898 = and i8 %9897, 1
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9898, i8* %9899, align 1
  %9900 = icmp eq i32 %9880, 0
  %9901 = zext i1 %9900 to i8
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9901, i8* %9902, align 1
  %9903 = lshr i32 %9880, 31
  %9904 = trunc i32 %9903 to i8
  %9905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9904, i8* %9905, align 1
  %9906 = lshr i32 %9879, 31
  %9907 = xor i32 %9903, %9906
  %9908 = add i32 %9907, %9903
  %9909 = icmp eq i32 %9908, 2
  %9910 = zext i1 %9909 to i8
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9910, i8* %9911, align 1
  store %struct.Memory* %loadMem_43ac8a, %struct.Memory** %MEMORY
  %loadMem_43ac8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 33
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %9914 to i64*
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9916 = getelementptr inbounds %struct.GPR, %struct.GPR* %9915, i32 0, i32 11
  %9917 = getelementptr inbounds %struct.Reg, %struct.Reg* %9916, i32 0, i32 0
  %EDI.i410 = bitcast %union.anon* %9917 to i32*
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 7
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %RDX.i411 = bitcast %union.anon* %9920 to i64*
  %9921 = load i64, i64* %RDX.i411
  %9922 = add i64 %9921, 640
  %9923 = load i32, i32* %EDI.i410
  %9924 = zext i32 %9923 to i64
  %9925 = load i64, i64* %PC.i409
  %9926 = add i64 %9925, 6
  store i64 %9926, i64* %PC.i409
  %9927 = inttoptr i64 %9922 to i32*
  store i32 %9923, i32* %9927
  store %struct.Memory* %loadMem_43ac8d, %struct.Memory** %MEMORY
  %loadMem_43ac93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9929 = getelementptr inbounds %struct.GPR, %struct.GPR* %9928, i32 0, i32 33
  %9930 = getelementptr inbounds %struct.Reg, %struct.Reg* %9929, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %9930 to i64*
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9932 = getelementptr inbounds %struct.GPR, %struct.GPR* %9931, i32 0, i32 9
  %9933 = getelementptr inbounds %struct.Reg, %struct.Reg* %9932, i32 0, i32 0
  %ESI.i407 = bitcast %union.anon* %9933 to i32*
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9935 = getelementptr inbounds %struct.GPR, %struct.GPR* %9934, i32 0, i32 7
  %9936 = getelementptr inbounds %struct.Reg, %struct.Reg* %9935, i32 0, i32 0
  %RDX.i408 = bitcast %union.anon* %9936 to i64*
  %9937 = load i32, i32* %ESI.i407
  %9938 = zext i32 %9937 to i64
  %9939 = load i64, i64* %PC.i406
  %9940 = add i64 %9939, 3
  store i64 %9940, i64* %PC.i406
  %9941 = shl i64 %9938, 32
  %9942 = ashr exact i64 %9941, 32
  store i64 %9942, i64* %RDX.i408, align 8
  store %struct.Memory* %loadMem_43ac93, %struct.Memory** %MEMORY
  %loadMem_43ac96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 33
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %9945 to i64*
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 5
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %ECX.i403 = bitcast %union.anon* %9948 to i32*
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 1
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %9951 to i64*
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 7
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %9954 to i64*
  %9955 = load i64, i64* %RAX.i404
  %9956 = load i64, i64* %RDX.i405
  %9957 = mul i64 %9956, 4
  %9958 = add i64 %9957, %9955
  %9959 = load i32, i32* %ECX.i403
  %9960 = zext i32 %9959 to i64
  %9961 = load i64, i64* %PC.i402
  %9962 = add i64 %9961, 3
  store i64 %9962, i64* %PC.i402
  %9963 = inttoptr i64 %9958 to i32*
  store i32 %9959, i32* %9963
  store %struct.Memory* %loadMem_43ac96, %struct.Memory** %MEMORY
  br label %block_.L_43ac99

block_.L_43ac99:                                  ; preds = %block_.L_43ac64, %block_.L_43ac5f
  %loadMem_43ac99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 33
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %PC.i401
  %9968 = add i64 %9967, 5
  %9969 = load i64, i64* %PC.i401
  %9970 = add i64 %9969, 5
  store i64 %9970, i64* %PC.i401
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9968, i64* %9971, align 8
  store %struct.Memory* %loadMem_43ac99, %struct.Memory** %MEMORY
  br label %block_.L_43ac9e

block_.L_43ac9e:                                  ; preds = %block_.L_43ac99, %block_43ab0e
  %loadMem_43ac9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 33
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %9974 to i64*
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9976 = getelementptr inbounds %struct.GPR, %struct.GPR* %9975, i32 0, i32 1
  %9977 = getelementptr inbounds %struct.Reg, %struct.Reg* %9976, i32 0, i32 0
  %RAX.i399 = bitcast %union.anon* %9977 to i64*
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 15
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %RBP.i400 = bitcast %union.anon* %9980 to i64*
  %9981 = load i64, i64* %RBP.i400
  %9982 = sub i64 %9981, 400
  %9983 = load i64, i64* %PC.i398
  %9984 = add i64 %9983, 7
  store i64 %9984, i64* %PC.i398
  %9985 = inttoptr i64 %9982 to i64*
  %9986 = load i64, i64* %9985
  store i64 %9986, i64* %RAX.i399, align 8
  store %struct.Memory* %loadMem_43ac9e, %struct.Memory** %MEMORY
  %loadMem_43aca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 33
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %9989 to i64*
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 1
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %9992 to i64*
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 5
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %9995 to i64*
  %9996 = load i64, i64* %RAX.i396
  %9997 = add i64 %9996, 2
  %9998 = load i64, i64* %PC.i395
  %9999 = add i64 %9998, 4
  store i64 %9999, i64* %PC.i395
  %10000 = inttoptr i64 %9997 to i8*
  %10001 = load i8, i8* %10000
  %10002 = sext i8 %10001 to i64
  %10003 = and i64 %10002, 4294967295
  store i64 %10003, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_43aca5, %struct.Memory** %MEMORY
  %loadMem_43aca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10005 = getelementptr inbounds %struct.GPR, %struct.GPR* %10004, i32 0, i32 33
  %10006 = getelementptr inbounds %struct.Reg, %struct.Reg* %10005, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %10006 to i64*
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10008 = getelementptr inbounds %struct.GPR, %struct.GPR* %10007, i32 0, i32 5
  %10009 = getelementptr inbounds %struct.Reg, %struct.Reg* %10008, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %10009 to i64*
  %10010 = load i64, i64* %RCX.i394
  %10011 = load i64, i64* %PC.i393
  %10012 = add i64 %10011, 3
  store i64 %10012, i64* %PC.i393
  %10013 = and i64 4, %10010
  %10014 = trunc i64 %10013 to i32
  store i64 %10013, i64* %RCX.i394, align 8
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10015, align 1
  %10016 = and i32 %10014, 255
  %10017 = call i32 @llvm.ctpop.i32(i32 %10016)
  %10018 = trunc i32 %10017 to i8
  %10019 = and i8 %10018, 1
  %10020 = xor i8 %10019, 1
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10020, i8* %10021, align 1
  %10022 = icmp eq i32 %10014, 0
  %10023 = zext i1 %10022 to i8
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10023, i8* %10024, align 1
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10025, align 1
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10026, align 1
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10027, align 1
  store %struct.Memory* %loadMem_43aca9, %struct.Memory** %MEMORY
  %loadMem_43acac = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 5
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %ECX.i392 = bitcast %union.anon* %10033 to i32*
  %10034 = load i32, i32* %ECX.i392
  %10035 = zext i32 %10034 to i64
  %10036 = load i64, i64* %PC.i391
  %10037 = add i64 %10036, 3
  store i64 %10037, i64* %PC.i391
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10038, align 1
  %10039 = and i32 %10034, 255
  %10040 = call i32 @llvm.ctpop.i32(i32 %10039)
  %10041 = trunc i32 %10040 to i8
  %10042 = and i8 %10041, 1
  %10043 = xor i8 %10042, 1
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10043, i8* %10044, align 1
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10045, align 1
  %10046 = icmp eq i32 %10034, 0
  %10047 = zext i1 %10046 to i8
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10047, i8* %10048, align 1
  %10049 = lshr i32 %10034, 31
  %10050 = trunc i32 %10049 to i8
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10050, i8* %10051, align 1
  %10052 = lshr i32 %10034, 31
  %10053 = xor i32 %10049, %10052
  %10054 = add i32 %10053, %10052
  %10055 = icmp eq i32 %10054, 2
  %10056 = zext i1 %10055 to i8
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10056, i8* %10057, align 1
  store %struct.Memory* %loadMem_43acac, %struct.Memory** %MEMORY
  %loadMem_43acaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 33
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %10060 to i64*
  %10061 = load i64, i64* %PC.i390
  %10062 = add i64 %10061, 343
  %10063 = load i64, i64* %PC.i390
  %10064 = add i64 %10063, 6
  %10065 = load i64, i64* %PC.i390
  %10066 = add i64 %10065, 6
  store i64 %10066, i64* %PC.i390
  %10067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10068 = load i8, i8* %10067, align 1
  store i8 %10068, i8* %BRANCH_TAKEN, align 1
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10070 = icmp ne i8 %10068, 0
  %10071 = select i1 %10070, i64 %10062, i64 %10064
  store i64 %10071, i64* %10069, align 8
  store %struct.Memory* %loadMem_43acaf, %struct.Memory** %MEMORY
  %loadBr_43acaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acaf = icmp eq i8 %loadBr_43acaf, 1
  br i1 %cmpBr_43acaf, label %block_.L_43ae06, label %block_43acb5

block_43acb5:                                     ; preds = %block_.L_43ac9e
  %loadMem_43acb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 33
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 1
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %10077 to i64*
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10079 = getelementptr inbounds %struct.GPR, %struct.GPR* %10078, i32 0, i32 15
  %10080 = getelementptr inbounds %struct.Reg, %struct.Reg* %10079, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %10080 to i64*
  %10081 = load i64, i64* %RBP.i389
  %10082 = sub i64 %10081, 400
  %10083 = load i64, i64* %PC.i387
  %10084 = add i64 %10083, 7
  store i64 %10084, i64* %PC.i387
  %10085 = inttoptr i64 %10082 to i64*
  %10086 = load i64, i64* %10085
  store i64 %10086, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_43acb5, %struct.Memory** %MEMORY
  %loadMem_43acbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 33
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %10089 to i64*
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 1
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 5
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %RCX.i386 = bitcast %union.anon* %10095 to i64*
  %10096 = load i64, i64* %RAX.i385
  %10097 = load i64, i64* %PC.i384
  %10098 = add i64 %10097, 3
  store i64 %10098, i64* %PC.i384
  %10099 = inttoptr i64 %10096 to i8*
  %10100 = load i8, i8* %10099
  %10101 = sext i8 %10100 to i64
  %10102 = and i64 %10101, 4294967295
  store i64 %10102, i64* %RCX.i386, align 8
  store %struct.Memory* %loadMem_43acbc, %struct.Memory** %MEMORY
  %loadMem_43acbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 33
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %10105 to i64*
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 5
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %10108 to i32*
  %10109 = load i32, i32* %ECX.i383
  %10110 = zext i32 %10109 to i64
  %10111 = load i64, i64* %PC.i382
  %10112 = add i64 %10111, 3
  store i64 %10112, i64* %PC.i382
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10113, align 1
  %10114 = and i32 %10109, 255
  %10115 = call i32 @llvm.ctpop.i32(i32 %10114)
  %10116 = trunc i32 %10115 to i8
  %10117 = and i8 %10116, 1
  %10118 = xor i8 %10117, 1
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10118, i8* %10119, align 1
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10120, align 1
  %10121 = icmp eq i32 %10109, 0
  %10122 = zext i1 %10121 to i8
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10122, i8* %10123, align 1
  %10124 = lshr i32 %10109, 31
  %10125 = trunc i32 %10124 to i8
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10125, i8* %10126, align 1
  %10127 = lshr i32 %10109, 31
  %10128 = xor i32 %10124, %10127
  %10129 = add i32 %10128, %10127
  %10130 = icmp eq i32 %10129, 2
  %10131 = zext i1 %10130 to i8
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10131, i8* %10132, align 1
  store %struct.Memory* %loadMem_43acbf, %struct.Memory** %MEMORY
  %loadMem_43acc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10134 = getelementptr inbounds %struct.GPR, %struct.GPR* %10133, i32 0, i32 33
  %10135 = getelementptr inbounds %struct.Reg, %struct.Reg* %10134, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %10135 to i64*
  %10136 = load i64, i64* %PC.i381
  %10137 = add i64 %10136, 262
  %10138 = load i64, i64* %PC.i381
  %10139 = add i64 %10138, 6
  %10140 = load i64, i64* %PC.i381
  %10141 = add i64 %10140, 6
  store i64 %10141, i64* %PC.i381
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10143 = load i8, i8* %10142, align 1
  store i8 %10143, i8* %BRANCH_TAKEN, align 1
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10145 = icmp ne i8 %10143, 0
  %10146 = select i1 %10145, i64 %10137, i64 %10139
  store i64 %10146, i64* %10144, align 8
  store %struct.Memory* %loadMem_43acc2, %struct.Memory** %MEMORY
  %loadBr_43acc2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acc2 = icmp eq i8 %loadBr_43acc2, 1
  br i1 %cmpBr_43acc2, label %block_.L_43adc8, label %block_43acc8

block_43acc8:                                     ; preds = %block_43acb5
  %loadMem_43acc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 33
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 1
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %10152 to i64*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10154 = getelementptr inbounds %struct.GPR, %struct.GPR* %10153, i32 0, i32 15
  %10155 = getelementptr inbounds %struct.Reg, %struct.Reg* %10154, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %10155 to i64*
  %10156 = load i64, i64* %RBP.i380
  %10157 = sub i64 %10156, 388
  %10158 = load i64, i64* %PC.i378
  %10159 = add i64 %10158, 7
  store i64 %10159, i64* %PC.i378
  %10160 = inttoptr i64 %10157 to i32*
  %10161 = load i32, i32* %10160
  %10162 = sext i32 %10161 to i64
  store i64 %10162, i64* %RAX.i379, align 8
  store %struct.Memory* %loadMem_43acc8, %struct.Memory** %MEMORY
  %loadMem_43accf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10164 = getelementptr inbounds %struct.GPR, %struct.GPR* %10163, i32 0, i32 33
  %10165 = getelementptr inbounds %struct.Reg, %struct.Reg* %10164, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %10165 to i64*
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 1
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %10168 to i64*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10170 = getelementptr inbounds %struct.GPR, %struct.GPR* %10169, i32 0, i32 15
  %10171 = getelementptr inbounds %struct.Reg, %struct.Reg* %10170, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %10171 to i64*
  %10172 = load i64, i64* %RBP.i377
  %10173 = load i64, i64* %RAX.i376
  %10174 = mul i64 %10173, 4
  %10175 = add i64 %10172, -352
  %10176 = add i64 %10175, %10174
  %10177 = load i64, i64* %PC.i375
  %10178 = add i64 %10177, 8
  store i64 %10178, i64* %PC.i375
  %10179 = inttoptr i64 %10176 to i32*
  %10180 = load i32, i32* %10179
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10181, align 1
  %10182 = and i32 %10180, 255
  %10183 = call i32 @llvm.ctpop.i32(i32 %10182)
  %10184 = trunc i32 %10183 to i8
  %10185 = and i8 %10184, 1
  %10186 = xor i8 %10185, 1
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10186, i8* %10187, align 1
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10188, align 1
  %10189 = icmp eq i32 %10180, 0
  %10190 = zext i1 %10189 to i8
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10190, i8* %10191, align 1
  %10192 = lshr i32 %10180, 31
  %10193 = trunc i32 %10192 to i8
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10193, i8* %10194, align 1
  %10195 = lshr i32 %10180, 31
  %10196 = xor i32 %10192, %10195
  %10197 = add i32 %10196, %10195
  %10198 = icmp eq i32 %10197, 2
  %10199 = zext i1 %10198 to i8
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10199, i8* %10200, align 1
  store %struct.Memory* %loadMem_43accf, %struct.Memory** %MEMORY
  %loadMem_43acd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10202 = getelementptr inbounds %struct.GPR, %struct.GPR* %10201, i32 0, i32 33
  %10203 = getelementptr inbounds %struct.Reg, %struct.Reg* %10202, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %10203 to i64*
  %10204 = load i64, i64* %PC.i374
  %10205 = add i64 %10204, 241
  %10206 = load i64, i64* %PC.i374
  %10207 = add i64 %10206, 6
  %10208 = load i64, i64* %PC.i374
  %10209 = add i64 %10208, 6
  store i64 %10209, i64* %PC.i374
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10211 = load i8, i8* %10210, align 1
  %10212 = icmp ne i8 %10211, 0
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10214 = load i8, i8* %10213, align 1
  %10215 = icmp ne i8 %10214, 0
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10217 = load i8, i8* %10216, align 1
  %10218 = icmp ne i8 %10217, 0
  %10219 = xor i1 %10215, %10218
  %10220 = or i1 %10212, %10219
  %10221 = zext i1 %10220 to i8
  store i8 %10221, i8* %BRANCH_TAKEN, align 1
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10223 = select i1 %10220, i64 %10205, i64 %10207
  store i64 %10223, i64* %10222, align 8
  store %struct.Memory* %loadMem_43acd7, %struct.Memory** %MEMORY
  %loadBr_43acd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acd7 = icmp eq i8 %loadBr_43acd7, 1
  br i1 %cmpBr_43acd7, label %block_.L_43adc8, label %block_43acdd

block_43acdd:                                     ; preds = %block_43acc8
  %loadMem_43acdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10225 = getelementptr inbounds %struct.GPR, %struct.GPR* %10224, i32 0, i32 33
  %10226 = getelementptr inbounds %struct.Reg, %struct.Reg* %10225, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %10226 to i64*
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10228 = getelementptr inbounds %struct.GPR, %struct.GPR* %10227, i32 0, i32 1
  %10229 = getelementptr inbounds %struct.Reg, %struct.Reg* %10228, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %10229 to i64*
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10231 = getelementptr inbounds %struct.GPR, %struct.GPR* %10230, i32 0, i32 15
  %10232 = getelementptr inbounds %struct.Reg, %struct.Reg* %10231, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %10232 to i64*
  %10233 = load i64, i64* %RBP.i373
  %10234 = sub i64 %10233, 388
  %10235 = load i64, i64* %PC.i371
  %10236 = add i64 %10235, 7
  store i64 %10236, i64* %PC.i371
  %10237 = inttoptr i64 %10234 to i32*
  %10238 = load i32, i32* %10237
  %10239 = sext i32 %10238 to i64
  store i64 %10239, i64* %RAX.i372, align 8
  store %struct.Memory* %loadMem_43acdd, %struct.Memory** %MEMORY
  %loadMem_43ace4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10241 = getelementptr inbounds %struct.GPR, %struct.GPR* %10240, i32 0, i32 33
  %10242 = getelementptr inbounds %struct.Reg, %struct.Reg* %10241, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %10242 to i64*
  %10243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10244 = getelementptr inbounds %struct.GPR, %struct.GPR* %10243, i32 0, i32 1
  %10245 = getelementptr inbounds %struct.Reg, %struct.Reg* %10244, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %10245 to i64*
  %10246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10247 = getelementptr inbounds %struct.GPR, %struct.GPR* %10246, i32 0, i32 5
  %10248 = getelementptr inbounds %struct.Reg, %struct.Reg* %10247, i32 0, i32 0
  %RCX.i369 = bitcast %union.anon* %10248 to i64*
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10250 = getelementptr inbounds %struct.GPR, %struct.GPR* %10249, i32 0, i32 15
  %10251 = getelementptr inbounds %struct.Reg, %struct.Reg* %10250, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %10251 to i64*
  %10252 = load i64, i64* %RBP.i370
  %10253 = load i64, i64* %RAX.i368
  %10254 = mul i64 %10253, 4
  %10255 = add i64 %10252, -352
  %10256 = add i64 %10255, %10254
  %10257 = load i64, i64* %PC.i367
  %10258 = add i64 %10257, 7
  store i64 %10258, i64* %PC.i367
  %10259 = inttoptr i64 %10256 to i32*
  %10260 = load i32, i32* %10259
  %10261 = zext i32 %10260 to i64
  store i64 %10261, i64* %RCX.i369, align 8
  store %struct.Memory* %loadMem_43ace4, %struct.Memory** %MEMORY
  %loadMem_43aceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 33
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %10264 to i64*
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10266 = getelementptr inbounds %struct.GPR, %struct.GPR* %10265, i32 0, i32 5
  %10267 = getelementptr inbounds %struct.Reg, %struct.Reg* %10266, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %10267 to i64*
  %10268 = load i64, i64* %RCX.i366
  %10269 = load i64, i64* %PC.i365
  %10270 = add i64 %10269, 3
  store i64 %10270, i64* %PC.i365
  %10271 = trunc i64 %10268 to i32
  %10272 = sub i32 %10271, 1
  %10273 = zext i32 %10272 to i64
  store i64 %10273, i64* %RCX.i366, align 8
  %10274 = icmp ult i32 %10271, 1
  %10275 = zext i1 %10274 to i8
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10275, i8* %10276, align 1
  %10277 = and i32 %10272, 255
  %10278 = call i32 @llvm.ctpop.i32(i32 %10277)
  %10279 = trunc i32 %10278 to i8
  %10280 = and i8 %10279, 1
  %10281 = xor i8 %10280, 1
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10281, i8* %10282, align 1
  %10283 = xor i64 1, %10268
  %10284 = trunc i64 %10283 to i32
  %10285 = xor i32 %10284, %10272
  %10286 = lshr i32 %10285, 4
  %10287 = trunc i32 %10286 to i8
  %10288 = and i8 %10287, 1
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10288, i8* %10289, align 1
  %10290 = icmp eq i32 %10272, 0
  %10291 = zext i1 %10290 to i8
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10291, i8* %10292, align 1
  %10293 = lshr i32 %10272, 31
  %10294 = trunc i32 %10293 to i8
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10294, i8* %10295, align 1
  %10296 = lshr i32 %10271, 31
  %10297 = xor i32 %10293, %10296
  %10298 = add i32 %10297, %10296
  %10299 = icmp eq i32 %10298, 2
  %10300 = zext i1 %10299 to i8
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10300, i8* %10301, align 1
  store %struct.Memory* %loadMem_43aceb, %struct.Memory** %MEMORY
  %loadMem_43acee = load %struct.Memory*, %struct.Memory** %MEMORY
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10303 = getelementptr inbounds %struct.GPR, %struct.GPR* %10302, i32 0, i32 33
  %10304 = getelementptr inbounds %struct.Reg, %struct.Reg* %10303, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %10304 to i64*
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10306 = getelementptr inbounds %struct.GPR, %struct.GPR* %10305, i32 0, i32 5
  %10307 = getelementptr inbounds %struct.Reg, %struct.Reg* %10306, i32 0, i32 0
  %ECX.i363 = bitcast %union.anon* %10307 to i32*
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 1
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %RAX.i364 = bitcast %union.anon* %10310 to i64*
  %10311 = load i32, i32* %ECX.i363
  %10312 = zext i32 %10311 to i64
  %10313 = load i64, i64* %PC.i362
  %10314 = add i64 %10313, 3
  store i64 %10314, i64* %PC.i362
  %10315 = shl i64 %10312, 32
  %10316 = ashr exact i64 %10315, 32
  store i64 %10316, i64* %RAX.i364, align 8
  store %struct.Memory* %loadMem_43acee, %struct.Memory** %MEMORY
  %loadMem_43acf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10318 = getelementptr inbounds %struct.GPR, %struct.GPR* %10317, i32 0, i32 33
  %10319 = getelementptr inbounds %struct.Reg, %struct.Reg* %10318, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %10319 to i64*
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10321 = getelementptr inbounds %struct.GPR, %struct.GPR* %10320, i32 0, i32 1
  %10322 = getelementptr inbounds %struct.Reg, %struct.Reg* %10321, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %10322 to i64*
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10324 = getelementptr inbounds %struct.GPR, %struct.GPR* %10323, i32 0, i32 15
  %10325 = getelementptr inbounds %struct.Reg, %struct.Reg* %10324, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %10325 to i64*
  %10326 = load i64, i64* %RBP.i361
  %10327 = load i64, i64* %RAX.i360
  %10328 = mul i64 %10327, 4
  %10329 = add i64 %10326, -160
  %10330 = add i64 %10329, %10328
  %10331 = load i64, i64* %PC.i359
  %10332 = add i64 %10331, 8
  store i64 %10332, i64* %PC.i359
  %10333 = inttoptr i64 %10330 to i32*
  %10334 = load i32, i32* %10333
  %10335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10335, align 1
  %10336 = and i32 %10334, 255
  %10337 = call i32 @llvm.ctpop.i32(i32 %10336)
  %10338 = trunc i32 %10337 to i8
  %10339 = and i8 %10338, 1
  %10340 = xor i8 %10339, 1
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10340, i8* %10341, align 1
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10342, align 1
  %10343 = icmp eq i32 %10334, 0
  %10344 = zext i1 %10343 to i8
  %10345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10344, i8* %10345, align 1
  %10346 = lshr i32 %10334, 31
  %10347 = trunc i32 %10346 to i8
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10347, i8* %10348, align 1
  %10349 = lshr i32 %10334, 31
  %10350 = xor i32 %10346, %10349
  %10351 = add i32 %10350, %10349
  %10352 = icmp eq i32 %10351, 2
  %10353 = zext i1 %10352 to i8
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10353, i8* %10354, align 1
  store %struct.Memory* %loadMem_43acf1, %struct.Memory** %MEMORY
  %loadMem_43acf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10356 = getelementptr inbounds %struct.GPR, %struct.GPR* %10355, i32 0, i32 33
  %10357 = getelementptr inbounds %struct.Reg, %struct.Reg* %10356, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %10357 to i64*
  %10358 = load i64, i64* %PC.i358
  %10359 = add i64 %10358, 207
  %10360 = load i64, i64* %PC.i358
  %10361 = add i64 %10360, 6
  %10362 = load i64, i64* %PC.i358
  %10363 = add i64 %10362, 6
  store i64 %10363, i64* %PC.i358
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10365 = load i8, i8* %10364, align 1
  store i8 %10365, i8* %BRANCH_TAKEN, align 1
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10367 = icmp ne i8 %10365, 0
  %10368 = select i1 %10367, i64 %10359, i64 %10361
  store i64 %10368, i64* %10366, align 8
  store %struct.Memory* %loadMem_43acf9, %struct.Memory** %MEMORY
  %loadBr_43acf9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acf9 = icmp eq i8 %loadBr_43acf9, 1
  br i1 %cmpBr_43acf9, label %block_.L_43adc8, label %block_43acff

block_43acff:                                     ; preds = %block_43acdd
  %loadMem_43acff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10370 = getelementptr inbounds %struct.GPR, %struct.GPR* %10369, i32 0, i32 33
  %10371 = getelementptr inbounds %struct.Reg, %struct.Reg* %10370, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %10371 to i64*
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10373 = getelementptr inbounds %struct.GPR, %struct.GPR* %10372, i32 0, i32 11
  %10374 = getelementptr inbounds %struct.Reg, %struct.Reg* %10373, i32 0, i32 0
  %RDI.i356 = bitcast %union.anon* %10374 to i64*
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10376 = getelementptr inbounds %struct.GPR, %struct.GPR* %10375, i32 0, i32 15
  %10377 = getelementptr inbounds %struct.Reg, %struct.Reg* %10376, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %10377 to i64*
  %10378 = load i64, i64* %RBP.i357
  %10379 = sub i64 %10378, 48
  %10380 = load i64, i64* %PC.i355
  %10381 = add i64 %10380, 4
  store i64 %10381, i64* %PC.i355
  %10382 = inttoptr i64 %10379 to i64*
  %10383 = load i64, i64* %10382
  store i64 %10383, i64* %RDI.i356, align 8
  store %struct.Memory* %loadMem_43acff, %struct.Memory** %MEMORY
  %loadMem_43ad03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10385 = getelementptr inbounds %struct.GPR, %struct.GPR* %10384, i32 0, i32 33
  %10386 = getelementptr inbounds %struct.Reg, %struct.Reg* %10385, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %10386 to i64*
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 1
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %10389 to i64*
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10391 = getelementptr inbounds %struct.GPR, %struct.GPR* %10390, i32 0, i32 15
  %10392 = getelementptr inbounds %struct.Reg, %struct.Reg* %10391, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %10392 to i64*
  %10393 = load i64, i64* %RBP.i354
  %10394 = sub i64 %10393, 388
  %10395 = load i64, i64* %PC.i352
  %10396 = add i64 %10395, 7
  store i64 %10396, i64* %PC.i352
  %10397 = inttoptr i64 %10394 to i32*
  %10398 = load i32, i32* %10397
  %10399 = sext i32 %10398 to i64
  store i64 %10399, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_43ad03, %struct.Memory** %MEMORY
  %loadMem_43ad0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10401 = getelementptr inbounds %struct.GPR, %struct.GPR* %10400, i32 0, i32 33
  %10402 = getelementptr inbounds %struct.Reg, %struct.Reg* %10401, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %10402 to i64*
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10404 = getelementptr inbounds %struct.GPR, %struct.GPR* %10403, i32 0, i32 1
  %10405 = getelementptr inbounds %struct.Reg, %struct.Reg* %10404, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %10405 to i64*
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10407 = getelementptr inbounds %struct.GPR, %struct.GPR* %10406, i32 0, i32 5
  %10408 = getelementptr inbounds %struct.Reg, %struct.Reg* %10407, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %10408 to i64*
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 15
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %10411 to i64*
  %10412 = load i64, i64* %RBP.i351
  %10413 = load i64, i64* %RAX.i349
  %10414 = mul i64 %10413, 4
  %10415 = add i64 %10412, -352
  %10416 = add i64 %10415, %10414
  %10417 = load i64, i64* %PC.i348
  %10418 = add i64 %10417, 7
  store i64 %10418, i64* %PC.i348
  %10419 = inttoptr i64 %10416 to i32*
  %10420 = load i32, i32* %10419
  %10421 = zext i32 %10420 to i64
  store i64 %10421, i64* %RCX.i350, align 8
  store %struct.Memory* %loadMem_43ad0a, %struct.Memory** %MEMORY
  %loadMem_43ad11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10423 = getelementptr inbounds %struct.GPR, %struct.GPR* %10422, i32 0, i32 33
  %10424 = getelementptr inbounds %struct.Reg, %struct.Reg* %10423, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %10424 to i64*
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 5
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %RCX.i347 = bitcast %union.anon* %10427 to i64*
  %10428 = load i64, i64* %RCX.i347
  %10429 = load i64, i64* %PC.i346
  %10430 = add i64 %10429, 3
  store i64 %10430, i64* %PC.i346
  %10431 = trunc i64 %10428 to i32
  %10432 = sub i32 %10431, 1
  %10433 = zext i32 %10432 to i64
  store i64 %10433, i64* %RCX.i347, align 8
  %10434 = icmp ult i32 %10431, 1
  %10435 = zext i1 %10434 to i8
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10435, i8* %10436, align 1
  %10437 = and i32 %10432, 255
  %10438 = call i32 @llvm.ctpop.i32(i32 %10437)
  %10439 = trunc i32 %10438 to i8
  %10440 = and i8 %10439, 1
  %10441 = xor i8 %10440, 1
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10441, i8* %10442, align 1
  %10443 = xor i64 1, %10428
  %10444 = trunc i64 %10443 to i32
  %10445 = xor i32 %10444, %10432
  %10446 = lshr i32 %10445, 4
  %10447 = trunc i32 %10446 to i8
  %10448 = and i8 %10447, 1
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10448, i8* %10449, align 1
  %10450 = icmp eq i32 %10432, 0
  %10451 = zext i1 %10450 to i8
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10451, i8* %10452, align 1
  %10453 = lshr i32 %10432, 31
  %10454 = trunc i32 %10453 to i8
  %10455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10454, i8* %10455, align 1
  %10456 = lshr i32 %10431, 31
  %10457 = xor i32 %10453, %10456
  %10458 = add i32 %10457, %10456
  %10459 = icmp eq i32 %10458, 2
  %10460 = zext i1 %10459 to i8
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10460, i8* %10461, align 1
  store %struct.Memory* %loadMem_43ad11, %struct.Memory** %MEMORY
  %loadMem_43ad14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 33
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %10464 to i64*
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 5
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %ECX.i344 = bitcast %union.anon* %10467 to i32*
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 1
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %10470 to i64*
  %10471 = load i32, i32* %ECX.i344
  %10472 = zext i32 %10471 to i64
  %10473 = load i64, i64* %PC.i343
  %10474 = add i64 %10473, 3
  store i64 %10474, i64* %PC.i343
  %10475 = shl i64 %10472, 32
  %10476 = ashr exact i64 %10475, 32
  store i64 %10476, i64* %RAX.i345, align 8
  store %struct.Memory* %loadMem_43ad14, %struct.Memory** %MEMORY
  %loadMem_43ad17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10478 = getelementptr inbounds %struct.GPR, %struct.GPR* %10477, i32 0, i32 33
  %10479 = getelementptr inbounds %struct.Reg, %struct.Reg* %10478, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %10479 to i64*
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 1
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %10482 to i64*
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 9
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %RSI.i341 = bitcast %union.anon* %10485 to i64*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 15
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %10488 to i64*
  %10489 = load i64, i64* %RBP.i342
  %10490 = load i64, i64* %RAX.i340
  %10491 = mul i64 %10490, 4
  %10492 = add i64 %10489, -160
  %10493 = add i64 %10492, %10491
  %10494 = load i64, i64* %PC.i339
  %10495 = add i64 %10494, 7
  store i64 %10495, i64* %PC.i339
  %10496 = inttoptr i64 %10493 to i32*
  %10497 = load i32, i32* %10496
  %10498 = zext i32 %10497 to i64
  store i64 %10498, i64* %RSI.i341, align 8
  store %struct.Memory* %loadMem_43ad17, %struct.Memory** %MEMORY
  %loadMem1_43ad1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 33
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %10501 to i64*
  %10502 = load i64, i64* %PC.i338
  %10503 = add i64 %10502, 786
  %10504 = load i64, i64* %PC.i338
  %10505 = add i64 %10504, 5
  %10506 = load i64, i64* %PC.i338
  %10507 = add i64 %10506, 5
  store i64 %10507, i64* %PC.i338
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10509 = load i64, i64* %10508, align 8
  %10510 = add i64 %10509, -8
  %10511 = inttoptr i64 %10510 to i64*
  store i64 %10505, i64* %10511
  store i64 %10510, i64* %10508, align 8
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10503, i64* %10512, align 8
  store %struct.Memory* %loadMem1_43ad1e, %struct.Memory** %MEMORY
  %loadMem2_43ad1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad1e = load i64, i64* %3
  %call2_43ad1e = call %struct.Memory* @sub_43b030.is_halfeye(%struct.State* %0, i64 %loadPC_43ad1e, %struct.Memory* %loadMem2_43ad1e)
  store %struct.Memory* %call2_43ad1e, %struct.Memory** %MEMORY
  %loadMem_43ad23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 33
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %10515 to i64*
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 1
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %EAX.i337 = bitcast %union.anon* %10518 to i32*
  %10519 = load i32, i32* %EAX.i337
  %10520 = zext i32 %10519 to i64
  %10521 = load i64, i64* %PC.i336
  %10522 = add i64 %10521, 3
  store i64 %10522, i64* %PC.i336
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10523, align 1
  %10524 = and i32 %10519, 255
  %10525 = call i32 @llvm.ctpop.i32(i32 %10524)
  %10526 = trunc i32 %10525 to i8
  %10527 = and i8 %10526, 1
  %10528 = xor i8 %10527, 1
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10528, i8* %10529, align 1
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10530, align 1
  %10531 = icmp eq i32 %10519, 0
  %10532 = zext i1 %10531 to i8
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10532, i8* %10533, align 1
  %10534 = lshr i32 %10519, 31
  %10535 = trunc i32 %10534 to i8
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10535, i8* %10536, align 1
  %10537 = lshr i32 %10519, 31
  %10538 = xor i32 %10534, %10537
  %10539 = add i32 %10538, %10537
  %10540 = icmp eq i32 %10539, 2
  %10541 = zext i1 %10540 to i8
  %10542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10541, i8* %10542, align 1
  store %struct.Memory* %loadMem_43ad23, %struct.Memory** %MEMORY
  %loadMem_43ad26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 33
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %10545 to i64*
  %10546 = load i64, i64* %PC.i335
  %10547 = add i64 %10546, 162
  %10548 = load i64, i64* %PC.i335
  %10549 = add i64 %10548, 6
  %10550 = load i64, i64* %PC.i335
  %10551 = add i64 %10550, 6
  store i64 %10551, i64* %PC.i335
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10553 = load i8, i8* %10552, align 1
  store i8 %10553, i8* %BRANCH_TAKEN, align 1
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10555 = icmp ne i8 %10553, 0
  %10556 = select i1 %10555, i64 %10547, i64 %10549
  store i64 %10556, i64* %10554, align 8
  store %struct.Memory* %loadMem_43ad26, %struct.Memory** %MEMORY
  %loadBr_43ad26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad26 = icmp eq i8 %loadBr_43ad26, 1
  br i1 %cmpBr_43ad26, label %block_.L_43adc8, label %block_43ad2c

block_43ad2c:                                     ; preds = %block_43acff
  %loadMem_43ad2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 33
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 1
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %10562 to i64*
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10564 = getelementptr inbounds %struct.GPR, %struct.GPR* %10563, i32 0, i32 15
  %10565 = getelementptr inbounds %struct.Reg, %struct.Reg* %10564, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %10565 to i64*
  %10566 = load i64, i64* %RBP.i334
  %10567 = sub i64 %10566, 48
  %10568 = load i64, i64* %PC.i332
  %10569 = add i64 %10568, 4
  store i64 %10569, i64* %PC.i332
  %10570 = inttoptr i64 %10567 to i64*
  %10571 = load i64, i64* %10570
  store i64 %10571, i64* %RAX.i333, align 8
  store %struct.Memory* %loadMem_43ad2c, %struct.Memory** %MEMORY
  %loadMem_43ad30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10573 = getelementptr inbounds %struct.GPR, %struct.GPR* %10572, i32 0, i32 33
  %10574 = getelementptr inbounds %struct.Reg, %struct.Reg* %10573, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %10574 to i64*
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10576 = getelementptr inbounds %struct.GPR, %struct.GPR* %10575, i32 0, i32 5
  %10577 = getelementptr inbounds %struct.Reg, %struct.Reg* %10576, i32 0, i32 0
  %RCX.i330 = bitcast %union.anon* %10577 to i64*
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10579 = getelementptr inbounds %struct.GPR, %struct.GPR* %10578, i32 0, i32 15
  %10580 = getelementptr inbounds %struct.Reg, %struct.Reg* %10579, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %10580 to i64*
  %10581 = load i64, i64* %RBP.i331
  %10582 = sub i64 %10581, 388
  %10583 = load i64, i64* %PC.i329
  %10584 = add i64 %10583, 7
  store i64 %10584, i64* %PC.i329
  %10585 = inttoptr i64 %10582 to i32*
  %10586 = load i32, i32* %10585
  %10587 = sext i32 %10586 to i64
  store i64 %10587, i64* %RCX.i330, align 8
  store %struct.Memory* %loadMem_43ad30, %struct.Memory** %MEMORY
  %loadMem_43ad37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10589 = getelementptr inbounds %struct.GPR, %struct.GPR* %10588, i32 0, i32 33
  %10590 = getelementptr inbounds %struct.Reg, %struct.Reg* %10589, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %10590 to i64*
  %10591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10592 = getelementptr inbounds %struct.GPR, %struct.GPR* %10591, i32 0, i32 5
  %10593 = getelementptr inbounds %struct.Reg, %struct.Reg* %10592, i32 0, i32 0
  %RCX.i326 = bitcast %union.anon* %10593 to i64*
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10595 = getelementptr inbounds %struct.GPR, %struct.GPR* %10594, i32 0, i32 7
  %10596 = getelementptr inbounds %struct.Reg, %struct.Reg* %10595, i32 0, i32 0
  %RDX.i327 = bitcast %union.anon* %10596 to i64*
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10598 = getelementptr inbounds %struct.GPR, %struct.GPR* %10597, i32 0, i32 15
  %10599 = getelementptr inbounds %struct.Reg, %struct.Reg* %10598, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %10599 to i64*
  %10600 = load i64, i64* %RBP.i328
  %10601 = load i64, i64* %RCX.i326
  %10602 = mul i64 %10601, 4
  %10603 = add i64 %10600, -352
  %10604 = add i64 %10603, %10602
  %10605 = load i64, i64* %PC.i325
  %10606 = add i64 %10605, 7
  store i64 %10606, i64* %PC.i325
  %10607 = inttoptr i64 %10604 to i32*
  %10608 = load i32, i32* %10607
  %10609 = zext i32 %10608 to i64
  store i64 %10609, i64* %RDX.i327, align 8
  store %struct.Memory* %loadMem_43ad37, %struct.Memory** %MEMORY
  %loadMem_43ad3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %10612 to i64*
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 7
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %RDX.i324 = bitcast %union.anon* %10615 to i64*
  %10616 = load i64, i64* %RDX.i324
  %10617 = load i64, i64* %PC.i323
  %10618 = add i64 %10617, 3
  store i64 %10618, i64* %PC.i323
  %10619 = trunc i64 %10616 to i32
  %10620 = sub i32 %10619, 1
  %10621 = zext i32 %10620 to i64
  store i64 %10621, i64* %RDX.i324, align 8
  %10622 = icmp ult i32 %10619, 1
  %10623 = zext i1 %10622 to i8
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10623, i8* %10624, align 1
  %10625 = and i32 %10620, 255
  %10626 = call i32 @llvm.ctpop.i32(i32 %10625)
  %10627 = trunc i32 %10626 to i8
  %10628 = and i8 %10627, 1
  %10629 = xor i8 %10628, 1
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10629, i8* %10630, align 1
  %10631 = xor i64 1, %10616
  %10632 = trunc i64 %10631 to i32
  %10633 = xor i32 %10632, %10620
  %10634 = lshr i32 %10633, 4
  %10635 = trunc i32 %10634 to i8
  %10636 = and i8 %10635, 1
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10636, i8* %10637, align 1
  %10638 = icmp eq i32 %10620, 0
  %10639 = zext i1 %10638 to i8
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10639, i8* %10640, align 1
  %10641 = lshr i32 %10620, 31
  %10642 = trunc i32 %10641 to i8
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10642, i8* %10643, align 1
  %10644 = lshr i32 %10619, 31
  %10645 = xor i32 %10641, %10644
  %10646 = add i32 %10645, %10644
  %10647 = icmp eq i32 %10646, 2
  %10648 = zext i1 %10647 to i8
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10648, i8* %10649, align 1
  store %struct.Memory* %loadMem_43ad3e, %struct.Memory** %MEMORY
  %loadMem_43ad41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 33
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %10652 to i64*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10654 = getelementptr inbounds %struct.GPR, %struct.GPR* %10653, i32 0, i32 7
  %10655 = getelementptr inbounds %struct.Reg, %struct.Reg* %10654, i32 0, i32 0
  %EDX.i321 = bitcast %union.anon* %10655 to i32*
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10657 = getelementptr inbounds %struct.GPR, %struct.GPR* %10656, i32 0, i32 5
  %10658 = getelementptr inbounds %struct.Reg, %struct.Reg* %10657, i32 0, i32 0
  %RCX.i322 = bitcast %union.anon* %10658 to i64*
  %10659 = load i32, i32* %EDX.i321
  %10660 = zext i32 %10659 to i64
  %10661 = load i64, i64* %PC.i320
  %10662 = add i64 %10661, 3
  store i64 %10662, i64* %PC.i320
  %10663 = shl i64 %10660, 32
  %10664 = ashr exact i64 %10663, 32
  store i64 %10664, i64* %RCX.i322, align 8
  store %struct.Memory* %loadMem_43ad41, %struct.Memory** %MEMORY
  %loadMem_43ad44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10666 = getelementptr inbounds %struct.GPR, %struct.GPR* %10665, i32 0, i32 33
  %10667 = getelementptr inbounds %struct.Reg, %struct.Reg* %10666, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %10667 to i64*
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10669 = getelementptr inbounds %struct.GPR, %struct.GPR* %10668, i32 0, i32 5
  %10670 = getelementptr inbounds %struct.Reg, %struct.Reg* %10669, i32 0, i32 0
  %RCX.i318 = bitcast %union.anon* %10670 to i64*
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 15
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %10673 to i64*
  %10674 = load i64, i64* %RBP.i319
  %10675 = load i64, i64* %RCX.i318
  %10676 = mul i64 %10675, 4
  %10677 = add i64 %10674, -160
  %10678 = add i64 %10677, %10676
  %10679 = load i64, i64* %PC.i317
  %10680 = add i64 %10679, 8
  store i64 %10680, i64* %PC.i317
  %10681 = inttoptr i64 %10678 to i32*
  %10682 = load i32, i32* %10681
  %10683 = sext i32 %10682 to i64
  store i64 %10683, i64* %RCX.i318, align 8
  store %struct.Memory* %loadMem_43ad44, %struct.Memory** %MEMORY
  %loadMem_43ad4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10685 = getelementptr inbounds %struct.GPR, %struct.GPR* %10684, i32 0, i32 33
  %10686 = getelementptr inbounds %struct.Reg, %struct.Reg* %10685, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %10686 to i64*
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10688 = getelementptr inbounds %struct.GPR, %struct.GPR* %10687, i32 0, i32 5
  %10689 = getelementptr inbounds %struct.Reg, %struct.Reg* %10688, i32 0, i32 0
  %RCX.i316 = bitcast %union.anon* %10689 to i64*
  %10690 = load i64, i64* %RCX.i316
  %10691 = load i64, i64* %PC.i315
  %10692 = add i64 %10691, 4
  store i64 %10692, i64* %PC.i315
  %10693 = sext i64 %10690 to i128
  %10694 = and i128 %10693, -18446744073709551616
  %10695 = zext i64 %10690 to i128
  %10696 = or i128 %10694, %10695
  %10697 = mul i128 48, %10696
  %10698 = trunc i128 %10697 to i64
  store i64 %10698, i64* %RCX.i316, align 8
  %10699 = sext i64 %10698 to i128
  %10700 = icmp ne i128 %10699, %10697
  %10701 = zext i1 %10700 to i8
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10701, i8* %10702, align 1
  %10703 = trunc i128 %10697 to i32
  %10704 = and i32 %10703, 255
  %10705 = call i32 @llvm.ctpop.i32(i32 %10704)
  %10706 = trunc i32 %10705 to i8
  %10707 = and i8 %10706, 1
  %10708 = xor i8 %10707, 1
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10708, i8* %10709, align 1
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10710, align 1
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10711, align 1
  %10712 = lshr i64 %10698, 63
  %10713 = trunc i64 %10712 to i8
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10713, i8* %10714, align 1
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10701, i8* %10715, align 1
  store %struct.Memory* %loadMem_43ad4c, %struct.Memory** %MEMORY
  %loadMem_43ad50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10717 = getelementptr inbounds %struct.GPR, %struct.GPR* %10716, i32 0, i32 33
  %10718 = getelementptr inbounds %struct.Reg, %struct.Reg* %10717, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %10718 to i64*
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10720 = getelementptr inbounds %struct.GPR, %struct.GPR* %10719, i32 0, i32 1
  %10721 = getelementptr inbounds %struct.Reg, %struct.Reg* %10720, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %10721 to i64*
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 5
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %10724 to i64*
  %10725 = load i64, i64* %RAX.i313
  %10726 = load i64, i64* %RCX.i314
  %10727 = load i64, i64* %PC.i312
  %10728 = add i64 %10727, 3
  store i64 %10728, i64* %PC.i312
  %10729 = add i64 %10726, %10725
  store i64 %10729, i64* %RAX.i313, align 8
  %10730 = icmp ult i64 %10729, %10725
  %10731 = icmp ult i64 %10729, %10726
  %10732 = or i1 %10730, %10731
  %10733 = zext i1 %10732 to i8
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10733, i8* %10734, align 1
  %10735 = trunc i64 %10729 to i32
  %10736 = and i32 %10735, 255
  %10737 = call i32 @llvm.ctpop.i32(i32 %10736)
  %10738 = trunc i32 %10737 to i8
  %10739 = and i8 %10738, 1
  %10740 = xor i8 %10739, 1
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10740, i8* %10741, align 1
  %10742 = xor i64 %10726, %10725
  %10743 = xor i64 %10742, %10729
  %10744 = lshr i64 %10743, 4
  %10745 = trunc i64 %10744 to i8
  %10746 = and i8 %10745, 1
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10746, i8* %10747, align 1
  %10748 = icmp eq i64 %10729, 0
  %10749 = zext i1 %10748 to i8
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10749, i8* %10750, align 1
  %10751 = lshr i64 %10729, 63
  %10752 = trunc i64 %10751 to i8
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10752, i8* %10753, align 1
  %10754 = lshr i64 %10725, 63
  %10755 = lshr i64 %10726, 63
  %10756 = xor i64 %10751, %10754
  %10757 = xor i64 %10751, %10755
  %10758 = add i64 %10756, %10757
  %10759 = icmp eq i64 %10758, 2
  %10760 = zext i1 %10759 to i8
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10760, i8* %10761, align 1
  store %struct.Memory* %loadMem_43ad50, %struct.Memory** %MEMORY
  %loadMem_43ad53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10763 = getelementptr inbounds %struct.GPR, %struct.GPR* %10762, i32 0, i32 33
  %10764 = getelementptr inbounds %struct.Reg, %struct.Reg* %10763, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %10764 to i64*
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 1
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %10767 to i64*
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 15
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %10770 to i64*
  %10771 = load i64, i64* %RBP.i311
  %10772 = sub i64 %10771, 432
  %10773 = load i64, i64* %RAX.i310
  %10774 = load i64, i64* %PC.i309
  %10775 = add i64 %10774, 7
  store i64 %10775, i64* %PC.i309
  %10776 = inttoptr i64 %10772 to i64*
  store i64 %10773, i64* %10776
  store %struct.Memory* %loadMem_43ad53, %struct.Memory** %MEMORY
  %loadMem_43ad5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 15
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %10782 to i64*
  %10783 = load i64, i64* %RBP.i308
  %10784 = sub i64 %10783, 420
  %10785 = load i64, i64* %PC.i307
  %10786 = add i64 %10785, 10
  store i64 %10786, i64* %PC.i307
  %10787 = inttoptr i64 %10784 to i32*
  store i32 0, i32* %10787
  store %struct.Memory* %loadMem_43ad5a, %struct.Memory** %MEMORY
  br label %block_.L_43ad64

block_.L_43ad64:                                  ; preds = %block_43ad7a, %block_43ad2c
  %loadMem_43ad64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10789 = getelementptr inbounds %struct.GPR, %struct.GPR* %10788, i32 0, i32 33
  %10790 = getelementptr inbounds %struct.Reg, %struct.Reg* %10789, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %10790 to i64*
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10792 = getelementptr inbounds %struct.GPR, %struct.GPR* %10791, i32 0, i32 1
  %10793 = getelementptr inbounds %struct.Reg, %struct.Reg* %10792, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %10793 to i64*
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10795 = getelementptr inbounds %struct.GPR, %struct.GPR* %10794, i32 0, i32 15
  %10796 = getelementptr inbounds %struct.Reg, %struct.Reg* %10795, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %10796 to i64*
  %10797 = load i64, i64* %RBP.i306
  %10798 = sub i64 %10797, 420
  %10799 = load i64, i64* %PC.i304
  %10800 = add i64 %10799, 6
  store i64 %10800, i64* %PC.i304
  %10801 = inttoptr i64 %10798 to i32*
  %10802 = load i32, i32* %10801
  %10803 = zext i32 %10802 to i64
  store i64 %10803, i64* %RAX.i305, align 8
  store %struct.Memory* %loadMem_43ad64, %struct.Memory** %MEMORY
  %loadMem_43ad6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10805 = getelementptr inbounds %struct.GPR, %struct.GPR* %10804, i32 0, i32 33
  %10806 = getelementptr inbounds %struct.Reg, %struct.Reg* %10805, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %10806 to i64*
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10808 = getelementptr inbounds %struct.GPR, %struct.GPR* %10807, i32 0, i32 5
  %10809 = getelementptr inbounds %struct.Reg, %struct.Reg* %10808, i32 0, i32 0
  %RCX.i302 = bitcast %union.anon* %10809 to i64*
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 15
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %10812 to i64*
  %10813 = load i64, i64* %RBP.i303
  %10814 = sub i64 %10813, 432
  %10815 = load i64, i64* %PC.i301
  %10816 = add i64 %10815, 7
  store i64 %10816, i64* %PC.i301
  %10817 = inttoptr i64 %10814 to i64*
  %10818 = load i64, i64* %10817
  store i64 %10818, i64* %RCX.i302, align 8
  store %struct.Memory* %loadMem_43ad6a, %struct.Memory** %MEMORY
  %loadMem_43ad71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 33
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %10821 to i64*
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10823 = getelementptr inbounds %struct.GPR, %struct.GPR* %10822, i32 0, i32 1
  %10824 = getelementptr inbounds %struct.Reg, %struct.Reg* %10823, i32 0, i32 0
  %EAX.i299 = bitcast %union.anon* %10824 to i32*
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10826 = getelementptr inbounds %struct.GPR, %struct.GPR* %10825, i32 0, i32 5
  %10827 = getelementptr inbounds %struct.Reg, %struct.Reg* %10826, i32 0, i32 0
  %RCX.i300 = bitcast %union.anon* %10827 to i64*
  %10828 = load i32, i32* %EAX.i299
  %10829 = zext i32 %10828 to i64
  %10830 = load i64, i64* %RCX.i300
  %10831 = add i64 %10830, 28
  %10832 = load i64, i64* %PC.i298
  %10833 = add i64 %10832, 3
  store i64 %10833, i64* %PC.i298
  %10834 = inttoptr i64 %10831 to i32*
  %10835 = load i32, i32* %10834
  %10836 = sub i32 %10828, %10835
  %10837 = icmp ult i32 %10828, %10835
  %10838 = zext i1 %10837 to i8
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10838, i8* %10839, align 1
  %10840 = and i32 %10836, 255
  %10841 = call i32 @llvm.ctpop.i32(i32 %10840)
  %10842 = trunc i32 %10841 to i8
  %10843 = and i8 %10842, 1
  %10844 = xor i8 %10843, 1
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10844, i8* %10845, align 1
  %10846 = xor i32 %10835, %10828
  %10847 = xor i32 %10846, %10836
  %10848 = lshr i32 %10847, 4
  %10849 = trunc i32 %10848 to i8
  %10850 = and i8 %10849, 1
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10850, i8* %10851, align 1
  %10852 = icmp eq i32 %10836, 0
  %10853 = zext i1 %10852 to i8
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10853, i8* %10854, align 1
  %10855 = lshr i32 %10836, 31
  %10856 = trunc i32 %10855 to i8
  %10857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10856, i8* %10857, align 1
  %10858 = lshr i32 %10828, 31
  %10859 = lshr i32 %10835, 31
  %10860 = xor i32 %10859, %10858
  %10861 = xor i32 %10855, %10858
  %10862 = add i32 %10861, %10860
  %10863 = icmp eq i32 %10862, 2
  %10864 = zext i1 %10863 to i8
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10864, i8* %10865, align 1
  store %struct.Memory* %loadMem_43ad71, %struct.Memory** %MEMORY
  %loadMem_43ad74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10867 = getelementptr inbounds %struct.GPR, %struct.GPR* %10866, i32 0, i32 33
  %10868 = getelementptr inbounds %struct.Reg, %struct.Reg* %10867, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %10868 to i64*
  %10869 = load i64, i64* %PC.i297
  %10870 = add i64 %10869, 79
  %10871 = load i64, i64* %PC.i297
  %10872 = add i64 %10871, 6
  %10873 = load i64, i64* %PC.i297
  %10874 = add i64 %10873, 6
  store i64 %10874, i64* %PC.i297
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10876 = load i8, i8* %10875, align 1
  %10877 = icmp ne i8 %10876, 0
  %10878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10879 = load i8, i8* %10878, align 1
  %10880 = icmp ne i8 %10879, 0
  %10881 = xor i1 %10877, %10880
  %10882 = xor i1 %10881, true
  %10883 = zext i1 %10882 to i8
  store i8 %10883, i8* %BRANCH_TAKEN, align 1
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10885 = select i1 %10881, i64 %10872, i64 %10870
  store i64 %10885, i64* %10884, align 8
  store %struct.Memory* %loadMem_43ad74, %struct.Memory** %MEMORY
  %loadBr_43ad74 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad74 = icmp eq i8 %loadBr_43ad74, 1
  br i1 %cmpBr_43ad74, label %block_.L_43adc3, label %block_43ad7a

block_43ad7a:                                     ; preds = %block_.L_43ad64
  %loadMem_43ad7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 33
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %10888 to i64*
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 1
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %10891 to i64*
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 15
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %10894 to i64*
  %10895 = load i64, i64* %RBP.i296
  %10896 = sub i64 %10895, 432
  %10897 = load i64, i64* %PC.i294
  %10898 = add i64 %10897, 7
  store i64 %10898, i64* %PC.i294
  %10899 = inttoptr i64 %10896 to i64*
  %10900 = load i64, i64* %10899
  store i64 %10900, i64* %RAX.i295, align 8
  store %struct.Memory* %loadMem_43ad7a, %struct.Memory** %MEMORY
  %loadMem_43ad81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10902 = getelementptr inbounds %struct.GPR, %struct.GPR* %10901, i32 0, i32 33
  %10903 = getelementptr inbounds %struct.Reg, %struct.Reg* %10902, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %10903 to i64*
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10905 = getelementptr inbounds %struct.GPR, %struct.GPR* %10904, i32 0, i32 5
  %10906 = getelementptr inbounds %struct.Reg, %struct.Reg* %10905, i32 0, i32 0
  %RCX.i292 = bitcast %union.anon* %10906 to i64*
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10908 = getelementptr inbounds %struct.GPR, %struct.GPR* %10907, i32 0, i32 15
  %10909 = getelementptr inbounds %struct.Reg, %struct.Reg* %10908, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %10909 to i64*
  %10910 = load i64, i64* %RBP.i293
  %10911 = sub i64 %10910, 420
  %10912 = load i64, i64* %PC.i291
  %10913 = add i64 %10912, 7
  store i64 %10913, i64* %PC.i291
  %10914 = inttoptr i64 %10911 to i32*
  %10915 = load i32, i32* %10914
  %10916 = sext i32 %10915 to i64
  store i64 %10916, i64* %RCX.i292, align 8
  store %struct.Memory* %loadMem_43ad81, %struct.Memory** %MEMORY
  %loadMem_43ad88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10918 = getelementptr inbounds %struct.GPR, %struct.GPR* %10917, i32 0, i32 33
  %10919 = getelementptr inbounds %struct.Reg, %struct.Reg* %10918, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %10919 to i64*
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10921 = getelementptr inbounds %struct.GPR, %struct.GPR* %10920, i32 0, i32 1
  %10922 = getelementptr inbounds %struct.Reg, %struct.Reg* %10921, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %10922 to i64*
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10924 = getelementptr inbounds %struct.GPR, %struct.GPR* %10923, i32 0, i32 5
  %10925 = getelementptr inbounds %struct.Reg, %struct.Reg* %10924, i32 0, i32 0
  %RCX.i289 = bitcast %union.anon* %10925 to i64*
  %10926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10927 = getelementptr inbounds %struct.GPR, %struct.GPR* %10926, i32 0, i32 7
  %10928 = getelementptr inbounds %struct.Reg, %struct.Reg* %10927, i32 0, i32 0
  %RDX.i290 = bitcast %union.anon* %10928 to i64*
  %10929 = load i64, i64* %RAX.i288
  %10930 = load i64, i64* %RCX.i289
  %10931 = mul i64 %10930, 4
  %10932 = add i64 %10929, 32
  %10933 = add i64 %10932, %10931
  %10934 = load i64, i64* %PC.i287
  %10935 = add i64 %10934, 4
  store i64 %10935, i64* %PC.i287
  %10936 = inttoptr i64 %10933 to i32*
  %10937 = load i32, i32* %10936
  %10938 = zext i32 %10937 to i64
  store i64 %10938, i64* %RDX.i290, align 8
  store %struct.Memory* %loadMem_43ad88, %struct.Memory** %MEMORY
  %loadMem_43ad8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10940 = getelementptr inbounds %struct.GPR, %struct.GPR* %10939, i32 0, i32 33
  %10941 = getelementptr inbounds %struct.Reg, %struct.Reg* %10940, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %10941 to i64*
  %10942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10943 = getelementptr inbounds %struct.GPR, %struct.GPR* %10942, i32 0, i32 1
  %10944 = getelementptr inbounds %struct.Reg, %struct.Reg* %10943, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %10944 to i64*
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10946 = getelementptr inbounds %struct.GPR, %struct.GPR* %10945, i32 0, i32 15
  %10947 = getelementptr inbounds %struct.Reg, %struct.Reg* %10946, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %10947 to i64*
  %10948 = load i64, i64* %RBP.i286
  %10949 = sub i64 %10948, 56
  %10950 = load i64, i64* %PC.i284
  %10951 = add i64 %10950, 4
  store i64 %10951, i64* %PC.i284
  %10952 = inttoptr i64 %10949 to i64*
  %10953 = load i64, i64* %10952
  store i64 %10953, i64* %RAX.i285, align 8
  store %struct.Memory* %loadMem_43ad8c, %struct.Memory** %MEMORY
  %loadMem_43ad90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10955 = getelementptr inbounds %struct.GPR, %struct.GPR* %10954, i32 0, i32 33
  %10956 = getelementptr inbounds %struct.Reg, %struct.Reg* %10955, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %10956 to i64*
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10958 = getelementptr inbounds %struct.GPR, %struct.GPR* %10957, i32 0, i32 5
  %10959 = getelementptr inbounds %struct.Reg, %struct.Reg* %10958, i32 0, i32 0
  %RCX.i282 = bitcast %union.anon* %10959 to i64*
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10961 = getelementptr inbounds %struct.GPR, %struct.GPR* %10960, i32 0, i32 15
  %10962 = getelementptr inbounds %struct.Reg, %struct.Reg* %10961, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %10962 to i64*
  %10963 = load i64, i64* %RBP.i283
  %10964 = sub i64 %10963, 56
  %10965 = load i64, i64* %PC.i281
  %10966 = add i64 %10965, 4
  store i64 %10966, i64* %PC.i281
  %10967 = inttoptr i64 %10964 to i64*
  %10968 = load i64, i64* %10967
  store i64 %10968, i64* %RCX.i282, align 8
  store %struct.Memory* %loadMem_43ad90, %struct.Memory** %MEMORY
  %loadMem_43ad94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 33
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %10971 to i64*
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10973 = getelementptr inbounds %struct.GPR, %struct.GPR* %10972, i32 0, i32 5
  %10974 = getelementptr inbounds %struct.Reg, %struct.Reg* %10973, i32 0, i32 0
  %RCX.i279 = bitcast %union.anon* %10974 to i64*
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10976 = getelementptr inbounds %struct.GPR, %struct.GPR* %10975, i32 0, i32 9
  %10977 = getelementptr inbounds %struct.Reg, %struct.Reg* %10976, i32 0, i32 0
  %RSI.i280 = bitcast %union.anon* %10977 to i64*
  %10978 = load i64, i64* %RCX.i279
  %10979 = add i64 %10978, 644
  %10980 = load i64, i64* %PC.i278
  %10981 = add i64 %10980, 6
  store i64 %10981, i64* %PC.i278
  %10982 = inttoptr i64 %10979 to i32*
  %10983 = load i32, i32* %10982
  %10984 = zext i32 %10983 to i64
  store i64 %10984, i64* %RSI.i280, align 8
  store %struct.Memory* %loadMem_43ad94, %struct.Memory** %MEMORY
  %loadMem_43ad9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 33
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %10987 to i64*
  %10988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10989 = getelementptr inbounds %struct.GPR, %struct.GPR* %10988, i32 0, i32 9
  %10990 = getelementptr inbounds %struct.Reg, %struct.Reg* %10989, i32 0, i32 0
  %ESI.i276 = bitcast %union.anon* %10990 to i32*
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10992 = getelementptr inbounds %struct.GPR, %struct.GPR* %10991, i32 0, i32 11
  %10993 = getelementptr inbounds %struct.Reg, %struct.Reg* %10992, i32 0, i32 0
  %RDI.i277 = bitcast %union.anon* %10993 to i64*
  %10994 = load i32, i32* %ESI.i276
  %10995 = zext i32 %10994 to i64
  %10996 = load i64, i64* %PC.i275
  %10997 = add i64 %10996, 2
  store i64 %10997, i64* %PC.i275
  %10998 = and i64 %10995, 4294967295
  store i64 %10998, i64* %RDI.i277, align 8
  store %struct.Memory* %loadMem_43ad9a, %struct.Memory** %MEMORY
  %loadMem_43ad9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11000 = getelementptr inbounds %struct.GPR, %struct.GPR* %10999, i32 0, i32 33
  %11001 = getelementptr inbounds %struct.Reg, %struct.Reg* %11000, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %11001 to i64*
  %11002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11003 = getelementptr inbounds %struct.GPR, %struct.GPR* %11002, i32 0, i32 11
  %11004 = getelementptr inbounds %struct.Reg, %struct.Reg* %11003, i32 0, i32 0
  %RDI.i274 = bitcast %union.anon* %11004 to i64*
  %11005 = load i64, i64* %RDI.i274
  %11006 = load i64, i64* %PC.i273
  %11007 = add i64 %11006, 3
  store i64 %11007, i64* %PC.i273
  %11008 = trunc i64 %11005 to i32
  %11009 = add i32 1, %11008
  %11010 = zext i32 %11009 to i64
  store i64 %11010, i64* %RDI.i274, align 8
  %11011 = icmp ult i32 %11009, %11008
  %11012 = icmp ult i32 %11009, 1
  %11013 = or i1 %11011, %11012
  %11014 = zext i1 %11013 to i8
  %11015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11014, i8* %11015, align 1
  %11016 = and i32 %11009, 255
  %11017 = call i32 @llvm.ctpop.i32(i32 %11016)
  %11018 = trunc i32 %11017 to i8
  %11019 = and i8 %11018, 1
  %11020 = xor i8 %11019, 1
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11020, i8* %11021, align 1
  %11022 = xor i64 1, %11005
  %11023 = trunc i64 %11022 to i32
  %11024 = xor i32 %11023, %11009
  %11025 = lshr i32 %11024, 4
  %11026 = trunc i32 %11025 to i8
  %11027 = and i8 %11026, 1
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11027, i8* %11028, align 1
  %11029 = icmp eq i32 %11009, 0
  %11030 = zext i1 %11029 to i8
  %11031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11030, i8* %11031, align 1
  %11032 = lshr i32 %11009, 31
  %11033 = trunc i32 %11032 to i8
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11033, i8* %11034, align 1
  %11035 = lshr i32 %11008, 31
  %11036 = xor i32 %11032, %11035
  %11037 = add i32 %11036, %11032
  %11038 = icmp eq i32 %11037, 2
  %11039 = zext i1 %11038 to i8
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11039, i8* %11040, align 1
  store %struct.Memory* %loadMem_43ad9c, %struct.Memory** %MEMORY
  %loadMem_43ad9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11042 = getelementptr inbounds %struct.GPR, %struct.GPR* %11041, i32 0, i32 33
  %11043 = getelementptr inbounds %struct.Reg, %struct.Reg* %11042, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %11043 to i64*
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11045 = getelementptr inbounds %struct.GPR, %struct.GPR* %11044, i32 0, i32 11
  %11046 = getelementptr inbounds %struct.Reg, %struct.Reg* %11045, i32 0, i32 0
  %EDI.i271 = bitcast %union.anon* %11046 to i32*
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11048 = getelementptr inbounds %struct.GPR, %struct.GPR* %11047, i32 0, i32 5
  %11049 = getelementptr inbounds %struct.Reg, %struct.Reg* %11048, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %11049 to i64*
  %11050 = load i64, i64* %RCX.i272
  %11051 = add i64 %11050, 644
  %11052 = load i32, i32* %EDI.i271
  %11053 = zext i32 %11052 to i64
  %11054 = load i64, i64* %PC.i270
  %11055 = add i64 %11054, 6
  store i64 %11055, i64* %PC.i270
  %11056 = inttoptr i64 %11051 to i32*
  store i32 %11052, i32* %11056
  store %struct.Memory* %loadMem_43ad9f, %struct.Memory** %MEMORY
  %loadMem_43ada5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11058 = getelementptr inbounds %struct.GPR, %struct.GPR* %11057, i32 0, i32 33
  %11059 = getelementptr inbounds %struct.Reg, %struct.Reg* %11058, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %11059 to i64*
  %11060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11061 = getelementptr inbounds %struct.GPR, %struct.GPR* %11060, i32 0, i32 9
  %11062 = getelementptr inbounds %struct.Reg, %struct.Reg* %11061, i32 0, i32 0
  %ESI.i268 = bitcast %union.anon* %11062 to i32*
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11064 = getelementptr inbounds %struct.GPR, %struct.GPR* %11063, i32 0, i32 5
  %11065 = getelementptr inbounds %struct.Reg, %struct.Reg* %11064, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %11065 to i64*
  %11066 = load i32, i32* %ESI.i268
  %11067 = zext i32 %11066 to i64
  %11068 = load i64, i64* %PC.i267
  %11069 = add i64 %11068, 3
  store i64 %11069, i64* %PC.i267
  %11070 = shl i64 %11067, 32
  %11071 = ashr exact i64 %11070, 32
  store i64 %11071, i64* %RCX.i269, align 8
  store %struct.Memory* %loadMem_43ada5, %struct.Memory** %MEMORY
  %loadMem_43ada8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11073 = getelementptr inbounds %struct.GPR, %struct.GPR* %11072, i32 0, i32 33
  %11074 = getelementptr inbounds %struct.Reg, %struct.Reg* %11073, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %11074 to i64*
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11076 = getelementptr inbounds %struct.GPR, %struct.GPR* %11075, i32 0, i32 7
  %11077 = getelementptr inbounds %struct.Reg, %struct.Reg* %11076, i32 0, i32 0
  %EDX.i264 = bitcast %union.anon* %11077 to i32*
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11079 = getelementptr inbounds %struct.GPR, %struct.GPR* %11078, i32 0, i32 1
  %11080 = getelementptr inbounds %struct.Reg, %struct.Reg* %11079, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %11080 to i64*
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11082 = getelementptr inbounds %struct.GPR, %struct.GPR* %11081, i32 0, i32 5
  %11083 = getelementptr inbounds %struct.Reg, %struct.Reg* %11082, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %11083 to i64*
  %11084 = load i64, i64* %RAX.i265
  %11085 = load i64, i64* %RCX.i266
  %11086 = mul i64 %11085, 4
  %11087 = add i64 %11084, 320
  %11088 = add i64 %11087, %11086
  %11089 = load i32, i32* %EDX.i264
  %11090 = zext i32 %11089 to i64
  %11091 = load i64, i64* %PC.i263
  %11092 = add i64 %11091, 7
  store i64 %11092, i64* %PC.i263
  %11093 = inttoptr i64 %11088 to i32*
  store i32 %11089, i32* %11093
  store %struct.Memory* %loadMem_43ada8, %struct.Memory** %MEMORY
  %loadMem_43adaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11095 = getelementptr inbounds %struct.GPR, %struct.GPR* %11094, i32 0, i32 33
  %11096 = getelementptr inbounds %struct.Reg, %struct.Reg* %11095, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %11096 to i64*
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11098 = getelementptr inbounds %struct.GPR, %struct.GPR* %11097, i32 0, i32 1
  %11099 = getelementptr inbounds %struct.Reg, %struct.Reg* %11098, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %11099 to i64*
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11101 = getelementptr inbounds %struct.GPR, %struct.GPR* %11100, i32 0, i32 15
  %11102 = getelementptr inbounds %struct.Reg, %struct.Reg* %11101, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %11102 to i64*
  %11103 = load i64, i64* %RBP.i262
  %11104 = sub i64 %11103, 420
  %11105 = load i64, i64* %PC.i260
  %11106 = add i64 %11105, 6
  store i64 %11106, i64* %PC.i260
  %11107 = inttoptr i64 %11104 to i32*
  %11108 = load i32, i32* %11107
  %11109 = zext i32 %11108 to i64
  store i64 %11109, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_43adaf, %struct.Memory** %MEMORY
  %loadMem_43adb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11111 = getelementptr inbounds %struct.GPR, %struct.GPR* %11110, i32 0, i32 33
  %11112 = getelementptr inbounds %struct.Reg, %struct.Reg* %11111, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %11112 to i64*
  %11113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11114 = getelementptr inbounds %struct.GPR, %struct.GPR* %11113, i32 0, i32 1
  %11115 = getelementptr inbounds %struct.Reg, %struct.Reg* %11114, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %11115 to i64*
  %11116 = load i64, i64* %RAX.i259
  %11117 = load i64, i64* %PC.i258
  %11118 = add i64 %11117, 3
  store i64 %11118, i64* %PC.i258
  %11119 = trunc i64 %11116 to i32
  %11120 = add i32 1, %11119
  %11121 = zext i32 %11120 to i64
  store i64 %11121, i64* %RAX.i259, align 8
  %11122 = icmp ult i32 %11120, %11119
  %11123 = icmp ult i32 %11120, 1
  %11124 = or i1 %11122, %11123
  %11125 = zext i1 %11124 to i8
  %11126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11125, i8* %11126, align 1
  %11127 = and i32 %11120, 255
  %11128 = call i32 @llvm.ctpop.i32(i32 %11127)
  %11129 = trunc i32 %11128 to i8
  %11130 = and i8 %11129, 1
  %11131 = xor i8 %11130, 1
  %11132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11131, i8* %11132, align 1
  %11133 = xor i64 1, %11116
  %11134 = trunc i64 %11133 to i32
  %11135 = xor i32 %11134, %11120
  %11136 = lshr i32 %11135, 4
  %11137 = trunc i32 %11136 to i8
  %11138 = and i8 %11137, 1
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11138, i8* %11139, align 1
  %11140 = icmp eq i32 %11120, 0
  %11141 = zext i1 %11140 to i8
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11141, i8* %11142, align 1
  %11143 = lshr i32 %11120, 31
  %11144 = trunc i32 %11143 to i8
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11144, i8* %11145, align 1
  %11146 = lshr i32 %11119, 31
  %11147 = xor i32 %11143, %11146
  %11148 = add i32 %11147, %11143
  %11149 = icmp eq i32 %11148, 2
  %11150 = zext i1 %11149 to i8
  %11151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11150, i8* %11151, align 1
  store %struct.Memory* %loadMem_43adb5, %struct.Memory** %MEMORY
  %loadMem_43adb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 33
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %11154 to i64*
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 1
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %EAX.i256 = bitcast %union.anon* %11157 to i32*
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 15
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %RBP.i257 = bitcast %union.anon* %11160 to i64*
  %11161 = load i64, i64* %RBP.i257
  %11162 = sub i64 %11161, 420
  %11163 = load i32, i32* %EAX.i256
  %11164 = zext i32 %11163 to i64
  %11165 = load i64, i64* %PC.i255
  %11166 = add i64 %11165, 6
  store i64 %11166, i64* %PC.i255
  %11167 = inttoptr i64 %11162 to i32*
  store i32 %11163, i32* %11167
  store %struct.Memory* %loadMem_43adb8, %struct.Memory** %MEMORY
  %loadMem_43adbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 33
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %11170 to i64*
  %11171 = load i64, i64* %PC.i254
  %11172 = add i64 %11171, -90
  %11173 = load i64, i64* %PC.i254
  %11174 = add i64 %11173, 5
  store i64 %11174, i64* %PC.i254
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11172, i64* %11175, align 8
  store %struct.Memory* %loadMem_43adbe, %struct.Memory** %MEMORY
  br label %block_.L_43ad64

block_.L_43adc3:                                  ; preds = %block_.L_43ad64
  %loadMem_43adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 33
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %11178 to i64*
  %11179 = load i64, i64* %PC.i253
  %11180 = add i64 %11179, 62
  %11181 = load i64, i64* %PC.i253
  %11182 = add i64 %11181, 5
  store i64 %11182, i64* %PC.i253
  %11183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11180, i64* %11183, align 8
  store %struct.Memory* %loadMem_43adc3, %struct.Memory** %MEMORY
  br label %block_.L_43ae01

block_.L_43adc8:                                  ; preds = %block_43acff, %block_43acdd, %block_43acc8, %block_43acb5
  %loadMem_43adc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11185 = getelementptr inbounds %struct.GPR, %struct.GPR* %11184, i32 0, i32 33
  %11186 = getelementptr inbounds %struct.Reg, %struct.Reg* %11185, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %11186 to i64*
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11188 = getelementptr inbounds %struct.GPR, %struct.GPR* %11187, i32 0, i32 1
  %11189 = getelementptr inbounds %struct.Reg, %struct.Reg* %11188, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %11189 to i64*
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11191 = getelementptr inbounds %struct.GPR, %struct.GPR* %11190, i32 0, i32 15
  %11192 = getelementptr inbounds %struct.Reg, %struct.Reg* %11191, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %11192 to i64*
  %11193 = load i64, i64* %RBP.i252
  %11194 = sub i64 %11193, 388
  %11195 = load i64, i64* %PC.i250
  %11196 = add i64 %11195, 7
  store i64 %11196, i64* %PC.i250
  %11197 = inttoptr i64 %11194 to i32*
  %11198 = load i32, i32* %11197
  %11199 = sext i32 %11198 to i64
  store i64 %11199, i64* %RAX.i251, align 8
  store %struct.Memory* %loadMem_43adc8, %struct.Memory** %MEMORY
  %loadMem_43adcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11201 = getelementptr inbounds %struct.GPR, %struct.GPR* %11200, i32 0, i32 33
  %11202 = getelementptr inbounds %struct.Reg, %struct.Reg* %11201, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %11202 to i64*
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11204 = getelementptr inbounds %struct.GPR, %struct.GPR* %11203, i32 0, i32 1
  %11205 = getelementptr inbounds %struct.Reg, %struct.Reg* %11204, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %11205 to i64*
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11207 = getelementptr inbounds %struct.GPR, %struct.GPR* %11206, i32 0, i32 15
  %11208 = getelementptr inbounds %struct.Reg, %struct.Reg* %11207, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %11208 to i64*
  %11209 = load i64, i64* %RBP.i249
  %11210 = load i64, i64* %RAX.i248
  %11211 = mul i64 %11210, 4
  %11212 = add i64 %11209, -352
  %11213 = add i64 %11212, %11211
  %11214 = load i64, i64* %PC.i247
  %11215 = add i64 %11214, 8
  store i64 %11215, i64* %PC.i247
  %11216 = inttoptr i64 %11213 to i32*
  %11217 = load i32, i32* %11216
  %11218 = sext i32 %11217 to i64
  store i64 %11218, i64* %RAX.i248, align 8
  store %struct.Memory* %loadMem_43adcf, %struct.Memory** %MEMORY
  %loadMem_43add7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11220 = getelementptr inbounds %struct.GPR, %struct.GPR* %11219, i32 0, i32 33
  %11221 = getelementptr inbounds %struct.Reg, %struct.Reg* %11220, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %11221 to i64*
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11223 = getelementptr inbounds %struct.GPR, %struct.GPR* %11222, i32 0, i32 1
  %11224 = getelementptr inbounds %struct.Reg, %struct.Reg* %11223, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %11224 to i64*
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11226 = getelementptr inbounds %struct.GPR, %struct.GPR* %11225, i32 0, i32 5
  %11227 = getelementptr inbounds %struct.Reg, %struct.Reg* %11226, i32 0, i32 0
  %RCX.i245 = bitcast %union.anon* %11227 to i64*
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11229 = getelementptr inbounds %struct.GPR, %struct.GPR* %11228, i32 0, i32 15
  %11230 = getelementptr inbounds %struct.Reg, %struct.Reg* %11229, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %11230 to i64*
  %11231 = load i64, i64* %RBP.i246
  %11232 = load i64, i64* %RAX.i244
  %11233 = mul i64 %11232, 4
  %11234 = add i64 %11231, -160
  %11235 = add i64 %11234, %11233
  %11236 = load i64, i64* %PC.i243
  %11237 = add i64 %11236, 7
  store i64 %11237, i64* %PC.i243
  %11238 = inttoptr i64 %11235 to i32*
  %11239 = load i32, i32* %11238
  %11240 = zext i32 %11239 to i64
  store i64 %11240, i64* %RCX.i245, align 8
  store %struct.Memory* %loadMem_43add7, %struct.Memory** %MEMORY
  %loadMem_43adde = load %struct.Memory*, %struct.Memory** %MEMORY
  %11241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11242 = getelementptr inbounds %struct.GPR, %struct.GPR* %11241, i32 0, i32 33
  %11243 = getelementptr inbounds %struct.Reg, %struct.Reg* %11242, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %11243 to i64*
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11245 = getelementptr inbounds %struct.GPR, %struct.GPR* %11244, i32 0, i32 1
  %11246 = getelementptr inbounds %struct.Reg, %struct.Reg* %11245, i32 0, i32 0
  %RAX.i241 = bitcast %union.anon* %11246 to i64*
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11248 = getelementptr inbounds %struct.GPR, %struct.GPR* %11247, i32 0, i32 15
  %11249 = getelementptr inbounds %struct.Reg, %struct.Reg* %11248, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %11249 to i64*
  %11250 = load i64, i64* %RBP.i242
  %11251 = sub i64 %11250, 56
  %11252 = load i64, i64* %PC.i240
  %11253 = add i64 %11252, 4
  store i64 %11253, i64* %PC.i240
  %11254 = inttoptr i64 %11251 to i64*
  %11255 = load i64, i64* %11254
  store i64 %11255, i64* %RAX.i241, align 8
  store %struct.Memory* %loadMem_43adde, %struct.Memory** %MEMORY
  %loadMem_43ade2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 33
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %11258 to i64*
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 7
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %RDX.i238 = bitcast %union.anon* %11261 to i64*
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11263 = getelementptr inbounds %struct.GPR, %struct.GPR* %11262, i32 0, i32 15
  %11264 = getelementptr inbounds %struct.Reg, %struct.Reg* %11263, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %11264 to i64*
  %11265 = load i64, i64* %RBP.i239
  %11266 = sub i64 %11265, 56
  %11267 = load i64, i64* %PC.i237
  %11268 = add i64 %11267, 4
  store i64 %11268, i64* %PC.i237
  %11269 = inttoptr i64 %11266 to i64*
  %11270 = load i64, i64* %11269
  store i64 %11270, i64* %RDX.i238, align 8
  store %struct.Memory* %loadMem_43ade2, %struct.Memory** %MEMORY
  %loadMem_43ade6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11272 = getelementptr inbounds %struct.GPR, %struct.GPR* %11271, i32 0, i32 33
  %11273 = getelementptr inbounds %struct.Reg, %struct.Reg* %11272, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %11273 to i64*
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11275 = getelementptr inbounds %struct.GPR, %struct.GPR* %11274, i32 0, i32 7
  %11276 = getelementptr inbounds %struct.Reg, %struct.Reg* %11275, i32 0, i32 0
  %RDX.i235 = bitcast %union.anon* %11276 to i64*
  %11277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11278 = getelementptr inbounds %struct.GPR, %struct.GPR* %11277, i32 0, i32 9
  %11279 = getelementptr inbounds %struct.Reg, %struct.Reg* %11278, i32 0, i32 0
  %RSI.i236 = bitcast %union.anon* %11279 to i64*
  %11280 = load i64, i64* %RDX.i235
  %11281 = add i64 %11280, 644
  %11282 = load i64, i64* %PC.i234
  %11283 = add i64 %11282, 6
  store i64 %11283, i64* %PC.i234
  %11284 = inttoptr i64 %11281 to i32*
  %11285 = load i32, i32* %11284
  %11286 = zext i32 %11285 to i64
  store i64 %11286, i64* %RSI.i236, align 8
  store %struct.Memory* %loadMem_43ade6, %struct.Memory** %MEMORY
  %loadMem_43adec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 33
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %11289 to i64*
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11291 = getelementptr inbounds %struct.GPR, %struct.GPR* %11290, i32 0, i32 9
  %11292 = getelementptr inbounds %struct.Reg, %struct.Reg* %11291, i32 0, i32 0
  %ESI.i232 = bitcast %union.anon* %11292 to i32*
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11294 = getelementptr inbounds %struct.GPR, %struct.GPR* %11293, i32 0, i32 11
  %11295 = getelementptr inbounds %struct.Reg, %struct.Reg* %11294, i32 0, i32 0
  %RDI.i233 = bitcast %union.anon* %11295 to i64*
  %11296 = load i32, i32* %ESI.i232
  %11297 = zext i32 %11296 to i64
  %11298 = load i64, i64* %PC.i231
  %11299 = add i64 %11298, 2
  store i64 %11299, i64* %PC.i231
  %11300 = and i64 %11297, 4294967295
  store i64 %11300, i64* %RDI.i233, align 8
  store %struct.Memory* %loadMem_43adec, %struct.Memory** %MEMORY
  %loadMem_43adee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11302 = getelementptr inbounds %struct.GPR, %struct.GPR* %11301, i32 0, i32 33
  %11303 = getelementptr inbounds %struct.Reg, %struct.Reg* %11302, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %11303 to i64*
  %11304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11305 = getelementptr inbounds %struct.GPR, %struct.GPR* %11304, i32 0, i32 11
  %11306 = getelementptr inbounds %struct.Reg, %struct.Reg* %11305, i32 0, i32 0
  %RDI.i230 = bitcast %union.anon* %11306 to i64*
  %11307 = load i64, i64* %RDI.i230
  %11308 = load i64, i64* %PC.i229
  %11309 = add i64 %11308, 3
  store i64 %11309, i64* %PC.i229
  %11310 = trunc i64 %11307 to i32
  %11311 = add i32 1, %11310
  %11312 = zext i32 %11311 to i64
  store i64 %11312, i64* %RDI.i230, align 8
  %11313 = icmp ult i32 %11311, %11310
  %11314 = icmp ult i32 %11311, 1
  %11315 = or i1 %11313, %11314
  %11316 = zext i1 %11315 to i8
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11316, i8* %11317, align 1
  %11318 = and i32 %11311, 255
  %11319 = call i32 @llvm.ctpop.i32(i32 %11318)
  %11320 = trunc i32 %11319 to i8
  %11321 = and i8 %11320, 1
  %11322 = xor i8 %11321, 1
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11322, i8* %11323, align 1
  %11324 = xor i64 1, %11307
  %11325 = trunc i64 %11324 to i32
  %11326 = xor i32 %11325, %11311
  %11327 = lshr i32 %11326, 4
  %11328 = trunc i32 %11327 to i8
  %11329 = and i8 %11328, 1
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11329, i8* %11330, align 1
  %11331 = icmp eq i32 %11311, 0
  %11332 = zext i1 %11331 to i8
  %11333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11332, i8* %11333, align 1
  %11334 = lshr i32 %11311, 31
  %11335 = trunc i32 %11334 to i8
  %11336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11335, i8* %11336, align 1
  %11337 = lshr i32 %11310, 31
  %11338 = xor i32 %11334, %11337
  %11339 = add i32 %11338, %11334
  %11340 = icmp eq i32 %11339, 2
  %11341 = zext i1 %11340 to i8
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11341, i8* %11342, align 1
  store %struct.Memory* %loadMem_43adee, %struct.Memory** %MEMORY
  %loadMem_43adf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11344 = getelementptr inbounds %struct.GPR, %struct.GPR* %11343, i32 0, i32 33
  %11345 = getelementptr inbounds %struct.Reg, %struct.Reg* %11344, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %11345 to i64*
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 11
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %11348 to i32*
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11350 = getelementptr inbounds %struct.GPR, %struct.GPR* %11349, i32 0, i32 7
  %11351 = getelementptr inbounds %struct.Reg, %struct.Reg* %11350, i32 0, i32 0
  %RDX.i228 = bitcast %union.anon* %11351 to i64*
  %11352 = load i64, i64* %RDX.i228
  %11353 = add i64 %11352, 644
  %11354 = load i32, i32* %EDI.i
  %11355 = zext i32 %11354 to i64
  %11356 = load i64, i64* %PC.i227
  %11357 = add i64 %11356, 6
  store i64 %11357, i64* %PC.i227
  %11358 = inttoptr i64 %11353 to i32*
  store i32 %11354, i32* %11358
  store %struct.Memory* %loadMem_43adf1, %struct.Memory** %MEMORY
  %loadMem_43adf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11360 = getelementptr inbounds %struct.GPR, %struct.GPR* %11359, i32 0, i32 33
  %11361 = getelementptr inbounds %struct.Reg, %struct.Reg* %11360, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %11361 to i64*
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11363 = getelementptr inbounds %struct.GPR, %struct.GPR* %11362, i32 0, i32 9
  %11364 = getelementptr inbounds %struct.Reg, %struct.Reg* %11363, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %11364 to i32*
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11366 = getelementptr inbounds %struct.GPR, %struct.GPR* %11365, i32 0, i32 7
  %11367 = getelementptr inbounds %struct.Reg, %struct.Reg* %11366, i32 0, i32 0
  %RDX.i226 = bitcast %union.anon* %11367 to i64*
  %11368 = load i32, i32* %ESI.i
  %11369 = zext i32 %11368 to i64
  %11370 = load i64, i64* %PC.i225
  %11371 = add i64 %11370, 3
  store i64 %11371, i64* %PC.i225
  %11372 = shl i64 %11369, 32
  %11373 = ashr exact i64 %11372, 32
  store i64 %11373, i64* %RDX.i226, align 8
  store %struct.Memory* %loadMem_43adf7, %struct.Memory** %MEMORY
  %loadMem_43adfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 33
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %11376 to i64*
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 5
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %ECX.i222 = bitcast %union.anon* %11379 to i32*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 1
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %11382 to i64*
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 7
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %RDX.i224 = bitcast %union.anon* %11385 to i64*
  %11386 = load i64, i64* %RAX.i223
  %11387 = load i64, i64* %RDX.i224
  %11388 = mul i64 %11387, 4
  %11389 = add i64 %11386, 320
  %11390 = add i64 %11389, %11388
  %11391 = load i32, i32* %ECX.i222
  %11392 = zext i32 %11391 to i64
  %11393 = load i64, i64* %PC.i221
  %11394 = add i64 %11393, 7
  store i64 %11394, i64* %PC.i221
  %11395 = inttoptr i64 %11390 to i32*
  store i32 %11391, i32* %11395
  store %struct.Memory* %loadMem_43adfa, %struct.Memory** %MEMORY
  br label %block_.L_43ae01

block_.L_43ae01:                                  ; preds = %block_.L_43adc8, %block_.L_43adc3
  %loadMem_43ae01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 33
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %11398 to i64*
  %11399 = load i64, i64* %PC.i220
  %11400 = add i64 %11399, 5
  %11401 = load i64, i64* %PC.i220
  %11402 = add i64 %11401, 5
  store i64 %11402, i64* %PC.i220
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11400, i64* %11403, align 8
  store %struct.Memory* %loadMem_43ae01, %struct.Memory** %MEMORY
  br label %block_.L_43ae06

block_.L_43ae06:                                  ; preds = %block_.L_43ae01, %block_.L_43ac9e
  %loadMem_43ae06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11405 = getelementptr inbounds %struct.GPR, %struct.GPR* %11404, i32 0, i32 33
  %11406 = getelementptr inbounds %struct.Reg, %struct.Reg* %11405, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %11406 to i64*
  %11407 = load i64, i64* %PC.i219
  %11408 = add i64 %11407, 5
  %11409 = load i64, i64* %PC.i219
  %11410 = add i64 %11409, 5
  store i64 %11410, i64* %PC.i219
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11408, i64* %11411, align 8
  store %struct.Memory* %loadMem_43ae06, %struct.Memory** %MEMORY
  br label %block_.L_43ae0b

block_.L_43ae0b:                                  ; preds = %block_.L_43ae06
  %loadMem_43ae0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11413 = getelementptr inbounds %struct.GPR, %struct.GPR* %11412, i32 0, i32 33
  %11414 = getelementptr inbounds %struct.Reg, %struct.Reg* %11413, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %11414 to i64*
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11416 = getelementptr inbounds %struct.GPR, %struct.GPR* %11415, i32 0, i32 1
  %11417 = getelementptr inbounds %struct.Reg, %struct.Reg* %11416, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %11417 to i64*
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11419 = getelementptr inbounds %struct.GPR, %struct.GPR* %11418, i32 0, i32 15
  %11420 = getelementptr inbounds %struct.Reg, %struct.Reg* %11419, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %11420 to i64*
  %11421 = load i64, i64* %RBP.i218
  %11422 = sub i64 %11421, 388
  %11423 = load i64, i64* %PC.i216
  %11424 = add i64 %11423, 6
  store i64 %11424, i64* %PC.i216
  %11425 = inttoptr i64 %11422 to i32*
  %11426 = load i32, i32* %11425
  %11427 = zext i32 %11426 to i64
  store i64 %11427, i64* %RAX.i217, align 8
  store %struct.Memory* %loadMem_43ae0b, %struct.Memory** %MEMORY
  %loadMem_43ae11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 33
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %11430 to i64*
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11432 = getelementptr inbounds %struct.GPR, %struct.GPR* %11431, i32 0, i32 1
  %11433 = getelementptr inbounds %struct.Reg, %struct.Reg* %11432, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %11433 to i64*
  %11434 = load i64, i64* %RAX.i215
  %11435 = load i64, i64* %PC.i214
  %11436 = add i64 %11435, 3
  store i64 %11436, i64* %PC.i214
  %11437 = trunc i64 %11434 to i32
  %11438 = add i32 1, %11437
  %11439 = zext i32 %11438 to i64
  store i64 %11439, i64* %RAX.i215, align 8
  %11440 = icmp ult i32 %11438, %11437
  %11441 = icmp ult i32 %11438, 1
  %11442 = or i1 %11440, %11441
  %11443 = zext i1 %11442 to i8
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11443, i8* %11444, align 1
  %11445 = and i32 %11438, 255
  %11446 = call i32 @llvm.ctpop.i32(i32 %11445)
  %11447 = trunc i32 %11446 to i8
  %11448 = and i8 %11447, 1
  %11449 = xor i8 %11448, 1
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11449, i8* %11450, align 1
  %11451 = xor i64 1, %11434
  %11452 = trunc i64 %11451 to i32
  %11453 = xor i32 %11452, %11438
  %11454 = lshr i32 %11453, 4
  %11455 = trunc i32 %11454 to i8
  %11456 = and i8 %11455, 1
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11456, i8* %11457, align 1
  %11458 = icmp eq i32 %11438, 0
  %11459 = zext i1 %11458 to i8
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11459, i8* %11460, align 1
  %11461 = lshr i32 %11438, 31
  %11462 = trunc i32 %11461 to i8
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11462, i8* %11463, align 1
  %11464 = lshr i32 %11437, 31
  %11465 = xor i32 %11461, %11464
  %11466 = add i32 %11465, %11461
  %11467 = icmp eq i32 %11466, 2
  %11468 = zext i1 %11467 to i8
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11468, i8* %11469, align 1
  store %struct.Memory* %loadMem_43ae11, %struct.Memory** %MEMORY
  %loadMem_43ae14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11471 = getelementptr inbounds %struct.GPR, %struct.GPR* %11470, i32 0, i32 33
  %11472 = getelementptr inbounds %struct.Reg, %struct.Reg* %11471, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %11472 to i64*
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11474 = getelementptr inbounds %struct.GPR, %struct.GPR* %11473, i32 0, i32 1
  %11475 = getelementptr inbounds %struct.Reg, %struct.Reg* %11474, i32 0, i32 0
  %EAX.i212 = bitcast %union.anon* %11475 to i32*
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11477 = getelementptr inbounds %struct.GPR, %struct.GPR* %11476, i32 0, i32 15
  %11478 = getelementptr inbounds %struct.Reg, %struct.Reg* %11477, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %11478 to i64*
  %11479 = load i64, i64* %RBP.i213
  %11480 = sub i64 %11479, 388
  %11481 = load i32, i32* %EAX.i212
  %11482 = zext i32 %11481 to i64
  %11483 = load i64, i64* %PC.i211
  %11484 = add i64 %11483, 6
  store i64 %11484, i64* %PC.i211
  %11485 = inttoptr i64 %11480 to i32*
  store i32 %11481, i32* %11485
  store %struct.Memory* %loadMem_43ae14, %struct.Memory** %MEMORY
  %loadMem_43ae1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11487 = getelementptr inbounds %struct.GPR, %struct.GPR* %11486, i32 0, i32 33
  %11488 = getelementptr inbounds %struct.Reg, %struct.Reg* %11487, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %11488 to i64*
  %11489 = load i64, i64* %PC.i210
  %11490 = add i64 %11489, -795
  %11491 = load i64, i64* %PC.i210
  %11492 = add i64 %11491, 5
  store i64 %11492, i64* %PC.i210
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11490, i64* %11493, align 8
  store %struct.Memory* %loadMem_43ae1a, %struct.Memory** %MEMORY
  br label %block_.L_43aaff

block_.L_43ae1f:                                  ; preds = %block_.L_43aaff
  %loadMem_43ae1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 33
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %11496 to i64*
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 1
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %11499 to i64*
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 15
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %11502 to i64*
  %11503 = load i64, i64* %RBP.i209
  %11504 = sub i64 %11503, 56
  %11505 = load i64, i64* %PC.i207
  %11506 = add i64 %11505, 4
  store i64 %11506, i64* %PC.i207
  %11507 = inttoptr i64 %11504 to i64*
  %11508 = load i64, i64* %11507
  store i64 %11508, i64* %RAX.i208, align 8
  store %struct.Memory* %loadMem_43ae1f, %struct.Memory** %MEMORY
  %loadMem_43ae23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11510 = getelementptr inbounds %struct.GPR, %struct.GPR* %11509, i32 0, i32 33
  %11511 = getelementptr inbounds %struct.Reg, %struct.Reg* %11510, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %11511 to i64*
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 1
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %11514 to i64*
  %11515 = load i64, i64* %RAX.i206
  %11516 = add i64 %11515, 640
  %11517 = load i64, i64* %PC.i205
  %11518 = add i64 %11517, 7
  store i64 %11518, i64* %PC.i205
  %11519 = inttoptr i64 %11516 to i32*
  %11520 = load i32, i32* %11519
  %11521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11521, align 1
  %11522 = and i32 %11520, 255
  %11523 = call i32 @llvm.ctpop.i32(i32 %11522)
  %11524 = trunc i32 %11523 to i8
  %11525 = and i8 %11524, 1
  %11526 = xor i8 %11525, 1
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11526, i8* %11527, align 1
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11528, align 1
  %11529 = icmp eq i32 %11520, 0
  %11530 = zext i1 %11529 to i8
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11530, i8* %11531, align 1
  %11532 = lshr i32 %11520, 31
  %11533 = trunc i32 %11532 to i8
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11533, i8* %11534, align 1
  %11535 = lshr i32 %11520, 31
  %11536 = xor i32 %11532, %11535
  %11537 = add i32 %11536, %11535
  %11538 = icmp eq i32 %11537, 2
  %11539 = zext i1 %11538 to i8
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11539, i8* %11540, align 1
  store %struct.Memory* %loadMem_43ae23, %struct.Memory** %MEMORY
  %loadMem_43ae2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11542 = getelementptr inbounds %struct.GPR, %struct.GPR* %11541, i32 0, i32 33
  %11543 = getelementptr inbounds %struct.Reg, %struct.Reg* %11542, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %11543 to i64*
  %11544 = load i64, i64* %PC.i204
  %11545 = add i64 %11544, 28
  %11546 = load i64, i64* %PC.i204
  %11547 = add i64 %11546, 6
  %11548 = load i64, i64* %PC.i204
  %11549 = add i64 %11548, 6
  store i64 %11549, i64* %PC.i204
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11551 = load i8, i8* %11550, align 1
  %11552 = icmp ne i8 %11551, 0
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11554 = load i8, i8* %11553, align 1
  %11555 = icmp ne i8 %11554, 0
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11557 = load i8, i8* %11556, align 1
  %11558 = icmp ne i8 %11557, 0
  %11559 = xor i1 %11555, %11558
  %11560 = or i1 %11552, %11559
  %11561 = zext i1 %11560 to i8
  store i8 %11561, i8* %BRANCH_TAKEN, align 1
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11563 = select i1 %11560, i64 %11545, i64 %11547
  store i64 %11563, i64* %11562, align 8
  store %struct.Memory* %loadMem_43ae2a, %struct.Memory** %MEMORY
  %loadBr_43ae2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ae2a = icmp eq i8 %loadBr_43ae2a, 1
  br i1 %cmpBr_43ae2a, label %block_.L_43ae46, label %block_43ae30

block_43ae30:                                     ; preds = %block_.L_43ae1f
  %loadMem_43ae30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11565 = getelementptr inbounds %struct.GPR, %struct.GPR* %11564, i32 0, i32 33
  %11566 = getelementptr inbounds %struct.Reg, %struct.Reg* %11565, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %11566 to i64*
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 1
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %11569 to i64*
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 15
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %11572 to i64*
  %11573 = load i64, i64* %RBP.i203
  %11574 = sub i64 %11573, 56
  %11575 = load i64, i64* %PC.i201
  %11576 = add i64 %11575, 4
  store i64 %11576, i64* %PC.i201
  %11577 = inttoptr i64 %11574 to i64*
  %11578 = load i64, i64* %11577
  store i64 %11578, i64* %RAX.i202, align 8
  store %struct.Memory* %loadMem_43ae30, %struct.Memory** %MEMORY
  %loadMem_43ae34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %11581 to i64*
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11583 = getelementptr inbounds %struct.GPR, %struct.GPR* %11582, i32 0, i32 1
  %11584 = getelementptr inbounds %struct.Reg, %struct.Reg* %11583, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %11584 to i64*
  %11585 = load i64, i64* %RAX.i200
  %11586 = add i64 %11585, 644
  %11587 = load i64, i64* %PC.i199
  %11588 = add i64 %11587, 7
  store i64 %11588, i64* %PC.i199
  %11589 = inttoptr i64 %11586 to i32*
  %11590 = load i32, i32* %11589
  %11591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11591, align 1
  %11592 = and i32 %11590, 255
  %11593 = call i32 @llvm.ctpop.i32(i32 %11592)
  %11594 = trunc i32 %11593 to i8
  %11595 = and i8 %11594, 1
  %11596 = xor i8 %11595, 1
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11596, i8* %11597, align 1
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11598, align 1
  %11599 = icmp eq i32 %11590, 0
  %11600 = zext i1 %11599 to i8
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11600, i8* %11601, align 1
  %11602 = lshr i32 %11590, 31
  %11603 = trunc i32 %11602 to i8
  %11604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11603, i8* %11604, align 1
  %11605 = lshr i32 %11590, 31
  %11606 = xor i32 %11602, %11605
  %11607 = add i32 %11606, %11605
  %11608 = icmp eq i32 %11607, 2
  %11609 = zext i1 %11608 to i8
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11609, i8* %11610, align 1
  store %struct.Memory* %loadMem_43ae34, %struct.Memory** %MEMORY
  %loadMem_43ae3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11612 = getelementptr inbounds %struct.GPR, %struct.GPR* %11611, i32 0, i32 33
  %11613 = getelementptr inbounds %struct.Reg, %struct.Reg* %11612, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %11613 to i64*
  %11614 = load i64, i64* %PC.i198
  %11615 = add i64 %11614, 11
  %11616 = load i64, i64* %PC.i198
  %11617 = add i64 %11616, 6
  %11618 = load i64, i64* %PC.i198
  %11619 = add i64 %11618, 6
  store i64 %11619, i64* %PC.i198
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11621 = load i8, i8* %11620, align 1
  %11622 = icmp ne i8 %11621, 0
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11624 = load i8, i8* %11623, align 1
  %11625 = icmp ne i8 %11624, 0
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11627 = load i8, i8* %11626, align 1
  %11628 = icmp ne i8 %11627, 0
  %11629 = xor i1 %11625, %11628
  %11630 = or i1 %11622, %11629
  %11631 = zext i1 %11630 to i8
  store i8 %11631, i8* %BRANCH_TAKEN, align 1
  %11632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11633 = select i1 %11630, i64 %11615, i64 %11617
  store i64 %11633, i64* %11632, align 8
  store %struct.Memory* %loadMem_43ae3b, %struct.Memory** %MEMORY
  %loadBr_43ae3b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ae3b = icmp eq i8 %loadBr_43ae3b, 1
  br i1 %cmpBr_43ae3b, label %block_.L_43ae46, label %block_43ae41

block_43ae41:                                     ; preds = %block_43ae30
  %loadMem_43ae41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11635 = getelementptr inbounds %struct.GPR, %struct.GPR* %11634, i32 0, i32 33
  %11636 = getelementptr inbounds %struct.Reg, %struct.Reg* %11635, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %11636 to i64*
  %11637 = load i64, i64* %PC.i197
  %11638 = add i64 %11637, 45
  %11639 = load i64, i64* %PC.i197
  %11640 = add i64 %11639, 5
  store i64 %11640, i64* %PC.i197
  %11641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11638, i64* %11641, align 8
  store %struct.Memory* %loadMem_43ae41, %struct.Memory** %MEMORY
  br label %block_.L_43ae6e

block_.L_43ae46:                                  ; preds = %block_43ae30, %block_.L_43ae1f
  %loadMem_43ae46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 33
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %11644 to i64*
  %11645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11646 = getelementptr inbounds %struct.GPR, %struct.GPR* %11645, i32 0, i32 11
  %11647 = getelementptr inbounds %struct.Reg, %struct.Reg* %11646, i32 0, i32 0
  %RDI.i196 = bitcast %union.anon* %11647 to i64*
  %11648 = load i64, i64* %PC.i195
  %11649 = add i64 %11648, 10
  store i64 %11649, i64* %PC.i195
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI.i196, align 8
  store %struct.Memory* %loadMem_43ae46, %struct.Memory** %MEMORY
  %loadMem_43ae50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11651 = getelementptr inbounds %struct.GPR, %struct.GPR* %11650, i32 0, i32 33
  %11652 = getelementptr inbounds %struct.Reg, %struct.Reg* %11651, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %11652 to i64*
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 9
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %RSI.i194 = bitcast %union.anon* %11655 to i64*
  %11656 = load i64, i64* %PC.i193
  %11657 = add i64 %11656, 5
  store i64 %11657, i64* %PC.i193
  store i64 1305, i64* %RSI.i194, align 8
  store %struct.Memory* %loadMem_43ae50, %struct.Memory** %MEMORY
  %loadMem_43ae55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11659 = getelementptr inbounds %struct.GPR, %struct.GPR* %11658, i32 0, i32 33
  %11660 = getelementptr inbounds %struct.Reg, %struct.Reg* %11659, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %11660 to i64*
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 7
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %RDX.i192 = bitcast %union.anon* %11663 to i64*
  %11664 = load i64, i64* %PC.i191
  %11665 = add i64 %11664, 10
  store i64 %11665, i64* %PC.i191
  store i64 ptrtoint (%G__0x57d90a_type* @G__0x57d90a to i64), i64* %RDX.i192, align 8
  store %struct.Memory* %loadMem_43ae55, %struct.Memory** %MEMORY
  %loadMem_43ae5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 33
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %11668 to i64*
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 1
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %11671 to i64*
  %11672 = load i64, i64* %PC.i189
  %11673 = add i64 %11672, 5
  store i64 %11673, i64* %PC.i189
  store i64 4294967295, i64* %RAX.i190, align 8
  store %struct.Memory* %loadMem_43ae5f, %struct.Memory** %MEMORY
  %loadMem_43ae64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11675 = getelementptr inbounds %struct.GPR, %struct.GPR* %11674, i32 0, i32 33
  %11676 = getelementptr inbounds %struct.Reg, %struct.Reg* %11675, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %11676 to i64*
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11678 = getelementptr inbounds %struct.GPR, %struct.GPR* %11677, i32 0, i32 1
  %11679 = getelementptr inbounds %struct.Reg, %struct.Reg* %11678, i32 0, i32 0
  %EAX.i187 = bitcast %union.anon* %11679 to i32*
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 5
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %RCX.i188 = bitcast %union.anon* %11682 to i64*
  %11683 = load i32, i32* %EAX.i187
  %11684 = zext i32 %11683 to i64
  %11685 = load i64, i64* %PC.i186
  %11686 = add i64 %11685, 2
  store i64 %11686, i64* %PC.i186
  %11687 = and i64 %11684, 4294967295
  store i64 %11687, i64* %RCX.i188, align 8
  store %struct.Memory* %loadMem_43ae64, %struct.Memory** %MEMORY
  %loadMem_43ae66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11689 = getelementptr inbounds %struct.GPR, %struct.GPR* %11688, i32 0, i32 33
  %11690 = getelementptr inbounds %struct.Reg, %struct.Reg* %11689, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %11690 to i64*
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11692 = getelementptr inbounds %struct.GPR, %struct.GPR* %11691, i32 0, i32 1
  %11693 = getelementptr inbounds %struct.Reg, %struct.Reg* %11692, i32 0, i32 0
  %EAX.i185 = bitcast %union.anon* %11693 to i32*
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 17
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %11696 to i32*
  %11697 = bitcast i32* %R8D.i to i64*
  %11698 = load i32, i32* %EAX.i185
  %11699 = zext i32 %11698 to i64
  %11700 = load i64, i64* %PC.i184
  %11701 = add i64 %11700, 3
  store i64 %11701, i64* %PC.i184
  %11702 = and i64 %11699, 4294967295
  store i64 %11702, i64* %11697, align 8
  store %struct.Memory* %loadMem_43ae66, %struct.Memory** %MEMORY
  %loadMem1_43ae69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11704 = getelementptr inbounds %struct.GPR, %struct.GPR* %11703, i32 0, i32 33
  %11705 = getelementptr inbounds %struct.Reg, %struct.Reg* %11704, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %11705 to i64*
  %11706 = load i64, i64* %PC.i183
  %11707 = add i64 %11706, 94759
  %11708 = load i64, i64* %PC.i183
  %11709 = add i64 %11708, 5
  %11710 = load i64, i64* %PC.i183
  %11711 = add i64 %11710, 5
  store i64 %11711, i64* %PC.i183
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11713 = load i64, i64* %11712, align 8
  %11714 = add i64 %11713, -8
  %11715 = inttoptr i64 %11714 to i64*
  store i64 %11709, i64* %11715
  store i64 %11714, i64* %11712, align 8
  %11716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11707, i64* %11716, align 8
  store %struct.Memory* %loadMem1_43ae69, %struct.Memory** %MEMORY
  %loadMem2_43ae69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae69 = load i64, i64* %3
  %call2_43ae69 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_43ae69, %struct.Memory* %loadMem2_43ae69)
  store %struct.Memory* %call2_43ae69, %struct.Memory** %MEMORY
  br label %block_.L_43ae6e

block_.L_43ae6e:                                  ; preds = %block_.L_43ae46, %block_43ae41
  %loadMem_43ae6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11718 = getelementptr inbounds %struct.GPR, %struct.GPR* %11717, i32 0, i32 33
  %11719 = getelementptr inbounds %struct.Reg, %struct.Reg* %11718, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %11719 to i64*
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11721 = getelementptr inbounds %struct.GPR, %struct.GPR* %11720, i32 0, i32 1
  %11722 = getelementptr inbounds %struct.Reg, %struct.Reg* %11721, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %11722 to i64*
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 15
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %11725 to i64*
  %11726 = load i64, i64* %RBP.i182
  %11727 = sub i64 %11726, 56
  %11728 = load i64, i64* %PC.i180
  %11729 = add i64 %11728, 4
  store i64 %11729, i64* %PC.i180
  %11730 = inttoptr i64 %11727 to i64*
  %11731 = load i64, i64* %11730
  store i64 %11731, i64* %RAX.i181, align 8
  store %struct.Memory* %loadMem_43ae6e, %struct.Memory** %MEMORY
  %loadMem_43ae72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11733 = getelementptr inbounds %struct.GPR, %struct.GPR* %11732, i32 0, i32 33
  %11734 = getelementptr inbounds %struct.Reg, %struct.Reg* %11733, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %11734 to i64*
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11736 = getelementptr inbounds %struct.GPR, %struct.GPR* %11735, i32 0, i32 1
  %11737 = getelementptr inbounds %struct.Reg, %struct.Reg* %11736, i32 0, i32 0
  %RAX.i178 = bitcast %union.anon* %11737 to i64*
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 5
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %RCX.i179 = bitcast %union.anon* %11740 to i64*
  %11741 = load i64, i64* %RAX.i178
  %11742 = load i64, i64* %PC.i177
  %11743 = add i64 %11742, 2
  store i64 %11743, i64* %PC.i177
  %11744 = inttoptr i64 %11741 to i32*
  %11745 = load i32, i32* %11744
  %11746 = zext i32 %11745 to i64
  store i64 %11746, i64* %RCX.i179, align 8
  store %struct.Memory* %loadMem_43ae72, %struct.Memory** %MEMORY
  %loadMem_43ae74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 33
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %11749 to i64*
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 1
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %11752 to i64*
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11754 = getelementptr inbounds %struct.GPR, %struct.GPR* %11753, i32 0, i32 15
  %11755 = getelementptr inbounds %struct.Reg, %struct.Reg* %11754, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %11755 to i64*
  %11756 = load i64, i64* %RBP.i176
  %11757 = sub i64 %11756, 16
  %11758 = load i64, i64* %PC.i174
  %11759 = add i64 %11758, 4
  store i64 %11759, i64* %PC.i174
  %11760 = inttoptr i64 %11757 to i64*
  %11761 = load i64, i64* %11760
  store i64 %11761, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_43ae74, %struct.Memory** %MEMORY
  %loadMem_43ae78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 33
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %11764 to i64*
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11766 = getelementptr inbounds %struct.GPR, %struct.GPR* %11765, i32 0, i32 5
  %11767 = getelementptr inbounds %struct.Reg, %struct.Reg* %11766, i32 0, i32 0
  %ECX.i172 = bitcast %union.anon* %11767 to i32*
  %11768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11769 = getelementptr inbounds %struct.GPR, %struct.GPR* %11768, i32 0, i32 1
  %11770 = getelementptr inbounds %struct.Reg, %struct.Reg* %11769, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %11770 to i64*
  %11771 = load i64, i64* %RAX.i173
  %11772 = load i32, i32* %ECX.i172
  %11773 = zext i32 %11772 to i64
  %11774 = load i64, i64* %PC.i171
  %11775 = add i64 %11774, 2
  store i64 %11775, i64* %PC.i171
  %11776 = inttoptr i64 %11771 to i32*
  store i32 %11772, i32* %11776
  store %struct.Memory* %loadMem_43ae78, %struct.Memory** %MEMORY
  %loadMem_43ae7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11778 = getelementptr inbounds %struct.GPR, %struct.GPR* %11777, i32 0, i32 33
  %11779 = getelementptr inbounds %struct.Reg, %struct.Reg* %11778, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %11779 to i64*
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11781 = getelementptr inbounds %struct.GPR, %struct.GPR* %11780, i32 0, i32 1
  %11782 = getelementptr inbounds %struct.Reg, %struct.Reg* %11781, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %11782 to i64*
  %11783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11784 = getelementptr inbounds %struct.GPR, %struct.GPR* %11783, i32 0, i32 15
  %11785 = getelementptr inbounds %struct.Reg, %struct.Reg* %11784, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %11785 to i64*
  %11786 = load i64, i64* %RBP.i170
  %11787 = sub i64 %11786, 56
  %11788 = load i64, i64* %PC.i168
  %11789 = add i64 %11788, 4
  store i64 %11789, i64* %PC.i168
  %11790 = inttoptr i64 %11787 to i64*
  %11791 = load i64, i64* %11790
  store i64 %11791, i64* %RAX.i169, align 8
  store %struct.Memory* %loadMem_43ae7a, %struct.Memory** %MEMORY
  %loadMem_43ae7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 33
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %11794 to i64*
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 1
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %RAX.i166 = bitcast %union.anon* %11797 to i64*
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 5
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %RCX.i167 = bitcast %union.anon* %11800 to i64*
  %11801 = load i64, i64* %RAX.i166
  %11802 = add i64 %11801, 320
  %11803 = load i64, i64* %PC.i165
  %11804 = add i64 %11803, 6
  store i64 %11804, i64* %PC.i165
  %11805 = inttoptr i64 %11802 to i32*
  %11806 = load i32, i32* %11805
  %11807 = zext i32 %11806 to i64
  store i64 %11807, i64* %RCX.i167, align 8
  store %struct.Memory* %loadMem_43ae7e, %struct.Memory** %MEMORY
  %loadMem_43ae84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11809 = getelementptr inbounds %struct.GPR, %struct.GPR* %11808, i32 0, i32 33
  %11810 = getelementptr inbounds %struct.Reg, %struct.Reg* %11809, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %11810 to i64*
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11812 = getelementptr inbounds %struct.GPR, %struct.GPR* %11811, i32 0, i32 1
  %11813 = getelementptr inbounds %struct.Reg, %struct.Reg* %11812, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %11813 to i64*
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11815 = getelementptr inbounds %struct.GPR, %struct.GPR* %11814, i32 0, i32 15
  %11816 = getelementptr inbounds %struct.Reg, %struct.Reg* %11815, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %11816 to i64*
  %11817 = load i64, i64* %RBP.i164
  %11818 = sub i64 %11817, 24
  %11819 = load i64, i64* %PC.i162
  %11820 = add i64 %11819, 4
  store i64 %11820, i64* %PC.i162
  %11821 = inttoptr i64 %11818 to i64*
  %11822 = load i64, i64* %11821
  store i64 %11822, i64* %RAX.i163, align 8
  store %struct.Memory* %loadMem_43ae84, %struct.Memory** %MEMORY
  %loadMem_43ae88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 33
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %11825 to i64*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11827 = getelementptr inbounds %struct.GPR, %struct.GPR* %11826, i32 0, i32 5
  %11828 = getelementptr inbounds %struct.Reg, %struct.Reg* %11827, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11828 to i32*
  %11829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11830 = getelementptr inbounds %struct.GPR, %struct.GPR* %11829, i32 0, i32 1
  %11831 = getelementptr inbounds %struct.Reg, %struct.Reg* %11830, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %11831 to i64*
  %11832 = load i64, i64* %RAX.i161
  %11833 = load i32, i32* %ECX.i
  %11834 = zext i32 %11833 to i64
  %11835 = load i64, i64* %PC.i160
  %11836 = add i64 %11835, 2
  store i64 %11836, i64* %PC.i160
  %11837 = inttoptr i64 %11832 to i32*
  store i32 %11833, i32* %11837
  store %struct.Memory* %loadMem_43ae88, %struct.Memory** %MEMORY
  %loadMem_43ae8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11839 = getelementptr inbounds %struct.GPR, %struct.GPR* %11838, i32 0, i32 33
  %11840 = getelementptr inbounds %struct.Reg, %struct.Reg* %11839, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %11840 to i64*
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11842 = getelementptr inbounds %struct.GPR, %struct.GPR* %11841, i32 0, i32 15
  %11843 = getelementptr inbounds %struct.Reg, %struct.Reg* %11842, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %11843 to i64*
  %11844 = load i64, i64* %RBP.i159
  %11845 = sub i64 %11844, 388
  %11846 = load i64, i64* %PC.i158
  %11847 = add i64 %11846, 10
  store i64 %11847, i64* %PC.i158
  %11848 = inttoptr i64 %11845 to i32*
  store i32 0, i32* %11848
  store %struct.Memory* %loadMem_43ae8a, %struct.Memory** %MEMORY
  br label %block_.L_43ae94

block_.L_43ae94:                                  ; preds = %block_.L_43aeef, %block_.L_43ae6e
  %loadMem_43ae94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11850 = getelementptr inbounds %struct.GPR, %struct.GPR* %11849, i32 0, i32 33
  %11851 = getelementptr inbounds %struct.Reg, %struct.Reg* %11850, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %11851 to i64*
  %11852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11853 = getelementptr inbounds %struct.GPR, %struct.GPR* %11852, i32 0, i32 1
  %11854 = getelementptr inbounds %struct.Reg, %struct.Reg* %11853, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %11854 to i64*
  %11855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11856 = getelementptr inbounds %struct.GPR, %struct.GPR* %11855, i32 0, i32 15
  %11857 = getelementptr inbounds %struct.Reg, %struct.Reg* %11856, i32 0, i32 0
  %RBP.i157 = bitcast %union.anon* %11857 to i64*
  %11858 = load i64, i64* %RBP.i157
  %11859 = sub i64 %11858, 388
  %11860 = load i64, i64* %PC.i155
  %11861 = add i64 %11860, 6
  store i64 %11861, i64* %PC.i155
  %11862 = inttoptr i64 %11859 to i32*
  %11863 = load i32, i32* %11862
  %11864 = zext i32 %11863 to i64
  store i64 %11864, i64* %RAX.i156, align 8
  store %struct.Memory* %loadMem_43ae94, %struct.Memory** %MEMORY
  %loadMem_43ae9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11866 = getelementptr inbounds %struct.GPR, %struct.GPR* %11865, i32 0, i32 33
  %11867 = getelementptr inbounds %struct.Reg, %struct.Reg* %11866, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %11867 to i64*
  %11868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11869 = getelementptr inbounds %struct.GPR, %struct.GPR* %11868, i32 0, i32 5
  %11870 = getelementptr inbounds %struct.Reg, %struct.Reg* %11869, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %11870 to i64*
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11872 = getelementptr inbounds %struct.GPR, %struct.GPR* %11871, i32 0, i32 15
  %11873 = getelementptr inbounds %struct.Reg, %struct.Reg* %11872, i32 0, i32 0
  %RBP.i154 = bitcast %union.anon* %11873 to i64*
  %11874 = load i64, i64* %RBP.i154
  %11875 = sub i64 %11874, 56
  %11876 = load i64, i64* %PC.i152
  %11877 = add i64 %11876, 4
  store i64 %11877, i64* %PC.i152
  %11878 = inttoptr i64 %11875 to i64*
  %11879 = load i64, i64* %11878
  store i64 %11879, i64* %RCX.i153, align 8
  store %struct.Memory* %loadMem_43ae9a, %struct.Memory** %MEMORY
  %loadMem_43ae9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 33
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %11882 to i64*
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11884 = getelementptr inbounds %struct.GPR, %struct.GPR* %11883, i32 0, i32 1
  %11885 = getelementptr inbounds %struct.Reg, %struct.Reg* %11884, i32 0, i32 0
  %EAX.i150 = bitcast %union.anon* %11885 to i32*
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 5
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %RCX.i151 = bitcast %union.anon* %11888 to i64*
  %11889 = load i32, i32* %EAX.i150
  %11890 = zext i32 %11889 to i64
  %11891 = load i64, i64* %RCX.i151
  %11892 = add i64 %11891, 644
  %11893 = load i64, i64* %PC.i149
  %11894 = add i64 %11893, 6
  store i64 %11894, i64* %PC.i149
  %11895 = inttoptr i64 %11892 to i32*
  %11896 = load i32, i32* %11895
  %11897 = sub i32 %11889, %11896
  %11898 = icmp ult i32 %11889, %11896
  %11899 = zext i1 %11898 to i8
  %11900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11899, i8* %11900, align 1
  %11901 = and i32 %11897, 255
  %11902 = call i32 @llvm.ctpop.i32(i32 %11901)
  %11903 = trunc i32 %11902 to i8
  %11904 = and i8 %11903, 1
  %11905 = xor i8 %11904, 1
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11905, i8* %11906, align 1
  %11907 = xor i32 %11896, %11889
  %11908 = xor i32 %11907, %11897
  %11909 = lshr i32 %11908, 4
  %11910 = trunc i32 %11909 to i8
  %11911 = and i8 %11910, 1
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11911, i8* %11912, align 1
  %11913 = icmp eq i32 %11897, 0
  %11914 = zext i1 %11913 to i8
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11914, i8* %11915, align 1
  %11916 = lshr i32 %11897, 31
  %11917 = trunc i32 %11916 to i8
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11917, i8* %11918, align 1
  %11919 = lshr i32 %11889, 31
  %11920 = lshr i32 %11896, 31
  %11921 = xor i32 %11920, %11919
  %11922 = xor i32 %11916, %11919
  %11923 = add i32 %11922, %11921
  %11924 = icmp eq i32 %11923, 2
  %11925 = zext i1 %11924 to i8
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11925, i8* %11926, align 1
  store %struct.Memory* %loadMem_43ae9e, %struct.Memory** %MEMORY
  %loadMem_43aea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11928 = getelementptr inbounds %struct.GPR, %struct.GPR* %11927, i32 0, i32 33
  %11929 = getelementptr inbounds %struct.Reg, %struct.Reg* %11928, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %11929 to i64*
  %11930 = load i64, i64* %PC.i148
  %11931 = add i64 %11930, 95
  %11932 = load i64, i64* %PC.i148
  %11933 = add i64 %11932, 6
  %11934 = load i64, i64* %PC.i148
  %11935 = add i64 %11934, 6
  store i64 %11935, i64* %PC.i148
  %11936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11937 = load i8, i8* %11936, align 1
  %11938 = icmp ne i8 %11937, 0
  %11939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11940 = load i8, i8* %11939, align 1
  %11941 = icmp ne i8 %11940, 0
  %11942 = xor i1 %11938, %11941
  %11943 = xor i1 %11942, true
  %11944 = zext i1 %11943 to i8
  store i8 %11944, i8* %BRANCH_TAKEN, align 1
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11946 = select i1 %11942, i64 %11933, i64 %11931
  store i64 %11946, i64* %11945, align 8
  store %struct.Memory* %loadMem_43aea4, %struct.Memory** %MEMORY
  %loadBr_43aea4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aea4 = icmp eq i8 %loadBr_43aea4, 1
  br i1 %cmpBr_43aea4, label %block_.L_43af03, label %block_43aeaa

block_43aeaa:                                     ; preds = %block_.L_43ae94
  %loadMem_43aeaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 33
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %11949 to i64*
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11951 = getelementptr inbounds %struct.GPR, %struct.GPR* %11950, i32 0, i32 1
  %11952 = getelementptr inbounds %struct.Reg, %struct.Reg* %11951, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %11952 to i64*
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 15
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %11955 to i64*
  %11956 = load i64, i64* %RBP.i147
  %11957 = sub i64 %11956, 56
  %11958 = load i64, i64* %PC.i145
  %11959 = add i64 %11958, 4
  store i64 %11959, i64* %PC.i145
  %11960 = inttoptr i64 %11957 to i64*
  %11961 = load i64, i64* %11960
  store i64 %11961, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_43aeaa, %struct.Memory** %MEMORY
  %loadMem_43aeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11963 = getelementptr inbounds %struct.GPR, %struct.GPR* %11962, i32 0, i32 33
  %11964 = getelementptr inbounds %struct.Reg, %struct.Reg* %11963, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %11964 to i64*
  %11965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11966 = getelementptr inbounds %struct.GPR, %struct.GPR* %11965, i32 0, i32 5
  %11967 = getelementptr inbounds %struct.Reg, %struct.Reg* %11966, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %11967 to i64*
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11969 = getelementptr inbounds %struct.GPR, %struct.GPR* %11968, i32 0, i32 15
  %11970 = getelementptr inbounds %struct.Reg, %struct.Reg* %11969, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %11970 to i64*
  %11971 = load i64, i64* %RBP.i144
  %11972 = sub i64 %11971, 388
  %11973 = load i64, i64* %PC.i142
  %11974 = add i64 %11973, 7
  store i64 %11974, i64* %PC.i142
  %11975 = inttoptr i64 %11972 to i32*
  %11976 = load i32, i32* %11975
  %11977 = sext i32 %11976 to i64
  store i64 %11977, i64* %RCX.i143, align 8
  store %struct.Memory* %loadMem_43aeae, %struct.Memory** %MEMORY
  %loadMem_43aeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11979 = getelementptr inbounds %struct.GPR, %struct.GPR* %11978, i32 0, i32 33
  %11980 = getelementptr inbounds %struct.Reg, %struct.Reg* %11979, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %11980 to i64*
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11982 = getelementptr inbounds %struct.GPR, %struct.GPR* %11981, i32 0, i32 1
  %11983 = getelementptr inbounds %struct.Reg, %struct.Reg* %11982, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %11983 to i64*
  %11984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11985 = getelementptr inbounds %struct.GPR, %struct.GPR* %11984, i32 0, i32 5
  %11986 = getelementptr inbounds %struct.Reg, %struct.Reg* %11985, i32 0, i32 0
  %RCX.i140 = bitcast %union.anon* %11986 to i64*
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11988 = getelementptr inbounds %struct.GPR, %struct.GPR* %11987, i32 0, i32 11
  %11989 = getelementptr inbounds %struct.Reg, %struct.Reg* %11988, i32 0, i32 0
  %RDI.i141 = bitcast %union.anon* %11989 to i64*
  %11990 = load i64, i64* %RAX.i139
  %11991 = load i64, i64* %RCX.i140
  %11992 = mul i64 %11991, 4
  %11993 = add i64 %11990, 320
  %11994 = add i64 %11993, %11992
  %11995 = load i64, i64* %PC.i138
  %11996 = add i64 %11995, 7
  store i64 %11996, i64* %PC.i138
  %11997 = inttoptr i64 %11994 to i32*
  %11998 = load i32, i32* %11997
  %11999 = zext i32 %11998 to i64
  store i64 %11999, i64* %RDI.i141, align 8
  store %struct.Memory* %loadMem_43aeb5, %struct.Memory** %MEMORY
  %loadMem_43aebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12001 = getelementptr inbounds %struct.GPR, %struct.GPR* %12000, i32 0, i32 33
  %12002 = getelementptr inbounds %struct.Reg, %struct.Reg* %12001, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %12002 to i64*
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12004 = getelementptr inbounds %struct.GPR, %struct.GPR* %12003, i32 0, i32 9
  %12005 = getelementptr inbounds %struct.Reg, %struct.Reg* %12004, i32 0, i32 0
  %RSI.i136 = bitcast %union.anon* %12005 to i64*
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12007 = getelementptr inbounds %struct.GPR, %struct.GPR* %12006, i32 0, i32 15
  %12008 = getelementptr inbounds %struct.Reg, %struct.Reg* %12007, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %12008 to i64*
  %12009 = load i64, i64* %RBP.i137
  %12010 = sub i64 %12009, 68
  %12011 = load i64, i64* %PC.i135
  %12012 = add i64 %12011, 3
  store i64 %12012, i64* %PC.i135
  %12013 = inttoptr i64 %12010 to i32*
  %12014 = load i32, i32* %12013
  %12015 = zext i32 %12014 to i64
  store i64 %12015, i64* %RSI.i136, align 8
  store %struct.Memory* %loadMem_43aebc, %struct.Memory** %MEMORY
  %loadMem1_43aebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12017 = getelementptr inbounds %struct.GPR, %struct.GPR* %12016, i32 0, i32 33
  %12018 = getelementptr inbounds %struct.Reg, %struct.Reg* %12017, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %12018 to i64*
  %12019 = load i64, i64* %PC.i134
  %12020 = add i64 %12019, 200049
  %12021 = load i64, i64* %PC.i134
  %12022 = add i64 %12021, 5
  %12023 = load i64, i64* %PC.i134
  %12024 = add i64 %12023, 5
  store i64 %12024, i64* %PC.i134
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12026 = load i64, i64* %12025, align 8
  %12027 = add i64 %12026, -8
  %12028 = inttoptr i64 %12027 to i64*
  store i64 %12022, i64* %12028
  store i64 %12027, i64* %12025, align 8
  %12029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12020, i64* %12029, align 8
  store %struct.Memory* %loadMem1_43aebf, %struct.Memory** %MEMORY
  %loadMem2_43aebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aebf = load i64, i64* %3
  %call2_43aebf = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64 %loadPC_43aebf, %struct.Memory* %loadMem2_43aebf)
  store %struct.Memory* %call2_43aebf, %struct.Memory** %MEMORY
  %loadMem_43aec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12031 = getelementptr inbounds %struct.GPR, %struct.GPR* %12030, i32 0, i32 33
  %12032 = getelementptr inbounds %struct.Reg, %struct.Reg* %12031, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %12032 to i64*
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12034 = getelementptr inbounds %struct.GPR, %struct.GPR* %12033, i32 0, i32 1
  %12035 = getelementptr inbounds %struct.Reg, %struct.Reg* %12034, i32 0, i32 0
  %EAX.i133 = bitcast %union.anon* %12035 to i32*
  %12036 = load i32, i32* %EAX.i133
  %12037 = zext i32 %12036 to i64
  %12038 = load i64, i64* %PC.i132
  %12039 = add i64 %12038, 3
  store i64 %12039, i64* %PC.i132
  %12040 = sub i32 %12036, 5
  %12041 = icmp ult i32 %12036, 5
  %12042 = zext i1 %12041 to i8
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12042, i8* %12043, align 1
  %12044 = and i32 %12040, 255
  %12045 = call i32 @llvm.ctpop.i32(i32 %12044)
  %12046 = trunc i32 %12045 to i8
  %12047 = and i8 %12046, 1
  %12048 = xor i8 %12047, 1
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12048, i8* %12049, align 1
  %12050 = xor i64 5, %12037
  %12051 = trunc i64 %12050 to i32
  %12052 = xor i32 %12051, %12040
  %12053 = lshr i32 %12052, 4
  %12054 = trunc i32 %12053 to i8
  %12055 = and i8 %12054, 1
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12055, i8* %12056, align 1
  %12057 = icmp eq i32 %12040, 0
  %12058 = zext i1 %12057 to i8
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12058, i8* %12059, align 1
  %12060 = lshr i32 %12040, 31
  %12061 = trunc i32 %12060 to i8
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12061, i8* %12062, align 1
  %12063 = lshr i32 %12036, 31
  %12064 = xor i32 %12060, %12063
  %12065 = add i32 %12064, %12063
  %12066 = icmp eq i32 %12065, 2
  %12067 = zext i1 %12066 to i8
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12067, i8* %12068, align 1
  store %struct.Memory* %loadMem_43aec4, %struct.Memory** %MEMORY
  %loadMem_43aec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 33
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %12071 to i64*
  %12072 = load i64, i64* %PC.i131
  %12073 = add i64 %12072, 35
  %12074 = load i64, i64* %PC.i131
  %12075 = add i64 %12074, 6
  %12076 = load i64, i64* %PC.i131
  %12077 = add i64 %12076, 6
  store i64 %12077, i64* %PC.i131
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12079 = load i8, i8* %12078, align 1
  %12080 = icmp eq i8 %12079, 0
  %12081 = zext i1 %12080 to i8
  store i8 %12081, i8* %BRANCH_TAKEN, align 1
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12083 = select i1 %12080, i64 %12073, i64 %12075
  store i64 %12083, i64* %12082, align 8
  store %struct.Memory* %loadMem_43aec7, %struct.Memory** %MEMORY
  %loadBr_43aec7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aec7 = icmp eq i8 %loadBr_43aec7, 1
  br i1 %cmpBr_43aec7, label %block_.L_43aeea, label %block_43aecd

block_43aecd:                                     ; preds = %block_43aeaa
  %loadMem_43aecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12085 = getelementptr inbounds %struct.GPR, %struct.GPR* %12084, i32 0, i32 33
  %12086 = getelementptr inbounds %struct.Reg, %struct.Reg* %12085, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %12086 to i64*
  %12087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12088 = getelementptr inbounds %struct.GPR, %struct.GPR* %12087, i32 0, i32 1
  %12089 = getelementptr inbounds %struct.Reg, %struct.Reg* %12088, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %12089 to i64*
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12091 = getelementptr inbounds %struct.GPR, %struct.GPR* %12090, i32 0, i32 15
  %12092 = getelementptr inbounds %struct.Reg, %struct.Reg* %12091, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %12092 to i64*
  %12093 = load i64, i64* %RBP.i130
  %12094 = sub i64 %12093, 56
  %12095 = load i64, i64* %PC.i128
  %12096 = add i64 %12095, 4
  store i64 %12096, i64* %PC.i128
  %12097 = inttoptr i64 %12094 to i64*
  %12098 = load i64, i64* %12097
  store i64 %12098, i64* %RAX.i129, align 8
  store %struct.Memory* %loadMem_43aecd, %struct.Memory** %MEMORY
  %loadMem_43aed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12100 = getelementptr inbounds %struct.GPR, %struct.GPR* %12099, i32 0, i32 33
  %12101 = getelementptr inbounds %struct.Reg, %struct.Reg* %12100, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %12101 to i64*
  %12102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12103 = getelementptr inbounds %struct.GPR, %struct.GPR* %12102, i32 0, i32 5
  %12104 = getelementptr inbounds %struct.Reg, %struct.Reg* %12103, i32 0, i32 0
  %RCX.i126 = bitcast %union.anon* %12104 to i64*
  %12105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12106 = getelementptr inbounds %struct.GPR, %struct.GPR* %12105, i32 0, i32 15
  %12107 = getelementptr inbounds %struct.Reg, %struct.Reg* %12106, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %12107 to i64*
  %12108 = load i64, i64* %RBP.i127
  %12109 = sub i64 %12108, 388
  %12110 = load i64, i64* %PC.i125
  %12111 = add i64 %12110, 7
  store i64 %12111, i64* %PC.i125
  %12112 = inttoptr i64 %12109 to i32*
  %12113 = load i32, i32* %12112
  %12114 = sext i32 %12113 to i64
  store i64 %12114, i64* %RCX.i126, align 8
  store %struct.Memory* %loadMem_43aed1, %struct.Memory** %MEMORY
  %loadMem_43aed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12116 = getelementptr inbounds %struct.GPR, %struct.GPR* %12115, i32 0, i32 33
  %12117 = getelementptr inbounds %struct.Reg, %struct.Reg* %12116, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %12117 to i64*
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12119 = getelementptr inbounds %struct.GPR, %struct.GPR* %12118, i32 0, i32 1
  %12120 = getelementptr inbounds %struct.Reg, %struct.Reg* %12119, i32 0, i32 0
  %RAX.i122 = bitcast %union.anon* %12120 to i64*
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12122 = getelementptr inbounds %struct.GPR, %struct.GPR* %12121, i32 0, i32 5
  %12123 = getelementptr inbounds %struct.Reg, %struct.Reg* %12122, i32 0, i32 0
  %RCX.i123 = bitcast %union.anon* %12123 to i64*
  %12124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12125 = getelementptr inbounds %struct.GPR, %struct.GPR* %12124, i32 0, i32 7
  %12126 = getelementptr inbounds %struct.Reg, %struct.Reg* %12125, i32 0, i32 0
  %RDX.i124 = bitcast %union.anon* %12126 to i64*
  %12127 = load i64, i64* %RAX.i122
  %12128 = load i64, i64* %RCX.i123
  %12129 = mul i64 %12128, 4
  %12130 = add i64 %12127, 320
  %12131 = add i64 %12130, %12129
  %12132 = load i64, i64* %PC.i121
  %12133 = add i64 %12132, 7
  store i64 %12133, i64* %PC.i121
  %12134 = inttoptr i64 %12131 to i32*
  %12135 = load i32, i32* %12134
  %12136 = zext i32 %12135 to i64
  store i64 %12136, i64* %RDX.i124, align 8
  store %struct.Memory* %loadMem_43aed8, %struct.Memory** %MEMORY
  %loadMem_43aedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12138 = getelementptr inbounds %struct.GPR, %struct.GPR* %12137, i32 0, i32 33
  %12139 = getelementptr inbounds %struct.Reg, %struct.Reg* %12138, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %12139 to i64*
  %12140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12141 = getelementptr inbounds %struct.GPR, %struct.GPR* %12140, i32 0, i32 1
  %12142 = getelementptr inbounds %struct.Reg, %struct.Reg* %12141, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %12142 to i64*
  %12143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12144 = getelementptr inbounds %struct.GPR, %struct.GPR* %12143, i32 0, i32 15
  %12145 = getelementptr inbounds %struct.Reg, %struct.Reg* %12144, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %12145 to i64*
  %12146 = load i64, i64* %RBP.i120
  %12147 = sub i64 %12146, 24
  %12148 = load i64, i64* %PC.i118
  %12149 = add i64 %12148, 4
  store i64 %12149, i64* %PC.i118
  %12150 = inttoptr i64 %12147 to i64*
  %12151 = load i64, i64* %12150
  store i64 %12151, i64* %RAX.i119, align 8
  store %struct.Memory* %loadMem_43aedf, %struct.Memory** %MEMORY
  %loadMem_43aee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12153 = getelementptr inbounds %struct.GPR, %struct.GPR* %12152, i32 0, i32 33
  %12154 = getelementptr inbounds %struct.Reg, %struct.Reg* %12153, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %12154 to i64*
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12156 = getelementptr inbounds %struct.GPR, %struct.GPR* %12155, i32 0, i32 7
  %12157 = getelementptr inbounds %struct.Reg, %struct.Reg* %12156, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %12157 to i32*
  %12158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12159 = getelementptr inbounds %struct.GPR, %struct.GPR* %12158, i32 0, i32 1
  %12160 = getelementptr inbounds %struct.Reg, %struct.Reg* %12159, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %12160 to i64*
  %12161 = load i64, i64* %RAX.i117
  %12162 = load i32, i32* %EDX.i
  %12163 = zext i32 %12162 to i64
  %12164 = load i64, i64* %PC.i116
  %12165 = add i64 %12164, 2
  store i64 %12165, i64* %PC.i116
  %12166 = inttoptr i64 %12161 to i32*
  store i32 %12162, i32* %12166
  store %struct.Memory* %loadMem_43aee3, %struct.Memory** %MEMORY
  %loadMem_43aee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12168 = getelementptr inbounds %struct.GPR, %struct.GPR* %12167, i32 0, i32 33
  %12169 = getelementptr inbounds %struct.Reg, %struct.Reg* %12168, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %12169 to i64*
  %12170 = load i64, i64* %PC.i115
  %12171 = add i64 %12170, 30
  %12172 = load i64, i64* %PC.i115
  %12173 = add i64 %12172, 5
  store i64 %12173, i64* %PC.i115
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12171, i64* %12174, align 8
  store %struct.Memory* %loadMem_43aee5, %struct.Memory** %MEMORY
  br label %block_.L_43af03

block_.L_43aeea:                                  ; preds = %block_43aeaa
  %loadMem_43aeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12176 = getelementptr inbounds %struct.GPR, %struct.GPR* %12175, i32 0, i32 33
  %12177 = getelementptr inbounds %struct.Reg, %struct.Reg* %12176, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %12177 to i64*
  %12178 = load i64, i64* %PC.i114
  %12179 = add i64 %12178, 5
  %12180 = load i64, i64* %PC.i114
  %12181 = add i64 %12180, 5
  store i64 %12181, i64* %PC.i114
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12179, i64* %12182, align 8
  store %struct.Memory* %loadMem_43aeea, %struct.Memory** %MEMORY
  br label %block_.L_43aeef

block_.L_43aeef:                                  ; preds = %block_.L_43aeea
  %loadMem_43aeef = load %struct.Memory*, %struct.Memory** %MEMORY
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12184 = getelementptr inbounds %struct.GPR, %struct.GPR* %12183, i32 0, i32 33
  %12185 = getelementptr inbounds %struct.Reg, %struct.Reg* %12184, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %12185 to i64*
  %12186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12187 = getelementptr inbounds %struct.GPR, %struct.GPR* %12186, i32 0, i32 1
  %12188 = getelementptr inbounds %struct.Reg, %struct.Reg* %12187, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %12188 to i64*
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12190 = getelementptr inbounds %struct.GPR, %struct.GPR* %12189, i32 0, i32 15
  %12191 = getelementptr inbounds %struct.Reg, %struct.Reg* %12190, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %12191 to i64*
  %12192 = load i64, i64* %RBP.i113
  %12193 = sub i64 %12192, 388
  %12194 = load i64, i64* %PC.i111
  %12195 = add i64 %12194, 6
  store i64 %12195, i64* %PC.i111
  %12196 = inttoptr i64 %12193 to i32*
  %12197 = load i32, i32* %12196
  %12198 = zext i32 %12197 to i64
  store i64 %12198, i64* %RAX.i112, align 8
  store %struct.Memory* %loadMem_43aeef, %struct.Memory** %MEMORY
  %loadMem_43aef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12200 = getelementptr inbounds %struct.GPR, %struct.GPR* %12199, i32 0, i32 33
  %12201 = getelementptr inbounds %struct.Reg, %struct.Reg* %12200, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %12201 to i64*
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 1
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %RAX.i110 = bitcast %union.anon* %12204 to i64*
  %12205 = load i64, i64* %RAX.i110
  %12206 = load i64, i64* %PC.i109
  %12207 = add i64 %12206, 3
  store i64 %12207, i64* %PC.i109
  %12208 = trunc i64 %12205 to i32
  %12209 = add i32 1, %12208
  %12210 = zext i32 %12209 to i64
  store i64 %12210, i64* %RAX.i110, align 8
  %12211 = icmp ult i32 %12209, %12208
  %12212 = icmp ult i32 %12209, 1
  %12213 = or i1 %12211, %12212
  %12214 = zext i1 %12213 to i8
  %12215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12214, i8* %12215, align 1
  %12216 = and i32 %12209, 255
  %12217 = call i32 @llvm.ctpop.i32(i32 %12216)
  %12218 = trunc i32 %12217 to i8
  %12219 = and i8 %12218, 1
  %12220 = xor i8 %12219, 1
  %12221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12220, i8* %12221, align 1
  %12222 = xor i64 1, %12205
  %12223 = trunc i64 %12222 to i32
  %12224 = xor i32 %12223, %12209
  %12225 = lshr i32 %12224, 4
  %12226 = trunc i32 %12225 to i8
  %12227 = and i8 %12226, 1
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12227, i8* %12228, align 1
  %12229 = icmp eq i32 %12209, 0
  %12230 = zext i1 %12229 to i8
  %12231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12230, i8* %12231, align 1
  %12232 = lshr i32 %12209, 31
  %12233 = trunc i32 %12232 to i8
  %12234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12233, i8* %12234, align 1
  %12235 = lshr i32 %12208, 31
  %12236 = xor i32 %12232, %12235
  %12237 = add i32 %12236, %12232
  %12238 = icmp eq i32 %12237, 2
  %12239 = zext i1 %12238 to i8
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12239, i8* %12240, align 1
  store %struct.Memory* %loadMem_43aef5, %struct.Memory** %MEMORY
  %loadMem_43aef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12242 = getelementptr inbounds %struct.GPR, %struct.GPR* %12241, i32 0, i32 33
  %12243 = getelementptr inbounds %struct.Reg, %struct.Reg* %12242, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %12243 to i64*
  %12244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12245 = getelementptr inbounds %struct.GPR, %struct.GPR* %12244, i32 0, i32 1
  %12246 = getelementptr inbounds %struct.Reg, %struct.Reg* %12245, i32 0, i32 0
  %EAX.i107 = bitcast %union.anon* %12246 to i32*
  %12247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12248 = getelementptr inbounds %struct.GPR, %struct.GPR* %12247, i32 0, i32 15
  %12249 = getelementptr inbounds %struct.Reg, %struct.Reg* %12248, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %12249 to i64*
  %12250 = load i64, i64* %RBP.i108
  %12251 = sub i64 %12250, 388
  %12252 = load i32, i32* %EAX.i107
  %12253 = zext i32 %12252 to i64
  %12254 = load i64, i64* %PC.i106
  %12255 = add i64 %12254, 6
  store i64 %12255, i64* %PC.i106
  %12256 = inttoptr i64 %12251 to i32*
  store i32 %12252, i32* %12256
  store %struct.Memory* %loadMem_43aef8, %struct.Memory** %MEMORY
  %loadMem_43aefe = load %struct.Memory*, %struct.Memory** %MEMORY
  %12257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12258 = getelementptr inbounds %struct.GPR, %struct.GPR* %12257, i32 0, i32 33
  %12259 = getelementptr inbounds %struct.Reg, %struct.Reg* %12258, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %12259 to i64*
  %12260 = load i64, i64* %PC.i105
  %12261 = add i64 %12260, -106
  %12262 = load i64, i64* %PC.i105
  %12263 = add i64 %12262, 5
  store i64 %12263, i64* %PC.i105
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12261, i64* %12264, align 8
  store %struct.Memory* %loadMem_43aefe, %struct.Memory** %MEMORY
  br label %block_.L_43ae94

block_.L_43af03:                                  ; preds = %block_43aecd, %block_.L_43ae94
  %loadMem_43af03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12266 = getelementptr inbounds %struct.GPR, %struct.GPR* %12265, i32 0, i32 33
  %12267 = getelementptr inbounds %struct.Reg, %struct.Reg* %12266, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %12267 to i64*
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12269 = getelementptr inbounds %struct.GPR, %struct.GPR* %12268, i32 0, i32 1
  %12270 = getelementptr inbounds %struct.Reg, %struct.Reg* %12269, i32 0, i32 0
  %RAX.i104 = bitcast %union.anon* %12270 to i64*
  %12271 = load i64, i64* %PC.i103
  %12272 = add i64 %12271, 7
  store i64 %12272, i64* %PC.i103
  %12273 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12274 = zext i32 %12273 to i64
  store i64 %12274, i64* %RAX.i104, align 8
  store %struct.Memory* %loadMem_43af03, %struct.Memory** %MEMORY
  %loadMem_43af0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12276 = getelementptr inbounds %struct.GPR, %struct.GPR* %12275, i32 0, i32 33
  %12277 = getelementptr inbounds %struct.Reg, %struct.Reg* %12276, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %12277 to i64*
  %12278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12279 = getelementptr inbounds %struct.GPR, %struct.GPR* %12278, i32 0, i32 1
  %12280 = getelementptr inbounds %struct.Reg, %struct.Reg* %12279, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %12280 to i64*
  %12281 = load i64, i64* %RAX.i102
  %12282 = load i64, i64* %PC.i101
  %12283 = add i64 %12282, 3
  store i64 %12283, i64* %PC.i101
  %12284 = and i64 2, %12281
  %12285 = trunc i64 %12284 to i32
  store i64 %12284, i64* %RAX.i102, align 8
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12286, align 1
  %12287 = and i32 %12285, 255
  %12288 = call i32 @llvm.ctpop.i32(i32 %12287)
  %12289 = trunc i32 %12288 to i8
  %12290 = and i8 %12289, 1
  %12291 = xor i8 %12290, 1
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12291, i8* %12292, align 1
  %12293 = icmp eq i32 %12285, 0
  %12294 = zext i1 %12293 to i8
  %12295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12294, i8* %12295, align 1
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12296, align 1
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12297, align 1
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12298, align 1
  store %struct.Memory* %loadMem_43af0a, %struct.Memory** %MEMORY
  %loadMem_43af0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12300 = getelementptr inbounds %struct.GPR, %struct.GPR* %12299, i32 0, i32 33
  %12301 = getelementptr inbounds %struct.Reg, %struct.Reg* %12300, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %12301 to i64*
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12303 = getelementptr inbounds %struct.GPR, %struct.GPR* %12302, i32 0, i32 1
  %12304 = getelementptr inbounds %struct.Reg, %struct.Reg* %12303, i32 0, i32 0
  %EAX.i100 = bitcast %union.anon* %12304 to i32*
  %12305 = load i32, i32* %EAX.i100
  %12306 = zext i32 %12305 to i64
  %12307 = load i64, i64* %PC.i99
  %12308 = add i64 %12307, 3
  store i64 %12308, i64* %PC.i99
  %12309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12309, align 1
  %12310 = and i32 %12305, 255
  %12311 = call i32 @llvm.ctpop.i32(i32 %12310)
  %12312 = trunc i32 %12311 to i8
  %12313 = and i8 %12312, 1
  %12314 = xor i8 %12313, 1
  %12315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12314, i8* %12315, align 1
  %12316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12316, align 1
  %12317 = icmp eq i32 %12305, 0
  %12318 = zext i1 %12317 to i8
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12318, i8* %12319, align 1
  %12320 = lshr i32 %12305, 31
  %12321 = trunc i32 %12320 to i8
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12321, i8* %12322, align 1
  %12323 = lshr i32 %12305, 31
  %12324 = xor i32 %12320, %12323
  %12325 = add i32 %12324, %12323
  %12326 = icmp eq i32 %12325, 2
  %12327 = zext i1 %12326 to i8
  %12328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12327, i8* %12328, align 1
  store %struct.Memory* %loadMem_43af0d, %struct.Memory** %MEMORY
  %loadMem_43af10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 33
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %12331 to i64*
  %12332 = load i64, i64* %PC.i98
  %12333 = add i64 %12332, 11
  %12334 = load i64, i64* %PC.i98
  %12335 = add i64 %12334, 6
  %12336 = load i64, i64* %PC.i98
  %12337 = add i64 %12336, 6
  store i64 %12337, i64* %PC.i98
  %12338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12339 = load i8, i8* %12338, align 1
  %12340 = icmp eq i8 %12339, 0
  %12341 = zext i1 %12340 to i8
  store i8 %12341, i8* %BRANCH_TAKEN, align 1
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12343 = select i1 %12340, i64 %12333, i64 %12335
  store i64 %12343, i64* %12342, align 8
  store %struct.Memory* %loadMem_43af10, %struct.Memory** %MEMORY
  %loadBr_43af10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af10 = icmp eq i8 %loadBr_43af10, 1
  br i1 %cmpBr_43af10, label %block_.L_43af1b, label %block_43af16

block_43af16:                                     ; preds = %block_.L_43af03
  %loadMem_43af16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12345 = getelementptr inbounds %struct.GPR, %struct.GPR* %12344, i32 0, i32 33
  %12346 = getelementptr inbounds %struct.Reg, %struct.Reg* %12345, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %12346 to i64*
  %12347 = load i64, i64* %PC.i97
  %12348 = add i64 %12347, 40
  %12349 = load i64, i64* %PC.i97
  %12350 = add i64 %12349, 5
  store i64 %12350, i64* %PC.i97
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12348, i64* %12351, align 8
  store %struct.Memory* %loadMem_43af16, %struct.Memory** %MEMORY
  br label %block_.L_43af3e

block_.L_43af1b:                                  ; preds = %block_.L_43af03
  %loadMem_43af1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12353 = getelementptr inbounds %struct.GPR, %struct.GPR* %12352, i32 0, i32 33
  %12354 = getelementptr inbounds %struct.Reg, %struct.Reg* %12353, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %12354 to i64*
  %12355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12356 = getelementptr inbounds %struct.GPR, %struct.GPR* %12355, i32 0, i32 11
  %12357 = getelementptr inbounds %struct.Reg, %struct.Reg* %12356, i32 0, i32 0
  %RDI.i96 = bitcast %union.anon* %12357 to i64*
  %12358 = load i64, i64* %PC.i95
  %12359 = add i64 %12358, 10
  store i64 %12359, i64* %PC.i95
  store i64 ptrtoint (%G__0x57d936_type* @G__0x57d936 to i64), i64* %RDI.i96, align 8
  store %struct.Memory* %loadMem_43af1b, %struct.Memory** %MEMORY
  %loadMem_43af25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12361 = getelementptr inbounds %struct.GPR, %struct.GPR* %12360, i32 0, i32 33
  %12362 = getelementptr inbounds %struct.Reg, %struct.Reg* %12361, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %12362 to i64*
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12364 = getelementptr inbounds %struct.GPR, %struct.GPR* %12363, i32 0, i32 1
  %12365 = getelementptr inbounds %struct.Reg, %struct.Reg* %12364, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %12365 to i64*
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12367 = getelementptr inbounds %struct.GPR, %struct.GPR* %12366, i32 0, i32 15
  %12368 = getelementptr inbounds %struct.Reg, %struct.Reg* %12367, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %12368 to i64*
  %12369 = load i64, i64* %RBP.i94
  %12370 = sub i64 %12369, 16
  %12371 = load i64, i64* %PC.i92
  %12372 = add i64 %12371, 4
  store i64 %12372, i64* %PC.i92
  %12373 = inttoptr i64 %12370 to i64*
  %12374 = load i64, i64* %12373
  store i64 %12374, i64* %RAX.i93, align 8
  store %struct.Memory* %loadMem_43af25, %struct.Memory** %MEMORY
  %loadMem_43af29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12376 = getelementptr inbounds %struct.GPR, %struct.GPR* %12375, i32 0, i32 33
  %12377 = getelementptr inbounds %struct.Reg, %struct.Reg* %12376, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %12377 to i64*
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12379 = getelementptr inbounds %struct.GPR, %struct.GPR* %12378, i32 0, i32 1
  %12380 = getelementptr inbounds %struct.Reg, %struct.Reg* %12379, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %12380 to i64*
  %12381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12382 = getelementptr inbounds %struct.GPR, %struct.GPR* %12381, i32 0, i32 9
  %12383 = getelementptr inbounds %struct.Reg, %struct.Reg* %12382, i32 0, i32 0
  %RSI.i91 = bitcast %union.anon* %12383 to i64*
  %12384 = load i64, i64* %RAX.i90
  %12385 = load i64, i64* %PC.i89
  %12386 = add i64 %12385, 2
  store i64 %12386, i64* %PC.i89
  %12387 = inttoptr i64 %12384 to i32*
  %12388 = load i32, i32* %12387
  %12389 = zext i32 %12388 to i64
  store i64 %12389, i64* %RSI.i91, align 8
  store %struct.Memory* %loadMem_43af29, %struct.Memory** %MEMORY
  %loadMem_43af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12391 = getelementptr inbounds %struct.GPR, %struct.GPR* %12390, i32 0, i32 33
  %12392 = getelementptr inbounds %struct.Reg, %struct.Reg* %12391, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %12392 to i64*
  %12393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12394 = getelementptr inbounds %struct.GPR, %struct.GPR* %12393, i32 0, i32 1
  %12395 = getelementptr inbounds %struct.Reg, %struct.Reg* %12394, i32 0, i32 0
  %RAX.i87 = bitcast %union.anon* %12395 to i64*
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12397 = getelementptr inbounds %struct.GPR, %struct.GPR* %12396, i32 0, i32 15
  %12398 = getelementptr inbounds %struct.Reg, %struct.Reg* %12397, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %12398 to i64*
  %12399 = load i64, i64* %RBP.i88
  %12400 = sub i64 %12399, 24
  %12401 = load i64, i64* %PC.i86
  %12402 = add i64 %12401, 4
  store i64 %12402, i64* %PC.i86
  %12403 = inttoptr i64 %12400 to i64*
  %12404 = load i64, i64* %12403
  store i64 %12404, i64* %RAX.i87, align 8
  store %struct.Memory* %loadMem_43af2b, %struct.Memory** %MEMORY
  %loadMem_43af2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12406 = getelementptr inbounds %struct.GPR, %struct.GPR* %12405, i32 0, i32 33
  %12407 = getelementptr inbounds %struct.Reg, %struct.Reg* %12406, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %12407 to i64*
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 1
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %RAX.i84 = bitcast %union.anon* %12410 to i64*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 7
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RDX.i85 = bitcast %union.anon* %12413 to i64*
  %12414 = load i64, i64* %RAX.i84
  %12415 = load i64, i64* %PC.i83
  %12416 = add i64 %12415, 2
  store i64 %12416, i64* %PC.i83
  %12417 = inttoptr i64 %12414 to i32*
  %12418 = load i32, i32* %12417
  %12419 = zext i32 %12418 to i64
  store i64 %12419, i64* %RDX.i85, align 8
  store %struct.Memory* %loadMem_43af2f, %struct.Memory** %MEMORY
  %loadMem_43af31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12421 = getelementptr inbounds %struct.GPR, %struct.GPR* %12420, i32 0, i32 33
  %12422 = getelementptr inbounds %struct.Reg, %struct.Reg* %12421, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %12422 to i64*
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 1
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %12426 = bitcast %union.anon* %12425 to %struct.anon.2*
  %AL.i82 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12426, i32 0, i32 0
  %12427 = load i64, i64* %PC.i81
  %12428 = add i64 %12427, 2
  store i64 %12428, i64* %PC.i81
  store i8 0, i8* %AL.i82, align 1
  store %struct.Memory* %loadMem_43af31, %struct.Memory** %MEMORY
  %loadMem1_43af33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12430 = getelementptr inbounds %struct.GPR, %struct.GPR* %12429, i32 0, i32 33
  %12431 = getelementptr inbounds %struct.Reg, %struct.Reg* %12430, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %12431 to i64*
  %12432 = load i64, i64* %PC.i80
  %12433 = add i64 %12432, 93821
  %12434 = load i64, i64* %PC.i80
  %12435 = add i64 %12434, 5
  %12436 = load i64, i64* %PC.i80
  %12437 = add i64 %12436, 5
  store i64 %12437, i64* %PC.i80
  %12438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12439 = load i64, i64* %12438, align 8
  %12440 = add i64 %12439, -8
  %12441 = inttoptr i64 %12440 to i64*
  store i64 %12435, i64* %12441
  store i64 %12440, i64* %12438, align 8
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12433, i64* %12442, align 8
  store %struct.Memory* %loadMem1_43af33, %struct.Memory** %MEMORY
  %loadMem2_43af33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af33 = load i64, i64* %3
  %call2_43af33 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43af33, %struct.Memory* %loadMem2_43af33)
  store %struct.Memory* %call2_43af33, %struct.Memory** %MEMORY
  %loadMem_43af38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12444 = getelementptr inbounds %struct.GPR, %struct.GPR* %12443, i32 0, i32 33
  %12445 = getelementptr inbounds %struct.Reg, %struct.Reg* %12444, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %12445 to i64*
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12447 = getelementptr inbounds %struct.GPR, %struct.GPR* %12446, i32 0, i32 1
  %12448 = getelementptr inbounds %struct.Reg, %struct.Reg* %12447, i32 0, i32 0
  %EAX.i78 = bitcast %union.anon* %12448 to i32*
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12450 = getelementptr inbounds %struct.GPR, %struct.GPR* %12449, i32 0, i32 15
  %12451 = getelementptr inbounds %struct.Reg, %struct.Reg* %12450, i32 0, i32 0
  %RBP.i79 = bitcast %union.anon* %12451 to i64*
  %12452 = load i64, i64* %RBP.i79
  %12453 = sub i64 %12452, 436
  %12454 = load i32, i32* %EAX.i78
  %12455 = zext i32 %12454 to i64
  %12456 = load i64, i64* %PC.i77
  %12457 = add i64 %12456, 6
  store i64 %12457, i64* %PC.i77
  %12458 = inttoptr i64 %12453 to i32*
  store i32 %12454, i32* %12458
  store %struct.Memory* %loadMem_43af38, %struct.Memory** %MEMORY
  br label %block_.L_43af3e

block_.L_43af3e:                                  ; preds = %block_.L_43af1b, %block_43af16
  %loadMem_43af3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12460 = getelementptr inbounds %struct.GPR, %struct.GPR* %12459, i32 0, i32 33
  %12461 = getelementptr inbounds %struct.Reg, %struct.Reg* %12460, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %12461 to i64*
  %12462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12463 = getelementptr inbounds %struct.GPR, %struct.GPR* %12462, i32 0, i32 1
  %12464 = getelementptr inbounds %struct.Reg, %struct.Reg* %12463, i32 0, i32 0
  %RAX.i76 = bitcast %union.anon* %12464 to i64*
  %12465 = load i64, i64* %PC.i75
  %12466 = add i64 %12465, 7
  store i64 %12466, i64* %PC.i75
  %12467 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12468 = zext i32 %12467 to i64
  store i64 %12468, i64* %RAX.i76, align 8
  store %struct.Memory* %loadMem_43af3e, %struct.Memory** %MEMORY
  %loadMem_43af45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 33
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %12471 to i64*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12473 = getelementptr inbounds %struct.GPR, %struct.GPR* %12472, i32 0, i32 1
  %12474 = getelementptr inbounds %struct.Reg, %struct.Reg* %12473, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %12474 to i64*
  %12475 = load i64, i64* %RAX.i74
  %12476 = load i64, i64* %PC.i73
  %12477 = add i64 %12476, 3
  store i64 %12477, i64* %PC.i73
  %12478 = and i64 2, %12475
  %12479 = trunc i64 %12478 to i32
  store i64 %12478, i64* %RAX.i74, align 8
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12480, align 1
  %12481 = and i32 %12479, 255
  %12482 = call i32 @llvm.ctpop.i32(i32 %12481)
  %12483 = trunc i32 %12482 to i8
  %12484 = and i8 %12483, 1
  %12485 = xor i8 %12484, 1
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12485, i8* %12486, align 1
  %12487 = icmp eq i32 %12479, 0
  %12488 = zext i1 %12487 to i8
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12488, i8* %12489, align 1
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12490, align 1
  %12491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12491, align 1
  %12492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12492, align 1
  store %struct.Memory* %loadMem_43af45, %struct.Memory** %MEMORY
  %loadMem_43af48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12494 = getelementptr inbounds %struct.GPR, %struct.GPR* %12493, i32 0, i32 33
  %12495 = getelementptr inbounds %struct.Reg, %struct.Reg* %12494, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %12495 to i64*
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12497 = getelementptr inbounds %struct.GPR, %struct.GPR* %12496, i32 0, i32 1
  %12498 = getelementptr inbounds %struct.Reg, %struct.Reg* %12497, i32 0, i32 0
  %EAX.i72 = bitcast %union.anon* %12498 to i32*
  %12499 = load i32, i32* %EAX.i72
  %12500 = zext i32 %12499 to i64
  %12501 = load i64, i64* %PC.i71
  %12502 = add i64 %12501, 3
  store i64 %12502, i64* %PC.i71
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12503, align 1
  %12504 = and i32 %12499, 255
  %12505 = call i32 @llvm.ctpop.i32(i32 %12504)
  %12506 = trunc i32 %12505 to i8
  %12507 = and i8 %12506, 1
  %12508 = xor i8 %12507, 1
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12508, i8* %12509, align 1
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12510, align 1
  %12511 = icmp eq i32 %12499, 0
  %12512 = zext i1 %12511 to i8
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12512, i8* %12513, align 1
  %12514 = lshr i32 %12499, 31
  %12515 = trunc i32 %12514 to i8
  %12516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12515, i8* %12516, align 1
  %12517 = lshr i32 %12499, 31
  %12518 = xor i32 %12514, %12517
  %12519 = add i32 %12518, %12517
  %12520 = icmp eq i32 %12519, 2
  %12521 = zext i1 %12520 to i8
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12521, i8* %12522, align 1
  store %struct.Memory* %loadMem_43af48, %struct.Memory** %MEMORY
  %loadMem_43af4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12524 = getelementptr inbounds %struct.GPR, %struct.GPR* %12523, i32 0, i32 33
  %12525 = getelementptr inbounds %struct.Reg, %struct.Reg* %12524, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %12525 to i64*
  %12526 = load i64, i64* %PC.i70
  %12527 = add i64 %12526, 11
  %12528 = load i64, i64* %PC.i70
  %12529 = add i64 %12528, 6
  %12530 = load i64, i64* %PC.i70
  %12531 = add i64 %12530, 6
  store i64 %12531, i64* %PC.i70
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12533 = load i8, i8* %12532, align 1
  %12534 = icmp eq i8 %12533, 0
  %12535 = zext i1 %12534 to i8
  store i8 %12535, i8* %BRANCH_TAKEN, align 1
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12537 = select i1 %12534, i64 %12527, i64 %12529
  store i64 %12537, i64* %12536, align 8
  store %struct.Memory* %loadMem_43af4b, %struct.Memory** %MEMORY
  %loadBr_43af4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af4b = icmp eq i8 %loadBr_43af4b, 1
  br i1 %cmpBr_43af4b, label %block_.L_43af56, label %block_43af51

block_43af51:                                     ; preds = %block_.L_43af3e
  %loadMem_43af51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12539 = getelementptr inbounds %struct.GPR, %struct.GPR* %12538, i32 0, i32 33
  %12540 = getelementptr inbounds %struct.Reg, %struct.Reg* %12539, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %12540 to i64*
  %12541 = load i64, i64* %PC.i69
  %12542 = add i64 %12541, 55
  %12543 = load i64, i64* %PC.i69
  %12544 = add i64 %12543, 5
  store i64 %12544, i64* %PC.i69
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12542, i64* %12545, align 8
  store %struct.Memory* %loadMem_43af51, %struct.Memory** %MEMORY
  br label %block_.L_43af88

block_.L_43af56:                                  ; preds = %block_.L_43af3e
  %loadMem_43af56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12547 = getelementptr inbounds %struct.GPR, %struct.GPR* %12546, i32 0, i32 33
  %12548 = getelementptr inbounds %struct.Reg, %struct.Reg* %12547, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %12548 to i64*
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12550 = getelementptr inbounds %struct.GPR, %struct.GPR* %12549, i32 0, i32 11
  %12551 = getelementptr inbounds %struct.Reg, %struct.Reg* %12550, i32 0, i32 0
  %RDI.i68 = bitcast %union.anon* %12551 to i64*
  %12552 = load i64, i64* %PC.i67
  %12553 = add i64 %12552, 10
  store i64 %12553, i64* %PC.i67
  store i64 ptrtoint (%G__0x57d962_type* @G__0x57d962 to i64), i64* %RDI.i68, align 8
  store %struct.Memory* %loadMem_43af56, %struct.Memory** %MEMORY
  %loadMem_43af60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12555 = getelementptr inbounds %struct.GPR, %struct.GPR* %12554, i32 0, i32 33
  %12556 = getelementptr inbounds %struct.Reg, %struct.Reg* %12555, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %12556 to i64*
  %12557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12558 = getelementptr inbounds %struct.GPR, %struct.GPR* %12557, i32 0, i32 1
  %12559 = getelementptr inbounds %struct.Reg, %struct.Reg* %12558, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %12559 to i64*
  %12560 = load i64, i64* %PC.i65
  %12561 = add i64 %12560, 10
  store i64 %12561, i64* %PC.i65
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i66, align 8
  store %struct.Memory* %loadMem_43af60, %struct.Memory** %MEMORY
  %loadMem_43af6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12563 = getelementptr inbounds %struct.GPR, %struct.GPR* %12562, i32 0, i32 33
  %12564 = getelementptr inbounds %struct.Reg, %struct.Reg* %12563, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %12564 to i64*
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12566 = getelementptr inbounds %struct.GPR, %struct.GPR* %12565, i32 0, i32 5
  %12567 = getelementptr inbounds %struct.Reg, %struct.Reg* %12566, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %12567 to i64*
  %12568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12569 = getelementptr inbounds %struct.GPR, %struct.GPR* %12568, i32 0, i32 15
  %12570 = getelementptr inbounds %struct.Reg, %struct.Reg* %12569, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %12570 to i64*
  %12571 = load i64, i64* %RBP.i64
  %12572 = sub i64 %12571, 260
  %12573 = load i64, i64* %PC.i62
  %12574 = add i64 %12573, 7
  store i64 %12574, i64* %PC.i62
  %12575 = inttoptr i64 %12572 to i32*
  %12576 = load i32, i32* %12575
  %12577 = sext i32 %12576 to i64
  store i64 %12577, i64* %RCX.i63, align 8
  store %struct.Memory* %loadMem_43af6a, %struct.Memory** %MEMORY
  %loadMem_43af71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12579 = getelementptr inbounds %struct.GPR, %struct.GPR* %12578, i32 0, i32 33
  %12580 = getelementptr inbounds %struct.Reg, %struct.Reg* %12579, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %12580 to i64*
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 5
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %12583 to i64*
  %12584 = load i64, i64* %RCX.i61
  %12585 = load i64, i64* %PC.i60
  %12586 = add i64 %12585, 4
  store i64 %12586, i64* %PC.i60
  %12587 = sext i64 %12584 to i128
  %12588 = and i128 %12587, -18446744073709551616
  %12589 = zext i64 %12584 to i128
  %12590 = or i128 %12588, %12589
  %12591 = mul i128 40, %12590
  %12592 = trunc i128 %12591 to i64
  store i64 %12592, i64* %RCX.i61, align 8
  %12593 = sext i64 %12592 to i128
  %12594 = icmp ne i128 %12593, %12591
  %12595 = zext i1 %12594 to i8
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12595, i8* %12596, align 1
  %12597 = trunc i128 %12591 to i32
  %12598 = and i32 %12597, 255
  %12599 = call i32 @llvm.ctpop.i32(i32 %12598)
  %12600 = trunc i32 %12599 to i8
  %12601 = and i8 %12600, 1
  %12602 = xor i8 %12601, 1
  %12603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12602, i8* %12603, align 1
  %12604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12604, align 1
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12605, align 1
  %12606 = lshr i64 %12592, 63
  %12607 = trunc i64 %12606 to i8
  %12608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12607, i8* %12608, align 1
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12595, i8* %12609, align 1
  store %struct.Memory* %loadMem_43af71, %struct.Memory** %MEMORY
  %loadMem_43af75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12611 = getelementptr inbounds %struct.GPR, %struct.GPR* %12610, i32 0, i32 33
  %12612 = getelementptr inbounds %struct.Reg, %struct.Reg* %12611, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %12612 to i64*
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12614 = getelementptr inbounds %struct.GPR, %struct.GPR* %12613, i32 0, i32 1
  %12615 = getelementptr inbounds %struct.Reg, %struct.Reg* %12614, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %12615 to i64*
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12617 = getelementptr inbounds %struct.GPR, %struct.GPR* %12616, i32 0, i32 5
  %12618 = getelementptr inbounds %struct.Reg, %struct.Reg* %12617, i32 0, i32 0
  %RCX.i59 = bitcast %union.anon* %12618 to i64*
  %12619 = load i64, i64* %RAX.i58
  %12620 = load i64, i64* %RCX.i59
  %12621 = load i64, i64* %PC.i57
  %12622 = add i64 %12621, 3
  store i64 %12622, i64* %PC.i57
  %12623 = add i64 %12620, %12619
  store i64 %12623, i64* %RAX.i58, align 8
  %12624 = icmp ult i64 %12623, %12619
  %12625 = icmp ult i64 %12623, %12620
  %12626 = or i1 %12624, %12625
  %12627 = zext i1 %12626 to i8
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12627, i8* %12628, align 1
  %12629 = trunc i64 %12623 to i32
  %12630 = and i32 %12629, 255
  %12631 = call i32 @llvm.ctpop.i32(i32 %12630)
  %12632 = trunc i32 %12631 to i8
  %12633 = and i8 %12632, 1
  %12634 = xor i8 %12633, 1
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12634, i8* %12635, align 1
  %12636 = xor i64 %12620, %12619
  %12637 = xor i64 %12636, %12623
  %12638 = lshr i64 %12637, 4
  %12639 = trunc i64 %12638 to i8
  %12640 = and i8 %12639, 1
  %12641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12640, i8* %12641, align 1
  %12642 = icmp eq i64 %12623, 0
  %12643 = zext i1 %12642 to i8
  %12644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12643, i8* %12644, align 1
  %12645 = lshr i64 %12623, 63
  %12646 = trunc i64 %12645 to i8
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12646, i8* %12647, align 1
  %12648 = lshr i64 %12619, 63
  %12649 = lshr i64 %12620, 63
  %12650 = xor i64 %12645, %12648
  %12651 = xor i64 %12645, %12649
  %12652 = add i64 %12650, %12651
  %12653 = icmp eq i64 %12652, 2
  %12654 = zext i1 %12653 to i8
  %12655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12654, i8* %12655, align 1
  store %struct.Memory* %loadMem_43af75, %struct.Memory** %MEMORY
  %loadMem_43af78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12657 = getelementptr inbounds %struct.GPR, %struct.GPR* %12656, i32 0, i32 33
  %12658 = getelementptr inbounds %struct.Reg, %struct.Reg* %12657, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %12658 to i64*
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12660 = getelementptr inbounds %struct.GPR, %struct.GPR* %12659, i32 0, i32 1
  %12661 = getelementptr inbounds %struct.Reg, %struct.Reg* %12660, i32 0, i32 0
  %RAX.i55 = bitcast %union.anon* %12661 to i64*
  %12662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12663 = getelementptr inbounds %struct.GPR, %struct.GPR* %12662, i32 0, i32 9
  %12664 = getelementptr inbounds %struct.Reg, %struct.Reg* %12663, i32 0, i32 0
  %RSI.i56 = bitcast %union.anon* %12664 to i64*
  %12665 = load i64, i64* %RAX.i55
  %12666 = add i64 %12665, 8
  %12667 = load i64, i64* %PC.i54
  %12668 = add i64 %12667, 3
  store i64 %12668, i64* %PC.i54
  %12669 = inttoptr i64 %12666 to i32*
  %12670 = load i32, i32* %12669
  %12671 = zext i32 %12670 to i64
  store i64 %12671, i64* %RSI.i56, align 8
  store %struct.Memory* %loadMem_43af78, %struct.Memory** %MEMORY
  %loadMem_43af7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12673 = getelementptr inbounds %struct.GPR, %struct.GPR* %12672, i32 0, i32 33
  %12674 = getelementptr inbounds %struct.Reg, %struct.Reg* %12673, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %12674 to i64*
  %12675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12676 = getelementptr inbounds %struct.GPR, %struct.GPR* %12675, i32 0, i32 1
  %12677 = getelementptr inbounds %struct.Reg, %struct.Reg* %12676, i32 0, i32 0
  %12678 = bitcast %union.anon* %12677 to %struct.anon.2*
  %AL.i53 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12678, i32 0, i32 0
  %12679 = load i64, i64* %PC.i52
  %12680 = add i64 %12679, 2
  store i64 %12680, i64* %PC.i52
  store i8 0, i8* %AL.i53, align 1
  store %struct.Memory* %loadMem_43af7b, %struct.Memory** %MEMORY
  %loadMem1_43af7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12682 = getelementptr inbounds %struct.GPR, %struct.GPR* %12681, i32 0, i32 33
  %12683 = getelementptr inbounds %struct.Reg, %struct.Reg* %12682, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %12683 to i64*
  %12684 = load i64, i64* %PC.i51
  %12685 = add i64 %12684, 93747
  %12686 = load i64, i64* %PC.i51
  %12687 = add i64 %12686, 5
  %12688 = load i64, i64* %PC.i51
  %12689 = add i64 %12688, 5
  store i64 %12689, i64* %PC.i51
  %12690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12691 = load i64, i64* %12690, align 8
  %12692 = add i64 %12691, -8
  %12693 = inttoptr i64 %12692 to i64*
  store i64 %12687, i64* %12693
  store i64 %12692, i64* %12690, align 8
  %12694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12685, i64* %12694, align 8
  store %struct.Memory* %loadMem1_43af7d, %struct.Memory** %MEMORY
  %loadMem2_43af7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af7d = load i64, i64* %3
  %call2_43af7d = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43af7d, %struct.Memory* %loadMem2_43af7d)
  store %struct.Memory* %call2_43af7d, %struct.Memory** %MEMORY
  %loadMem_43af82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12696 = getelementptr inbounds %struct.GPR, %struct.GPR* %12695, i32 0, i32 33
  %12697 = getelementptr inbounds %struct.Reg, %struct.Reg* %12696, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %12697 to i64*
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 1
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %EAX.i49 = bitcast %union.anon* %12700 to i32*
  %12701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12702 = getelementptr inbounds %struct.GPR, %struct.GPR* %12701, i32 0, i32 15
  %12703 = getelementptr inbounds %struct.Reg, %struct.Reg* %12702, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %12703 to i64*
  %12704 = load i64, i64* %RBP.i50
  %12705 = sub i64 %12704, 440
  %12706 = load i32, i32* %EAX.i49
  %12707 = zext i32 %12706 to i64
  %12708 = load i64, i64* %PC.i48
  %12709 = add i64 %12708, 6
  store i64 %12709, i64* %PC.i48
  %12710 = inttoptr i64 %12705 to i32*
  store i32 %12706, i32* %12710
  store %struct.Memory* %loadMem_43af82, %struct.Memory** %MEMORY
  br label %block_.L_43af88

block_.L_43af88:                                  ; preds = %block_.L_43af56, %block_43af51
  %loadMem_43af88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12712 = getelementptr inbounds %struct.GPR, %struct.GPR* %12711, i32 0, i32 33
  %12713 = getelementptr inbounds %struct.Reg, %struct.Reg* %12712, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %12713 to i64*
  %12714 = load i64, i64* %PC.i47
  %12715 = add i64 %12714, 5
  %12716 = load i64, i64* %PC.i47
  %12717 = add i64 %12716, 5
  store i64 %12717, i64* %PC.i47
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12715, i64* %12718, align 8
  store %struct.Memory* %loadMem_43af88, %struct.Memory** %MEMORY
  br label %block_.L_43af8d

block_.L_43af8d:                                  ; preds = %block_.L_43af88, %block_43aaa6
  %loadMem_43af8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12720 = getelementptr inbounds %struct.GPR, %struct.GPR* %12719, i32 0, i32 33
  %12721 = getelementptr inbounds %struct.Reg, %struct.Reg* %12720, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %12721 to i64*
  %12722 = load i64, i64* %PC.i46
  %12723 = add i64 %12722, 8
  store i64 %12723, i64* %PC.i46
  %12724 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12725, align 1
  %12726 = and i32 %12724, 255
  %12727 = call i32 @llvm.ctpop.i32(i32 %12726)
  %12728 = trunc i32 %12727 to i8
  %12729 = and i8 %12728, 1
  %12730 = xor i8 %12729, 1
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12730, i8* %12731, align 1
  %12732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12732, align 1
  %12733 = icmp eq i32 %12724, 0
  %12734 = zext i1 %12733 to i8
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12734, i8* %12735, align 1
  %12736 = lshr i32 %12724, 31
  %12737 = trunc i32 %12736 to i8
  %12738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12737, i8* %12738, align 1
  %12739 = lshr i32 %12724, 31
  %12740 = xor i32 %12736, %12739
  %12741 = add i32 %12740, %12739
  %12742 = icmp eq i32 %12741, 2
  %12743 = zext i1 %12742 to i8
  %12744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12743, i8* %12744, align 1
  store %struct.Memory* %loadMem_43af8d, %struct.Memory** %MEMORY
  %loadMem_43af95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12746 = getelementptr inbounds %struct.GPR, %struct.GPR* %12745, i32 0, i32 33
  %12747 = getelementptr inbounds %struct.Reg, %struct.Reg* %12746, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %12747 to i64*
  %12748 = load i64, i64* %PC.i45
  %12749 = add i64 %12748, 11
  %12750 = load i64, i64* %PC.i45
  %12751 = add i64 %12750, 6
  %12752 = load i64, i64* %PC.i45
  %12753 = add i64 %12752, 6
  store i64 %12753, i64* %PC.i45
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12755 = load i8, i8* %12754, align 1
  %12756 = icmp eq i8 %12755, 0
  %12757 = zext i1 %12756 to i8
  store i8 %12757, i8* %BRANCH_TAKEN, align 1
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12759 = select i1 %12756, i64 %12749, i64 %12751
  store i64 %12759, i64* %12758, align 8
  store %struct.Memory* %loadMem_43af95, %struct.Memory** %MEMORY
  %loadBr_43af95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af95 = icmp eq i8 %loadBr_43af95, 1
  br i1 %cmpBr_43af95, label %block_.L_43afa0, label %block_43af9b

block_43af9b:                                     ; preds = %block_.L_43af8d
  %loadMem_43af9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12761 = getelementptr inbounds %struct.GPR, %struct.GPR* %12760, i32 0, i32 33
  %12762 = getelementptr inbounds %struct.Reg, %struct.Reg* %12761, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %12762 to i64*
  %12763 = load i64, i64* %PC.i44
  %12764 = add i64 %12763, 58
  %12765 = load i64, i64* %PC.i44
  %12766 = add i64 %12765, 5
  store i64 %12766, i64* %PC.i44
  %12767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12764, i64* %12767, align 8
  store %struct.Memory* %loadMem_43af9b, %struct.Memory** %MEMORY
  br label %block_.L_43afd5

block_.L_43afa0:                                  ; preds = %block_.L_43af8d
  %loadMem_43afa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12769 = getelementptr inbounds %struct.GPR, %struct.GPR* %12768, i32 0, i32 33
  %12770 = getelementptr inbounds %struct.Reg, %struct.Reg* %12769, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %12770 to i64*
  %12771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12772 = getelementptr inbounds %struct.GPR, %struct.GPR* %12771, i32 0, i32 11
  %12773 = getelementptr inbounds %struct.Reg, %struct.Reg* %12772, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %12773 to i64*
  %12774 = load i64, i64* %PC.i43
  %12775 = add i64 %12774, 10
  store i64 %12775, i64* %PC.i43
  store i64 ptrtoint (%G__0x57d97a_type* @G__0x57d97a to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_43afa0, %struct.Memory** %MEMORY
  %loadMem_43afaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12777 = getelementptr inbounds %struct.GPR, %struct.GPR* %12776, i32 0, i32 33
  %12778 = getelementptr inbounds %struct.Reg, %struct.Reg* %12777, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %12778 to i64*
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12780 = getelementptr inbounds %struct.GPR, %struct.GPR* %12779, i32 0, i32 1
  %12781 = getelementptr inbounds %struct.Reg, %struct.Reg* %12780, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %12781 to i64*
  %12782 = load i64, i64* %PC.i41
  %12783 = add i64 %12782, 10
  store i64 %12783, i64* %PC.i41
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_43afaa, %struct.Memory** %MEMORY
  %loadMem_43afb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12785 = getelementptr inbounds %struct.GPR, %struct.GPR* %12784, i32 0, i32 33
  %12786 = getelementptr inbounds %struct.Reg, %struct.Reg* %12785, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %12786 to i64*
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12788 = getelementptr inbounds %struct.GPR, %struct.GPR* %12787, i32 0, i32 9
  %12789 = getelementptr inbounds %struct.Reg, %struct.Reg* %12788, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %12789 to i64*
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12791 = getelementptr inbounds %struct.GPR, %struct.GPR* %12790, i32 0, i32 15
  %12792 = getelementptr inbounds %struct.Reg, %struct.Reg* %12791, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %12792 to i64*
  %12793 = load i64, i64* %RBP.i40
  %12794 = sub i64 %12793, 8
  %12795 = load i64, i64* %PC.i39
  %12796 = add i64 %12795, 3
  store i64 %12796, i64* %PC.i39
  %12797 = inttoptr i64 %12794 to i32*
  %12798 = load i32, i32* %12797
  %12799 = zext i32 %12798 to i64
  store i64 %12799, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_43afb4, %struct.Memory** %MEMORY
  %loadMem_43afb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12801 = getelementptr inbounds %struct.GPR, %struct.GPR* %12800, i32 0, i32 33
  %12802 = getelementptr inbounds %struct.Reg, %struct.Reg* %12801, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %12802 to i64*
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12804 = getelementptr inbounds %struct.GPR, %struct.GPR* %12803, i32 0, i32 5
  %12805 = getelementptr inbounds %struct.Reg, %struct.Reg* %12804, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %12805 to i64*
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 15
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %12808 to i64*
  %12809 = load i64, i64* %RBP.i38
  %12810 = sub i64 %12809, 260
  %12811 = load i64, i64* %PC.i36
  %12812 = add i64 %12811, 7
  store i64 %12812, i64* %PC.i36
  %12813 = inttoptr i64 %12810 to i32*
  %12814 = load i32, i32* %12813
  %12815 = sext i32 %12814 to i64
  store i64 %12815, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_43afb7, %struct.Memory** %MEMORY
  %loadMem_43afbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %12816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12817 = getelementptr inbounds %struct.GPR, %struct.GPR* %12816, i32 0, i32 33
  %12818 = getelementptr inbounds %struct.Reg, %struct.Reg* %12817, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %12818 to i64*
  %12819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12820 = getelementptr inbounds %struct.GPR, %struct.GPR* %12819, i32 0, i32 5
  %12821 = getelementptr inbounds %struct.Reg, %struct.Reg* %12820, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %12821 to i64*
  %12822 = load i64, i64* %RCX.i35
  %12823 = load i64, i64* %PC.i34
  %12824 = add i64 %12823, 4
  store i64 %12824, i64* %PC.i34
  %12825 = sext i64 %12822 to i128
  %12826 = and i128 %12825, -18446744073709551616
  %12827 = zext i64 %12822 to i128
  %12828 = or i128 %12826, %12827
  %12829 = mul i128 40, %12828
  %12830 = trunc i128 %12829 to i64
  store i64 %12830, i64* %RCX.i35, align 8
  %12831 = sext i64 %12830 to i128
  %12832 = icmp ne i128 %12831, %12829
  %12833 = zext i1 %12832 to i8
  %12834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12833, i8* %12834, align 1
  %12835 = trunc i128 %12829 to i32
  %12836 = and i32 %12835, 255
  %12837 = call i32 @llvm.ctpop.i32(i32 %12836)
  %12838 = trunc i32 %12837 to i8
  %12839 = and i8 %12838, 1
  %12840 = xor i8 %12839, 1
  %12841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12840, i8* %12841, align 1
  %12842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12842, align 1
  %12843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12843, align 1
  %12844 = lshr i64 %12830, 63
  %12845 = trunc i64 %12844 to i8
  %12846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12845, i8* %12846, align 1
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12833, i8* %12847, align 1
  store %struct.Memory* %loadMem_43afbe, %struct.Memory** %MEMORY
  %loadMem_43afc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12849 = getelementptr inbounds %struct.GPR, %struct.GPR* %12848, i32 0, i32 33
  %12850 = getelementptr inbounds %struct.Reg, %struct.Reg* %12849, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %12850 to i64*
  %12851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12852 = getelementptr inbounds %struct.GPR, %struct.GPR* %12851, i32 0, i32 1
  %12853 = getelementptr inbounds %struct.Reg, %struct.Reg* %12852, i32 0, i32 0
  %RAX.i33 = bitcast %union.anon* %12853 to i64*
  %12854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12855 = getelementptr inbounds %struct.GPR, %struct.GPR* %12854, i32 0, i32 5
  %12856 = getelementptr inbounds %struct.Reg, %struct.Reg* %12855, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %12856 to i64*
  %12857 = load i64, i64* %RAX.i33
  %12858 = load i64, i64* %RCX.i
  %12859 = load i64, i64* %PC.i32
  %12860 = add i64 %12859, 3
  store i64 %12860, i64* %PC.i32
  %12861 = add i64 %12858, %12857
  store i64 %12861, i64* %RAX.i33, align 8
  %12862 = icmp ult i64 %12861, %12857
  %12863 = icmp ult i64 %12861, %12858
  %12864 = or i1 %12862, %12863
  %12865 = zext i1 %12864 to i8
  %12866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12865, i8* %12866, align 1
  %12867 = trunc i64 %12861 to i32
  %12868 = and i32 %12867, 255
  %12869 = call i32 @llvm.ctpop.i32(i32 %12868)
  %12870 = trunc i32 %12869 to i8
  %12871 = and i8 %12870, 1
  %12872 = xor i8 %12871, 1
  %12873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12872, i8* %12873, align 1
  %12874 = xor i64 %12858, %12857
  %12875 = xor i64 %12874, %12861
  %12876 = lshr i64 %12875, 4
  %12877 = trunc i64 %12876 to i8
  %12878 = and i8 %12877, 1
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12878, i8* %12879, align 1
  %12880 = icmp eq i64 %12861, 0
  %12881 = zext i1 %12880 to i8
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12881, i8* %12882, align 1
  %12883 = lshr i64 %12861, 63
  %12884 = trunc i64 %12883 to i8
  %12885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12884, i8* %12885, align 1
  %12886 = lshr i64 %12857, 63
  %12887 = lshr i64 %12858, 63
  %12888 = xor i64 %12883, %12886
  %12889 = xor i64 %12883, %12887
  %12890 = add i64 %12888, %12889
  %12891 = icmp eq i64 %12890, 2
  %12892 = zext i1 %12891 to i8
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12892, i8* %12893, align 1
  store %struct.Memory* %loadMem_43afc2, %struct.Memory** %MEMORY
  %loadMem_43afc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12895 = getelementptr inbounds %struct.GPR, %struct.GPR* %12894, i32 0, i32 33
  %12896 = getelementptr inbounds %struct.Reg, %struct.Reg* %12895, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %12896 to i64*
  %12897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12898 = getelementptr inbounds %struct.GPR, %struct.GPR* %12897, i32 0, i32 1
  %12899 = getelementptr inbounds %struct.Reg, %struct.Reg* %12898, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %12899 to i64*
  %12900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12901 = getelementptr inbounds %struct.GPR, %struct.GPR* %12900, i32 0, i32 7
  %12902 = getelementptr inbounds %struct.Reg, %struct.Reg* %12901, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %12902 to i64*
  %12903 = load i64, i64* %RAX.i31
  %12904 = add i64 %12903, 8
  %12905 = load i64, i64* %PC.i30
  %12906 = add i64 %12905, 3
  store i64 %12906, i64* %PC.i30
  %12907 = inttoptr i64 %12904 to i32*
  %12908 = load i32, i32* %12907
  %12909 = zext i32 %12908 to i64
  store i64 %12909, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_43afc5, %struct.Memory** %MEMORY
  %loadMem_43afc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12911 = getelementptr inbounds %struct.GPR, %struct.GPR* %12910, i32 0, i32 33
  %12912 = getelementptr inbounds %struct.Reg, %struct.Reg* %12911, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %12912 to i64*
  %12913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12914 = getelementptr inbounds %struct.GPR, %struct.GPR* %12913, i32 0, i32 1
  %12915 = getelementptr inbounds %struct.Reg, %struct.Reg* %12914, i32 0, i32 0
  %12916 = bitcast %union.anon* %12915 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12916, i32 0, i32 0
  %12917 = load i64, i64* %PC.i29
  %12918 = add i64 %12917, 2
  store i64 %12918, i64* %PC.i29
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_43afc8, %struct.Memory** %MEMORY
  %loadMem1_43afca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12920 = getelementptr inbounds %struct.GPR, %struct.GPR* %12919, i32 0, i32 33
  %12921 = getelementptr inbounds %struct.Reg, %struct.Reg* %12920, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %12921 to i64*
  %12922 = load i64, i64* %PC.i28
  %12923 = add i64 %12922, 93670
  %12924 = load i64, i64* %PC.i28
  %12925 = add i64 %12924, 5
  %12926 = load i64, i64* %PC.i28
  %12927 = add i64 %12926, 5
  store i64 %12927, i64* %PC.i28
  %12928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12929 = load i64, i64* %12928, align 8
  %12930 = add i64 %12929, -8
  %12931 = inttoptr i64 %12930 to i64*
  store i64 %12925, i64* %12931
  store i64 %12930, i64* %12928, align 8
  %12932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12923, i64* %12932, align 8
  store %struct.Memory* %loadMem1_43afca, %struct.Memory** %MEMORY
  %loadMem2_43afca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43afca = load i64, i64* %3
  %call2_43afca = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_43afca, %struct.Memory* %loadMem2_43afca)
  store %struct.Memory* %call2_43afca, %struct.Memory** %MEMORY
  %loadMem_43afcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12934 = getelementptr inbounds %struct.GPR, %struct.GPR* %12933, i32 0, i32 33
  %12935 = getelementptr inbounds %struct.Reg, %struct.Reg* %12934, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %12935 to i64*
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12937 = getelementptr inbounds %struct.GPR, %struct.GPR* %12936, i32 0, i32 1
  %12938 = getelementptr inbounds %struct.Reg, %struct.Reg* %12937, i32 0, i32 0
  %EAX.i26 = bitcast %union.anon* %12938 to i32*
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12940 = getelementptr inbounds %struct.GPR, %struct.GPR* %12939, i32 0, i32 15
  %12941 = getelementptr inbounds %struct.Reg, %struct.Reg* %12940, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %12941 to i64*
  %12942 = load i64, i64* %RBP.i27
  %12943 = sub i64 %12942, 444
  %12944 = load i32, i32* %EAX.i26
  %12945 = zext i32 %12944 to i64
  %12946 = load i64, i64* %PC.i25
  %12947 = add i64 %12946, 6
  store i64 %12947, i64* %PC.i25
  %12948 = inttoptr i64 %12943 to i32*
  store i32 %12944, i32* %12948
  store %struct.Memory* %loadMem_43afcf, %struct.Memory** %MEMORY
  br label %block_.L_43afd5

block_.L_43afd5:                                  ; preds = %block_.L_43afa0, %block_43af9b
  %loadMem_43afd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12950 = getelementptr inbounds %struct.GPR, %struct.GPR* %12949, i32 0, i32 33
  %12951 = getelementptr inbounds %struct.Reg, %struct.Reg* %12950, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %12951 to i64*
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12953 = getelementptr inbounds %struct.GPR, %struct.GPR* %12952, i32 0, i32 1
  %12954 = getelementptr inbounds %struct.Reg, %struct.Reg* %12953, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %12954 to i64*
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12956 = getelementptr inbounds %struct.GPR, %struct.GPR* %12955, i32 0, i32 15
  %12957 = getelementptr inbounds %struct.Reg, %struct.Reg* %12956, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %12957 to i64*
  %12958 = load i64, i64* %RBP.i24
  %12959 = sub i64 %12958, 68
  %12960 = load i64, i64* %PC.i22
  %12961 = add i64 %12960, 3
  store i64 %12961, i64* %PC.i22
  %12962 = inttoptr i64 %12959 to i32*
  %12963 = load i32, i32* %12962
  %12964 = zext i32 %12963 to i64
  store i64 %12964, i64* %RAX.i23, align 8
  store %struct.Memory* %loadMem_43afd5, %struct.Memory** %MEMORY
  %loadMem_43afd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12966 = getelementptr inbounds %struct.GPR, %struct.GPR* %12965, i32 0, i32 33
  %12967 = getelementptr inbounds %struct.Reg, %struct.Reg* %12966, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %12967 to i64*
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 1
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %EAX.i20 = bitcast %union.anon* %12970 to i32*
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 15
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %12973 to i64*
  %12974 = load i64, i64* %RBP.i21
  %12975 = sub i64 %12974, 4
  %12976 = load i32, i32* %EAX.i20
  %12977 = zext i32 %12976 to i64
  %12978 = load i64, i64* %PC.i19
  %12979 = add i64 %12978, 3
  store i64 %12979, i64* %PC.i19
  %12980 = inttoptr i64 %12975 to i32*
  store i32 %12976, i32* %12980
  store %struct.Memory* %loadMem_43afd8, %struct.Memory** %MEMORY
  %loadMem_43afdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12982 = getelementptr inbounds %struct.GPR, %struct.GPR* %12981, i32 0, i32 33
  %12983 = getelementptr inbounds %struct.Reg, %struct.Reg* %12982, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %12983 to i64*
  %12984 = load i64, i64* %PC.i18
  %12985 = add i64 %12984, 37
  %12986 = load i64, i64* %PC.i18
  %12987 = add i64 %12986, 5
  store i64 %12987, i64* %PC.i18
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12985, i64* %12988, align 8
  store %struct.Memory* %loadMem_43afdb, %struct.Memory** %MEMORY
  br label %block_.L_43b000

block_.L_43afe0:                                  ; preds = %block_.L_43aa97
  %loadMem_43afe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12990 = getelementptr inbounds %struct.GPR, %struct.GPR* %12989, i32 0, i32 33
  %12991 = getelementptr inbounds %struct.Reg, %struct.Reg* %12990, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %12991 to i64*
  %12992 = load i64, i64* %PC.i17
  %12993 = add i64 %12992, 5
  %12994 = load i64, i64* %PC.i17
  %12995 = add i64 %12994, 5
  store i64 %12995, i64* %PC.i17
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12993, i64* %12996, align 8
  store %struct.Memory* %loadMem_43afe0, %struct.Memory** %MEMORY
  br label %block_.L_43afe5

block_.L_43afe5:                                  ; preds = %block_.L_43afe0, %block_.L_43a6bf
  %loadMem_43afe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12998 = getelementptr inbounds %struct.GPR, %struct.GPR* %12997, i32 0, i32 33
  %12999 = getelementptr inbounds %struct.Reg, %struct.Reg* %12998, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %12999 to i64*
  %13000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13001 = getelementptr inbounds %struct.GPR, %struct.GPR* %13000, i32 0, i32 1
  %13002 = getelementptr inbounds %struct.Reg, %struct.Reg* %13001, i32 0, i32 0
  %RAX.i15 = bitcast %union.anon* %13002 to i64*
  %13003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13004 = getelementptr inbounds %struct.GPR, %struct.GPR* %13003, i32 0, i32 15
  %13005 = getelementptr inbounds %struct.Reg, %struct.Reg* %13004, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %13005 to i64*
  %13006 = load i64, i64* %RBP.i16
  %13007 = sub i64 %13006, 260
  %13008 = load i64, i64* %PC.i14
  %13009 = add i64 %13008, 6
  store i64 %13009, i64* %PC.i14
  %13010 = inttoptr i64 %13007 to i32*
  %13011 = load i32, i32* %13010
  %13012 = zext i32 %13011 to i64
  store i64 %13012, i64* %RAX.i15, align 8
  store %struct.Memory* %loadMem_43afe5, %struct.Memory** %MEMORY
  %loadMem_43afeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13014 = getelementptr inbounds %struct.GPR, %struct.GPR* %13013, i32 0, i32 33
  %13015 = getelementptr inbounds %struct.Reg, %struct.Reg* %13014, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %13015 to i64*
  %13016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13017 = getelementptr inbounds %struct.GPR, %struct.GPR* %13016, i32 0, i32 1
  %13018 = getelementptr inbounds %struct.Reg, %struct.Reg* %13017, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %13018 to i64*
  %13019 = load i64, i64* %RAX.i13
  %13020 = load i64, i64* %PC.i12
  %13021 = add i64 %13020, 3
  store i64 %13021, i64* %PC.i12
  %13022 = trunc i64 %13019 to i32
  %13023 = add i32 1, %13022
  %13024 = zext i32 %13023 to i64
  store i64 %13024, i64* %RAX.i13, align 8
  %13025 = icmp ult i32 %13023, %13022
  %13026 = icmp ult i32 %13023, 1
  %13027 = or i1 %13025, %13026
  %13028 = zext i1 %13027 to i8
  %13029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13028, i8* %13029, align 1
  %13030 = and i32 %13023, 255
  %13031 = call i32 @llvm.ctpop.i32(i32 %13030)
  %13032 = trunc i32 %13031 to i8
  %13033 = and i8 %13032, 1
  %13034 = xor i8 %13033, 1
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13034, i8* %13035, align 1
  %13036 = xor i64 1, %13019
  %13037 = trunc i64 %13036 to i32
  %13038 = xor i32 %13037, %13023
  %13039 = lshr i32 %13038, 4
  %13040 = trunc i32 %13039 to i8
  %13041 = and i8 %13040, 1
  %13042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13041, i8* %13042, align 1
  %13043 = icmp eq i32 %13023, 0
  %13044 = zext i1 %13043 to i8
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13044, i8* %13045, align 1
  %13046 = lshr i32 %13023, 31
  %13047 = trunc i32 %13046 to i8
  %13048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13047, i8* %13048, align 1
  %13049 = lshr i32 %13022, 31
  %13050 = xor i32 %13046, %13049
  %13051 = add i32 %13050, %13046
  %13052 = icmp eq i32 %13051, 2
  %13053 = zext i1 %13052 to i8
  %13054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13053, i8* %13054, align 1
  store %struct.Memory* %loadMem_43afeb, %struct.Memory** %MEMORY
  %loadMem_43afee = load %struct.Memory*, %struct.Memory** %MEMORY
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13056 = getelementptr inbounds %struct.GPR, %struct.GPR* %13055, i32 0, i32 33
  %13057 = getelementptr inbounds %struct.Reg, %struct.Reg* %13056, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %13057 to i64*
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13059 = getelementptr inbounds %struct.GPR, %struct.GPR* %13058, i32 0, i32 1
  %13060 = getelementptr inbounds %struct.Reg, %struct.Reg* %13059, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %13060 to i32*
  %13061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13062 = getelementptr inbounds %struct.GPR, %struct.GPR* %13061, i32 0, i32 15
  %13063 = getelementptr inbounds %struct.Reg, %struct.Reg* %13062, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %13063 to i64*
  %13064 = load i64, i64* %RBP.i11
  %13065 = sub i64 %13064, 260
  %13066 = load i32, i32* %EAX.i
  %13067 = zext i32 %13066 to i64
  %13068 = load i64, i64* %PC.i10
  %13069 = add i64 %13068, 6
  store i64 %13069, i64* %PC.i10
  %13070 = inttoptr i64 %13065 to i32*
  store i32 %13066, i32* %13070
  store %struct.Memory* %loadMem_43afee, %struct.Memory** %MEMORY
  %loadMem_43aff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13072 = getelementptr inbounds %struct.GPR, %struct.GPR* %13071, i32 0, i32 33
  %13073 = getelementptr inbounds %struct.Reg, %struct.Reg* %13072, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %13073 to i64*
  %13074 = load i64, i64* %PC.i9
  %13075 = add i64 %13074, -2463
  %13076 = load i64, i64* %PC.i9
  %13077 = add i64 %13076, 5
  store i64 %13077, i64* %PC.i9
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13075, i64* %13078, align 8
  store %struct.Memory* %loadMem_43aff4, %struct.Memory** %MEMORY
  br label %block_.L_43a655

block_.L_43aff9:                                  ; preds = %block_.L_43a655
  %loadMem_43aff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13080 = getelementptr inbounds %struct.GPR, %struct.GPR* %13079, i32 0, i32 33
  %13081 = getelementptr inbounds %struct.Reg, %struct.Reg* %13080, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %13081 to i64*
  %13082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13083 = getelementptr inbounds %struct.GPR, %struct.GPR* %13082, i32 0, i32 15
  %13084 = getelementptr inbounds %struct.Reg, %struct.Reg* %13083, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %13084 to i64*
  %13085 = load i64, i64* %RBP.i8
  %13086 = sub i64 %13085, 4
  %13087 = load i64, i64* %PC.i7
  %13088 = add i64 %13087, 7
  store i64 %13088, i64* %PC.i7
  %13089 = inttoptr i64 %13086 to i32*
  store i32 0, i32* %13089
  store %struct.Memory* %loadMem_43aff9, %struct.Memory** %MEMORY
  br label %block_.L_43b000

block_.L_43b000:                                  ; preds = %block_.L_43aff9, %block_.L_43afd5, %block_43a460, %block_43a43b
  %loadMem_43b000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13091 = getelementptr inbounds %struct.GPR, %struct.GPR* %13090, i32 0, i32 33
  %13092 = getelementptr inbounds %struct.Reg, %struct.Reg* %13091, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %13092 to i64*
  %13093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13094 = getelementptr inbounds %struct.GPR, %struct.GPR* %13093, i32 0, i32 1
  %13095 = getelementptr inbounds %struct.Reg, %struct.Reg* %13094, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %13095 to i64*
  %13096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13097 = getelementptr inbounds %struct.GPR, %struct.GPR* %13096, i32 0, i32 15
  %13098 = getelementptr inbounds %struct.Reg, %struct.Reg* %13097, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %13098 to i64*
  %13099 = load i64, i64* %RBP.i6
  %13100 = sub i64 %13099, 4
  %13101 = load i64, i64* %PC.i5
  %13102 = add i64 %13101, 3
  store i64 %13102, i64* %PC.i5
  %13103 = inttoptr i64 %13100 to i32*
  %13104 = load i32, i32* %13103
  %13105 = zext i32 %13104 to i64
  store i64 %13105, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_43b000, %struct.Memory** %MEMORY
  %loadMem_43b003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13107 = getelementptr inbounds %struct.GPR, %struct.GPR* %13106, i32 0, i32 33
  %13108 = getelementptr inbounds %struct.Reg, %struct.Reg* %13107, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %13108 to i64*
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13110 = getelementptr inbounds %struct.GPR, %struct.GPR* %13109, i32 0, i32 13
  %13111 = getelementptr inbounds %struct.Reg, %struct.Reg* %13110, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %13111 to i64*
  %13112 = load i64, i64* %RSP.i
  %13113 = load i64, i64* %PC.i4
  %13114 = add i64 %13113, 7
  store i64 %13114, i64* %PC.i4
  %13115 = add i64 448, %13112
  store i64 %13115, i64* %RSP.i, align 8
  %13116 = icmp ult i64 %13115, %13112
  %13117 = icmp ult i64 %13115, 448
  %13118 = or i1 %13116, %13117
  %13119 = zext i1 %13118 to i8
  %13120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13119, i8* %13120, align 1
  %13121 = trunc i64 %13115 to i32
  %13122 = and i32 %13121, 255
  %13123 = call i32 @llvm.ctpop.i32(i32 %13122)
  %13124 = trunc i32 %13123 to i8
  %13125 = and i8 %13124, 1
  %13126 = xor i8 %13125, 1
  %13127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13126, i8* %13127, align 1
  %13128 = xor i64 448, %13112
  %13129 = xor i64 %13128, %13115
  %13130 = lshr i64 %13129, 4
  %13131 = trunc i64 %13130 to i8
  %13132 = and i8 %13131, 1
  %13133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13132, i8* %13133, align 1
  %13134 = icmp eq i64 %13115, 0
  %13135 = zext i1 %13134 to i8
  %13136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13135, i8* %13136, align 1
  %13137 = lshr i64 %13115, 63
  %13138 = trunc i64 %13137 to i8
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13138, i8* %13139, align 1
  %13140 = lshr i64 %13112, 63
  %13141 = xor i64 %13137, %13140
  %13142 = add i64 %13141, %13137
  %13143 = icmp eq i64 %13142, 2
  %13144 = zext i1 %13143 to i8
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13144, i8* %13145, align 1
  store %struct.Memory* %loadMem_43b003, %struct.Memory** %MEMORY
  %loadMem_43b00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13147 = getelementptr inbounds %struct.GPR, %struct.GPR* %13146, i32 0, i32 33
  %13148 = getelementptr inbounds %struct.Reg, %struct.Reg* %13147, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %13148 to i64*
  %13149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13150 = getelementptr inbounds %struct.GPR, %struct.GPR* %13149, i32 0, i32 15
  %13151 = getelementptr inbounds %struct.Reg, %struct.Reg* %13150, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %13151 to i64*
  %13152 = load i64, i64* %PC.i2
  %13153 = add i64 %13152, 1
  store i64 %13153, i64* %PC.i2
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13155 = load i64, i64* %13154, align 8
  %13156 = add i64 %13155, 8
  %13157 = inttoptr i64 %13155 to i64*
  %13158 = load i64, i64* %13157
  store i64 %13158, i64* %RBP.i3, align 8
  store i64 %13156, i64* %13154, align 8
  store %struct.Memory* %loadMem_43b00a, %struct.Memory** %MEMORY
  %loadMem_43b00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13160 = getelementptr inbounds %struct.GPR, %struct.GPR* %13159, i32 0, i32 33
  %13161 = getelementptr inbounds %struct.Reg, %struct.Reg* %13160, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %13161 to i64*
  %13162 = load i64, i64* %PC.i1
  %13163 = add i64 %13162, 1
  store i64 %13163, i64* %PC.i1
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13166 = load i64, i64* %13165, align 8
  %13167 = inttoptr i64 %13166 to i64*
  %13168 = load i64, i64* %13167
  store i64 %13168, i64* %13164, align 8
  %13169 = add i64 %13166, 8
  store i64 %13169, i64* %13165, align 8
  store %struct.Memory* %loadMem_43b00b, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_43b00b
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x1c0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 448
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 448
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 448, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a378(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a3a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d7b6___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d7b6_type* @G__0x57d7b6 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x453___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1107, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d8ef___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d8ef_type* @G__0x57d8ef to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a3b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a3d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x454___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1108, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57bdd8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57bdd8_type* @G__0x57bdd8 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a3fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 2, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a40e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 7
  %14 = icmp ult i32 %9, 7
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 7, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a447(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b000(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 20
  %16 = icmp ult i32 %14, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 20
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a46c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a64b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a638(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x15___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 21, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 21
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 21, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x164__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x24___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 36, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a625(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x164__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_0x1c__rcx____sil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %SIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__sil__MINUS0xc0__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = add i64 %16, -192
  %19 = add i64 %18, %17
  %20 = load i8, i8* %SIL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 8
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0xc0__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -192
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  %19 = load i8, i8* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = zext i8 %19 to i32
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i8 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %19, 7
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i8 %19, 7
  %34 = xor i8 %31, %33
  %35 = add i8 %34, %33
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a516(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x164__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_0x1e__rax____dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 30
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x100__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -256
  %19 = add i64 %18, %17
  %20 = load i8, i8* %DL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0__MINUS0xe0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -224
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 0, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a561(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a576(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0xe0__rbp__rax_1____cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -224
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i8*
  %23 = load i8, i8* %22
  store i8 %23, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addb__0x1___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = add i8 1, %10
  store i8 %14, i8* %CL, align 1
  %15 = icmp ult i8 %14, %10
  %16 = icmp ult i8 %14, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = zext i8 %14 to i32
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %11
  %27 = trunc i64 %26 to i8
  %28 = xor i8 %27, %14
  %29 = lshr i8 %28, 4
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i8 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i8 %14, 7
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i8 %10, 7
  %38 = xor i8 %35, %37
  %39 = add i8 %38, %35
  %40 = icmp eq i8 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0xe0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -224
  %19 = add i64 %18, %17
  %20 = load i8, i8* %CL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a595(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a5aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x164__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_halfeye(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a61c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x100__rbp__rax_1____cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -256
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i8*
  %23 = load i8, i8* %22
  store i8 %23, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x100__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -256
  %19 = add i64 %18, %17
  %20 = load i8, i8* %CL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xa0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -160
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1__MINUS0xc0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -192
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 1, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1__MINUS0x100__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -256
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 1, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a62a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a48a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a63d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a473(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 260
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x7cc820___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x7cc820_type* @G__0x7cc820 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x104__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x28___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 40, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = trunc i64 %13 to i32
  %16 = and i32 %15, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i64 %13, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %13, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %13, 63
  %30 = xor i64 %26, %29
  %31 = add i64 %30, %29
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43aff9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 72
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a6bf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 76
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a6c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43afe5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.reset_map(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x160__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x168__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 360
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.first_map(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x168__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x14___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 20, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x170__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x168__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x160__rbp__rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -352
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x174__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 376
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x174__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x100__rbp__rax_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -256
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x170__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x3__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 3
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a795(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0xc0__rbp__rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -192
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i8*
  %16 = load i8, i8* %15
  %17 = sext i8 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0xe0__rbp__rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -224
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x1__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a79f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 376
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 376
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a83d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xa0__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -160
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a7ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a812(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x2__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a80d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a838(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 1, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a833(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a83d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43aa1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x17c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 380
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x170__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x3__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 3
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43aa1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x17c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 4
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x168__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 360
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43aa01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rax__rcx_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x180__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp__rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x180__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp__rax_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a9fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x180__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a99a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xa0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -160
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a99a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x174__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xa0__rbp__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -160
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x30___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 48, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x174__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a9ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a9ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x180__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa1a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a854(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43aa52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x168__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x160__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.next_map(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43aa4d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa97(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aa92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x168__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 72
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43aa75(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x160__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x2___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a6e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43afe0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x104__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x28___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 40, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x280__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x284__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 644
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.eye_move_urgency(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43af8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 388
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x184__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43ae1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x184__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x190__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x190__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x2__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 2
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = sext i8 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 8, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ac9e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i8*
  %16 = load i8, i8* %15
  %17 = sext i8 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ac64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x184__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x160__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -352
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43ac64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x160__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -352
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x160__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -352
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x1a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x194__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x8__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43ac5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x194__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 12
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x280__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x280__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 640
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ac04(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ac99(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x160__rbp__rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -352
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x280__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x280__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 640
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ac9e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 4, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RCX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ae06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43adc8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43adc8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x1b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 420
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1b0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x1c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43adc3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1b0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1a4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 32
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x284__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 644
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x284__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 644
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x140__rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 320
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ad64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x284__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 644
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x284__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 644
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x140__rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 320
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae0b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aaff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x280__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43ae46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x284__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 644
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae6e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x519___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1305, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d90a___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d90a_type* @G__0x57d90a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x140__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x284__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 644
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43af03(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x140__rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 320
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.safe_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 5
  %14 = icmp ult i32 %9, 5
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 5, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43aeea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x140__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 320
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af03(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aeef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae94(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 2, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43af1b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af3e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d936___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d936_type* @G__0x57d936 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gprintf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43af56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af88(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d962___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d962_type* @G__0x57d962 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xab0f28_type* @G_0xab0f28 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43afa0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43afd5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57d97a___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57d97a_type* @G__0x57d97a to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a655(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1c0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 448, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 448
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 448, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
