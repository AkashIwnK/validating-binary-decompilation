; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G__0xb4bd20 = global %G__0xb4bd20_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_46de20.captured_territory(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @dilate_erode(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_46ccd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_46ccd0, %struct.Memory** %MEMORY
  %loadMem_46ccd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i16 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i16
  %27 = load i64, i64* %PC.i15
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i15
  store i64 %26, i64* %RBP.i17, align 8
  store %struct.Memory* %loadMem_46ccd1, %struct.Memory** %MEMORY
  %loadMem_46ccd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i469 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i469
  %36 = load i64, i64* %PC.i468
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i468
  %38 = sub i64 %35, 1648
  store i64 %38, i64* %RSP.i469, align 8
  %39 = icmp ult i64 %35, 1648
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 1648, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_46ccd4, %struct.Memory** %MEMORY
  %loadMem_46ccdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1113
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i1112
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i1112
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_46ccdb, %struct.Memory** %MEMORY
  %loadMem_46ccde = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i1255 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i1255
  %93 = sub i64 %92, 8
  %94 = load i32, i32* %ESI.i
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i1254
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i1254
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_46ccde, %struct.Memory** %MEMORY
  %loadMem_46cce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RDX.i1252 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1253
  %109 = sub i64 %108, 16
  %110 = load i64, i64* %RDX.i1252
  %111 = load i64, i64* %PC.i1251
  %112 = add i64 %111, 4
  store i64 %112, i64* %PC.i1251
  %113 = inttoptr i64 %109 to i64*
  store i64 %110, i64* %113
  store %struct.Memory* %loadMem_46cce1, %struct.Memory** %MEMORY
  %loadMem_46cce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 5
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %ECX.i1249 = bitcast %union.anon* %119 to i32*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 15
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RBP.i1250 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %RBP.i1250
  %124 = sub i64 %123, 20
  %125 = load i32, i32* %ECX.i1249
  %126 = zext i32 %125 to i64
  %127 = load i64, i64* %PC.i1248
  %128 = add i64 %127, 3
  store i64 %128, i64* %PC.i1248
  %129 = inttoptr i64 %124 to i32*
  store i32 %125, i32* %129
  store %struct.Memory* %loadMem_46cce5, %struct.Memory** %MEMORY
  %loadMem_46cce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %131 = getelementptr inbounds %struct.GPR, %struct.GPR* %130, i32 0, i32 33
  %132 = getelementptr inbounds %struct.Reg, %struct.Reg* %131, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %132 to i64*
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 15
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %RBP.i1247 = bitcast %union.anon* %135 to i64*
  %136 = load i64, i64* %RBP.i1247
  %137 = sub i64 %136, 1640
  %138 = load i64, i64* %PC.i1246
  %139 = add i64 %138, 10
  store i64 %139, i64* %PC.i1246
  %140 = inttoptr i64 %137 to i32*
  store i32 0, i32* %140
  store %struct.Memory* %loadMem_46cce8, %struct.Memory** %MEMORY
  %loadMem_46ccf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 33
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i1245
  %148 = sub i64 %147, 24
  %149 = load i64, i64* %PC.i1244
  %150 = add i64 %149, 7
  store i64 %150, i64* %PC.i1244
  %151 = inttoptr i64 %148 to i32*
  store i32 21, i32* %151
  store %struct.Memory* %loadMem_46ccf2, %struct.Memory** %MEMORY
  br label %block_.L_46ccf9

block_.L_46ccf9:                                  ; preds = %block_.L_46cdf1, %entry
  %loadMem_46ccf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %153 = getelementptr inbounds %struct.GPR, %struct.GPR* %152, i32 0, i32 33
  %154 = getelementptr inbounds %struct.Reg, %struct.Reg* %153, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %154 to i64*
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 15
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %RBP.i1243 = bitcast %union.anon* %157 to i64*
  %158 = load i64, i64* %RBP.i1243
  %159 = sub i64 %158, 24
  %160 = load i64, i64* %PC.i1242
  %161 = add i64 %160, 7
  store i64 %161, i64* %PC.i1242
  %162 = inttoptr i64 %159 to i32*
  %163 = load i32, i32* %162
  %164 = sub i32 %163, 400
  %165 = icmp ult i32 %163, 400
  %166 = zext i1 %165 to i8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %166, i8* %167, align 1
  %168 = and i32 %164, 255
  %169 = call i32 @llvm.ctpop.i32(i32 %168)
  %170 = trunc i32 %169 to i8
  %171 = and i8 %170, 1
  %172 = xor i8 %171, 1
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %172, i8* %173, align 1
  %174 = xor i32 %163, 400
  %175 = xor i32 %174, %164
  %176 = lshr i32 %175, 4
  %177 = trunc i32 %176 to i8
  %178 = and i8 %177, 1
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %178, i8* %179, align 1
  %180 = icmp eq i32 %164, 0
  %181 = zext i1 %180 to i8
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %181, i8* %182, align 1
  %183 = lshr i32 %164, 31
  %184 = trunc i32 %183 to i8
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %184, i8* %185, align 1
  %186 = lshr i32 %163, 31
  %187 = xor i32 %183, %186
  %188 = add i32 %187, %186
  %189 = icmp eq i32 %188, 2
  %190 = zext i1 %189 to i8
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %190, i8* %191, align 1
  store %struct.Memory* %loadMem_46ccf9, %struct.Memory** %MEMORY
  %loadMem_46cd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 33
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %194 to i64*
  %195 = load i64, i64* %PC.i1241
  %196 = add i64 %195, 255
  %197 = load i64, i64* %PC.i1241
  %198 = add i64 %197, 6
  %199 = load i64, i64* %PC.i1241
  %200 = add i64 %199, 6
  store i64 %200, i64* %PC.i1241
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %202 = load i8, i8* %201, align 1
  %203 = icmp ne i8 %202, 0
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %205 = load i8, i8* %204, align 1
  %206 = icmp ne i8 %205, 0
  %207 = xor i1 %203, %206
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i8
  store i8 %209, i8* %BRANCH_TAKEN, align 1
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %211 = select i1 %207, i64 %198, i64 %196
  store i64 %211, i64* %210, align 8
  store %struct.Memory* %loadMem_46cd00, %struct.Memory** %MEMORY
  %loadBr_46cd00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd00 = icmp eq i8 %loadBr_46cd00, 1
  br i1 %cmpBr_46cd00, label %block_.L_46cdff, label %block_46cd06

block_46cd06:                                     ; preds = %block_.L_46ccf9
  %loadMem_46cd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 33
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %214 to i64*
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 1
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %RAX.i1239 = bitcast %union.anon* %217 to i64*
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 15
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %RBP.i1240 = bitcast %union.anon* %220 to i64*
  %221 = load i64, i64* %RBP.i1240
  %222 = sub i64 %221, 24
  %223 = load i64, i64* %PC.i1238
  %224 = add i64 %223, 4
  store i64 %224, i64* %PC.i1238
  %225 = inttoptr i64 %222 to i32*
  %226 = load i32, i32* %225
  %227 = sext i32 %226 to i64
  store i64 %227, i64* %RAX.i1239, align 8
  store %struct.Memory* %loadMem_46cd06, %struct.Memory** %MEMORY
  %loadMem_46cd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 33
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 1
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 5
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %RCX.i1237 = bitcast %union.anon* %236 to i64*
  %237 = load i64, i64* %RAX.i1236
  %238 = add i64 %237, 12099168
  %239 = load i64, i64* %PC.i1235
  %240 = add i64 %239, 8
  store i64 %240, i64* %PC.i1235
  %241 = inttoptr i64 %238 to i8*
  %242 = load i8, i8* %241
  %243 = zext i8 %242 to i64
  store i64 %243, i64* %RCX.i1237, align 8
  store %struct.Memory* %loadMem_46cd0a, %struct.Memory** %MEMORY
  %loadMem_46cd12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 33
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %246 to i64*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 5
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %ECX.i1234 = bitcast %union.anon* %249 to i32*
  %250 = load i32, i32* %ECX.i1234
  %251 = zext i32 %250 to i64
  %252 = load i64, i64* %PC.i1233
  %253 = add i64 %252, 3
  store i64 %253, i64* %PC.i1233
  %254 = sub i32 %250, 3
  %255 = icmp ult i32 %250, 3
  %256 = zext i1 %255 to i8
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %256, i8* %257, align 1
  %258 = and i32 %254, 255
  %259 = call i32 @llvm.ctpop.i32(i32 %258)
  %260 = trunc i32 %259 to i8
  %261 = and i8 %260, 1
  %262 = xor i8 %261, 1
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %262, i8* %263, align 1
  %264 = xor i64 3, %251
  %265 = trunc i64 %264 to i32
  %266 = xor i32 %265, %254
  %267 = lshr i32 %266, 4
  %268 = trunc i32 %267 to i8
  %269 = and i8 %268, 1
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %269, i8* %270, align 1
  %271 = icmp eq i32 %254, 0
  %272 = zext i1 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %272, i8* %273, align 1
  %274 = lshr i32 %254, 31
  %275 = trunc i32 %274 to i8
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %275, i8* %276, align 1
  %277 = lshr i32 %250, 31
  %278 = xor i32 %274, %277
  %279 = add i32 %278, %277
  %280 = icmp eq i32 %279, 2
  %281 = zext i1 %280 to i8
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %281, i8* %282, align 1
  store %struct.Memory* %loadMem_46cd12, %struct.Memory** %MEMORY
  %loadMem_46cd15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %284 = getelementptr inbounds %struct.GPR, %struct.GPR* %283, i32 0, i32 33
  %285 = getelementptr inbounds %struct.Reg, %struct.Reg* %284, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %285 to i64*
  %286 = load i64, i64* %PC.i1232
  %287 = add i64 %286, 11
  %288 = load i64, i64* %PC.i1232
  %289 = add i64 %288, 6
  %290 = load i64, i64* %PC.i1232
  %291 = add i64 %290, 6
  store i64 %291, i64* %PC.i1232
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %293 = load i8, i8* %292, align 1
  %294 = icmp eq i8 %293, 0
  %295 = zext i1 %294 to i8
  store i8 %295, i8* %BRANCH_TAKEN, align 1
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %297 = select i1 %294, i64 %287, i64 %289
  store i64 %297, i64* %296, align 8
  store %struct.Memory* %loadMem_46cd15, %struct.Memory** %MEMORY
  %loadBr_46cd15 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd15 = icmp eq i8 %loadBr_46cd15, 1
  br i1 %cmpBr_46cd15, label %block_.L_46cd20, label %block_46cd1b

block_46cd1b:                                     ; preds = %block_46cd06
  %loadMem_46cd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %299 = getelementptr inbounds %struct.GPR, %struct.GPR* %298, i32 0, i32 33
  %300 = getelementptr inbounds %struct.Reg, %struct.Reg* %299, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %300 to i64*
  %301 = load i64, i64* %PC.i1231
  %302 = add i64 %301, 214
  %303 = load i64, i64* %PC.i1231
  %304 = add i64 %303, 5
  store i64 %304, i64* %PC.i1231
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %302, i64* %305, align 8
  store %struct.Memory* %loadMem_46cd1b, %struct.Memory** %MEMORY
  br label %block_.L_46cdf1

block_.L_46cd20:                                  ; preds = %block_46cd06
  %loadMem_46cd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 33
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %308 to i64*
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %310 = getelementptr inbounds %struct.GPR, %struct.GPR* %309, i32 0, i32 1
  %311 = getelementptr inbounds %struct.Reg, %struct.Reg* %310, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %311 to i64*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 15
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %314 to i64*
  %315 = load i64, i64* %RBP.i1230
  %316 = sub i64 %315, 24
  %317 = load i64, i64* %PC.i1228
  %318 = add i64 %317, 4
  store i64 %318, i64* %PC.i1228
  %319 = inttoptr i64 %316 to i32*
  %320 = load i32, i32* %319
  %321 = sext i32 %320 to i64
  store i64 %321, i64* %RAX.i1229, align 8
  store %struct.Memory* %loadMem_46cd20, %struct.Memory** %MEMORY
  %loadMem_46cd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 33
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %324 to i64*
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %326 = getelementptr inbounds %struct.GPR, %struct.GPR* %325, i32 0, i32 1
  %327 = getelementptr inbounds %struct.Reg, %struct.Reg* %326, i32 0, i32 0
  %RAX.i1226 = bitcast %union.anon* %327 to i64*
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %329 = getelementptr inbounds %struct.GPR, %struct.GPR* %328, i32 0, i32 5
  %330 = getelementptr inbounds %struct.Reg, %struct.Reg* %329, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %330 to i64*
  %331 = load i64, i64* %RAX.i1226
  %332 = add i64 %331, 12099168
  %333 = load i64, i64* %PC.i1225
  %334 = add i64 %333, 8
  store i64 %334, i64* %PC.i1225
  %335 = inttoptr i64 %332 to i8*
  %336 = load i8, i8* %335
  %337 = zext i8 %336 to i64
  store i64 %337, i64* %RCX.i1227, align 8
  store %struct.Memory* %loadMem_46cd24, %struct.Memory** %MEMORY
  %loadMem_46cd2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %339 = getelementptr inbounds %struct.GPR, %struct.GPR* %338, i32 0, i32 33
  %340 = getelementptr inbounds %struct.Reg, %struct.Reg* %339, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %340 to i64*
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %342 = getelementptr inbounds %struct.GPR, %struct.GPR* %341, i32 0, i32 5
  %343 = getelementptr inbounds %struct.Reg, %struct.Reg* %342, i32 0, i32 0
  %ECX.i1224 = bitcast %union.anon* %343 to i32*
  %344 = load i32, i32* %ECX.i1224
  %345 = zext i32 %344 to i64
  %346 = load i64, i64* %PC.i1223
  %347 = add i64 %346, 3
  store i64 %347, i64* %PC.i1223
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %348, align 1
  %349 = and i32 %344, 255
  %350 = call i32 @llvm.ctpop.i32(i32 %349)
  %351 = trunc i32 %350 to i8
  %352 = and i8 %351, 1
  %353 = xor i8 %352, 1
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %353, i8* %354, align 1
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %355, align 1
  %356 = icmp eq i32 %344, 0
  %357 = zext i1 %356 to i8
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %357, i8* %358, align 1
  %359 = lshr i32 %344, 31
  %360 = trunc i32 %359 to i8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %360, i8* %361, align 1
  %362 = lshr i32 %344, 31
  %363 = xor i32 %359, %362
  %364 = add i32 %363, %362
  %365 = icmp eq i32 %364, 2
  %366 = zext i1 %365 to i8
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %366, i8* %367, align 1
  store %struct.Memory* %loadMem_46cd2c, %struct.Memory** %MEMORY
  %loadMem_46cd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 33
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %370 to i64*
  %371 = load i64, i64* %PC.i1222
  %372 = add i64 %371, 47
  %373 = load i64, i64* %PC.i1222
  %374 = add i64 %373, 6
  %375 = load i64, i64* %PC.i1222
  %376 = add i64 %375, 6
  store i64 %376, i64* %PC.i1222
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %378 = load i8, i8* %377, align 1
  store i8 %378, i8* %BRANCH_TAKEN, align 1
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %380 = icmp ne i8 %378, 0
  %381 = select i1 %380, i64 %372, i64 %374
  store i64 %381, i64* %379, align 8
  store %struct.Memory* %loadMem_46cd2f, %struct.Memory** %MEMORY
  %loadBr_46cd2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd2f = icmp eq i8 %loadBr_46cd2f, 1
  br i1 %cmpBr_46cd2f, label %block_.L_46cd5e, label %block_46cd35

block_46cd35:                                     ; preds = %block_.L_46cd20
  %loadMem_46cd35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 33
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %384 to i64*
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 1
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %RAX.i1221 = bitcast %union.anon* %387 to i64*
  %388 = load i64, i64* %PC.i1220
  %389 = add i64 %388, 10
  store i64 %389, i64* %PC.i1220
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i1221, align 8
  store %struct.Memory* %loadMem_46cd35, %struct.Memory** %MEMORY
  %loadMem_46cd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %391 = getelementptr inbounds %struct.GPR, %struct.GPR* %390, i32 0, i32 33
  %392 = getelementptr inbounds %struct.Reg, %struct.Reg* %391, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %392 to i64*
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 5
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %RCX.i1218 = bitcast %union.anon* %395 to i64*
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 15
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %RBP.i1219 = bitcast %union.anon* %398 to i64*
  %399 = load i64, i64* %RBP.i1219
  %400 = sub i64 %399, 24
  %401 = load i64, i64* %PC.i1217
  %402 = add i64 %401, 4
  store i64 %402, i64* %PC.i1217
  %403 = inttoptr i64 %400 to i32*
  %404 = load i32, i32* %403
  %405 = sext i32 %404 to i64
  store i64 %405, i64* %RCX.i1218, align 8
  store %struct.Memory* %loadMem_46cd3f, %struct.Memory** %MEMORY
  %loadMem_46cd43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 33
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %408 to i64*
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 5
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %RCX.i1216 = bitcast %union.anon* %411 to i64*
  %412 = load i64, i64* %RCX.i1216
  %413 = load i64, i64* %PC.i1215
  %414 = add i64 %413, 4
  store i64 %414, i64* %PC.i1215
  %415 = sext i64 %412 to i128
  %416 = and i128 %415, -18446744073709551616
  %417 = zext i64 %412 to i128
  %418 = or i128 %416, %417
  %419 = mul i128 76, %418
  %420 = trunc i128 %419 to i64
  store i64 %420, i64* %RCX.i1216, align 8
  %421 = sext i64 %420 to i128
  %422 = icmp ne i128 %421, %419
  %423 = zext i1 %422 to i8
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %423, i8* %424, align 1
  %425 = trunc i128 %419 to i32
  %426 = and i32 %425, 255
  %427 = call i32 @llvm.ctpop.i32(i32 %426)
  %428 = trunc i32 %427 to i8
  %429 = and i8 %428, 1
  %430 = xor i8 %429, 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %430, i8* %431, align 1
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %432, align 1
  %433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %433, align 1
  %434 = lshr i64 %420, 63
  %435 = trunc i64 %434 to i8
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %435, i8* %436, align 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %423, i8* %437, align 1
  store %struct.Memory* %loadMem_46cd43, %struct.Memory** %MEMORY
  %loadMem_46cd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %439 = getelementptr inbounds %struct.GPR, %struct.GPR* %438, i32 0, i32 33
  %440 = getelementptr inbounds %struct.Reg, %struct.Reg* %439, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %440 to i64*
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 1
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %RAX.i1213 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 5
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %RCX.i1214 = bitcast %union.anon* %446 to i64*
  %447 = load i64, i64* %RAX.i1213
  %448 = load i64, i64* %RCX.i1214
  %449 = load i64, i64* %PC.i1212
  %450 = add i64 %449, 3
  store i64 %450, i64* %PC.i1212
  %451 = add i64 %448, %447
  store i64 %451, i64* %RAX.i1213, align 8
  %452 = icmp ult i64 %451, %447
  %453 = icmp ult i64 %451, %448
  %454 = or i1 %452, %453
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %455, i8* %456, align 1
  %457 = trunc i64 %451 to i32
  %458 = and i32 %457, 255
  %459 = call i32 @llvm.ctpop.i32(i32 %458)
  %460 = trunc i32 %459 to i8
  %461 = and i8 %460, 1
  %462 = xor i8 %461, 1
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %462, i8* %463, align 1
  %464 = xor i64 %448, %447
  %465 = xor i64 %464, %451
  %466 = lshr i64 %465, 4
  %467 = trunc i64 %466 to i8
  %468 = and i8 %467, 1
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %468, i8* %469, align 1
  %470 = icmp eq i64 %451, 0
  %471 = zext i1 %470 to i8
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %471, i8* %472, align 1
  %473 = lshr i64 %451, 63
  %474 = trunc i64 %473 to i8
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %474, i8* %475, align 1
  %476 = lshr i64 %447, 63
  %477 = lshr i64 %448, 63
  %478 = xor i64 %473, %476
  %479 = xor i64 %473, %477
  %480 = add i64 %478, %479
  %481 = icmp eq i64 %480, 2
  %482 = zext i1 %481 to i8
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %482, i8* %483, align 1
  store %struct.Memory* %loadMem_46cd47, %struct.Memory** %MEMORY
  %loadMem_46cd4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %485 = getelementptr inbounds %struct.GPR, %struct.GPR* %484, i32 0, i32 33
  %486 = getelementptr inbounds %struct.Reg, %struct.Reg* %485, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %486 to i64*
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 1
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %RAX.i1211 = bitcast %union.anon* %489 to i64*
  %490 = load i64, i64* %RAX.i1211
  %491 = add i64 %490, 64
  %492 = load i64, i64* %PC.i1210
  %493 = add i64 %492, 4
  store i64 %493, i64* %PC.i1210
  %494 = inttoptr i64 %491 to i32*
  %495 = load i32, i32* %494
  %496 = sub i32 %495, 2
  %497 = icmp ult i32 %495, 2
  %498 = zext i1 %497 to i8
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %498, i8* %499, align 1
  %500 = and i32 %496, 255
  %501 = call i32 @llvm.ctpop.i32(i32 %500)
  %502 = trunc i32 %501 to i8
  %503 = and i8 %502, 1
  %504 = xor i8 %503, 1
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %504, i8* %505, align 1
  %506 = xor i32 %495, 2
  %507 = xor i32 %506, %496
  %508 = lshr i32 %507, 4
  %509 = trunc i32 %508 to i8
  %510 = and i8 %509, 1
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %510, i8* %511, align 1
  %512 = icmp eq i32 %496, 0
  %513 = zext i1 %512 to i8
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %513, i8* %514, align 1
  %515 = lshr i32 %496, 31
  %516 = trunc i32 %515 to i8
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %516, i8* %517, align 1
  %518 = lshr i32 %495, 31
  %519 = xor i32 %515, %518
  %520 = add i32 %519, %518
  %521 = icmp eq i32 %520, 2
  %522 = zext i1 %521 to i8
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %522, i8* %523, align 1
  store %struct.Memory* %loadMem_46cd4a, %struct.Memory** %MEMORY
  %loadMem_46cd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %525 = getelementptr inbounds %struct.GPR, %struct.GPR* %524, i32 0, i32 33
  %526 = getelementptr inbounds %struct.Reg, %struct.Reg* %525, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %526 to i64*
  %527 = load i64, i64* %PC.i1209
  %528 = add i64 %527, 16
  %529 = load i64, i64* %PC.i1209
  %530 = add i64 %529, 6
  %531 = load i64, i64* %PC.i1209
  %532 = add i64 %531, 6
  store i64 %532, i64* %PC.i1209
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %534 = load i8, i8* %533, align 1
  %535 = icmp eq i8 %534, 0
  %536 = zext i1 %535 to i8
  store i8 %536, i8* %BRANCH_TAKEN, align 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %538 = select i1 %535, i64 %528, i64 %530
  store i64 %538, i64* %537, align 8
  store %struct.Memory* %loadMem_46cd4e, %struct.Memory** %MEMORY
  %loadBr_46cd4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd4e = icmp eq i8 %loadBr_46cd4e, 1
  br i1 %cmpBr_46cd4e, label %block_.L_46cd5e, label %block_46cd54

block_46cd54:                                     ; preds = %block_46cd35
  %loadMem_46cd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 33
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %541 to i64*
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 15
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %RBP.i1208 = bitcast %union.anon* %544 to i64*
  %545 = load i64, i64* %RBP.i1208
  %546 = sub i64 %545, 1640
  %547 = load i64, i64* %PC.i1207
  %548 = add i64 %547, 10
  store i64 %548, i64* %PC.i1207
  %549 = inttoptr i64 %546 to i32*
  store i32 1, i32* %549
  store %struct.Memory* %loadMem_46cd54, %struct.Memory** %MEMORY
  br label %block_.L_46cd5e

block_.L_46cd5e:                                  ; preds = %block_46cd54, %block_46cd35, %block_.L_46cd20
  %loadMem_46cd5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 33
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %552 to i64*
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %554 = getelementptr inbounds %struct.GPR, %struct.GPR* %553, i32 0, i32 1
  %555 = getelementptr inbounds %struct.Reg, %struct.Reg* %554, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %555 to i64*
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %557 = getelementptr inbounds %struct.GPR, %struct.GPR* %556, i32 0, i32 15
  %558 = getelementptr inbounds %struct.Reg, %struct.Reg* %557, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %558 to i64*
  %559 = load i64, i64* %RBP.i1206
  %560 = sub i64 %559, 24
  %561 = load i64, i64* %PC.i1204
  %562 = add i64 %561, 4
  store i64 %562, i64* %PC.i1204
  %563 = inttoptr i64 %560 to i32*
  %564 = load i32, i32* %563
  %565 = sext i32 %564 to i64
  store i64 %565, i64* %RAX.i1205, align 8
  store %struct.Memory* %loadMem_46cd5e, %struct.Memory** %MEMORY
  %loadMem_46cd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 33
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %568 to i64*
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 1
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %571 to i64*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 5
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %RAX.i1202
  %576 = add i64 %575, 12099168
  %577 = load i64, i64* %PC.i1201
  %578 = add i64 %577, 8
  store i64 %578, i64* %PC.i1201
  %579 = inttoptr i64 %576 to i8*
  %580 = load i8, i8* %579
  %581 = zext i8 %580 to i64
  store i64 %581, i64* %RCX.i1203, align 8
  store %struct.Memory* %loadMem_46cd62, %struct.Memory** %MEMORY
  %loadMem_46cd6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %583 = getelementptr inbounds %struct.GPR, %struct.GPR* %582, i32 0, i32 33
  %584 = getelementptr inbounds %struct.Reg, %struct.Reg* %583, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %584 to i64*
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 5
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %ECX.i1200 = bitcast %union.anon* %587 to i32*
  %588 = load i32, i32* %ECX.i1200
  %589 = zext i32 %588 to i64
  %590 = load i64, i64* %PC.i1199
  %591 = add i64 %590, 3
  store i64 %591, i64* %PC.i1199
  %592 = sub i32 %588, 1
  %593 = icmp ult i32 %588, 1
  %594 = zext i1 %593 to i8
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %594, i8* %595, align 1
  %596 = and i32 %592, 255
  %597 = call i32 @llvm.ctpop.i32(i32 %596)
  %598 = trunc i32 %597 to i8
  %599 = and i8 %598, 1
  %600 = xor i8 %599, 1
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %600, i8* %601, align 1
  %602 = xor i64 1, %589
  %603 = trunc i64 %602 to i32
  %604 = xor i32 %603, %592
  %605 = lshr i32 %604, 4
  %606 = trunc i32 %605 to i8
  %607 = and i8 %606, 1
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %607, i8* %608, align 1
  %609 = icmp eq i32 %592, 0
  %610 = zext i1 %609 to i8
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %610, i8* %611, align 1
  %612 = lshr i32 %592, 31
  %613 = trunc i32 %612 to i8
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %613, i8* %614, align 1
  %615 = lshr i32 %588, 31
  %616 = xor i32 %612, %615
  %617 = add i32 %616, %615
  %618 = icmp eq i32 %617, 2
  %619 = zext i1 %618 to i8
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %619, i8* %620, align 1
  store %struct.Memory* %loadMem_46cd6a, %struct.Memory** %MEMORY
  %loadMem_46cd6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 33
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %623 to i64*
  %624 = load i64, i64* %PC.i1198
  %625 = add i64 %624, 46
  %626 = load i64, i64* %PC.i1198
  %627 = add i64 %626, 6
  %628 = load i64, i64* %PC.i1198
  %629 = add i64 %628, 6
  store i64 %629, i64* %PC.i1198
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %631 = load i8, i8* %630, align 1
  %632 = icmp eq i8 %631, 0
  %633 = zext i1 %632 to i8
  store i8 %633, i8* %BRANCH_TAKEN, align 1
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %635 = select i1 %632, i64 %625, i64 %627
  store i64 %635, i64* %634, align 8
  store %struct.Memory* %loadMem_46cd6d, %struct.Memory** %MEMORY
  %loadBr_46cd6d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd6d = icmp eq i8 %loadBr_46cd6d, 1
  br i1 %cmpBr_46cd6d, label %block_.L_46cd9b, label %block_46cd73

block_46cd73:                                     ; preds = %block_.L_46cd5e
  %loadMem_46cd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 33
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 11
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RDI.i1196 = bitcast %union.anon* %641 to i64*
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %643 = getelementptr inbounds %struct.GPR, %struct.GPR* %642, i32 0, i32 15
  %644 = getelementptr inbounds %struct.Reg, %struct.Reg* %643, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %644 to i64*
  %645 = load i64, i64* %RBP.i1197
  %646 = sub i64 %645, 24
  %647 = load i64, i64* %PC.i1195
  %648 = add i64 %647, 3
  store i64 %648, i64* %PC.i1195
  %649 = inttoptr i64 %646 to i32*
  %650 = load i32, i32* %649
  %651 = zext i32 %650 to i64
  store i64 %651, i64* %RDI.i1196, align 8
  store %struct.Memory* %loadMem_46cd73, %struct.Memory** %MEMORY
  %loadMem_46cd76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 9
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RSI.i1193 = bitcast %union.anon* %657 to i64*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 15
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RBP.i1194
  %662 = sub i64 %661, 20
  %663 = load i64, i64* %PC.i1192
  %664 = add i64 %663, 3
  store i64 %664, i64* %PC.i1192
  %665 = inttoptr i64 %662 to i32*
  %666 = load i32, i32* %665
  %667 = zext i32 %666 to i64
  store i64 %667, i64* %RSI.i1193, align 8
  store %struct.Memory* %loadMem_46cd76, %struct.Memory** %MEMORY
  %loadMem1_46cd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 33
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %670 to i64*
  %671 = load i64, i64* %PC.i1191
  %672 = add i64 %671, 4263
  %673 = load i64, i64* %PC.i1191
  %674 = add i64 %673, 5
  %675 = load i64, i64* %PC.i1191
  %676 = add i64 %675, 5
  store i64 %676, i64* %PC.i1191
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %678 = load i64, i64* %677, align 8
  %679 = add i64 %678, -8
  %680 = inttoptr i64 %679 to i64*
  store i64 %674, i64* %680
  store i64 %679, i64* %677, align 8
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %672, i64* %681, align 8
  store %struct.Memory* %loadMem1_46cd79, %struct.Memory** %MEMORY
  %loadMem2_46cd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46cd79 = load i64, i64* %3
  %call2_46cd79 = call %struct.Memory* @sub_46de20.captured_territory(%struct.State* %0, i64 %loadPC_46cd79, %struct.Memory* %loadMem2_46cd79)
  store %struct.Memory* %call2_46cd79, %struct.Memory** %MEMORY
  %loadMem_46cd7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 33
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %684 to i64*
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 1
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %EAX.i1190 = bitcast %union.anon* %687 to i32*
  %688 = load i32, i32* %EAX.i1190
  %689 = zext i32 %688 to i64
  %690 = load i64, i64* %PC.i1189
  %691 = add i64 %690, 3
  store i64 %691, i64* %PC.i1189
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %692, align 1
  %693 = and i32 %688, 255
  %694 = call i32 @llvm.ctpop.i32(i32 %693)
  %695 = trunc i32 %694 to i8
  %696 = and i8 %695, 1
  %697 = xor i8 %696, 1
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %697, i8* %698, align 1
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %699, align 1
  %700 = icmp eq i32 %688, 0
  %701 = zext i1 %700 to i8
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %701, i8* %702, align 1
  %703 = lshr i32 %688, 31
  %704 = trunc i32 %703 to i8
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %704, i8* %705, align 1
  %706 = lshr i32 %688, 31
  %707 = xor i32 %703, %706
  %708 = add i32 %707, %706
  %709 = icmp eq i32 %708, 2
  %710 = zext i1 %709 to i8
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %710, i8* %711, align 1
  store %struct.Memory* %loadMem_46cd7e, %struct.Memory** %MEMORY
  %loadMem_46cd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 33
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %714 to i64*
  %715 = load i64, i64* %PC.i1188
  %716 = add i64 %715, 26
  %717 = load i64, i64* %PC.i1188
  %718 = add i64 %717, 6
  %719 = load i64, i64* %PC.i1188
  %720 = add i64 %719, 6
  store i64 %720, i64* %PC.i1188
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %722 = load i8, i8* %721, align 1
  %723 = icmp eq i8 %722, 0
  %724 = zext i1 %723 to i8
  store i8 %724, i8* %BRANCH_TAKEN, align 1
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %726 = select i1 %723, i64 %716, i64 %718
  store i64 %726, i64* %725, align 8
  store %struct.Memory* %loadMem_46cd81, %struct.Memory** %MEMORY
  %loadBr_46cd81 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cd81 = icmp eq i8 %loadBr_46cd81, 1
  br i1 %cmpBr_46cd81, label %block_.L_46cd9b, label %block_46cd87

block_46cd87:                                     ; preds = %block_46cd73
  %loadMem_46cd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 33
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %729 to i64*
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 1
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %732 to i64*
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 15
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %735 to i64*
  %736 = load i64, i64* %RBP.i1187
  %737 = sub i64 %736, 16
  %738 = load i64, i64* %PC.i1185
  %739 = add i64 %738, 4
  store i64 %739, i64* %PC.i1185
  %740 = inttoptr i64 %737 to i64*
  %741 = load i64, i64* %740
  store i64 %741, i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_46cd87, %struct.Memory** %MEMORY
  %loadMem_46cd8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 33
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %744 to i64*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 5
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %RCX.i1183 = bitcast %union.anon* %747 to i64*
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %749 = getelementptr inbounds %struct.GPR, %struct.GPR* %748, i32 0, i32 15
  %750 = getelementptr inbounds %struct.Reg, %struct.Reg* %749, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %750 to i64*
  %751 = load i64, i64* %RBP.i1184
  %752 = sub i64 %751, 24
  %753 = load i64, i64* %PC.i1182
  %754 = add i64 %753, 4
  store i64 %754, i64* %PC.i1182
  %755 = inttoptr i64 %752 to i32*
  %756 = load i32, i32* %755
  %757 = sext i32 %756 to i64
  store i64 %757, i64* %RCX.i1183, align 8
  store %struct.Memory* %loadMem_46cd8b, %struct.Memory** %MEMORY
  %loadMem_46cd8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 33
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 1
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %763 to i64*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 5
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %RCX.i1181 = bitcast %union.anon* %766 to i64*
  %767 = load i64, i64* %RAX.i1180
  %768 = load i64, i64* %RCX.i1181
  %769 = mul i64 %768, 4
  %770 = add i64 %769, %767
  %771 = load i64, i64* %PC.i1179
  %772 = add i64 %771, 7
  store i64 %772, i64* %PC.i1179
  %773 = inttoptr i64 %770 to i32*
  store i32 128, i32* %773
  store %struct.Memory* %loadMem_46cd8f, %struct.Memory** %MEMORY
  %loadMem_46cd96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 33
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %776 to i64*
  %777 = load i64, i64* %PC.i1178
  %778 = add i64 %777, 86
  %779 = load i64, i64* %PC.i1178
  %780 = add i64 %779, 5
  store i64 %780, i64* %PC.i1178
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %778, i64* %781, align 8
  store %struct.Memory* %loadMem_46cd96, %struct.Memory** %MEMORY
  br label %block_.L_46cdec

block_.L_46cd9b:                                  ; preds = %block_46cd73, %block_.L_46cd5e
  %loadMem_46cd9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 33
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %784 to i64*
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 1
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %787 to i64*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 15
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %RBP.i1177 = bitcast %union.anon* %790 to i64*
  %791 = load i64, i64* %RBP.i1177
  %792 = sub i64 %791, 24
  %793 = load i64, i64* %PC.i1175
  %794 = add i64 %793, 4
  store i64 %794, i64* %PC.i1175
  %795 = inttoptr i64 %792 to i32*
  %796 = load i32, i32* %795
  %797 = sext i32 %796 to i64
  store i64 %797, i64* %RAX.i1176, align 8
  store %struct.Memory* %loadMem_46cd9b, %struct.Memory** %MEMORY
  %loadMem_46cd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 33
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %800 to i64*
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 1
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %RAX.i1173 = bitcast %union.anon* %803 to i64*
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 5
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %RCX.i1174 = bitcast %union.anon* %806 to i64*
  %807 = load i64, i64* %RAX.i1173
  %808 = add i64 %807, 12099168
  %809 = load i64, i64* %PC.i1172
  %810 = add i64 %809, 8
  store i64 %810, i64* %PC.i1172
  %811 = inttoptr i64 %808 to i8*
  %812 = load i8, i8* %811
  %813 = zext i8 %812 to i64
  store i64 %813, i64* %RCX.i1174, align 8
  store %struct.Memory* %loadMem_46cd9f, %struct.Memory** %MEMORY
  %loadMem_46cda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 33
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %816 to i64*
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %818 = getelementptr inbounds %struct.GPR, %struct.GPR* %817, i32 0, i32 5
  %819 = getelementptr inbounds %struct.Reg, %struct.Reg* %818, i32 0, i32 0
  %ECX.i1171 = bitcast %union.anon* %819 to i32*
  %820 = load i32, i32* %ECX.i1171
  %821 = zext i32 %820 to i64
  %822 = load i64, i64* %PC.i1170
  %823 = add i64 %822, 3
  store i64 %823, i64* %PC.i1170
  %824 = sub i32 %820, 2
  %825 = icmp ult i32 %820, 2
  %826 = zext i1 %825 to i8
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %826, i8* %827, align 1
  %828 = and i32 %824, 255
  %829 = call i32 @llvm.ctpop.i32(i32 %828)
  %830 = trunc i32 %829 to i8
  %831 = and i8 %830, 1
  %832 = xor i8 %831, 1
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %832, i8* %833, align 1
  %834 = xor i64 2, %821
  %835 = trunc i64 %834 to i32
  %836 = xor i32 %835, %824
  %837 = lshr i32 %836, 4
  %838 = trunc i32 %837 to i8
  %839 = and i8 %838, 1
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %839, i8* %840, align 1
  %841 = icmp eq i32 %824, 0
  %842 = zext i1 %841 to i8
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %842, i8* %843, align 1
  %844 = lshr i32 %824, 31
  %845 = trunc i32 %844 to i8
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %845, i8* %846, align 1
  %847 = lshr i32 %820, 31
  %848 = xor i32 %844, %847
  %849 = add i32 %848, %847
  %850 = icmp eq i32 %849, 2
  %851 = zext i1 %850 to i8
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %851, i8* %852, align 1
  store %struct.Memory* %loadMem_46cda7, %struct.Memory** %MEMORY
  %loadMem_46cdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %854 = getelementptr inbounds %struct.GPR, %struct.GPR* %853, i32 0, i32 33
  %855 = getelementptr inbounds %struct.Reg, %struct.Reg* %854, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %855 to i64*
  %856 = load i64, i64* %PC.i1169
  %857 = add i64 %856, 46
  %858 = load i64, i64* %PC.i1169
  %859 = add i64 %858, 6
  %860 = load i64, i64* %PC.i1169
  %861 = add i64 %860, 6
  store i64 %861, i64* %PC.i1169
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %863 = load i8, i8* %862, align 1
  %864 = icmp eq i8 %863, 0
  %865 = zext i1 %864 to i8
  store i8 %865, i8* %BRANCH_TAKEN, align 1
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %867 = select i1 %864, i64 %857, i64 %859
  store i64 %867, i64* %866, align 8
  store %struct.Memory* %loadMem_46cdaa, %struct.Memory** %MEMORY
  %loadBr_46cdaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cdaa = icmp eq i8 %loadBr_46cdaa, 1
  br i1 %cmpBr_46cdaa, label %block_.L_46cdd8, label %block_46cdb0

block_46cdb0:                                     ; preds = %block_.L_46cd9b
  %loadMem_46cdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 33
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 11
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %RDI.i1167 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 15
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %RBP.i1168
  %878 = sub i64 %877, 24
  %879 = load i64, i64* %PC.i1166
  %880 = add i64 %879, 3
  store i64 %880, i64* %PC.i1166
  %881 = inttoptr i64 %878 to i32*
  %882 = load i32, i32* %881
  %883 = zext i32 %882 to i64
  store i64 %883, i64* %RDI.i1167, align 8
  store %struct.Memory* %loadMem_46cdb0, %struct.Memory** %MEMORY
  %loadMem_46cdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 9
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RSI.i1164 = bitcast %union.anon* %889 to i64*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 15
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %892 to i64*
  %893 = load i64, i64* %RBP.i1165
  %894 = sub i64 %893, 20
  %895 = load i64, i64* %PC.i1163
  %896 = add i64 %895, 3
  store i64 %896, i64* %PC.i1163
  %897 = inttoptr i64 %894 to i32*
  %898 = load i32, i32* %897
  %899 = zext i32 %898 to i64
  store i64 %899, i64* %RSI.i1164, align 8
  store %struct.Memory* %loadMem_46cdb3, %struct.Memory** %MEMORY
  %loadMem1_46cdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 33
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %902 to i64*
  %903 = load i64, i64* %PC.i1162
  %904 = add i64 %903, 4202
  %905 = load i64, i64* %PC.i1162
  %906 = add i64 %905, 5
  %907 = load i64, i64* %PC.i1162
  %908 = add i64 %907, 5
  store i64 %908, i64* %PC.i1162
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %910 = load i64, i64* %909, align 8
  %911 = add i64 %910, -8
  %912 = inttoptr i64 %911 to i64*
  store i64 %906, i64* %912
  store i64 %911, i64* %909, align 8
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %904, i64* %913, align 8
  store %struct.Memory* %loadMem1_46cdb6, %struct.Memory** %MEMORY
  %loadMem2_46cdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46cdb6 = load i64, i64* %3
  %call2_46cdb6 = call %struct.Memory* @sub_46de20.captured_territory(%struct.State* %0, i64 %loadPC_46cdb6, %struct.Memory* %loadMem2_46cdb6)
  store %struct.Memory* %call2_46cdb6, %struct.Memory** %MEMORY
  %loadMem_46cdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 33
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %916 to i64*
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 1
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %EAX.i1161 = bitcast %union.anon* %919 to i32*
  %920 = load i32, i32* %EAX.i1161
  %921 = zext i32 %920 to i64
  %922 = load i64, i64* %PC.i1160
  %923 = add i64 %922, 3
  store i64 %923, i64* %PC.i1160
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %924, align 1
  %925 = and i32 %920, 255
  %926 = call i32 @llvm.ctpop.i32(i32 %925)
  %927 = trunc i32 %926 to i8
  %928 = and i8 %927, 1
  %929 = xor i8 %928, 1
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %929, i8* %930, align 1
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %931, align 1
  %932 = icmp eq i32 %920, 0
  %933 = zext i1 %932 to i8
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %933, i8* %934, align 1
  %935 = lshr i32 %920, 31
  %936 = trunc i32 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %936, i8* %937, align 1
  %938 = lshr i32 %920, 31
  %939 = xor i32 %935, %938
  %940 = add i32 %939, %938
  %941 = icmp eq i32 %940, 2
  %942 = zext i1 %941 to i8
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %942, i8* %943, align 1
  store %struct.Memory* %loadMem_46cdbb, %struct.Memory** %MEMORY
  %loadMem_46cdbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %945 = getelementptr inbounds %struct.GPR, %struct.GPR* %944, i32 0, i32 33
  %946 = getelementptr inbounds %struct.Reg, %struct.Reg* %945, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %946 to i64*
  %947 = load i64, i64* %PC.i1159
  %948 = add i64 %947, 26
  %949 = load i64, i64* %PC.i1159
  %950 = add i64 %949, 6
  %951 = load i64, i64* %PC.i1159
  %952 = add i64 %951, 6
  store i64 %952, i64* %PC.i1159
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %954 = load i8, i8* %953, align 1
  %955 = icmp eq i8 %954, 0
  %956 = zext i1 %955 to i8
  store i8 %956, i8* %BRANCH_TAKEN, align 1
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %958 = select i1 %955, i64 %948, i64 %950
  store i64 %958, i64* %957, align 8
  store %struct.Memory* %loadMem_46cdbe, %struct.Memory** %MEMORY
  %loadBr_46cdbe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cdbe = icmp eq i8 %loadBr_46cdbe, 1
  br i1 %cmpBr_46cdbe, label %block_.L_46cdd8, label %block_46cdc4

block_46cdc4:                                     ; preds = %block_46cdb0
  %loadMem_46cdc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %960 = getelementptr inbounds %struct.GPR, %struct.GPR* %959, i32 0, i32 33
  %961 = getelementptr inbounds %struct.Reg, %struct.Reg* %960, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %961 to i64*
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %963 = getelementptr inbounds %struct.GPR, %struct.GPR* %962, i32 0, i32 1
  %964 = getelementptr inbounds %struct.Reg, %struct.Reg* %963, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %964 to i64*
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 15
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %967 to i64*
  %968 = load i64, i64* %RBP.i1158
  %969 = sub i64 %968, 16
  %970 = load i64, i64* %PC.i1156
  %971 = add i64 %970, 4
  store i64 %971, i64* %PC.i1156
  %972 = inttoptr i64 %969 to i64*
  %973 = load i64, i64* %972
  store i64 %973, i64* %RAX.i1157, align 8
  store %struct.Memory* %loadMem_46cdc4, %struct.Memory** %MEMORY
  %loadMem_46cdc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 33
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %976 to i64*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %978 = getelementptr inbounds %struct.GPR, %struct.GPR* %977, i32 0, i32 5
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %979 to i64*
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 15
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %982 to i64*
  %983 = load i64, i64* %RBP.i1155
  %984 = sub i64 %983, 24
  %985 = load i64, i64* %PC.i1153
  %986 = add i64 %985, 4
  store i64 %986, i64* %PC.i1153
  %987 = inttoptr i64 %984 to i32*
  %988 = load i32, i32* %987
  %989 = sext i32 %988 to i64
  store i64 %989, i64* %RCX.i1154, align 8
  store %struct.Memory* %loadMem_46cdc8, %struct.Memory** %MEMORY
  %loadMem_46cdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 33
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %992 to i64*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 1
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RAX.i1151 = bitcast %union.anon* %995 to i64*
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 5
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %RCX.i1152 = bitcast %union.anon* %998 to i64*
  %999 = load i64, i64* %RAX.i1151
  %1000 = load i64, i64* %RCX.i1152
  %1001 = mul i64 %1000, 4
  %1002 = add i64 %1001, %999
  %1003 = load i64, i64* %PC.i1150
  %1004 = add i64 %1003, 7
  store i64 %1004, i64* %PC.i1150
  %1005 = inttoptr i64 %1002 to i32*
  store i32 -128, i32* %1005
  store %struct.Memory* %loadMem_46cdcc, %struct.Memory** %MEMORY
  %loadMem_46cdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 33
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %1008 to i64*
  %1009 = load i64, i64* %PC.i1149
  %1010 = add i64 %1009, 20
  %1011 = load i64, i64* %PC.i1149
  %1012 = add i64 %1011, 5
  store i64 %1012, i64* %PC.i1149
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1010, i64* %1013, align 8
  store %struct.Memory* %loadMem_46cdd3, %struct.Memory** %MEMORY
  br label %block_.L_46cde7

block_.L_46cdd8:                                  ; preds = %block_46cdb0, %block_.L_46cd9b
  %loadMem_46cdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 33
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %1016 to i64*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 1
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %1019 to i64*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1021 = getelementptr inbounds %struct.GPR, %struct.GPR* %1020, i32 0, i32 15
  %1022 = getelementptr inbounds %struct.Reg, %struct.Reg* %1021, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %1022 to i64*
  %1023 = load i64, i64* %RBP.i1148
  %1024 = sub i64 %1023, 16
  %1025 = load i64, i64* %PC.i1146
  %1026 = add i64 %1025, 4
  store i64 %1026, i64* %PC.i1146
  %1027 = inttoptr i64 %1024 to i64*
  %1028 = load i64, i64* %1027
  store i64 %1028, i64* %RAX.i1147, align 8
  store %struct.Memory* %loadMem_46cdd8, %struct.Memory** %MEMORY
  %loadMem_46cddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1030 = getelementptr inbounds %struct.GPR, %struct.GPR* %1029, i32 0, i32 33
  %1031 = getelementptr inbounds %struct.Reg, %struct.Reg* %1030, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1031 to i64*
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 5
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %RCX.i1144 = bitcast %union.anon* %1034 to i64*
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1036 = getelementptr inbounds %struct.GPR, %struct.GPR* %1035, i32 0, i32 15
  %1037 = getelementptr inbounds %struct.Reg, %struct.Reg* %1036, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %1037 to i64*
  %1038 = load i64, i64* %RBP.i1145
  %1039 = sub i64 %1038, 24
  %1040 = load i64, i64* %PC.i1143
  %1041 = add i64 %1040, 4
  store i64 %1041, i64* %PC.i1143
  %1042 = inttoptr i64 %1039 to i32*
  %1043 = load i32, i32* %1042
  %1044 = sext i32 %1043 to i64
  store i64 %1044, i64* %RCX.i1144, align 8
  store %struct.Memory* %loadMem_46cddc, %struct.Memory** %MEMORY
  %loadMem_46cde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 33
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %1047 to i64*
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 1
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %1050 to i64*
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 5
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %1053 to i64*
  %1054 = load i64, i64* %RAX.i1141
  %1055 = load i64, i64* %RCX.i1142
  %1056 = mul i64 %1055, 4
  %1057 = add i64 %1056, %1054
  %1058 = load i64, i64* %PC.i1140
  %1059 = add i64 %1058, 7
  store i64 %1059, i64* %PC.i1140
  %1060 = inttoptr i64 %1057 to i32*
  store i32 0, i32* %1060
  store %struct.Memory* %loadMem_46cde0, %struct.Memory** %MEMORY
  br label %block_.L_46cde7

block_.L_46cde7:                                  ; preds = %block_.L_46cdd8, %block_46cdc4
  %loadMem_46cde7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 33
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %1063 to i64*
  %1064 = load i64, i64* %PC.i1139
  %1065 = add i64 %1064, 5
  %1066 = load i64, i64* %PC.i1139
  %1067 = add i64 %1066, 5
  store i64 %1067, i64* %PC.i1139
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1065, i64* %1068, align 8
  store %struct.Memory* %loadMem_46cde7, %struct.Memory** %MEMORY
  br label %block_.L_46cdec

block_.L_46cdec:                                  ; preds = %block_.L_46cde7, %block_46cd87
  %loadMem_46cdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 33
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %PC.i1138
  %1073 = add i64 %1072, 5
  %1074 = load i64, i64* %PC.i1138
  %1075 = add i64 %1074, 5
  store i64 %1075, i64* %PC.i1138
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1073, i64* %1076, align 8
  store %struct.Memory* %loadMem_46cdec, %struct.Memory** %MEMORY
  br label %block_.L_46cdf1

block_.L_46cdf1:                                  ; preds = %block_.L_46cdec, %block_46cd1b
  %loadMem_46cdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1078 = getelementptr inbounds %struct.GPR, %struct.GPR* %1077, i32 0, i32 33
  %1079 = getelementptr inbounds %struct.Reg, %struct.Reg* %1078, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %1079 to i64*
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1081 = getelementptr inbounds %struct.GPR, %struct.GPR* %1080, i32 0, i32 1
  %1082 = getelementptr inbounds %struct.Reg, %struct.Reg* %1081, i32 0, i32 0
  %RAX.i1136 = bitcast %union.anon* %1082 to i64*
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 15
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %1085 to i64*
  %1086 = load i64, i64* %RBP.i1137
  %1087 = sub i64 %1086, 24
  %1088 = load i64, i64* %PC.i1135
  %1089 = add i64 %1088, 3
  store i64 %1089, i64* %PC.i1135
  %1090 = inttoptr i64 %1087 to i32*
  %1091 = load i32, i32* %1090
  %1092 = zext i32 %1091 to i64
  store i64 %1092, i64* %RAX.i1136, align 8
  store %struct.Memory* %loadMem_46cdf1, %struct.Memory** %MEMORY
  %loadMem_46cdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1094 = getelementptr inbounds %struct.GPR, %struct.GPR* %1093, i32 0, i32 33
  %1095 = getelementptr inbounds %struct.Reg, %struct.Reg* %1094, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %1095 to i64*
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 1
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %RAX.i1134 = bitcast %union.anon* %1098 to i64*
  %1099 = load i64, i64* %RAX.i1134
  %1100 = load i64, i64* %PC.i1133
  %1101 = add i64 %1100, 3
  store i64 %1101, i64* %PC.i1133
  %1102 = trunc i64 %1099 to i32
  %1103 = add i32 1, %1102
  %1104 = zext i32 %1103 to i64
  store i64 %1104, i64* %RAX.i1134, align 8
  %1105 = icmp ult i32 %1103, %1102
  %1106 = icmp ult i32 %1103, 1
  %1107 = or i1 %1105, %1106
  %1108 = zext i1 %1107 to i8
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1108, i8* %1109, align 1
  %1110 = and i32 %1103, 255
  %1111 = call i32 @llvm.ctpop.i32(i32 %1110)
  %1112 = trunc i32 %1111 to i8
  %1113 = and i8 %1112, 1
  %1114 = xor i8 %1113, 1
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1114, i8* %1115, align 1
  %1116 = xor i64 1, %1099
  %1117 = trunc i64 %1116 to i32
  %1118 = xor i32 %1117, %1103
  %1119 = lshr i32 %1118, 4
  %1120 = trunc i32 %1119 to i8
  %1121 = and i8 %1120, 1
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1121, i8* %1122, align 1
  %1123 = icmp eq i32 %1103, 0
  %1124 = zext i1 %1123 to i8
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1124, i8* %1125, align 1
  %1126 = lshr i32 %1103, 31
  %1127 = trunc i32 %1126 to i8
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1127, i8* %1128, align 1
  %1129 = lshr i32 %1102, 31
  %1130 = xor i32 %1126, %1129
  %1131 = add i32 %1130, %1126
  %1132 = icmp eq i32 %1131, 2
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1133, i8* %1134, align 1
  store %struct.Memory* %loadMem_46cdf4, %struct.Memory** %MEMORY
  %loadMem_46cdf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 33
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %1137 to i64*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 1
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %EAX.i1131 = bitcast %union.anon* %1140 to i32*
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1142 = getelementptr inbounds %struct.GPR, %struct.GPR* %1141, i32 0, i32 15
  %1143 = getelementptr inbounds %struct.Reg, %struct.Reg* %1142, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %1143 to i64*
  %1144 = load i64, i64* %RBP.i1132
  %1145 = sub i64 %1144, 24
  %1146 = load i32, i32* %EAX.i1131
  %1147 = zext i32 %1146 to i64
  %1148 = load i64, i64* %PC.i1130
  %1149 = add i64 %1148, 3
  store i64 %1149, i64* %PC.i1130
  %1150 = inttoptr i64 %1145 to i32*
  store i32 %1146, i32* %1150
  store %struct.Memory* %loadMem_46cdf7, %struct.Memory** %MEMORY
  %loadMem_46cdfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 33
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %1153 to i64*
  %1154 = load i64, i64* %PC.i1129
  %1155 = add i64 %1154, -257
  %1156 = load i64, i64* %PC.i1129
  %1157 = add i64 %1156, 5
  store i64 %1157, i64* %PC.i1129
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1155, i64* %1158, align 8
  store %struct.Memory* %loadMem_46cdfa, %struct.Memory** %MEMORY
  br label %block_.L_46ccf9

block_.L_46cdff:                                  ; preds = %block_.L_46ccf9
  %loadMem_46cdff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 33
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %1161 to i64*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 1
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %RAX.i1128 = bitcast %union.anon* %1164 to i64*
  %1165 = load i64, i64* %PC.i1127
  %1166 = add i64 %1165, 5
  store i64 %1166, i64* %PC.i1127
  store i64 1600, i64* %RAX.i1128, align 8
  store %struct.Memory* %loadMem_46cdff, %struct.Memory** %MEMORY
  %loadMem_46ce04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 33
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 1
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %EAX.i1125 = bitcast %union.anon* %1172 to i32*
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 7
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %RDX.i1126 = bitcast %union.anon* %1175 to i64*
  %1176 = load i32, i32* %EAX.i1125
  %1177 = zext i32 %1176 to i64
  %1178 = load i64, i64* %PC.i1124
  %1179 = add i64 %1178, 2
  store i64 %1179, i64* %PC.i1124
  %1180 = and i64 %1177, 4294967295
  store i64 %1180, i64* %RDX.i1126, align 8
  store %struct.Memory* %loadMem_46ce04, %struct.Memory** %MEMORY
  %loadMem_46ce06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 33
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %1183 to i64*
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 5
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %RCX.i1122 = bitcast %union.anon* %1186 to i64*
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 15
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %1189 to i64*
  %1190 = load i64, i64* %RBP.i1123
  %1191 = sub i64 %1190, 1632
  %1192 = load i64, i64* %PC.i1121
  %1193 = add i64 %1192, 7
  store i64 %1193, i64* %PC.i1121
  store i64 %1191, i64* %RCX.i1122, align 8
  store %struct.Memory* %loadMem_46ce06, %struct.Memory** %MEMORY
  %loadMem_46ce0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 33
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %1196 to i64*
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1198 = getelementptr inbounds %struct.GPR, %struct.GPR* %1197, i32 0, i32 9
  %1199 = getelementptr inbounds %struct.Reg, %struct.Reg* %1198, i32 0, i32 0
  %RSI.i1119 = bitcast %union.anon* %1199 to i64*
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1201 = getelementptr inbounds %struct.GPR, %struct.GPR* %1200, i32 0, i32 15
  %1202 = getelementptr inbounds %struct.Reg, %struct.Reg* %1201, i32 0, i32 0
  %RBP.i1120 = bitcast %union.anon* %1202 to i64*
  %1203 = load i64, i64* %RBP.i1120
  %1204 = sub i64 %1203, 16
  %1205 = load i64, i64* %PC.i1118
  %1206 = add i64 %1205, 4
  store i64 %1206, i64* %PC.i1118
  %1207 = inttoptr i64 %1204 to i64*
  %1208 = load i64, i64* %1207
  store i64 %1208, i64* %RSI.i1119, align 8
  store %struct.Memory* %loadMem_46ce0d, %struct.Memory** %MEMORY
  %loadMem_46ce11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 33
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %1211 to i64*
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1213 = getelementptr inbounds %struct.GPR, %struct.GPR* %1212, i32 0, i32 5
  %1214 = getelementptr inbounds %struct.Reg, %struct.Reg* %1213, i32 0, i32 0
  %RCX.i1116 = bitcast %union.anon* %1214 to i64*
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 11
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %RDI.i1117 = bitcast %union.anon* %1217 to i64*
  %1218 = load i64, i64* %RCX.i1116
  %1219 = load i64, i64* %PC.i1115
  %1220 = add i64 %1219, 3
  store i64 %1220, i64* %PC.i1115
  store i64 %1218, i64* %RDI.i1117, align 8
  store %struct.Memory* %loadMem_46ce11, %struct.Memory** %MEMORY
  %loadMem1_46ce14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 33
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %1223 to i64*
  %1224 = load i64, i64* %PC.i1114
  %1225 = add i64 %1224, -441636
  %1226 = load i64, i64* %PC.i1114
  %1227 = add i64 %1226, 5
  %1228 = load i64, i64* %PC.i1114
  %1229 = add i64 %1228, 5
  store i64 %1229, i64* %PC.i1114
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1231 = load i64, i64* %1230, align 8
  %1232 = add i64 %1231, -8
  %1233 = inttoptr i64 %1232 to i64*
  store i64 %1227, i64* %1233
  store i64 %1232, i64* %1230, align 8
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1225, i64* %1234, align 8
  store %struct.Memory* %loadMem1_46ce14, %struct.Memory** %MEMORY
  %loadMem2_46ce14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46ce14 = load i64, i64* %3
  %1235 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_46ce14)
  store %struct.Memory* %1235, %struct.Memory** %MEMORY
  %loadMem_46ce19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 33
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %1238 to i64*
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1240 = getelementptr inbounds %struct.GPR, %struct.GPR* %1239, i32 0, i32 15
  %1241 = getelementptr inbounds %struct.Reg, %struct.Reg* %1240, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %1241 to i64*
  %1242 = load i64, i64* %RBP.i1111
  %1243 = sub i64 %1242, 1636
  %1244 = load i64, i64* %PC.i1110
  %1245 = add i64 %1244, 10
  store i64 %1245, i64* %PC.i1110
  %1246 = inttoptr i64 %1243 to i32*
  store i32 0, i32* %1246
  store %struct.Memory* %loadMem_46ce19, %struct.Memory** %MEMORY
  br label %block_.L_46ce23

block_.L_46ce23:                                  ; preds = %block_.L_46d259, %block_.L_46cdff
  %loadMem_46ce23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 33
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %1249 to i64*
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1251 = getelementptr inbounds %struct.GPR, %struct.GPR* %1250, i32 0, i32 1
  %1252 = getelementptr inbounds %struct.Reg, %struct.Reg* %1251, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %1252 to i64*
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 15
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %RBP.i1109 = bitcast %union.anon* %1255 to i64*
  %1256 = load i64, i64* %RBP.i1109
  %1257 = sub i64 %1256, 1636
  %1258 = load i64, i64* %PC.i1107
  %1259 = add i64 %1258, 6
  store i64 %1259, i64* %PC.i1107
  %1260 = inttoptr i64 %1257 to i32*
  %1261 = load i32, i32* %1260
  %1262 = zext i32 %1261 to i64
  store i64 %1262, i64* %RAX.i1108, align 8
  store %struct.Memory* %loadMem_46ce23, %struct.Memory** %MEMORY
  %loadMem_46ce29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1264 = getelementptr inbounds %struct.GPR, %struct.GPR* %1263, i32 0, i32 33
  %1265 = getelementptr inbounds %struct.Reg, %struct.Reg* %1264, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %1265 to i64*
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1267 = getelementptr inbounds %struct.GPR, %struct.GPR* %1266, i32 0, i32 1
  %1268 = getelementptr inbounds %struct.Reg, %struct.Reg* %1267, i32 0, i32 0
  %EAX.i1105 = bitcast %union.anon* %1268 to i32*
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 15
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %1271 to i64*
  %1272 = load i32, i32* %EAX.i1105
  %1273 = zext i32 %1272 to i64
  %1274 = load i64, i64* %RBP.i1106
  %1275 = sub i64 %1274, 4
  %1276 = load i64, i64* %PC.i1104
  %1277 = add i64 %1276, 3
  store i64 %1277, i64* %PC.i1104
  %1278 = inttoptr i64 %1275 to i32*
  %1279 = load i32, i32* %1278
  %1280 = sub i32 %1272, %1279
  %1281 = icmp ult i32 %1272, %1279
  %1282 = zext i1 %1281 to i8
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1282, i8* %1283, align 1
  %1284 = and i32 %1280, 255
  %1285 = call i32 @llvm.ctpop.i32(i32 %1284)
  %1286 = trunc i32 %1285 to i8
  %1287 = and i8 %1286, 1
  %1288 = xor i8 %1287, 1
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1288, i8* %1289, align 1
  %1290 = xor i32 %1279, %1272
  %1291 = xor i32 %1290, %1280
  %1292 = lshr i32 %1291, 4
  %1293 = trunc i32 %1292 to i8
  %1294 = and i8 %1293, 1
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1294, i8* %1295, align 1
  %1296 = icmp eq i32 %1280, 0
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1297, i8* %1298, align 1
  %1299 = lshr i32 %1280, 31
  %1300 = trunc i32 %1299 to i8
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1300, i8* %1301, align 1
  %1302 = lshr i32 %1272, 31
  %1303 = lshr i32 %1279, 31
  %1304 = xor i32 %1303, %1302
  %1305 = xor i32 %1299, %1302
  %1306 = add i32 %1305, %1304
  %1307 = icmp eq i32 %1306, 2
  %1308 = zext i1 %1307 to i8
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1308, i8* %1309, align 1
  store %struct.Memory* %loadMem_46ce29, %struct.Memory** %MEMORY
  %loadMem_46ce2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 33
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %1312 to i64*
  %1313 = load i64, i64* %PC.i1103
  %1314 = add i64 %1313, 1118
  %1315 = load i64, i64* %PC.i1103
  %1316 = add i64 %1315, 6
  %1317 = load i64, i64* %PC.i1103
  %1318 = add i64 %1317, 6
  store i64 %1318, i64* %PC.i1103
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1320 = load i8, i8* %1319, align 1
  %1321 = icmp ne i8 %1320, 0
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1323 = load i8, i8* %1322, align 1
  %1324 = icmp ne i8 %1323, 0
  %1325 = xor i1 %1321, %1324
  %1326 = xor i1 %1325, true
  %1327 = zext i1 %1326 to i8
  store i8 %1327, i8* %BRANCH_TAKEN, align 1
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1329 = select i1 %1325, i64 %1316, i64 %1314
  store i64 %1329, i64* %1328, align 8
  store %struct.Memory* %loadMem_46ce2c, %struct.Memory** %MEMORY
  %loadBr_46ce2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce2c = icmp eq i8 %loadBr_46ce2c, 1
  br i1 %cmpBr_46ce2c, label %block_.L_46d28a, label %block_46ce32

block_46ce32:                                     ; preds = %block_.L_46ce23
  %loadMem_46ce32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 33
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %1332 to i64*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 15
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %1335 to i64*
  %1336 = load i64, i64* %RBP.i1102
  %1337 = sub i64 %1336, 24
  %1338 = load i64, i64* %PC.i1101
  %1339 = add i64 %1338, 7
  store i64 %1339, i64* %PC.i1101
  %1340 = inttoptr i64 %1337 to i32*
  store i32 21, i32* %1340
  store %struct.Memory* %loadMem_46ce32, %struct.Memory** %MEMORY
  br label %block_.L_46ce39

block_.L_46ce39:                                  ; preds = %block_.L_46d24b, %block_46ce32
  %loadMem_46ce39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 33
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 15
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %1346 to i64*
  %1347 = load i64, i64* %RBP.i1100
  %1348 = sub i64 %1347, 24
  %1349 = load i64, i64* %PC.i1099
  %1350 = add i64 %1349, 7
  store i64 %1350, i64* %PC.i1099
  %1351 = inttoptr i64 %1348 to i32*
  %1352 = load i32, i32* %1351
  %1353 = sub i32 %1352, 400
  %1354 = icmp ult i32 %1352, 400
  %1355 = zext i1 %1354 to i8
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1355, i8* %1356, align 1
  %1357 = and i32 %1353, 255
  %1358 = call i32 @llvm.ctpop.i32(i32 %1357)
  %1359 = trunc i32 %1358 to i8
  %1360 = and i8 %1359, 1
  %1361 = xor i8 %1360, 1
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1361, i8* %1362, align 1
  %1363 = xor i32 %1352, 400
  %1364 = xor i32 %1363, %1353
  %1365 = lshr i32 %1364, 4
  %1366 = trunc i32 %1365 to i8
  %1367 = and i8 %1366, 1
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1367, i8* %1368, align 1
  %1369 = icmp eq i32 %1353, 0
  %1370 = zext i1 %1369 to i8
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1370, i8* %1371, align 1
  %1372 = lshr i32 %1353, 31
  %1373 = trunc i32 %1372 to i8
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1373, i8* %1374, align 1
  %1375 = lshr i32 %1352, 31
  %1376 = xor i32 %1372, %1375
  %1377 = add i32 %1376, %1375
  %1378 = icmp eq i32 %1377, 2
  %1379 = zext i1 %1378 to i8
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1379, i8* %1380, align 1
  store %struct.Memory* %loadMem_46ce39, %struct.Memory** %MEMORY
  %loadMem_46ce40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 33
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %1383 to i64*
  %1384 = load i64, i64* %PC.i1098
  %1385 = add i64 %1384, 1049
  %1386 = load i64, i64* %PC.i1098
  %1387 = add i64 %1386, 6
  %1388 = load i64, i64* %PC.i1098
  %1389 = add i64 %1388, 6
  store i64 %1389, i64* %PC.i1098
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1391 = load i8, i8* %1390, align 1
  %1392 = icmp ne i8 %1391, 0
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1394 = load i8, i8* %1393, align 1
  %1395 = icmp ne i8 %1394, 0
  %1396 = xor i1 %1392, %1395
  %1397 = xor i1 %1396, true
  %1398 = zext i1 %1397 to i8
  store i8 %1398, i8* %BRANCH_TAKEN, align 1
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1400 = select i1 %1396, i64 %1387, i64 %1385
  store i64 %1400, i64* %1399, align 8
  store %struct.Memory* %loadMem_46ce40, %struct.Memory** %MEMORY
  %loadBr_46ce40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce40 = icmp eq i8 %loadBr_46ce40, 1
  br i1 %cmpBr_46ce40, label %block_.L_46d259, label %block_46ce46

block_46ce46:                                     ; preds = %block_.L_46ce39
  %loadMem_46ce46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 33
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %1403 to i64*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 1
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %1406 to i64*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 15
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %1409 to i64*
  %1410 = load i64, i64* %RBP.i1097
  %1411 = sub i64 %1410, 24
  %1412 = load i64, i64* %PC.i1095
  %1413 = add i64 %1412, 4
  store i64 %1413, i64* %PC.i1095
  %1414 = inttoptr i64 %1411 to i32*
  %1415 = load i32, i32* %1414
  %1416 = sext i32 %1415 to i64
  store i64 %1416, i64* %RAX.i1096, align 8
  store %struct.Memory* %loadMem_46ce46, %struct.Memory** %MEMORY
  %loadMem_46ce4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 33
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %1419 to i64*
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1421 = getelementptr inbounds %struct.GPR, %struct.GPR* %1420, i32 0, i32 1
  %1422 = getelementptr inbounds %struct.Reg, %struct.Reg* %1421, i32 0, i32 0
  %RAX.i1093 = bitcast %union.anon* %1422 to i64*
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1424 = getelementptr inbounds %struct.GPR, %struct.GPR* %1423, i32 0, i32 5
  %1425 = getelementptr inbounds %struct.Reg, %struct.Reg* %1424, i32 0, i32 0
  %RCX.i1094 = bitcast %union.anon* %1425 to i64*
  %1426 = load i64, i64* %RAX.i1093
  %1427 = add i64 %1426, 12099168
  %1428 = load i64, i64* %PC.i1092
  %1429 = add i64 %1428, 8
  store i64 %1429, i64* %PC.i1092
  %1430 = inttoptr i64 %1427 to i8*
  %1431 = load i8, i8* %1430
  %1432 = zext i8 %1431 to i64
  store i64 %1432, i64* %RCX.i1094, align 8
  store %struct.Memory* %loadMem_46ce4a, %struct.Memory** %MEMORY
  %loadMem_46ce52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1434 = getelementptr inbounds %struct.GPR, %struct.GPR* %1433, i32 0, i32 33
  %1435 = getelementptr inbounds %struct.Reg, %struct.Reg* %1434, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %1435 to i64*
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1437 = getelementptr inbounds %struct.GPR, %struct.GPR* %1436, i32 0, i32 5
  %1438 = getelementptr inbounds %struct.Reg, %struct.Reg* %1437, i32 0, i32 0
  %ECX.i1091 = bitcast %union.anon* %1438 to i32*
  %1439 = load i32, i32* %ECX.i1091
  %1440 = zext i32 %1439 to i64
  %1441 = load i64, i64* %PC.i1090
  %1442 = add i64 %1441, 3
  store i64 %1442, i64* %PC.i1090
  %1443 = sub i32 %1439, 3
  %1444 = icmp ult i32 %1439, 3
  %1445 = zext i1 %1444 to i8
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1445, i8* %1446, align 1
  %1447 = and i32 %1443, 255
  %1448 = call i32 @llvm.ctpop.i32(i32 %1447)
  %1449 = trunc i32 %1448 to i8
  %1450 = and i8 %1449, 1
  %1451 = xor i8 %1450, 1
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1451, i8* %1452, align 1
  %1453 = xor i64 3, %1440
  %1454 = trunc i64 %1453 to i32
  %1455 = xor i32 %1454, %1443
  %1456 = lshr i32 %1455, 4
  %1457 = trunc i32 %1456 to i8
  %1458 = and i8 %1457, 1
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1458, i8* %1459, align 1
  %1460 = icmp eq i32 %1443, 0
  %1461 = zext i1 %1460 to i8
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1461, i8* %1462, align 1
  %1463 = lshr i32 %1443, 31
  %1464 = trunc i32 %1463 to i8
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1464, i8* %1465, align 1
  %1466 = lshr i32 %1439, 31
  %1467 = xor i32 %1463, %1466
  %1468 = add i32 %1467, %1466
  %1469 = icmp eq i32 %1468, 2
  %1470 = zext i1 %1469 to i8
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1470, i8* %1471, align 1
  store %struct.Memory* %loadMem_46ce52, %struct.Memory** %MEMORY
  %loadMem_46ce55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 33
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1474 to i64*
  %1475 = load i64, i64* %PC.i1089
  %1476 = add i64 %1475, 11
  %1477 = load i64, i64* %PC.i1089
  %1478 = add i64 %1477, 6
  %1479 = load i64, i64* %PC.i1089
  %1480 = add i64 %1479, 6
  store i64 %1480, i64* %PC.i1089
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1482 = load i8, i8* %1481, align 1
  %1483 = icmp eq i8 %1482, 0
  %1484 = zext i1 %1483 to i8
  store i8 %1484, i8* %BRANCH_TAKEN, align 1
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1486 = select i1 %1483, i64 %1476, i64 %1478
  store i64 %1486, i64* %1485, align 8
  store %struct.Memory* %loadMem_46ce55, %struct.Memory** %MEMORY
  %loadBr_46ce55 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce55 = icmp eq i8 %loadBr_46ce55, 1
  br i1 %cmpBr_46ce55, label %block_.L_46ce60, label %block_46ce5b

block_46ce5b:                                     ; preds = %block_46ce46
  %loadMem_46ce5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %1489 to i64*
  %1490 = load i64, i64* %PC.i1088
  %1491 = add i64 %1490, 1008
  %1492 = load i64, i64* %PC.i1088
  %1493 = add i64 %1492, 5
  store i64 %1493, i64* %PC.i1088
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1491, i64* %1494, align 8
  store %struct.Memory* %loadMem_46ce5b, %struct.Memory** %MEMORY
  br label %block_.L_46d24b

block_.L_46ce60:                                  ; preds = %block_46ce46
  %loadMem_46ce60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 1
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RAX.i1086 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 15
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %1503 to i64*
  %1504 = load i64, i64* %RBP.i1087
  %1505 = sub i64 %1504, 16
  %1506 = load i64, i64* %PC.i1085
  %1507 = add i64 %1506, 4
  store i64 %1507, i64* %PC.i1085
  %1508 = inttoptr i64 %1505 to i64*
  %1509 = load i64, i64* %1508
  store i64 %1509, i64* %RAX.i1086, align 8
  store %struct.Memory* %loadMem_46ce60, %struct.Memory** %MEMORY
  %loadMem_46ce64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 33
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1512 to i64*
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1514 = getelementptr inbounds %struct.GPR, %struct.GPR* %1513, i32 0, i32 5
  %1515 = getelementptr inbounds %struct.Reg, %struct.Reg* %1514, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %1515 to i64*
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 15
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %1518 to i64*
  %1519 = load i64, i64* %RBP.i1084
  %1520 = sub i64 %1519, 24
  %1521 = load i64, i64* %PC.i1082
  %1522 = add i64 %1521, 4
  store i64 %1522, i64* %PC.i1082
  %1523 = inttoptr i64 %1520 to i32*
  %1524 = load i32, i32* %1523
  %1525 = sext i32 %1524 to i64
  store i64 %1525, i64* %RCX.i1083, align 8
  store %struct.Memory* %loadMem_46ce64, %struct.Memory** %MEMORY
  %loadMem_46ce68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1527 = getelementptr inbounds %struct.GPR, %struct.GPR* %1526, i32 0, i32 33
  %1528 = getelementptr inbounds %struct.Reg, %struct.Reg* %1527, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %1528 to i64*
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1530 = getelementptr inbounds %struct.GPR, %struct.GPR* %1529, i32 0, i32 1
  %1531 = getelementptr inbounds %struct.Reg, %struct.Reg* %1530, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %1531 to i64*
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 5
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %RCX.i1081 = bitcast %union.anon* %1534 to i64*
  %1535 = load i64, i64* %RAX.i1080
  %1536 = load i64, i64* %RCX.i1081
  %1537 = mul i64 %1536, 4
  %1538 = add i64 %1537, %1535
  %1539 = load i64, i64* %PC.i1079
  %1540 = add i64 %1539, 4
  store i64 %1540, i64* %PC.i1079
  %1541 = inttoptr i64 %1538 to i32*
  %1542 = load i32, i32* %1541
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1543, align 1
  %1544 = and i32 %1542, 255
  %1545 = call i32 @llvm.ctpop.i32(i32 %1544)
  %1546 = trunc i32 %1545 to i8
  %1547 = and i8 %1546, 1
  %1548 = xor i8 %1547, 1
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1548, i8* %1549, align 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1550, align 1
  %1551 = icmp eq i32 %1542, 0
  %1552 = zext i1 %1551 to i8
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1552, i8* %1553, align 1
  %1554 = lshr i32 %1542, 31
  %1555 = trunc i32 %1554 to i8
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1555, i8* %1556, align 1
  %1557 = lshr i32 %1542, 31
  %1558 = xor i32 %1554, %1557
  %1559 = add i32 %1558, %1557
  %1560 = icmp eq i32 %1559, 2
  %1561 = zext i1 %1560 to i8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1561, i8* %1562, align 1
  store %struct.Memory* %loadMem_46ce68, %struct.Memory** %MEMORY
  %loadMem_46ce6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1564 = getelementptr inbounds %struct.GPR, %struct.GPR* %1563, i32 0, i32 33
  %1565 = getelementptr inbounds %struct.Reg, %struct.Reg* %1564, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %1565 to i64*
  %1566 = load i64, i64* %PC.i1078
  %1567 = add i64 %1566, 487
  %1568 = load i64, i64* %PC.i1078
  %1569 = add i64 %1568, 6
  %1570 = load i64, i64* %PC.i1078
  %1571 = add i64 %1570, 6
  store i64 %1571, i64* %PC.i1078
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1573 = load i8, i8* %1572, align 1
  %1574 = icmp ne i8 %1573, 0
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1576 = load i8, i8* %1575, align 1
  %1577 = icmp ne i8 %1576, 0
  %1578 = xor i1 %1574, %1577
  %1579 = zext i1 %1578 to i8
  store i8 %1579, i8* %BRANCH_TAKEN, align 1
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1581 = select i1 %1578, i64 %1567, i64 %1569
  store i64 %1581, i64* %1580, align 8
  store %struct.Memory* %loadMem_46ce6c, %struct.Memory** %MEMORY
  %loadBr_46ce6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce6c = icmp eq i8 %loadBr_46ce6c, 1
  br i1 %cmpBr_46ce6c, label %block_.L_46d053, label %block_46ce72

block_46ce72:                                     ; preds = %block_.L_46ce60
  %loadMem_46ce72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1583 = getelementptr inbounds %struct.GPR, %struct.GPR* %1582, i32 0, i32 33
  %1584 = getelementptr inbounds %struct.Reg, %struct.Reg* %1583, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %1584 to i64*
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1586 = getelementptr inbounds %struct.GPR, %struct.GPR* %1585, i32 0, i32 1
  %1587 = getelementptr inbounds %struct.Reg, %struct.Reg* %1586, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %1587 to i64*
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 15
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %1590 to i64*
  %1591 = load i64, i64* %RBP.i1077
  %1592 = sub i64 %1591, 24
  %1593 = load i64, i64* %PC.i1075
  %1594 = add i64 %1593, 3
  store i64 %1594, i64* %PC.i1075
  %1595 = inttoptr i64 %1592 to i32*
  %1596 = load i32, i32* %1595
  %1597 = zext i32 %1596 to i64
  store i64 %1597, i64* %RAX.i1076, align 8
  store %struct.Memory* %loadMem_46ce72, %struct.Memory** %MEMORY
  %loadMem_46ce75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 33
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 1
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RAX.i1074 = bitcast %union.anon* %1603 to i64*
  %1604 = load i64, i64* %RAX.i1074
  %1605 = load i64, i64* %PC.i1073
  %1606 = add i64 %1605, 3
  store i64 %1606, i64* %PC.i1073
  %1607 = trunc i64 %1604 to i32
  %1608 = add i32 20, %1607
  %1609 = zext i32 %1608 to i64
  store i64 %1609, i64* %RAX.i1074, align 8
  %1610 = icmp ult i32 %1608, %1607
  %1611 = icmp ult i32 %1608, 20
  %1612 = or i1 %1610, %1611
  %1613 = zext i1 %1612 to i8
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1613, i8* %1614, align 1
  %1615 = and i32 %1608, 255
  %1616 = call i32 @llvm.ctpop.i32(i32 %1615)
  %1617 = trunc i32 %1616 to i8
  %1618 = and i8 %1617, 1
  %1619 = xor i8 %1618, 1
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1619, i8* %1620, align 1
  %1621 = xor i64 20, %1604
  %1622 = trunc i64 %1621 to i32
  %1623 = xor i32 %1622, %1608
  %1624 = lshr i32 %1623, 4
  %1625 = trunc i32 %1624 to i8
  %1626 = and i8 %1625, 1
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1626, i8* %1627, align 1
  %1628 = icmp eq i32 %1608, 0
  %1629 = zext i1 %1628 to i8
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1629, i8* %1630, align 1
  %1631 = lshr i32 %1608, 31
  %1632 = trunc i32 %1631 to i8
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1632, i8* %1633, align 1
  %1634 = lshr i32 %1607, 31
  %1635 = xor i32 %1631, %1634
  %1636 = add i32 %1635, %1631
  %1637 = icmp eq i32 %1636, 2
  %1638 = zext i1 %1637 to i8
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1638, i8* %1639, align 1
  store %struct.Memory* %loadMem_46ce75, %struct.Memory** %MEMORY
  %loadMem_46ce78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 33
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %1642 to i64*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 1
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %EAX.i1071 = bitcast %union.anon* %1645 to i32*
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 5
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %1648 to i64*
  %1649 = load i32, i32* %EAX.i1071
  %1650 = zext i32 %1649 to i64
  %1651 = load i64, i64* %PC.i1070
  %1652 = add i64 %1651, 3
  store i64 %1652, i64* %PC.i1070
  %1653 = shl i64 %1650, 32
  %1654 = ashr exact i64 %1653, 32
  store i64 %1654, i64* %RCX.i1072, align 8
  store %struct.Memory* %loadMem_46ce78, %struct.Memory** %MEMORY
  %loadMem_46ce7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 1
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 5
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RCX.i1069 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RCX.i1069
  %1665 = add i64 %1664, 12099168
  %1666 = load i64, i64* %PC.i1067
  %1667 = add i64 %1666, 8
  store i64 %1667, i64* %PC.i1067
  %1668 = inttoptr i64 %1665 to i8*
  %1669 = load i8, i8* %1668
  %1670 = zext i8 %1669 to i64
  store i64 %1670, i64* %RAX.i1068, align 8
  store %struct.Memory* %loadMem_46ce7b, %struct.Memory** %MEMORY
  %loadMem_46ce83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 1
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %EAX.i1066 = bitcast %union.anon* %1676 to i32*
  %1677 = load i32, i32* %EAX.i1066
  %1678 = zext i32 %1677 to i64
  %1679 = load i64, i64* %PC.i1065
  %1680 = add i64 %1679, 3
  store i64 %1680, i64* %PC.i1065
  %1681 = sub i32 %1677, 3
  %1682 = icmp ult i32 %1677, 3
  %1683 = zext i1 %1682 to i8
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1683, i8* %1684, align 1
  %1685 = and i32 %1681, 255
  %1686 = call i32 @llvm.ctpop.i32(i32 %1685)
  %1687 = trunc i32 %1686 to i8
  %1688 = and i8 %1687, 1
  %1689 = xor i8 %1688, 1
  %1690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1689, i8* %1690, align 1
  %1691 = xor i64 3, %1678
  %1692 = trunc i64 %1691 to i32
  %1693 = xor i32 %1692, %1681
  %1694 = lshr i32 %1693, 4
  %1695 = trunc i32 %1694 to i8
  %1696 = and i8 %1695, 1
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1696, i8* %1697, align 1
  %1698 = icmp eq i32 %1681, 0
  %1699 = zext i1 %1698 to i8
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1699, i8* %1700, align 1
  %1701 = lshr i32 %1681, 31
  %1702 = trunc i32 %1701 to i8
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1702, i8* %1703, align 1
  %1704 = lshr i32 %1677, 31
  %1705 = xor i32 %1701, %1704
  %1706 = add i32 %1705, %1704
  %1707 = icmp eq i32 %1706, 2
  %1708 = zext i1 %1707 to i8
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1708, i8* %1709, align 1
  store %struct.Memory* %loadMem_46ce83, %struct.Memory** %MEMORY
  %loadMem_46ce86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1711 = getelementptr inbounds %struct.GPR, %struct.GPR* %1710, i32 0, i32 33
  %1712 = getelementptr inbounds %struct.Reg, %struct.Reg* %1711, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %1712 to i64*
  %1713 = load i64, i64* %PC.i1064
  %1714 = add i64 %1713, 29
  %1715 = load i64, i64* %PC.i1064
  %1716 = add i64 %1715, 6
  %1717 = load i64, i64* %PC.i1064
  %1718 = add i64 %1717, 6
  store i64 %1718, i64* %PC.i1064
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1720 = load i8, i8* %1719, align 1
  store i8 %1720, i8* %BRANCH_TAKEN, align 1
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1722 = icmp ne i8 %1720, 0
  %1723 = select i1 %1722, i64 %1714, i64 %1716
  store i64 %1723, i64* %1721, align 8
  store %struct.Memory* %loadMem_46ce86, %struct.Memory** %MEMORY
  %loadBr_46ce86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce86 = icmp eq i8 %loadBr_46ce86, 1
  br i1 %cmpBr_46ce86, label %block_.L_46cea3, label %block_46ce8c

block_46ce8c:                                     ; preds = %block_46ce72
  %loadMem_46ce8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 33
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 1
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %1729 to i64*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 15
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %RBP.i1063 = bitcast %union.anon* %1732 to i64*
  %1733 = load i64, i64* %RBP.i1063
  %1734 = sub i64 %1733, 16
  %1735 = load i64, i64* %PC.i1061
  %1736 = add i64 %1735, 4
  store i64 %1736, i64* %PC.i1061
  %1737 = inttoptr i64 %1734 to i64*
  %1738 = load i64, i64* %1737
  store i64 %1738, i64* %RAX.i1062, align 8
  store %struct.Memory* %loadMem_46ce8c, %struct.Memory** %MEMORY
  %loadMem_46ce90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 33
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1741 to i64*
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 5
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %RCX.i1059 = bitcast %union.anon* %1744 to i64*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 15
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %1747 to i64*
  %1748 = load i64, i64* %RBP.i1060
  %1749 = sub i64 %1748, 24
  %1750 = load i64, i64* %PC.i1058
  %1751 = add i64 %1750, 3
  store i64 %1751, i64* %PC.i1058
  %1752 = inttoptr i64 %1749 to i32*
  %1753 = load i32, i32* %1752
  %1754 = zext i32 %1753 to i64
  store i64 %1754, i64* %RCX.i1059, align 8
  store %struct.Memory* %loadMem_46ce90, %struct.Memory** %MEMORY
  %loadMem_46ce93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 33
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1757 to i64*
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1759 = getelementptr inbounds %struct.GPR, %struct.GPR* %1758, i32 0, i32 5
  %1760 = getelementptr inbounds %struct.Reg, %struct.Reg* %1759, i32 0, i32 0
  %RCX.i1057 = bitcast %union.anon* %1760 to i64*
  %1761 = load i64, i64* %RCX.i1057
  %1762 = load i64, i64* %PC.i1056
  %1763 = add i64 %1762, 3
  store i64 %1763, i64* %PC.i1056
  %1764 = trunc i64 %1761 to i32
  %1765 = add i32 20, %1764
  %1766 = zext i32 %1765 to i64
  store i64 %1766, i64* %RCX.i1057, align 8
  %1767 = icmp ult i32 %1765, %1764
  %1768 = icmp ult i32 %1765, 20
  %1769 = or i1 %1767, %1768
  %1770 = zext i1 %1769 to i8
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1770, i8* %1771, align 1
  %1772 = and i32 %1765, 255
  %1773 = call i32 @llvm.ctpop.i32(i32 %1772)
  %1774 = trunc i32 %1773 to i8
  %1775 = and i8 %1774, 1
  %1776 = xor i8 %1775, 1
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1776, i8* %1777, align 1
  %1778 = xor i64 20, %1761
  %1779 = trunc i64 %1778 to i32
  %1780 = xor i32 %1779, %1765
  %1781 = lshr i32 %1780, 4
  %1782 = trunc i32 %1781 to i8
  %1783 = and i8 %1782, 1
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1783, i8* %1784, align 1
  %1785 = icmp eq i32 %1765, 0
  %1786 = zext i1 %1785 to i8
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1786, i8* %1787, align 1
  %1788 = lshr i32 %1765, 31
  %1789 = trunc i32 %1788 to i8
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1789, i8* %1790, align 1
  %1791 = lshr i32 %1764, 31
  %1792 = xor i32 %1788, %1791
  %1793 = add i32 %1792, %1788
  %1794 = icmp eq i32 %1793, 2
  %1795 = zext i1 %1794 to i8
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1795, i8* %1796, align 1
  store %struct.Memory* %loadMem_46ce93, %struct.Memory** %MEMORY
  %loadMem_46ce96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1798 = getelementptr inbounds %struct.GPR, %struct.GPR* %1797, i32 0, i32 33
  %1799 = getelementptr inbounds %struct.Reg, %struct.Reg* %1798, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %1799 to i64*
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 5
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %ECX.i1054 = bitcast %union.anon* %1802 to i32*
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 7
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %RDX.i1055 = bitcast %union.anon* %1805 to i64*
  %1806 = load i32, i32* %ECX.i1054
  %1807 = zext i32 %1806 to i64
  %1808 = load i64, i64* %PC.i1053
  %1809 = add i64 %1808, 3
  store i64 %1809, i64* %PC.i1053
  %1810 = shl i64 %1807, 32
  %1811 = ashr exact i64 %1810, 32
  store i64 %1811, i64* %RDX.i1055, align 8
  store %struct.Memory* %loadMem_46ce96, %struct.Memory** %MEMORY
  %loadMem_46ce99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 33
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %1814 to i64*
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 1
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %1817 to i64*
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1819 = getelementptr inbounds %struct.GPR, %struct.GPR* %1818, i32 0, i32 7
  %1820 = getelementptr inbounds %struct.Reg, %struct.Reg* %1819, i32 0, i32 0
  %RDX.i1052 = bitcast %union.anon* %1820 to i64*
  %1821 = load i64, i64* %RAX.i1051
  %1822 = load i64, i64* %RDX.i1052
  %1823 = mul i64 %1822, 4
  %1824 = add i64 %1823, %1821
  %1825 = load i64, i64* %PC.i1050
  %1826 = add i64 %1825, 4
  store i64 %1826, i64* %PC.i1050
  %1827 = inttoptr i64 %1824 to i32*
  %1828 = load i32, i32* %1827
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1829, align 1
  %1830 = and i32 %1828, 255
  %1831 = call i32 @llvm.ctpop.i32(i32 %1830)
  %1832 = trunc i32 %1831 to i8
  %1833 = and i8 %1832, 1
  %1834 = xor i8 %1833, 1
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1834, i8* %1835, align 1
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1836, align 1
  %1837 = icmp eq i32 %1828, 0
  %1838 = zext i1 %1837 to i8
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1838, i8* %1839, align 1
  %1840 = lshr i32 %1828, 31
  %1841 = trunc i32 %1840 to i8
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1841, i8* %1842, align 1
  %1843 = lshr i32 %1828, 31
  %1844 = xor i32 %1840, %1843
  %1845 = add i32 %1844, %1843
  %1846 = icmp eq i32 %1845, 2
  %1847 = zext i1 %1846 to i8
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1847, i8* %1848, align 1
  store %struct.Memory* %loadMem_46ce99, %struct.Memory** %MEMORY
  %loadMem_46ce9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 33
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1851 to i64*
  %1852 = load i64, i64* %PC.i1049
  %1853 = add i64 %1852, 438
  %1854 = load i64, i64* %PC.i1049
  %1855 = add i64 %1854, 6
  %1856 = load i64, i64* %PC.i1049
  %1857 = add i64 %1856, 6
  store i64 %1857, i64* %PC.i1049
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1859 = load i8, i8* %1858, align 1
  %1860 = icmp ne i8 %1859, 0
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1862 = load i8, i8* %1861, align 1
  %1863 = icmp ne i8 %1862, 0
  %1864 = xor i1 %1860, %1863
  %1865 = zext i1 %1864 to i8
  store i8 %1865, i8* %BRANCH_TAKEN, align 1
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1867 = select i1 %1864, i64 %1853, i64 %1855
  store i64 %1867, i64* %1866, align 8
  store %struct.Memory* %loadMem_46ce9d, %struct.Memory** %MEMORY
  %loadBr_46ce9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ce9d = icmp eq i8 %loadBr_46ce9d, 1
  br i1 %cmpBr_46ce9d, label %block_.L_46d053, label %block_.L_46cea3

block_.L_46cea3:                                  ; preds = %block_46ce8c, %block_46ce72
  %loadMem_46cea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 33
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %1870 to i64*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 1
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %1873 to i64*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 15
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %1876 to i64*
  %1877 = load i64, i64* %RBP.i1048
  %1878 = sub i64 %1877, 24
  %1879 = load i64, i64* %PC.i1046
  %1880 = add i64 %1879, 3
  store i64 %1880, i64* %PC.i1046
  %1881 = inttoptr i64 %1878 to i32*
  %1882 = load i32, i32* %1881
  %1883 = zext i32 %1882 to i64
  store i64 %1883, i64* %RAX.i1047, align 8
  store %struct.Memory* %loadMem_46cea3, %struct.Memory** %MEMORY
  %loadMem_46cea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 33
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %1886 to i64*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1888 = getelementptr inbounds %struct.GPR, %struct.GPR* %1887, i32 0, i32 1
  %1889 = getelementptr inbounds %struct.Reg, %struct.Reg* %1888, i32 0, i32 0
  %RAX.i1045 = bitcast %union.anon* %1889 to i64*
  %1890 = load i64, i64* %RAX.i1045
  %1891 = load i64, i64* %PC.i1044
  %1892 = add i64 %1891, 3
  store i64 %1892, i64* %PC.i1044
  %1893 = trunc i64 %1890 to i32
  %1894 = sub i32 %1893, 1
  %1895 = zext i32 %1894 to i64
  store i64 %1895, i64* %RAX.i1045, align 8
  %1896 = icmp ult i32 %1893, 1
  %1897 = zext i1 %1896 to i8
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1897, i8* %1898, align 1
  %1899 = and i32 %1894, 255
  %1900 = call i32 @llvm.ctpop.i32(i32 %1899)
  %1901 = trunc i32 %1900 to i8
  %1902 = and i8 %1901, 1
  %1903 = xor i8 %1902, 1
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1903, i8* %1904, align 1
  %1905 = xor i64 1, %1890
  %1906 = trunc i64 %1905 to i32
  %1907 = xor i32 %1906, %1894
  %1908 = lshr i32 %1907, 4
  %1909 = trunc i32 %1908 to i8
  %1910 = and i8 %1909, 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1910, i8* %1911, align 1
  %1912 = icmp eq i32 %1894, 0
  %1913 = zext i1 %1912 to i8
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1913, i8* %1914, align 1
  %1915 = lshr i32 %1894, 31
  %1916 = trunc i32 %1915 to i8
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1916, i8* %1917, align 1
  %1918 = lshr i32 %1893, 31
  %1919 = xor i32 %1915, %1918
  %1920 = add i32 %1919, %1918
  %1921 = icmp eq i32 %1920, 2
  %1922 = zext i1 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1922, i8* %1923, align 1
  store %struct.Memory* %loadMem_46cea6, %struct.Memory** %MEMORY
  %loadMem_46cea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 33
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %1926 to i64*
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1928 = getelementptr inbounds %struct.GPR, %struct.GPR* %1927, i32 0, i32 1
  %1929 = getelementptr inbounds %struct.Reg, %struct.Reg* %1928, i32 0, i32 0
  %EAX.i1042 = bitcast %union.anon* %1929 to i32*
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1931 = getelementptr inbounds %struct.GPR, %struct.GPR* %1930, i32 0, i32 5
  %1932 = getelementptr inbounds %struct.Reg, %struct.Reg* %1931, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %1932 to i64*
  %1933 = load i32, i32* %EAX.i1042
  %1934 = zext i32 %1933 to i64
  %1935 = load i64, i64* %PC.i1041
  %1936 = add i64 %1935, 3
  store i64 %1936, i64* %PC.i1041
  %1937 = shl i64 %1934, 32
  %1938 = ashr exact i64 %1937, 32
  store i64 %1938, i64* %RCX.i1043, align 8
  store %struct.Memory* %loadMem_46cea9, %struct.Memory** %MEMORY
  %loadMem_46ceac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 1
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RAX.i1039 = bitcast %union.anon* %1944 to i64*
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 5
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %1947 to i64*
  %1948 = load i64, i64* %RCX.i1040
  %1949 = add i64 %1948, 12099168
  %1950 = load i64, i64* %PC.i1038
  %1951 = add i64 %1950, 8
  store i64 %1951, i64* %PC.i1038
  %1952 = inttoptr i64 %1949 to i8*
  %1953 = load i8, i8* %1952
  %1954 = zext i8 %1953 to i64
  store i64 %1954, i64* %RAX.i1039, align 8
  store %struct.Memory* %loadMem_46ceac, %struct.Memory** %MEMORY
  %loadMem_46ceb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 33
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %1957 to i64*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 1
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %EAX.i1037 = bitcast %union.anon* %1960 to i32*
  %1961 = load i32, i32* %EAX.i1037
  %1962 = zext i32 %1961 to i64
  %1963 = load i64, i64* %PC.i1036
  %1964 = add i64 %1963, 3
  store i64 %1964, i64* %PC.i1036
  %1965 = sub i32 %1961, 3
  %1966 = icmp ult i32 %1961, 3
  %1967 = zext i1 %1966 to i8
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1967, i8* %1968, align 1
  %1969 = and i32 %1965, 255
  %1970 = call i32 @llvm.ctpop.i32(i32 %1969)
  %1971 = trunc i32 %1970 to i8
  %1972 = and i8 %1971, 1
  %1973 = xor i8 %1972, 1
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1973, i8* %1974, align 1
  %1975 = xor i64 3, %1962
  %1976 = trunc i64 %1975 to i32
  %1977 = xor i32 %1976, %1965
  %1978 = lshr i32 %1977, 4
  %1979 = trunc i32 %1978 to i8
  %1980 = and i8 %1979, 1
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1980, i8* %1981, align 1
  %1982 = icmp eq i32 %1965, 0
  %1983 = zext i1 %1982 to i8
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1983, i8* %1984, align 1
  %1985 = lshr i32 %1965, 31
  %1986 = trunc i32 %1985 to i8
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1986, i8* %1987, align 1
  %1988 = lshr i32 %1961, 31
  %1989 = xor i32 %1985, %1988
  %1990 = add i32 %1989, %1988
  %1991 = icmp eq i32 %1990, 2
  %1992 = zext i1 %1991 to i8
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1992, i8* %1993, align 1
  store %struct.Memory* %loadMem_46ceb4, %struct.Memory** %MEMORY
  %loadMem_46ceb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 33
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %1996 to i64*
  %1997 = load i64, i64* %PC.i1035
  %1998 = add i64 %1997, 29
  %1999 = load i64, i64* %PC.i1035
  %2000 = add i64 %1999, 6
  %2001 = load i64, i64* %PC.i1035
  %2002 = add i64 %2001, 6
  store i64 %2002, i64* %PC.i1035
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2004 = load i8, i8* %2003, align 1
  store i8 %2004, i8* %BRANCH_TAKEN, align 1
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2006 = icmp ne i8 %2004, 0
  %2007 = select i1 %2006, i64 %1998, i64 %2000
  store i64 %2007, i64* %2005, align 8
  store %struct.Memory* %loadMem_46ceb7, %struct.Memory** %MEMORY
  %loadBr_46ceb7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ceb7 = icmp eq i8 %loadBr_46ceb7, 1
  br i1 %cmpBr_46ceb7, label %block_.L_46ced4, label %block_46cebd

block_46cebd:                                     ; preds = %block_.L_46cea3
  %loadMem_46cebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2009 = getelementptr inbounds %struct.GPR, %struct.GPR* %2008, i32 0, i32 33
  %2010 = getelementptr inbounds %struct.Reg, %struct.Reg* %2009, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %2010 to i64*
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2012 = getelementptr inbounds %struct.GPR, %struct.GPR* %2011, i32 0, i32 1
  %2013 = getelementptr inbounds %struct.Reg, %struct.Reg* %2012, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %2013 to i64*
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 15
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %2016 to i64*
  %2017 = load i64, i64* %RBP.i1034
  %2018 = sub i64 %2017, 16
  %2019 = load i64, i64* %PC.i1032
  %2020 = add i64 %2019, 4
  store i64 %2020, i64* %PC.i1032
  %2021 = inttoptr i64 %2018 to i64*
  %2022 = load i64, i64* %2021
  store i64 %2022, i64* %RAX.i1033, align 8
  store %struct.Memory* %loadMem_46cebd, %struct.Memory** %MEMORY
  %loadMem_46cec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 33
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %2025 to i64*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 5
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %2028 to i64*
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 15
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %2031 to i64*
  %2032 = load i64, i64* %RBP.i1031
  %2033 = sub i64 %2032, 24
  %2034 = load i64, i64* %PC.i1029
  %2035 = add i64 %2034, 3
  store i64 %2035, i64* %PC.i1029
  %2036 = inttoptr i64 %2033 to i32*
  %2037 = load i32, i32* %2036
  %2038 = zext i32 %2037 to i64
  store i64 %2038, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_46cec1, %struct.Memory** %MEMORY
  %loadMem_46cec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 33
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 5
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %2044 to i64*
  %2045 = load i64, i64* %RCX.i1028
  %2046 = load i64, i64* %PC.i1027
  %2047 = add i64 %2046, 3
  store i64 %2047, i64* %PC.i1027
  %2048 = trunc i64 %2045 to i32
  %2049 = sub i32 %2048, 1
  %2050 = zext i32 %2049 to i64
  store i64 %2050, i64* %RCX.i1028, align 8
  %2051 = icmp ult i32 %2048, 1
  %2052 = zext i1 %2051 to i8
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2052, i8* %2053, align 1
  %2054 = and i32 %2049, 255
  %2055 = call i32 @llvm.ctpop.i32(i32 %2054)
  %2056 = trunc i32 %2055 to i8
  %2057 = and i8 %2056, 1
  %2058 = xor i8 %2057, 1
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2058, i8* %2059, align 1
  %2060 = xor i64 1, %2045
  %2061 = trunc i64 %2060 to i32
  %2062 = xor i32 %2061, %2049
  %2063 = lshr i32 %2062, 4
  %2064 = trunc i32 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2065, i8* %2066, align 1
  %2067 = icmp eq i32 %2049, 0
  %2068 = zext i1 %2067 to i8
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2068, i8* %2069, align 1
  %2070 = lshr i32 %2049, 31
  %2071 = trunc i32 %2070 to i8
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2071, i8* %2072, align 1
  %2073 = lshr i32 %2048, 31
  %2074 = xor i32 %2070, %2073
  %2075 = add i32 %2074, %2073
  %2076 = icmp eq i32 %2075, 2
  %2077 = zext i1 %2076 to i8
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2077, i8* %2078, align 1
  store %struct.Memory* %loadMem_46cec4, %struct.Memory** %MEMORY
  %loadMem_46cec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 33
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %2081 to i64*
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2083 = getelementptr inbounds %struct.GPR, %struct.GPR* %2082, i32 0, i32 5
  %2084 = getelementptr inbounds %struct.Reg, %struct.Reg* %2083, i32 0, i32 0
  %ECX.i1025 = bitcast %union.anon* %2084 to i32*
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2086 = getelementptr inbounds %struct.GPR, %struct.GPR* %2085, i32 0, i32 7
  %2087 = getelementptr inbounds %struct.Reg, %struct.Reg* %2086, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %2087 to i64*
  %2088 = load i32, i32* %ECX.i1025
  %2089 = zext i32 %2088 to i64
  %2090 = load i64, i64* %PC.i1024
  %2091 = add i64 %2090, 3
  store i64 %2091, i64* %PC.i1024
  %2092 = shl i64 %2089, 32
  %2093 = ashr exact i64 %2092, 32
  store i64 %2093, i64* %RDX.i1026, align 8
  store %struct.Memory* %loadMem_46cec7, %struct.Memory** %MEMORY
  %loadMem_46ceca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2095 = getelementptr inbounds %struct.GPR, %struct.GPR* %2094, i32 0, i32 33
  %2096 = getelementptr inbounds %struct.Reg, %struct.Reg* %2095, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %2096 to i64*
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2098 = getelementptr inbounds %struct.GPR, %struct.GPR* %2097, i32 0, i32 1
  %2099 = getelementptr inbounds %struct.Reg, %struct.Reg* %2098, i32 0, i32 0
  %RAX.i1022 = bitcast %union.anon* %2099 to i64*
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2101 = getelementptr inbounds %struct.GPR, %struct.GPR* %2100, i32 0, i32 7
  %2102 = getelementptr inbounds %struct.Reg, %struct.Reg* %2101, i32 0, i32 0
  %RDX.i1023 = bitcast %union.anon* %2102 to i64*
  %2103 = load i64, i64* %RAX.i1022
  %2104 = load i64, i64* %RDX.i1023
  %2105 = mul i64 %2104, 4
  %2106 = add i64 %2105, %2103
  %2107 = load i64, i64* %PC.i1021
  %2108 = add i64 %2107, 4
  store i64 %2108, i64* %PC.i1021
  %2109 = inttoptr i64 %2106 to i32*
  %2110 = load i32, i32* %2109
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2111, align 1
  %2112 = and i32 %2110, 255
  %2113 = call i32 @llvm.ctpop.i32(i32 %2112)
  %2114 = trunc i32 %2113 to i8
  %2115 = and i8 %2114, 1
  %2116 = xor i8 %2115, 1
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2116, i8* %2117, align 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2118, align 1
  %2119 = icmp eq i32 %2110, 0
  %2120 = zext i1 %2119 to i8
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2120, i8* %2121, align 1
  %2122 = lshr i32 %2110, 31
  %2123 = trunc i32 %2122 to i8
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2123, i8* %2124, align 1
  %2125 = lshr i32 %2110, 31
  %2126 = xor i32 %2122, %2125
  %2127 = add i32 %2126, %2125
  %2128 = icmp eq i32 %2127, 2
  %2129 = zext i1 %2128 to i8
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2129, i8* %2130, align 1
  store %struct.Memory* %loadMem_46ceca, %struct.Memory** %MEMORY
  %loadMem_46cece = load %struct.Memory*, %struct.Memory** %MEMORY
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 33
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %2133 to i64*
  %2134 = load i64, i64* %PC.i1020
  %2135 = add i64 %2134, 389
  %2136 = load i64, i64* %PC.i1020
  %2137 = add i64 %2136, 6
  %2138 = load i64, i64* %PC.i1020
  %2139 = add i64 %2138, 6
  store i64 %2139, i64* %PC.i1020
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2141 = load i8, i8* %2140, align 1
  %2142 = icmp ne i8 %2141, 0
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2144 = load i8, i8* %2143, align 1
  %2145 = icmp ne i8 %2144, 0
  %2146 = xor i1 %2142, %2145
  %2147 = zext i1 %2146 to i8
  store i8 %2147, i8* %BRANCH_TAKEN, align 1
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2149 = select i1 %2146, i64 %2135, i64 %2137
  store i64 %2149, i64* %2148, align 8
  store %struct.Memory* %loadMem_46cece, %struct.Memory** %MEMORY
  %loadBr_46cece = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cece = icmp eq i8 %loadBr_46cece, 1
  br i1 %cmpBr_46cece, label %block_.L_46d053, label %block_.L_46ced4

block_.L_46ced4:                                  ; preds = %block_46cebd, %block_.L_46cea3
  %loadMem_46ced4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 1
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RAX.i1018 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 15
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %2158 to i64*
  %2159 = load i64, i64* %RBP.i1019
  %2160 = sub i64 %2159, 24
  %2161 = load i64, i64* %PC.i1017
  %2162 = add i64 %2161, 3
  store i64 %2162, i64* %PC.i1017
  %2163 = inttoptr i64 %2160 to i32*
  %2164 = load i32, i32* %2163
  %2165 = zext i32 %2164 to i64
  store i64 %2165, i64* %RAX.i1018, align 8
  store %struct.Memory* %loadMem_46ced4, %struct.Memory** %MEMORY
  %loadMem_46ced7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 33
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %2168 to i64*
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 1
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %2171 to i64*
  %2172 = load i64, i64* %RAX.i1016
  %2173 = load i64, i64* %PC.i1015
  %2174 = add i64 %2173, 3
  store i64 %2174, i64* %PC.i1015
  %2175 = trunc i64 %2172 to i32
  %2176 = sub i32 %2175, 20
  %2177 = zext i32 %2176 to i64
  store i64 %2177, i64* %RAX.i1016, align 8
  %2178 = icmp ult i32 %2175, 20
  %2179 = zext i1 %2178 to i8
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2179, i8* %2180, align 1
  %2181 = and i32 %2176, 255
  %2182 = call i32 @llvm.ctpop.i32(i32 %2181)
  %2183 = trunc i32 %2182 to i8
  %2184 = and i8 %2183, 1
  %2185 = xor i8 %2184, 1
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2185, i8* %2186, align 1
  %2187 = xor i64 20, %2172
  %2188 = trunc i64 %2187 to i32
  %2189 = xor i32 %2188, %2176
  %2190 = lshr i32 %2189, 4
  %2191 = trunc i32 %2190 to i8
  %2192 = and i8 %2191, 1
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2192, i8* %2193, align 1
  %2194 = icmp eq i32 %2176, 0
  %2195 = zext i1 %2194 to i8
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2195, i8* %2196, align 1
  %2197 = lshr i32 %2176, 31
  %2198 = trunc i32 %2197 to i8
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2198, i8* %2199, align 1
  %2200 = lshr i32 %2175, 31
  %2201 = xor i32 %2197, %2200
  %2202 = add i32 %2201, %2200
  %2203 = icmp eq i32 %2202, 2
  %2204 = zext i1 %2203 to i8
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2204, i8* %2205, align 1
  store %struct.Memory* %loadMem_46ced7, %struct.Memory** %MEMORY
  %loadMem_46ceda = load %struct.Memory*, %struct.Memory** %MEMORY
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 33
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %2208 to i64*
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 1
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %EAX.i1013 = bitcast %union.anon* %2211 to i32*
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2213 = getelementptr inbounds %struct.GPR, %struct.GPR* %2212, i32 0, i32 5
  %2214 = getelementptr inbounds %struct.Reg, %struct.Reg* %2213, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %2214 to i64*
  %2215 = load i32, i32* %EAX.i1013
  %2216 = zext i32 %2215 to i64
  %2217 = load i64, i64* %PC.i1012
  %2218 = add i64 %2217, 3
  store i64 %2218, i64* %PC.i1012
  %2219 = shl i64 %2216, 32
  %2220 = ashr exact i64 %2219, 32
  store i64 %2220, i64* %RCX.i1014, align 8
  store %struct.Memory* %loadMem_46ceda, %struct.Memory** %MEMORY
  %loadMem_46cedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 33
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %2223 to i64*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 1
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %2226 to i64*
  %2227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2228 = getelementptr inbounds %struct.GPR, %struct.GPR* %2227, i32 0, i32 5
  %2229 = getelementptr inbounds %struct.Reg, %struct.Reg* %2228, i32 0, i32 0
  %RCX.i1011 = bitcast %union.anon* %2229 to i64*
  %2230 = load i64, i64* %RCX.i1011
  %2231 = add i64 %2230, 12099168
  %2232 = load i64, i64* %PC.i1009
  %2233 = add i64 %2232, 8
  store i64 %2233, i64* %PC.i1009
  %2234 = inttoptr i64 %2231 to i8*
  %2235 = load i8, i8* %2234
  %2236 = zext i8 %2235 to i64
  store i64 %2236, i64* %RAX.i1010, align 8
  store %struct.Memory* %loadMem_46cedd, %struct.Memory** %MEMORY
  %loadMem_46cee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 33
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %2239 to i64*
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 1
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %EAX.i1008 = bitcast %union.anon* %2242 to i32*
  %2243 = load i32, i32* %EAX.i1008
  %2244 = zext i32 %2243 to i64
  %2245 = load i64, i64* %PC.i1007
  %2246 = add i64 %2245, 3
  store i64 %2246, i64* %PC.i1007
  %2247 = sub i32 %2243, 3
  %2248 = icmp ult i32 %2243, 3
  %2249 = zext i1 %2248 to i8
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2249, i8* %2250, align 1
  %2251 = and i32 %2247, 255
  %2252 = call i32 @llvm.ctpop.i32(i32 %2251)
  %2253 = trunc i32 %2252 to i8
  %2254 = and i8 %2253, 1
  %2255 = xor i8 %2254, 1
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2255, i8* %2256, align 1
  %2257 = xor i64 3, %2244
  %2258 = trunc i64 %2257 to i32
  %2259 = xor i32 %2258, %2247
  %2260 = lshr i32 %2259, 4
  %2261 = trunc i32 %2260 to i8
  %2262 = and i8 %2261, 1
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2262, i8* %2263, align 1
  %2264 = icmp eq i32 %2247, 0
  %2265 = zext i1 %2264 to i8
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2265, i8* %2266, align 1
  %2267 = lshr i32 %2247, 31
  %2268 = trunc i32 %2267 to i8
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2268, i8* %2269, align 1
  %2270 = lshr i32 %2243, 31
  %2271 = xor i32 %2267, %2270
  %2272 = add i32 %2271, %2270
  %2273 = icmp eq i32 %2272, 2
  %2274 = zext i1 %2273 to i8
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2274, i8* %2275, align 1
  store %struct.Memory* %loadMem_46cee5, %struct.Memory** %MEMORY
  %loadMem_46cee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 33
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %2278 to i64*
  %2279 = load i64, i64* %PC.i1006
  %2280 = add i64 %2279, 29
  %2281 = load i64, i64* %PC.i1006
  %2282 = add i64 %2281, 6
  %2283 = load i64, i64* %PC.i1006
  %2284 = add i64 %2283, 6
  store i64 %2284, i64* %PC.i1006
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2286 = load i8, i8* %2285, align 1
  store i8 %2286, i8* %BRANCH_TAKEN, align 1
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2288 = icmp ne i8 %2286, 0
  %2289 = select i1 %2288, i64 %2280, i64 %2282
  store i64 %2289, i64* %2287, align 8
  store %struct.Memory* %loadMem_46cee8, %struct.Memory** %MEMORY
  %loadBr_46cee8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cee8 = icmp eq i8 %loadBr_46cee8, 1
  br i1 %cmpBr_46cee8, label %block_.L_46cf05, label %block_46ceee

block_46ceee:                                     ; preds = %block_.L_46ced4
  %loadMem_46ceee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 33
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %2292 to i64*
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 1
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 15
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %2298 to i64*
  %2299 = load i64, i64* %RBP.i1005
  %2300 = sub i64 %2299, 16
  %2301 = load i64, i64* %PC.i1003
  %2302 = add i64 %2301, 4
  store i64 %2302, i64* %PC.i1003
  %2303 = inttoptr i64 %2300 to i64*
  %2304 = load i64, i64* %2303
  store i64 %2304, i64* %RAX.i1004, align 8
  store %struct.Memory* %loadMem_46ceee, %struct.Memory** %MEMORY
  %loadMem_46cef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 33
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %2307 to i64*
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 5
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %RCX.i1001 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 15
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %RBP.i1002
  %2315 = sub i64 %2314, 24
  %2316 = load i64, i64* %PC.i1000
  %2317 = add i64 %2316, 3
  store i64 %2317, i64* %PC.i1000
  %2318 = inttoptr i64 %2315 to i32*
  %2319 = load i32, i32* %2318
  %2320 = zext i32 %2319 to i64
  store i64 %2320, i64* %RCX.i1001, align 8
  store %struct.Memory* %loadMem_46cef2, %struct.Memory** %MEMORY
  %loadMem_46cef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2322 = getelementptr inbounds %struct.GPR, %struct.GPR* %2321, i32 0, i32 33
  %2323 = getelementptr inbounds %struct.Reg, %struct.Reg* %2322, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %2323 to i64*
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2325 = getelementptr inbounds %struct.GPR, %struct.GPR* %2324, i32 0, i32 5
  %2326 = getelementptr inbounds %struct.Reg, %struct.Reg* %2325, i32 0, i32 0
  %RCX.i999 = bitcast %union.anon* %2326 to i64*
  %2327 = load i64, i64* %RCX.i999
  %2328 = load i64, i64* %PC.i998
  %2329 = add i64 %2328, 3
  store i64 %2329, i64* %PC.i998
  %2330 = trunc i64 %2327 to i32
  %2331 = sub i32 %2330, 20
  %2332 = zext i32 %2331 to i64
  store i64 %2332, i64* %RCX.i999, align 8
  %2333 = icmp ult i32 %2330, 20
  %2334 = zext i1 %2333 to i8
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2334, i8* %2335, align 1
  %2336 = and i32 %2331, 255
  %2337 = call i32 @llvm.ctpop.i32(i32 %2336)
  %2338 = trunc i32 %2337 to i8
  %2339 = and i8 %2338, 1
  %2340 = xor i8 %2339, 1
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2340, i8* %2341, align 1
  %2342 = xor i64 20, %2327
  %2343 = trunc i64 %2342 to i32
  %2344 = xor i32 %2343, %2331
  %2345 = lshr i32 %2344, 4
  %2346 = trunc i32 %2345 to i8
  %2347 = and i8 %2346, 1
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2347, i8* %2348, align 1
  %2349 = icmp eq i32 %2331, 0
  %2350 = zext i1 %2349 to i8
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2350, i8* %2351, align 1
  %2352 = lshr i32 %2331, 31
  %2353 = trunc i32 %2352 to i8
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2353, i8* %2354, align 1
  %2355 = lshr i32 %2330, 31
  %2356 = xor i32 %2352, %2355
  %2357 = add i32 %2356, %2355
  %2358 = icmp eq i32 %2357, 2
  %2359 = zext i1 %2358 to i8
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2359, i8* %2360, align 1
  store %struct.Memory* %loadMem_46cef5, %struct.Memory** %MEMORY
  %loadMem_46cef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 33
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %2363 to i64*
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2365 = getelementptr inbounds %struct.GPR, %struct.GPR* %2364, i32 0, i32 5
  %2366 = getelementptr inbounds %struct.Reg, %struct.Reg* %2365, i32 0, i32 0
  %ECX.i996 = bitcast %union.anon* %2366 to i32*
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2368 = getelementptr inbounds %struct.GPR, %struct.GPR* %2367, i32 0, i32 7
  %2369 = getelementptr inbounds %struct.Reg, %struct.Reg* %2368, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %2369 to i64*
  %2370 = load i32, i32* %ECX.i996
  %2371 = zext i32 %2370 to i64
  %2372 = load i64, i64* %PC.i995
  %2373 = add i64 %2372, 3
  store i64 %2373, i64* %PC.i995
  %2374 = shl i64 %2371, 32
  %2375 = ashr exact i64 %2374, 32
  store i64 %2375, i64* %RDX.i997, align 8
  store %struct.Memory* %loadMem_46cef8, %struct.Memory** %MEMORY
  %loadMem_46cefb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 33
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 1
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %2381 to i64*
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 7
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %RDX.i994 = bitcast %union.anon* %2384 to i64*
  %2385 = load i64, i64* %RAX.i993
  %2386 = load i64, i64* %RDX.i994
  %2387 = mul i64 %2386, 4
  %2388 = add i64 %2387, %2385
  %2389 = load i64, i64* %PC.i992
  %2390 = add i64 %2389, 4
  store i64 %2390, i64* %PC.i992
  %2391 = inttoptr i64 %2388 to i32*
  %2392 = load i32, i32* %2391
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2393, align 1
  %2394 = and i32 %2392, 255
  %2395 = call i32 @llvm.ctpop.i32(i32 %2394)
  %2396 = trunc i32 %2395 to i8
  %2397 = and i8 %2396, 1
  %2398 = xor i8 %2397, 1
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2398, i8* %2399, align 1
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2400, align 1
  %2401 = icmp eq i32 %2392, 0
  %2402 = zext i1 %2401 to i8
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2402, i8* %2403, align 1
  %2404 = lshr i32 %2392, 31
  %2405 = trunc i32 %2404 to i8
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2405, i8* %2406, align 1
  %2407 = lshr i32 %2392, 31
  %2408 = xor i32 %2404, %2407
  %2409 = add i32 %2408, %2407
  %2410 = icmp eq i32 %2409, 2
  %2411 = zext i1 %2410 to i8
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2411, i8* %2412, align 1
  store %struct.Memory* %loadMem_46cefb, %struct.Memory** %MEMORY
  %loadMem_46ceff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 33
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %2415 to i64*
  %2416 = load i64, i64* %PC.i991
  %2417 = add i64 %2416, 340
  %2418 = load i64, i64* %PC.i991
  %2419 = add i64 %2418, 6
  %2420 = load i64, i64* %PC.i991
  %2421 = add i64 %2420, 6
  store i64 %2421, i64* %PC.i991
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2423 = load i8, i8* %2422, align 1
  %2424 = icmp ne i8 %2423, 0
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2426 = load i8, i8* %2425, align 1
  %2427 = icmp ne i8 %2426, 0
  %2428 = xor i1 %2424, %2427
  %2429 = zext i1 %2428 to i8
  store i8 %2429, i8* %BRANCH_TAKEN, align 1
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2431 = select i1 %2428, i64 %2417, i64 %2419
  store i64 %2431, i64* %2430, align 8
  store %struct.Memory* %loadMem_46ceff, %struct.Memory** %MEMORY
  %loadBr_46ceff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46ceff = icmp eq i8 %loadBr_46ceff, 1
  br i1 %cmpBr_46ceff, label %block_.L_46d053, label %block_.L_46cf05

block_.L_46cf05:                                  ; preds = %block_46ceee, %block_.L_46ced4
  %loadMem_46cf05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 33
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 1
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RAX.i989 = bitcast %union.anon* %2437 to i64*
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 15
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %2440 to i64*
  %2441 = load i64, i64* %RBP.i990
  %2442 = sub i64 %2441, 24
  %2443 = load i64, i64* %PC.i988
  %2444 = add i64 %2443, 3
  store i64 %2444, i64* %PC.i988
  %2445 = inttoptr i64 %2442 to i32*
  %2446 = load i32, i32* %2445
  %2447 = zext i32 %2446 to i64
  store i64 %2447, i64* %RAX.i989, align 8
  store %struct.Memory* %loadMem_46cf05, %struct.Memory** %MEMORY
  %loadMem_46cf08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2449 = getelementptr inbounds %struct.GPR, %struct.GPR* %2448, i32 0, i32 33
  %2450 = getelementptr inbounds %struct.Reg, %struct.Reg* %2449, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %2450 to i64*
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2452 = getelementptr inbounds %struct.GPR, %struct.GPR* %2451, i32 0, i32 1
  %2453 = getelementptr inbounds %struct.Reg, %struct.Reg* %2452, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %2453 to i64*
  %2454 = load i64, i64* %RAX.i987
  %2455 = load i64, i64* %PC.i986
  %2456 = add i64 %2455, 3
  store i64 %2456, i64* %PC.i986
  %2457 = trunc i64 %2454 to i32
  %2458 = add i32 1, %2457
  %2459 = zext i32 %2458 to i64
  store i64 %2459, i64* %RAX.i987, align 8
  %2460 = icmp ult i32 %2458, %2457
  %2461 = icmp ult i32 %2458, 1
  %2462 = or i1 %2460, %2461
  %2463 = zext i1 %2462 to i8
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2463, i8* %2464, align 1
  %2465 = and i32 %2458, 255
  %2466 = call i32 @llvm.ctpop.i32(i32 %2465)
  %2467 = trunc i32 %2466 to i8
  %2468 = and i8 %2467, 1
  %2469 = xor i8 %2468, 1
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2469, i8* %2470, align 1
  %2471 = xor i64 1, %2454
  %2472 = trunc i64 %2471 to i32
  %2473 = xor i32 %2472, %2458
  %2474 = lshr i32 %2473, 4
  %2475 = trunc i32 %2474 to i8
  %2476 = and i8 %2475, 1
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2476, i8* %2477, align 1
  %2478 = icmp eq i32 %2458, 0
  %2479 = zext i1 %2478 to i8
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2479, i8* %2480, align 1
  %2481 = lshr i32 %2458, 31
  %2482 = trunc i32 %2481 to i8
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2482, i8* %2483, align 1
  %2484 = lshr i32 %2457, 31
  %2485 = xor i32 %2481, %2484
  %2486 = add i32 %2485, %2481
  %2487 = icmp eq i32 %2486, 2
  %2488 = zext i1 %2487 to i8
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2488, i8* %2489, align 1
  store %struct.Memory* %loadMem_46cf08, %struct.Memory** %MEMORY
  %loadMem_46cf0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2491 = getelementptr inbounds %struct.GPR, %struct.GPR* %2490, i32 0, i32 33
  %2492 = getelementptr inbounds %struct.Reg, %struct.Reg* %2491, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %2492 to i64*
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2494 = getelementptr inbounds %struct.GPR, %struct.GPR* %2493, i32 0, i32 1
  %2495 = getelementptr inbounds %struct.Reg, %struct.Reg* %2494, i32 0, i32 0
  %EAX.i984 = bitcast %union.anon* %2495 to i32*
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 5
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %RCX.i985 = bitcast %union.anon* %2498 to i64*
  %2499 = load i32, i32* %EAX.i984
  %2500 = zext i32 %2499 to i64
  %2501 = load i64, i64* %PC.i983
  %2502 = add i64 %2501, 3
  store i64 %2502, i64* %PC.i983
  %2503 = shl i64 %2500, 32
  %2504 = ashr exact i64 %2503, 32
  store i64 %2504, i64* %RCX.i985, align 8
  store %struct.Memory* %loadMem_46cf0b, %struct.Memory** %MEMORY
  %loadMem_46cf0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 1
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %2510 to i64*
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 5
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %RCX.i982 = bitcast %union.anon* %2513 to i64*
  %2514 = load i64, i64* %RCX.i982
  %2515 = add i64 %2514, 12099168
  %2516 = load i64, i64* %PC.i980
  %2517 = add i64 %2516, 8
  store i64 %2517, i64* %PC.i980
  %2518 = inttoptr i64 %2515 to i8*
  %2519 = load i8, i8* %2518
  %2520 = zext i8 %2519 to i64
  store i64 %2520, i64* %RAX.i981, align 8
  store %struct.Memory* %loadMem_46cf0e, %struct.Memory** %MEMORY
  %loadMem_46cf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 33
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %2523 to i64*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 1
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %EAX.i979 = bitcast %union.anon* %2526 to i32*
  %2527 = load i32, i32* %EAX.i979
  %2528 = zext i32 %2527 to i64
  %2529 = load i64, i64* %PC.i978
  %2530 = add i64 %2529, 3
  store i64 %2530, i64* %PC.i978
  %2531 = sub i32 %2527, 3
  %2532 = icmp ult i32 %2527, 3
  %2533 = zext i1 %2532 to i8
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2533, i8* %2534, align 1
  %2535 = and i32 %2531, 255
  %2536 = call i32 @llvm.ctpop.i32(i32 %2535)
  %2537 = trunc i32 %2536 to i8
  %2538 = and i8 %2537, 1
  %2539 = xor i8 %2538, 1
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2539, i8* %2540, align 1
  %2541 = xor i64 3, %2528
  %2542 = trunc i64 %2541 to i32
  %2543 = xor i32 %2542, %2531
  %2544 = lshr i32 %2543, 4
  %2545 = trunc i32 %2544 to i8
  %2546 = and i8 %2545, 1
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2546, i8* %2547, align 1
  %2548 = icmp eq i32 %2531, 0
  %2549 = zext i1 %2548 to i8
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2549, i8* %2550, align 1
  %2551 = lshr i32 %2531, 31
  %2552 = trunc i32 %2551 to i8
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2552, i8* %2553, align 1
  %2554 = lshr i32 %2527, 31
  %2555 = xor i32 %2551, %2554
  %2556 = add i32 %2555, %2554
  %2557 = icmp eq i32 %2556, 2
  %2558 = zext i1 %2557 to i8
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2558, i8* %2559, align 1
  store %struct.Memory* %loadMem_46cf16, %struct.Memory** %MEMORY
  %loadMem_46cf19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %PC.i977
  %2564 = add i64 %2563, 29
  %2565 = load i64, i64* %PC.i977
  %2566 = add i64 %2565, 6
  %2567 = load i64, i64* %PC.i977
  %2568 = add i64 %2567, 6
  store i64 %2568, i64* %PC.i977
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2570 = load i8, i8* %2569, align 1
  store i8 %2570, i8* %BRANCH_TAKEN, align 1
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2572 = icmp ne i8 %2570, 0
  %2573 = select i1 %2572, i64 %2564, i64 %2566
  store i64 %2573, i64* %2571, align 8
  store %struct.Memory* %loadMem_46cf19, %struct.Memory** %MEMORY
  %loadBr_46cf19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cf19 = icmp eq i8 %loadBr_46cf19, 1
  br i1 %cmpBr_46cf19, label %block_.L_46cf36, label %block_46cf1f

block_46cf1f:                                     ; preds = %block_.L_46cf05
  %loadMem_46cf1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 33
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 1
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %2579 to i64*
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2581 = getelementptr inbounds %struct.GPR, %struct.GPR* %2580, i32 0, i32 15
  %2582 = getelementptr inbounds %struct.Reg, %struct.Reg* %2581, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %2582 to i64*
  %2583 = load i64, i64* %RBP.i976
  %2584 = sub i64 %2583, 16
  %2585 = load i64, i64* %PC.i974
  %2586 = add i64 %2585, 4
  store i64 %2586, i64* %PC.i974
  %2587 = inttoptr i64 %2584 to i64*
  %2588 = load i64, i64* %2587
  store i64 %2588, i64* %RAX.i975, align 8
  store %struct.Memory* %loadMem_46cf1f, %struct.Memory** %MEMORY
  %loadMem_46cf23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 33
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %2591 to i64*
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2593 = getelementptr inbounds %struct.GPR, %struct.GPR* %2592, i32 0, i32 5
  %2594 = getelementptr inbounds %struct.Reg, %struct.Reg* %2593, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %2594 to i64*
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2596 = getelementptr inbounds %struct.GPR, %struct.GPR* %2595, i32 0, i32 15
  %2597 = getelementptr inbounds %struct.Reg, %struct.Reg* %2596, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %2597 to i64*
  %2598 = load i64, i64* %RBP.i973
  %2599 = sub i64 %2598, 24
  %2600 = load i64, i64* %PC.i971
  %2601 = add i64 %2600, 3
  store i64 %2601, i64* %PC.i971
  %2602 = inttoptr i64 %2599 to i32*
  %2603 = load i32, i32* %2602
  %2604 = zext i32 %2603 to i64
  store i64 %2604, i64* %RCX.i972, align 8
  store %struct.Memory* %loadMem_46cf23, %struct.Memory** %MEMORY
  %loadMem_46cf26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 33
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %2607 to i64*
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 5
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %RCX.i970 = bitcast %union.anon* %2610 to i64*
  %2611 = load i64, i64* %RCX.i970
  %2612 = load i64, i64* %PC.i969
  %2613 = add i64 %2612, 3
  store i64 %2613, i64* %PC.i969
  %2614 = trunc i64 %2611 to i32
  %2615 = add i32 1, %2614
  %2616 = zext i32 %2615 to i64
  store i64 %2616, i64* %RCX.i970, align 8
  %2617 = icmp ult i32 %2615, %2614
  %2618 = icmp ult i32 %2615, 1
  %2619 = or i1 %2617, %2618
  %2620 = zext i1 %2619 to i8
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2620, i8* %2621, align 1
  %2622 = and i32 %2615, 255
  %2623 = call i32 @llvm.ctpop.i32(i32 %2622)
  %2624 = trunc i32 %2623 to i8
  %2625 = and i8 %2624, 1
  %2626 = xor i8 %2625, 1
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2626, i8* %2627, align 1
  %2628 = xor i64 1, %2611
  %2629 = trunc i64 %2628 to i32
  %2630 = xor i32 %2629, %2615
  %2631 = lshr i32 %2630, 4
  %2632 = trunc i32 %2631 to i8
  %2633 = and i8 %2632, 1
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2633, i8* %2634, align 1
  %2635 = icmp eq i32 %2615, 0
  %2636 = zext i1 %2635 to i8
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2636, i8* %2637, align 1
  %2638 = lshr i32 %2615, 31
  %2639 = trunc i32 %2638 to i8
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2639, i8* %2640, align 1
  %2641 = lshr i32 %2614, 31
  %2642 = xor i32 %2638, %2641
  %2643 = add i32 %2642, %2638
  %2644 = icmp eq i32 %2643, 2
  %2645 = zext i1 %2644 to i8
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2645, i8* %2646, align 1
  store %struct.Memory* %loadMem_46cf26, %struct.Memory** %MEMORY
  %loadMem_46cf29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 5
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %ECX.i967 = bitcast %union.anon* %2652 to i32*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 7
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RDX.i968 = bitcast %union.anon* %2655 to i64*
  %2656 = load i32, i32* %ECX.i967
  %2657 = zext i32 %2656 to i64
  %2658 = load i64, i64* %PC.i966
  %2659 = add i64 %2658, 3
  store i64 %2659, i64* %PC.i966
  %2660 = shl i64 %2657, 32
  %2661 = ashr exact i64 %2660, 32
  store i64 %2661, i64* %RDX.i968, align 8
  store %struct.Memory* %loadMem_46cf29, %struct.Memory** %MEMORY
  %loadMem_46cf2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 33
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 1
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %2667 to i64*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 7
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %RDX.i965 = bitcast %union.anon* %2670 to i64*
  %2671 = load i64, i64* %RAX.i964
  %2672 = load i64, i64* %RDX.i965
  %2673 = mul i64 %2672, 4
  %2674 = add i64 %2673, %2671
  %2675 = load i64, i64* %PC.i963
  %2676 = add i64 %2675, 4
  store i64 %2676, i64* %PC.i963
  %2677 = inttoptr i64 %2674 to i32*
  %2678 = load i32, i32* %2677
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2679, align 1
  %2680 = and i32 %2678, 255
  %2681 = call i32 @llvm.ctpop.i32(i32 %2680)
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  %2684 = xor i8 %2683, 1
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2684, i8* %2685, align 1
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2686, align 1
  %2687 = icmp eq i32 %2678, 0
  %2688 = zext i1 %2687 to i8
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2688, i8* %2689, align 1
  %2690 = lshr i32 %2678, 31
  %2691 = trunc i32 %2690 to i8
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2691, i8* %2692, align 1
  %2693 = lshr i32 %2678, 31
  %2694 = xor i32 %2690, %2693
  %2695 = add i32 %2694, %2693
  %2696 = icmp eq i32 %2695, 2
  %2697 = zext i1 %2696 to i8
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2697, i8* %2698, align 1
  store %struct.Memory* %loadMem_46cf2c, %struct.Memory** %MEMORY
  %loadMem_46cf30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2701 to i64*
  %2702 = load i64, i64* %PC.i962
  %2703 = add i64 %2702, 291
  %2704 = load i64, i64* %PC.i962
  %2705 = add i64 %2704, 6
  %2706 = load i64, i64* %PC.i962
  %2707 = add i64 %2706, 6
  store i64 %2707, i64* %PC.i962
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2709 = load i8, i8* %2708, align 1
  %2710 = icmp ne i8 %2709, 0
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2712 = load i8, i8* %2711, align 1
  %2713 = icmp ne i8 %2712, 0
  %2714 = xor i1 %2710, %2713
  %2715 = zext i1 %2714 to i8
  store i8 %2715, i8* %BRANCH_TAKEN, align 1
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2717 = select i1 %2714, i64 %2703, i64 %2705
  store i64 %2717, i64* %2716, align 8
  store %struct.Memory* %loadMem_46cf30, %struct.Memory** %MEMORY
  %loadBr_46cf30 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cf30 = icmp eq i8 %loadBr_46cf30, 1
  br i1 %cmpBr_46cf30, label %block_.L_46d053, label %block_.L_46cf36

block_.L_46cf36:                                  ; preds = %block_46cf1f, %block_.L_46cf05
  %loadMem_46cf36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2719 = getelementptr inbounds %struct.GPR, %struct.GPR* %2718, i32 0, i32 33
  %2720 = getelementptr inbounds %struct.Reg, %struct.Reg* %2719, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %2720 to i64*
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2722 = getelementptr inbounds %struct.GPR, %struct.GPR* %2721, i32 0, i32 1
  %2723 = getelementptr inbounds %struct.Reg, %struct.Reg* %2722, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %2723 to i64*
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 15
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2726 to i64*
  %2727 = load i64, i64* %RBP.i961
  %2728 = sub i64 %2727, 24
  %2729 = load i64, i64* %PC.i959
  %2730 = add i64 %2729, 3
  store i64 %2730, i64* %PC.i959
  %2731 = inttoptr i64 %2728 to i32*
  %2732 = load i32, i32* %2731
  %2733 = zext i32 %2732 to i64
  store i64 %2733, i64* %RAX.i960, align 8
  store %struct.Memory* %loadMem_46cf36, %struct.Memory** %MEMORY
  %loadMem_46cf39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2735 = getelementptr inbounds %struct.GPR, %struct.GPR* %2734, i32 0, i32 33
  %2736 = getelementptr inbounds %struct.Reg, %struct.Reg* %2735, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %2736 to i64*
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 1
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %RAX.i958
  %2741 = load i64, i64* %PC.i957
  %2742 = add i64 %2741, 3
  store i64 %2742, i64* %PC.i957
  %2743 = trunc i64 %2740 to i32
  %2744 = add i32 20, %2743
  %2745 = zext i32 %2744 to i64
  store i64 %2745, i64* %RAX.i958, align 8
  %2746 = icmp ult i32 %2744, %2743
  %2747 = icmp ult i32 %2744, 20
  %2748 = or i1 %2746, %2747
  %2749 = zext i1 %2748 to i8
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2749, i8* %2750, align 1
  %2751 = and i32 %2744, 255
  %2752 = call i32 @llvm.ctpop.i32(i32 %2751)
  %2753 = trunc i32 %2752 to i8
  %2754 = and i8 %2753, 1
  %2755 = xor i8 %2754, 1
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2755, i8* %2756, align 1
  %2757 = xor i64 20, %2740
  %2758 = trunc i64 %2757 to i32
  %2759 = xor i32 %2758, %2744
  %2760 = lshr i32 %2759, 4
  %2761 = trunc i32 %2760 to i8
  %2762 = and i8 %2761, 1
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2762, i8* %2763, align 1
  %2764 = icmp eq i32 %2744, 0
  %2765 = zext i1 %2764 to i8
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2765, i8* %2766, align 1
  %2767 = lshr i32 %2744, 31
  %2768 = trunc i32 %2767 to i8
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2768, i8* %2769, align 1
  %2770 = lshr i32 %2743, 31
  %2771 = xor i32 %2767, %2770
  %2772 = add i32 %2771, %2767
  %2773 = icmp eq i32 %2772, 2
  %2774 = zext i1 %2773 to i8
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2774, i8* %2775, align 1
  store %struct.Memory* %loadMem_46cf39, %struct.Memory** %MEMORY
  %loadMem_46cf3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 33
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %2778 to i64*
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 1
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %EAX.i955 = bitcast %union.anon* %2781 to i32*
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 5
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %2784 to i64*
  %2785 = load i32, i32* %EAX.i955
  %2786 = zext i32 %2785 to i64
  %2787 = load i64, i64* %PC.i954
  %2788 = add i64 %2787, 3
  store i64 %2788, i64* %PC.i954
  %2789 = shl i64 %2786, 32
  %2790 = ashr exact i64 %2789, 32
  store i64 %2790, i64* %RCX.i956, align 8
  store %struct.Memory* %loadMem_46cf3c, %struct.Memory** %MEMORY
  %loadMem_46cf3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 33
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2793 to i64*
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 1
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %RAX.i952 = bitcast %union.anon* %2796 to i64*
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 5
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %RCX.i953 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %RCX.i953
  %2801 = add i64 %2800, 12099168
  %2802 = load i64, i64* %PC.i951
  %2803 = add i64 %2802, 8
  store i64 %2803, i64* %PC.i951
  %2804 = inttoptr i64 %2801 to i8*
  %2805 = load i8, i8* %2804
  %2806 = zext i8 %2805 to i64
  store i64 %2806, i64* %RAX.i952, align 8
  store %struct.Memory* %loadMem_46cf3f, %struct.Memory** %MEMORY
  %loadMem_46cf47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2808 = getelementptr inbounds %struct.GPR, %struct.GPR* %2807, i32 0, i32 33
  %2809 = getelementptr inbounds %struct.Reg, %struct.Reg* %2808, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2809 to i64*
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 1
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %EAX.i950 = bitcast %union.anon* %2812 to i32*
  %2813 = load i32, i32* %EAX.i950
  %2814 = zext i32 %2813 to i64
  %2815 = load i64, i64* %PC.i949
  %2816 = add i64 %2815, 3
  store i64 %2816, i64* %PC.i949
  %2817 = sub i32 %2813, 3
  %2818 = icmp ult i32 %2813, 3
  %2819 = zext i1 %2818 to i8
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2819, i8* %2820, align 1
  %2821 = and i32 %2817, 255
  %2822 = call i32 @llvm.ctpop.i32(i32 %2821)
  %2823 = trunc i32 %2822 to i8
  %2824 = and i8 %2823, 1
  %2825 = xor i8 %2824, 1
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2825, i8* %2826, align 1
  %2827 = xor i64 3, %2814
  %2828 = trunc i64 %2827 to i32
  %2829 = xor i32 %2828, %2817
  %2830 = lshr i32 %2829, 4
  %2831 = trunc i32 %2830 to i8
  %2832 = and i8 %2831, 1
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2832, i8* %2833, align 1
  %2834 = icmp eq i32 %2817, 0
  %2835 = zext i1 %2834 to i8
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2835, i8* %2836, align 1
  %2837 = lshr i32 %2817, 31
  %2838 = trunc i32 %2837 to i8
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2838, i8* %2839, align 1
  %2840 = lshr i32 %2813, 31
  %2841 = xor i32 %2837, %2840
  %2842 = add i32 %2841, %2840
  %2843 = icmp eq i32 %2842, 2
  %2844 = zext i1 %2843 to i8
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2844, i8* %2845, align 1
  store %struct.Memory* %loadMem_46cf47, %struct.Memory** %MEMORY
  %loadMem_46cf4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2847 = getelementptr inbounds %struct.GPR, %struct.GPR* %2846, i32 0, i32 33
  %2848 = getelementptr inbounds %struct.Reg, %struct.Reg* %2847, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2848 to i64*
  %2849 = load i64, i64* %PC.i948
  %2850 = add i64 %2849, 50
  %2851 = load i64, i64* %PC.i948
  %2852 = add i64 %2851, 6
  %2853 = load i64, i64* %PC.i948
  %2854 = add i64 %2853, 6
  store i64 %2854, i64* %PC.i948
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2856 = load i8, i8* %2855, align 1
  store i8 %2856, i8* %BRANCH_TAKEN, align 1
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2858 = icmp ne i8 %2856, 0
  %2859 = select i1 %2858, i64 %2850, i64 %2852
  store i64 %2859, i64* %2857, align 8
  store %struct.Memory* %loadMem_46cf4a, %struct.Memory** %MEMORY
  %loadBr_46cf4a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cf4a = icmp eq i8 %loadBr_46cf4a, 1
  br i1 %cmpBr_46cf4a, label %block_.L_46cf7c, label %block_46cf50

block_46cf50:                                     ; preds = %block_.L_46cf36
  %loadMem_46cf50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 33
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %2862 to i64*
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2864 = getelementptr inbounds %struct.GPR, %struct.GPR* %2863, i32 0, i32 1
  %2865 = getelementptr inbounds %struct.Reg, %struct.Reg* %2864, i32 0, i32 0
  %RAX.i946 = bitcast %union.anon* %2865 to i64*
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2867 = getelementptr inbounds %struct.GPR, %struct.GPR* %2866, i32 0, i32 15
  %2868 = getelementptr inbounds %struct.Reg, %struct.Reg* %2867, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %2868 to i64*
  %2869 = load i64, i64* %RBP.i947
  %2870 = sub i64 %2869, 16
  %2871 = load i64, i64* %PC.i945
  %2872 = add i64 %2871, 4
  store i64 %2872, i64* %PC.i945
  %2873 = inttoptr i64 %2870 to i64*
  %2874 = load i64, i64* %2873
  store i64 %2874, i64* %RAX.i946, align 8
  store %struct.Memory* %loadMem_46cf50, %struct.Memory** %MEMORY
  %loadMem_46cf54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2876 = getelementptr inbounds %struct.GPR, %struct.GPR* %2875, i32 0, i32 33
  %2877 = getelementptr inbounds %struct.Reg, %struct.Reg* %2876, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %2877 to i64*
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 5
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 15
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %2883 to i64*
  %2884 = load i64, i64* %RBP.i944
  %2885 = sub i64 %2884, 24
  %2886 = load i64, i64* %PC.i942
  %2887 = add i64 %2886, 3
  store i64 %2887, i64* %PC.i942
  %2888 = inttoptr i64 %2885 to i32*
  %2889 = load i32, i32* %2888
  %2890 = zext i32 %2889 to i64
  store i64 %2890, i64* %RCX.i943, align 8
  store %struct.Memory* %loadMem_46cf54, %struct.Memory** %MEMORY
  %loadMem_46cf57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 33
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 5
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %2896 to i64*
  %2897 = load i64, i64* %RCX.i941
  %2898 = load i64, i64* %PC.i940
  %2899 = add i64 %2898, 3
  store i64 %2899, i64* %PC.i940
  %2900 = trunc i64 %2897 to i32
  %2901 = add i32 20, %2900
  %2902 = zext i32 %2901 to i64
  store i64 %2902, i64* %RCX.i941, align 8
  %2903 = icmp ult i32 %2901, %2900
  %2904 = icmp ult i32 %2901, 20
  %2905 = or i1 %2903, %2904
  %2906 = zext i1 %2905 to i8
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2906, i8* %2907, align 1
  %2908 = and i32 %2901, 255
  %2909 = call i32 @llvm.ctpop.i32(i32 %2908)
  %2910 = trunc i32 %2909 to i8
  %2911 = and i8 %2910, 1
  %2912 = xor i8 %2911, 1
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2912, i8* %2913, align 1
  %2914 = xor i64 20, %2897
  %2915 = trunc i64 %2914 to i32
  %2916 = xor i32 %2915, %2901
  %2917 = lshr i32 %2916, 4
  %2918 = trunc i32 %2917 to i8
  %2919 = and i8 %2918, 1
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2919, i8* %2920, align 1
  %2921 = icmp eq i32 %2901, 0
  %2922 = zext i1 %2921 to i8
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2922, i8* %2923, align 1
  %2924 = lshr i32 %2901, 31
  %2925 = trunc i32 %2924 to i8
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2925, i8* %2926, align 1
  %2927 = lshr i32 %2900, 31
  %2928 = xor i32 %2924, %2927
  %2929 = add i32 %2928, %2924
  %2930 = icmp eq i32 %2929, 2
  %2931 = zext i1 %2930 to i8
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2931, i8* %2932, align 1
  store %struct.Memory* %loadMem_46cf57, %struct.Memory** %MEMORY
  %loadMem_46cf5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 33
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2935 to i64*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 5
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %ECX.i938 = bitcast %union.anon* %2938 to i32*
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 7
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %2941 to i64*
  %2942 = load i32, i32* %ECX.i938
  %2943 = zext i32 %2942 to i64
  %2944 = load i64, i64* %PC.i937
  %2945 = add i64 %2944, 3
  store i64 %2945, i64* %PC.i937
  %2946 = shl i64 %2943, 32
  %2947 = ashr exact i64 %2946, 32
  store i64 %2947, i64* %RDX.i939, align 8
  store %struct.Memory* %loadMem_46cf5a, %struct.Memory** %MEMORY
  %loadMem_46cf5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2949 = getelementptr inbounds %struct.GPR, %struct.GPR* %2948, i32 0, i32 33
  %2950 = getelementptr inbounds %struct.Reg, %struct.Reg* %2949, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2950 to i64*
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 1
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %2953 to i64*
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 7
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %RDX.i936 = bitcast %union.anon* %2956 to i64*
  %2957 = load i64, i64* %RAX.i935
  %2958 = load i64, i64* %RDX.i936
  %2959 = mul i64 %2958, 4
  %2960 = add i64 %2959, %2957
  %2961 = load i64, i64* %PC.i934
  %2962 = add i64 %2961, 4
  store i64 %2962, i64* %PC.i934
  %2963 = inttoptr i64 %2960 to i32*
  %2964 = load i32, i32* %2963
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2965, align 1
  %2966 = and i32 %2964, 255
  %2967 = call i32 @llvm.ctpop.i32(i32 %2966)
  %2968 = trunc i32 %2967 to i8
  %2969 = and i8 %2968, 1
  %2970 = xor i8 %2969, 1
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2970, i8* %2971, align 1
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2972, align 1
  %2973 = icmp eq i32 %2964, 0
  %2974 = zext i1 %2973 to i8
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2974, i8* %2975, align 1
  %2976 = lshr i32 %2964, 31
  %2977 = trunc i32 %2976 to i8
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2977, i8* %2978, align 1
  %2979 = lshr i32 %2964, 31
  %2980 = xor i32 %2976, %2979
  %2981 = add i32 %2980, %2979
  %2982 = icmp eq i32 %2981, 2
  %2983 = zext i1 %2982 to i8
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2983, i8* %2984, align 1
  store %struct.Memory* %loadMem_46cf5d, %struct.Memory** %MEMORY
  %loadMem_46cf61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 33
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %2987 to i64*
  %2988 = load i64, i64* %PC.i933
  %2989 = add i64 %2988, 27
  %2990 = load i64, i64* %PC.i933
  %2991 = add i64 %2990, 6
  %2992 = load i64, i64* %PC.i933
  %2993 = add i64 %2992, 6
  store i64 %2993, i64* %PC.i933
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2995 = load i8, i8* %2994, align 1
  %2996 = icmp ne i8 %2995, 0
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2998 = load i8, i8* %2997, align 1
  %2999 = icmp ne i8 %2998, 0
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3001 = load i8, i8* %3000, align 1
  %3002 = icmp ne i8 %3001, 0
  %3003 = xor i1 %2999, %3002
  %3004 = or i1 %2996, %3003
  %3005 = zext i1 %3004 to i8
  store i8 %3005, i8* %BRANCH_TAKEN, align 1
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3007 = select i1 %3004, i64 %2989, i64 %2991
  store i64 %3007, i64* %3006, align 8
  store %struct.Memory* %loadMem_46cf61, %struct.Memory** %MEMORY
  %loadBr_46cf61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cf61 = icmp eq i8 %loadBr_46cf61, 1
  br i1 %cmpBr_46cf61, label %block_.L_46cf7c, label %block_46cf67

block_46cf67:                                     ; preds = %block_46cf50
  %loadMem_46cf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 33
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %3010 to i64*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 1
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %3013 to i64*
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 15
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %3016 to i64*
  %3017 = load i64, i64* %RBP.i932
  %3018 = sub i64 %3017, 24
  %3019 = load i64, i64* %PC.i930
  %3020 = add i64 %3019, 4
  store i64 %3020, i64* %PC.i930
  %3021 = inttoptr i64 %3018 to i32*
  %3022 = load i32, i32* %3021
  %3023 = sext i32 %3022 to i64
  store i64 %3023, i64* %RAX.i931, align 8
  store %struct.Memory* %loadMem_46cf67, %struct.Memory** %MEMORY
  %loadMem_46cf6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3025 = getelementptr inbounds %struct.GPR, %struct.GPR* %3024, i32 0, i32 33
  %3026 = getelementptr inbounds %struct.Reg, %struct.Reg* %3025, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %3026 to i64*
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3028 = getelementptr inbounds %struct.GPR, %struct.GPR* %3027, i32 0, i32 1
  %3029 = getelementptr inbounds %struct.Reg, %struct.Reg* %3028, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %3029 to i64*
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 5
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %RCX.i928 = bitcast %union.anon* %3032 to i64*
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 15
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %3035 to i64*
  %3036 = load i64, i64* %RBP.i929
  %3037 = load i64, i64* %RAX.i927
  %3038 = mul i64 %3037, 4
  %3039 = add i64 %3036, -1632
  %3040 = add i64 %3039, %3038
  %3041 = load i64, i64* %PC.i926
  %3042 = add i64 %3041, 7
  store i64 %3042, i64* %PC.i926
  %3043 = inttoptr i64 %3040 to i32*
  %3044 = load i32, i32* %3043
  %3045 = zext i32 %3044 to i64
  store i64 %3045, i64* %RCX.i928, align 8
  store %struct.Memory* %loadMem_46cf6b, %struct.Memory** %MEMORY
  %loadMem_46cf72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 5
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RCX.i925 = bitcast %union.anon* %3051 to i64*
  %3052 = load i64, i64* %RCX.i925
  %3053 = load i64, i64* %PC.i924
  %3054 = add i64 %3053, 3
  store i64 %3054, i64* %PC.i924
  %3055 = trunc i64 %3052 to i32
  %3056 = add i32 1, %3055
  %3057 = zext i32 %3056 to i64
  store i64 %3057, i64* %RCX.i925, align 8
  %3058 = icmp ult i32 %3056, %3055
  %3059 = icmp ult i32 %3056, 1
  %3060 = or i1 %3058, %3059
  %3061 = zext i1 %3060 to i8
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3061, i8* %3062, align 1
  %3063 = and i32 %3056, 255
  %3064 = call i32 @llvm.ctpop.i32(i32 %3063)
  %3065 = trunc i32 %3064 to i8
  %3066 = and i8 %3065, 1
  %3067 = xor i8 %3066, 1
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3067, i8* %3068, align 1
  %3069 = xor i64 1, %3052
  %3070 = trunc i64 %3069 to i32
  %3071 = xor i32 %3070, %3056
  %3072 = lshr i32 %3071, 4
  %3073 = trunc i32 %3072 to i8
  %3074 = and i8 %3073, 1
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3074, i8* %3075, align 1
  %3076 = icmp eq i32 %3056, 0
  %3077 = zext i1 %3076 to i8
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3077, i8* %3078, align 1
  %3079 = lshr i32 %3056, 31
  %3080 = trunc i32 %3079 to i8
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3080, i8* %3081, align 1
  %3082 = lshr i32 %3055, 31
  %3083 = xor i32 %3079, %3082
  %3084 = add i32 %3083, %3079
  %3085 = icmp eq i32 %3084, 2
  %3086 = zext i1 %3085 to i8
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3086, i8* %3087, align 1
  store %struct.Memory* %loadMem_46cf72, %struct.Memory** %MEMORY
  %loadMem_46cf75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 33
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %3090 to i64*
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 5
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %ECX.i921 = bitcast %union.anon* %3093 to i32*
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 1
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %3096 to i64*
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3098 = getelementptr inbounds %struct.GPR, %struct.GPR* %3097, i32 0, i32 15
  %3099 = getelementptr inbounds %struct.Reg, %struct.Reg* %3098, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %3099 to i64*
  %3100 = load i64, i64* %RBP.i923
  %3101 = load i64, i64* %RAX.i922
  %3102 = mul i64 %3101, 4
  %3103 = add i64 %3100, -1632
  %3104 = add i64 %3103, %3102
  %3105 = load i32, i32* %ECX.i921
  %3106 = zext i32 %3105 to i64
  %3107 = load i64, i64* %PC.i920
  %3108 = add i64 %3107, 7
  store i64 %3108, i64* %PC.i920
  %3109 = inttoptr i64 %3104 to i32*
  store i32 %3105, i32* %3109
  store %struct.Memory* %loadMem_46cf75, %struct.Memory** %MEMORY
  br label %block_.L_46cf7c

block_.L_46cf7c:                                  ; preds = %block_46cf67, %block_46cf50, %block_.L_46cf36
  %loadMem_46cf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 33
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %3112 to i64*
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 1
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %3115 to i64*
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 15
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %3118 to i64*
  %3119 = load i64, i64* %RBP.i919
  %3120 = sub i64 %3119, 24
  %3121 = load i64, i64* %PC.i917
  %3122 = add i64 %3121, 3
  store i64 %3122, i64* %PC.i917
  %3123 = inttoptr i64 %3120 to i32*
  %3124 = load i32, i32* %3123
  %3125 = zext i32 %3124 to i64
  store i64 %3125, i64* %RAX.i918, align 8
  store %struct.Memory* %loadMem_46cf7c, %struct.Memory** %MEMORY
  %loadMem_46cf7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 33
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %3128 to i64*
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3130 = getelementptr inbounds %struct.GPR, %struct.GPR* %3129, i32 0, i32 1
  %3131 = getelementptr inbounds %struct.Reg, %struct.Reg* %3130, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %3131 to i64*
  %3132 = load i64, i64* %RAX.i916
  %3133 = load i64, i64* %PC.i915
  %3134 = add i64 %3133, 3
  store i64 %3134, i64* %PC.i915
  %3135 = trunc i64 %3132 to i32
  %3136 = sub i32 %3135, 1
  %3137 = zext i32 %3136 to i64
  store i64 %3137, i64* %RAX.i916, align 8
  %3138 = icmp ult i32 %3135, 1
  %3139 = zext i1 %3138 to i8
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3139, i8* %3140, align 1
  %3141 = and i32 %3136, 255
  %3142 = call i32 @llvm.ctpop.i32(i32 %3141)
  %3143 = trunc i32 %3142 to i8
  %3144 = and i8 %3143, 1
  %3145 = xor i8 %3144, 1
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3145, i8* %3146, align 1
  %3147 = xor i64 1, %3132
  %3148 = trunc i64 %3147 to i32
  %3149 = xor i32 %3148, %3136
  %3150 = lshr i32 %3149, 4
  %3151 = trunc i32 %3150 to i8
  %3152 = and i8 %3151, 1
  %3153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3152, i8* %3153, align 1
  %3154 = icmp eq i32 %3136, 0
  %3155 = zext i1 %3154 to i8
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3155, i8* %3156, align 1
  %3157 = lshr i32 %3136, 31
  %3158 = trunc i32 %3157 to i8
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3158, i8* %3159, align 1
  %3160 = lshr i32 %3135, 31
  %3161 = xor i32 %3157, %3160
  %3162 = add i32 %3161, %3160
  %3163 = icmp eq i32 %3162, 2
  %3164 = zext i1 %3163 to i8
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3164, i8* %3165, align 1
  store %struct.Memory* %loadMem_46cf7f, %struct.Memory** %MEMORY
  %loadMem_46cf82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 1
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %EAX.i913 = bitcast %union.anon* %3171 to i32*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 5
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %3174 to i64*
  %3175 = load i32, i32* %EAX.i913
  %3176 = zext i32 %3175 to i64
  %3177 = load i64, i64* %PC.i912
  %3178 = add i64 %3177, 3
  store i64 %3178, i64* %PC.i912
  %3179 = shl i64 %3176, 32
  %3180 = ashr exact i64 %3179, 32
  store i64 %3180, i64* %RCX.i914, align 8
  store %struct.Memory* %loadMem_46cf82, %struct.Memory** %MEMORY
  %loadMem_46cf85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3182 = getelementptr inbounds %struct.GPR, %struct.GPR* %3181, i32 0, i32 33
  %3183 = getelementptr inbounds %struct.Reg, %struct.Reg* %3182, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %3183 to i64*
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3185 = getelementptr inbounds %struct.GPR, %struct.GPR* %3184, i32 0, i32 1
  %3186 = getelementptr inbounds %struct.Reg, %struct.Reg* %3185, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %3186 to i64*
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3188 = getelementptr inbounds %struct.GPR, %struct.GPR* %3187, i32 0, i32 5
  %3189 = getelementptr inbounds %struct.Reg, %struct.Reg* %3188, i32 0, i32 0
  %RCX.i911 = bitcast %union.anon* %3189 to i64*
  %3190 = load i64, i64* %RCX.i911
  %3191 = add i64 %3190, 12099168
  %3192 = load i64, i64* %PC.i909
  %3193 = add i64 %3192, 8
  store i64 %3193, i64* %PC.i909
  %3194 = inttoptr i64 %3191 to i8*
  %3195 = load i8, i8* %3194
  %3196 = zext i8 %3195 to i64
  store i64 %3196, i64* %RAX.i910, align 8
  store %struct.Memory* %loadMem_46cf85, %struct.Memory** %MEMORY
  %loadMem_46cf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3198 = getelementptr inbounds %struct.GPR, %struct.GPR* %3197, i32 0, i32 33
  %3199 = getelementptr inbounds %struct.Reg, %struct.Reg* %3198, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %3199 to i64*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 1
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %EAX.i908 = bitcast %union.anon* %3202 to i32*
  %3203 = load i32, i32* %EAX.i908
  %3204 = zext i32 %3203 to i64
  %3205 = load i64, i64* %PC.i907
  %3206 = add i64 %3205, 3
  store i64 %3206, i64* %PC.i907
  %3207 = sub i32 %3203, 3
  %3208 = icmp ult i32 %3203, 3
  %3209 = zext i1 %3208 to i8
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3209, i8* %3210, align 1
  %3211 = and i32 %3207, 255
  %3212 = call i32 @llvm.ctpop.i32(i32 %3211)
  %3213 = trunc i32 %3212 to i8
  %3214 = and i8 %3213, 1
  %3215 = xor i8 %3214, 1
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3215, i8* %3216, align 1
  %3217 = xor i64 3, %3204
  %3218 = trunc i64 %3217 to i32
  %3219 = xor i32 %3218, %3207
  %3220 = lshr i32 %3219, 4
  %3221 = trunc i32 %3220 to i8
  %3222 = and i8 %3221, 1
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3222, i8* %3223, align 1
  %3224 = icmp eq i32 %3207, 0
  %3225 = zext i1 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3225, i8* %3226, align 1
  %3227 = lshr i32 %3207, 31
  %3228 = trunc i32 %3227 to i8
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3228, i8* %3229, align 1
  %3230 = lshr i32 %3203, 31
  %3231 = xor i32 %3227, %3230
  %3232 = add i32 %3231, %3230
  %3233 = icmp eq i32 %3232, 2
  %3234 = zext i1 %3233 to i8
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3234, i8* %3235, align 1
  store %struct.Memory* %loadMem_46cf8d, %struct.Memory** %MEMORY
  %loadMem_46cf90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3237 = getelementptr inbounds %struct.GPR, %struct.GPR* %3236, i32 0, i32 33
  %3238 = getelementptr inbounds %struct.Reg, %struct.Reg* %3237, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %3238 to i64*
  %3239 = load i64, i64* %PC.i906
  %3240 = add i64 %3239, 50
  %3241 = load i64, i64* %PC.i906
  %3242 = add i64 %3241, 6
  %3243 = load i64, i64* %PC.i906
  %3244 = add i64 %3243, 6
  store i64 %3244, i64* %PC.i906
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3246 = load i8, i8* %3245, align 1
  store i8 %3246, i8* %BRANCH_TAKEN, align 1
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3248 = icmp ne i8 %3246, 0
  %3249 = select i1 %3248, i64 %3240, i64 %3242
  store i64 %3249, i64* %3247, align 8
  store %struct.Memory* %loadMem_46cf90, %struct.Memory** %MEMORY
  %loadBr_46cf90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cf90 = icmp eq i8 %loadBr_46cf90, 1
  br i1 %cmpBr_46cf90, label %block_.L_46cfc2, label %block_46cf96

block_46cf96:                                     ; preds = %block_.L_46cf7c
  %loadMem_46cf96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3251 = getelementptr inbounds %struct.GPR, %struct.GPR* %3250, i32 0, i32 33
  %3252 = getelementptr inbounds %struct.Reg, %struct.Reg* %3251, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %3252 to i64*
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3254 = getelementptr inbounds %struct.GPR, %struct.GPR* %3253, i32 0, i32 1
  %3255 = getelementptr inbounds %struct.Reg, %struct.Reg* %3254, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %3255 to i64*
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 15
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %3258 to i64*
  %3259 = load i64, i64* %RBP.i905
  %3260 = sub i64 %3259, 16
  %3261 = load i64, i64* %PC.i903
  %3262 = add i64 %3261, 4
  store i64 %3262, i64* %PC.i903
  %3263 = inttoptr i64 %3260 to i64*
  %3264 = load i64, i64* %3263
  store i64 %3264, i64* %RAX.i904, align 8
  store %struct.Memory* %loadMem_46cf96, %struct.Memory** %MEMORY
  %loadMem_46cf9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 33
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %3267 to i64*
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3269 = getelementptr inbounds %struct.GPR, %struct.GPR* %3268, i32 0, i32 5
  %3270 = getelementptr inbounds %struct.Reg, %struct.Reg* %3269, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %3270 to i64*
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 15
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %3273 to i64*
  %3274 = load i64, i64* %RBP.i902
  %3275 = sub i64 %3274, 24
  %3276 = load i64, i64* %PC.i900
  %3277 = add i64 %3276, 3
  store i64 %3277, i64* %PC.i900
  %3278 = inttoptr i64 %3275 to i32*
  %3279 = load i32, i32* %3278
  %3280 = zext i32 %3279 to i64
  store i64 %3280, i64* %RCX.i901, align 8
  store %struct.Memory* %loadMem_46cf9a, %struct.Memory** %MEMORY
  %loadMem_46cf9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3282 = getelementptr inbounds %struct.GPR, %struct.GPR* %3281, i32 0, i32 33
  %3283 = getelementptr inbounds %struct.Reg, %struct.Reg* %3282, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %3283 to i64*
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3285 = getelementptr inbounds %struct.GPR, %struct.GPR* %3284, i32 0, i32 5
  %3286 = getelementptr inbounds %struct.Reg, %struct.Reg* %3285, i32 0, i32 0
  %RCX.i899 = bitcast %union.anon* %3286 to i64*
  %3287 = load i64, i64* %RCX.i899
  %3288 = load i64, i64* %PC.i898
  %3289 = add i64 %3288, 3
  store i64 %3289, i64* %PC.i898
  %3290 = trunc i64 %3287 to i32
  %3291 = sub i32 %3290, 1
  %3292 = zext i32 %3291 to i64
  store i64 %3292, i64* %RCX.i899, align 8
  %3293 = icmp ult i32 %3290, 1
  %3294 = zext i1 %3293 to i8
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3294, i8* %3295, align 1
  %3296 = and i32 %3291, 255
  %3297 = call i32 @llvm.ctpop.i32(i32 %3296)
  %3298 = trunc i32 %3297 to i8
  %3299 = and i8 %3298, 1
  %3300 = xor i8 %3299, 1
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3300, i8* %3301, align 1
  %3302 = xor i64 1, %3287
  %3303 = trunc i64 %3302 to i32
  %3304 = xor i32 %3303, %3291
  %3305 = lshr i32 %3304, 4
  %3306 = trunc i32 %3305 to i8
  %3307 = and i8 %3306, 1
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3307, i8* %3308, align 1
  %3309 = icmp eq i32 %3291, 0
  %3310 = zext i1 %3309 to i8
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3310, i8* %3311, align 1
  %3312 = lshr i32 %3291, 31
  %3313 = trunc i32 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3313, i8* %3314, align 1
  %3315 = lshr i32 %3290, 31
  %3316 = xor i32 %3312, %3315
  %3317 = add i32 %3316, %3315
  %3318 = icmp eq i32 %3317, 2
  %3319 = zext i1 %3318 to i8
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3319, i8* %3320, align 1
  store %struct.Memory* %loadMem_46cf9d, %struct.Memory** %MEMORY
  %loadMem_46cfa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 33
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %3323 to i64*
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 5
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %ECX.i896 = bitcast %union.anon* %3326 to i32*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 7
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %RDX.i897 = bitcast %union.anon* %3329 to i64*
  %3330 = load i32, i32* %ECX.i896
  %3331 = zext i32 %3330 to i64
  %3332 = load i64, i64* %PC.i895
  %3333 = add i64 %3332, 3
  store i64 %3333, i64* %PC.i895
  %3334 = shl i64 %3331, 32
  %3335 = ashr exact i64 %3334, 32
  store i64 %3335, i64* %RDX.i897, align 8
  store %struct.Memory* %loadMem_46cfa0, %struct.Memory** %MEMORY
  %loadMem_46cfa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 33
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 1
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 7
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RDX.i894 = bitcast %union.anon* %3344 to i64*
  %3345 = load i64, i64* %RAX.i893
  %3346 = load i64, i64* %RDX.i894
  %3347 = mul i64 %3346, 4
  %3348 = add i64 %3347, %3345
  %3349 = load i64, i64* %PC.i892
  %3350 = add i64 %3349, 4
  store i64 %3350, i64* %PC.i892
  %3351 = inttoptr i64 %3348 to i32*
  %3352 = load i32, i32* %3351
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3353, align 1
  %3354 = and i32 %3352, 255
  %3355 = call i32 @llvm.ctpop.i32(i32 %3354)
  %3356 = trunc i32 %3355 to i8
  %3357 = and i8 %3356, 1
  %3358 = xor i8 %3357, 1
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3358, i8* %3359, align 1
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3360, align 1
  %3361 = icmp eq i32 %3352, 0
  %3362 = zext i1 %3361 to i8
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3362, i8* %3363, align 1
  %3364 = lshr i32 %3352, 31
  %3365 = trunc i32 %3364 to i8
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3365, i8* %3366, align 1
  %3367 = lshr i32 %3352, 31
  %3368 = xor i32 %3364, %3367
  %3369 = add i32 %3368, %3367
  %3370 = icmp eq i32 %3369, 2
  %3371 = zext i1 %3370 to i8
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3371, i8* %3372, align 1
  store %struct.Memory* %loadMem_46cfa3, %struct.Memory** %MEMORY
  %loadMem_46cfa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 33
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %3375 to i64*
  %3376 = load i64, i64* %PC.i891
  %3377 = add i64 %3376, 27
  %3378 = load i64, i64* %PC.i891
  %3379 = add i64 %3378, 6
  %3380 = load i64, i64* %PC.i891
  %3381 = add i64 %3380, 6
  store i64 %3381, i64* %PC.i891
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3383 = load i8, i8* %3382, align 1
  %3384 = icmp ne i8 %3383, 0
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3386 = load i8, i8* %3385, align 1
  %3387 = icmp ne i8 %3386, 0
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3389 = load i8, i8* %3388, align 1
  %3390 = icmp ne i8 %3389, 0
  %3391 = xor i1 %3387, %3390
  %3392 = or i1 %3384, %3391
  %3393 = zext i1 %3392 to i8
  store i8 %3393, i8* %BRANCH_TAKEN, align 1
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3395 = select i1 %3392, i64 %3377, i64 %3379
  store i64 %3395, i64* %3394, align 8
  store %struct.Memory* %loadMem_46cfa7, %struct.Memory** %MEMORY
  %loadBr_46cfa7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cfa7 = icmp eq i8 %loadBr_46cfa7, 1
  br i1 %cmpBr_46cfa7, label %block_.L_46cfc2, label %block_46cfad

block_46cfad:                                     ; preds = %block_46cf96
  %loadMem_46cfad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 33
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %3398 to i64*
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3400 = getelementptr inbounds %struct.GPR, %struct.GPR* %3399, i32 0, i32 1
  %3401 = getelementptr inbounds %struct.Reg, %struct.Reg* %3400, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %3401 to i64*
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3403 = getelementptr inbounds %struct.GPR, %struct.GPR* %3402, i32 0, i32 15
  %3404 = getelementptr inbounds %struct.Reg, %struct.Reg* %3403, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %3404 to i64*
  %3405 = load i64, i64* %RBP.i890
  %3406 = sub i64 %3405, 24
  %3407 = load i64, i64* %PC.i888
  %3408 = add i64 %3407, 4
  store i64 %3408, i64* %PC.i888
  %3409 = inttoptr i64 %3406 to i32*
  %3410 = load i32, i32* %3409
  %3411 = sext i32 %3410 to i64
  store i64 %3411, i64* %RAX.i889, align 8
  store %struct.Memory* %loadMem_46cfad, %struct.Memory** %MEMORY
  %loadMem_46cfb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 33
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %3414 to i64*
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3416 = getelementptr inbounds %struct.GPR, %struct.GPR* %3415, i32 0, i32 1
  %3417 = getelementptr inbounds %struct.Reg, %struct.Reg* %3416, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %3417 to i64*
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 5
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %RCX.i886 = bitcast %union.anon* %3420 to i64*
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 15
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %3423 to i64*
  %3424 = load i64, i64* %RBP.i887
  %3425 = load i64, i64* %RAX.i885
  %3426 = mul i64 %3425, 4
  %3427 = add i64 %3424, -1632
  %3428 = add i64 %3427, %3426
  %3429 = load i64, i64* %PC.i884
  %3430 = add i64 %3429, 7
  store i64 %3430, i64* %PC.i884
  %3431 = inttoptr i64 %3428 to i32*
  %3432 = load i32, i32* %3431
  %3433 = zext i32 %3432 to i64
  store i64 %3433, i64* %RCX.i886, align 8
  store %struct.Memory* %loadMem_46cfb1, %struct.Memory** %MEMORY
  %loadMem_46cfb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3435 = getelementptr inbounds %struct.GPR, %struct.GPR* %3434, i32 0, i32 33
  %3436 = getelementptr inbounds %struct.Reg, %struct.Reg* %3435, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %3436 to i64*
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 5
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %RCX.i883 = bitcast %union.anon* %3439 to i64*
  %3440 = load i64, i64* %RCX.i883
  %3441 = load i64, i64* %PC.i882
  %3442 = add i64 %3441, 3
  store i64 %3442, i64* %PC.i882
  %3443 = trunc i64 %3440 to i32
  %3444 = add i32 1, %3443
  %3445 = zext i32 %3444 to i64
  store i64 %3445, i64* %RCX.i883, align 8
  %3446 = icmp ult i32 %3444, %3443
  %3447 = icmp ult i32 %3444, 1
  %3448 = or i1 %3446, %3447
  %3449 = zext i1 %3448 to i8
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3449, i8* %3450, align 1
  %3451 = and i32 %3444, 255
  %3452 = call i32 @llvm.ctpop.i32(i32 %3451)
  %3453 = trunc i32 %3452 to i8
  %3454 = and i8 %3453, 1
  %3455 = xor i8 %3454, 1
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3455, i8* %3456, align 1
  %3457 = xor i64 1, %3440
  %3458 = trunc i64 %3457 to i32
  %3459 = xor i32 %3458, %3444
  %3460 = lshr i32 %3459, 4
  %3461 = trunc i32 %3460 to i8
  %3462 = and i8 %3461, 1
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3462, i8* %3463, align 1
  %3464 = icmp eq i32 %3444, 0
  %3465 = zext i1 %3464 to i8
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3465, i8* %3466, align 1
  %3467 = lshr i32 %3444, 31
  %3468 = trunc i32 %3467 to i8
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3468, i8* %3469, align 1
  %3470 = lshr i32 %3443, 31
  %3471 = xor i32 %3467, %3470
  %3472 = add i32 %3471, %3467
  %3473 = icmp eq i32 %3472, 2
  %3474 = zext i1 %3473 to i8
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3474, i8* %3475, align 1
  store %struct.Memory* %loadMem_46cfb8, %struct.Memory** %MEMORY
  %loadMem_46cfbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 33
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 5
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %ECX.i879 = bitcast %union.anon* %3481 to i32*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 1
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %RAX.i880 = bitcast %union.anon* %3484 to i64*
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3486 = getelementptr inbounds %struct.GPR, %struct.GPR* %3485, i32 0, i32 15
  %3487 = getelementptr inbounds %struct.Reg, %struct.Reg* %3486, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %3487 to i64*
  %3488 = load i64, i64* %RBP.i881
  %3489 = load i64, i64* %RAX.i880
  %3490 = mul i64 %3489, 4
  %3491 = add i64 %3488, -1632
  %3492 = add i64 %3491, %3490
  %3493 = load i32, i32* %ECX.i879
  %3494 = zext i32 %3493 to i64
  %3495 = load i64, i64* %PC.i878
  %3496 = add i64 %3495, 7
  store i64 %3496, i64* %PC.i878
  %3497 = inttoptr i64 %3492 to i32*
  store i32 %3493, i32* %3497
  store %struct.Memory* %loadMem_46cfbb, %struct.Memory** %MEMORY
  br label %block_.L_46cfc2

block_.L_46cfc2:                                  ; preds = %block_46cfad, %block_46cf96, %block_.L_46cf7c
  %loadMem_46cfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 33
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 1
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %3503 to i64*
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3505 = getelementptr inbounds %struct.GPR, %struct.GPR* %3504, i32 0, i32 15
  %3506 = getelementptr inbounds %struct.Reg, %struct.Reg* %3505, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %3506 to i64*
  %3507 = load i64, i64* %RBP.i877
  %3508 = sub i64 %3507, 24
  %3509 = load i64, i64* %PC.i875
  %3510 = add i64 %3509, 3
  store i64 %3510, i64* %PC.i875
  %3511 = inttoptr i64 %3508 to i32*
  %3512 = load i32, i32* %3511
  %3513 = zext i32 %3512 to i64
  store i64 %3513, i64* %RAX.i876, align 8
  store %struct.Memory* %loadMem_46cfc2, %struct.Memory** %MEMORY
  %loadMem_46cfc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 33
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %3516 to i64*
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 1
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %RAX.i874 = bitcast %union.anon* %3519 to i64*
  %3520 = load i64, i64* %RAX.i874
  %3521 = load i64, i64* %PC.i873
  %3522 = add i64 %3521, 3
  store i64 %3522, i64* %PC.i873
  %3523 = trunc i64 %3520 to i32
  %3524 = sub i32 %3523, 20
  %3525 = zext i32 %3524 to i64
  store i64 %3525, i64* %RAX.i874, align 8
  %3526 = icmp ult i32 %3523, 20
  %3527 = zext i1 %3526 to i8
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3527, i8* %3528, align 1
  %3529 = and i32 %3524, 255
  %3530 = call i32 @llvm.ctpop.i32(i32 %3529)
  %3531 = trunc i32 %3530 to i8
  %3532 = and i8 %3531, 1
  %3533 = xor i8 %3532, 1
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3533, i8* %3534, align 1
  %3535 = xor i64 20, %3520
  %3536 = trunc i64 %3535 to i32
  %3537 = xor i32 %3536, %3524
  %3538 = lshr i32 %3537, 4
  %3539 = trunc i32 %3538 to i8
  %3540 = and i8 %3539, 1
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3540, i8* %3541, align 1
  %3542 = icmp eq i32 %3524, 0
  %3543 = zext i1 %3542 to i8
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3543, i8* %3544, align 1
  %3545 = lshr i32 %3524, 31
  %3546 = trunc i32 %3545 to i8
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3546, i8* %3547, align 1
  %3548 = lshr i32 %3523, 31
  %3549 = xor i32 %3545, %3548
  %3550 = add i32 %3549, %3548
  %3551 = icmp eq i32 %3550, 2
  %3552 = zext i1 %3551 to i8
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3552, i8* %3553, align 1
  store %struct.Memory* %loadMem_46cfc5, %struct.Memory** %MEMORY
  %loadMem_46cfc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 33
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %3556 to i64*
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 1
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %EAX.i871 = bitcast %union.anon* %3559 to i32*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 5
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %3562 to i64*
  %3563 = load i32, i32* %EAX.i871
  %3564 = zext i32 %3563 to i64
  %3565 = load i64, i64* %PC.i870
  %3566 = add i64 %3565, 3
  store i64 %3566, i64* %PC.i870
  %3567 = shl i64 %3564, 32
  %3568 = ashr exact i64 %3567, 32
  store i64 %3568, i64* %RCX.i872, align 8
  store %struct.Memory* %loadMem_46cfc8, %struct.Memory** %MEMORY
  %loadMem_46cfcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 33
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %3571 to i64*
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3573 = getelementptr inbounds %struct.GPR, %struct.GPR* %3572, i32 0, i32 1
  %3574 = getelementptr inbounds %struct.Reg, %struct.Reg* %3573, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %3574 to i64*
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 5
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %RCX.i869 = bitcast %union.anon* %3577 to i64*
  %3578 = load i64, i64* %RCX.i869
  %3579 = add i64 %3578, 12099168
  %3580 = load i64, i64* %PC.i867
  %3581 = add i64 %3580, 8
  store i64 %3581, i64* %PC.i867
  %3582 = inttoptr i64 %3579 to i8*
  %3583 = load i8, i8* %3582
  %3584 = zext i8 %3583 to i64
  store i64 %3584, i64* %RAX.i868, align 8
  store %struct.Memory* %loadMem_46cfcb, %struct.Memory** %MEMORY
  %loadMem_46cfd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 33
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3587 to i64*
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 1
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %EAX.i866 = bitcast %union.anon* %3590 to i32*
  %3591 = load i32, i32* %EAX.i866
  %3592 = zext i32 %3591 to i64
  %3593 = load i64, i64* %PC.i865
  %3594 = add i64 %3593, 3
  store i64 %3594, i64* %PC.i865
  %3595 = sub i32 %3591, 3
  %3596 = icmp ult i32 %3591, 3
  %3597 = zext i1 %3596 to i8
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3597, i8* %3598, align 1
  %3599 = and i32 %3595, 255
  %3600 = call i32 @llvm.ctpop.i32(i32 %3599)
  %3601 = trunc i32 %3600 to i8
  %3602 = and i8 %3601, 1
  %3603 = xor i8 %3602, 1
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3603, i8* %3604, align 1
  %3605 = xor i64 3, %3592
  %3606 = trunc i64 %3605 to i32
  %3607 = xor i32 %3606, %3595
  %3608 = lshr i32 %3607, 4
  %3609 = trunc i32 %3608 to i8
  %3610 = and i8 %3609, 1
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3610, i8* %3611, align 1
  %3612 = icmp eq i32 %3595, 0
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3613, i8* %3614, align 1
  %3615 = lshr i32 %3595, 31
  %3616 = trunc i32 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3616, i8* %3617, align 1
  %3618 = lshr i32 %3591, 31
  %3619 = xor i32 %3615, %3618
  %3620 = add i32 %3619, %3618
  %3621 = icmp eq i32 %3620, 2
  %3622 = zext i1 %3621 to i8
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3622, i8* %3623, align 1
  store %struct.Memory* %loadMem_46cfd3, %struct.Memory** %MEMORY
  %loadMem_46cfd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 33
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %3626 to i64*
  %3627 = load i64, i64* %PC.i864
  %3628 = add i64 %3627, 50
  %3629 = load i64, i64* %PC.i864
  %3630 = add i64 %3629, 6
  %3631 = load i64, i64* %PC.i864
  %3632 = add i64 %3631, 6
  store i64 %3632, i64* %PC.i864
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3634 = load i8, i8* %3633, align 1
  store i8 %3634, i8* %BRANCH_TAKEN, align 1
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3636 = icmp ne i8 %3634, 0
  %3637 = select i1 %3636, i64 %3628, i64 %3630
  store i64 %3637, i64* %3635, align 8
  store %struct.Memory* %loadMem_46cfd6, %struct.Memory** %MEMORY
  %loadBr_46cfd6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cfd6 = icmp eq i8 %loadBr_46cfd6, 1
  br i1 %cmpBr_46cfd6, label %block_.L_46d008, label %block_46cfdc

block_46cfdc:                                     ; preds = %block_.L_46cfc2
  %loadMem_46cfdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 33
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %3640 to i64*
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 1
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %3643 to i64*
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 15
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %3646 to i64*
  %3647 = load i64, i64* %RBP.i863
  %3648 = sub i64 %3647, 16
  %3649 = load i64, i64* %PC.i861
  %3650 = add i64 %3649, 4
  store i64 %3650, i64* %PC.i861
  %3651 = inttoptr i64 %3648 to i64*
  %3652 = load i64, i64* %3651
  store i64 %3652, i64* %RAX.i862, align 8
  store %struct.Memory* %loadMem_46cfdc, %struct.Memory** %MEMORY
  %loadMem_46cfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 33
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %3655 to i64*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 5
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %3658 to i64*
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3660 = getelementptr inbounds %struct.GPR, %struct.GPR* %3659, i32 0, i32 15
  %3661 = getelementptr inbounds %struct.Reg, %struct.Reg* %3660, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %3661 to i64*
  %3662 = load i64, i64* %RBP.i860
  %3663 = sub i64 %3662, 24
  %3664 = load i64, i64* %PC.i858
  %3665 = add i64 %3664, 3
  store i64 %3665, i64* %PC.i858
  %3666 = inttoptr i64 %3663 to i32*
  %3667 = load i32, i32* %3666
  %3668 = zext i32 %3667 to i64
  store i64 %3668, i64* %RCX.i859, align 8
  store %struct.Memory* %loadMem_46cfe0, %struct.Memory** %MEMORY
  %loadMem_46cfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 33
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %3671 to i64*
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 5
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %3674 to i64*
  %3675 = load i64, i64* %RCX.i857
  %3676 = load i64, i64* %PC.i856
  %3677 = add i64 %3676, 3
  store i64 %3677, i64* %PC.i856
  %3678 = trunc i64 %3675 to i32
  %3679 = sub i32 %3678, 20
  %3680 = zext i32 %3679 to i64
  store i64 %3680, i64* %RCX.i857, align 8
  %3681 = icmp ult i32 %3678, 20
  %3682 = zext i1 %3681 to i8
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3682, i8* %3683, align 1
  %3684 = and i32 %3679, 255
  %3685 = call i32 @llvm.ctpop.i32(i32 %3684)
  %3686 = trunc i32 %3685 to i8
  %3687 = and i8 %3686, 1
  %3688 = xor i8 %3687, 1
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3688, i8* %3689, align 1
  %3690 = xor i64 20, %3675
  %3691 = trunc i64 %3690 to i32
  %3692 = xor i32 %3691, %3679
  %3693 = lshr i32 %3692, 4
  %3694 = trunc i32 %3693 to i8
  %3695 = and i8 %3694, 1
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3695, i8* %3696, align 1
  %3697 = icmp eq i32 %3679, 0
  %3698 = zext i1 %3697 to i8
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3698, i8* %3699, align 1
  %3700 = lshr i32 %3679, 31
  %3701 = trunc i32 %3700 to i8
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3701, i8* %3702, align 1
  %3703 = lshr i32 %3678, 31
  %3704 = xor i32 %3700, %3703
  %3705 = add i32 %3704, %3703
  %3706 = icmp eq i32 %3705, 2
  %3707 = zext i1 %3706 to i8
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3707, i8* %3708, align 1
  store %struct.Memory* %loadMem_46cfe3, %struct.Memory** %MEMORY
  %loadMem_46cfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 33
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3711 to i64*
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 5
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %ECX.i854 = bitcast %union.anon* %3714 to i32*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 7
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %RDX.i855 = bitcast %union.anon* %3717 to i64*
  %3718 = load i32, i32* %ECX.i854
  %3719 = zext i32 %3718 to i64
  %3720 = load i64, i64* %PC.i853
  %3721 = add i64 %3720, 3
  store i64 %3721, i64* %PC.i853
  %3722 = shl i64 %3719, 32
  %3723 = ashr exact i64 %3722, 32
  store i64 %3723, i64* %RDX.i855, align 8
  store %struct.Memory* %loadMem_46cfe6, %struct.Memory** %MEMORY
  %loadMem_46cfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 33
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %3726 to i64*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 1
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %3729 to i64*
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 7
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %RDX.i852 = bitcast %union.anon* %3732 to i64*
  %3733 = load i64, i64* %RAX.i851
  %3734 = load i64, i64* %RDX.i852
  %3735 = mul i64 %3734, 4
  %3736 = add i64 %3735, %3733
  %3737 = load i64, i64* %PC.i850
  %3738 = add i64 %3737, 4
  store i64 %3738, i64* %PC.i850
  %3739 = inttoptr i64 %3736 to i32*
  %3740 = load i32, i32* %3739
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3741, align 1
  %3742 = and i32 %3740, 255
  %3743 = call i32 @llvm.ctpop.i32(i32 %3742)
  %3744 = trunc i32 %3743 to i8
  %3745 = and i8 %3744, 1
  %3746 = xor i8 %3745, 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3746, i8* %3747, align 1
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3748, align 1
  %3749 = icmp eq i32 %3740, 0
  %3750 = zext i1 %3749 to i8
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3750, i8* %3751, align 1
  %3752 = lshr i32 %3740, 31
  %3753 = trunc i32 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3753, i8* %3754, align 1
  %3755 = lshr i32 %3740, 31
  %3756 = xor i32 %3752, %3755
  %3757 = add i32 %3756, %3755
  %3758 = icmp eq i32 %3757, 2
  %3759 = zext i1 %3758 to i8
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3759, i8* %3760, align 1
  store %struct.Memory* %loadMem_46cfe9, %struct.Memory** %MEMORY
  %loadMem_46cfed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 33
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %3763 to i64*
  %3764 = load i64, i64* %PC.i849
  %3765 = add i64 %3764, 27
  %3766 = load i64, i64* %PC.i849
  %3767 = add i64 %3766, 6
  %3768 = load i64, i64* %PC.i849
  %3769 = add i64 %3768, 6
  store i64 %3769, i64* %PC.i849
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3771 = load i8, i8* %3770, align 1
  %3772 = icmp ne i8 %3771, 0
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3774 = load i8, i8* %3773, align 1
  %3775 = icmp ne i8 %3774, 0
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3777 = load i8, i8* %3776, align 1
  %3778 = icmp ne i8 %3777, 0
  %3779 = xor i1 %3775, %3778
  %3780 = or i1 %3772, %3779
  %3781 = zext i1 %3780 to i8
  store i8 %3781, i8* %BRANCH_TAKEN, align 1
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3783 = select i1 %3780, i64 %3765, i64 %3767
  store i64 %3783, i64* %3782, align 8
  store %struct.Memory* %loadMem_46cfed, %struct.Memory** %MEMORY
  %loadBr_46cfed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46cfed = icmp eq i8 %loadBr_46cfed, 1
  br i1 %cmpBr_46cfed, label %block_.L_46d008, label %block_46cff3

block_46cff3:                                     ; preds = %block_46cfdc
  %loadMem_46cff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 33
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 1
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %3789 to i64*
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3791 = getelementptr inbounds %struct.GPR, %struct.GPR* %3790, i32 0, i32 15
  %3792 = getelementptr inbounds %struct.Reg, %struct.Reg* %3791, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %3792 to i64*
  %3793 = load i64, i64* %RBP.i848
  %3794 = sub i64 %3793, 24
  %3795 = load i64, i64* %PC.i846
  %3796 = add i64 %3795, 4
  store i64 %3796, i64* %PC.i846
  %3797 = inttoptr i64 %3794 to i32*
  %3798 = load i32, i32* %3797
  %3799 = sext i32 %3798 to i64
  store i64 %3799, i64* %RAX.i847, align 8
  store %struct.Memory* %loadMem_46cff3, %struct.Memory** %MEMORY
  %loadMem_46cff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 33
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3802 to i64*
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3804 = getelementptr inbounds %struct.GPR, %struct.GPR* %3803, i32 0, i32 1
  %3805 = getelementptr inbounds %struct.Reg, %struct.Reg* %3804, i32 0, i32 0
  %RAX.i843 = bitcast %union.anon* %3805 to i64*
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3807 = getelementptr inbounds %struct.GPR, %struct.GPR* %3806, i32 0, i32 5
  %3808 = getelementptr inbounds %struct.Reg, %struct.Reg* %3807, i32 0, i32 0
  %RCX.i844 = bitcast %union.anon* %3808 to i64*
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 15
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %3811 to i64*
  %3812 = load i64, i64* %RBP.i845
  %3813 = load i64, i64* %RAX.i843
  %3814 = mul i64 %3813, 4
  %3815 = add i64 %3812, -1632
  %3816 = add i64 %3815, %3814
  %3817 = load i64, i64* %PC.i842
  %3818 = add i64 %3817, 7
  store i64 %3818, i64* %PC.i842
  %3819 = inttoptr i64 %3816 to i32*
  %3820 = load i32, i32* %3819
  %3821 = zext i32 %3820 to i64
  store i64 %3821, i64* %RCX.i844, align 8
  store %struct.Memory* %loadMem_46cff7, %struct.Memory** %MEMORY
  %loadMem_46cffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 5
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %RCX.i841 = bitcast %union.anon* %3827 to i64*
  %3828 = load i64, i64* %RCX.i841
  %3829 = load i64, i64* %PC.i840
  %3830 = add i64 %3829, 3
  store i64 %3830, i64* %PC.i840
  %3831 = trunc i64 %3828 to i32
  %3832 = add i32 1, %3831
  %3833 = zext i32 %3832 to i64
  store i64 %3833, i64* %RCX.i841, align 8
  %3834 = icmp ult i32 %3832, %3831
  %3835 = icmp ult i32 %3832, 1
  %3836 = or i1 %3834, %3835
  %3837 = zext i1 %3836 to i8
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3837, i8* %3838, align 1
  %3839 = and i32 %3832, 255
  %3840 = call i32 @llvm.ctpop.i32(i32 %3839)
  %3841 = trunc i32 %3840 to i8
  %3842 = and i8 %3841, 1
  %3843 = xor i8 %3842, 1
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3843, i8* %3844, align 1
  %3845 = xor i64 1, %3828
  %3846 = trunc i64 %3845 to i32
  %3847 = xor i32 %3846, %3832
  %3848 = lshr i32 %3847, 4
  %3849 = trunc i32 %3848 to i8
  %3850 = and i8 %3849, 1
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3850, i8* %3851, align 1
  %3852 = icmp eq i32 %3832, 0
  %3853 = zext i1 %3852 to i8
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3853, i8* %3854, align 1
  %3855 = lshr i32 %3832, 31
  %3856 = trunc i32 %3855 to i8
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3856, i8* %3857, align 1
  %3858 = lshr i32 %3831, 31
  %3859 = xor i32 %3855, %3858
  %3860 = add i32 %3859, %3855
  %3861 = icmp eq i32 %3860, 2
  %3862 = zext i1 %3861 to i8
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3862, i8* %3863, align 1
  store %struct.Memory* %loadMem_46cffe, %struct.Memory** %MEMORY
  %loadMem_46d001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 33
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %3866 to i64*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 5
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %ECX.i837 = bitcast %union.anon* %3869 to i32*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 1
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %3872 to i64*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 15
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %3875 to i64*
  %3876 = load i64, i64* %RBP.i839
  %3877 = load i64, i64* %RAX.i838
  %3878 = mul i64 %3877, 4
  %3879 = add i64 %3876, -1632
  %3880 = add i64 %3879, %3878
  %3881 = load i32, i32* %ECX.i837
  %3882 = zext i32 %3881 to i64
  %3883 = load i64, i64* %PC.i836
  %3884 = add i64 %3883, 7
  store i64 %3884, i64* %PC.i836
  %3885 = inttoptr i64 %3880 to i32*
  store i32 %3881, i32* %3885
  store %struct.Memory* %loadMem_46d001, %struct.Memory** %MEMORY
  br label %block_.L_46d008

block_.L_46d008:                                  ; preds = %block_46cff3, %block_46cfdc, %block_.L_46cfc2
  %loadMem_46d008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 33
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3888 to i64*
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 1
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %3891 to i64*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 15
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %3894 to i64*
  %3895 = load i64, i64* %RBP.i835
  %3896 = sub i64 %3895, 24
  %3897 = load i64, i64* %PC.i833
  %3898 = add i64 %3897, 3
  store i64 %3898, i64* %PC.i833
  %3899 = inttoptr i64 %3896 to i32*
  %3900 = load i32, i32* %3899
  %3901 = zext i32 %3900 to i64
  store i64 %3901, i64* %RAX.i834, align 8
  store %struct.Memory* %loadMem_46d008, %struct.Memory** %MEMORY
  %loadMem_46d00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 33
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 1
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %3907 to i64*
  %3908 = load i64, i64* %RAX.i832
  %3909 = load i64, i64* %PC.i831
  %3910 = add i64 %3909, 3
  store i64 %3910, i64* %PC.i831
  %3911 = trunc i64 %3908 to i32
  %3912 = add i32 1, %3911
  %3913 = zext i32 %3912 to i64
  store i64 %3913, i64* %RAX.i832, align 8
  %3914 = icmp ult i32 %3912, %3911
  %3915 = icmp ult i32 %3912, 1
  %3916 = or i1 %3914, %3915
  %3917 = zext i1 %3916 to i8
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3917, i8* %3918, align 1
  %3919 = and i32 %3912, 255
  %3920 = call i32 @llvm.ctpop.i32(i32 %3919)
  %3921 = trunc i32 %3920 to i8
  %3922 = and i8 %3921, 1
  %3923 = xor i8 %3922, 1
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3923, i8* %3924, align 1
  %3925 = xor i64 1, %3908
  %3926 = trunc i64 %3925 to i32
  %3927 = xor i32 %3926, %3912
  %3928 = lshr i32 %3927, 4
  %3929 = trunc i32 %3928 to i8
  %3930 = and i8 %3929, 1
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3930, i8* %3931, align 1
  %3932 = icmp eq i32 %3912, 0
  %3933 = zext i1 %3932 to i8
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3933, i8* %3934, align 1
  %3935 = lshr i32 %3912, 31
  %3936 = trunc i32 %3935 to i8
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3936, i8* %3937, align 1
  %3938 = lshr i32 %3911, 31
  %3939 = xor i32 %3935, %3938
  %3940 = add i32 %3939, %3935
  %3941 = icmp eq i32 %3940, 2
  %3942 = zext i1 %3941 to i8
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3942, i8* %3943, align 1
  store %struct.Memory* %loadMem_46d00b, %struct.Memory** %MEMORY
  %loadMem_46d00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 33
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %3946 to i64*
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 1
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %EAX.i829 = bitcast %union.anon* %3949 to i32*
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3951 = getelementptr inbounds %struct.GPR, %struct.GPR* %3950, i32 0, i32 5
  %3952 = getelementptr inbounds %struct.Reg, %struct.Reg* %3951, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %3952 to i64*
  %3953 = load i32, i32* %EAX.i829
  %3954 = zext i32 %3953 to i64
  %3955 = load i64, i64* %PC.i828
  %3956 = add i64 %3955, 3
  store i64 %3956, i64* %PC.i828
  %3957 = shl i64 %3954, 32
  %3958 = ashr exact i64 %3957, 32
  store i64 %3958, i64* %RCX.i830, align 8
  store %struct.Memory* %loadMem_46d00e, %struct.Memory** %MEMORY
  %loadMem_46d011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %3961 to i64*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 1
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 5
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RCX.i827 = bitcast %union.anon* %3967 to i64*
  %3968 = load i64, i64* %RCX.i827
  %3969 = add i64 %3968, 12099168
  %3970 = load i64, i64* %PC.i825
  %3971 = add i64 %3970, 8
  store i64 %3971, i64* %PC.i825
  %3972 = inttoptr i64 %3969 to i8*
  %3973 = load i8, i8* %3972
  %3974 = zext i8 %3973 to i64
  store i64 %3974, i64* %RAX.i826, align 8
  store %struct.Memory* %loadMem_46d011, %struct.Memory** %MEMORY
  %loadMem_46d019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3976 = getelementptr inbounds %struct.GPR, %struct.GPR* %3975, i32 0, i32 33
  %3977 = getelementptr inbounds %struct.Reg, %struct.Reg* %3976, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %3977 to i64*
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 1
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %EAX.i824 = bitcast %union.anon* %3980 to i32*
  %3981 = load i32, i32* %EAX.i824
  %3982 = zext i32 %3981 to i64
  %3983 = load i64, i64* %PC.i823
  %3984 = add i64 %3983, 3
  store i64 %3984, i64* %PC.i823
  %3985 = sub i32 %3981, 3
  %3986 = icmp ult i32 %3981, 3
  %3987 = zext i1 %3986 to i8
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3987, i8* %3988, align 1
  %3989 = and i32 %3985, 255
  %3990 = call i32 @llvm.ctpop.i32(i32 %3989)
  %3991 = trunc i32 %3990 to i8
  %3992 = and i8 %3991, 1
  %3993 = xor i8 %3992, 1
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3993, i8* %3994, align 1
  %3995 = xor i64 3, %3982
  %3996 = trunc i64 %3995 to i32
  %3997 = xor i32 %3996, %3985
  %3998 = lshr i32 %3997, 4
  %3999 = trunc i32 %3998 to i8
  %4000 = and i8 %3999, 1
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4000, i8* %4001, align 1
  %4002 = icmp eq i32 %3985, 0
  %4003 = zext i1 %4002 to i8
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4003, i8* %4004, align 1
  %4005 = lshr i32 %3985, 31
  %4006 = trunc i32 %4005 to i8
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4006, i8* %4007, align 1
  %4008 = lshr i32 %3981, 31
  %4009 = xor i32 %4005, %4008
  %4010 = add i32 %4009, %4008
  %4011 = icmp eq i32 %4010, 2
  %4012 = zext i1 %4011 to i8
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4012, i8* %4013, align 1
  store %struct.Memory* %loadMem_46d019, %struct.Memory** %MEMORY
  %loadMem_46d01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 33
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %4016 to i64*
  %4017 = load i64, i64* %PC.i822
  %4018 = add i64 %4017, 50
  %4019 = load i64, i64* %PC.i822
  %4020 = add i64 %4019, 6
  %4021 = load i64, i64* %PC.i822
  %4022 = add i64 %4021, 6
  store i64 %4022, i64* %PC.i822
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4024 = load i8, i8* %4023, align 1
  store i8 %4024, i8* %BRANCH_TAKEN, align 1
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4026 = icmp ne i8 %4024, 0
  %4027 = select i1 %4026, i64 %4018, i64 %4020
  store i64 %4027, i64* %4025, align 8
  store %struct.Memory* %loadMem_46d01c, %struct.Memory** %MEMORY
  %loadBr_46d01c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d01c = icmp eq i8 %loadBr_46d01c, 1
  br i1 %cmpBr_46d01c, label %block_.L_46d04e, label %block_46d022

block_46d022:                                     ; preds = %block_.L_46d008
  %loadMem_46d022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 33
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %4030 to i64*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 1
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RAX.i820 = bitcast %union.anon* %4033 to i64*
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4035 = getelementptr inbounds %struct.GPR, %struct.GPR* %4034, i32 0, i32 15
  %4036 = getelementptr inbounds %struct.Reg, %struct.Reg* %4035, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %4036 to i64*
  %4037 = load i64, i64* %RBP.i821
  %4038 = sub i64 %4037, 16
  %4039 = load i64, i64* %PC.i819
  %4040 = add i64 %4039, 4
  store i64 %4040, i64* %PC.i819
  %4041 = inttoptr i64 %4038 to i64*
  %4042 = load i64, i64* %4041
  store i64 %4042, i64* %RAX.i820, align 8
  store %struct.Memory* %loadMem_46d022, %struct.Memory** %MEMORY
  %loadMem_46d026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4044 = getelementptr inbounds %struct.GPR, %struct.GPR* %4043, i32 0, i32 33
  %4045 = getelementptr inbounds %struct.Reg, %struct.Reg* %4044, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %4045 to i64*
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 5
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %4048 to i64*
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 15
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %RBP.i818 = bitcast %union.anon* %4051 to i64*
  %4052 = load i64, i64* %RBP.i818
  %4053 = sub i64 %4052, 24
  %4054 = load i64, i64* %PC.i816
  %4055 = add i64 %4054, 3
  store i64 %4055, i64* %PC.i816
  %4056 = inttoptr i64 %4053 to i32*
  %4057 = load i32, i32* %4056
  %4058 = zext i32 %4057 to i64
  store i64 %4058, i64* %RCX.i817, align 8
  store %struct.Memory* %loadMem_46d026, %struct.Memory** %MEMORY
  %loadMem_46d029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 33
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %4061 to i64*
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 5
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %4064 to i64*
  %4065 = load i64, i64* %RCX.i815
  %4066 = load i64, i64* %PC.i814
  %4067 = add i64 %4066, 3
  store i64 %4067, i64* %PC.i814
  %4068 = trunc i64 %4065 to i32
  %4069 = add i32 1, %4068
  %4070 = zext i32 %4069 to i64
  store i64 %4070, i64* %RCX.i815, align 8
  %4071 = icmp ult i32 %4069, %4068
  %4072 = icmp ult i32 %4069, 1
  %4073 = or i1 %4071, %4072
  %4074 = zext i1 %4073 to i8
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4074, i8* %4075, align 1
  %4076 = and i32 %4069, 255
  %4077 = call i32 @llvm.ctpop.i32(i32 %4076)
  %4078 = trunc i32 %4077 to i8
  %4079 = and i8 %4078, 1
  %4080 = xor i8 %4079, 1
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4080, i8* %4081, align 1
  %4082 = xor i64 1, %4065
  %4083 = trunc i64 %4082 to i32
  %4084 = xor i32 %4083, %4069
  %4085 = lshr i32 %4084, 4
  %4086 = trunc i32 %4085 to i8
  %4087 = and i8 %4086, 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4087, i8* %4088, align 1
  %4089 = icmp eq i32 %4069, 0
  %4090 = zext i1 %4089 to i8
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4090, i8* %4091, align 1
  %4092 = lshr i32 %4069, 31
  %4093 = trunc i32 %4092 to i8
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4093, i8* %4094, align 1
  %4095 = lshr i32 %4068, 31
  %4096 = xor i32 %4092, %4095
  %4097 = add i32 %4096, %4092
  %4098 = icmp eq i32 %4097, 2
  %4099 = zext i1 %4098 to i8
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4099, i8* %4100, align 1
  store %struct.Memory* %loadMem_46d029, %struct.Memory** %MEMORY
  %loadMem_46d02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %4103 to i64*
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 5
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %ECX.i812 = bitcast %union.anon* %4106 to i32*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 7
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %RDX.i813 = bitcast %union.anon* %4109 to i64*
  %4110 = load i32, i32* %ECX.i812
  %4111 = zext i32 %4110 to i64
  %4112 = load i64, i64* %PC.i811
  %4113 = add i64 %4112, 3
  store i64 %4113, i64* %PC.i811
  %4114 = shl i64 %4111, 32
  %4115 = ashr exact i64 %4114, 32
  store i64 %4115, i64* %RDX.i813, align 8
  store %struct.Memory* %loadMem_46d02c, %struct.Memory** %MEMORY
  %loadMem_46d02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 33
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %4118 to i64*
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 1
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 7
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %RDX.i810 = bitcast %union.anon* %4124 to i64*
  %4125 = load i64, i64* %RAX.i809
  %4126 = load i64, i64* %RDX.i810
  %4127 = mul i64 %4126, 4
  %4128 = add i64 %4127, %4125
  %4129 = load i64, i64* %PC.i808
  %4130 = add i64 %4129, 4
  store i64 %4130, i64* %PC.i808
  %4131 = inttoptr i64 %4128 to i32*
  %4132 = load i32, i32* %4131
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4133, align 1
  %4134 = and i32 %4132, 255
  %4135 = call i32 @llvm.ctpop.i32(i32 %4134)
  %4136 = trunc i32 %4135 to i8
  %4137 = and i8 %4136, 1
  %4138 = xor i8 %4137, 1
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4138, i8* %4139, align 1
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4140, align 1
  %4141 = icmp eq i32 %4132, 0
  %4142 = zext i1 %4141 to i8
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4142, i8* %4143, align 1
  %4144 = lshr i32 %4132, 31
  %4145 = trunc i32 %4144 to i8
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4145, i8* %4146, align 1
  %4147 = lshr i32 %4132, 31
  %4148 = xor i32 %4144, %4147
  %4149 = add i32 %4148, %4147
  %4150 = icmp eq i32 %4149, 2
  %4151 = zext i1 %4150 to i8
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4151, i8* %4152, align 1
  store %struct.Memory* %loadMem_46d02f, %struct.Memory** %MEMORY
  %loadMem_46d033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4154 = getelementptr inbounds %struct.GPR, %struct.GPR* %4153, i32 0, i32 33
  %4155 = getelementptr inbounds %struct.Reg, %struct.Reg* %4154, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %4155 to i64*
  %4156 = load i64, i64* %PC.i807
  %4157 = add i64 %4156, 27
  %4158 = load i64, i64* %PC.i807
  %4159 = add i64 %4158, 6
  %4160 = load i64, i64* %PC.i807
  %4161 = add i64 %4160, 6
  store i64 %4161, i64* %PC.i807
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4163 = load i8, i8* %4162, align 1
  %4164 = icmp ne i8 %4163, 0
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4166 = load i8, i8* %4165, align 1
  %4167 = icmp ne i8 %4166, 0
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4169 = load i8, i8* %4168, align 1
  %4170 = icmp ne i8 %4169, 0
  %4171 = xor i1 %4167, %4170
  %4172 = or i1 %4164, %4171
  %4173 = zext i1 %4172 to i8
  store i8 %4173, i8* %BRANCH_TAKEN, align 1
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4175 = select i1 %4172, i64 %4157, i64 %4159
  store i64 %4175, i64* %4174, align 8
  store %struct.Memory* %loadMem_46d033, %struct.Memory** %MEMORY
  %loadBr_46d033 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d033 = icmp eq i8 %loadBr_46d033, 1
  br i1 %cmpBr_46d033, label %block_.L_46d04e, label %block_46d039

block_46d039:                                     ; preds = %block_46d022
  %loadMem_46d039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 33
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 1
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %4181 to i64*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 15
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %4184 to i64*
  %4185 = load i64, i64* %RBP.i806
  %4186 = sub i64 %4185, 24
  %4187 = load i64, i64* %PC.i804
  %4188 = add i64 %4187, 4
  store i64 %4188, i64* %PC.i804
  %4189 = inttoptr i64 %4186 to i32*
  %4190 = load i32, i32* %4189
  %4191 = sext i32 %4190 to i64
  store i64 %4191, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_46d039, %struct.Memory** %MEMORY
  %loadMem_46d03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4193 = getelementptr inbounds %struct.GPR, %struct.GPR* %4192, i32 0, i32 33
  %4194 = getelementptr inbounds %struct.Reg, %struct.Reg* %4193, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %4194 to i64*
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 1
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %4197 to i64*
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 5
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %RCX.i802 = bitcast %union.anon* %4200 to i64*
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 15
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %4203 to i64*
  %4204 = load i64, i64* %RBP.i803
  %4205 = load i64, i64* %RAX.i801
  %4206 = mul i64 %4205, 4
  %4207 = add i64 %4204, -1632
  %4208 = add i64 %4207, %4206
  %4209 = load i64, i64* %PC.i800
  %4210 = add i64 %4209, 7
  store i64 %4210, i64* %PC.i800
  %4211 = inttoptr i64 %4208 to i32*
  %4212 = load i32, i32* %4211
  %4213 = zext i32 %4212 to i64
  store i64 %4213, i64* %RCX.i802, align 8
  store %struct.Memory* %loadMem_46d03d, %struct.Memory** %MEMORY
  %loadMem_46d044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 33
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %4216 to i64*
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4218 = getelementptr inbounds %struct.GPR, %struct.GPR* %4217, i32 0, i32 5
  %4219 = getelementptr inbounds %struct.Reg, %struct.Reg* %4218, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %4219 to i64*
  %4220 = load i64, i64* %RCX.i799
  %4221 = load i64, i64* %PC.i798
  %4222 = add i64 %4221, 3
  store i64 %4222, i64* %PC.i798
  %4223 = trunc i64 %4220 to i32
  %4224 = add i32 1, %4223
  %4225 = zext i32 %4224 to i64
  store i64 %4225, i64* %RCX.i799, align 8
  %4226 = icmp ult i32 %4224, %4223
  %4227 = icmp ult i32 %4224, 1
  %4228 = or i1 %4226, %4227
  %4229 = zext i1 %4228 to i8
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4229, i8* %4230, align 1
  %4231 = and i32 %4224, 255
  %4232 = call i32 @llvm.ctpop.i32(i32 %4231)
  %4233 = trunc i32 %4232 to i8
  %4234 = and i8 %4233, 1
  %4235 = xor i8 %4234, 1
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4235, i8* %4236, align 1
  %4237 = xor i64 1, %4220
  %4238 = trunc i64 %4237 to i32
  %4239 = xor i32 %4238, %4224
  %4240 = lshr i32 %4239, 4
  %4241 = trunc i32 %4240 to i8
  %4242 = and i8 %4241, 1
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4242, i8* %4243, align 1
  %4244 = icmp eq i32 %4224, 0
  %4245 = zext i1 %4244 to i8
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4245, i8* %4246, align 1
  %4247 = lshr i32 %4224, 31
  %4248 = trunc i32 %4247 to i8
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4248, i8* %4249, align 1
  %4250 = lshr i32 %4223, 31
  %4251 = xor i32 %4247, %4250
  %4252 = add i32 %4251, %4247
  %4253 = icmp eq i32 %4252, 2
  %4254 = zext i1 %4253 to i8
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4254, i8* %4255, align 1
  store %struct.Memory* %loadMem_46d044, %struct.Memory** %MEMORY
  %loadMem_46d047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 33
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %4258 to i64*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 5
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %ECX.i795 = bitcast %union.anon* %4261 to i32*
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 1
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %4264 to i64*
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 15
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %4267 to i64*
  %4268 = load i64, i64* %RBP.i797
  %4269 = load i64, i64* %RAX.i796
  %4270 = mul i64 %4269, 4
  %4271 = add i64 %4268, -1632
  %4272 = add i64 %4271, %4270
  %4273 = load i32, i32* %ECX.i795
  %4274 = zext i32 %4273 to i64
  %4275 = load i64, i64* %PC.i794
  %4276 = add i64 %4275, 7
  store i64 %4276, i64* %PC.i794
  %4277 = inttoptr i64 %4272 to i32*
  store i32 %4273, i32* %4277
  store %struct.Memory* %loadMem_46d047, %struct.Memory** %MEMORY
  br label %block_.L_46d04e

block_.L_46d04e:                                  ; preds = %block_46d039, %block_46d022, %block_.L_46d008
  %loadMem_46d04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 33
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %4280 to i64*
  %4281 = load i64, i64* %PC.i793
  %4282 = add i64 %4281, 5
  %4283 = load i64, i64* %PC.i793
  %4284 = add i64 %4283, 5
  store i64 %4284, i64* %PC.i793
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4282, i64* %4285, align 8
  store %struct.Memory* %loadMem_46d04e, %struct.Memory** %MEMORY
  br label %block_.L_46d053

block_.L_46d053:                                  ; preds = %block_.L_46d04e, %block_46cf1f, %block_46ceee, %block_46cebd, %block_46ce8c, %block_.L_46ce60
  %loadMem_46d053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 33
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %4288 to i64*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 1
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 15
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %4294 to i64*
  %4295 = load i64, i64* %RBP.i792
  %4296 = sub i64 %4295, 16
  %4297 = load i64, i64* %PC.i790
  %4298 = add i64 %4297, 4
  store i64 %4298, i64* %PC.i790
  %4299 = inttoptr i64 %4296 to i64*
  %4300 = load i64, i64* %4299
  store i64 %4300, i64* %RAX.i791, align 8
  store %struct.Memory* %loadMem_46d053, %struct.Memory** %MEMORY
  %loadMem_46d057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 33
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %4303 to i64*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 5
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %4306 to i64*
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 15
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %4309 to i64*
  %4310 = load i64, i64* %RBP.i789
  %4311 = sub i64 %4310, 24
  %4312 = load i64, i64* %PC.i787
  %4313 = add i64 %4312, 4
  store i64 %4313, i64* %PC.i787
  %4314 = inttoptr i64 %4311 to i32*
  %4315 = load i32, i32* %4314
  %4316 = sext i32 %4315 to i64
  store i64 %4316, i64* %RCX.i788, align 8
  store %struct.Memory* %loadMem_46d057, %struct.Memory** %MEMORY
  %loadMem_46d05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 33
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %4319 to i64*
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 1
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %4322 to i64*
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 5
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %RCX.i786 = bitcast %union.anon* %4325 to i64*
  %4326 = load i64, i64* %RAX.i785
  %4327 = load i64, i64* %RCX.i786
  %4328 = mul i64 %4327, 4
  %4329 = add i64 %4328, %4326
  %4330 = load i64, i64* %PC.i784
  %4331 = add i64 %4330, 4
  store i64 %4331, i64* %PC.i784
  %4332 = inttoptr i64 %4329 to i32*
  %4333 = load i32, i32* %4332
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4334, align 1
  %4335 = and i32 %4333, 255
  %4336 = call i32 @llvm.ctpop.i32(i32 %4335)
  %4337 = trunc i32 %4336 to i8
  %4338 = and i8 %4337, 1
  %4339 = xor i8 %4338, 1
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4339, i8* %4340, align 1
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4341, align 1
  %4342 = icmp eq i32 %4333, 0
  %4343 = zext i1 %4342 to i8
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4343, i8* %4344, align 1
  %4345 = lshr i32 %4333, 31
  %4346 = trunc i32 %4345 to i8
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4346, i8* %4347, align 1
  %4348 = lshr i32 %4333, 31
  %4349 = xor i32 %4345, %4348
  %4350 = add i32 %4349, %4348
  %4351 = icmp eq i32 %4350, 2
  %4352 = zext i1 %4351 to i8
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4352, i8* %4353, align 1
  store %struct.Memory* %loadMem_46d05b, %struct.Memory** %MEMORY
  %loadMem_46d05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 33
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %4356 to i64*
  %4357 = load i64, i64* %PC.i783
  %4358 = add i64 %4357, 487
  %4359 = load i64, i64* %PC.i783
  %4360 = add i64 %4359, 6
  %4361 = load i64, i64* %PC.i783
  %4362 = add i64 %4361, 6
  store i64 %4362, i64* %PC.i783
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4364 = load i8, i8* %4363, align 1
  %4365 = icmp eq i8 %4364, 0
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4367 = load i8, i8* %4366, align 1
  %4368 = icmp ne i8 %4367, 0
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4370 = load i8, i8* %4369, align 1
  %4371 = icmp ne i8 %4370, 0
  %4372 = xor i1 %4368, %4371
  %4373 = xor i1 %4372, true
  %4374 = and i1 %4365, %4373
  %4375 = zext i1 %4374 to i8
  store i8 %4375, i8* %BRANCH_TAKEN, align 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4377 = select i1 %4374, i64 %4358, i64 %4360
  store i64 %4377, i64* %4376, align 8
  store %struct.Memory* %loadMem_46d05f, %struct.Memory** %MEMORY
  %loadBr_46d05f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d05f = icmp eq i8 %loadBr_46d05f, 1
  br i1 %cmpBr_46d05f, label %block_.L_46d246, label %block_46d065

block_46d065:                                     ; preds = %block_.L_46d053
  %loadMem_46d065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4379 = getelementptr inbounds %struct.GPR, %struct.GPR* %4378, i32 0, i32 33
  %4380 = getelementptr inbounds %struct.Reg, %struct.Reg* %4379, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %4380 to i64*
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 1
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %RAX.i781 = bitcast %union.anon* %4383 to i64*
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 15
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %4386 to i64*
  %4387 = load i64, i64* %RBP.i782
  %4388 = sub i64 %4387, 24
  %4389 = load i64, i64* %PC.i780
  %4390 = add i64 %4389, 3
  store i64 %4390, i64* %PC.i780
  %4391 = inttoptr i64 %4388 to i32*
  %4392 = load i32, i32* %4391
  %4393 = zext i32 %4392 to i64
  store i64 %4393, i64* %RAX.i781, align 8
  store %struct.Memory* %loadMem_46d065, %struct.Memory** %MEMORY
  %loadMem_46d068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 33
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 1
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %RAX.i779
  %4401 = load i64, i64* %PC.i778
  %4402 = add i64 %4401, 3
  store i64 %4402, i64* %PC.i778
  %4403 = trunc i64 %4400 to i32
  %4404 = add i32 20, %4403
  %4405 = zext i32 %4404 to i64
  store i64 %4405, i64* %RAX.i779, align 8
  %4406 = icmp ult i32 %4404, %4403
  %4407 = icmp ult i32 %4404, 20
  %4408 = or i1 %4406, %4407
  %4409 = zext i1 %4408 to i8
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4409, i8* %4410, align 1
  %4411 = and i32 %4404, 255
  %4412 = call i32 @llvm.ctpop.i32(i32 %4411)
  %4413 = trunc i32 %4412 to i8
  %4414 = and i8 %4413, 1
  %4415 = xor i8 %4414, 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4415, i8* %4416, align 1
  %4417 = xor i64 20, %4400
  %4418 = trunc i64 %4417 to i32
  %4419 = xor i32 %4418, %4404
  %4420 = lshr i32 %4419, 4
  %4421 = trunc i32 %4420 to i8
  %4422 = and i8 %4421, 1
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4422, i8* %4423, align 1
  %4424 = icmp eq i32 %4404, 0
  %4425 = zext i1 %4424 to i8
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4425, i8* %4426, align 1
  %4427 = lshr i32 %4404, 31
  %4428 = trunc i32 %4427 to i8
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4428, i8* %4429, align 1
  %4430 = lshr i32 %4403, 31
  %4431 = xor i32 %4427, %4430
  %4432 = add i32 %4431, %4427
  %4433 = icmp eq i32 %4432, 2
  %4434 = zext i1 %4433 to i8
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4434, i8* %4435, align 1
  store %struct.Memory* %loadMem_46d068, %struct.Memory** %MEMORY
  %loadMem_46d06b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 33
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %4438 to i64*
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4440 = getelementptr inbounds %struct.GPR, %struct.GPR* %4439, i32 0, i32 1
  %4441 = getelementptr inbounds %struct.Reg, %struct.Reg* %4440, i32 0, i32 0
  %EAX.i776 = bitcast %union.anon* %4441 to i32*
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4443 = getelementptr inbounds %struct.GPR, %struct.GPR* %4442, i32 0, i32 5
  %4444 = getelementptr inbounds %struct.Reg, %struct.Reg* %4443, i32 0, i32 0
  %RCX.i777 = bitcast %union.anon* %4444 to i64*
  %4445 = load i32, i32* %EAX.i776
  %4446 = zext i32 %4445 to i64
  %4447 = load i64, i64* %PC.i775
  %4448 = add i64 %4447, 3
  store i64 %4448, i64* %PC.i775
  %4449 = shl i64 %4446, 32
  %4450 = ashr exact i64 %4449, 32
  store i64 %4450, i64* %RCX.i777, align 8
  store %struct.Memory* %loadMem_46d06b, %struct.Memory** %MEMORY
  %loadMem_46d06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 33
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %4453 to i64*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 1
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %4456 to i64*
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4458 = getelementptr inbounds %struct.GPR, %struct.GPR* %4457, i32 0, i32 5
  %4459 = getelementptr inbounds %struct.Reg, %struct.Reg* %4458, i32 0, i32 0
  %RCX.i774 = bitcast %union.anon* %4459 to i64*
  %4460 = load i64, i64* %RCX.i774
  %4461 = add i64 %4460, 12099168
  %4462 = load i64, i64* %PC.i772
  %4463 = add i64 %4462, 8
  store i64 %4463, i64* %PC.i772
  %4464 = inttoptr i64 %4461 to i8*
  %4465 = load i8, i8* %4464
  %4466 = zext i8 %4465 to i64
  store i64 %4466, i64* %RAX.i773, align 8
  store %struct.Memory* %loadMem_46d06e, %struct.Memory** %MEMORY
  %loadMem_46d076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 33
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %4469 to i64*
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 1
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %EAX.i771 = bitcast %union.anon* %4472 to i32*
  %4473 = load i32, i32* %EAX.i771
  %4474 = zext i32 %4473 to i64
  %4475 = load i64, i64* %PC.i770
  %4476 = add i64 %4475, 3
  store i64 %4476, i64* %PC.i770
  %4477 = sub i32 %4473, 3
  %4478 = icmp ult i32 %4473, 3
  %4479 = zext i1 %4478 to i8
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4479, i8* %4480, align 1
  %4481 = and i32 %4477, 255
  %4482 = call i32 @llvm.ctpop.i32(i32 %4481)
  %4483 = trunc i32 %4482 to i8
  %4484 = and i8 %4483, 1
  %4485 = xor i8 %4484, 1
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4485, i8* %4486, align 1
  %4487 = xor i64 3, %4474
  %4488 = trunc i64 %4487 to i32
  %4489 = xor i32 %4488, %4477
  %4490 = lshr i32 %4489, 4
  %4491 = trunc i32 %4490 to i8
  %4492 = and i8 %4491, 1
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4492, i8* %4493, align 1
  %4494 = icmp eq i32 %4477, 0
  %4495 = zext i1 %4494 to i8
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4495, i8* %4496, align 1
  %4497 = lshr i32 %4477, 31
  %4498 = trunc i32 %4497 to i8
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4498, i8* %4499, align 1
  %4500 = lshr i32 %4473, 31
  %4501 = xor i32 %4497, %4500
  %4502 = add i32 %4501, %4500
  %4503 = icmp eq i32 %4502, 2
  %4504 = zext i1 %4503 to i8
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4504, i8* %4505, align 1
  store %struct.Memory* %loadMem_46d076, %struct.Memory** %MEMORY
  %loadMem_46d079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4507 = getelementptr inbounds %struct.GPR, %struct.GPR* %4506, i32 0, i32 33
  %4508 = getelementptr inbounds %struct.Reg, %struct.Reg* %4507, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %4508 to i64*
  %4509 = load i64, i64* %PC.i769
  %4510 = add i64 %4509, 29
  %4511 = load i64, i64* %PC.i769
  %4512 = add i64 %4511, 6
  %4513 = load i64, i64* %PC.i769
  %4514 = add i64 %4513, 6
  store i64 %4514, i64* %PC.i769
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4516 = load i8, i8* %4515, align 1
  store i8 %4516, i8* %BRANCH_TAKEN, align 1
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4518 = icmp ne i8 %4516, 0
  %4519 = select i1 %4518, i64 %4510, i64 %4512
  store i64 %4519, i64* %4517, align 8
  store %struct.Memory* %loadMem_46d079, %struct.Memory** %MEMORY
  %loadBr_46d079 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d079 = icmp eq i8 %loadBr_46d079, 1
  br i1 %cmpBr_46d079, label %block_.L_46d096, label %block_46d07f

block_46d07f:                                     ; preds = %block_46d065
  %loadMem_46d07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4521 = getelementptr inbounds %struct.GPR, %struct.GPR* %4520, i32 0, i32 33
  %4522 = getelementptr inbounds %struct.Reg, %struct.Reg* %4521, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %4522 to i64*
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 1
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %4525 to i64*
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4527 = getelementptr inbounds %struct.GPR, %struct.GPR* %4526, i32 0, i32 15
  %4528 = getelementptr inbounds %struct.Reg, %struct.Reg* %4527, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %4528 to i64*
  %4529 = load i64, i64* %RBP.i768
  %4530 = sub i64 %4529, 16
  %4531 = load i64, i64* %PC.i766
  %4532 = add i64 %4531, 4
  store i64 %4532, i64* %PC.i766
  %4533 = inttoptr i64 %4530 to i64*
  %4534 = load i64, i64* %4533
  store i64 %4534, i64* %RAX.i767, align 8
  store %struct.Memory* %loadMem_46d07f, %struct.Memory** %MEMORY
  %loadMem_46d083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 33
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %4537 to i64*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 5
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %RCX.i764 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 15
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RBP.i765 = bitcast %union.anon* %4543 to i64*
  %4544 = load i64, i64* %RBP.i765
  %4545 = sub i64 %4544, 24
  %4546 = load i64, i64* %PC.i763
  %4547 = add i64 %4546, 3
  store i64 %4547, i64* %PC.i763
  %4548 = inttoptr i64 %4545 to i32*
  %4549 = load i32, i32* %4548
  %4550 = zext i32 %4549 to i64
  store i64 %4550, i64* %RCX.i764, align 8
  store %struct.Memory* %loadMem_46d083, %struct.Memory** %MEMORY
  %loadMem_46d086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 33
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %4553 to i64*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 5
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RCX.i762 = bitcast %union.anon* %4556 to i64*
  %4557 = load i64, i64* %RCX.i762
  %4558 = load i64, i64* %PC.i761
  %4559 = add i64 %4558, 3
  store i64 %4559, i64* %PC.i761
  %4560 = trunc i64 %4557 to i32
  %4561 = add i32 20, %4560
  %4562 = zext i32 %4561 to i64
  store i64 %4562, i64* %RCX.i762, align 8
  %4563 = icmp ult i32 %4561, %4560
  %4564 = icmp ult i32 %4561, 20
  %4565 = or i1 %4563, %4564
  %4566 = zext i1 %4565 to i8
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4566, i8* %4567, align 1
  %4568 = and i32 %4561, 255
  %4569 = call i32 @llvm.ctpop.i32(i32 %4568)
  %4570 = trunc i32 %4569 to i8
  %4571 = and i8 %4570, 1
  %4572 = xor i8 %4571, 1
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4572, i8* %4573, align 1
  %4574 = xor i64 20, %4557
  %4575 = trunc i64 %4574 to i32
  %4576 = xor i32 %4575, %4561
  %4577 = lshr i32 %4576, 4
  %4578 = trunc i32 %4577 to i8
  %4579 = and i8 %4578, 1
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4579, i8* %4580, align 1
  %4581 = icmp eq i32 %4561, 0
  %4582 = zext i1 %4581 to i8
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4582, i8* %4583, align 1
  %4584 = lshr i32 %4561, 31
  %4585 = trunc i32 %4584 to i8
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4585, i8* %4586, align 1
  %4587 = lshr i32 %4560, 31
  %4588 = xor i32 %4584, %4587
  %4589 = add i32 %4588, %4584
  %4590 = icmp eq i32 %4589, 2
  %4591 = zext i1 %4590 to i8
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4591, i8* %4592, align 1
  store %struct.Memory* %loadMem_46d086, %struct.Memory** %MEMORY
  %loadMem_46d089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 33
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %4595 to i64*
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4597 = getelementptr inbounds %struct.GPR, %struct.GPR* %4596, i32 0, i32 5
  %4598 = getelementptr inbounds %struct.Reg, %struct.Reg* %4597, i32 0, i32 0
  %ECX.i759 = bitcast %union.anon* %4598 to i32*
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4600 = getelementptr inbounds %struct.GPR, %struct.GPR* %4599, i32 0, i32 7
  %4601 = getelementptr inbounds %struct.Reg, %struct.Reg* %4600, i32 0, i32 0
  %RDX.i760 = bitcast %union.anon* %4601 to i64*
  %4602 = load i32, i32* %ECX.i759
  %4603 = zext i32 %4602 to i64
  %4604 = load i64, i64* %PC.i758
  %4605 = add i64 %4604, 3
  store i64 %4605, i64* %PC.i758
  %4606 = shl i64 %4603, 32
  %4607 = ashr exact i64 %4606, 32
  store i64 %4607, i64* %RDX.i760, align 8
  store %struct.Memory* %loadMem_46d089, %struct.Memory** %MEMORY
  %loadMem_46d08c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4609 = getelementptr inbounds %struct.GPR, %struct.GPR* %4608, i32 0, i32 33
  %4610 = getelementptr inbounds %struct.Reg, %struct.Reg* %4609, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %4610 to i64*
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4612 = getelementptr inbounds %struct.GPR, %struct.GPR* %4611, i32 0, i32 1
  %4613 = getelementptr inbounds %struct.Reg, %struct.Reg* %4612, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %4613 to i64*
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4615 = getelementptr inbounds %struct.GPR, %struct.GPR* %4614, i32 0, i32 7
  %4616 = getelementptr inbounds %struct.Reg, %struct.Reg* %4615, i32 0, i32 0
  %RDX.i757 = bitcast %union.anon* %4616 to i64*
  %4617 = load i64, i64* %RAX.i756
  %4618 = load i64, i64* %RDX.i757
  %4619 = mul i64 %4618, 4
  %4620 = add i64 %4619, %4617
  %4621 = load i64, i64* %PC.i755
  %4622 = add i64 %4621, 4
  store i64 %4622, i64* %PC.i755
  %4623 = inttoptr i64 %4620 to i32*
  %4624 = load i32, i32* %4623
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4625, align 1
  %4626 = and i32 %4624, 255
  %4627 = call i32 @llvm.ctpop.i32(i32 %4626)
  %4628 = trunc i32 %4627 to i8
  %4629 = and i8 %4628, 1
  %4630 = xor i8 %4629, 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4630, i8* %4631, align 1
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4632, align 1
  %4633 = icmp eq i32 %4624, 0
  %4634 = zext i1 %4633 to i8
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4634, i8* %4635, align 1
  %4636 = lshr i32 %4624, 31
  %4637 = trunc i32 %4636 to i8
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4637, i8* %4638, align 1
  %4639 = lshr i32 %4624, 31
  %4640 = xor i32 %4636, %4639
  %4641 = add i32 %4640, %4639
  %4642 = icmp eq i32 %4641, 2
  %4643 = zext i1 %4642 to i8
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4643, i8* %4644, align 1
  store %struct.Memory* %loadMem_46d08c, %struct.Memory** %MEMORY
  %loadMem_46d090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 33
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4647 to i64*
  %4648 = load i64, i64* %PC.i754
  %4649 = add i64 %4648, 438
  %4650 = load i64, i64* %PC.i754
  %4651 = add i64 %4650, 6
  %4652 = load i64, i64* %PC.i754
  %4653 = add i64 %4652, 6
  store i64 %4653, i64* %PC.i754
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4655 = load i8, i8* %4654, align 1
  %4656 = icmp eq i8 %4655, 0
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4658 = load i8, i8* %4657, align 1
  %4659 = icmp ne i8 %4658, 0
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4661 = load i8, i8* %4660, align 1
  %4662 = icmp ne i8 %4661, 0
  %4663 = xor i1 %4659, %4662
  %4664 = xor i1 %4663, true
  %4665 = and i1 %4656, %4664
  %4666 = zext i1 %4665 to i8
  store i8 %4666, i8* %BRANCH_TAKEN, align 1
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4668 = select i1 %4665, i64 %4649, i64 %4651
  store i64 %4668, i64* %4667, align 8
  store %struct.Memory* %loadMem_46d090, %struct.Memory** %MEMORY
  %loadBr_46d090 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d090 = icmp eq i8 %loadBr_46d090, 1
  br i1 %cmpBr_46d090, label %block_.L_46d246, label %block_.L_46d096

block_.L_46d096:                                  ; preds = %block_46d07f, %block_46d065
  %loadMem_46d096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4670 = getelementptr inbounds %struct.GPR, %struct.GPR* %4669, i32 0, i32 33
  %4671 = getelementptr inbounds %struct.Reg, %struct.Reg* %4670, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %4671 to i64*
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4673 = getelementptr inbounds %struct.GPR, %struct.GPR* %4672, i32 0, i32 1
  %4674 = getelementptr inbounds %struct.Reg, %struct.Reg* %4673, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %4674 to i64*
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 15
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %4677 to i64*
  %4678 = load i64, i64* %RBP.i753
  %4679 = sub i64 %4678, 24
  %4680 = load i64, i64* %PC.i751
  %4681 = add i64 %4680, 3
  store i64 %4681, i64* %PC.i751
  %4682 = inttoptr i64 %4679 to i32*
  %4683 = load i32, i32* %4682
  %4684 = zext i32 %4683 to i64
  store i64 %4684, i64* %RAX.i752, align 8
  store %struct.Memory* %loadMem_46d096, %struct.Memory** %MEMORY
  %loadMem_46d099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 33
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4687 to i64*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4689 = getelementptr inbounds %struct.GPR, %struct.GPR* %4688, i32 0, i32 1
  %4690 = getelementptr inbounds %struct.Reg, %struct.Reg* %4689, i32 0, i32 0
  %RAX.i750 = bitcast %union.anon* %4690 to i64*
  %4691 = load i64, i64* %RAX.i750
  %4692 = load i64, i64* %PC.i749
  %4693 = add i64 %4692, 3
  store i64 %4693, i64* %PC.i749
  %4694 = trunc i64 %4691 to i32
  %4695 = sub i32 %4694, 1
  %4696 = zext i32 %4695 to i64
  store i64 %4696, i64* %RAX.i750, align 8
  %4697 = icmp ult i32 %4694, 1
  %4698 = zext i1 %4697 to i8
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4698, i8* %4699, align 1
  %4700 = and i32 %4695, 255
  %4701 = call i32 @llvm.ctpop.i32(i32 %4700)
  %4702 = trunc i32 %4701 to i8
  %4703 = and i8 %4702, 1
  %4704 = xor i8 %4703, 1
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4704, i8* %4705, align 1
  %4706 = xor i64 1, %4691
  %4707 = trunc i64 %4706 to i32
  %4708 = xor i32 %4707, %4695
  %4709 = lshr i32 %4708, 4
  %4710 = trunc i32 %4709 to i8
  %4711 = and i8 %4710, 1
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4711, i8* %4712, align 1
  %4713 = icmp eq i32 %4695, 0
  %4714 = zext i1 %4713 to i8
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4714, i8* %4715, align 1
  %4716 = lshr i32 %4695, 31
  %4717 = trunc i32 %4716 to i8
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4717, i8* %4718, align 1
  %4719 = lshr i32 %4694, 31
  %4720 = xor i32 %4716, %4719
  %4721 = add i32 %4720, %4719
  %4722 = icmp eq i32 %4721, 2
  %4723 = zext i1 %4722 to i8
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4723, i8* %4724, align 1
  store %struct.Memory* %loadMem_46d099, %struct.Memory** %MEMORY
  %loadMem_46d09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 33
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %4727 to i64*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 1
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %EAX.i747 = bitcast %union.anon* %4730 to i32*
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 5
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %RCX.i748 = bitcast %union.anon* %4733 to i64*
  %4734 = load i32, i32* %EAX.i747
  %4735 = zext i32 %4734 to i64
  %4736 = load i64, i64* %PC.i746
  %4737 = add i64 %4736, 3
  store i64 %4737, i64* %PC.i746
  %4738 = shl i64 %4735, 32
  %4739 = ashr exact i64 %4738, 32
  store i64 %4739, i64* %RCX.i748, align 8
  store %struct.Memory* %loadMem_46d09c, %struct.Memory** %MEMORY
  %loadMem_46d09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 33
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %4742 to i64*
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 1
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 5
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %RCX.i745 = bitcast %union.anon* %4748 to i64*
  %4749 = load i64, i64* %RCX.i745
  %4750 = add i64 %4749, 12099168
  %4751 = load i64, i64* %PC.i743
  %4752 = add i64 %4751, 8
  store i64 %4752, i64* %PC.i743
  %4753 = inttoptr i64 %4750 to i8*
  %4754 = load i8, i8* %4753
  %4755 = zext i8 %4754 to i64
  store i64 %4755, i64* %RAX.i744, align 8
  store %struct.Memory* %loadMem_46d09f, %struct.Memory** %MEMORY
  %loadMem_46d0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4757 = getelementptr inbounds %struct.GPR, %struct.GPR* %4756, i32 0, i32 33
  %4758 = getelementptr inbounds %struct.Reg, %struct.Reg* %4757, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %4758 to i64*
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 1
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %EAX.i742 = bitcast %union.anon* %4761 to i32*
  %4762 = load i32, i32* %EAX.i742
  %4763 = zext i32 %4762 to i64
  %4764 = load i64, i64* %PC.i741
  %4765 = add i64 %4764, 3
  store i64 %4765, i64* %PC.i741
  %4766 = sub i32 %4762, 3
  %4767 = icmp ult i32 %4762, 3
  %4768 = zext i1 %4767 to i8
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4768, i8* %4769, align 1
  %4770 = and i32 %4766, 255
  %4771 = call i32 @llvm.ctpop.i32(i32 %4770)
  %4772 = trunc i32 %4771 to i8
  %4773 = and i8 %4772, 1
  %4774 = xor i8 %4773, 1
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4774, i8* %4775, align 1
  %4776 = xor i64 3, %4763
  %4777 = trunc i64 %4776 to i32
  %4778 = xor i32 %4777, %4766
  %4779 = lshr i32 %4778, 4
  %4780 = trunc i32 %4779 to i8
  %4781 = and i8 %4780, 1
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4781, i8* %4782, align 1
  %4783 = icmp eq i32 %4766, 0
  %4784 = zext i1 %4783 to i8
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4784, i8* %4785, align 1
  %4786 = lshr i32 %4766, 31
  %4787 = trunc i32 %4786 to i8
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4787, i8* %4788, align 1
  %4789 = lshr i32 %4762, 31
  %4790 = xor i32 %4786, %4789
  %4791 = add i32 %4790, %4789
  %4792 = icmp eq i32 %4791, 2
  %4793 = zext i1 %4792 to i8
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4793, i8* %4794, align 1
  store %struct.Memory* %loadMem_46d0a7, %struct.Memory** %MEMORY
  %loadMem_46d0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 33
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %4797 to i64*
  %4798 = load i64, i64* %PC.i740
  %4799 = add i64 %4798, 29
  %4800 = load i64, i64* %PC.i740
  %4801 = add i64 %4800, 6
  %4802 = load i64, i64* %PC.i740
  %4803 = add i64 %4802, 6
  store i64 %4803, i64* %PC.i740
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4805 = load i8, i8* %4804, align 1
  store i8 %4805, i8* %BRANCH_TAKEN, align 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4807 = icmp ne i8 %4805, 0
  %4808 = select i1 %4807, i64 %4799, i64 %4801
  store i64 %4808, i64* %4806, align 8
  store %struct.Memory* %loadMem_46d0aa, %struct.Memory** %MEMORY
  %loadBr_46d0aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d0aa = icmp eq i8 %loadBr_46d0aa, 1
  br i1 %cmpBr_46d0aa, label %block_.L_46d0c7, label %block_46d0b0

block_46d0b0:                                     ; preds = %block_.L_46d096
  %loadMem_46d0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 33
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 1
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 15
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %4817 to i64*
  %4818 = load i64, i64* %RBP.i739
  %4819 = sub i64 %4818, 16
  %4820 = load i64, i64* %PC.i737
  %4821 = add i64 %4820, 4
  store i64 %4821, i64* %PC.i737
  %4822 = inttoptr i64 %4819 to i64*
  %4823 = load i64, i64* %4822
  store i64 %4823, i64* %RAX.i738, align 8
  store %struct.Memory* %loadMem_46d0b0, %struct.Memory** %MEMORY
  %loadMem_46d0b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 33
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 5
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RCX.i735 = bitcast %union.anon* %4829 to i64*
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 15
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %4832 to i64*
  %4833 = load i64, i64* %RBP.i736
  %4834 = sub i64 %4833, 24
  %4835 = load i64, i64* %PC.i734
  %4836 = add i64 %4835, 3
  store i64 %4836, i64* %PC.i734
  %4837 = inttoptr i64 %4834 to i32*
  %4838 = load i32, i32* %4837
  %4839 = zext i32 %4838 to i64
  store i64 %4839, i64* %RCX.i735, align 8
  store %struct.Memory* %loadMem_46d0b4, %struct.Memory** %MEMORY
  %loadMem_46d0b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 33
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %4842 to i64*
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 5
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %RCX.i733 = bitcast %union.anon* %4845 to i64*
  %4846 = load i64, i64* %RCX.i733
  %4847 = load i64, i64* %PC.i732
  %4848 = add i64 %4847, 3
  store i64 %4848, i64* %PC.i732
  %4849 = trunc i64 %4846 to i32
  %4850 = sub i32 %4849, 1
  %4851 = zext i32 %4850 to i64
  store i64 %4851, i64* %RCX.i733, align 8
  %4852 = icmp ult i32 %4849, 1
  %4853 = zext i1 %4852 to i8
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4853, i8* %4854, align 1
  %4855 = and i32 %4850, 255
  %4856 = call i32 @llvm.ctpop.i32(i32 %4855)
  %4857 = trunc i32 %4856 to i8
  %4858 = and i8 %4857, 1
  %4859 = xor i8 %4858, 1
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4859, i8* %4860, align 1
  %4861 = xor i64 1, %4846
  %4862 = trunc i64 %4861 to i32
  %4863 = xor i32 %4862, %4850
  %4864 = lshr i32 %4863, 4
  %4865 = trunc i32 %4864 to i8
  %4866 = and i8 %4865, 1
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4866, i8* %4867, align 1
  %4868 = icmp eq i32 %4850, 0
  %4869 = zext i1 %4868 to i8
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4869, i8* %4870, align 1
  %4871 = lshr i32 %4850, 31
  %4872 = trunc i32 %4871 to i8
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4872, i8* %4873, align 1
  %4874 = lshr i32 %4849, 31
  %4875 = xor i32 %4871, %4874
  %4876 = add i32 %4875, %4874
  %4877 = icmp eq i32 %4876, 2
  %4878 = zext i1 %4877 to i8
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4878, i8* %4879, align 1
  store %struct.Memory* %loadMem_46d0b7, %struct.Memory** %MEMORY
  %loadMem_46d0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4881 = getelementptr inbounds %struct.GPR, %struct.GPR* %4880, i32 0, i32 33
  %4882 = getelementptr inbounds %struct.Reg, %struct.Reg* %4881, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %4882 to i64*
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 5
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %ECX.i730 = bitcast %union.anon* %4885 to i32*
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4887 = getelementptr inbounds %struct.GPR, %struct.GPR* %4886, i32 0, i32 7
  %4888 = getelementptr inbounds %struct.Reg, %struct.Reg* %4887, i32 0, i32 0
  %RDX.i731 = bitcast %union.anon* %4888 to i64*
  %4889 = load i32, i32* %ECX.i730
  %4890 = zext i32 %4889 to i64
  %4891 = load i64, i64* %PC.i729
  %4892 = add i64 %4891, 3
  store i64 %4892, i64* %PC.i729
  %4893 = shl i64 %4890, 32
  %4894 = ashr exact i64 %4893, 32
  store i64 %4894, i64* %RDX.i731, align 8
  store %struct.Memory* %loadMem_46d0ba, %struct.Memory** %MEMORY
  %loadMem_46d0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 33
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %4897 to i64*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 1
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %4900 to i64*
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 7
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %RDX.i728 = bitcast %union.anon* %4903 to i64*
  %4904 = load i64, i64* %RAX.i727
  %4905 = load i64, i64* %RDX.i728
  %4906 = mul i64 %4905, 4
  %4907 = add i64 %4906, %4904
  %4908 = load i64, i64* %PC.i726
  %4909 = add i64 %4908, 4
  store i64 %4909, i64* %PC.i726
  %4910 = inttoptr i64 %4907 to i32*
  %4911 = load i32, i32* %4910
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4912, align 1
  %4913 = and i32 %4911, 255
  %4914 = call i32 @llvm.ctpop.i32(i32 %4913)
  %4915 = trunc i32 %4914 to i8
  %4916 = and i8 %4915, 1
  %4917 = xor i8 %4916, 1
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4917, i8* %4918, align 1
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4919, align 1
  %4920 = icmp eq i32 %4911, 0
  %4921 = zext i1 %4920 to i8
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4921, i8* %4922, align 1
  %4923 = lshr i32 %4911, 31
  %4924 = trunc i32 %4923 to i8
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4924, i8* %4925, align 1
  %4926 = lshr i32 %4911, 31
  %4927 = xor i32 %4923, %4926
  %4928 = add i32 %4927, %4926
  %4929 = icmp eq i32 %4928, 2
  %4930 = zext i1 %4929 to i8
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4930, i8* %4931, align 1
  store %struct.Memory* %loadMem_46d0bd, %struct.Memory** %MEMORY
  %loadMem_46d0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 33
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %4934 to i64*
  %4935 = load i64, i64* %PC.i725
  %4936 = add i64 %4935, 389
  %4937 = load i64, i64* %PC.i725
  %4938 = add i64 %4937, 6
  %4939 = load i64, i64* %PC.i725
  %4940 = add i64 %4939, 6
  store i64 %4940, i64* %PC.i725
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4942 = load i8, i8* %4941, align 1
  %4943 = icmp eq i8 %4942, 0
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4945 = load i8, i8* %4944, align 1
  %4946 = icmp ne i8 %4945, 0
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4948 = load i8, i8* %4947, align 1
  %4949 = icmp ne i8 %4948, 0
  %4950 = xor i1 %4946, %4949
  %4951 = xor i1 %4950, true
  %4952 = and i1 %4943, %4951
  %4953 = zext i1 %4952 to i8
  store i8 %4953, i8* %BRANCH_TAKEN, align 1
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4955 = select i1 %4952, i64 %4936, i64 %4938
  store i64 %4955, i64* %4954, align 8
  store %struct.Memory* %loadMem_46d0c1, %struct.Memory** %MEMORY
  %loadBr_46d0c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d0c1 = icmp eq i8 %loadBr_46d0c1, 1
  br i1 %cmpBr_46d0c1, label %block_.L_46d246, label %block_.L_46d0c7

block_.L_46d0c7:                                  ; preds = %block_46d0b0, %block_.L_46d096
  %loadMem_46d0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 33
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %4958 to i64*
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 1
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %4961 to i64*
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4963 = getelementptr inbounds %struct.GPR, %struct.GPR* %4962, i32 0, i32 15
  %4964 = getelementptr inbounds %struct.Reg, %struct.Reg* %4963, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %4964 to i64*
  %4965 = load i64, i64* %RBP.i724
  %4966 = sub i64 %4965, 24
  %4967 = load i64, i64* %PC.i722
  %4968 = add i64 %4967, 3
  store i64 %4968, i64* %PC.i722
  %4969 = inttoptr i64 %4966 to i32*
  %4970 = load i32, i32* %4969
  %4971 = zext i32 %4970 to i64
  store i64 %4971, i64* %RAX.i723, align 8
  store %struct.Memory* %loadMem_46d0c7, %struct.Memory** %MEMORY
  %loadMem_46d0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 33
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4974 to i64*
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 1
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %4977 to i64*
  %4978 = load i64, i64* %RAX.i721
  %4979 = load i64, i64* %PC.i720
  %4980 = add i64 %4979, 3
  store i64 %4980, i64* %PC.i720
  %4981 = trunc i64 %4978 to i32
  %4982 = sub i32 %4981, 20
  %4983 = zext i32 %4982 to i64
  store i64 %4983, i64* %RAX.i721, align 8
  %4984 = icmp ult i32 %4981, 20
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4985, i8* %4986, align 1
  %4987 = and i32 %4982, 255
  %4988 = call i32 @llvm.ctpop.i32(i32 %4987)
  %4989 = trunc i32 %4988 to i8
  %4990 = and i8 %4989, 1
  %4991 = xor i8 %4990, 1
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4991, i8* %4992, align 1
  %4993 = xor i64 20, %4978
  %4994 = trunc i64 %4993 to i32
  %4995 = xor i32 %4994, %4982
  %4996 = lshr i32 %4995, 4
  %4997 = trunc i32 %4996 to i8
  %4998 = and i8 %4997, 1
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4998, i8* %4999, align 1
  %5000 = icmp eq i32 %4982, 0
  %5001 = zext i1 %5000 to i8
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5001, i8* %5002, align 1
  %5003 = lshr i32 %4982, 31
  %5004 = trunc i32 %5003 to i8
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5004, i8* %5005, align 1
  %5006 = lshr i32 %4981, 31
  %5007 = xor i32 %5003, %5006
  %5008 = add i32 %5007, %5006
  %5009 = icmp eq i32 %5008, 2
  %5010 = zext i1 %5009 to i8
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5010, i8* %5011, align 1
  store %struct.Memory* %loadMem_46d0ca, %struct.Memory** %MEMORY
  %loadMem_46d0cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 33
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %5014 to i64*
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5016 = getelementptr inbounds %struct.GPR, %struct.GPR* %5015, i32 0, i32 1
  %5017 = getelementptr inbounds %struct.Reg, %struct.Reg* %5016, i32 0, i32 0
  %EAX.i718 = bitcast %union.anon* %5017 to i32*
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5019 = getelementptr inbounds %struct.GPR, %struct.GPR* %5018, i32 0, i32 5
  %5020 = getelementptr inbounds %struct.Reg, %struct.Reg* %5019, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %5020 to i64*
  %5021 = load i32, i32* %EAX.i718
  %5022 = zext i32 %5021 to i64
  %5023 = load i64, i64* %PC.i717
  %5024 = add i64 %5023, 3
  store i64 %5024, i64* %PC.i717
  %5025 = shl i64 %5022, 32
  %5026 = ashr exact i64 %5025, 32
  store i64 %5026, i64* %RCX.i719, align 8
  store %struct.Memory* %loadMem_46d0cd, %struct.Memory** %MEMORY
  %loadMem_46d0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 33
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %5029 to i64*
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 1
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %RAX.i715 = bitcast %union.anon* %5032 to i64*
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 5
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %RCX.i716 = bitcast %union.anon* %5035 to i64*
  %5036 = load i64, i64* %RCX.i716
  %5037 = add i64 %5036, 12099168
  %5038 = load i64, i64* %PC.i714
  %5039 = add i64 %5038, 8
  store i64 %5039, i64* %PC.i714
  %5040 = inttoptr i64 %5037 to i8*
  %5041 = load i8, i8* %5040
  %5042 = zext i8 %5041 to i64
  store i64 %5042, i64* %RAX.i715, align 8
  store %struct.Memory* %loadMem_46d0d0, %struct.Memory** %MEMORY
  %loadMem_46d0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 33
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %5045 to i64*
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 1
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %5048 to i32*
  %5049 = load i32, i32* %EAX.i713
  %5050 = zext i32 %5049 to i64
  %5051 = load i64, i64* %PC.i712
  %5052 = add i64 %5051, 3
  store i64 %5052, i64* %PC.i712
  %5053 = sub i32 %5049, 3
  %5054 = icmp ult i32 %5049, 3
  %5055 = zext i1 %5054 to i8
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5055, i8* %5056, align 1
  %5057 = and i32 %5053, 255
  %5058 = call i32 @llvm.ctpop.i32(i32 %5057)
  %5059 = trunc i32 %5058 to i8
  %5060 = and i8 %5059, 1
  %5061 = xor i8 %5060, 1
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5061, i8* %5062, align 1
  %5063 = xor i64 3, %5050
  %5064 = trunc i64 %5063 to i32
  %5065 = xor i32 %5064, %5053
  %5066 = lshr i32 %5065, 4
  %5067 = trunc i32 %5066 to i8
  %5068 = and i8 %5067, 1
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5068, i8* %5069, align 1
  %5070 = icmp eq i32 %5053, 0
  %5071 = zext i1 %5070 to i8
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5071, i8* %5072, align 1
  %5073 = lshr i32 %5053, 31
  %5074 = trunc i32 %5073 to i8
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5074, i8* %5075, align 1
  %5076 = lshr i32 %5049, 31
  %5077 = xor i32 %5073, %5076
  %5078 = add i32 %5077, %5076
  %5079 = icmp eq i32 %5078, 2
  %5080 = zext i1 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5080, i8* %5081, align 1
  store %struct.Memory* %loadMem_46d0d8, %struct.Memory** %MEMORY
  %loadMem_46d0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 33
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %5084 to i64*
  %5085 = load i64, i64* %PC.i711
  %5086 = add i64 %5085, 29
  %5087 = load i64, i64* %PC.i711
  %5088 = add i64 %5087, 6
  %5089 = load i64, i64* %PC.i711
  %5090 = add i64 %5089, 6
  store i64 %5090, i64* %PC.i711
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5092 = load i8, i8* %5091, align 1
  store i8 %5092, i8* %BRANCH_TAKEN, align 1
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5094 = icmp ne i8 %5092, 0
  %5095 = select i1 %5094, i64 %5086, i64 %5088
  store i64 %5095, i64* %5093, align 8
  store %struct.Memory* %loadMem_46d0db, %struct.Memory** %MEMORY
  %loadBr_46d0db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d0db = icmp eq i8 %loadBr_46d0db, 1
  br i1 %cmpBr_46d0db, label %block_.L_46d0f8, label %block_46d0e1

block_46d0e1:                                     ; preds = %block_.L_46d0c7
  %loadMem_46d0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 33
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %5098 to i64*
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 1
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %5101 to i64*
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 15
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %5104 to i64*
  %5105 = load i64, i64* %RBP.i710
  %5106 = sub i64 %5105, 16
  %5107 = load i64, i64* %PC.i708
  %5108 = add i64 %5107, 4
  store i64 %5108, i64* %PC.i708
  %5109 = inttoptr i64 %5106 to i64*
  %5110 = load i64, i64* %5109
  store i64 %5110, i64* %RAX.i709, align 8
  store %struct.Memory* %loadMem_46d0e1, %struct.Memory** %MEMORY
  %loadMem_46d0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5112 = getelementptr inbounds %struct.GPR, %struct.GPR* %5111, i32 0, i32 33
  %5113 = getelementptr inbounds %struct.Reg, %struct.Reg* %5112, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %5113 to i64*
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5115 = getelementptr inbounds %struct.GPR, %struct.GPR* %5114, i32 0, i32 5
  %5116 = getelementptr inbounds %struct.Reg, %struct.Reg* %5115, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %5116 to i64*
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 15
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %5119 to i64*
  %5120 = load i64, i64* %RBP.i707
  %5121 = sub i64 %5120, 24
  %5122 = load i64, i64* %PC.i705
  %5123 = add i64 %5122, 3
  store i64 %5123, i64* %PC.i705
  %5124 = inttoptr i64 %5121 to i32*
  %5125 = load i32, i32* %5124
  %5126 = zext i32 %5125 to i64
  store i64 %5126, i64* %RCX.i706, align 8
  store %struct.Memory* %loadMem_46d0e5, %struct.Memory** %MEMORY
  %loadMem_46d0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 33
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %5129 to i64*
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5131 = getelementptr inbounds %struct.GPR, %struct.GPR* %5130, i32 0, i32 5
  %5132 = getelementptr inbounds %struct.Reg, %struct.Reg* %5131, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %5132 to i64*
  %5133 = load i64, i64* %RCX.i704
  %5134 = load i64, i64* %PC.i703
  %5135 = add i64 %5134, 3
  store i64 %5135, i64* %PC.i703
  %5136 = trunc i64 %5133 to i32
  %5137 = sub i32 %5136, 20
  %5138 = zext i32 %5137 to i64
  store i64 %5138, i64* %RCX.i704, align 8
  %5139 = icmp ult i32 %5136, 20
  %5140 = zext i1 %5139 to i8
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5140, i8* %5141, align 1
  %5142 = and i32 %5137, 255
  %5143 = call i32 @llvm.ctpop.i32(i32 %5142)
  %5144 = trunc i32 %5143 to i8
  %5145 = and i8 %5144, 1
  %5146 = xor i8 %5145, 1
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5146, i8* %5147, align 1
  %5148 = xor i64 20, %5133
  %5149 = trunc i64 %5148 to i32
  %5150 = xor i32 %5149, %5137
  %5151 = lshr i32 %5150, 4
  %5152 = trunc i32 %5151 to i8
  %5153 = and i8 %5152, 1
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5153, i8* %5154, align 1
  %5155 = icmp eq i32 %5137, 0
  %5156 = zext i1 %5155 to i8
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5156, i8* %5157, align 1
  %5158 = lshr i32 %5137, 31
  %5159 = trunc i32 %5158 to i8
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5159, i8* %5160, align 1
  %5161 = lshr i32 %5136, 31
  %5162 = xor i32 %5158, %5161
  %5163 = add i32 %5162, %5161
  %5164 = icmp eq i32 %5163, 2
  %5165 = zext i1 %5164 to i8
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5165, i8* %5166, align 1
  store %struct.Memory* %loadMem_46d0e8, %struct.Memory** %MEMORY
  %loadMem_46d0eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 33
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %5169 to i64*
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 5
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %ECX.i701 = bitcast %union.anon* %5172 to i32*
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 7
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %RDX.i702 = bitcast %union.anon* %5175 to i64*
  %5176 = load i32, i32* %ECX.i701
  %5177 = zext i32 %5176 to i64
  %5178 = load i64, i64* %PC.i700
  %5179 = add i64 %5178, 3
  store i64 %5179, i64* %PC.i700
  %5180 = shl i64 %5177, 32
  %5181 = ashr exact i64 %5180, 32
  store i64 %5181, i64* %RDX.i702, align 8
  store %struct.Memory* %loadMem_46d0eb, %struct.Memory** %MEMORY
  %loadMem_46d0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5183 = getelementptr inbounds %struct.GPR, %struct.GPR* %5182, i32 0, i32 33
  %5184 = getelementptr inbounds %struct.Reg, %struct.Reg* %5183, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %5184 to i64*
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 1
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 7
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RDX.i699 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RAX.i698
  %5192 = load i64, i64* %RDX.i699
  %5193 = mul i64 %5192, 4
  %5194 = add i64 %5193, %5191
  %5195 = load i64, i64* %PC.i697
  %5196 = add i64 %5195, 4
  store i64 %5196, i64* %PC.i697
  %5197 = inttoptr i64 %5194 to i32*
  %5198 = load i32, i32* %5197
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5199, align 1
  %5200 = and i32 %5198, 255
  %5201 = call i32 @llvm.ctpop.i32(i32 %5200)
  %5202 = trunc i32 %5201 to i8
  %5203 = and i8 %5202, 1
  %5204 = xor i8 %5203, 1
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5204, i8* %5205, align 1
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5206, align 1
  %5207 = icmp eq i32 %5198, 0
  %5208 = zext i1 %5207 to i8
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5208, i8* %5209, align 1
  %5210 = lshr i32 %5198, 31
  %5211 = trunc i32 %5210 to i8
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5211, i8* %5212, align 1
  %5213 = lshr i32 %5198, 31
  %5214 = xor i32 %5210, %5213
  %5215 = add i32 %5214, %5213
  %5216 = icmp eq i32 %5215, 2
  %5217 = zext i1 %5216 to i8
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5217, i8* %5218, align 1
  store %struct.Memory* %loadMem_46d0ee, %struct.Memory** %MEMORY
  %loadMem_46d0f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5220 = getelementptr inbounds %struct.GPR, %struct.GPR* %5219, i32 0, i32 33
  %5221 = getelementptr inbounds %struct.Reg, %struct.Reg* %5220, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %5221 to i64*
  %5222 = load i64, i64* %PC.i696
  %5223 = add i64 %5222, 340
  %5224 = load i64, i64* %PC.i696
  %5225 = add i64 %5224, 6
  %5226 = load i64, i64* %PC.i696
  %5227 = add i64 %5226, 6
  store i64 %5227, i64* %PC.i696
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5229 = load i8, i8* %5228, align 1
  %5230 = icmp eq i8 %5229, 0
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5232 = load i8, i8* %5231, align 1
  %5233 = icmp ne i8 %5232, 0
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5235 = load i8, i8* %5234, align 1
  %5236 = icmp ne i8 %5235, 0
  %5237 = xor i1 %5233, %5236
  %5238 = xor i1 %5237, true
  %5239 = and i1 %5230, %5238
  %5240 = zext i1 %5239 to i8
  store i8 %5240, i8* %BRANCH_TAKEN, align 1
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5242 = select i1 %5239, i64 %5223, i64 %5225
  store i64 %5242, i64* %5241, align 8
  store %struct.Memory* %loadMem_46d0f2, %struct.Memory** %MEMORY
  %loadBr_46d0f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d0f2 = icmp eq i8 %loadBr_46d0f2, 1
  br i1 %cmpBr_46d0f2, label %block_.L_46d246, label %block_.L_46d0f8

block_.L_46d0f8:                                  ; preds = %block_46d0e1, %block_.L_46d0c7
  %loadMem_46d0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5244 = getelementptr inbounds %struct.GPR, %struct.GPR* %5243, i32 0, i32 33
  %5245 = getelementptr inbounds %struct.Reg, %struct.Reg* %5244, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %5245 to i64*
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5247 = getelementptr inbounds %struct.GPR, %struct.GPR* %5246, i32 0, i32 1
  %5248 = getelementptr inbounds %struct.Reg, %struct.Reg* %5247, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %5248 to i64*
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 15
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %RBP.i695 = bitcast %union.anon* %5251 to i64*
  %5252 = load i64, i64* %RBP.i695
  %5253 = sub i64 %5252, 24
  %5254 = load i64, i64* %PC.i693
  %5255 = add i64 %5254, 3
  store i64 %5255, i64* %PC.i693
  %5256 = inttoptr i64 %5253 to i32*
  %5257 = load i32, i32* %5256
  %5258 = zext i32 %5257 to i64
  store i64 %5258, i64* %RAX.i694, align 8
  store %struct.Memory* %loadMem_46d0f8, %struct.Memory** %MEMORY
  %loadMem_46d0fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 33
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %5261 to i64*
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5263 = getelementptr inbounds %struct.GPR, %struct.GPR* %5262, i32 0, i32 1
  %5264 = getelementptr inbounds %struct.Reg, %struct.Reg* %5263, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %5264 to i64*
  %5265 = load i64, i64* %RAX.i692
  %5266 = load i64, i64* %PC.i691
  %5267 = add i64 %5266, 3
  store i64 %5267, i64* %PC.i691
  %5268 = trunc i64 %5265 to i32
  %5269 = add i32 1, %5268
  %5270 = zext i32 %5269 to i64
  store i64 %5270, i64* %RAX.i692, align 8
  %5271 = icmp ult i32 %5269, %5268
  %5272 = icmp ult i32 %5269, 1
  %5273 = or i1 %5271, %5272
  %5274 = zext i1 %5273 to i8
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5274, i8* %5275, align 1
  %5276 = and i32 %5269, 255
  %5277 = call i32 @llvm.ctpop.i32(i32 %5276)
  %5278 = trunc i32 %5277 to i8
  %5279 = and i8 %5278, 1
  %5280 = xor i8 %5279, 1
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5280, i8* %5281, align 1
  %5282 = xor i64 1, %5265
  %5283 = trunc i64 %5282 to i32
  %5284 = xor i32 %5283, %5269
  %5285 = lshr i32 %5284, 4
  %5286 = trunc i32 %5285 to i8
  %5287 = and i8 %5286, 1
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5287, i8* %5288, align 1
  %5289 = icmp eq i32 %5269, 0
  %5290 = zext i1 %5289 to i8
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5290, i8* %5291, align 1
  %5292 = lshr i32 %5269, 31
  %5293 = trunc i32 %5292 to i8
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5293, i8* %5294, align 1
  %5295 = lshr i32 %5268, 31
  %5296 = xor i32 %5292, %5295
  %5297 = add i32 %5296, %5292
  %5298 = icmp eq i32 %5297, 2
  %5299 = zext i1 %5298 to i8
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5299, i8* %5300, align 1
  store %struct.Memory* %loadMem_46d0fb, %struct.Memory** %MEMORY
  %loadMem_46d0fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 33
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %5303 to i64*
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5305 = getelementptr inbounds %struct.GPR, %struct.GPR* %5304, i32 0, i32 1
  %5306 = getelementptr inbounds %struct.Reg, %struct.Reg* %5305, i32 0, i32 0
  %EAX.i689 = bitcast %union.anon* %5306 to i32*
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 5
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %RCX.i690 = bitcast %union.anon* %5309 to i64*
  %5310 = load i32, i32* %EAX.i689
  %5311 = zext i32 %5310 to i64
  %5312 = load i64, i64* %PC.i688
  %5313 = add i64 %5312, 3
  store i64 %5313, i64* %PC.i688
  %5314 = shl i64 %5311, 32
  %5315 = ashr exact i64 %5314, 32
  store i64 %5315, i64* %RCX.i690, align 8
  store %struct.Memory* %loadMem_46d0fe, %struct.Memory** %MEMORY
  %loadMem_46d101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 33
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %5318 to i64*
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 1
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %5321 to i64*
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5323 = getelementptr inbounds %struct.GPR, %struct.GPR* %5322, i32 0, i32 5
  %5324 = getelementptr inbounds %struct.Reg, %struct.Reg* %5323, i32 0, i32 0
  %RCX.i687 = bitcast %union.anon* %5324 to i64*
  %5325 = load i64, i64* %RCX.i687
  %5326 = add i64 %5325, 12099168
  %5327 = load i64, i64* %PC.i685
  %5328 = add i64 %5327, 8
  store i64 %5328, i64* %PC.i685
  %5329 = inttoptr i64 %5326 to i8*
  %5330 = load i8, i8* %5329
  %5331 = zext i8 %5330 to i64
  store i64 %5331, i64* %RAX.i686, align 8
  store %struct.Memory* %loadMem_46d101, %struct.Memory** %MEMORY
  %loadMem_46d109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 33
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %5334 to i64*
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 1
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %EAX.i684 = bitcast %union.anon* %5337 to i32*
  %5338 = load i32, i32* %EAX.i684
  %5339 = zext i32 %5338 to i64
  %5340 = load i64, i64* %PC.i683
  %5341 = add i64 %5340, 3
  store i64 %5341, i64* %PC.i683
  %5342 = sub i32 %5338, 3
  %5343 = icmp ult i32 %5338, 3
  %5344 = zext i1 %5343 to i8
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5344, i8* %5345, align 1
  %5346 = and i32 %5342, 255
  %5347 = call i32 @llvm.ctpop.i32(i32 %5346)
  %5348 = trunc i32 %5347 to i8
  %5349 = and i8 %5348, 1
  %5350 = xor i8 %5349, 1
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5350, i8* %5351, align 1
  %5352 = xor i64 3, %5339
  %5353 = trunc i64 %5352 to i32
  %5354 = xor i32 %5353, %5342
  %5355 = lshr i32 %5354, 4
  %5356 = trunc i32 %5355 to i8
  %5357 = and i8 %5356, 1
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5357, i8* %5358, align 1
  %5359 = icmp eq i32 %5342, 0
  %5360 = zext i1 %5359 to i8
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5360, i8* %5361, align 1
  %5362 = lshr i32 %5342, 31
  %5363 = trunc i32 %5362 to i8
  %5364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5363, i8* %5364, align 1
  %5365 = lshr i32 %5338, 31
  %5366 = xor i32 %5362, %5365
  %5367 = add i32 %5366, %5365
  %5368 = icmp eq i32 %5367, 2
  %5369 = zext i1 %5368 to i8
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5369, i8* %5370, align 1
  store %struct.Memory* %loadMem_46d109, %struct.Memory** %MEMORY
  %loadMem_46d10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5372 = getelementptr inbounds %struct.GPR, %struct.GPR* %5371, i32 0, i32 33
  %5373 = getelementptr inbounds %struct.Reg, %struct.Reg* %5372, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %5373 to i64*
  %5374 = load i64, i64* %PC.i682
  %5375 = add i64 %5374, 29
  %5376 = load i64, i64* %PC.i682
  %5377 = add i64 %5376, 6
  %5378 = load i64, i64* %PC.i682
  %5379 = add i64 %5378, 6
  store i64 %5379, i64* %PC.i682
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5381 = load i8, i8* %5380, align 1
  store i8 %5381, i8* %BRANCH_TAKEN, align 1
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5383 = icmp ne i8 %5381, 0
  %5384 = select i1 %5383, i64 %5375, i64 %5377
  store i64 %5384, i64* %5382, align 8
  store %struct.Memory* %loadMem_46d10c, %struct.Memory** %MEMORY
  %loadBr_46d10c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d10c = icmp eq i8 %loadBr_46d10c, 1
  br i1 %cmpBr_46d10c, label %block_.L_46d129, label %block_46d112

block_46d112:                                     ; preds = %block_.L_46d0f8
  %loadMem_46d112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 33
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %5387 to i64*
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5389 = getelementptr inbounds %struct.GPR, %struct.GPR* %5388, i32 0, i32 1
  %5390 = getelementptr inbounds %struct.Reg, %struct.Reg* %5389, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %5390 to i64*
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5392 = getelementptr inbounds %struct.GPR, %struct.GPR* %5391, i32 0, i32 15
  %5393 = getelementptr inbounds %struct.Reg, %struct.Reg* %5392, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %5393 to i64*
  %5394 = load i64, i64* %RBP.i681
  %5395 = sub i64 %5394, 16
  %5396 = load i64, i64* %PC.i679
  %5397 = add i64 %5396, 4
  store i64 %5397, i64* %PC.i679
  %5398 = inttoptr i64 %5395 to i64*
  %5399 = load i64, i64* %5398
  store i64 %5399, i64* %RAX.i680, align 8
  store %struct.Memory* %loadMem_46d112, %struct.Memory** %MEMORY
  %loadMem_46d116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 33
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 5
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RCX.i677 = bitcast %union.anon* %5405 to i64*
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5407 = getelementptr inbounds %struct.GPR, %struct.GPR* %5406, i32 0, i32 15
  %5408 = getelementptr inbounds %struct.Reg, %struct.Reg* %5407, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %5408 to i64*
  %5409 = load i64, i64* %RBP.i678
  %5410 = sub i64 %5409, 24
  %5411 = load i64, i64* %PC.i676
  %5412 = add i64 %5411, 3
  store i64 %5412, i64* %PC.i676
  %5413 = inttoptr i64 %5410 to i32*
  %5414 = load i32, i32* %5413
  %5415 = zext i32 %5414 to i64
  store i64 %5415, i64* %RCX.i677, align 8
  store %struct.Memory* %loadMem_46d116, %struct.Memory** %MEMORY
  %loadMem_46d119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5417 = getelementptr inbounds %struct.GPR, %struct.GPR* %5416, i32 0, i32 33
  %5418 = getelementptr inbounds %struct.Reg, %struct.Reg* %5417, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %5418 to i64*
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 5
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %RCX.i675 = bitcast %union.anon* %5421 to i64*
  %5422 = load i64, i64* %RCX.i675
  %5423 = load i64, i64* %PC.i674
  %5424 = add i64 %5423, 3
  store i64 %5424, i64* %PC.i674
  %5425 = trunc i64 %5422 to i32
  %5426 = add i32 1, %5425
  %5427 = zext i32 %5426 to i64
  store i64 %5427, i64* %RCX.i675, align 8
  %5428 = icmp ult i32 %5426, %5425
  %5429 = icmp ult i32 %5426, 1
  %5430 = or i1 %5428, %5429
  %5431 = zext i1 %5430 to i8
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5431, i8* %5432, align 1
  %5433 = and i32 %5426, 255
  %5434 = call i32 @llvm.ctpop.i32(i32 %5433)
  %5435 = trunc i32 %5434 to i8
  %5436 = and i8 %5435, 1
  %5437 = xor i8 %5436, 1
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5437, i8* %5438, align 1
  %5439 = xor i64 1, %5422
  %5440 = trunc i64 %5439 to i32
  %5441 = xor i32 %5440, %5426
  %5442 = lshr i32 %5441, 4
  %5443 = trunc i32 %5442 to i8
  %5444 = and i8 %5443, 1
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5444, i8* %5445, align 1
  %5446 = icmp eq i32 %5426, 0
  %5447 = zext i1 %5446 to i8
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5447, i8* %5448, align 1
  %5449 = lshr i32 %5426, 31
  %5450 = trunc i32 %5449 to i8
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5450, i8* %5451, align 1
  %5452 = lshr i32 %5425, 31
  %5453 = xor i32 %5449, %5452
  %5454 = add i32 %5453, %5449
  %5455 = icmp eq i32 %5454, 2
  %5456 = zext i1 %5455 to i8
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5456, i8* %5457, align 1
  store %struct.Memory* %loadMem_46d119, %struct.Memory** %MEMORY
  %loadMem_46d11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 33
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %5460 to i64*
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 5
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %ECX.i672 = bitcast %union.anon* %5463 to i32*
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5465 = getelementptr inbounds %struct.GPR, %struct.GPR* %5464, i32 0, i32 7
  %5466 = getelementptr inbounds %struct.Reg, %struct.Reg* %5465, i32 0, i32 0
  %RDX.i673 = bitcast %union.anon* %5466 to i64*
  %5467 = load i32, i32* %ECX.i672
  %5468 = zext i32 %5467 to i64
  %5469 = load i64, i64* %PC.i671
  %5470 = add i64 %5469, 3
  store i64 %5470, i64* %PC.i671
  %5471 = shl i64 %5468, 32
  %5472 = ashr exact i64 %5471, 32
  store i64 %5472, i64* %RDX.i673, align 8
  store %struct.Memory* %loadMem_46d11c, %struct.Memory** %MEMORY
  %loadMem_46d11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 33
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %5475 to i64*
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5477 = getelementptr inbounds %struct.GPR, %struct.GPR* %5476, i32 0, i32 1
  %5478 = getelementptr inbounds %struct.Reg, %struct.Reg* %5477, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %5478 to i64*
  %5479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5480 = getelementptr inbounds %struct.GPR, %struct.GPR* %5479, i32 0, i32 7
  %5481 = getelementptr inbounds %struct.Reg, %struct.Reg* %5480, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %5481 to i64*
  %5482 = load i64, i64* %RAX.i669
  %5483 = load i64, i64* %RDX.i670
  %5484 = mul i64 %5483, 4
  %5485 = add i64 %5484, %5482
  %5486 = load i64, i64* %PC.i668
  %5487 = add i64 %5486, 4
  store i64 %5487, i64* %PC.i668
  %5488 = inttoptr i64 %5485 to i32*
  %5489 = load i32, i32* %5488
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5490, align 1
  %5491 = and i32 %5489, 255
  %5492 = call i32 @llvm.ctpop.i32(i32 %5491)
  %5493 = trunc i32 %5492 to i8
  %5494 = and i8 %5493, 1
  %5495 = xor i8 %5494, 1
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5495, i8* %5496, align 1
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5497, align 1
  %5498 = icmp eq i32 %5489, 0
  %5499 = zext i1 %5498 to i8
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5499, i8* %5500, align 1
  %5501 = lshr i32 %5489, 31
  %5502 = trunc i32 %5501 to i8
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5502, i8* %5503, align 1
  %5504 = lshr i32 %5489, 31
  %5505 = xor i32 %5501, %5504
  %5506 = add i32 %5505, %5504
  %5507 = icmp eq i32 %5506, 2
  %5508 = zext i1 %5507 to i8
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5508, i8* %5509, align 1
  store %struct.Memory* %loadMem_46d11f, %struct.Memory** %MEMORY
  %loadMem_46d123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 33
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %5512 to i64*
  %5513 = load i64, i64* %PC.i667
  %5514 = add i64 %5513, 291
  %5515 = load i64, i64* %PC.i667
  %5516 = add i64 %5515, 6
  %5517 = load i64, i64* %PC.i667
  %5518 = add i64 %5517, 6
  store i64 %5518, i64* %PC.i667
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5520 = load i8, i8* %5519, align 1
  %5521 = icmp eq i8 %5520, 0
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5523 = load i8, i8* %5522, align 1
  %5524 = icmp ne i8 %5523, 0
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5526 = load i8, i8* %5525, align 1
  %5527 = icmp ne i8 %5526, 0
  %5528 = xor i1 %5524, %5527
  %5529 = xor i1 %5528, true
  %5530 = and i1 %5521, %5529
  %5531 = zext i1 %5530 to i8
  store i8 %5531, i8* %BRANCH_TAKEN, align 1
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5533 = select i1 %5530, i64 %5514, i64 %5516
  store i64 %5533, i64* %5532, align 8
  store %struct.Memory* %loadMem_46d123, %struct.Memory** %MEMORY
  %loadBr_46d123 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d123 = icmp eq i8 %loadBr_46d123, 1
  br i1 %cmpBr_46d123, label %block_.L_46d246, label %block_.L_46d129

block_.L_46d129:                                  ; preds = %block_46d112, %block_.L_46d0f8
  %loadMem_46d129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 33
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %5536 to i64*
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 1
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %5539 to i64*
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 15
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %5542 to i64*
  %5543 = load i64, i64* %RBP.i666
  %5544 = sub i64 %5543, 24
  %5545 = load i64, i64* %PC.i664
  %5546 = add i64 %5545, 3
  store i64 %5546, i64* %PC.i664
  %5547 = inttoptr i64 %5544 to i32*
  %5548 = load i32, i32* %5547
  %5549 = zext i32 %5548 to i64
  store i64 %5549, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_46d129, %struct.Memory** %MEMORY
  %loadMem_46d12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 33
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %5552 to i64*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 1
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %5555 to i64*
  %5556 = load i64, i64* %RAX.i663
  %5557 = load i64, i64* %PC.i662
  %5558 = add i64 %5557, 3
  store i64 %5558, i64* %PC.i662
  %5559 = trunc i64 %5556 to i32
  %5560 = add i32 20, %5559
  %5561 = zext i32 %5560 to i64
  store i64 %5561, i64* %RAX.i663, align 8
  %5562 = icmp ult i32 %5560, %5559
  %5563 = icmp ult i32 %5560, 20
  %5564 = or i1 %5562, %5563
  %5565 = zext i1 %5564 to i8
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5565, i8* %5566, align 1
  %5567 = and i32 %5560, 255
  %5568 = call i32 @llvm.ctpop.i32(i32 %5567)
  %5569 = trunc i32 %5568 to i8
  %5570 = and i8 %5569, 1
  %5571 = xor i8 %5570, 1
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5571, i8* %5572, align 1
  %5573 = xor i64 20, %5556
  %5574 = trunc i64 %5573 to i32
  %5575 = xor i32 %5574, %5560
  %5576 = lshr i32 %5575, 4
  %5577 = trunc i32 %5576 to i8
  %5578 = and i8 %5577, 1
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5578, i8* %5579, align 1
  %5580 = icmp eq i32 %5560, 0
  %5581 = zext i1 %5580 to i8
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5581, i8* %5582, align 1
  %5583 = lshr i32 %5560, 31
  %5584 = trunc i32 %5583 to i8
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5584, i8* %5585, align 1
  %5586 = lshr i32 %5559, 31
  %5587 = xor i32 %5583, %5586
  %5588 = add i32 %5587, %5583
  %5589 = icmp eq i32 %5588, 2
  %5590 = zext i1 %5589 to i8
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5590, i8* %5591, align 1
  store %struct.Memory* %loadMem_46d12c, %struct.Memory** %MEMORY
  %loadMem_46d12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5593 = getelementptr inbounds %struct.GPR, %struct.GPR* %5592, i32 0, i32 33
  %5594 = getelementptr inbounds %struct.Reg, %struct.Reg* %5593, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %5594 to i64*
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 1
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %EAX.i660 = bitcast %union.anon* %5597 to i32*
  %5598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5599 = getelementptr inbounds %struct.GPR, %struct.GPR* %5598, i32 0, i32 5
  %5600 = getelementptr inbounds %struct.Reg, %struct.Reg* %5599, i32 0, i32 0
  %RCX.i661 = bitcast %union.anon* %5600 to i64*
  %5601 = load i32, i32* %EAX.i660
  %5602 = zext i32 %5601 to i64
  %5603 = load i64, i64* %PC.i659
  %5604 = add i64 %5603, 3
  store i64 %5604, i64* %PC.i659
  %5605 = shl i64 %5602, 32
  %5606 = ashr exact i64 %5605, 32
  store i64 %5606, i64* %RCX.i661, align 8
  store %struct.Memory* %loadMem_46d12f, %struct.Memory** %MEMORY
  %loadMem_46d132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 33
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %5609 to i64*
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 1
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %5612 to i64*
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5614 = getelementptr inbounds %struct.GPR, %struct.GPR* %5613, i32 0, i32 5
  %5615 = getelementptr inbounds %struct.Reg, %struct.Reg* %5614, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %5615 to i64*
  %5616 = load i64, i64* %RCX.i658
  %5617 = add i64 %5616, 12099168
  %5618 = load i64, i64* %PC.i656
  %5619 = add i64 %5618, 8
  store i64 %5619, i64* %PC.i656
  %5620 = inttoptr i64 %5617 to i8*
  %5621 = load i8, i8* %5620
  %5622 = zext i8 %5621 to i64
  store i64 %5622, i64* %RAX.i657, align 8
  store %struct.Memory* %loadMem_46d132, %struct.Memory** %MEMORY
  %loadMem_46d13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 33
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5625 to i64*
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5627 = getelementptr inbounds %struct.GPR, %struct.GPR* %5626, i32 0, i32 1
  %5628 = getelementptr inbounds %struct.Reg, %struct.Reg* %5627, i32 0, i32 0
  %EAX.i655 = bitcast %union.anon* %5628 to i32*
  %5629 = load i32, i32* %EAX.i655
  %5630 = zext i32 %5629 to i64
  %5631 = load i64, i64* %PC.i654
  %5632 = add i64 %5631, 3
  store i64 %5632, i64* %PC.i654
  %5633 = sub i32 %5629, 3
  %5634 = icmp ult i32 %5629, 3
  %5635 = zext i1 %5634 to i8
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5635, i8* %5636, align 1
  %5637 = and i32 %5633, 255
  %5638 = call i32 @llvm.ctpop.i32(i32 %5637)
  %5639 = trunc i32 %5638 to i8
  %5640 = and i8 %5639, 1
  %5641 = xor i8 %5640, 1
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5641, i8* %5642, align 1
  %5643 = xor i64 3, %5630
  %5644 = trunc i64 %5643 to i32
  %5645 = xor i32 %5644, %5633
  %5646 = lshr i32 %5645, 4
  %5647 = trunc i32 %5646 to i8
  %5648 = and i8 %5647, 1
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5648, i8* %5649, align 1
  %5650 = icmp eq i32 %5633, 0
  %5651 = zext i1 %5650 to i8
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5651, i8* %5652, align 1
  %5653 = lshr i32 %5633, 31
  %5654 = trunc i32 %5653 to i8
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5654, i8* %5655, align 1
  %5656 = lshr i32 %5629, 31
  %5657 = xor i32 %5653, %5656
  %5658 = add i32 %5657, %5656
  %5659 = icmp eq i32 %5658, 2
  %5660 = zext i1 %5659 to i8
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5660, i8* %5661, align 1
  store %struct.Memory* %loadMem_46d13a, %struct.Memory** %MEMORY
  %loadMem_46d13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 33
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %5664 to i64*
  %5665 = load i64, i64* %PC.i653
  %5666 = add i64 %5665, 50
  %5667 = load i64, i64* %PC.i653
  %5668 = add i64 %5667, 6
  %5669 = load i64, i64* %PC.i653
  %5670 = add i64 %5669, 6
  store i64 %5670, i64* %PC.i653
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5672 = load i8, i8* %5671, align 1
  store i8 %5672, i8* %BRANCH_TAKEN, align 1
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5674 = icmp ne i8 %5672, 0
  %5675 = select i1 %5674, i64 %5666, i64 %5668
  store i64 %5675, i64* %5673, align 8
  store %struct.Memory* %loadMem_46d13d, %struct.Memory** %MEMORY
  %loadBr_46d13d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d13d = icmp eq i8 %loadBr_46d13d, 1
  br i1 %cmpBr_46d13d, label %block_.L_46d16f, label %block_46d143

block_46d143:                                     ; preds = %block_.L_46d129
  %loadMem_46d143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 33
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %5678 to i64*
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 1
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %5681 to i64*
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5683 = getelementptr inbounds %struct.GPR, %struct.GPR* %5682, i32 0, i32 15
  %5684 = getelementptr inbounds %struct.Reg, %struct.Reg* %5683, i32 0, i32 0
  %RBP.i652 = bitcast %union.anon* %5684 to i64*
  %5685 = load i64, i64* %RBP.i652
  %5686 = sub i64 %5685, 16
  %5687 = load i64, i64* %PC.i650
  %5688 = add i64 %5687, 4
  store i64 %5688, i64* %PC.i650
  %5689 = inttoptr i64 %5686 to i64*
  %5690 = load i64, i64* %5689
  store i64 %5690, i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_46d143, %struct.Memory** %MEMORY
  %loadMem_46d147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5692 = getelementptr inbounds %struct.GPR, %struct.GPR* %5691, i32 0, i32 33
  %5693 = getelementptr inbounds %struct.Reg, %struct.Reg* %5692, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %5693 to i64*
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 5
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %RCX.i648 = bitcast %union.anon* %5696 to i64*
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 15
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %5699 to i64*
  %5700 = load i64, i64* %RBP.i649
  %5701 = sub i64 %5700, 24
  %5702 = load i64, i64* %PC.i647
  %5703 = add i64 %5702, 3
  store i64 %5703, i64* %PC.i647
  %5704 = inttoptr i64 %5701 to i32*
  %5705 = load i32, i32* %5704
  %5706 = zext i32 %5705 to i64
  store i64 %5706, i64* %RCX.i648, align 8
  store %struct.Memory* %loadMem_46d147, %struct.Memory** %MEMORY
  %loadMem_46d14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 33
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %5709 to i64*
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 5
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %RCX.i646 = bitcast %union.anon* %5712 to i64*
  %5713 = load i64, i64* %RCX.i646
  %5714 = load i64, i64* %PC.i645
  %5715 = add i64 %5714, 3
  store i64 %5715, i64* %PC.i645
  %5716 = trunc i64 %5713 to i32
  %5717 = add i32 20, %5716
  %5718 = zext i32 %5717 to i64
  store i64 %5718, i64* %RCX.i646, align 8
  %5719 = icmp ult i32 %5717, %5716
  %5720 = icmp ult i32 %5717, 20
  %5721 = or i1 %5719, %5720
  %5722 = zext i1 %5721 to i8
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5722, i8* %5723, align 1
  %5724 = and i32 %5717, 255
  %5725 = call i32 @llvm.ctpop.i32(i32 %5724)
  %5726 = trunc i32 %5725 to i8
  %5727 = and i8 %5726, 1
  %5728 = xor i8 %5727, 1
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5728, i8* %5729, align 1
  %5730 = xor i64 20, %5713
  %5731 = trunc i64 %5730 to i32
  %5732 = xor i32 %5731, %5717
  %5733 = lshr i32 %5732, 4
  %5734 = trunc i32 %5733 to i8
  %5735 = and i8 %5734, 1
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5735, i8* %5736, align 1
  %5737 = icmp eq i32 %5717, 0
  %5738 = zext i1 %5737 to i8
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5738, i8* %5739, align 1
  %5740 = lshr i32 %5717, 31
  %5741 = trunc i32 %5740 to i8
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5741, i8* %5742, align 1
  %5743 = lshr i32 %5716, 31
  %5744 = xor i32 %5740, %5743
  %5745 = add i32 %5744, %5740
  %5746 = icmp eq i32 %5745, 2
  %5747 = zext i1 %5746 to i8
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5747, i8* %5748, align 1
  store %struct.Memory* %loadMem_46d14a, %struct.Memory** %MEMORY
  %loadMem_46d14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5750 = getelementptr inbounds %struct.GPR, %struct.GPR* %5749, i32 0, i32 33
  %5751 = getelementptr inbounds %struct.Reg, %struct.Reg* %5750, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %5751 to i64*
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5753 = getelementptr inbounds %struct.GPR, %struct.GPR* %5752, i32 0, i32 5
  %5754 = getelementptr inbounds %struct.Reg, %struct.Reg* %5753, i32 0, i32 0
  %ECX.i643 = bitcast %union.anon* %5754 to i32*
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5756 = getelementptr inbounds %struct.GPR, %struct.GPR* %5755, i32 0, i32 7
  %5757 = getelementptr inbounds %struct.Reg, %struct.Reg* %5756, i32 0, i32 0
  %RDX.i644 = bitcast %union.anon* %5757 to i64*
  %5758 = load i32, i32* %ECX.i643
  %5759 = zext i32 %5758 to i64
  %5760 = load i64, i64* %PC.i642
  %5761 = add i64 %5760, 3
  store i64 %5761, i64* %PC.i642
  %5762 = shl i64 %5759, 32
  %5763 = ashr exact i64 %5762, 32
  store i64 %5763, i64* %RDX.i644, align 8
  store %struct.Memory* %loadMem_46d14d, %struct.Memory** %MEMORY
  %loadMem_46d150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 33
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %5766 to i64*
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5768 = getelementptr inbounds %struct.GPR, %struct.GPR* %5767, i32 0, i32 1
  %5769 = getelementptr inbounds %struct.Reg, %struct.Reg* %5768, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %5769 to i64*
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 7
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %RDX.i641 = bitcast %union.anon* %5772 to i64*
  %5773 = load i64, i64* %RAX.i640
  %5774 = load i64, i64* %RDX.i641
  %5775 = mul i64 %5774, 4
  %5776 = add i64 %5775, %5773
  %5777 = load i64, i64* %PC.i639
  %5778 = add i64 %5777, 4
  store i64 %5778, i64* %PC.i639
  %5779 = inttoptr i64 %5776 to i32*
  %5780 = load i32, i32* %5779
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5781, align 1
  %5782 = and i32 %5780, 255
  %5783 = call i32 @llvm.ctpop.i32(i32 %5782)
  %5784 = trunc i32 %5783 to i8
  %5785 = and i8 %5784, 1
  %5786 = xor i8 %5785, 1
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5786, i8* %5787, align 1
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5788, align 1
  %5789 = icmp eq i32 %5780, 0
  %5790 = zext i1 %5789 to i8
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5790, i8* %5791, align 1
  %5792 = lshr i32 %5780, 31
  %5793 = trunc i32 %5792 to i8
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5793, i8* %5794, align 1
  %5795 = lshr i32 %5780, 31
  %5796 = xor i32 %5792, %5795
  %5797 = add i32 %5796, %5795
  %5798 = icmp eq i32 %5797, 2
  %5799 = zext i1 %5798 to i8
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5799, i8* %5800, align 1
  store %struct.Memory* %loadMem_46d150, %struct.Memory** %MEMORY
  %loadMem_46d154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 33
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %5803 to i64*
  %5804 = load i64, i64* %PC.i638
  %5805 = add i64 %5804, 27
  %5806 = load i64, i64* %PC.i638
  %5807 = add i64 %5806, 6
  %5808 = load i64, i64* %PC.i638
  %5809 = add i64 %5808, 6
  store i64 %5809, i64* %PC.i638
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5811 = load i8, i8* %5810, align 1
  %5812 = icmp ne i8 %5811, 0
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5814 = load i8, i8* %5813, align 1
  %5815 = icmp ne i8 %5814, 0
  %5816 = xor i1 %5812, %5815
  %5817 = xor i1 %5816, true
  %5818 = zext i1 %5817 to i8
  store i8 %5818, i8* %BRANCH_TAKEN, align 1
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5820 = select i1 %5816, i64 %5807, i64 %5805
  store i64 %5820, i64* %5819, align 8
  store %struct.Memory* %loadMem_46d154, %struct.Memory** %MEMORY
  %loadBr_46d154 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d154 = icmp eq i8 %loadBr_46d154, 1
  br i1 %cmpBr_46d154, label %block_.L_46d16f, label %block_46d15a

block_46d15a:                                     ; preds = %block_46d143
  %loadMem_46d15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5822 = getelementptr inbounds %struct.GPR, %struct.GPR* %5821, i32 0, i32 33
  %5823 = getelementptr inbounds %struct.Reg, %struct.Reg* %5822, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %5823 to i64*
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 1
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %5826 to i64*
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5828 = getelementptr inbounds %struct.GPR, %struct.GPR* %5827, i32 0, i32 15
  %5829 = getelementptr inbounds %struct.Reg, %struct.Reg* %5828, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %5829 to i64*
  %5830 = load i64, i64* %RBP.i637
  %5831 = sub i64 %5830, 24
  %5832 = load i64, i64* %PC.i635
  %5833 = add i64 %5832, 4
  store i64 %5833, i64* %PC.i635
  %5834 = inttoptr i64 %5831 to i32*
  %5835 = load i32, i32* %5834
  %5836 = sext i32 %5835 to i64
  store i64 %5836, i64* %RAX.i636, align 8
  store %struct.Memory* %loadMem_46d15a, %struct.Memory** %MEMORY
  %loadMem_46d15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 33
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %5839 to i64*
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5841 = getelementptr inbounds %struct.GPR, %struct.GPR* %5840, i32 0, i32 1
  %5842 = getelementptr inbounds %struct.Reg, %struct.Reg* %5841, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %5842 to i64*
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5844 = getelementptr inbounds %struct.GPR, %struct.GPR* %5843, i32 0, i32 5
  %5845 = getelementptr inbounds %struct.Reg, %struct.Reg* %5844, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %5845 to i64*
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5847 = getelementptr inbounds %struct.GPR, %struct.GPR* %5846, i32 0, i32 15
  %5848 = getelementptr inbounds %struct.Reg, %struct.Reg* %5847, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %5848 to i64*
  %5849 = load i64, i64* %RBP.i634
  %5850 = load i64, i64* %RAX.i632
  %5851 = mul i64 %5850, 4
  %5852 = add i64 %5849, -1632
  %5853 = add i64 %5852, %5851
  %5854 = load i64, i64* %PC.i631
  %5855 = add i64 %5854, 7
  store i64 %5855, i64* %PC.i631
  %5856 = inttoptr i64 %5853 to i32*
  %5857 = load i32, i32* %5856
  %5858 = zext i32 %5857 to i64
  store i64 %5858, i64* %RCX.i633, align 8
  store %struct.Memory* %loadMem_46d15e, %struct.Memory** %MEMORY
  %loadMem_46d165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5860 = getelementptr inbounds %struct.GPR, %struct.GPR* %5859, i32 0, i32 33
  %5861 = getelementptr inbounds %struct.Reg, %struct.Reg* %5860, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %5861 to i64*
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 5
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %RCX.i630 = bitcast %union.anon* %5864 to i64*
  %5865 = load i64, i64* %RCX.i630
  %5866 = load i64, i64* %PC.i629
  %5867 = add i64 %5866, 3
  store i64 %5867, i64* %PC.i629
  %5868 = trunc i64 %5865 to i32
  %5869 = add i32 -1, %5868
  %5870 = zext i32 %5869 to i64
  store i64 %5870, i64* %RCX.i630, align 8
  %5871 = icmp ult i32 %5869, %5868
  %5872 = icmp ult i32 %5869, -1
  %5873 = or i1 %5871, %5872
  %5874 = zext i1 %5873 to i8
  %5875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5874, i8* %5875, align 1
  %5876 = and i32 %5869, 255
  %5877 = call i32 @llvm.ctpop.i32(i32 %5876)
  %5878 = trunc i32 %5877 to i8
  %5879 = and i8 %5878, 1
  %5880 = xor i8 %5879, 1
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5880, i8* %5881, align 1
  %5882 = xor i64 -1, %5865
  %5883 = trunc i64 %5882 to i32
  %5884 = xor i32 %5883, %5869
  %5885 = lshr i32 %5884, 4
  %5886 = trunc i32 %5885 to i8
  %5887 = and i8 %5886, 1
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5887, i8* %5888, align 1
  %5889 = icmp eq i32 %5869, 0
  %5890 = zext i1 %5889 to i8
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5890, i8* %5891, align 1
  %5892 = lshr i32 %5869, 31
  %5893 = trunc i32 %5892 to i8
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5893, i8* %5894, align 1
  %5895 = lshr i32 %5868, 31
  %5896 = xor i32 %5892, %5895
  %5897 = xor i32 %5892, 1
  %5898 = add i32 %5896, %5897
  %5899 = icmp eq i32 %5898, 2
  %5900 = zext i1 %5899 to i8
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5900, i8* %5901, align 1
  store %struct.Memory* %loadMem_46d165, %struct.Memory** %MEMORY
  %loadMem_46d168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5903 = getelementptr inbounds %struct.GPR, %struct.GPR* %5902, i32 0, i32 33
  %5904 = getelementptr inbounds %struct.Reg, %struct.Reg* %5903, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5904 to i64*
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5906 = getelementptr inbounds %struct.GPR, %struct.GPR* %5905, i32 0, i32 5
  %5907 = getelementptr inbounds %struct.Reg, %struct.Reg* %5906, i32 0, i32 0
  %ECX.i626 = bitcast %union.anon* %5907 to i32*
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 1
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 15
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %5913 to i64*
  %5914 = load i64, i64* %RBP.i628
  %5915 = load i64, i64* %RAX.i627
  %5916 = mul i64 %5915, 4
  %5917 = add i64 %5914, -1632
  %5918 = add i64 %5917, %5916
  %5919 = load i32, i32* %ECX.i626
  %5920 = zext i32 %5919 to i64
  %5921 = load i64, i64* %PC.i625
  %5922 = add i64 %5921, 7
  store i64 %5922, i64* %PC.i625
  %5923 = inttoptr i64 %5918 to i32*
  store i32 %5919, i32* %5923
  store %struct.Memory* %loadMem_46d168, %struct.Memory** %MEMORY
  br label %block_.L_46d16f

block_.L_46d16f:                                  ; preds = %block_46d15a, %block_46d143, %block_.L_46d129
  %loadMem_46d16f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 33
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %5926 to i64*
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5928 = getelementptr inbounds %struct.GPR, %struct.GPR* %5927, i32 0, i32 1
  %5929 = getelementptr inbounds %struct.Reg, %struct.Reg* %5928, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %5929 to i64*
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5931 = getelementptr inbounds %struct.GPR, %struct.GPR* %5930, i32 0, i32 15
  %5932 = getelementptr inbounds %struct.Reg, %struct.Reg* %5931, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %5932 to i64*
  %5933 = load i64, i64* %RBP.i624
  %5934 = sub i64 %5933, 24
  %5935 = load i64, i64* %PC.i622
  %5936 = add i64 %5935, 3
  store i64 %5936, i64* %PC.i622
  %5937 = inttoptr i64 %5934 to i32*
  %5938 = load i32, i32* %5937
  %5939 = zext i32 %5938 to i64
  store i64 %5939, i64* %RAX.i623, align 8
  store %struct.Memory* %loadMem_46d16f, %struct.Memory** %MEMORY
  %loadMem_46d172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5941 = getelementptr inbounds %struct.GPR, %struct.GPR* %5940, i32 0, i32 33
  %5942 = getelementptr inbounds %struct.Reg, %struct.Reg* %5941, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %5942 to i64*
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5944 = getelementptr inbounds %struct.GPR, %struct.GPR* %5943, i32 0, i32 1
  %5945 = getelementptr inbounds %struct.Reg, %struct.Reg* %5944, i32 0, i32 0
  %RAX.i621 = bitcast %union.anon* %5945 to i64*
  %5946 = load i64, i64* %RAX.i621
  %5947 = load i64, i64* %PC.i620
  %5948 = add i64 %5947, 3
  store i64 %5948, i64* %PC.i620
  %5949 = trunc i64 %5946 to i32
  %5950 = sub i32 %5949, 1
  %5951 = zext i32 %5950 to i64
  store i64 %5951, i64* %RAX.i621, align 8
  %5952 = icmp ult i32 %5949, 1
  %5953 = zext i1 %5952 to i8
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5953, i8* %5954, align 1
  %5955 = and i32 %5950, 255
  %5956 = call i32 @llvm.ctpop.i32(i32 %5955)
  %5957 = trunc i32 %5956 to i8
  %5958 = and i8 %5957, 1
  %5959 = xor i8 %5958, 1
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5959, i8* %5960, align 1
  %5961 = xor i64 1, %5946
  %5962 = trunc i64 %5961 to i32
  %5963 = xor i32 %5962, %5950
  %5964 = lshr i32 %5963, 4
  %5965 = trunc i32 %5964 to i8
  %5966 = and i8 %5965, 1
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5966, i8* %5967, align 1
  %5968 = icmp eq i32 %5950, 0
  %5969 = zext i1 %5968 to i8
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5969, i8* %5970, align 1
  %5971 = lshr i32 %5950, 31
  %5972 = trunc i32 %5971 to i8
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5972, i8* %5973, align 1
  %5974 = lshr i32 %5949, 31
  %5975 = xor i32 %5971, %5974
  %5976 = add i32 %5975, %5974
  %5977 = icmp eq i32 %5976, 2
  %5978 = zext i1 %5977 to i8
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5978, i8* %5979, align 1
  store %struct.Memory* %loadMem_46d172, %struct.Memory** %MEMORY
  %loadMem_46d175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 33
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 1
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %EAX.i618 = bitcast %union.anon* %5985 to i32*
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 5
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %5988 to i64*
  %5989 = load i32, i32* %EAX.i618
  %5990 = zext i32 %5989 to i64
  %5991 = load i64, i64* %PC.i617
  %5992 = add i64 %5991, 3
  store i64 %5992, i64* %PC.i617
  %5993 = shl i64 %5990, 32
  %5994 = ashr exact i64 %5993, 32
  store i64 %5994, i64* %RCX.i619, align 8
  store %struct.Memory* %loadMem_46d175, %struct.Memory** %MEMORY
  %loadMem_46d178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 1
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 5
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %RCX.i616
  %6005 = add i64 %6004, 12099168
  %6006 = load i64, i64* %PC.i614
  %6007 = add i64 %6006, 8
  store i64 %6007, i64* %PC.i614
  %6008 = inttoptr i64 %6005 to i8*
  %6009 = load i8, i8* %6008
  %6010 = zext i8 %6009 to i64
  store i64 %6010, i64* %RAX.i615, align 8
  store %struct.Memory* %loadMem_46d178, %struct.Memory** %MEMORY
  %loadMem_46d180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 1
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %EAX.i613 = bitcast %union.anon* %6016 to i32*
  %6017 = load i32, i32* %EAX.i613
  %6018 = zext i32 %6017 to i64
  %6019 = load i64, i64* %PC.i612
  %6020 = add i64 %6019, 3
  store i64 %6020, i64* %PC.i612
  %6021 = sub i32 %6017, 3
  %6022 = icmp ult i32 %6017, 3
  %6023 = zext i1 %6022 to i8
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6023, i8* %6024, align 1
  %6025 = and i32 %6021, 255
  %6026 = call i32 @llvm.ctpop.i32(i32 %6025)
  %6027 = trunc i32 %6026 to i8
  %6028 = and i8 %6027, 1
  %6029 = xor i8 %6028, 1
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6029, i8* %6030, align 1
  %6031 = xor i64 3, %6018
  %6032 = trunc i64 %6031 to i32
  %6033 = xor i32 %6032, %6021
  %6034 = lshr i32 %6033, 4
  %6035 = trunc i32 %6034 to i8
  %6036 = and i8 %6035, 1
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6036, i8* %6037, align 1
  %6038 = icmp eq i32 %6021, 0
  %6039 = zext i1 %6038 to i8
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6039, i8* %6040, align 1
  %6041 = lshr i32 %6021, 31
  %6042 = trunc i32 %6041 to i8
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6042, i8* %6043, align 1
  %6044 = lshr i32 %6017, 31
  %6045 = xor i32 %6041, %6044
  %6046 = add i32 %6045, %6044
  %6047 = icmp eq i32 %6046, 2
  %6048 = zext i1 %6047 to i8
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6048, i8* %6049, align 1
  store %struct.Memory* %loadMem_46d180, %struct.Memory** %MEMORY
  %loadMem_46d183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 33
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %6052 to i64*
  %6053 = load i64, i64* %PC.i611
  %6054 = add i64 %6053, 50
  %6055 = load i64, i64* %PC.i611
  %6056 = add i64 %6055, 6
  %6057 = load i64, i64* %PC.i611
  %6058 = add i64 %6057, 6
  store i64 %6058, i64* %PC.i611
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6060 = load i8, i8* %6059, align 1
  store i8 %6060, i8* %BRANCH_TAKEN, align 1
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6062 = icmp ne i8 %6060, 0
  %6063 = select i1 %6062, i64 %6054, i64 %6056
  store i64 %6063, i64* %6061, align 8
  store %struct.Memory* %loadMem_46d183, %struct.Memory** %MEMORY
  %loadBr_46d183 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d183 = icmp eq i8 %loadBr_46d183, 1
  br i1 %cmpBr_46d183, label %block_.L_46d1b5, label %block_46d189

block_46d189:                                     ; preds = %block_.L_46d16f
  %loadMem_46d189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 33
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %6066 to i64*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 1
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %6069 to i64*
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 15
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %6072 to i64*
  %6073 = load i64, i64* %RBP.i610
  %6074 = sub i64 %6073, 16
  %6075 = load i64, i64* %PC.i608
  %6076 = add i64 %6075, 4
  store i64 %6076, i64* %PC.i608
  %6077 = inttoptr i64 %6074 to i64*
  %6078 = load i64, i64* %6077
  store i64 %6078, i64* %RAX.i609, align 8
  store %struct.Memory* %loadMem_46d189, %struct.Memory** %MEMORY
  %loadMem_46d18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 33
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 5
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %6084 to i64*
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 15
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %6087 to i64*
  %6088 = load i64, i64* %RBP.i607
  %6089 = sub i64 %6088, 24
  %6090 = load i64, i64* %PC.i605
  %6091 = add i64 %6090, 3
  store i64 %6091, i64* %PC.i605
  %6092 = inttoptr i64 %6089 to i32*
  %6093 = load i32, i32* %6092
  %6094 = zext i32 %6093 to i64
  store i64 %6094, i64* %RCX.i606, align 8
  store %struct.Memory* %loadMem_46d18d, %struct.Memory** %MEMORY
  %loadMem_46d190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 33
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %6097 to i64*
  %6098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6099 = getelementptr inbounds %struct.GPR, %struct.GPR* %6098, i32 0, i32 5
  %6100 = getelementptr inbounds %struct.Reg, %struct.Reg* %6099, i32 0, i32 0
  %RCX.i604 = bitcast %union.anon* %6100 to i64*
  %6101 = load i64, i64* %RCX.i604
  %6102 = load i64, i64* %PC.i603
  %6103 = add i64 %6102, 3
  store i64 %6103, i64* %PC.i603
  %6104 = trunc i64 %6101 to i32
  %6105 = sub i32 %6104, 1
  %6106 = zext i32 %6105 to i64
  store i64 %6106, i64* %RCX.i604, align 8
  %6107 = icmp ult i32 %6104, 1
  %6108 = zext i1 %6107 to i8
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6108, i8* %6109, align 1
  %6110 = and i32 %6105, 255
  %6111 = call i32 @llvm.ctpop.i32(i32 %6110)
  %6112 = trunc i32 %6111 to i8
  %6113 = and i8 %6112, 1
  %6114 = xor i8 %6113, 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6114, i8* %6115, align 1
  %6116 = xor i64 1, %6101
  %6117 = trunc i64 %6116 to i32
  %6118 = xor i32 %6117, %6105
  %6119 = lshr i32 %6118, 4
  %6120 = trunc i32 %6119 to i8
  %6121 = and i8 %6120, 1
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6121, i8* %6122, align 1
  %6123 = icmp eq i32 %6105, 0
  %6124 = zext i1 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6124, i8* %6125, align 1
  %6126 = lshr i32 %6105, 31
  %6127 = trunc i32 %6126 to i8
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6127, i8* %6128, align 1
  %6129 = lshr i32 %6104, 31
  %6130 = xor i32 %6126, %6129
  %6131 = add i32 %6130, %6129
  %6132 = icmp eq i32 %6131, 2
  %6133 = zext i1 %6132 to i8
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6133, i8* %6134, align 1
  store %struct.Memory* %loadMem_46d190, %struct.Memory** %MEMORY
  %loadMem_46d193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 33
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %6137 to i64*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 5
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %ECX.i601 = bitcast %union.anon* %6140 to i32*
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6142 = getelementptr inbounds %struct.GPR, %struct.GPR* %6141, i32 0, i32 7
  %6143 = getelementptr inbounds %struct.Reg, %struct.Reg* %6142, i32 0, i32 0
  %RDX.i602 = bitcast %union.anon* %6143 to i64*
  %6144 = load i32, i32* %ECX.i601
  %6145 = zext i32 %6144 to i64
  %6146 = load i64, i64* %PC.i600
  %6147 = add i64 %6146, 3
  store i64 %6147, i64* %PC.i600
  %6148 = shl i64 %6145, 32
  %6149 = ashr exact i64 %6148, 32
  store i64 %6149, i64* %RDX.i602, align 8
  store %struct.Memory* %loadMem_46d193, %struct.Memory** %MEMORY
  %loadMem_46d196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 33
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %6152 to i64*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 1
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %6155 to i64*
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6157 = getelementptr inbounds %struct.GPR, %struct.GPR* %6156, i32 0, i32 7
  %6158 = getelementptr inbounds %struct.Reg, %struct.Reg* %6157, i32 0, i32 0
  %RDX.i599 = bitcast %union.anon* %6158 to i64*
  %6159 = load i64, i64* %RAX.i598
  %6160 = load i64, i64* %RDX.i599
  %6161 = mul i64 %6160, 4
  %6162 = add i64 %6161, %6159
  %6163 = load i64, i64* %PC.i597
  %6164 = add i64 %6163, 4
  store i64 %6164, i64* %PC.i597
  %6165 = inttoptr i64 %6162 to i32*
  %6166 = load i32, i32* %6165
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6167, align 1
  %6168 = and i32 %6166, 255
  %6169 = call i32 @llvm.ctpop.i32(i32 %6168)
  %6170 = trunc i32 %6169 to i8
  %6171 = and i8 %6170, 1
  %6172 = xor i8 %6171, 1
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6172, i8* %6173, align 1
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6174, align 1
  %6175 = icmp eq i32 %6166, 0
  %6176 = zext i1 %6175 to i8
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6176, i8* %6177, align 1
  %6178 = lshr i32 %6166, 31
  %6179 = trunc i32 %6178 to i8
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6179, i8* %6180, align 1
  %6181 = lshr i32 %6166, 31
  %6182 = xor i32 %6178, %6181
  %6183 = add i32 %6182, %6181
  %6184 = icmp eq i32 %6183, 2
  %6185 = zext i1 %6184 to i8
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6185, i8* %6186, align 1
  store %struct.Memory* %loadMem_46d196, %struct.Memory** %MEMORY
  %loadMem_46d19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 33
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %6189 to i64*
  %6190 = load i64, i64* %PC.i596
  %6191 = add i64 %6190, 27
  %6192 = load i64, i64* %PC.i596
  %6193 = add i64 %6192, 6
  %6194 = load i64, i64* %PC.i596
  %6195 = add i64 %6194, 6
  store i64 %6195, i64* %PC.i596
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6197 = load i8, i8* %6196, align 1
  %6198 = icmp ne i8 %6197, 0
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6200 = load i8, i8* %6199, align 1
  %6201 = icmp ne i8 %6200, 0
  %6202 = xor i1 %6198, %6201
  %6203 = xor i1 %6202, true
  %6204 = zext i1 %6203 to i8
  store i8 %6204, i8* %BRANCH_TAKEN, align 1
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6206 = select i1 %6202, i64 %6193, i64 %6191
  store i64 %6206, i64* %6205, align 8
  store %struct.Memory* %loadMem_46d19a, %struct.Memory** %MEMORY
  %loadBr_46d19a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d19a = icmp eq i8 %loadBr_46d19a, 1
  br i1 %cmpBr_46d19a, label %block_.L_46d1b5, label %block_46d1a0

block_46d1a0:                                     ; preds = %block_46d189
  %loadMem_46d1a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6208 = getelementptr inbounds %struct.GPR, %struct.GPR* %6207, i32 0, i32 33
  %6209 = getelementptr inbounds %struct.Reg, %struct.Reg* %6208, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %6209 to i64*
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 1
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %RAX.i594 = bitcast %union.anon* %6212 to i64*
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 15
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %6215 to i64*
  %6216 = load i64, i64* %RBP.i595
  %6217 = sub i64 %6216, 24
  %6218 = load i64, i64* %PC.i593
  %6219 = add i64 %6218, 4
  store i64 %6219, i64* %PC.i593
  %6220 = inttoptr i64 %6217 to i32*
  %6221 = load i32, i32* %6220
  %6222 = sext i32 %6221 to i64
  store i64 %6222, i64* %RAX.i594, align 8
  store %struct.Memory* %loadMem_46d1a0, %struct.Memory** %MEMORY
  %loadMem_46d1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6224 = getelementptr inbounds %struct.GPR, %struct.GPR* %6223, i32 0, i32 33
  %6225 = getelementptr inbounds %struct.Reg, %struct.Reg* %6224, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %6225 to i64*
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6227 = getelementptr inbounds %struct.GPR, %struct.GPR* %6226, i32 0, i32 1
  %6228 = getelementptr inbounds %struct.Reg, %struct.Reg* %6227, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %6228 to i64*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6230 = getelementptr inbounds %struct.GPR, %struct.GPR* %6229, i32 0, i32 5
  %6231 = getelementptr inbounds %struct.Reg, %struct.Reg* %6230, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %6231 to i64*
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6233 = getelementptr inbounds %struct.GPR, %struct.GPR* %6232, i32 0, i32 15
  %6234 = getelementptr inbounds %struct.Reg, %struct.Reg* %6233, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %6234 to i64*
  %6235 = load i64, i64* %RBP.i592
  %6236 = load i64, i64* %RAX.i590
  %6237 = mul i64 %6236, 4
  %6238 = add i64 %6235, -1632
  %6239 = add i64 %6238, %6237
  %6240 = load i64, i64* %PC.i589
  %6241 = add i64 %6240, 7
  store i64 %6241, i64* %PC.i589
  %6242 = inttoptr i64 %6239 to i32*
  %6243 = load i32, i32* %6242
  %6244 = zext i32 %6243 to i64
  store i64 %6244, i64* %RCX.i591, align 8
  store %struct.Memory* %loadMem_46d1a4, %struct.Memory** %MEMORY
  %loadMem_46d1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 33
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %6247 to i64*
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 5
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %RCX.i588 = bitcast %union.anon* %6250 to i64*
  %6251 = load i64, i64* %RCX.i588
  %6252 = load i64, i64* %PC.i587
  %6253 = add i64 %6252, 3
  store i64 %6253, i64* %PC.i587
  %6254 = trunc i64 %6251 to i32
  %6255 = add i32 -1, %6254
  %6256 = zext i32 %6255 to i64
  store i64 %6256, i64* %RCX.i588, align 8
  %6257 = icmp ult i32 %6255, %6254
  %6258 = icmp ult i32 %6255, -1
  %6259 = or i1 %6257, %6258
  %6260 = zext i1 %6259 to i8
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6260, i8* %6261, align 1
  %6262 = and i32 %6255, 255
  %6263 = call i32 @llvm.ctpop.i32(i32 %6262)
  %6264 = trunc i32 %6263 to i8
  %6265 = and i8 %6264, 1
  %6266 = xor i8 %6265, 1
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6266, i8* %6267, align 1
  %6268 = xor i64 -1, %6251
  %6269 = trunc i64 %6268 to i32
  %6270 = xor i32 %6269, %6255
  %6271 = lshr i32 %6270, 4
  %6272 = trunc i32 %6271 to i8
  %6273 = and i8 %6272, 1
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6273, i8* %6274, align 1
  %6275 = icmp eq i32 %6255, 0
  %6276 = zext i1 %6275 to i8
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6276, i8* %6277, align 1
  %6278 = lshr i32 %6255, 31
  %6279 = trunc i32 %6278 to i8
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6279, i8* %6280, align 1
  %6281 = lshr i32 %6254, 31
  %6282 = xor i32 %6278, %6281
  %6283 = xor i32 %6278, 1
  %6284 = add i32 %6282, %6283
  %6285 = icmp eq i32 %6284, 2
  %6286 = zext i1 %6285 to i8
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6286, i8* %6287, align 1
  store %struct.Memory* %loadMem_46d1ab, %struct.Memory** %MEMORY
  %loadMem_46d1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 5
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %ECX.i584 = bitcast %union.anon* %6293 to i32*
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 1
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %6296 to i64*
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6298 = getelementptr inbounds %struct.GPR, %struct.GPR* %6297, i32 0, i32 15
  %6299 = getelementptr inbounds %struct.Reg, %struct.Reg* %6298, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %6299 to i64*
  %6300 = load i64, i64* %RBP.i586
  %6301 = load i64, i64* %RAX.i585
  %6302 = mul i64 %6301, 4
  %6303 = add i64 %6300, -1632
  %6304 = add i64 %6303, %6302
  %6305 = load i32, i32* %ECX.i584
  %6306 = zext i32 %6305 to i64
  %6307 = load i64, i64* %PC.i583
  %6308 = add i64 %6307, 7
  store i64 %6308, i64* %PC.i583
  %6309 = inttoptr i64 %6304 to i32*
  store i32 %6305, i32* %6309
  store %struct.Memory* %loadMem_46d1ae, %struct.Memory** %MEMORY
  br label %block_.L_46d1b5

block_.L_46d1b5:                                  ; preds = %block_46d1a0, %block_46d189, %block_.L_46d16f
  %loadMem_46d1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 33
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %6312 to i64*
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6314 = getelementptr inbounds %struct.GPR, %struct.GPR* %6313, i32 0, i32 1
  %6315 = getelementptr inbounds %struct.Reg, %struct.Reg* %6314, i32 0, i32 0
  %RAX.i581 = bitcast %union.anon* %6315 to i64*
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6317 = getelementptr inbounds %struct.GPR, %struct.GPR* %6316, i32 0, i32 15
  %6318 = getelementptr inbounds %struct.Reg, %struct.Reg* %6317, i32 0, i32 0
  %RBP.i582 = bitcast %union.anon* %6318 to i64*
  %6319 = load i64, i64* %RBP.i582
  %6320 = sub i64 %6319, 24
  %6321 = load i64, i64* %PC.i580
  %6322 = add i64 %6321, 3
  store i64 %6322, i64* %PC.i580
  %6323 = inttoptr i64 %6320 to i32*
  %6324 = load i32, i32* %6323
  %6325 = zext i32 %6324 to i64
  store i64 %6325, i64* %RAX.i581, align 8
  store %struct.Memory* %loadMem_46d1b5, %struct.Memory** %MEMORY
  %loadMem_46d1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 33
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 1
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %6331 to i64*
  %6332 = load i64, i64* %RAX.i579
  %6333 = load i64, i64* %PC.i578
  %6334 = add i64 %6333, 3
  store i64 %6334, i64* %PC.i578
  %6335 = trunc i64 %6332 to i32
  %6336 = sub i32 %6335, 20
  %6337 = zext i32 %6336 to i64
  store i64 %6337, i64* %RAX.i579, align 8
  %6338 = icmp ult i32 %6335, 20
  %6339 = zext i1 %6338 to i8
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6339, i8* %6340, align 1
  %6341 = and i32 %6336, 255
  %6342 = call i32 @llvm.ctpop.i32(i32 %6341)
  %6343 = trunc i32 %6342 to i8
  %6344 = and i8 %6343, 1
  %6345 = xor i8 %6344, 1
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6345, i8* %6346, align 1
  %6347 = xor i64 20, %6332
  %6348 = trunc i64 %6347 to i32
  %6349 = xor i32 %6348, %6336
  %6350 = lshr i32 %6349, 4
  %6351 = trunc i32 %6350 to i8
  %6352 = and i8 %6351, 1
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6352, i8* %6353, align 1
  %6354 = icmp eq i32 %6336, 0
  %6355 = zext i1 %6354 to i8
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6355, i8* %6356, align 1
  %6357 = lshr i32 %6336, 31
  %6358 = trunc i32 %6357 to i8
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6358, i8* %6359, align 1
  %6360 = lshr i32 %6335, 31
  %6361 = xor i32 %6357, %6360
  %6362 = add i32 %6361, %6360
  %6363 = icmp eq i32 %6362, 2
  %6364 = zext i1 %6363 to i8
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6364, i8* %6365, align 1
  store %struct.Memory* %loadMem_46d1b8, %struct.Memory** %MEMORY
  %loadMem_46d1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6367 = getelementptr inbounds %struct.GPR, %struct.GPR* %6366, i32 0, i32 33
  %6368 = getelementptr inbounds %struct.Reg, %struct.Reg* %6367, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %6368 to i64*
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 1
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %EAX.i576 = bitcast %union.anon* %6371 to i32*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 5
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %6374 to i64*
  %6375 = load i32, i32* %EAX.i576
  %6376 = zext i32 %6375 to i64
  %6377 = load i64, i64* %PC.i575
  %6378 = add i64 %6377, 3
  store i64 %6378, i64* %PC.i575
  %6379 = shl i64 %6376, 32
  %6380 = ashr exact i64 %6379, 32
  store i64 %6380, i64* %RCX.i577, align 8
  store %struct.Memory* %loadMem_46d1bb, %struct.Memory** %MEMORY
  %loadMem_46d1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6382 = getelementptr inbounds %struct.GPR, %struct.GPR* %6381, i32 0, i32 33
  %6383 = getelementptr inbounds %struct.Reg, %struct.Reg* %6382, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %6383 to i64*
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6385 = getelementptr inbounds %struct.GPR, %struct.GPR* %6384, i32 0, i32 1
  %6386 = getelementptr inbounds %struct.Reg, %struct.Reg* %6385, i32 0, i32 0
  %RAX.i573 = bitcast %union.anon* %6386 to i64*
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 5
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %RCX.i574 = bitcast %union.anon* %6389 to i64*
  %6390 = load i64, i64* %RCX.i574
  %6391 = add i64 %6390, 12099168
  %6392 = load i64, i64* %PC.i572
  %6393 = add i64 %6392, 8
  store i64 %6393, i64* %PC.i572
  %6394 = inttoptr i64 %6391 to i8*
  %6395 = load i8, i8* %6394
  %6396 = zext i8 %6395 to i64
  store i64 %6396, i64* %RAX.i573, align 8
  store %struct.Memory* %loadMem_46d1be, %struct.Memory** %MEMORY
  %loadMem_46d1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6398 = getelementptr inbounds %struct.GPR, %struct.GPR* %6397, i32 0, i32 33
  %6399 = getelementptr inbounds %struct.Reg, %struct.Reg* %6398, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %6399 to i64*
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6401 = getelementptr inbounds %struct.GPR, %struct.GPR* %6400, i32 0, i32 1
  %6402 = getelementptr inbounds %struct.Reg, %struct.Reg* %6401, i32 0, i32 0
  %EAX.i571 = bitcast %union.anon* %6402 to i32*
  %6403 = load i32, i32* %EAX.i571
  %6404 = zext i32 %6403 to i64
  %6405 = load i64, i64* %PC.i570
  %6406 = add i64 %6405, 3
  store i64 %6406, i64* %PC.i570
  %6407 = sub i32 %6403, 3
  %6408 = icmp ult i32 %6403, 3
  %6409 = zext i1 %6408 to i8
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6409, i8* %6410, align 1
  %6411 = and i32 %6407, 255
  %6412 = call i32 @llvm.ctpop.i32(i32 %6411)
  %6413 = trunc i32 %6412 to i8
  %6414 = and i8 %6413, 1
  %6415 = xor i8 %6414, 1
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6415, i8* %6416, align 1
  %6417 = xor i64 3, %6404
  %6418 = trunc i64 %6417 to i32
  %6419 = xor i32 %6418, %6407
  %6420 = lshr i32 %6419, 4
  %6421 = trunc i32 %6420 to i8
  %6422 = and i8 %6421, 1
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6422, i8* %6423, align 1
  %6424 = icmp eq i32 %6407, 0
  %6425 = zext i1 %6424 to i8
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6425, i8* %6426, align 1
  %6427 = lshr i32 %6407, 31
  %6428 = trunc i32 %6427 to i8
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6428, i8* %6429, align 1
  %6430 = lshr i32 %6403, 31
  %6431 = xor i32 %6427, %6430
  %6432 = add i32 %6431, %6430
  %6433 = icmp eq i32 %6432, 2
  %6434 = zext i1 %6433 to i8
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6434, i8* %6435, align 1
  store %struct.Memory* %loadMem_46d1c6, %struct.Memory** %MEMORY
  %loadMem_46d1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 33
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %6438 to i64*
  %6439 = load i64, i64* %PC.i569
  %6440 = add i64 %6439, 50
  %6441 = load i64, i64* %PC.i569
  %6442 = add i64 %6441, 6
  %6443 = load i64, i64* %PC.i569
  %6444 = add i64 %6443, 6
  store i64 %6444, i64* %PC.i569
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6446 = load i8, i8* %6445, align 1
  store i8 %6446, i8* %BRANCH_TAKEN, align 1
  %6447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6448 = icmp ne i8 %6446, 0
  %6449 = select i1 %6448, i64 %6440, i64 %6442
  store i64 %6449, i64* %6447, align 8
  store %struct.Memory* %loadMem_46d1c9, %struct.Memory** %MEMORY
  %loadBr_46d1c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d1c9 = icmp eq i8 %loadBr_46d1c9, 1
  br i1 %cmpBr_46d1c9, label %block_.L_46d1fb, label %block_46d1cf

block_46d1cf:                                     ; preds = %block_.L_46d1b5
  %loadMem_46d1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6451 = getelementptr inbounds %struct.GPR, %struct.GPR* %6450, i32 0, i32 33
  %6452 = getelementptr inbounds %struct.Reg, %struct.Reg* %6451, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %6452 to i64*
  %6453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6454 = getelementptr inbounds %struct.GPR, %struct.GPR* %6453, i32 0, i32 1
  %6455 = getelementptr inbounds %struct.Reg, %struct.Reg* %6454, i32 0, i32 0
  %RAX.i567 = bitcast %union.anon* %6455 to i64*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 15
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %RBP.i568 = bitcast %union.anon* %6458 to i64*
  %6459 = load i64, i64* %RBP.i568
  %6460 = sub i64 %6459, 16
  %6461 = load i64, i64* %PC.i566
  %6462 = add i64 %6461, 4
  store i64 %6462, i64* %PC.i566
  %6463 = inttoptr i64 %6460 to i64*
  %6464 = load i64, i64* %6463
  store i64 %6464, i64* %RAX.i567, align 8
  store %struct.Memory* %loadMem_46d1cf, %struct.Memory** %MEMORY
  %loadMem_46d1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6466 = getelementptr inbounds %struct.GPR, %struct.GPR* %6465, i32 0, i32 33
  %6467 = getelementptr inbounds %struct.Reg, %struct.Reg* %6466, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %6467 to i64*
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 5
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %RCX.i564 = bitcast %union.anon* %6470 to i64*
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 15
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %6473 to i64*
  %6474 = load i64, i64* %RBP.i565
  %6475 = sub i64 %6474, 24
  %6476 = load i64, i64* %PC.i563
  %6477 = add i64 %6476, 3
  store i64 %6477, i64* %PC.i563
  %6478 = inttoptr i64 %6475 to i32*
  %6479 = load i32, i32* %6478
  %6480 = zext i32 %6479 to i64
  store i64 %6480, i64* %RCX.i564, align 8
  store %struct.Memory* %loadMem_46d1d3, %struct.Memory** %MEMORY
  %loadMem_46d1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6482 = getelementptr inbounds %struct.GPR, %struct.GPR* %6481, i32 0, i32 33
  %6483 = getelementptr inbounds %struct.Reg, %struct.Reg* %6482, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %6483 to i64*
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6485 = getelementptr inbounds %struct.GPR, %struct.GPR* %6484, i32 0, i32 5
  %6486 = getelementptr inbounds %struct.Reg, %struct.Reg* %6485, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %6486 to i64*
  %6487 = load i64, i64* %RCX.i562
  %6488 = load i64, i64* %PC.i561
  %6489 = add i64 %6488, 3
  store i64 %6489, i64* %PC.i561
  %6490 = trunc i64 %6487 to i32
  %6491 = sub i32 %6490, 20
  %6492 = zext i32 %6491 to i64
  store i64 %6492, i64* %RCX.i562, align 8
  %6493 = icmp ult i32 %6490, 20
  %6494 = zext i1 %6493 to i8
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6494, i8* %6495, align 1
  %6496 = and i32 %6491, 255
  %6497 = call i32 @llvm.ctpop.i32(i32 %6496)
  %6498 = trunc i32 %6497 to i8
  %6499 = and i8 %6498, 1
  %6500 = xor i8 %6499, 1
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6500, i8* %6501, align 1
  %6502 = xor i64 20, %6487
  %6503 = trunc i64 %6502 to i32
  %6504 = xor i32 %6503, %6491
  %6505 = lshr i32 %6504, 4
  %6506 = trunc i32 %6505 to i8
  %6507 = and i8 %6506, 1
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6507, i8* %6508, align 1
  %6509 = icmp eq i32 %6491, 0
  %6510 = zext i1 %6509 to i8
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6510, i8* %6511, align 1
  %6512 = lshr i32 %6491, 31
  %6513 = trunc i32 %6512 to i8
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6513, i8* %6514, align 1
  %6515 = lshr i32 %6490, 31
  %6516 = xor i32 %6512, %6515
  %6517 = add i32 %6516, %6515
  %6518 = icmp eq i32 %6517, 2
  %6519 = zext i1 %6518 to i8
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6519, i8* %6520, align 1
  store %struct.Memory* %loadMem_46d1d6, %struct.Memory** %MEMORY
  %loadMem_46d1d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 33
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6525 = getelementptr inbounds %struct.GPR, %struct.GPR* %6524, i32 0, i32 5
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %ECX.i559 = bitcast %union.anon* %6526 to i32*
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6528 = getelementptr inbounds %struct.GPR, %struct.GPR* %6527, i32 0, i32 7
  %6529 = getelementptr inbounds %struct.Reg, %struct.Reg* %6528, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %6529 to i64*
  %6530 = load i32, i32* %ECX.i559
  %6531 = zext i32 %6530 to i64
  %6532 = load i64, i64* %PC.i558
  %6533 = add i64 %6532, 3
  store i64 %6533, i64* %PC.i558
  %6534 = shl i64 %6531, 32
  %6535 = ashr exact i64 %6534, 32
  store i64 %6535, i64* %RDX.i560, align 8
  store %struct.Memory* %loadMem_46d1d9, %struct.Memory** %MEMORY
  %loadMem_46d1dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 33
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %6538 to i64*
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 1
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 7
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %6544 to i64*
  %6545 = load i64, i64* %RAX.i556
  %6546 = load i64, i64* %RDX.i557
  %6547 = mul i64 %6546, 4
  %6548 = add i64 %6547, %6545
  %6549 = load i64, i64* %PC.i555
  %6550 = add i64 %6549, 4
  store i64 %6550, i64* %PC.i555
  %6551 = inttoptr i64 %6548 to i32*
  %6552 = load i32, i32* %6551
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6553, align 1
  %6554 = and i32 %6552, 255
  %6555 = call i32 @llvm.ctpop.i32(i32 %6554)
  %6556 = trunc i32 %6555 to i8
  %6557 = and i8 %6556, 1
  %6558 = xor i8 %6557, 1
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6558, i8* %6559, align 1
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6560, align 1
  %6561 = icmp eq i32 %6552, 0
  %6562 = zext i1 %6561 to i8
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6562, i8* %6563, align 1
  %6564 = lshr i32 %6552, 31
  %6565 = trunc i32 %6564 to i8
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6565, i8* %6566, align 1
  %6567 = lshr i32 %6552, 31
  %6568 = xor i32 %6564, %6567
  %6569 = add i32 %6568, %6567
  %6570 = icmp eq i32 %6569, 2
  %6571 = zext i1 %6570 to i8
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6571, i8* %6572, align 1
  store %struct.Memory* %loadMem_46d1dc, %struct.Memory** %MEMORY
  %loadMem_46d1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 33
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %6575 to i64*
  %6576 = load i64, i64* %PC.i554
  %6577 = add i64 %6576, 27
  %6578 = load i64, i64* %PC.i554
  %6579 = add i64 %6578, 6
  %6580 = load i64, i64* %PC.i554
  %6581 = add i64 %6580, 6
  store i64 %6581, i64* %PC.i554
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6583 = load i8, i8* %6582, align 1
  %6584 = icmp ne i8 %6583, 0
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6586 = load i8, i8* %6585, align 1
  %6587 = icmp ne i8 %6586, 0
  %6588 = xor i1 %6584, %6587
  %6589 = xor i1 %6588, true
  %6590 = zext i1 %6589 to i8
  store i8 %6590, i8* %BRANCH_TAKEN, align 1
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6592 = select i1 %6588, i64 %6579, i64 %6577
  store i64 %6592, i64* %6591, align 8
  store %struct.Memory* %loadMem_46d1e0, %struct.Memory** %MEMORY
  %loadBr_46d1e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d1e0 = icmp eq i8 %loadBr_46d1e0, 1
  br i1 %cmpBr_46d1e0, label %block_.L_46d1fb, label %block_46d1e6

block_46d1e6:                                     ; preds = %block_46d1cf
  %loadMem_46d1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6594 = getelementptr inbounds %struct.GPR, %struct.GPR* %6593, i32 0, i32 33
  %6595 = getelementptr inbounds %struct.Reg, %struct.Reg* %6594, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %6595 to i64*
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6597 = getelementptr inbounds %struct.GPR, %struct.GPR* %6596, i32 0, i32 1
  %6598 = getelementptr inbounds %struct.Reg, %struct.Reg* %6597, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %6598 to i64*
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6600 = getelementptr inbounds %struct.GPR, %struct.GPR* %6599, i32 0, i32 15
  %6601 = getelementptr inbounds %struct.Reg, %struct.Reg* %6600, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %6601 to i64*
  %6602 = load i64, i64* %RBP.i553
  %6603 = sub i64 %6602, 24
  %6604 = load i64, i64* %PC.i551
  %6605 = add i64 %6604, 4
  store i64 %6605, i64* %PC.i551
  %6606 = inttoptr i64 %6603 to i32*
  %6607 = load i32, i32* %6606
  %6608 = sext i32 %6607 to i64
  store i64 %6608, i64* %RAX.i552, align 8
  store %struct.Memory* %loadMem_46d1e6, %struct.Memory** %MEMORY
  %loadMem_46d1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 33
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %6611 to i64*
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6613 = getelementptr inbounds %struct.GPR, %struct.GPR* %6612, i32 0, i32 1
  %6614 = getelementptr inbounds %struct.Reg, %struct.Reg* %6613, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %6614 to i64*
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6616 = getelementptr inbounds %struct.GPR, %struct.GPR* %6615, i32 0, i32 5
  %6617 = getelementptr inbounds %struct.Reg, %struct.Reg* %6616, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %6617 to i64*
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6619 = getelementptr inbounds %struct.GPR, %struct.GPR* %6618, i32 0, i32 15
  %6620 = getelementptr inbounds %struct.Reg, %struct.Reg* %6619, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %6620 to i64*
  %6621 = load i64, i64* %RBP.i550
  %6622 = load i64, i64* %RAX.i548
  %6623 = mul i64 %6622, 4
  %6624 = add i64 %6621, -1632
  %6625 = add i64 %6624, %6623
  %6626 = load i64, i64* %PC.i547
  %6627 = add i64 %6626, 7
  store i64 %6627, i64* %PC.i547
  %6628 = inttoptr i64 %6625 to i32*
  %6629 = load i32, i32* %6628
  %6630 = zext i32 %6629 to i64
  store i64 %6630, i64* %RCX.i549, align 8
  store %struct.Memory* %loadMem_46d1ea, %struct.Memory** %MEMORY
  %loadMem_46d1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6632 = getelementptr inbounds %struct.GPR, %struct.GPR* %6631, i32 0, i32 33
  %6633 = getelementptr inbounds %struct.Reg, %struct.Reg* %6632, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %6633 to i64*
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 5
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %RCX.i546 = bitcast %union.anon* %6636 to i64*
  %6637 = load i64, i64* %RCX.i546
  %6638 = load i64, i64* %PC.i545
  %6639 = add i64 %6638, 3
  store i64 %6639, i64* %PC.i545
  %6640 = trunc i64 %6637 to i32
  %6641 = add i32 -1, %6640
  %6642 = zext i32 %6641 to i64
  store i64 %6642, i64* %RCX.i546, align 8
  %6643 = icmp ult i32 %6641, %6640
  %6644 = icmp ult i32 %6641, -1
  %6645 = or i1 %6643, %6644
  %6646 = zext i1 %6645 to i8
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6646, i8* %6647, align 1
  %6648 = and i32 %6641, 255
  %6649 = call i32 @llvm.ctpop.i32(i32 %6648)
  %6650 = trunc i32 %6649 to i8
  %6651 = and i8 %6650, 1
  %6652 = xor i8 %6651, 1
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6652, i8* %6653, align 1
  %6654 = xor i64 -1, %6637
  %6655 = trunc i64 %6654 to i32
  %6656 = xor i32 %6655, %6641
  %6657 = lshr i32 %6656, 4
  %6658 = trunc i32 %6657 to i8
  %6659 = and i8 %6658, 1
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6659, i8* %6660, align 1
  %6661 = icmp eq i32 %6641, 0
  %6662 = zext i1 %6661 to i8
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6662, i8* %6663, align 1
  %6664 = lshr i32 %6641, 31
  %6665 = trunc i32 %6664 to i8
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6665, i8* %6666, align 1
  %6667 = lshr i32 %6640, 31
  %6668 = xor i32 %6664, %6667
  %6669 = xor i32 %6664, 1
  %6670 = add i32 %6668, %6669
  %6671 = icmp eq i32 %6670, 2
  %6672 = zext i1 %6671 to i8
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6672, i8* %6673, align 1
  store %struct.Memory* %loadMem_46d1f1, %struct.Memory** %MEMORY
  %loadMem_46d1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6675 = getelementptr inbounds %struct.GPR, %struct.GPR* %6674, i32 0, i32 33
  %6676 = getelementptr inbounds %struct.Reg, %struct.Reg* %6675, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %6676 to i64*
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 5
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %ECX.i542 = bitcast %union.anon* %6679 to i32*
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 1
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %6682 to i64*
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 15
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %RBP.i544 = bitcast %union.anon* %6685 to i64*
  %6686 = load i64, i64* %RBP.i544
  %6687 = load i64, i64* %RAX.i543
  %6688 = mul i64 %6687, 4
  %6689 = add i64 %6686, -1632
  %6690 = add i64 %6689, %6688
  %6691 = load i32, i32* %ECX.i542
  %6692 = zext i32 %6691 to i64
  %6693 = load i64, i64* %PC.i541
  %6694 = add i64 %6693, 7
  store i64 %6694, i64* %PC.i541
  %6695 = inttoptr i64 %6690 to i32*
  store i32 %6691, i32* %6695
  store %struct.Memory* %loadMem_46d1f4, %struct.Memory** %MEMORY
  br label %block_.L_46d1fb

block_.L_46d1fb:                                  ; preds = %block_46d1e6, %block_46d1cf, %block_.L_46d1b5
  %loadMem_46d1fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6697 = getelementptr inbounds %struct.GPR, %struct.GPR* %6696, i32 0, i32 33
  %6698 = getelementptr inbounds %struct.Reg, %struct.Reg* %6697, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %6698 to i64*
  %6699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6700 = getelementptr inbounds %struct.GPR, %struct.GPR* %6699, i32 0, i32 1
  %6701 = getelementptr inbounds %struct.Reg, %struct.Reg* %6700, i32 0, i32 0
  %RAX.i539 = bitcast %union.anon* %6701 to i64*
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 15
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %RBP.i540 = bitcast %union.anon* %6704 to i64*
  %6705 = load i64, i64* %RBP.i540
  %6706 = sub i64 %6705, 24
  %6707 = load i64, i64* %PC.i538
  %6708 = add i64 %6707, 3
  store i64 %6708, i64* %PC.i538
  %6709 = inttoptr i64 %6706 to i32*
  %6710 = load i32, i32* %6709
  %6711 = zext i32 %6710 to i64
  store i64 %6711, i64* %RAX.i539, align 8
  store %struct.Memory* %loadMem_46d1fb, %struct.Memory** %MEMORY
  %loadMem_46d1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6713 = getelementptr inbounds %struct.GPR, %struct.GPR* %6712, i32 0, i32 33
  %6714 = getelementptr inbounds %struct.Reg, %struct.Reg* %6713, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %6714 to i64*
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6716 = getelementptr inbounds %struct.GPR, %struct.GPR* %6715, i32 0, i32 1
  %6717 = getelementptr inbounds %struct.Reg, %struct.Reg* %6716, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %6717 to i64*
  %6718 = load i64, i64* %RAX.i537
  %6719 = load i64, i64* %PC.i536
  %6720 = add i64 %6719, 3
  store i64 %6720, i64* %PC.i536
  %6721 = trunc i64 %6718 to i32
  %6722 = add i32 1, %6721
  %6723 = zext i32 %6722 to i64
  store i64 %6723, i64* %RAX.i537, align 8
  %6724 = icmp ult i32 %6722, %6721
  %6725 = icmp ult i32 %6722, 1
  %6726 = or i1 %6724, %6725
  %6727 = zext i1 %6726 to i8
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6727, i8* %6728, align 1
  %6729 = and i32 %6722, 255
  %6730 = call i32 @llvm.ctpop.i32(i32 %6729)
  %6731 = trunc i32 %6730 to i8
  %6732 = and i8 %6731, 1
  %6733 = xor i8 %6732, 1
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6733, i8* %6734, align 1
  %6735 = xor i64 1, %6718
  %6736 = trunc i64 %6735 to i32
  %6737 = xor i32 %6736, %6722
  %6738 = lshr i32 %6737, 4
  %6739 = trunc i32 %6738 to i8
  %6740 = and i8 %6739, 1
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6740, i8* %6741, align 1
  %6742 = icmp eq i32 %6722, 0
  %6743 = zext i1 %6742 to i8
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6743, i8* %6744, align 1
  %6745 = lshr i32 %6722, 31
  %6746 = trunc i32 %6745 to i8
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6746, i8* %6747, align 1
  %6748 = lshr i32 %6721, 31
  %6749 = xor i32 %6745, %6748
  %6750 = add i32 %6749, %6745
  %6751 = icmp eq i32 %6750, 2
  %6752 = zext i1 %6751 to i8
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6752, i8* %6753, align 1
  store %struct.Memory* %loadMem_46d1fe, %struct.Memory** %MEMORY
  %loadMem_46d201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 33
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 1
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %EAX.i534 = bitcast %union.anon* %6759 to i32*
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 5
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %RCX.i535 = bitcast %union.anon* %6762 to i64*
  %6763 = load i32, i32* %EAX.i534
  %6764 = zext i32 %6763 to i64
  %6765 = load i64, i64* %PC.i533
  %6766 = add i64 %6765, 3
  store i64 %6766, i64* %PC.i533
  %6767 = shl i64 %6764, 32
  %6768 = ashr exact i64 %6767, 32
  store i64 %6768, i64* %RCX.i535, align 8
  store %struct.Memory* %loadMem_46d201, %struct.Memory** %MEMORY
  %loadMem_46d204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 33
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %6771 to i64*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 1
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %6774 to i64*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 5
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %6777 to i64*
  %6778 = load i64, i64* %RCX.i532
  %6779 = add i64 %6778, 12099168
  %6780 = load i64, i64* %PC.i530
  %6781 = add i64 %6780, 8
  store i64 %6781, i64* %PC.i530
  %6782 = inttoptr i64 %6779 to i8*
  %6783 = load i8, i8* %6782
  %6784 = zext i8 %6783 to i64
  store i64 %6784, i64* %RAX.i531, align 8
  store %struct.Memory* %loadMem_46d204, %struct.Memory** %MEMORY
  %loadMem_46d20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6786 = getelementptr inbounds %struct.GPR, %struct.GPR* %6785, i32 0, i32 33
  %6787 = getelementptr inbounds %struct.Reg, %struct.Reg* %6786, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %6787 to i64*
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 1
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %6790 to i32*
  %6791 = load i32, i32* %EAX.i529
  %6792 = zext i32 %6791 to i64
  %6793 = load i64, i64* %PC.i528
  %6794 = add i64 %6793, 3
  store i64 %6794, i64* %PC.i528
  %6795 = sub i32 %6791, 3
  %6796 = icmp ult i32 %6791, 3
  %6797 = zext i1 %6796 to i8
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6797, i8* %6798, align 1
  %6799 = and i32 %6795, 255
  %6800 = call i32 @llvm.ctpop.i32(i32 %6799)
  %6801 = trunc i32 %6800 to i8
  %6802 = and i8 %6801, 1
  %6803 = xor i8 %6802, 1
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6803, i8* %6804, align 1
  %6805 = xor i64 3, %6792
  %6806 = trunc i64 %6805 to i32
  %6807 = xor i32 %6806, %6795
  %6808 = lshr i32 %6807, 4
  %6809 = trunc i32 %6808 to i8
  %6810 = and i8 %6809, 1
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6810, i8* %6811, align 1
  %6812 = icmp eq i32 %6795, 0
  %6813 = zext i1 %6812 to i8
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6813, i8* %6814, align 1
  %6815 = lshr i32 %6795, 31
  %6816 = trunc i32 %6815 to i8
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6816, i8* %6817, align 1
  %6818 = lshr i32 %6791, 31
  %6819 = xor i32 %6815, %6818
  %6820 = add i32 %6819, %6818
  %6821 = icmp eq i32 %6820, 2
  %6822 = zext i1 %6821 to i8
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6822, i8* %6823, align 1
  store %struct.Memory* %loadMem_46d20c, %struct.Memory** %MEMORY
  %loadMem_46d20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 33
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6826 to i64*
  %6827 = load i64, i64* %PC.i527
  %6828 = add i64 %6827, 50
  %6829 = load i64, i64* %PC.i527
  %6830 = add i64 %6829, 6
  %6831 = load i64, i64* %PC.i527
  %6832 = add i64 %6831, 6
  store i64 %6832, i64* %PC.i527
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6834 = load i8, i8* %6833, align 1
  store i8 %6834, i8* %BRANCH_TAKEN, align 1
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6836 = icmp ne i8 %6834, 0
  %6837 = select i1 %6836, i64 %6828, i64 %6830
  store i64 %6837, i64* %6835, align 8
  store %struct.Memory* %loadMem_46d20f, %struct.Memory** %MEMORY
  %loadBr_46d20f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d20f = icmp eq i8 %loadBr_46d20f, 1
  br i1 %cmpBr_46d20f, label %block_.L_46d241, label %block_46d215

block_46d215:                                     ; preds = %block_.L_46d1fb
  %loadMem_46d215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 33
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %6840 to i64*
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 1
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %6843 to i64*
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6845 = getelementptr inbounds %struct.GPR, %struct.GPR* %6844, i32 0, i32 15
  %6846 = getelementptr inbounds %struct.Reg, %struct.Reg* %6845, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %6846 to i64*
  %6847 = load i64, i64* %RBP.i526
  %6848 = sub i64 %6847, 16
  %6849 = load i64, i64* %PC.i524
  %6850 = add i64 %6849, 4
  store i64 %6850, i64* %PC.i524
  %6851 = inttoptr i64 %6848 to i64*
  %6852 = load i64, i64* %6851
  store i64 %6852, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_46d215, %struct.Memory** %MEMORY
  %loadMem_46d219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 33
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %6855 to i64*
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6857 = getelementptr inbounds %struct.GPR, %struct.GPR* %6856, i32 0, i32 5
  %6858 = getelementptr inbounds %struct.Reg, %struct.Reg* %6857, i32 0, i32 0
  %RCX.i522 = bitcast %union.anon* %6858 to i64*
  %6859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6860 = getelementptr inbounds %struct.GPR, %struct.GPR* %6859, i32 0, i32 15
  %6861 = getelementptr inbounds %struct.Reg, %struct.Reg* %6860, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %6861 to i64*
  %6862 = load i64, i64* %RBP.i523
  %6863 = sub i64 %6862, 24
  %6864 = load i64, i64* %PC.i521
  %6865 = add i64 %6864, 3
  store i64 %6865, i64* %PC.i521
  %6866 = inttoptr i64 %6863 to i32*
  %6867 = load i32, i32* %6866
  %6868 = zext i32 %6867 to i64
  store i64 %6868, i64* %RCX.i522, align 8
  store %struct.Memory* %loadMem_46d219, %struct.Memory** %MEMORY
  %loadMem_46d21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 33
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 5
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %RCX.i520 = bitcast %union.anon* %6874 to i64*
  %6875 = load i64, i64* %RCX.i520
  %6876 = load i64, i64* %PC.i519
  %6877 = add i64 %6876, 3
  store i64 %6877, i64* %PC.i519
  %6878 = trunc i64 %6875 to i32
  %6879 = add i32 1, %6878
  %6880 = zext i32 %6879 to i64
  store i64 %6880, i64* %RCX.i520, align 8
  %6881 = icmp ult i32 %6879, %6878
  %6882 = icmp ult i32 %6879, 1
  %6883 = or i1 %6881, %6882
  %6884 = zext i1 %6883 to i8
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6884, i8* %6885, align 1
  %6886 = and i32 %6879, 255
  %6887 = call i32 @llvm.ctpop.i32(i32 %6886)
  %6888 = trunc i32 %6887 to i8
  %6889 = and i8 %6888, 1
  %6890 = xor i8 %6889, 1
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6890, i8* %6891, align 1
  %6892 = xor i64 1, %6875
  %6893 = trunc i64 %6892 to i32
  %6894 = xor i32 %6893, %6879
  %6895 = lshr i32 %6894, 4
  %6896 = trunc i32 %6895 to i8
  %6897 = and i8 %6896, 1
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6897, i8* %6898, align 1
  %6899 = icmp eq i32 %6879, 0
  %6900 = zext i1 %6899 to i8
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6900, i8* %6901, align 1
  %6902 = lshr i32 %6879, 31
  %6903 = trunc i32 %6902 to i8
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6903, i8* %6904, align 1
  %6905 = lshr i32 %6878, 31
  %6906 = xor i32 %6902, %6905
  %6907 = add i32 %6906, %6902
  %6908 = icmp eq i32 %6907, 2
  %6909 = zext i1 %6908 to i8
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6909, i8* %6910, align 1
  store %struct.Memory* %loadMem_46d21c, %struct.Memory** %MEMORY
  %loadMem_46d21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 33
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %6913 to i64*
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6915 = getelementptr inbounds %struct.GPR, %struct.GPR* %6914, i32 0, i32 5
  %6916 = getelementptr inbounds %struct.Reg, %struct.Reg* %6915, i32 0, i32 0
  %ECX.i517 = bitcast %union.anon* %6916 to i32*
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6918 = getelementptr inbounds %struct.GPR, %struct.GPR* %6917, i32 0, i32 7
  %6919 = getelementptr inbounds %struct.Reg, %struct.Reg* %6918, i32 0, i32 0
  %RDX.i518 = bitcast %union.anon* %6919 to i64*
  %6920 = load i32, i32* %ECX.i517
  %6921 = zext i32 %6920 to i64
  %6922 = load i64, i64* %PC.i516
  %6923 = add i64 %6922, 3
  store i64 %6923, i64* %PC.i516
  %6924 = shl i64 %6921, 32
  %6925 = ashr exact i64 %6924, 32
  store i64 %6925, i64* %RDX.i518, align 8
  store %struct.Memory* %loadMem_46d21f, %struct.Memory** %MEMORY
  %loadMem_46d222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6927 = getelementptr inbounds %struct.GPR, %struct.GPR* %6926, i32 0, i32 33
  %6928 = getelementptr inbounds %struct.Reg, %struct.Reg* %6927, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %6928 to i64*
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6930 = getelementptr inbounds %struct.GPR, %struct.GPR* %6929, i32 0, i32 1
  %6931 = getelementptr inbounds %struct.Reg, %struct.Reg* %6930, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %6931 to i64*
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6933 = getelementptr inbounds %struct.GPR, %struct.GPR* %6932, i32 0, i32 7
  %6934 = getelementptr inbounds %struct.Reg, %struct.Reg* %6933, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %6934 to i64*
  %6935 = load i64, i64* %RAX.i514
  %6936 = load i64, i64* %RDX.i515
  %6937 = mul i64 %6936, 4
  %6938 = add i64 %6937, %6935
  %6939 = load i64, i64* %PC.i513
  %6940 = add i64 %6939, 4
  store i64 %6940, i64* %PC.i513
  %6941 = inttoptr i64 %6938 to i32*
  %6942 = load i32, i32* %6941
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6943, align 1
  %6944 = and i32 %6942, 255
  %6945 = call i32 @llvm.ctpop.i32(i32 %6944)
  %6946 = trunc i32 %6945 to i8
  %6947 = and i8 %6946, 1
  %6948 = xor i8 %6947, 1
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6948, i8* %6949, align 1
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6950, align 1
  %6951 = icmp eq i32 %6942, 0
  %6952 = zext i1 %6951 to i8
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6952, i8* %6953, align 1
  %6954 = lshr i32 %6942, 31
  %6955 = trunc i32 %6954 to i8
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6955, i8* %6956, align 1
  %6957 = lshr i32 %6942, 31
  %6958 = xor i32 %6954, %6957
  %6959 = add i32 %6958, %6957
  %6960 = icmp eq i32 %6959, 2
  %6961 = zext i1 %6960 to i8
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6961, i8* %6962, align 1
  store %struct.Memory* %loadMem_46d222, %struct.Memory** %MEMORY
  %loadMem_46d226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6964 = getelementptr inbounds %struct.GPR, %struct.GPR* %6963, i32 0, i32 33
  %6965 = getelementptr inbounds %struct.Reg, %struct.Reg* %6964, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %6965 to i64*
  %6966 = load i64, i64* %PC.i512
  %6967 = add i64 %6966, 27
  %6968 = load i64, i64* %PC.i512
  %6969 = add i64 %6968, 6
  %6970 = load i64, i64* %PC.i512
  %6971 = add i64 %6970, 6
  store i64 %6971, i64* %PC.i512
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6973 = load i8, i8* %6972, align 1
  %6974 = icmp ne i8 %6973, 0
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6976 = load i8, i8* %6975, align 1
  %6977 = icmp ne i8 %6976, 0
  %6978 = xor i1 %6974, %6977
  %6979 = xor i1 %6978, true
  %6980 = zext i1 %6979 to i8
  store i8 %6980, i8* %BRANCH_TAKEN, align 1
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6982 = select i1 %6978, i64 %6969, i64 %6967
  store i64 %6982, i64* %6981, align 8
  store %struct.Memory* %loadMem_46d226, %struct.Memory** %MEMORY
  %loadBr_46d226 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d226 = icmp eq i8 %loadBr_46d226, 1
  br i1 %cmpBr_46d226, label %block_.L_46d241, label %block_46d22c

block_46d22c:                                     ; preds = %block_46d215
  %loadMem_46d22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 33
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %6985 to i64*
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 1
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %6988 to i64*
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6990 = getelementptr inbounds %struct.GPR, %struct.GPR* %6989, i32 0, i32 15
  %6991 = getelementptr inbounds %struct.Reg, %struct.Reg* %6990, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %6991 to i64*
  %6992 = load i64, i64* %RBP.i511
  %6993 = sub i64 %6992, 24
  %6994 = load i64, i64* %PC.i509
  %6995 = add i64 %6994, 4
  store i64 %6995, i64* %PC.i509
  %6996 = inttoptr i64 %6993 to i32*
  %6997 = load i32, i32* %6996
  %6998 = sext i32 %6997 to i64
  store i64 %6998, i64* %RAX.i510, align 8
  store %struct.Memory* %loadMem_46d22c, %struct.Memory** %MEMORY
  %loadMem_46d230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 33
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %7001 to i64*
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 1
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %RAX.i506 = bitcast %union.anon* %7004 to i64*
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7006 = getelementptr inbounds %struct.GPR, %struct.GPR* %7005, i32 0, i32 5
  %7007 = getelementptr inbounds %struct.Reg, %struct.Reg* %7006, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %7007 to i64*
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7009 = getelementptr inbounds %struct.GPR, %struct.GPR* %7008, i32 0, i32 15
  %7010 = getelementptr inbounds %struct.Reg, %struct.Reg* %7009, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %7010 to i64*
  %7011 = load i64, i64* %RBP.i508
  %7012 = load i64, i64* %RAX.i506
  %7013 = mul i64 %7012, 4
  %7014 = add i64 %7011, -1632
  %7015 = add i64 %7014, %7013
  %7016 = load i64, i64* %PC.i505
  %7017 = add i64 %7016, 7
  store i64 %7017, i64* %PC.i505
  %7018 = inttoptr i64 %7015 to i32*
  %7019 = load i32, i32* %7018
  %7020 = zext i32 %7019 to i64
  store i64 %7020, i64* %RCX.i507, align 8
  store %struct.Memory* %loadMem_46d230, %struct.Memory** %MEMORY
  %loadMem_46d237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 33
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %7023 to i64*
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7025 = getelementptr inbounds %struct.GPR, %struct.GPR* %7024, i32 0, i32 5
  %7026 = getelementptr inbounds %struct.Reg, %struct.Reg* %7025, i32 0, i32 0
  %RCX.i504 = bitcast %union.anon* %7026 to i64*
  %7027 = load i64, i64* %RCX.i504
  %7028 = load i64, i64* %PC.i503
  %7029 = add i64 %7028, 3
  store i64 %7029, i64* %PC.i503
  %7030 = trunc i64 %7027 to i32
  %7031 = add i32 -1, %7030
  %7032 = zext i32 %7031 to i64
  store i64 %7032, i64* %RCX.i504, align 8
  %7033 = icmp ult i32 %7031, %7030
  %7034 = icmp ult i32 %7031, -1
  %7035 = or i1 %7033, %7034
  %7036 = zext i1 %7035 to i8
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7036, i8* %7037, align 1
  %7038 = and i32 %7031, 255
  %7039 = call i32 @llvm.ctpop.i32(i32 %7038)
  %7040 = trunc i32 %7039 to i8
  %7041 = and i8 %7040, 1
  %7042 = xor i8 %7041, 1
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7042, i8* %7043, align 1
  %7044 = xor i64 -1, %7027
  %7045 = trunc i64 %7044 to i32
  %7046 = xor i32 %7045, %7031
  %7047 = lshr i32 %7046, 4
  %7048 = trunc i32 %7047 to i8
  %7049 = and i8 %7048, 1
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7049, i8* %7050, align 1
  %7051 = icmp eq i32 %7031, 0
  %7052 = zext i1 %7051 to i8
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7052, i8* %7053, align 1
  %7054 = lshr i32 %7031, 31
  %7055 = trunc i32 %7054 to i8
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7055, i8* %7056, align 1
  %7057 = lshr i32 %7030, 31
  %7058 = xor i32 %7054, %7057
  %7059 = xor i32 %7054, 1
  %7060 = add i32 %7058, %7059
  %7061 = icmp eq i32 %7060, 2
  %7062 = zext i1 %7061 to i8
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7062, i8* %7063, align 1
  store %struct.Memory* %loadMem_46d237, %struct.Memory** %MEMORY
  %loadMem_46d23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7065 = getelementptr inbounds %struct.GPR, %struct.GPR* %7064, i32 0, i32 33
  %7066 = getelementptr inbounds %struct.Reg, %struct.Reg* %7065, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %7066 to i64*
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7068 = getelementptr inbounds %struct.GPR, %struct.GPR* %7067, i32 0, i32 5
  %7069 = getelementptr inbounds %struct.Reg, %struct.Reg* %7068, i32 0, i32 0
  %ECX.i500 = bitcast %union.anon* %7069 to i32*
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7071 = getelementptr inbounds %struct.GPR, %struct.GPR* %7070, i32 0, i32 1
  %7072 = getelementptr inbounds %struct.Reg, %struct.Reg* %7071, i32 0, i32 0
  %RAX.i501 = bitcast %union.anon* %7072 to i64*
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 15
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %7075 to i64*
  %7076 = load i64, i64* %RBP.i502
  %7077 = load i64, i64* %RAX.i501
  %7078 = mul i64 %7077, 4
  %7079 = add i64 %7076, -1632
  %7080 = add i64 %7079, %7078
  %7081 = load i32, i32* %ECX.i500
  %7082 = zext i32 %7081 to i64
  %7083 = load i64, i64* %PC.i499
  %7084 = add i64 %7083, 7
  store i64 %7084, i64* %PC.i499
  %7085 = inttoptr i64 %7080 to i32*
  store i32 %7081, i32* %7085
  store %struct.Memory* %loadMem_46d23a, %struct.Memory** %MEMORY
  br label %block_.L_46d241

block_.L_46d241:                                  ; preds = %block_46d22c, %block_46d215, %block_.L_46d1fb
  %loadMem_46d241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7087 = getelementptr inbounds %struct.GPR, %struct.GPR* %7086, i32 0, i32 33
  %7088 = getelementptr inbounds %struct.Reg, %struct.Reg* %7087, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %7088 to i64*
  %7089 = load i64, i64* %PC.i498
  %7090 = add i64 %7089, 5
  %7091 = load i64, i64* %PC.i498
  %7092 = add i64 %7091, 5
  store i64 %7092, i64* %PC.i498
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7090, i64* %7093, align 8
  store %struct.Memory* %loadMem_46d241, %struct.Memory** %MEMORY
  br label %block_.L_46d246

block_.L_46d246:                                  ; preds = %block_.L_46d241, %block_46d112, %block_46d0e1, %block_46d0b0, %block_46d07f, %block_.L_46d053
  %loadMem_46d246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7095 = getelementptr inbounds %struct.GPR, %struct.GPR* %7094, i32 0, i32 33
  %7096 = getelementptr inbounds %struct.Reg, %struct.Reg* %7095, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %7096 to i64*
  %7097 = load i64, i64* %PC.i497
  %7098 = add i64 %7097, 5
  %7099 = load i64, i64* %PC.i497
  %7100 = add i64 %7099, 5
  store i64 %7100, i64* %PC.i497
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7098, i64* %7101, align 8
  store %struct.Memory* %loadMem_46d246, %struct.Memory** %MEMORY
  br label %block_.L_46d24b

block_.L_46d24b:                                  ; preds = %block_.L_46d246, %block_46ce5b
  %loadMem_46d24b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7103 = getelementptr inbounds %struct.GPR, %struct.GPR* %7102, i32 0, i32 33
  %7104 = getelementptr inbounds %struct.Reg, %struct.Reg* %7103, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %7104 to i64*
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7106 = getelementptr inbounds %struct.GPR, %struct.GPR* %7105, i32 0, i32 1
  %7107 = getelementptr inbounds %struct.Reg, %struct.Reg* %7106, i32 0, i32 0
  %RAX.i495 = bitcast %union.anon* %7107 to i64*
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7109 = getelementptr inbounds %struct.GPR, %struct.GPR* %7108, i32 0, i32 15
  %7110 = getelementptr inbounds %struct.Reg, %struct.Reg* %7109, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %7110 to i64*
  %7111 = load i64, i64* %RBP.i496
  %7112 = sub i64 %7111, 24
  %7113 = load i64, i64* %PC.i494
  %7114 = add i64 %7113, 3
  store i64 %7114, i64* %PC.i494
  %7115 = inttoptr i64 %7112 to i32*
  %7116 = load i32, i32* %7115
  %7117 = zext i32 %7116 to i64
  store i64 %7117, i64* %RAX.i495, align 8
  store %struct.Memory* %loadMem_46d24b, %struct.Memory** %MEMORY
  %loadMem_46d24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 33
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 1
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %7123 to i64*
  %7124 = load i64, i64* %RAX.i493
  %7125 = load i64, i64* %PC.i492
  %7126 = add i64 %7125, 3
  store i64 %7126, i64* %PC.i492
  %7127 = trunc i64 %7124 to i32
  %7128 = add i32 1, %7127
  %7129 = zext i32 %7128 to i64
  store i64 %7129, i64* %RAX.i493, align 8
  %7130 = icmp ult i32 %7128, %7127
  %7131 = icmp ult i32 %7128, 1
  %7132 = or i1 %7130, %7131
  %7133 = zext i1 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7133, i8* %7134, align 1
  %7135 = and i32 %7128, 255
  %7136 = call i32 @llvm.ctpop.i32(i32 %7135)
  %7137 = trunc i32 %7136 to i8
  %7138 = and i8 %7137, 1
  %7139 = xor i8 %7138, 1
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7139, i8* %7140, align 1
  %7141 = xor i64 1, %7124
  %7142 = trunc i64 %7141 to i32
  %7143 = xor i32 %7142, %7128
  %7144 = lshr i32 %7143, 4
  %7145 = trunc i32 %7144 to i8
  %7146 = and i8 %7145, 1
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7146, i8* %7147, align 1
  %7148 = icmp eq i32 %7128, 0
  %7149 = zext i1 %7148 to i8
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7149, i8* %7150, align 1
  %7151 = lshr i32 %7128, 31
  %7152 = trunc i32 %7151 to i8
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7152, i8* %7153, align 1
  %7154 = lshr i32 %7127, 31
  %7155 = xor i32 %7151, %7154
  %7156 = add i32 %7155, %7151
  %7157 = icmp eq i32 %7156, 2
  %7158 = zext i1 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7158, i8* %7159, align 1
  store %struct.Memory* %loadMem_46d24e, %struct.Memory** %MEMORY
  %loadMem_46d251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 33
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 1
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %EAX.i490 = bitcast %union.anon* %7165 to i32*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 15
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %7168 to i64*
  %7169 = load i64, i64* %RBP.i491
  %7170 = sub i64 %7169, 24
  %7171 = load i32, i32* %EAX.i490
  %7172 = zext i32 %7171 to i64
  %7173 = load i64, i64* %PC.i489
  %7174 = add i64 %7173, 3
  store i64 %7174, i64* %PC.i489
  %7175 = inttoptr i64 %7170 to i32*
  store i32 %7171, i32* %7175
  store %struct.Memory* %loadMem_46d251, %struct.Memory** %MEMORY
  %loadMem_46d254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7177 = getelementptr inbounds %struct.GPR, %struct.GPR* %7176, i32 0, i32 33
  %7178 = getelementptr inbounds %struct.Reg, %struct.Reg* %7177, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %7178 to i64*
  %7179 = load i64, i64* %PC.i488
  %7180 = add i64 %7179, -1051
  %7181 = load i64, i64* %PC.i488
  %7182 = add i64 %7181, 5
  store i64 %7182, i64* %PC.i488
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7180, i64* %7183, align 8
  store %struct.Memory* %loadMem_46d254, %struct.Memory** %MEMORY
  br label %block_.L_46ce39

block_.L_46d259:                                  ; preds = %block_.L_46ce39
  %loadMem_46d259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 33
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %7186 to i64*
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7188 = getelementptr inbounds %struct.GPR, %struct.GPR* %7187, i32 0, i32 1
  %7189 = getelementptr inbounds %struct.Reg, %struct.Reg* %7188, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %7189 to i64*
  %7190 = load i64, i64* %PC.i486
  %7191 = add i64 %7190, 5
  store i64 %7191, i64* %PC.i486
  store i64 1600, i64* %RAX.i487, align 8
  store %struct.Memory* %loadMem_46d259, %struct.Memory** %MEMORY
  %loadMem_46d25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 33
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %7194 to i64*
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7196 = getelementptr inbounds %struct.GPR, %struct.GPR* %7195, i32 0, i32 1
  %7197 = getelementptr inbounds %struct.Reg, %struct.Reg* %7196, i32 0, i32 0
  %EAX.i484 = bitcast %union.anon* %7197 to i32*
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 7
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %RDX.i485 = bitcast %union.anon* %7200 to i64*
  %7201 = load i32, i32* %EAX.i484
  %7202 = zext i32 %7201 to i64
  %7203 = load i64, i64* %PC.i483
  %7204 = add i64 %7203, 2
  store i64 %7204, i64* %PC.i483
  %7205 = and i64 %7202, 4294967295
  store i64 %7205, i64* %RDX.i485, align 8
  store %struct.Memory* %loadMem_46d25e, %struct.Memory** %MEMORY
  %loadMem_46d260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 33
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 5
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %7211 to i64*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 15
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %7214 to i64*
  %7215 = load i64, i64* %RBP.i482
  %7216 = sub i64 %7215, 1632
  %7217 = load i64, i64* %PC.i480
  %7218 = add i64 %7217, 7
  store i64 %7218, i64* %PC.i480
  store i64 %7216, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_46d260, %struct.Memory** %MEMORY
  %loadMem_46d267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7220 = getelementptr inbounds %struct.GPR, %struct.GPR* %7219, i32 0, i32 33
  %7221 = getelementptr inbounds %struct.Reg, %struct.Reg* %7220, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %7221 to i64*
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 9
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %RSI.i478 = bitcast %union.anon* %7224 to i64*
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 15
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %7227 to i64*
  %7228 = load i64, i64* %RBP.i479
  %7229 = sub i64 %7228, 16
  %7230 = load i64, i64* %PC.i477
  %7231 = add i64 %7230, 4
  store i64 %7231, i64* %PC.i477
  %7232 = inttoptr i64 %7229 to i64*
  %7233 = load i64, i64* %7232
  store i64 %7233, i64* %RSI.i478, align 8
  store %struct.Memory* %loadMem_46d267, %struct.Memory** %MEMORY
  %loadMem_46d26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7235 = getelementptr inbounds %struct.GPR, %struct.GPR* %7234, i32 0, i32 33
  %7236 = getelementptr inbounds %struct.Reg, %struct.Reg* %7235, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %7236 to i64*
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 9
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %RSI.i475 = bitcast %union.anon* %7239 to i64*
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7241 = getelementptr inbounds %struct.GPR, %struct.GPR* %7240, i32 0, i32 11
  %7242 = getelementptr inbounds %struct.Reg, %struct.Reg* %7241, i32 0, i32 0
  %RDI.i476 = bitcast %union.anon* %7242 to i64*
  %7243 = load i64, i64* %RSI.i475
  %7244 = load i64, i64* %PC.i474
  %7245 = add i64 %7244, 3
  store i64 %7245, i64* %PC.i474
  store i64 %7243, i64* %RDI.i476, align 8
  store %struct.Memory* %loadMem_46d26b, %struct.Memory** %MEMORY
  %loadMem_46d26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7247 = getelementptr inbounds %struct.GPR, %struct.GPR* %7246, i32 0, i32 33
  %7248 = getelementptr inbounds %struct.Reg, %struct.Reg* %7247, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %7248 to i64*
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7250 = getelementptr inbounds %struct.GPR, %struct.GPR* %7249, i32 0, i32 5
  %7251 = getelementptr inbounds %struct.Reg, %struct.Reg* %7250, i32 0, i32 0
  %RCX.i472 = bitcast %union.anon* %7251 to i64*
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7253 = getelementptr inbounds %struct.GPR, %struct.GPR* %7252, i32 0, i32 9
  %7254 = getelementptr inbounds %struct.Reg, %struct.Reg* %7253, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %7254 to i64*
  %7255 = load i64, i64* %RCX.i472
  %7256 = load i64, i64* %PC.i471
  %7257 = add i64 %7256, 3
  store i64 %7257, i64* %PC.i471
  store i64 %7255, i64* %RSI.i473, align 8
  store %struct.Memory* %loadMem_46d26e, %struct.Memory** %MEMORY
  %loadMem1_46d271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 33
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %7260 to i64*
  %7261 = load i64, i64* %PC.i470
  %7262 = add i64 %7261, -442753
  %7263 = load i64, i64* %PC.i470
  %7264 = add i64 %7263, 5
  %7265 = load i64, i64* %PC.i470
  %7266 = add i64 %7265, 5
  store i64 %7266, i64* %PC.i470
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7268 = load i64, i64* %7267, align 8
  %7269 = add i64 %7268, -8
  %7270 = inttoptr i64 %7269 to i64*
  store i64 %7264, i64* %7270
  store i64 %7269, i64* %7267, align 8
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7262, i64* %7271, align 8
  store %struct.Memory* %loadMem1_46d271, %struct.Memory** %MEMORY
  %loadMem2_46d271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46d271 = load i64, i64* %3
  %7272 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_46d271)
  store %struct.Memory* %7272, %struct.Memory** %MEMORY
  %loadMem_46d276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7274 = getelementptr inbounds %struct.GPR, %struct.GPR* %7273, i32 0, i32 33
  %7275 = getelementptr inbounds %struct.Reg, %struct.Reg* %7274, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %7275 to i64*
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 1
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %7278 to i64*
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 15
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %7281 to i64*
  %7282 = load i64, i64* %RBP.i467
  %7283 = sub i64 %7282, 1636
  %7284 = load i64, i64* %PC.i465
  %7285 = add i64 %7284, 6
  store i64 %7285, i64* %PC.i465
  %7286 = inttoptr i64 %7283 to i32*
  %7287 = load i32, i32* %7286
  %7288 = zext i32 %7287 to i64
  store i64 %7288, i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_46d276, %struct.Memory** %MEMORY
  %loadMem_46d27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 33
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %7291 to i64*
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 1
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %7294 to i64*
  %7295 = load i64, i64* %RAX.i464
  %7296 = load i64, i64* %PC.i463
  %7297 = add i64 %7296, 3
  store i64 %7297, i64* %PC.i463
  %7298 = trunc i64 %7295 to i32
  %7299 = add i32 1, %7298
  %7300 = zext i32 %7299 to i64
  store i64 %7300, i64* %RAX.i464, align 8
  %7301 = icmp ult i32 %7299, %7298
  %7302 = icmp ult i32 %7299, 1
  %7303 = or i1 %7301, %7302
  %7304 = zext i1 %7303 to i8
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7304, i8* %7305, align 1
  %7306 = and i32 %7299, 255
  %7307 = call i32 @llvm.ctpop.i32(i32 %7306)
  %7308 = trunc i32 %7307 to i8
  %7309 = and i8 %7308, 1
  %7310 = xor i8 %7309, 1
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7310, i8* %7311, align 1
  %7312 = xor i64 1, %7295
  %7313 = trunc i64 %7312 to i32
  %7314 = xor i32 %7313, %7299
  %7315 = lshr i32 %7314, 4
  %7316 = trunc i32 %7315 to i8
  %7317 = and i8 %7316, 1
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7317, i8* %7318, align 1
  %7319 = icmp eq i32 %7299, 0
  %7320 = zext i1 %7319 to i8
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7320, i8* %7321, align 1
  %7322 = lshr i32 %7299, 31
  %7323 = trunc i32 %7322 to i8
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7323, i8* %7324, align 1
  %7325 = lshr i32 %7298, 31
  %7326 = xor i32 %7322, %7325
  %7327 = add i32 %7326, %7322
  %7328 = icmp eq i32 %7327, 2
  %7329 = zext i1 %7328 to i8
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7329, i8* %7330, align 1
  store %struct.Memory* %loadMem_46d27c, %struct.Memory** %MEMORY
  %loadMem_46d27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 33
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %7333 to i64*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7335 = getelementptr inbounds %struct.GPR, %struct.GPR* %7334, i32 0, i32 1
  %7336 = getelementptr inbounds %struct.Reg, %struct.Reg* %7335, i32 0, i32 0
  %EAX.i461 = bitcast %union.anon* %7336 to i32*
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7338 = getelementptr inbounds %struct.GPR, %struct.GPR* %7337, i32 0, i32 15
  %7339 = getelementptr inbounds %struct.Reg, %struct.Reg* %7338, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %7339 to i64*
  %7340 = load i64, i64* %RBP.i462
  %7341 = sub i64 %7340, 1636
  %7342 = load i32, i32* %EAX.i461
  %7343 = zext i32 %7342 to i64
  %7344 = load i64, i64* %PC.i460
  %7345 = add i64 %7344, 6
  store i64 %7345, i64* %PC.i460
  %7346 = inttoptr i64 %7341 to i32*
  store i32 %7342, i32* %7346
  store %struct.Memory* %loadMem_46d27f, %struct.Memory** %MEMORY
  %loadMem_46d285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 33
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %7349 to i64*
  %7350 = load i64, i64* %PC.i459
  %7351 = add i64 %7350, -1122
  %7352 = load i64, i64* %PC.i459
  %7353 = add i64 %7352, 5
  store i64 %7353, i64* %PC.i459
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7351, i64* %7354, align 8
  store %struct.Memory* %loadMem_46d285, %struct.Memory** %MEMORY
  br label %block_.L_46ce23

block_.L_46d28a:                                  ; preds = %block_.L_46ce23
  %loadMem_46d28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 15
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %7360 to i64*
  %7361 = load i64, i64* %RBP.i458
  %7362 = sub i64 %7361, 1636
  %7363 = load i64, i64* %PC.i457
  %7364 = add i64 %7363, 10
  store i64 %7364, i64* %PC.i457
  %7365 = inttoptr i64 %7362 to i32*
  store i32 0, i32* %7365
  store %struct.Memory* %loadMem_46d28a, %struct.Memory** %MEMORY
  br label %block_.L_46d294

block_.L_46d294:                                  ; preds = %block_.L_46d5ae, %block_.L_46d28a
  %loadMem_46d294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 33
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %7368 to i64*
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7370 = getelementptr inbounds %struct.GPR, %struct.GPR* %7369, i32 0, i32 1
  %7371 = getelementptr inbounds %struct.Reg, %struct.Reg* %7370, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %7371 to i64*
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 15
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %7374 to i64*
  %7375 = load i64, i64* %RBP.i456
  %7376 = sub i64 %7375, 1636
  %7377 = load i64, i64* %PC.i454
  %7378 = add i64 %7377, 6
  store i64 %7378, i64* %PC.i454
  %7379 = inttoptr i64 %7376 to i32*
  %7380 = load i32, i32* %7379
  %7381 = zext i32 %7380 to i64
  store i64 %7381, i64* %RAX.i455, align 8
  store %struct.Memory* %loadMem_46d294, %struct.Memory** %MEMORY
  %loadMem_46d29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 33
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %7384 to i64*
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 1
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %EAX.i452 = bitcast %union.anon* %7387 to i32*
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 15
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %7390 to i64*
  %7391 = load i32, i32* %EAX.i452
  %7392 = zext i32 %7391 to i64
  %7393 = load i64, i64* %RBP.i453
  %7394 = sub i64 %7393, 8
  %7395 = load i64, i64* %PC.i451
  %7396 = add i64 %7395, 3
  store i64 %7396, i64* %PC.i451
  %7397 = inttoptr i64 %7394 to i32*
  %7398 = load i32, i32* %7397
  %7399 = sub i32 %7391, %7398
  %7400 = icmp ult i32 %7391, %7398
  %7401 = zext i1 %7400 to i8
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7401, i8* %7402, align 1
  %7403 = and i32 %7399, 255
  %7404 = call i32 @llvm.ctpop.i32(i32 %7403)
  %7405 = trunc i32 %7404 to i8
  %7406 = and i8 %7405, 1
  %7407 = xor i8 %7406, 1
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7407, i8* %7408, align 1
  %7409 = xor i32 %7398, %7391
  %7410 = xor i32 %7409, %7399
  %7411 = lshr i32 %7410, 4
  %7412 = trunc i32 %7411 to i8
  %7413 = and i8 %7412, 1
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7413, i8* %7414, align 1
  %7415 = icmp eq i32 %7399, 0
  %7416 = zext i1 %7415 to i8
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7416, i8* %7417, align 1
  %7418 = lshr i32 %7399, 31
  %7419 = trunc i32 %7418 to i8
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7419, i8* %7420, align 1
  %7421 = lshr i32 %7391, 31
  %7422 = lshr i32 %7398, 31
  %7423 = xor i32 %7422, %7421
  %7424 = xor i32 %7418, %7421
  %7425 = add i32 %7424, %7423
  %7426 = icmp eq i32 %7425, 2
  %7427 = zext i1 %7426 to i8
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7427, i8* %7428, align 1
  store %struct.Memory* %loadMem_46d29a, %struct.Memory** %MEMORY
  %loadMem_46d29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 33
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %PC.i450
  %7433 = add i64 %7432, 834
  %7434 = load i64, i64* %PC.i450
  %7435 = add i64 %7434, 6
  %7436 = load i64, i64* %PC.i450
  %7437 = add i64 %7436, 6
  store i64 %7437, i64* %PC.i450
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7439 = load i8, i8* %7438, align 1
  %7440 = icmp ne i8 %7439, 0
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7442 = load i8, i8* %7441, align 1
  %7443 = icmp ne i8 %7442, 0
  %7444 = xor i1 %7440, %7443
  %7445 = xor i1 %7444, true
  %7446 = zext i1 %7445 to i8
  store i8 %7446, i8* %BRANCH_TAKEN, align 1
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7448 = select i1 %7444, i64 %7435, i64 %7433
  store i64 %7448, i64* %7447, align 8
  store %struct.Memory* %loadMem_46d29d, %struct.Memory** %MEMORY
  %loadBr_46d29d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d29d = icmp eq i8 %loadBr_46d29d, 1
  br i1 %cmpBr_46d29d, label %block_.L_46d5df, label %block_46d2a3

block_46d2a3:                                     ; preds = %block_.L_46d294
  %loadMem_46d2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 33
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %7451 to i64*
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 15
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %7454 to i64*
  %7455 = load i64, i64* %RBP.i449
  %7456 = sub i64 %7455, 24
  %7457 = load i64, i64* %PC.i448
  %7458 = add i64 %7457, 7
  store i64 %7458, i64* %PC.i448
  %7459 = inttoptr i64 %7456 to i32*
  store i32 21, i32* %7459
  store %struct.Memory* %loadMem_46d2a3, %struct.Memory** %MEMORY
  br label %block_.L_46d2aa

block_.L_46d2aa:                                  ; preds = %block_.L_46d5a0, %block_46d2a3
  %loadMem_46d2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7461 = getelementptr inbounds %struct.GPR, %struct.GPR* %7460, i32 0, i32 33
  %7462 = getelementptr inbounds %struct.Reg, %struct.Reg* %7461, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %7462 to i64*
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7464 = getelementptr inbounds %struct.GPR, %struct.GPR* %7463, i32 0, i32 15
  %7465 = getelementptr inbounds %struct.Reg, %struct.Reg* %7464, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %7465 to i64*
  %7466 = load i64, i64* %RBP.i447
  %7467 = sub i64 %7466, 24
  %7468 = load i64, i64* %PC.i446
  %7469 = add i64 %7468, 7
  store i64 %7469, i64* %PC.i446
  %7470 = inttoptr i64 %7467 to i32*
  %7471 = load i32, i32* %7470
  %7472 = sub i32 %7471, 400
  %7473 = icmp ult i32 %7471, 400
  %7474 = zext i1 %7473 to i8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7474, i8* %7475, align 1
  %7476 = and i32 %7472, 255
  %7477 = call i32 @llvm.ctpop.i32(i32 %7476)
  %7478 = trunc i32 %7477 to i8
  %7479 = and i8 %7478, 1
  %7480 = xor i8 %7479, 1
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7480, i8* %7481, align 1
  %7482 = xor i32 %7471, 400
  %7483 = xor i32 %7482, %7472
  %7484 = lshr i32 %7483, 4
  %7485 = trunc i32 %7484 to i8
  %7486 = and i8 %7485, 1
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7486, i8* %7487, align 1
  %7488 = icmp eq i32 %7472, 0
  %7489 = zext i1 %7488 to i8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7489, i8* %7490, align 1
  %7491 = lshr i32 %7472, 31
  %7492 = trunc i32 %7491 to i8
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7492, i8* %7493, align 1
  %7494 = lshr i32 %7471, 31
  %7495 = xor i32 %7491, %7494
  %7496 = add i32 %7495, %7494
  %7497 = icmp eq i32 %7496, 2
  %7498 = zext i1 %7497 to i8
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7498, i8* %7499, align 1
  store %struct.Memory* %loadMem_46d2aa, %struct.Memory** %MEMORY
  %loadMem_46d2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7501 = getelementptr inbounds %struct.GPR, %struct.GPR* %7500, i32 0, i32 33
  %7502 = getelementptr inbounds %struct.Reg, %struct.Reg* %7501, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %7502 to i64*
  %7503 = load i64, i64* %PC.i445
  %7504 = add i64 %7503, 765
  %7505 = load i64, i64* %PC.i445
  %7506 = add i64 %7505, 6
  %7507 = load i64, i64* %PC.i445
  %7508 = add i64 %7507, 6
  store i64 %7508, i64* %PC.i445
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7510 = load i8, i8* %7509, align 1
  %7511 = icmp ne i8 %7510, 0
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7513 = load i8, i8* %7512, align 1
  %7514 = icmp ne i8 %7513, 0
  %7515 = xor i1 %7511, %7514
  %7516 = xor i1 %7515, true
  %7517 = zext i1 %7516 to i8
  store i8 %7517, i8* %BRANCH_TAKEN, align 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7519 = select i1 %7515, i64 %7506, i64 %7504
  store i64 %7519, i64* %7518, align 8
  store %struct.Memory* %loadMem_46d2b1, %struct.Memory** %MEMORY
  %loadBr_46d2b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d2b1 = icmp eq i8 %loadBr_46d2b1, 1
  br i1 %cmpBr_46d2b1, label %block_.L_46d5ae, label %block_46d2b7

block_46d2b7:                                     ; preds = %block_.L_46d2aa
  %loadMem_46d2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 33
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %7522 to i64*
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7524 = getelementptr inbounds %struct.GPR, %struct.GPR* %7523, i32 0, i32 1
  %7525 = getelementptr inbounds %struct.Reg, %struct.Reg* %7524, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %7525 to i64*
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7527 = getelementptr inbounds %struct.GPR, %struct.GPR* %7526, i32 0, i32 15
  %7528 = getelementptr inbounds %struct.Reg, %struct.Reg* %7527, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %7528 to i64*
  %7529 = load i64, i64* %RBP.i444
  %7530 = sub i64 %7529, 24
  %7531 = load i64, i64* %PC.i442
  %7532 = add i64 %7531, 4
  store i64 %7532, i64* %PC.i442
  %7533 = inttoptr i64 %7530 to i32*
  %7534 = load i32, i32* %7533
  %7535 = sext i32 %7534 to i64
  store i64 %7535, i64* %RAX.i443, align 8
  store %struct.Memory* %loadMem_46d2b7, %struct.Memory** %MEMORY
  %loadMem_46d2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 33
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %7538 to i64*
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 1
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %7541 to i64*
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7543 = getelementptr inbounds %struct.GPR, %struct.GPR* %7542, i32 0, i32 5
  %7544 = getelementptr inbounds %struct.Reg, %struct.Reg* %7543, i32 0, i32 0
  %RCX.i441 = bitcast %union.anon* %7544 to i64*
  %7545 = load i64, i64* %RAX.i440
  %7546 = add i64 %7545, 12099168
  %7547 = load i64, i64* %PC.i439
  %7548 = add i64 %7547, 8
  store i64 %7548, i64* %PC.i439
  %7549 = inttoptr i64 %7546 to i8*
  %7550 = load i8, i8* %7549
  %7551 = zext i8 %7550 to i64
  store i64 %7551, i64* %RCX.i441, align 8
  store %struct.Memory* %loadMem_46d2bb, %struct.Memory** %MEMORY
  %loadMem_46d2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 33
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7554 to i64*
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 5
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %ECX.i438 = bitcast %union.anon* %7557 to i32*
  %7558 = load i32, i32* %ECX.i438
  %7559 = zext i32 %7558 to i64
  %7560 = load i64, i64* %PC.i437
  %7561 = add i64 %7560, 3
  store i64 %7561, i64* %PC.i437
  %7562 = sub i32 %7558, 3
  %7563 = icmp ult i32 %7558, 3
  %7564 = zext i1 %7563 to i8
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7564, i8* %7565, align 1
  %7566 = and i32 %7562, 255
  %7567 = call i32 @llvm.ctpop.i32(i32 %7566)
  %7568 = trunc i32 %7567 to i8
  %7569 = and i8 %7568, 1
  %7570 = xor i8 %7569, 1
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7570, i8* %7571, align 1
  %7572 = xor i64 3, %7559
  %7573 = trunc i64 %7572 to i32
  %7574 = xor i32 %7573, %7562
  %7575 = lshr i32 %7574, 4
  %7576 = trunc i32 %7575 to i8
  %7577 = and i8 %7576, 1
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7577, i8* %7578, align 1
  %7579 = icmp eq i32 %7562, 0
  %7580 = zext i1 %7579 to i8
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7580, i8* %7581, align 1
  %7582 = lshr i32 %7562, 31
  %7583 = trunc i32 %7582 to i8
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7583, i8* %7584, align 1
  %7585 = lshr i32 %7558, 31
  %7586 = xor i32 %7582, %7585
  %7587 = add i32 %7586, %7585
  %7588 = icmp eq i32 %7587, 2
  %7589 = zext i1 %7588 to i8
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7589, i8* %7590, align 1
  store %struct.Memory* %loadMem_46d2c3, %struct.Memory** %MEMORY
  %loadMem_46d2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 33
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %7593 to i64*
  %7594 = load i64, i64* %PC.i436
  %7595 = add i64 %7594, 11
  %7596 = load i64, i64* %PC.i436
  %7597 = add i64 %7596, 6
  %7598 = load i64, i64* %PC.i436
  %7599 = add i64 %7598, 6
  store i64 %7599, i64* %PC.i436
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7601 = load i8, i8* %7600, align 1
  %7602 = icmp eq i8 %7601, 0
  %7603 = zext i1 %7602 to i8
  store i8 %7603, i8* %BRANCH_TAKEN, align 1
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7605 = select i1 %7602, i64 %7595, i64 %7597
  store i64 %7605, i64* %7604, align 8
  store %struct.Memory* %loadMem_46d2c6, %struct.Memory** %MEMORY
  %loadBr_46d2c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d2c6 = icmp eq i8 %loadBr_46d2c6, 1
  br i1 %cmpBr_46d2c6, label %block_.L_46d2d1, label %block_46d2cc

block_46d2cc:                                     ; preds = %block_46d2b7
  %loadMem_46d2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7607 = getelementptr inbounds %struct.GPR, %struct.GPR* %7606, i32 0, i32 33
  %7608 = getelementptr inbounds %struct.Reg, %struct.Reg* %7607, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %7608 to i64*
  %7609 = load i64, i64* %PC.i435
  %7610 = add i64 %7609, 724
  %7611 = load i64, i64* %PC.i435
  %7612 = add i64 %7611, 5
  store i64 %7612, i64* %PC.i435
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7610, i64* %7613, align 8
  store %struct.Memory* %loadMem_46d2cc, %struct.Memory** %MEMORY
  br label %block_.L_46d5a0

block_.L_46d2d1:                                  ; preds = %block_46d2b7
  %loadMem_46d2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7615 = getelementptr inbounds %struct.GPR, %struct.GPR* %7614, i32 0, i32 33
  %7616 = getelementptr inbounds %struct.Reg, %struct.Reg* %7615, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7616 to i64*
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7618 = getelementptr inbounds %struct.GPR, %struct.GPR* %7617, i32 0, i32 1
  %7619 = getelementptr inbounds %struct.Reg, %struct.Reg* %7618, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %7619 to i64*
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7621 = getelementptr inbounds %struct.GPR, %struct.GPR* %7620, i32 0, i32 15
  %7622 = getelementptr inbounds %struct.Reg, %struct.Reg* %7621, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %7622 to i64*
  %7623 = load i64, i64* %RBP.i434
  %7624 = sub i64 %7623, 24
  %7625 = load i64, i64* %PC.i432
  %7626 = add i64 %7625, 4
  store i64 %7626, i64* %PC.i432
  %7627 = inttoptr i64 %7624 to i32*
  %7628 = load i32, i32* %7627
  %7629 = sext i32 %7628 to i64
  store i64 %7629, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_46d2d1, %struct.Memory** %MEMORY
  %loadMem_46d2d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7631 = getelementptr inbounds %struct.GPR, %struct.GPR* %7630, i32 0, i32 33
  %7632 = getelementptr inbounds %struct.Reg, %struct.Reg* %7631, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %7632 to i64*
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 1
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %RAX.i430 = bitcast %union.anon* %7635 to i64*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 15
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %7638 to i64*
  %7639 = load i64, i64* %RBP.i431
  %7640 = load i64, i64* %RAX.i430
  %7641 = mul i64 %7640, 4
  %7642 = add i64 %7639, -1632
  %7643 = add i64 %7642, %7641
  %7644 = load i64, i64* %PC.i429
  %7645 = add i64 %7644, 8
  store i64 %7645, i64* %PC.i429
  %7646 = inttoptr i64 %7643 to i32*
  %7647 = load i32, i32* %7646
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7648, align 1
  %7649 = and i32 %7647, 255
  %7650 = call i32 @llvm.ctpop.i32(i32 %7649)
  %7651 = trunc i32 %7650 to i8
  %7652 = and i8 %7651, 1
  %7653 = xor i8 %7652, 1
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7653, i8* %7654, align 1
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7655, align 1
  %7656 = icmp eq i32 %7647, 0
  %7657 = zext i1 %7656 to i8
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7657, i8* %7658, align 1
  %7659 = lshr i32 %7647, 31
  %7660 = trunc i32 %7659 to i8
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7660, i8* %7661, align 1
  %7662 = lshr i32 %7647, 31
  %7663 = xor i32 %7659, %7662
  %7664 = add i32 %7663, %7662
  %7665 = icmp eq i32 %7664, 2
  %7666 = zext i1 %7665 to i8
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7666, i8* %7667, align 1
  store %struct.Memory* %loadMem_46d2d5, %struct.Memory** %MEMORY
  %loadMem_46d2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7669 = getelementptr inbounds %struct.GPR, %struct.GPR* %7668, i32 0, i32 33
  %7670 = getelementptr inbounds %struct.Reg, %struct.Reg* %7669, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %7670 to i64*
  %7671 = load i64, i64* %PC.i428
  %7672 = add i64 %7671, 345
  %7673 = load i64, i64* %PC.i428
  %7674 = add i64 %7673, 6
  %7675 = load i64, i64* %PC.i428
  %7676 = add i64 %7675, 6
  store i64 %7676, i64* %PC.i428
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7678 = load i8, i8* %7677, align 1
  %7679 = icmp ne i8 %7678, 0
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7681 = load i8, i8* %7680, align 1
  %7682 = icmp ne i8 %7681, 0
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7684 = load i8, i8* %7683, align 1
  %7685 = icmp ne i8 %7684, 0
  %7686 = xor i1 %7682, %7685
  %7687 = or i1 %7679, %7686
  %7688 = zext i1 %7687 to i8
  store i8 %7688, i8* %BRANCH_TAKEN, align 1
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7690 = select i1 %7687, i64 %7672, i64 %7674
  store i64 %7690, i64* %7689, align 8
  store %struct.Memory* %loadMem_46d2dd, %struct.Memory** %MEMORY
  %loadBr_46d2dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d2dd = icmp eq i8 %loadBr_46d2dd, 1
  br i1 %cmpBr_46d2dd, label %block_.L_46d436, label %block_46d2e3

block_46d2e3:                                     ; preds = %block_.L_46d2d1
  %loadMem_46d2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7692 = getelementptr inbounds %struct.GPR, %struct.GPR* %7691, i32 0, i32 33
  %7693 = getelementptr inbounds %struct.Reg, %struct.Reg* %7692, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %7693 to i64*
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7695 = getelementptr inbounds %struct.GPR, %struct.GPR* %7694, i32 0, i32 1
  %7696 = getelementptr inbounds %struct.Reg, %struct.Reg* %7695, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %7696 to i64*
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 15
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %7699 to i64*
  %7700 = load i64, i64* %RBP.i427
  %7701 = sub i64 %7700, 24
  %7702 = load i64, i64* %PC.i425
  %7703 = add i64 %7702, 3
  store i64 %7703, i64* %PC.i425
  %7704 = inttoptr i64 %7701 to i32*
  %7705 = load i32, i32* %7704
  %7706 = zext i32 %7705 to i64
  store i64 %7706, i64* %RAX.i426, align 8
  store %struct.Memory* %loadMem_46d2e3, %struct.Memory** %MEMORY
  %loadMem_46d2e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7708 = getelementptr inbounds %struct.GPR, %struct.GPR* %7707, i32 0, i32 33
  %7709 = getelementptr inbounds %struct.Reg, %struct.Reg* %7708, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %7709 to i64*
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7711 = getelementptr inbounds %struct.GPR, %struct.GPR* %7710, i32 0, i32 1
  %7712 = getelementptr inbounds %struct.Reg, %struct.Reg* %7711, i32 0, i32 0
  %RAX.i424 = bitcast %union.anon* %7712 to i64*
  %7713 = load i64, i64* %RAX.i424
  %7714 = load i64, i64* %PC.i423
  %7715 = add i64 %7714, 3
  store i64 %7715, i64* %PC.i423
  %7716 = trunc i64 %7713 to i32
  %7717 = add i32 20, %7716
  %7718 = zext i32 %7717 to i64
  store i64 %7718, i64* %RAX.i424, align 8
  %7719 = icmp ult i32 %7717, %7716
  %7720 = icmp ult i32 %7717, 20
  %7721 = or i1 %7719, %7720
  %7722 = zext i1 %7721 to i8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7722, i8* %7723, align 1
  %7724 = and i32 %7717, 255
  %7725 = call i32 @llvm.ctpop.i32(i32 %7724)
  %7726 = trunc i32 %7725 to i8
  %7727 = and i8 %7726, 1
  %7728 = xor i8 %7727, 1
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7728, i8* %7729, align 1
  %7730 = xor i64 20, %7713
  %7731 = trunc i64 %7730 to i32
  %7732 = xor i32 %7731, %7717
  %7733 = lshr i32 %7732, 4
  %7734 = trunc i32 %7733 to i8
  %7735 = and i8 %7734, 1
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7735, i8* %7736, align 1
  %7737 = icmp eq i32 %7717, 0
  %7738 = zext i1 %7737 to i8
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7738, i8* %7739, align 1
  %7740 = lshr i32 %7717, 31
  %7741 = trunc i32 %7740 to i8
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7741, i8* %7742, align 1
  %7743 = lshr i32 %7716, 31
  %7744 = xor i32 %7740, %7743
  %7745 = add i32 %7744, %7740
  %7746 = icmp eq i32 %7745, 2
  %7747 = zext i1 %7746 to i8
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7747, i8* %7748, align 1
  store %struct.Memory* %loadMem_46d2e6, %struct.Memory** %MEMORY
  %loadMem_46d2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 33
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %7751 to i64*
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7753 = getelementptr inbounds %struct.GPR, %struct.GPR* %7752, i32 0, i32 1
  %7754 = getelementptr inbounds %struct.Reg, %struct.Reg* %7753, i32 0, i32 0
  %EAX.i421 = bitcast %union.anon* %7754 to i32*
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7756 = getelementptr inbounds %struct.GPR, %struct.GPR* %7755, i32 0, i32 5
  %7757 = getelementptr inbounds %struct.Reg, %struct.Reg* %7756, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %7757 to i64*
  %7758 = load i32, i32* %EAX.i421
  %7759 = zext i32 %7758 to i64
  %7760 = load i64, i64* %PC.i420
  %7761 = add i64 %7760, 3
  store i64 %7761, i64* %PC.i420
  %7762 = shl i64 %7759, 32
  %7763 = ashr exact i64 %7762, 32
  store i64 %7763, i64* %RCX.i422, align 8
  store %struct.Memory* %loadMem_46d2e9, %struct.Memory** %MEMORY
  %loadMem_46d2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7765 = getelementptr inbounds %struct.GPR, %struct.GPR* %7764, i32 0, i32 33
  %7766 = getelementptr inbounds %struct.Reg, %struct.Reg* %7765, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %7766 to i64*
  %7767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7768 = getelementptr inbounds %struct.GPR, %struct.GPR* %7767, i32 0, i32 1
  %7769 = getelementptr inbounds %struct.Reg, %struct.Reg* %7768, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %7769 to i64*
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7771 = getelementptr inbounds %struct.GPR, %struct.GPR* %7770, i32 0, i32 5
  %7772 = getelementptr inbounds %struct.Reg, %struct.Reg* %7771, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %7772 to i64*
  %7773 = load i64, i64* %RCX.i419
  %7774 = add i64 %7773, 12099168
  %7775 = load i64, i64* %PC.i417
  %7776 = add i64 %7775, 8
  store i64 %7776, i64* %PC.i417
  %7777 = inttoptr i64 %7774 to i8*
  %7778 = load i8, i8* %7777
  %7779 = zext i8 %7778 to i64
  store i64 %7779, i64* %RAX.i418, align 8
  store %struct.Memory* %loadMem_46d2ec, %struct.Memory** %MEMORY
  %loadMem_46d2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7781 = getelementptr inbounds %struct.GPR, %struct.GPR* %7780, i32 0, i32 33
  %7782 = getelementptr inbounds %struct.Reg, %struct.Reg* %7781, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %7782 to i64*
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7784 = getelementptr inbounds %struct.GPR, %struct.GPR* %7783, i32 0, i32 1
  %7785 = getelementptr inbounds %struct.Reg, %struct.Reg* %7784, i32 0, i32 0
  %EAX.i416 = bitcast %union.anon* %7785 to i32*
  %7786 = load i32, i32* %EAX.i416
  %7787 = zext i32 %7786 to i64
  %7788 = load i64, i64* %PC.i415
  %7789 = add i64 %7788, 3
  store i64 %7789, i64* %PC.i415
  %7790 = sub i32 %7786, 3
  %7791 = icmp ult i32 %7786, 3
  %7792 = zext i1 %7791 to i8
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7792, i8* %7793, align 1
  %7794 = and i32 %7790, 255
  %7795 = call i32 @llvm.ctpop.i32(i32 %7794)
  %7796 = trunc i32 %7795 to i8
  %7797 = and i8 %7796, 1
  %7798 = xor i8 %7797, 1
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7798, i8* %7799, align 1
  %7800 = xor i64 3, %7787
  %7801 = trunc i64 %7800 to i32
  %7802 = xor i32 %7801, %7790
  %7803 = lshr i32 %7802, 4
  %7804 = trunc i32 %7803 to i8
  %7805 = and i8 %7804, 1
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7805, i8* %7806, align 1
  %7807 = icmp eq i32 %7790, 0
  %7808 = zext i1 %7807 to i8
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7808, i8* %7809, align 1
  %7810 = lshr i32 %7790, 31
  %7811 = trunc i32 %7810 to i8
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7811, i8* %7812, align 1
  %7813 = lshr i32 %7786, 31
  %7814 = xor i32 %7810, %7813
  %7815 = add i32 %7814, %7813
  %7816 = icmp eq i32 %7815, 2
  %7817 = zext i1 %7816 to i8
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7817, i8* %7818, align 1
  store %struct.Memory* %loadMem_46d2f4, %struct.Memory** %MEMORY
  %loadMem_46d2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 33
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %7821 to i64*
  %7822 = load i64, i64* %PC.i414
  %7823 = add i64 %7822, 50
  %7824 = load i64, i64* %PC.i414
  %7825 = add i64 %7824, 6
  %7826 = load i64, i64* %PC.i414
  %7827 = add i64 %7826, 6
  store i64 %7827, i64* %PC.i414
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7829 = load i8, i8* %7828, align 1
  store i8 %7829, i8* %BRANCH_TAKEN, align 1
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7831 = icmp ne i8 %7829, 0
  %7832 = select i1 %7831, i64 %7823, i64 %7825
  store i64 %7832, i64* %7830, align 8
  store %struct.Memory* %loadMem_46d2f7, %struct.Memory** %MEMORY
  %loadBr_46d2f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d2f7 = icmp eq i8 %loadBr_46d2f7, 1
  br i1 %cmpBr_46d2f7, label %block_.L_46d329, label %block_46d2fd

block_46d2fd:                                     ; preds = %block_46d2e3
  %loadMem_46d2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 33
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %7835 to i64*
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 1
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %7838 to i64*
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 15
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %7841 to i64*
  %7842 = load i64, i64* %RBP.i413
  %7843 = sub i64 %7842, 16
  %7844 = load i64, i64* %PC.i411
  %7845 = add i64 %7844, 4
  store i64 %7845, i64* %PC.i411
  %7846 = inttoptr i64 %7843 to i64*
  %7847 = load i64, i64* %7846
  store i64 %7847, i64* %RAX.i412, align 8
  store %struct.Memory* %loadMem_46d2fd, %struct.Memory** %MEMORY
  %loadMem_46d301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 33
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %7850 to i64*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 5
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %7853 to i64*
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 15
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %7856 to i64*
  %7857 = load i64, i64* %RBP.i410
  %7858 = sub i64 %7857, 24
  %7859 = load i64, i64* %PC.i408
  %7860 = add i64 %7859, 3
  store i64 %7860, i64* %PC.i408
  %7861 = inttoptr i64 %7858 to i32*
  %7862 = load i32, i32* %7861
  %7863 = zext i32 %7862 to i64
  store i64 %7863, i64* %RCX.i409, align 8
  store %struct.Memory* %loadMem_46d301, %struct.Memory** %MEMORY
  %loadMem_46d304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 33
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7866 to i64*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 5
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %RCX.i407 = bitcast %union.anon* %7869 to i64*
  %7870 = load i64, i64* %RCX.i407
  %7871 = load i64, i64* %PC.i406
  %7872 = add i64 %7871, 3
  store i64 %7872, i64* %PC.i406
  %7873 = trunc i64 %7870 to i32
  %7874 = add i32 20, %7873
  %7875 = zext i32 %7874 to i64
  store i64 %7875, i64* %RCX.i407, align 8
  %7876 = icmp ult i32 %7874, %7873
  %7877 = icmp ult i32 %7874, 20
  %7878 = or i1 %7876, %7877
  %7879 = zext i1 %7878 to i8
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7879, i8* %7880, align 1
  %7881 = and i32 %7874, 255
  %7882 = call i32 @llvm.ctpop.i32(i32 %7881)
  %7883 = trunc i32 %7882 to i8
  %7884 = and i8 %7883, 1
  %7885 = xor i8 %7884, 1
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7885, i8* %7886, align 1
  %7887 = xor i64 20, %7870
  %7888 = trunc i64 %7887 to i32
  %7889 = xor i32 %7888, %7874
  %7890 = lshr i32 %7889, 4
  %7891 = trunc i32 %7890 to i8
  %7892 = and i8 %7891, 1
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7892, i8* %7893, align 1
  %7894 = icmp eq i32 %7874, 0
  %7895 = zext i1 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7895, i8* %7896, align 1
  %7897 = lshr i32 %7874, 31
  %7898 = trunc i32 %7897 to i8
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7898, i8* %7899, align 1
  %7900 = lshr i32 %7873, 31
  %7901 = xor i32 %7897, %7900
  %7902 = add i32 %7901, %7897
  %7903 = icmp eq i32 %7902, 2
  %7904 = zext i1 %7903 to i8
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7904, i8* %7905, align 1
  store %struct.Memory* %loadMem_46d304, %struct.Memory** %MEMORY
  %loadMem_46d307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 5
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %ECX.i404 = bitcast %union.anon* %7911 to i32*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 7
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %7914 to i64*
  %7915 = load i32, i32* %ECX.i404
  %7916 = zext i32 %7915 to i64
  %7917 = load i64, i64* %PC.i403
  %7918 = add i64 %7917, 3
  store i64 %7918, i64* %PC.i403
  %7919 = shl i64 %7916, 32
  %7920 = ashr exact i64 %7919, 32
  store i64 %7920, i64* %RDX.i405, align 8
  store %struct.Memory* %loadMem_46d307, %struct.Memory** %MEMORY
  %loadMem_46d30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 33
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7923 to i64*
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 1
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 7
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %7929 to i64*
  %7930 = load i64, i64* %RAX.i401
  %7931 = load i64, i64* %RDX.i402
  %7932 = mul i64 %7931, 4
  %7933 = add i64 %7932, %7930
  %7934 = load i64, i64* %PC.i400
  %7935 = add i64 %7934, 4
  store i64 %7935, i64* %PC.i400
  %7936 = inttoptr i64 %7933 to i32*
  %7937 = load i32, i32* %7936
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7938, align 1
  %7939 = and i32 %7937, 255
  %7940 = call i32 @llvm.ctpop.i32(i32 %7939)
  %7941 = trunc i32 %7940 to i8
  %7942 = and i8 %7941, 1
  %7943 = xor i8 %7942, 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7943, i8* %7944, align 1
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7945, align 1
  %7946 = icmp eq i32 %7937, 0
  %7947 = zext i1 %7946 to i8
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7947, i8* %7948, align 1
  %7949 = lshr i32 %7937, 31
  %7950 = trunc i32 %7949 to i8
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7950, i8* %7951, align 1
  %7952 = lshr i32 %7937, 31
  %7953 = xor i32 %7949, %7952
  %7954 = add i32 %7953, %7952
  %7955 = icmp eq i32 %7954, 2
  %7956 = zext i1 %7955 to i8
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7956, i8* %7957, align 1
  store %struct.Memory* %loadMem_46d30a, %struct.Memory** %MEMORY
  %loadMem_46d30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 33
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %7960 to i64*
  %7961 = load i64, i64* %PC.i399
  %7962 = add i64 %7961, 27
  %7963 = load i64, i64* %PC.i399
  %7964 = add i64 %7963, 6
  %7965 = load i64, i64* %PC.i399
  %7966 = add i64 %7965, 6
  store i64 %7966, i64* %PC.i399
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7968 = load i8, i8* %7967, align 1
  %7969 = icmp eq i8 %7968, 0
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7971 = load i8, i8* %7970, align 1
  %7972 = icmp ne i8 %7971, 0
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7974 = load i8, i8* %7973, align 1
  %7975 = icmp ne i8 %7974, 0
  %7976 = xor i1 %7972, %7975
  %7977 = xor i1 %7976, true
  %7978 = and i1 %7969, %7977
  %7979 = zext i1 %7978 to i8
  store i8 %7979, i8* %BRANCH_TAKEN, align 1
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7981 = select i1 %7978, i64 %7962, i64 %7964
  store i64 %7981, i64* %7980, align 8
  store %struct.Memory* %loadMem_46d30e, %struct.Memory** %MEMORY
  %loadBr_46d30e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d30e = icmp eq i8 %loadBr_46d30e, 1
  br i1 %cmpBr_46d30e, label %block_.L_46d329, label %block_46d314

block_46d314:                                     ; preds = %block_46d2fd
  %loadMem_46d314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 33
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %7984 to i64*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 1
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %7987 to i64*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 15
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %7990 to i64*
  %7991 = load i64, i64* %RBP.i398
  %7992 = sub i64 %7991, 24
  %7993 = load i64, i64* %PC.i396
  %7994 = add i64 %7993, 4
  store i64 %7994, i64* %PC.i396
  %7995 = inttoptr i64 %7992 to i32*
  %7996 = load i32, i32* %7995
  %7997 = sext i32 %7996 to i64
  store i64 %7997, i64* %RAX.i397, align 8
  store %struct.Memory* %loadMem_46d314, %struct.Memory** %MEMORY
  %loadMem_46d318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7999 = getelementptr inbounds %struct.GPR, %struct.GPR* %7998, i32 0, i32 33
  %8000 = getelementptr inbounds %struct.Reg, %struct.Reg* %7999, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %8000 to i64*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 1
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %RAX.i393 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 5
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %8006 to i64*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 15
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %RBP.i395
  %8011 = load i64, i64* %RAX.i393
  %8012 = mul i64 %8011, 4
  %8013 = add i64 %8010, -1632
  %8014 = add i64 %8013, %8012
  %8015 = load i64, i64* %PC.i392
  %8016 = add i64 %8015, 7
  store i64 %8016, i64* %PC.i392
  %8017 = inttoptr i64 %8014 to i32*
  %8018 = load i32, i32* %8017
  %8019 = zext i32 %8018 to i64
  store i64 %8019, i64* %RCX.i394, align 8
  store %struct.Memory* %loadMem_46d318, %struct.Memory** %MEMORY
  %loadMem_46d31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 33
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %8022 to i64*
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 5
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %RCX.i391 = bitcast %union.anon* %8025 to i64*
  %8026 = load i64, i64* %RCX.i391
  %8027 = load i64, i64* %PC.i390
  %8028 = add i64 %8027, 3
  store i64 %8028, i64* %PC.i390
  %8029 = trunc i64 %8026 to i32
  %8030 = add i32 -1, %8029
  %8031 = zext i32 %8030 to i64
  store i64 %8031, i64* %RCX.i391, align 8
  %8032 = icmp ult i32 %8030, %8029
  %8033 = icmp ult i32 %8030, -1
  %8034 = or i1 %8032, %8033
  %8035 = zext i1 %8034 to i8
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8035, i8* %8036, align 1
  %8037 = and i32 %8030, 255
  %8038 = call i32 @llvm.ctpop.i32(i32 %8037)
  %8039 = trunc i32 %8038 to i8
  %8040 = and i8 %8039, 1
  %8041 = xor i8 %8040, 1
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8041, i8* %8042, align 1
  %8043 = xor i64 -1, %8026
  %8044 = trunc i64 %8043 to i32
  %8045 = xor i32 %8044, %8030
  %8046 = lshr i32 %8045, 4
  %8047 = trunc i32 %8046 to i8
  %8048 = and i8 %8047, 1
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8048, i8* %8049, align 1
  %8050 = icmp eq i32 %8030, 0
  %8051 = zext i1 %8050 to i8
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8051, i8* %8052, align 1
  %8053 = lshr i32 %8030, 31
  %8054 = trunc i32 %8053 to i8
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8054, i8* %8055, align 1
  %8056 = lshr i32 %8029, 31
  %8057 = xor i32 %8053, %8056
  %8058 = xor i32 %8053, 1
  %8059 = add i32 %8057, %8058
  %8060 = icmp eq i32 %8059, 2
  %8061 = zext i1 %8060 to i8
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8061, i8* %8062, align 1
  store %struct.Memory* %loadMem_46d31f, %struct.Memory** %MEMORY
  %loadMem_46d322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 33
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %8065 to i64*
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8067 = getelementptr inbounds %struct.GPR, %struct.GPR* %8066, i32 0, i32 5
  %8068 = getelementptr inbounds %struct.Reg, %struct.Reg* %8067, i32 0, i32 0
  %ECX.i387 = bitcast %union.anon* %8068 to i32*
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8070 = getelementptr inbounds %struct.GPR, %struct.GPR* %8069, i32 0, i32 1
  %8071 = getelementptr inbounds %struct.Reg, %struct.Reg* %8070, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %8071 to i64*
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8073 = getelementptr inbounds %struct.GPR, %struct.GPR* %8072, i32 0, i32 15
  %8074 = getelementptr inbounds %struct.Reg, %struct.Reg* %8073, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %8074 to i64*
  %8075 = load i64, i64* %RBP.i389
  %8076 = load i64, i64* %RAX.i388
  %8077 = mul i64 %8076, 4
  %8078 = add i64 %8075, -1632
  %8079 = add i64 %8078, %8077
  %8080 = load i32, i32* %ECX.i387
  %8081 = zext i32 %8080 to i64
  %8082 = load i64, i64* %PC.i386
  %8083 = add i64 %8082, 7
  store i64 %8083, i64* %PC.i386
  %8084 = inttoptr i64 %8079 to i32*
  store i32 %8080, i32* %8084
  store %struct.Memory* %loadMem_46d322, %struct.Memory** %MEMORY
  br label %block_.L_46d329

block_.L_46d329:                                  ; preds = %block_46d314, %block_46d2fd, %block_46d2e3
  %loadMem_46d329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 33
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %8087 to i64*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 1
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %RAX.i384 = bitcast %union.anon* %8090 to i64*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 15
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %8093 to i64*
  %8094 = load i64, i64* %RBP.i385
  %8095 = sub i64 %8094, 24
  %8096 = load i64, i64* %PC.i383
  %8097 = add i64 %8096, 3
  store i64 %8097, i64* %PC.i383
  %8098 = inttoptr i64 %8095 to i32*
  %8099 = load i32, i32* %8098
  %8100 = zext i32 %8099 to i64
  store i64 %8100, i64* %RAX.i384, align 8
  store %struct.Memory* %loadMem_46d329, %struct.Memory** %MEMORY
  %loadMem_46d32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 33
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %8103 to i64*
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 1
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %8106 to i64*
  %8107 = load i64, i64* %RAX.i382
  %8108 = load i64, i64* %PC.i381
  %8109 = add i64 %8108, 3
  store i64 %8109, i64* %PC.i381
  %8110 = trunc i64 %8107 to i32
  %8111 = sub i32 %8110, 1
  %8112 = zext i32 %8111 to i64
  store i64 %8112, i64* %RAX.i382, align 8
  %8113 = icmp ult i32 %8110, 1
  %8114 = zext i1 %8113 to i8
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8114, i8* %8115, align 1
  %8116 = and i32 %8111, 255
  %8117 = call i32 @llvm.ctpop.i32(i32 %8116)
  %8118 = trunc i32 %8117 to i8
  %8119 = and i8 %8118, 1
  %8120 = xor i8 %8119, 1
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8120, i8* %8121, align 1
  %8122 = xor i64 1, %8107
  %8123 = trunc i64 %8122 to i32
  %8124 = xor i32 %8123, %8111
  %8125 = lshr i32 %8124, 4
  %8126 = trunc i32 %8125 to i8
  %8127 = and i8 %8126, 1
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8127, i8* %8128, align 1
  %8129 = icmp eq i32 %8111, 0
  %8130 = zext i1 %8129 to i8
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8130, i8* %8131, align 1
  %8132 = lshr i32 %8111, 31
  %8133 = trunc i32 %8132 to i8
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8133, i8* %8134, align 1
  %8135 = lshr i32 %8110, 31
  %8136 = xor i32 %8132, %8135
  %8137 = add i32 %8136, %8135
  %8138 = icmp eq i32 %8137, 2
  %8139 = zext i1 %8138 to i8
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8139, i8* %8140, align 1
  store %struct.Memory* %loadMem_46d32c, %struct.Memory** %MEMORY
  %loadMem_46d32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8142 = getelementptr inbounds %struct.GPR, %struct.GPR* %8141, i32 0, i32 33
  %8143 = getelementptr inbounds %struct.Reg, %struct.Reg* %8142, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %8143 to i64*
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8145 = getelementptr inbounds %struct.GPR, %struct.GPR* %8144, i32 0, i32 1
  %8146 = getelementptr inbounds %struct.Reg, %struct.Reg* %8145, i32 0, i32 0
  %EAX.i379 = bitcast %union.anon* %8146 to i32*
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 5
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %RCX.i380 = bitcast %union.anon* %8149 to i64*
  %8150 = load i32, i32* %EAX.i379
  %8151 = zext i32 %8150 to i64
  %8152 = load i64, i64* %PC.i378
  %8153 = add i64 %8152, 3
  store i64 %8153, i64* %PC.i378
  %8154 = shl i64 %8151, 32
  %8155 = ashr exact i64 %8154, 32
  store i64 %8155, i64* %RCX.i380, align 8
  store %struct.Memory* %loadMem_46d32f, %struct.Memory** %MEMORY
  %loadMem_46d332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8157 = getelementptr inbounds %struct.GPR, %struct.GPR* %8156, i32 0, i32 33
  %8158 = getelementptr inbounds %struct.Reg, %struct.Reg* %8157, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %8158 to i64*
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 1
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %8161 to i64*
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8163 = getelementptr inbounds %struct.GPR, %struct.GPR* %8162, i32 0, i32 5
  %8164 = getelementptr inbounds %struct.Reg, %struct.Reg* %8163, i32 0, i32 0
  %RCX.i377 = bitcast %union.anon* %8164 to i64*
  %8165 = load i64, i64* %RCX.i377
  %8166 = add i64 %8165, 12099168
  %8167 = load i64, i64* %PC.i375
  %8168 = add i64 %8167, 8
  store i64 %8168, i64* %PC.i375
  %8169 = inttoptr i64 %8166 to i8*
  %8170 = load i8, i8* %8169
  %8171 = zext i8 %8170 to i64
  store i64 %8171, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_46d332, %struct.Memory** %MEMORY
  %loadMem_46d33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 33
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %8174 to i64*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 1
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %EAX.i374 = bitcast %union.anon* %8177 to i32*
  %8178 = load i32, i32* %EAX.i374
  %8179 = zext i32 %8178 to i64
  %8180 = load i64, i64* %PC.i373
  %8181 = add i64 %8180, 3
  store i64 %8181, i64* %PC.i373
  %8182 = sub i32 %8178, 3
  %8183 = icmp ult i32 %8178, 3
  %8184 = zext i1 %8183 to i8
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8184, i8* %8185, align 1
  %8186 = and i32 %8182, 255
  %8187 = call i32 @llvm.ctpop.i32(i32 %8186)
  %8188 = trunc i32 %8187 to i8
  %8189 = and i8 %8188, 1
  %8190 = xor i8 %8189, 1
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8190, i8* %8191, align 1
  %8192 = xor i64 3, %8179
  %8193 = trunc i64 %8192 to i32
  %8194 = xor i32 %8193, %8182
  %8195 = lshr i32 %8194, 4
  %8196 = trunc i32 %8195 to i8
  %8197 = and i8 %8196, 1
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8197, i8* %8198, align 1
  %8199 = icmp eq i32 %8182, 0
  %8200 = zext i1 %8199 to i8
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8200, i8* %8201, align 1
  %8202 = lshr i32 %8182, 31
  %8203 = trunc i32 %8202 to i8
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8203, i8* %8204, align 1
  %8205 = lshr i32 %8178, 31
  %8206 = xor i32 %8202, %8205
  %8207 = add i32 %8206, %8205
  %8208 = icmp eq i32 %8207, 2
  %8209 = zext i1 %8208 to i8
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8209, i8* %8210, align 1
  store %struct.Memory* %loadMem_46d33a, %struct.Memory** %MEMORY
  %loadMem_46d33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8212 = getelementptr inbounds %struct.GPR, %struct.GPR* %8211, i32 0, i32 33
  %8213 = getelementptr inbounds %struct.Reg, %struct.Reg* %8212, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %8213 to i64*
  %8214 = load i64, i64* %PC.i372
  %8215 = add i64 %8214, 68
  %8216 = load i64, i64* %PC.i372
  %8217 = add i64 %8216, 6
  %8218 = load i64, i64* %PC.i372
  %8219 = add i64 %8218, 6
  store i64 %8219, i64* %PC.i372
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8221 = load i8, i8* %8220, align 1
  store i8 %8221, i8* %BRANCH_TAKEN, align 1
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8223 = icmp ne i8 %8221, 0
  %8224 = select i1 %8223, i64 %8215, i64 %8217
  store i64 %8224, i64* %8222, align 8
  store %struct.Memory* %loadMem_46d33d, %struct.Memory** %MEMORY
  %loadBr_46d33d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d33d = icmp eq i8 %loadBr_46d33d, 1
  br i1 %cmpBr_46d33d, label %block_.L_46d381, label %block_46d343

block_46d343:                                     ; preds = %block_.L_46d329
  %loadMem_46d343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8226 = getelementptr inbounds %struct.GPR, %struct.GPR* %8225, i32 0, i32 33
  %8227 = getelementptr inbounds %struct.Reg, %struct.Reg* %8226, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %8227 to i64*
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 1
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %8230 to i64*
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 15
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %8233 to i64*
  %8234 = load i64, i64* %RBP.i371
  %8235 = sub i64 %8234, 16
  %8236 = load i64, i64* %PC.i369
  %8237 = add i64 %8236, 4
  store i64 %8237, i64* %PC.i369
  %8238 = inttoptr i64 %8235 to i64*
  %8239 = load i64, i64* %8238
  store i64 %8239, i64* %RAX.i370, align 8
  store %struct.Memory* %loadMem_46d343, %struct.Memory** %MEMORY
  %loadMem_46d347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8241 = getelementptr inbounds %struct.GPR, %struct.GPR* %8240, i32 0, i32 33
  %8242 = getelementptr inbounds %struct.Reg, %struct.Reg* %8241, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %8242 to i64*
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8244 = getelementptr inbounds %struct.GPR, %struct.GPR* %8243, i32 0, i32 5
  %8245 = getelementptr inbounds %struct.Reg, %struct.Reg* %8244, i32 0, i32 0
  %RCX.i367 = bitcast %union.anon* %8245 to i64*
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8247 = getelementptr inbounds %struct.GPR, %struct.GPR* %8246, i32 0, i32 15
  %8248 = getelementptr inbounds %struct.Reg, %struct.Reg* %8247, i32 0, i32 0
  %RBP.i368 = bitcast %union.anon* %8248 to i64*
  %8249 = load i64, i64* %RBP.i368
  %8250 = sub i64 %8249, 24
  %8251 = load i64, i64* %PC.i366
  %8252 = add i64 %8251, 3
  store i64 %8252, i64* %PC.i366
  %8253 = inttoptr i64 %8250 to i32*
  %8254 = load i32, i32* %8253
  %8255 = zext i32 %8254 to i64
  store i64 %8255, i64* %RCX.i367, align 8
  store %struct.Memory* %loadMem_46d347, %struct.Memory** %MEMORY
  %loadMem_46d34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 33
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %8258 to i64*
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 5
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %RCX.i365 = bitcast %union.anon* %8261 to i64*
  %8262 = load i64, i64* %RCX.i365
  %8263 = load i64, i64* %PC.i364
  %8264 = add i64 %8263, 3
  store i64 %8264, i64* %PC.i364
  %8265 = trunc i64 %8262 to i32
  %8266 = sub i32 %8265, 1
  %8267 = zext i32 %8266 to i64
  store i64 %8267, i64* %RCX.i365, align 8
  %8268 = icmp ult i32 %8265, 1
  %8269 = zext i1 %8268 to i8
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8269, i8* %8270, align 1
  %8271 = and i32 %8266, 255
  %8272 = call i32 @llvm.ctpop.i32(i32 %8271)
  %8273 = trunc i32 %8272 to i8
  %8274 = and i8 %8273, 1
  %8275 = xor i8 %8274, 1
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8275, i8* %8276, align 1
  %8277 = xor i64 1, %8262
  %8278 = trunc i64 %8277 to i32
  %8279 = xor i32 %8278, %8266
  %8280 = lshr i32 %8279, 4
  %8281 = trunc i32 %8280 to i8
  %8282 = and i8 %8281, 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8282, i8* %8283, align 1
  %8284 = icmp eq i32 %8266, 0
  %8285 = zext i1 %8284 to i8
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8285, i8* %8286, align 1
  %8287 = lshr i32 %8266, 31
  %8288 = trunc i32 %8287 to i8
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8288, i8* %8289, align 1
  %8290 = lshr i32 %8265, 31
  %8291 = xor i32 %8287, %8290
  %8292 = add i32 %8291, %8290
  %8293 = icmp eq i32 %8292, 2
  %8294 = zext i1 %8293 to i8
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8294, i8* %8295, align 1
  store %struct.Memory* %loadMem_46d34a, %struct.Memory** %MEMORY
  %loadMem_46d34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 33
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %8298 to i64*
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8300 = getelementptr inbounds %struct.GPR, %struct.GPR* %8299, i32 0, i32 5
  %8301 = getelementptr inbounds %struct.Reg, %struct.Reg* %8300, i32 0, i32 0
  %ECX.i362 = bitcast %union.anon* %8301 to i32*
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8303 = getelementptr inbounds %struct.GPR, %struct.GPR* %8302, i32 0, i32 7
  %8304 = getelementptr inbounds %struct.Reg, %struct.Reg* %8303, i32 0, i32 0
  %RDX.i363 = bitcast %union.anon* %8304 to i64*
  %8305 = load i32, i32* %ECX.i362
  %8306 = zext i32 %8305 to i64
  %8307 = load i64, i64* %PC.i361
  %8308 = add i64 %8307, 3
  store i64 %8308, i64* %PC.i361
  %8309 = shl i64 %8306, 32
  %8310 = ashr exact i64 %8309, 32
  store i64 %8310, i64* %RDX.i363, align 8
  store %struct.Memory* %loadMem_46d34d, %struct.Memory** %MEMORY
  %loadMem_46d350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8312 = getelementptr inbounds %struct.GPR, %struct.GPR* %8311, i32 0, i32 33
  %8313 = getelementptr inbounds %struct.Reg, %struct.Reg* %8312, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %8313 to i64*
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 1
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %8316 to i64*
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 7
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %RDX.i360 = bitcast %union.anon* %8319 to i64*
  %8320 = load i64, i64* %RAX.i359
  %8321 = load i64, i64* %RDX.i360
  %8322 = mul i64 %8321, 4
  %8323 = add i64 %8322, %8320
  %8324 = load i64, i64* %PC.i358
  %8325 = add i64 %8324, 4
  store i64 %8325, i64* %PC.i358
  %8326 = inttoptr i64 %8323 to i32*
  %8327 = load i32, i32* %8326
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8328, align 1
  %8329 = and i32 %8327, 255
  %8330 = call i32 @llvm.ctpop.i32(i32 %8329)
  %8331 = trunc i32 %8330 to i8
  %8332 = and i8 %8331, 1
  %8333 = xor i8 %8332, 1
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8333, i8* %8334, align 1
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8335, align 1
  %8336 = icmp eq i32 %8327, 0
  %8337 = zext i1 %8336 to i8
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8337, i8* %8338, align 1
  %8339 = lshr i32 %8327, 31
  %8340 = trunc i32 %8339 to i8
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8340, i8* %8341, align 1
  %8342 = lshr i32 %8327, 31
  %8343 = xor i32 %8339, %8342
  %8344 = add i32 %8343, %8342
  %8345 = icmp eq i32 %8344, 2
  %8346 = zext i1 %8345 to i8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8346, i8* %8347, align 1
  store %struct.Memory* %loadMem_46d350, %struct.Memory** %MEMORY
  %loadMem_46d354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 33
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %8350 to i64*
  %8351 = load i64, i64* %PC.i357
  %8352 = add i64 %8351, 45
  %8353 = load i64, i64* %PC.i357
  %8354 = add i64 %8353, 6
  %8355 = load i64, i64* %PC.i357
  %8356 = add i64 %8355, 6
  store i64 %8356, i64* %PC.i357
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8358 = load i8, i8* %8357, align 1
  %8359 = icmp eq i8 %8358, 0
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8361 = load i8, i8* %8360, align 1
  %8362 = icmp ne i8 %8361, 0
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8364 = load i8, i8* %8363, align 1
  %8365 = icmp ne i8 %8364, 0
  %8366 = xor i1 %8362, %8365
  %8367 = xor i1 %8366, true
  %8368 = and i1 %8359, %8367
  %8369 = zext i1 %8368 to i8
  store i8 %8369, i8* %BRANCH_TAKEN, align 1
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8371 = select i1 %8368, i64 %8352, i64 %8354
  store i64 %8371, i64* %8370, align 8
  store %struct.Memory* %loadMem_46d354, %struct.Memory** %MEMORY
  %loadBr_46d354 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d354 = icmp eq i8 %loadBr_46d354, 1
  br i1 %cmpBr_46d354, label %block_.L_46d381, label %block_46d35a

block_46d35a:                                     ; preds = %block_46d343
  %loadMem_46d35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 33
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %8374 to i64*
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8376 = getelementptr inbounds %struct.GPR, %struct.GPR* %8375, i32 0, i32 1
  %8377 = getelementptr inbounds %struct.Reg, %struct.Reg* %8376, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %8377 to i64*
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 15
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %RBP.i356 = bitcast %union.anon* %8380 to i64*
  %8381 = load i64, i64* %RBP.i356
  %8382 = sub i64 %8381, 24
  %8383 = load i64, i64* %PC.i354
  %8384 = add i64 %8383, 4
  store i64 %8384, i64* %PC.i354
  %8385 = inttoptr i64 %8382 to i32*
  %8386 = load i32, i32* %8385
  %8387 = sext i32 %8386 to i64
  store i64 %8387, i64* %RAX.i355, align 8
  store %struct.Memory* %loadMem_46d35a, %struct.Memory** %MEMORY
  %loadMem_46d35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 33
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %8390 to i64*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 1
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %RAX.i352 = bitcast %union.anon* %8393 to i64*
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 15
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %8396 to i64*
  %8397 = load i64, i64* %RBP.i353
  %8398 = load i64, i64* %RAX.i352
  %8399 = mul i64 %8398, 4
  %8400 = add i64 %8397, -1632
  %8401 = add i64 %8400, %8399
  %8402 = load i64, i64* %PC.i351
  %8403 = add i64 %8402, 8
  store i64 %8403, i64* %PC.i351
  %8404 = inttoptr i64 %8401 to i32*
  %8405 = load i32, i32* %8404
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8406, align 1
  %8407 = and i32 %8405, 255
  %8408 = call i32 @llvm.ctpop.i32(i32 %8407)
  %8409 = trunc i32 %8408 to i8
  %8410 = and i8 %8409, 1
  %8411 = xor i8 %8410, 1
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8411, i8* %8412, align 1
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8413, align 1
  %8414 = icmp eq i32 %8405, 0
  %8415 = zext i1 %8414 to i8
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8415, i8* %8416, align 1
  %8417 = lshr i32 %8405, 31
  %8418 = trunc i32 %8417 to i8
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8418, i8* %8419, align 1
  %8420 = lshr i32 %8405, 31
  %8421 = xor i32 %8417, %8420
  %8422 = add i32 %8421, %8420
  %8423 = icmp eq i32 %8422, 2
  %8424 = zext i1 %8423 to i8
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8424, i8* %8425, align 1
  store %struct.Memory* %loadMem_46d35e, %struct.Memory** %MEMORY
  %loadMem_46d366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8427 = getelementptr inbounds %struct.GPR, %struct.GPR* %8426, i32 0, i32 33
  %8428 = getelementptr inbounds %struct.Reg, %struct.Reg* %8427, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %8428 to i64*
  %8429 = load i64, i64* %PC.i350
  %8430 = add i64 %8429, 27
  %8431 = load i64, i64* %PC.i350
  %8432 = add i64 %8431, 6
  %8433 = load i64, i64* %PC.i350
  %8434 = add i64 %8433, 6
  store i64 %8434, i64* %PC.i350
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8436 = load i8, i8* %8435, align 1
  %8437 = icmp ne i8 %8436, 0
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8439 = load i8, i8* %8438, align 1
  %8440 = icmp ne i8 %8439, 0
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8442 = load i8, i8* %8441, align 1
  %8443 = icmp ne i8 %8442, 0
  %8444 = xor i1 %8440, %8443
  %8445 = or i1 %8437, %8444
  %8446 = zext i1 %8445 to i8
  store i8 %8446, i8* %BRANCH_TAKEN, align 1
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8448 = select i1 %8445, i64 %8430, i64 %8432
  store i64 %8448, i64* %8447, align 8
  store %struct.Memory* %loadMem_46d366, %struct.Memory** %MEMORY
  %loadBr_46d366 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d366 = icmp eq i8 %loadBr_46d366, 1
  br i1 %cmpBr_46d366, label %block_.L_46d381, label %block_46d36c

block_46d36c:                                     ; preds = %block_46d35a
  %loadMem_46d36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 33
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %8451 to i64*
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 1
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %RAX.i348 = bitcast %union.anon* %8454 to i64*
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 15
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %8457 to i64*
  %8458 = load i64, i64* %RBP.i349
  %8459 = sub i64 %8458, 24
  %8460 = load i64, i64* %PC.i347
  %8461 = add i64 %8460, 4
  store i64 %8461, i64* %PC.i347
  %8462 = inttoptr i64 %8459 to i32*
  %8463 = load i32, i32* %8462
  %8464 = sext i32 %8463 to i64
  store i64 %8464, i64* %RAX.i348, align 8
  store %struct.Memory* %loadMem_46d36c, %struct.Memory** %MEMORY
  %loadMem_46d370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8466 = getelementptr inbounds %struct.GPR, %struct.GPR* %8465, i32 0, i32 33
  %8467 = getelementptr inbounds %struct.Reg, %struct.Reg* %8466, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %8467 to i64*
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 1
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %8470 to i64*
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 5
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %RCX.i345 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 15
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %8476 to i64*
  %8477 = load i64, i64* %RBP.i346
  %8478 = load i64, i64* %RAX.i344
  %8479 = mul i64 %8478, 4
  %8480 = add i64 %8477, -1632
  %8481 = add i64 %8480, %8479
  %8482 = load i64, i64* %PC.i343
  %8483 = add i64 %8482, 7
  store i64 %8483, i64* %PC.i343
  %8484 = inttoptr i64 %8481 to i32*
  %8485 = load i32, i32* %8484
  %8486 = zext i32 %8485 to i64
  store i64 %8486, i64* %RCX.i345, align 8
  store %struct.Memory* %loadMem_46d370, %struct.Memory** %MEMORY
  %loadMem_46d377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 33
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 5
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %RCX.i342 = bitcast %union.anon* %8492 to i64*
  %8493 = load i64, i64* %RCX.i342
  %8494 = load i64, i64* %PC.i341
  %8495 = add i64 %8494, 3
  store i64 %8495, i64* %PC.i341
  %8496 = trunc i64 %8493 to i32
  %8497 = add i32 -1, %8496
  %8498 = zext i32 %8497 to i64
  store i64 %8498, i64* %RCX.i342, align 8
  %8499 = icmp ult i32 %8497, %8496
  %8500 = icmp ult i32 %8497, -1
  %8501 = or i1 %8499, %8500
  %8502 = zext i1 %8501 to i8
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8502, i8* %8503, align 1
  %8504 = and i32 %8497, 255
  %8505 = call i32 @llvm.ctpop.i32(i32 %8504)
  %8506 = trunc i32 %8505 to i8
  %8507 = and i8 %8506, 1
  %8508 = xor i8 %8507, 1
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8508, i8* %8509, align 1
  %8510 = xor i64 -1, %8493
  %8511 = trunc i64 %8510 to i32
  %8512 = xor i32 %8511, %8497
  %8513 = lshr i32 %8512, 4
  %8514 = trunc i32 %8513 to i8
  %8515 = and i8 %8514, 1
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8515, i8* %8516, align 1
  %8517 = icmp eq i32 %8497, 0
  %8518 = zext i1 %8517 to i8
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8518, i8* %8519, align 1
  %8520 = lshr i32 %8497, 31
  %8521 = trunc i32 %8520 to i8
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8521, i8* %8522, align 1
  %8523 = lshr i32 %8496, 31
  %8524 = xor i32 %8520, %8523
  %8525 = xor i32 %8520, 1
  %8526 = add i32 %8524, %8525
  %8527 = icmp eq i32 %8526, 2
  %8528 = zext i1 %8527 to i8
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8528, i8* %8529, align 1
  store %struct.Memory* %loadMem_46d377, %struct.Memory** %MEMORY
  %loadMem_46d37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 33
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8532 to i64*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 5
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %ECX.i338 = bitcast %union.anon* %8535 to i32*
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8537 = getelementptr inbounds %struct.GPR, %struct.GPR* %8536, i32 0, i32 1
  %8538 = getelementptr inbounds %struct.Reg, %struct.Reg* %8537, i32 0, i32 0
  %RAX.i339 = bitcast %union.anon* %8538 to i64*
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8540 = getelementptr inbounds %struct.GPR, %struct.GPR* %8539, i32 0, i32 15
  %8541 = getelementptr inbounds %struct.Reg, %struct.Reg* %8540, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %8541 to i64*
  %8542 = load i64, i64* %RBP.i340
  %8543 = load i64, i64* %RAX.i339
  %8544 = mul i64 %8543, 4
  %8545 = add i64 %8542, -1632
  %8546 = add i64 %8545, %8544
  %8547 = load i32, i32* %ECX.i338
  %8548 = zext i32 %8547 to i64
  %8549 = load i64, i64* %PC.i337
  %8550 = add i64 %8549, 7
  store i64 %8550, i64* %PC.i337
  %8551 = inttoptr i64 %8546 to i32*
  store i32 %8547, i32* %8551
  store %struct.Memory* %loadMem_46d37a, %struct.Memory** %MEMORY
  br label %block_.L_46d381

block_.L_46d381:                                  ; preds = %block_46d36c, %block_46d35a, %block_46d343, %block_.L_46d329
  %loadMem_46d381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 33
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %8554 to i64*
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 1
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %RAX.i335 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 15
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %8560 to i64*
  %8561 = load i64, i64* %RBP.i336
  %8562 = sub i64 %8561, 24
  %8563 = load i64, i64* %PC.i334
  %8564 = add i64 %8563, 3
  store i64 %8564, i64* %PC.i334
  %8565 = inttoptr i64 %8562 to i32*
  %8566 = load i32, i32* %8565
  %8567 = zext i32 %8566 to i64
  store i64 %8567, i64* %RAX.i335, align 8
  store %struct.Memory* %loadMem_46d381, %struct.Memory** %MEMORY
  %loadMem_46d384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 33
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %8570 to i64*
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 1
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %RAX.i333 = bitcast %union.anon* %8573 to i64*
  %8574 = load i64, i64* %RAX.i333
  %8575 = load i64, i64* %PC.i332
  %8576 = add i64 %8575, 3
  store i64 %8576, i64* %PC.i332
  %8577 = trunc i64 %8574 to i32
  %8578 = sub i32 %8577, 20
  %8579 = zext i32 %8578 to i64
  store i64 %8579, i64* %RAX.i333, align 8
  %8580 = icmp ult i32 %8577, 20
  %8581 = zext i1 %8580 to i8
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8581, i8* %8582, align 1
  %8583 = and i32 %8578, 255
  %8584 = call i32 @llvm.ctpop.i32(i32 %8583)
  %8585 = trunc i32 %8584 to i8
  %8586 = and i8 %8585, 1
  %8587 = xor i8 %8586, 1
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8587, i8* %8588, align 1
  %8589 = xor i64 20, %8574
  %8590 = trunc i64 %8589 to i32
  %8591 = xor i32 %8590, %8578
  %8592 = lshr i32 %8591, 4
  %8593 = trunc i32 %8592 to i8
  %8594 = and i8 %8593, 1
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8594, i8* %8595, align 1
  %8596 = icmp eq i32 %8578, 0
  %8597 = zext i1 %8596 to i8
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8597, i8* %8598, align 1
  %8599 = lshr i32 %8578, 31
  %8600 = trunc i32 %8599 to i8
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8600, i8* %8601, align 1
  %8602 = lshr i32 %8577, 31
  %8603 = xor i32 %8599, %8602
  %8604 = add i32 %8603, %8602
  %8605 = icmp eq i32 %8604, 2
  %8606 = zext i1 %8605 to i8
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8606, i8* %8607, align 1
  store %struct.Memory* %loadMem_46d384, %struct.Memory** %MEMORY
  %loadMem_46d387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 1
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %EAX.i330 = bitcast %union.anon* %8613 to i32*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 5
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %8616 to i64*
  %8617 = load i32, i32* %EAX.i330
  %8618 = zext i32 %8617 to i64
  %8619 = load i64, i64* %PC.i329
  %8620 = add i64 %8619, 3
  store i64 %8620, i64* %PC.i329
  %8621 = shl i64 %8618, 32
  %8622 = ashr exact i64 %8621, 32
  store i64 %8622, i64* %RCX.i331, align 8
  store %struct.Memory* %loadMem_46d387, %struct.Memory** %MEMORY
  %loadMem_46d38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 33
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %8625 to i64*
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 1
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %8628 to i64*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8630 = getelementptr inbounds %struct.GPR, %struct.GPR* %8629, i32 0, i32 5
  %8631 = getelementptr inbounds %struct.Reg, %struct.Reg* %8630, i32 0, i32 0
  %RCX.i328 = bitcast %union.anon* %8631 to i64*
  %8632 = load i64, i64* %RCX.i328
  %8633 = add i64 %8632, 12099168
  %8634 = load i64, i64* %PC.i326
  %8635 = add i64 %8634, 8
  store i64 %8635, i64* %PC.i326
  %8636 = inttoptr i64 %8633 to i8*
  %8637 = load i8, i8* %8636
  %8638 = zext i8 %8637 to i64
  store i64 %8638, i64* %RAX.i327, align 8
  store %struct.Memory* %loadMem_46d38a, %struct.Memory** %MEMORY
  %loadMem_46d392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8640 = getelementptr inbounds %struct.GPR, %struct.GPR* %8639, i32 0, i32 33
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %8641 to i64*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 1
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %EAX.i325 = bitcast %union.anon* %8644 to i32*
  %8645 = load i32, i32* %EAX.i325
  %8646 = zext i32 %8645 to i64
  %8647 = load i64, i64* %PC.i324
  %8648 = add i64 %8647, 3
  store i64 %8648, i64* %PC.i324
  %8649 = sub i32 %8645, 3
  %8650 = icmp ult i32 %8645, 3
  %8651 = zext i1 %8650 to i8
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8651, i8* %8652, align 1
  %8653 = and i32 %8649, 255
  %8654 = call i32 @llvm.ctpop.i32(i32 %8653)
  %8655 = trunc i32 %8654 to i8
  %8656 = and i8 %8655, 1
  %8657 = xor i8 %8656, 1
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8657, i8* %8658, align 1
  %8659 = xor i64 3, %8646
  %8660 = trunc i64 %8659 to i32
  %8661 = xor i32 %8660, %8649
  %8662 = lshr i32 %8661, 4
  %8663 = trunc i32 %8662 to i8
  %8664 = and i8 %8663, 1
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8664, i8* %8665, align 1
  %8666 = icmp eq i32 %8649, 0
  %8667 = zext i1 %8666 to i8
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8667, i8* %8668, align 1
  %8669 = lshr i32 %8649, 31
  %8670 = trunc i32 %8669 to i8
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8670, i8* %8671, align 1
  %8672 = lshr i32 %8645, 31
  %8673 = xor i32 %8669, %8672
  %8674 = add i32 %8673, %8672
  %8675 = icmp eq i32 %8674, 2
  %8676 = zext i1 %8675 to i8
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8676, i8* %8677, align 1
  store %struct.Memory* %loadMem_46d392, %struct.Memory** %MEMORY
  %loadMem_46d395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 33
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %8680 to i64*
  %8681 = load i64, i64* %PC.i323
  %8682 = add i64 %8681, 68
  %8683 = load i64, i64* %PC.i323
  %8684 = add i64 %8683, 6
  %8685 = load i64, i64* %PC.i323
  %8686 = add i64 %8685, 6
  store i64 %8686, i64* %PC.i323
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8688 = load i8, i8* %8687, align 1
  store i8 %8688, i8* %BRANCH_TAKEN, align 1
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8690 = icmp ne i8 %8688, 0
  %8691 = select i1 %8690, i64 %8682, i64 %8684
  store i64 %8691, i64* %8689, align 8
  store %struct.Memory* %loadMem_46d395, %struct.Memory** %MEMORY
  %loadBr_46d395 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d395 = icmp eq i8 %loadBr_46d395, 1
  br i1 %cmpBr_46d395, label %block_.L_46d3d9, label %block_46d39b

block_46d39b:                                     ; preds = %block_.L_46d381
  %loadMem_46d39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 33
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %8694 to i64*
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 1
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 15
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %8700 to i64*
  %8701 = load i64, i64* %RBP.i322
  %8702 = sub i64 %8701, 16
  %8703 = load i64, i64* %PC.i320
  %8704 = add i64 %8703, 4
  store i64 %8704, i64* %PC.i320
  %8705 = inttoptr i64 %8702 to i64*
  %8706 = load i64, i64* %8705
  store i64 %8706, i64* %RAX.i321, align 8
  store %struct.Memory* %loadMem_46d39b, %struct.Memory** %MEMORY
  %loadMem_46d39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 33
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %8709 to i64*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 5
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %RCX.i318 = bitcast %union.anon* %8712 to i64*
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 15
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %8715 to i64*
  %8716 = load i64, i64* %RBP.i319
  %8717 = sub i64 %8716, 24
  %8718 = load i64, i64* %PC.i317
  %8719 = add i64 %8718, 3
  store i64 %8719, i64* %PC.i317
  %8720 = inttoptr i64 %8717 to i32*
  %8721 = load i32, i32* %8720
  %8722 = zext i32 %8721 to i64
  store i64 %8722, i64* %RCX.i318, align 8
  store %struct.Memory* %loadMem_46d39f, %struct.Memory** %MEMORY
  %loadMem_46d3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 5
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RCX.i316 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %RCX.i316
  %8730 = load i64, i64* %PC.i315
  %8731 = add i64 %8730, 3
  store i64 %8731, i64* %PC.i315
  %8732 = trunc i64 %8729 to i32
  %8733 = sub i32 %8732, 20
  %8734 = zext i32 %8733 to i64
  store i64 %8734, i64* %RCX.i316, align 8
  %8735 = icmp ult i32 %8732, 20
  %8736 = zext i1 %8735 to i8
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8736, i8* %8737, align 1
  %8738 = and i32 %8733, 255
  %8739 = call i32 @llvm.ctpop.i32(i32 %8738)
  %8740 = trunc i32 %8739 to i8
  %8741 = and i8 %8740, 1
  %8742 = xor i8 %8741, 1
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8742, i8* %8743, align 1
  %8744 = xor i64 20, %8729
  %8745 = trunc i64 %8744 to i32
  %8746 = xor i32 %8745, %8733
  %8747 = lshr i32 %8746, 4
  %8748 = trunc i32 %8747 to i8
  %8749 = and i8 %8748, 1
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8749, i8* %8750, align 1
  %8751 = icmp eq i32 %8733, 0
  %8752 = zext i1 %8751 to i8
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8752, i8* %8753, align 1
  %8754 = lshr i32 %8733, 31
  %8755 = trunc i32 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8755, i8* %8756, align 1
  %8757 = lshr i32 %8732, 31
  %8758 = xor i32 %8754, %8757
  %8759 = add i32 %8758, %8757
  %8760 = icmp eq i32 %8759, 2
  %8761 = zext i1 %8760 to i8
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8761, i8* %8762, align 1
  store %struct.Memory* %loadMem_46d3a2, %struct.Memory** %MEMORY
  %loadMem_46d3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 33
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %8765 to i64*
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8767 = getelementptr inbounds %struct.GPR, %struct.GPR* %8766, i32 0, i32 5
  %8768 = getelementptr inbounds %struct.Reg, %struct.Reg* %8767, i32 0, i32 0
  %ECX.i313 = bitcast %union.anon* %8768 to i32*
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8770 = getelementptr inbounds %struct.GPR, %struct.GPR* %8769, i32 0, i32 7
  %8771 = getelementptr inbounds %struct.Reg, %struct.Reg* %8770, i32 0, i32 0
  %RDX.i314 = bitcast %union.anon* %8771 to i64*
  %8772 = load i32, i32* %ECX.i313
  %8773 = zext i32 %8772 to i64
  %8774 = load i64, i64* %PC.i312
  %8775 = add i64 %8774, 3
  store i64 %8775, i64* %PC.i312
  %8776 = shl i64 %8773, 32
  %8777 = ashr exact i64 %8776, 32
  store i64 %8777, i64* %RDX.i314, align 8
  store %struct.Memory* %loadMem_46d3a5, %struct.Memory** %MEMORY
  %loadMem_46d3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 33
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %8780 to i64*
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8782 = getelementptr inbounds %struct.GPR, %struct.GPR* %8781, i32 0, i32 1
  %8783 = getelementptr inbounds %struct.Reg, %struct.Reg* %8782, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %8783 to i64*
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8785 = getelementptr inbounds %struct.GPR, %struct.GPR* %8784, i32 0, i32 7
  %8786 = getelementptr inbounds %struct.Reg, %struct.Reg* %8785, i32 0, i32 0
  %RDX.i311 = bitcast %union.anon* %8786 to i64*
  %8787 = load i64, i64* %RAX.i310
  %8788 = load i64, i64* %RDX.i311
  %8789 = mul i64 %8788, 4
  %8790 = add i64 %8789, %8787
  %8791 = load i64, i64* %PC.i309
  %8792 = add i64 %8791, 4
  store i64 %8792, i64* %PC.i309
  %8793 = inttoptr i64 %8790 to i32*
  %8794 = load i32, i32* %8793
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8795, align 1
  %8796 = and i32 %8794, 255
  %8797 = call i32 @llvm.ctpop.i32(i32 %8796)
  %8798 = trunc i32 %8797 to i8
  %8799 = and i8 %8798, 1
  %8800 = xor i8 %8799, 1
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8800, i8* %8801, align 1
  %8802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8802, align 1
  %8803 = icmp eq i32 %8794, 0
  %8804 = zext i1 %8803 to i8
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8804, i8* %8805, align 1
  %8806 = lshr i32 %8794, 31
  %8807 = trunc i32 %8806 to i8
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8807, i8* %8808, align 1
  %8809 = lshr i32 %8794, 31
  %8810 = xor i32 %8806, %8809
  %8811 = add i32 %8810, %8809
  %8812 = icmp eq i32 %8811, 2
  %8813 = zext i1 %8812 to i8
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8813, i8* %8814, align 1
  store %struct.Memory* %loadMem_46d3a8, %struct.Memory** %MEMORY
  %loadMem_46d3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 33
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %8817 to i64*
  %8818 = load i64, i64* %PC.i308
  %8819 = add i64 %8818, 45
  %8820 = load i64, i64* %PC.i308
  %8821 = add i64 %8820, 6
  %8822 = load i64, i64* %PC.i308
  %8823 = add i64 %8822, 6
  store i64 %8823, i64* %PC.i308
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8825 = load i8, i8* %8824, align 1
  %8826 = icmp eq i8 %8825, 0
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8828 = load i8, i8* %8827, align 1
  %8829 = icmp ne i8 %8828, 0
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8831 = load i8, i8* %8830, align 1
  %8832 = icmp ne i8 %8831, 0
  %8833 = xor i1 %8829, %8832
  %8834 = xor i1 %8833, true
  %8835 = and i1 %8826, %8834
  %8836 = zext i1 %8835 to i8
  store i8 %8836, i8* %BRANCH_TAKEN, align 1
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8838 = select i1 %8835, i64 %8819, i64 %8821
  store i64 %8838, i64* %8837, align 8
  store %struct.Memory* %loadMem_46d3ac, %struct.Memory** %MEMORY
  %loadBr_46d3ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d3ac = icmp eq i8 %loadBr_46d3ac, 1
  br i1 %cmpBr_46d3ac, label %block_.L_46d3d9, label %block_46d3b2

block_46d3b2:                                     ; preds = %block_46d39b
  %loadMem_46d3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 33
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %8841 to i64*
  %8842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8843 = getelementptr inbounds %struct.GPR, %struct.GPR* %8842, i32 0, i32 1
  %8844 = getelementptr inbounds %struct.Reg, %struct.Reg* %8843, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %8844 to i64*
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8846 = getelementptr inbounds %struct.GPR, %struct.GPR* %8845, i32 0, i32 15
  %8847 = getelementptr inbounds %struct.Reg, %struct.Reg* %8846, i32 0, i32 0
  %RBP.i307 = bitcast %union.anon* %8847 to i64*
  %8848 = load i64, i64* %RBP.i307
  %8849 = sub i64 %8848, 24
  %8850 = load i64, i64* %PC.i305
  %8851 = add i64 %8850, 4
  store i64 %8851, i64* %PC.i305
  %8852 = inttoptr i64 %8849 to i32*
  %8853 = load i32, i32* %8852
  %8854 = sext i32 %8853 to i64
  store i64 %8854, i64* %RAX.i306, align 8
  store %struct.Memory* %loadMem_46d3b2, %struct.Memory** %MEMORY
  %loadMem_46d3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 33
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %8857 to i64*
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 1
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %8860 to i64*
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 15
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %8863 to i64*
  %8864 = load i64, i64* %RBP.i304
  %8865 = load i64, i64* %RAX.i303
  %8866 = mul i64 %8865, 4
  %8867 = add i64 %8864, -1632
  %8868 = add i64 %8867, %8866
  %8869 = load i64, i64* %PC.i302
  %8870 = add i64 %8869, 8
  store i64 %8870, i64* %PC.i302
  %8871 = inttoptr i64 %8868 to i32*
  %8872 = load i32, i32* %8871
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8873, align 1
  %8874 = and i32 %8872, 255
  %8875 = call i32 @llvm.ctpop.i32(i32 %8874)
  %8876 = trunc i32 %8875 to i8
  %8877 = and i8 %8876, 1
  %8878 = xor i8 %8877, 1
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8878, i8* %8879, align 1
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8880, align 1
  %8881 = icmp eq i32 %8872, 0
  %8882 = zext i1 %8881 to i8
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8882, i8* %8883, align 1
  %8884 = lshr i32 %8872, 31
  %8885 = trunc i32 %8884 to i8
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8885, i8* %8886, align 1
  %8887 = lshr i32 %8872, 31
  %8888 = xor i32 %8884, %8887
  %8889 = add i32 %8888, %8887
  %8890 = icmp eq i32 %8889, 2
  %8891 = zext i1 %8890 to i8
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8891, i8* %8892, align 1
  store %struct.Memory* %loadMem_46d3b6, %struct.Memory** %MEMORY
  %loadMem_46d3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 33
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %8895 to i64*
  %8896 = load i64, i64* %PC.i301
  %8897 = add i64 %8896, 27
  %8898 = load i64, i64* %PC.i301
  %8899 = add i64 %8898, 6
  %8900 = load i64, i64* %PC.i301
  %8901 = add i64 %8900, 6
  store i64 %8901, i64* %PC.i301
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8903 = load i8, i8* %8902, align 1
  %8904 = icmp ne i8 %8903, 0
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8906 = load i8, i8* %8905, align 1
  %8907 = icmp ne i8 %8906, 0
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8909 = load i8, i8* %8908, align 1
  %8910 = icmp ne i8 %8909, 0
  %8911 = xor i1 %8907, %8910
  %8912 = or i1 %8904, %8911
  %8913 = zext i1 %8912 to i8
  store i8 %8913, i8* %BRANCH_TAKEN, align 1
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8915 = select i1 %8912, i64 %8897, i64 %8899
  store i64 %8915, i64* %8914, align 8
  store %struct.Memory* %loadMem_46d3be, %struct.Memory** %MEMORY
  %loadBr_46d3be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d3be = icmp eq i8 %loadBr_46d3be, 1
  br i1 %cmpBr_46d3be, label %block_.L_46d3d9, label %block_46d3c4

block_46d3c4:                                     ; preds = %block_46d3b2
  %loadMem_46d3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 33
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %8918 to i64*
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8920 = getelementptr inbounds %struct.GPR, %struct.GPR* %8919, i32 0, i32 1
  %8921 = getelementptr inbounds %struct.Reg, %struct.Reg* %8920, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %8921 to i64*
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8923 = getelementptr inbounds %struct.GPR, %struct.GPR* %8922, i32 0, i32 15
  %8924 = getelementptr inbounds %struct.Reg, %struct.Reg* %8923, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %8924 to i64*
  %8925 = load i64, i64* %RBP.i300
  %8926 = sub i64 %8925, 24
  %8927 = load i64, i64* %PC.i298
  %8928 = add i64 %8927, 4
  store i64 %8928, i64* %PC.i298
  %8929 = inttoptr i64 %8926 to i32*
  %8930 = load i32, i32* %8929
  %8931 = sext i32 %8930 to i64
  store i64 %8931, i64* %RAX.i299, align 8
  store %struct.Memory* %loadMem_46d3c4, %struct.Memory** %MEMORY
  %loadMem_46d3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 33
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 1
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %8937 to i64*
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 5
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %RCX.i296 = bitcast %union.anon* %8940 to i64*
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8942 = getelementptr inbounds %struct.GPR, %struct.GPR* %8941, i32 0, i32 15
  %8943 = getelementptr inbounds %struct.Reg, %struct.Reg* %8942, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %8943 to i64*
  %8944 = load i64, i64* %RBP.i297
  %8945 = load i64, i64* %RAX.i295
  %8946 = mul i64 %8945, 4
  %8947 = add i64 %8944, -1632
  %8948 = add i64 %8947, %8946
  %8949 = load i64, i64* %PC.i294
  %8950 = add i64 %8949, 7
  store i64 %8950, i64* %PC.i294
  %8951 = inttoptr i64 %8948 to i32*
  %8952 = load i32, i32* %8951
  %8953 = zext i32 %8952 to i64
  store i64 %8953, i64* %RCX.i296, align 8
  store %struct.Memory* %loadMem_46d3c8, %struct.Memory** %MEMORY
  %loadMem_46d3cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8955 = getelementptr inbounds %struct.GPR, %struct.GPR* %8954, i32 0, i32 33
  %8956 = getelementptr inbounds %struct.Reg, %struct.Reg* %8955, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %8956 to i64*
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 5
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %8959 to i64*
  %8960 = load i64, i64* %RCX.i293
  %8961 = load i64, i64* %PC.i292
  %8962 = add i64 %8961, 3
  store i64 %8962, i64* %PC.i292
  %8963 = trunc i64 %8960 to i32
  %8964 = add i32 -1, %8963
  %8965 = zext i32 %8964 to i64
  store i64 %8965, i64* %RCX.i293, align 8
  %8966 = icmp ult i32 %8964, %8963
  %8967 = icmp ult i32 %8964, -1
  %8968 = or i1 %8966, %8967
  %8969 = zext i1 %8968 to i8
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8969, i8* %8970, align 1
  %8971 = and i32 %8964, 255
  %8972 = call i32 @llvm.ctpop.i32(i32 %8971)
  %8973 = trunc i32 %8972 to i8
  %8974 = and i8 %8973, 1
  %8975 = xor i8 %8974, 1
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8975, i8* %8976, align 1
  %8977 = xor i64 -1, %8960
  %8978 = trunc i64 %8977 to i32
  %8979 = xor i32 %8978, %8964
  %8980 = lshr i32 %8979, 4
  %8981 = trunc i32 %8980 to i8
  %8982 = and i8 %8981, 1
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8982, i8* %8983, align 1
  %8984 = icmp eq i32 %8964, 0
  %8985 = zext i1 %8984 to i8
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8985, i8* %8986, align 1
  %8987 = lshr i32 %8964, 31
  %8988 = trunc i32 %8987 to i8
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8988, i8* %8989, align 1
  %8990 = lshr i32 %8963, 31
  %8991 = xor i32 %8987, %8990
  %8992 = xor i32 %8987, 1
  %8993 = add i32 %8991, %8992
  %8994 = icmp eq i32 %8993, 2
  %8995 = zext i1 %8994 to i8
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8995, i8* %8996, align 1
  store %struct.Memory* %loadMem_46d3cf, %struct.Memory** %MEMORY
  %loadMem_46d3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 33
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 5
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %ECX.i289 = bitcast %union.anon* %9002 to i32*
  %9003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9004 = getelementptr inbounds %struct.GPR, %struct.GPR* %9003, i32 0, i32 1
  %9005 = getelementptr inbounds %struct.Reg, %struct.Reg* %9004, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %9005 to i64*
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 15
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %9008 to i64*
  %9009 = load i64, i64* %RBP.i291
  %9010 = load i64, i64* %RAX.i290
  %9011 = mul i64 %9010, 4
  %9012 = add i64 %9009, -1632
  %9013 = add i64 %9012, %9011
  %9014 = load i32, i32* %ECX.i289
  %9015 = zext i32 %9014 to i64
  %9016 = load i64, i64* %PC.i288
  %9017 = add i64 %9016, 7
  store i64 %9017, i64* %PC.i288
  %9018 = inttoptr i64 %9013 to i32*
  store i32 %9014, i32* %9018
  store %struct.Memory* %loadMem_46d3d2, %struct.Memory** %MEMORY
  br label %block_.L_46d3d9

block_.L_46d3d9:                                  ; preds = %block_46d3c4, %block_46d3b2, %block_46d39b, %block_.L_46d381
  %loadMem_46d3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 33
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %9021 to i64*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 1
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %9024 to i64*
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 15
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %9027 to i64*
  %9028 = load i64, i64* %RBP.i287
  %9029 = sub i64 %9028, 24
  %9030 = load i64, i64* %PC.i285
  %9031 = add i64 %9030, 3
  store i64 %9031, i64* %PC.i285
  %9032 = inttoptr i64 %9029 to i32*
  %9033 = load i32, i32* %9032
  %9034 = zext i32 %9033 to i64
  store i64 %9034, i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_46d3d9, %struct.Memory** %MEMORY
  %loadMem_46d3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 33
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %9037 to i64*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 1
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %RAX.i284 = bitcast %union.anon* %9040 to i64*
  %9041 = load i64, i64* %RAX.i284
  %9042 = load i64, i64* %PC.i283
  %9043 = add i64 %9042, 3
  store i64 %9043, i64* %PC.i283
  %9044 = trunc i64 %9041 to i32
  %9045 = add i32 1, %9044
  %9046 = zext i32 %9045 to i64
  store i64 %9046, i64* %RAX.i284, align 8
  %9047 = icmp ult i32 %9045, %9044
  %9048 = icmp ult i32 %9045, 1
  %9049 = or i1 %9047, %9048
  %9050 = zext i1 %9049 to i8
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9050, i8* %9051, align 1
  %9052 = and i32 %9045, 255
  %9053 = call i32 @llvm.ctpop.i32(i32 %9052)
  %9054 = trunc i32 %9053 to i8
  %9055 = and i8 %9054, 1
  %9056 = xor i8 %9055, 1
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9056, i8* %9057, align 1
  %9058 = xor i64 1, %9041
  %9059 = trunc i64 %9058 to i32
  %9060 = xor i32 %9059, %9045
  %9061 = lshr i32 %9060, 4
  %9062 = trunc i32 %9061 to i8
  %9063 = and i8 %9062, 1
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9063, i8* %9064, align 1
  %9065 = icmp eq i32 %9045, 0
  %9066 = zext i1 %9065 to i8
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9066, i8* %9067, align 1
  %9068 = lshr i32 %9045, 31
  %9069 = trunc i32 %9068 to i8
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9069, i8* %9070, align 1
  %9071 = lshr i32 %9044, 31
  %9072 = xor i32 %9068, %9071
  %9073 = add i32 %9072, %9068
  %9074 = icmp eq i32 %9073, 2
  %9075 = zext i1 %9074 to i8
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9075, i8* %9076, align 1
  store %struct.Memory* %loadMem_46d3dc, %struct.Memory** %MEMORY
  %loadMem_46d3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 33
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %9079 to i64*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 1
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %EAX.i281 = bitcast %union.anon* %9082 to i32*
  %9083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9084 = getelementptr inbounds %struct.GPR, %struct.GPR* %9083, i32 0, i32 5
  %9085 = getelementptr inbounds %struct.Reg, %struct.Reg* %9084, i32 0, i32 0
  %RCX.i282 = bitcast %union.anon* %9085 to i64*
  %9086 = load i32, i32* %EAX.i281
  %9087 = zext i32 %9086 to i64
  %9088 = load i64, i64* %PC.i280
  %9089 = add i64 %9088, 3
  store i64 %9089, i64* %PC.i280
  %9090 = shl i64 %9087, 32
  %9091 = ashr exact i64 %9090, 32
  store i64 %9091, i64* %RCX.i282, align 8
  store %struct.Memory* %loadMem_46d3df, %struct.Memory** %MEMORY
  %loadMem_46d3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 33
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %9094 to i64*
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 1
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %9097 to i64*
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9099 = getelementptr inbounds %struct.GPR, %struct.GPR* %9098, i32 0, i32 5
  %9100 = getelementptr inbounds %struct.Reg, %struct.Reg* %9099, i32 0, i32 0
  %RCX.i279 = bitcast %union.anon* %9100 to i64*
  %9101 = load i64, i64* %RCX.i279
  %9102 = add i64 %9101, 12099168
  %9103 = load i64, i64* %PC.i277
  %9104 = add i64 %9103, 8
  store i64 %9104, i64* %PC.i277
  %9105 = inttoptr i64 %9102 to i8*
  %9106 = load i8, i8* %9105
  %9107 = zext i8 %9106 to i64
  store i64 %9107, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_46d3e2, %struct.Memory** %MEMORY
  %loadMem_46d3ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 33
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %9110 to i64*
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 1
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %EAX.i276 = bitcast %union.anon* %9113 to i32*
  %9114 = load i32, i32* %EAX.i276
  %9115 = zext i32 %9114 to i64
  %9116 = load i64, i64* %PC.i275
  %9117 = add i64 %9116, 3
  store i64 %9117, i64* %PC.i275
  %9118 = sub i32 %9114, 3
  %9119 = icmp ult i32 %9114, 3
  %9120 = zext i1 %9119 to i8
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9120, i8* %9121, align 1
  %9122 = and i32 %9118, 255
  %9123 = call i32 @llvm.ctpop.i32(i32 %9122)
  %9124 = trunc i32 %9123 to i8
  %9125 = and i8 %9124, 1
  %9126 = xor i8 %9125, 1
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9126, i8* %9127, align 1
  %9128 = xor i64 3, %9115
  %9129 = trunc i64 %9128 to i32
  %9130 = xor i32 %9129, %9118
  %9131 = lshr i32 %9130, 4
  %9132 = trunc i32 %9131 to i8
  %9133 = and i8 %9132, 1
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9133, i8* %9134, align 1
  %9135 = icmp eq i32 %9118, 0
  %9136 = zext i1 %9135 to i8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9136, i8* %9137, align 1
  %9138 = lshr i32 %9118, 31
  %9139 = trunc i32 %9138 to i8
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9139, i8* %9140, align 1
  %9141 = lshr i32 %9114, 31
  %9142 = xor i32 %9138, %9141
  %9143 = add i32 %9142, %9141
  %9144 = icmp eq i32 %9143, 2
  %9145 = zext i1 %9144 to i8
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9145, i8* %9146, align 1
  store %struct.Memory* %loadMem_46d3ea, %struct.Memory** %MEMORY
  %loadMem_46d3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 33
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %9149 to i64*
  %9150 = load i64, i64* %PC.i274
  %9151 = add i64 %9150, 68
  %9152 = load i64, i64* %PC.i274
  %9153 = add i64 %9152, 6
  %9154 = load i64, i64* %PC.i274
  %9155 = add i64 %9154, 6
  store i64 %9155, i64* %PC.i274
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9157 = load i8, i8* %9156, align 1
  store i8 %9157, i8* %BRANCH_TAKEN, align 1
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9159 = icmp ne i8 %9157, 0
  %9160 = select i1 %9159, i64 %9151, i64 %9153
  store i64 %9160, i64* %9158, align 8
  store %struct.Memory* %loadMem_46d3ed, %struct.Memory** %MEMORY
  %loadBr_46d3ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d3ed = icmp eq i8 %loadBr_46d3ed, 1
  br i1 %cmpBr_46d3ed, label %block_.L_46d431, label %block_46d3f3

block_46d3f3:                                     ; preds = %block_.L_46d3d9
  %loadMem_46d3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 33
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %9163 to i64*
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 1
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %9166 to i64*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 15
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %9169 to i64*
  %9170 = load i64, i64* %RBP.i273
  %9171 = sub i64 %9170, 16
  %9172 = load i64, i64* %PC.i271
  %9173 = add i64 %9172, 4
  store i64 %9173, i64* %PC.i271
  %9174 = inttoptr i64 %9171 to i64*
  %9175 = load i64, i64* %9174
  store i64 %9175, i64* %RAX.i272, align 8
  store %struct.Memory* %loadMem_46d3f3, %struct.Memory** %MEMORY
  %loadMem_46d3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 33
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 5
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %9181 to i64*
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 15
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %9184 to i64*
  %9185 = load i64, i64* %RBP.i270
  %9186 = sub i64 %9185, 24
  %9187 = load i64, i64* %PC.i268
  %9188 = add i64 %9187, 3
  store i64 %9188, i64* %PC.i268
  %9189 = inttoptr i64 %9186 to i32*
  %9190 = load i32, i32* %9189
  %9191 = zext i32 %9190 to i64
  store i64 %9191, i64* %RCX.i269, align 8
  store %struct.Memory* %loadMem_46d3f7, %struct.Memory** %MEMORY
  %loadMem_46d3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 33
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %9194 to i64*
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 5
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %RCX.i267 = bitcast %union.anon* %9197 to i64*
  %9198 = load i64, i64* %RCX.i267
  %9199 = load i64, i64* %PC.i266
  %9200 = add i64 %9199, 3
  store i64 %9200, i64* %PC.i266
  %9201 = trunc i64 %9198 to i32
  %9202 = add i32 1, %9201
  %9203 = zext i32 %9202 to i64
  store i64 %9203, i64* %RCX.i267, align 8
  %9204 = icmp ult i32 %9202, %9201
  %9205 = icmp ult i32 %9202, 1
  %9206 = or i1 %9204, %9205
  %9207 = zext i1 %9206 to i8
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9207, i8* %9208, align 1
  %9209 = and i32 %9202, 255
  %9210 = call i32 @llvm.ctpop.i32(i32 %9209)
  %9211 = trunc i32 %9210 to i8
  %9212 = and i8 %9211, 1
  %9213 = xor i8 %9212, 1
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9213, i8* %9214, align 1
  %9215 = xor i64 1, %9198
  %9216 = trunc i64 %9215 to i32
  %9217 = xor i32 %9216, %9202
  %9218 = lshr i32 %9217, 4
  %9219 = trunc i32 %9218 to i8
  %9220 = and i8 %9219, 1
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9220, i8* %9221, align 1
  %9222 = icmp eq i32 %9202, 0
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9223, i8* %9224, align 1
  %9225 = lshr i32 %9202, 31
  %9226 = trunc i32 %9225 to i8
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9226, i8* %9227, align 1
  %9228 = lshr i32 %9201, 31
  %9229 = xor i32 %9225, %9228
  %9230 = add i32 %9229, %9225
  %9231 = icmp eq i32 %9230, 2
  %9232 = zext i1 %9231 to i8
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9232, i8* %9233, align 1
  store %struct.Memory* %loadMem_46d3fa, %struct.Memory** %MEMORY
  %loadMem_46d3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9235 = getelementptr inbounds %struct.GPR, %struct.GPR* %9234, i32 0, i32 33
  %9236 = getelementptr inbounds %struct.Reg, %struct.Reg* %9235, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %9236 to i64*
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9238 = getelementptr inbounds %struct.GPR, %struct.GPR* %9237, i32 0, i32 5
  %9239 = getelementptr inbounds %struct.Reg, %struct.Reg* %9238, i32 0, i32 0
  %ECX.i264 = bitcast %union.anon* %9239 to i32*
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9241 = getelementptr inbounds %struct.GPR, %struct.GPR* %9240, i32 0, i32 7
  %9242 = getelementptr inbounds %struct.Reg, %struct.Reg* %9241, i32 0, i32 0
  %RDX.i265 = bitcast %union.anon* %9242 to i64*
  %9243 = load i32, i32* %ECX.i264
  %9244 = zext i32 %9243 to i64
  %9245 = load i64, i64* %PC.i263
  %9246 = add i64 %9245, 3
  store i64 %9246, i64* %PC.i263
  %9247 = shl i64 %9244, 32
  %9248 = ashr exact i64 %9247, 32
  store i64 %9248, i64* %RDX.i265, align 8
  store %struct.Memory* %loadMem_46d3fd, %struct.Memory** %MEMORY
  %loadMem_46d400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 33
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %9251 to i64*
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 1
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %9254 to i64*
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 7
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %9257 to i64*
  %9258 = load i64, i64* %RAX.i261
  %9259 = load i64, i64* %RDX.i262
  %9260 = mul i64 %9259, 4
  %9261 = add i64 %9260, %9258
  %9262 = load i64, i64* %PC.i260
  %9263 = add i64 %9262, 4
  store i64 %9263, i64* %PC.i260
  %9264 = inttoptr i64 %9261 to i32*
  %9265 = load i32, i32* %9264
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9266, align 1
  %9267 = and i32 %9265, 255
  %9268 = call i32 @llvm.ctpop.i32(i32 %9267)
  %9269 = trunc i32 %9268 to i8
  %9270 = and i8 %9269, 1
  %9271 = xor i8 %9270, 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9271, i8* %9272, align 1
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9273, align 1
  %9274 = icmp eq i32 %9265, 0
  %9275 = zext i1 %9274 to i8
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9275, i8* %9276, align 1
  %9277 = lshr i32 %9265, 31
  %9278 = trunc i32 %9277 to i8
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9278, i8* %9279, align 1
  %9280 = lshr i32 %9265, 31
  %9281 = xor i32 %9277, %9280
  %9282 = add i32 %9281, %9280
  %9283 = icmp eq i32 %9282, 2
  %9284 = zext i1 %9283 to i8
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9284, i8* %9285, align 1
  store %struct.Memory* %loadMem_46d400, %struct.Memory** %MEMORY
  %loadMem_46d404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 33
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %9288 to i64*
  %9289 = load i64, i64* %PC.i259
  %9290 = add i64 %9289, 45
  %9291 = load i64, i64* %PC.i259
  %9292 = add i64 %9291, 6
  %9293 = load i64, i64* %PC.i259
  %9294 = add i64 %9293, 6
  store i64 %9294, i64* %PC.i259
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9296 = load i8, i8* %9295, align 1
  %9297 = icmp eq i8 %9296, 0
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9299 = load i8, i8* %9298, align 1
  %9300 = icmp ne i8 %9299, 0
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9302 = load i8, i8* %9301, align 1
  %9303 = icmp ne i8 %9302, 0
  %9304 = xor i1 %9300, %9303
  %9305 = xor i1 %9304, true
  %9306 = and i1 %9297, %9305
  %9307 = zext i1 %9306 to i8
  store i8 %9307, i8* %BRANCH_TAKEN, align 1
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9309 = select i1 %9306, i64 %9290, i64 %9292
  store i64 %9309, i64* %9308, align 8
  store %struct.Memory* %loadMem_46d404, %struct.Memory** %MEMORY
  %loadBr_46d404 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d404 = icmp eq i8 %loadBr_46d404, 1
  br i1 %cmpBr_46d404, label %block_.L_46d431, label %block_46d40a

block_46d40a:                                     ; preds = %block_46d3f3
  %loadMem_46d40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9311 = getelementptr inbounds %struct.GPR, %struct.GPR* %9310, i32 0, i32 33
  %9312 = getelementptr inbounds %struct.Reg, %struct.Reg* %9311, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %9312 to i64*
  %9313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9314 = getelementptr inbounds %struct.GPR, %struct.GPR* %9313, i32 0, i32 1
  %9315 = getelementptr inbounds %struct.Reg, %struct.Reg* %9314, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %9315 to i64*
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9317 = getelementptr inbounds %struct.GPR, %struct.GPR* %9316, i32 0, i32 15
  %9318 = getelementptr inbounds %struct.Reg, %struct.Reg* %9317, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %9318 to i64*
  %9319 = load i64, i64* %RBP.i258
  %9320 = sub i64 %9319, 24
  %9321 = load i64, i64* %PC.i256
  %9322 = add i64 %9321, 4
  store i64 %9322, i64* %PC.i256
  %9323 = inttoptr i64 %9320 to i32*
  %9324 = load i32, i32* %9323
  %9325 = sext i32 %9324 to i64
  store i64 %9325, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_46d40a, %struct.Memory** %MEMORY
  %loadMem_46d40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9327 = getelementptr inbounds %struct.GPR, %struct.GPR* %9326, i32 0, i32 33
  %9328 = getelementptr inbounds %struct.Reg, %struct.Reg* %9327, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %9328 to i64*
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9330 = getelementptr inbounds %struct.GPR, %struct.GPR* %9329, i32 0, i32 1
  %9331 = getelementptr inbounds %struct.Reg, %struct.Reg* %9330, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %9331 to i64*
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 15
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %9334 to i64*
  %9335 = load i64, i64* %RBP.i255
  %9336 = load i64, i64* %RAX.i254
  %9337 = mul i64 %9336, 4
  %9338 = add i64 %9335, -1632
  %9339 = add i64 %9338, %9337
  %9340 = load i64, i64* %PC.i253
  %9341 = add i64 %9340, 8
  store i64 %9341, i64* %PC.i253
  %9342 = inttoptr i64 %9339 to i32*
  %9343 = load i32, i32* %9342
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9344, align 1
  %9345 = and i32 %9343, 255
  %9346 = call i32 @llvm.ctpop.i32(i32 %9345)
  %9347 = trunc i32 %9346 to i8
  %9348 = and i8 %9347, 1
  %9349 = xor i8 %9348, 1
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9349, i8* %9350, align 1
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9351, align 1
  %9352 = icmp eq i32 %9343, 0
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9353, i8* %9354, align 1
  %9355 = lshr i32 %9343, 31
  %9356 = trunc i32 %9355 to i8
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9356, i8* %9357, align 1
  %9358 = lshr i32 %9343, 31
  %9359 = xor i32 %9355, %9358
  %9360 = add i32 %9359, %9358
  %9361 = icmp eq i32 %9360, 2
  %9362 = zext i1 %9361 to i8
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9362, i8* %9363, align 1
  store %struct.Memory* %loadMem_46d40e, %struct.Memory** %MEMORY
  %loadMem_46d416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 33
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %PC.i252
  %9368 = add i64 %9367, 27
  %9369 = load i64, i64* %PC.i252
  %9370 = add i64 %9369, 6
  %9371 = load i64, i64* %PC.i252
  %9372 = add i64 %9371, 6
  store i64 %9372, i64* %PC.i252
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9374 = load i8, i8* %9373, align 1
  %9375 = icmp ne i8 %9374, 0
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9377 = load i8, i8* %9376, align 1
  %9378 = icmp ne i8 %9377, 0
  %9379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9380 = load i8, i8* %9379, align 1
  %9381 = icmp ne i8 %9380, 0
  %9382 = xor i1 %9378, %9381
  %9383 = or i1 %9375, %9382
  %9384 = zext i1 %9383 to i8
  store i8 %9384, i8* %BRANCH_TAKEN, align 1
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9386 = select i1 %9383, i64 %9368, i64 %9370
  store i64 %9386, i64* %9385, align 8
  store %struct.Memory* %loadMem_46d416, %struct.Memory** %MEMORY
  %loadBr_46d416 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d416 = icmp eq i8 %loadBr_46d416, 1
  br i1 %cmpBr_46d416, label %block_.L_46d431, label %block_46d41c

block_46d41c:                                     ; preds = %block_46d40a
  %loadMem_46d41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 33
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %9389 to i64*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 1
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %9392 to i64*
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 15
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %RBP.i251
  %9397 = sub i64 %9396, 24
  %9398 = load i64, i64* %PC.i249
  %9399 = add i64 %9398, 4
  store i64 %9399, i64* %PC.i249
  %9400 = inttoptr i64 %9397 to i32*
  %9401 = load i32, i32* %9400
  %9402 = sext i32 %9401 to i64
  store i64 %9402, i64* %RAX.i250, align 8
  store %struct.Memory* %loadMem_46d41c, %struct.Memory** %MEMORY
  %loadMem_46d420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 33
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %9405 to i64*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 1
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %RAX.i246 = bitcast %union.anon* %9408 to i64*
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9410 = getelementptr inbounds %struct.GPR, %struct.GPR* %9409, i32 0, i32 5
  %9411 = getelementptr inbounds %struct.Reg, %struct.Reg* %9410, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %9411 to i64*
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 15
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %RBP.i248 = bitcast %union.anon* %9414 to i64*
  %9415 = load i64, i64* %RBP.i248
  %9416 = load i64, i64* %RAX.i246
  %9417 = mul i64 %9416, 4
  %9418 = add i64 %9415, -1632
  %9419 = add i64 %9418, %9417
  %9420 = load i64, i64* %PC.i245
  %9421 = add i64 %9420, 7
  store i64 %9421, i64* %PC.i245
  %9422 = inttoptr i64 %9419 to i32*
  %9423 = load i32, i32* %9422
  %9424 = zext i32 %9423 to i64
  store i64 %9424, i64* %RCX.i247, align 8
  store %struct.Memory* %loadMem_46d420, %struct.Memory** %MEMORY
  %loadMem_46d427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9426 = getelementptr inbounds %struct.GPR, %struct.GPR* %9425, i32 0, i32 33
  %9427 = getelementptr inbounds %struct.Reg, %struct.Reg* %9426, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %9427 to i64*
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 5
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %9430 to i64*
  %9431 = load i64, i64* %RCX.i244
  %9432 = load i64, i64* %PC.i243
  %9433 = add i64 %9432, 3
  store i64 %9433, i64* %PC.i243
  %9434 = trunc i64 %9431 to i32
  %9435 = add i32 -1, %9434
  %9436 = zext i32 %9435 to i64
  store i64 %9436, i64* %RCX.i244, align 8
  %9437 = icmp ult i32 %9435, %9434
  %9438 = icmp ult i32 %9435, -1
  %9439 = or i1 %9437, %9438
  %9440 = zext i1 %9439 to i8
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9440, i8* %9441, align 1
  %9442 = and i32 %9435, 255
  %9443 = call i32 @llvm.ctpop.i32(i32 %9442)
  %9444 = trunc i32 %9443 to i8
  %9445 = and i8 %9444, 1
  %9446 = xor i8 %9445, 1
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9446, i8* %9447, align 1
  %9448 = xor i64 -1, %9431
  %9449 = trunc i64 %9448 to i32
  %9450 = xor i32 %9449, %9435
  %9451 = lshr i32 %9450, 4
  %9452 = trunc i32 %9451 to i8
  %9453 = and i8 %9452, 1
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9453, i8* %9454, align 1
  %9455 = icmp eq i32 %9435, 0
  %9456 = zext i1 %9455 to i8
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9456, i8* %9457, align 1
  %9458 = lshr i32 %9435, 31
  %9459 = trunc i32 %9458 to i8
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9459, i8* %9460, align 1
  %9461 = lshr i32 %9434, 31
  %9462 = xor i32 %9458, %9461
  %9463 = xor i32 %9458, 1
  %9464 = add i32 %9462, %9463
  %9465 = icmp eq i32 %9464, 2
  %9466 = zext i1 %9465 to i8
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9466, i8* %9467, align 1
  store %struct.Memory* %loadMem_46d427, %struct.Memory** %MEMORY
  %loadMem_46d42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9469 = getelementptr inbounds %struct.GPR, %struct.GPR* %9468, i32 0, i32 33
  %9470 = getelementptr inbounds %struct.Reg, %struct.Reg* %9469, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %9470 to i64*
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 5
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %ECX.i240 = bitcast %union.anon* %9473 to i32*
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 1
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %RAX.i241 = bitcast %union.anon* %9476 to i64*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 15
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %9479 to i64*
  %9480 = load i64, i64* %RBP.i242
  %9481 = load i64, i64* %RAX.i241
  %9482 = mul i64 %9481, 4
  %9483 = add i64 %9480, -1632
  %9484 = add i64 %9483, %9482
  %9485 = load i32, i32* %ECX.i240
  %9486 = zext i32 %9485 to i64
  %9487 = load i64, i64* %PC.i239
  %9488 = add i64 %9487, 7
  store i64 %9488, i64* %PC.i239
  %9489 = inttoptr i64 %9484 to i32*
  store i32 %9485, i32* %9489
  store %struct.Memory* %loadMem_46d42a, %struct.Memory** %MEMORY
  br label %block_.L_46d431

block_.L_46d431:                                  ; preds = %block_46d41c, %block_46d40a, %block_46d3f3, %block_.L_46d3d9
  %loadMem_46d431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 33
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9492 to i64*
  %9493 = load i64, i64* %PC.i238
  %9494 = add i64 %9493, 5
  %9495 = load i64, i64* %PC.i238
  %9496 = add i64 %9495, 5
  store i64 %9496, i64* %PC.i238
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9494, i64* %9497, align 8
  store %struct.Memory* %loadMem_46d431, %struct.Memory** %MEMORY
  br label %block_.L_46d436

block_.L_46d436:                                  ; preds = %block_.L_46d431, %block_.L_46d2d1
  %loadMem_46d436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 33
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %9500 to i64*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 1
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %9503 to i64*
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 15
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %9506 to i64*
  %9507 = load i64, i64* %RBP.i237
  %9508 = sub i64 %9507, 24
  %9509 = load i64, i64* %PC.i235
  %9510 = add i64 %9509, 4
  store i64 %9510, i64* %PC.i235
  %9511 = inttoptr i64 %9508 to i32*
  %9512 = load i32, i32* %9511
  %9513 = sext i32 %9512 to i64
  store i64 %9513, i64* %RAX.i236, align 8
  store %struct.Memory* %loadMem_46d436, %struct.Memory** %MEMORY
  %loadMem_46d43a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9515 = getelementptr inbounds %struct.GPR, %struct.GPR* %9514, i32 0, i32 33
  %9516 = getelementptr inbounds %struct.Reg, %struct.Reg* %9515, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %9516 to i64*
  %9517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9518 = getelementptr inbounds %struct.GPR, %struct.GPR* %9517, i32 0, i32 1
  %9519 = getelementptr inbounds %struct.Reg, %struct.Reg* %9518, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %9519 to i64*
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 15
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %9522 to i64*
  %9523 = load i64, i64* %RBP.i234
  %9524 = load i64, i64* %RAX.i233
  %9525 = mul i64 %9524, 4
  %9526 = add i64 %9523, -1632
  %9527 = add i64 %9526, %9525
  %9528 = load i64, i64* %PC.i232
  %9529 = add i64 %9528, 8
  store i64 %9529, i64* %PC.i232
  %9530 = inttoptr i64 %9527 to i32*
  %9531 = load i32, i32* %9530
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9532, align 1
  %9533 = and i32 %9531, 255
  %9534 = call i32 @llvm.ctpop.i32(i32 %9533)
  %9535 = trunc i32 %9534 to i8
  %9536 = and i8 %9535, 1
  %9537 = xor i8 %9536, 1
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9537, i8* %9538, align 1
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9539, align 1
  %9540 = icmp eq i32 %9531, 0
  %9541 = zext i1 %9540 to i8
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9541, i8* %9542, align 1
  %9543 = lshr i32 %9531, 31
  %9544 = trunc i32 %9543 to i8
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9544, i8* %9545, align 1
  %9546 = lshr i32 %9531, 31
  %9547 = xor i32 %9543, %9546
  %9548 = add i32 %9547, %9546
  %9549 = icmp eq i32 %9548, 2
  %9550 = zext i1 %9549 to i8
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9550, i8* %9551, align 1
  store %struct.Memory* %loadMem_46d43a, %struct.Memory** %MEMORY
  %loadMem_46d442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9553 = getelementptr inbounds %struct.GPR, %struct.GPR* %9552, i32 0, i32 33
  %9554 = getelementptr inbounds %struct.Reg, %struct.Reg* %9553, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %9554 to i64*
  %9555 = load i64, i64* %PC.i231
  %9556 = add i64 %9555, 345
  %9557 = load i64, i64* %PC.i231
  %9558 = add i64 %9557, 6
  %9559 = load i64, i64* %PC.i231
  %9560 = add i64 %9559, 6
  store i64 %9560, i64* %PC.i231
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9562 = load i8, i8* %9561, align 1
  %9563 = icmp ne i8 %9562, 0
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9565 = load i8, i8* %9564, align 1
  %9566 = icmp ne i8 %9565, 0
  %9567 = xor i1 %9563, %9566
  %9568 = xor i1 %9567, true
  %9569 = zext i1 %9568 to i8
  store i8 %9569, i8* %BRANCH_TAKEN, align 1
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9571 = select i1 %9567, i64 %9558, i64 %9556
  store i64 %9571, i64* %9570, align 8
  store %struct.Memory* %loadMem_46d442, %struct.Memory** %MEMORY
  %loadBr_46d442 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d442 = icmp eq i8 %loadBr_46d442, 1
  br i1 %cmpBr_46d442, label %block_.L_46d59b, label %block_46d448

block_46d448:                                     ; preds = %block_.L_46d436
  %loadMem_46d448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 33
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %9574 to i64*
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 1
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %9577 to i64*
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 15
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %9580 to i64*
  %9581 = load i64, i64* %RBP.i230
  %9582 = sub i64 %9581, 24
  %9583 = load i64, i64* %PC.i228
  %9584 = add i64 %9583, 3
  store i64 %9584, i64* %PC.i228
  %9585 = inttoptr i64 %9582 to i32*
  %9586 = load i32, i32* %9585
  %9587 = zext i32 %9586 to i64
  store i64 %9587, i64* %RAX.i229, align 8
  store %struct.Memory* %loadMem_46d448, %struct.Memory** %MEMORY
  %loadMem_46d44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 33
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %9590 to i64*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 1
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %9593 to i64*
  %9594 = load i64, i64* %RAX.i227
  %9595 = load i64, i64* %PC.i226
  %9596 = add i64 %9595, 3
  store i64 %9596, i64* %PC.i226
  %9597 = trunc i64 %9594 to i32
  %9598 = add i32 20, %9597
  %9599 = zext i32 %9598 to i64
  store i64 %9599, i64* %RAX.i227, align 8
  %9600 = icmp ult i32 %9598, %9597
  %9601 = icmp ult i32 %9598, 20
  %9602 = or i1 %9600, %9601
  %9603 = zext i1 %9602 to i8
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9603, i8* %9604, align 1
  %9605 = and i32 %9598, 255
  %9606 = call i32 @llvm.ctpop.i32(i32 %9605)
  %9607 = trunc i32 %9606 to i8
  %9608 = and i8 %9607, 1
  %9609 = xor i8 %9608, 1
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9609, i8* %9610, align 1
  %9611 = xor i64 20, %9594
  %9612 = trunc i64 %9611 to i32
  %9613 = xor i32 %9612, %9598
  %9614 = lshr i32 %9613, 4
  %9615 = trunc i32 %9614 to i8
  %9616 = and i8 %9615, 1
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9616, i8* %9617, align 1
  %9618 = icmp eq i32 %9598, 0
  %9619 = zext i1 %9618 to i8
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9619, i8* %9620, align 1
  %9621 = lshr i32 %9598, 31
  %9622 = trunc i32 %9621 to i8
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9622, i8* %9623, align 1
  %9624 = lshr i32 %9597, 31
  %9625 = xor i32 %9621, %9624
  %9626 = add i32 %9625, %9621
  %9627 = icmp eq i32 %9626, 2
  %9628 = zext i1 %9627 to i8
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9628, i8* %9629, align 1
  store %struct.Memory* %loadMem_46d44b, %struct.Memory** %MEMORY
  %loadMem_46d44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 33
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9632 to i64*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 1
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %EAX.i224 = bitcast %union.anon* %9635 to i32*
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 5
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %9638 to i64*
  %9639 = load i32, i32* %EAX.i224
  %9640 = zext i32 %9639 to i64
  %9641 = load i64, i64* %PC.i223
  %9642 = add i64 %9641, 3
  store i64 %9642, i64* %PC.i223
  %9643 = shl i64 %9640, 32
  %9644 = ashr exact i64 %9643, 32
  store i64 %9644, i64* %RCX.i225, align 8
  store %struct.Memory* %loadMem_46d44e, %struct.Memory** %MEMORY
  %loadMem_46d451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 33
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %9647 to i64*
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 1
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %9650 to i64*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 5
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %9653 to i64*
  %9654 = load i64, i64* %RCX.i222
  %9655 = add i64 %9654, 12099168
  %9656 = load i64, i64* %PC.i220
  %9657 = add i64 %9656, 8
  store i64 %9657, i64* %PC.i220
  %9658 = inttoptr i64 %9655 to i8*
  %9659 = load i8, i8* %9658
  %9660 = zext i8 %9659 to i64
  store i64 %9660, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_46d451, %struct.Memory** %MEMORY
  %loadMem_46d459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 33
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %9663 to i64*
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 1
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %9666 to i32*
  %9667 = load i32, i32* %EAX.i219
  %9668 = zext i32 %9667 to i64
  %9669 = load i64, i64* %PC.i218
  %9670 = add i64 %9669, 3
  store i64 %9670, i64* %PC.i218
  %9671 = sub i32 %9667, 3
  %9672 = icmp ult i32 %9667, 3
  %9673 = zext i1 %9672 to i8
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9673, i8* %9674, align 1
  %9675 = and i32 %9671, 255
  %9676 = call i32 @llvm.ctpop.i32(i32 %9675)
  %9677 = trunc i32 %9676 to i8
  %9678 = and i8 %9677, 1
  %9679 = xor i8 %9678, 1
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9679, i8* %9680, align 1
  %9681 = xor i64 3, %9668
  %9682 = trunc i64 %9681 to i32
  %9683 = xor i32 %9682, %9671
  %9684 = lshr i32 %9683, 4
  %9685 = trunc i32 %9684 to i8
  %9686 = and i8 %9685, 1
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9686, i8* %9687, align 1
  %9688 = icmp eq i32 %9671, 0
  %9689 = zext i1 %9688 to i8
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9689, i8* %9690, align 1
  %9691 = lshr i32 %9671, 31
  %9692 = trunc i32 %9691 to i8
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9692, i8* %9693, align 1
  %9694 = lshr i32 %9667, 31
  %9695 = xor i32 %9691, %9694
  %9696 = add i32 %9695, %9694
  %9697 = icmp eq i32 %9696, 2
  %9698 = zext i1 %9697 to i8
  %9699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9698, i8* %9699, align 1
  store %struct.Memory* %loadMem_46d459, %struct.Memory** %MEMORY
  %loadMem_46d45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 33
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %9702 to i64*
  %9703 = load i64, i64* %PC.i217
  %9704 = add i64 %9703, 50
  %9705 = load i64, i64* %PC.i217
  %9706 = add i64 %9705, 6
  %9707 = load i64, i64* %PC.i217
  %9708 = add i64 %9707, 6
  store i64 %9708, i64* %PC.i217
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9710 = load i8, i8* %9709, align 1
  store i8 %9710, i8* %BRANCH_TAKEN, align 1
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9712 = icmp ne i8 %9710, 0
  %9713 = select i1 %9712, i64 %9704, i64 %9706
  store i64 %9713, i64* %9711, align 8
  store %struct.Memory* %loadMem_46d45c, %struct.Memory** %MEMORY
  %loadBr_46d45c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d45c = icmp eq i8 %loadBr_46d45c, 1
  br i1 %cmpBr_46d45c, label %block_.L_46d48e, label %block_46d462

block_46d462:                                     ; preds = %block_46d448
  %loadMem_46d462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 33
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %9716 to i64*
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9718 = getelementptr inbounds %struct.GPR, %struct.GPR* %9717, i32 0, i32 1
  %9719 = getelementptr inbounds %struct.Reg, %struct.Reg* %9718, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %9719 to i64*
  %9720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9721 = getelementptr inbounds %struct.GPR, %struct.GPR* %9720, i32 0, i32 15
  %9722 = getelementptr inbounds %struct.Reg, %struct.Reg* %9721, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %9722 to i64*
  %9723 = load i64, i64* %RBP.i216
  %9724 = sub i64 %9723, 16
  %9725 = load i64, i64* %PC.i214
  %9726 = add i64 %9725, 4
  store i64 %9726, i64* %PC.i214
  %9727 = inttoptr i64 %9724 to i64*
  %9728 = load i64, i64* %9727
  store i64 %9728, i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_46d462, %struct.Memory** %MEMORY
  %loadMem_46d466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9730 = getelementptr inbounds %struct.GPR, %struct.GPR* %9729, i32 0, i32 33
  %9731 = getelementptr inbounds %struct.Reg, %struct.Reg* %9730, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %9731 to i64*
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9733 = getelementptr inbounds %struct.GPR, %struct.GPR* %9732, i32 0, i32 5
  %9734 = getelementptr inbounds %struct.Reg, %struct.Reg* %9733, i32 0, i32 0
  %RCX.i212 = bitcast %union.anon* %9734 to i64*
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9736 = getelementptr inbounds %struct.GPR, %struct.GPR* %9735, i32 0, i32 15
  %9737 = getelementptr inbounds %struct.Reg, %struct.Reg* %9736, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %9737 to i64*
  %9738 = load i64, i64* %RBP.i213
  %9739 = sub i64 %9738, 24
  %9740 = load i64, i64* %PC.i211
  %9741 = add i64 %9740, 3
  store i64 %9741, i64* %PC.i211
  %9742 = inttoptr i64 %9739 to i32*
  %9743 = load i32, i32* %9742
  %9744 = zext i32 %9743 to i64
  store i64 %9744, i64* %RCX.i212, align 8
  store %struct.Memory* %loadMem_46d466, %struct.Memory** %MEMORY
  %loadMem_46d469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 33
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %9747 to i64*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 5
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RCX.i210 = bitcast %union.anon* %9750 to i64*
  %9751 = load i64, i64* %RCX.i210
  %9752 = load i64, i64* %PC.i209
  %9753 = add i64 %9752, 3
  store i64 %9753, i64* %PC.i209
  %9754 = trunc i64 %9751 to i32
  %9755 = add i32 20, %9754
  %9756 = zext i32 %9755 to i64
  store i64 %9756, i64* %RCX.i210, align 8
  %9757 = icmp ult i32 %9755, %9754
  %9758 = icmp ult i32 %9755, 20
  %9759 = or i1 %9757, %9758
  %9760 = zext i1 %9759 to i8
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9760, i8* %9761, align 1
  %9762 = and i32 %9755, 255
  %9763 = call i32 @llvm.ctpop.i32(i32 %9762)
  %9764 = trunc i32 %9763 to i8
  %9765 = and i8 %9764, 1
  %9766 = xor i8 %9765, 1
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9766, i8* %9767, align 1
  %9768 = xor i64 20, %9751
  %9769 = trunc i64 %9768 to i32
  %9770 = xor i32 %9769, %9755
  %9771 = lshr i32 %9770, 4
  %9772 = trunc i32 %9771 to i8
  %9773 = and i8 %9772, 1
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9773, i8* %9774, align 1
  %9775 = icmp eq i32 %9755, 0
  %9776 = zext i1 %9775 to i8
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9776, i8* %9777, align 1
  %9778 = lshr i32 %9755, 31
  %9779 = trunc i32 %9778 to i8
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9779, i8* %9780, align 1
  %9781 = lshr i32 %9754, 31
  %9782 = xor i32 %9778, %9781
  %9783 = add i32 %9782, %9778
  %9784 = icmp eq i32 %9783, 2
  %9785 = zext i1 %9784 to i8
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9785, i8* %9786, align 1
  store %struct.Memory* %loadMem_46d469, %struct.Memory** %MEMORY
  %loadMem_46d46c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9788 = getelementptr inbounds %struct.GPR, %struct.GPR* %9787, i32 0, i32 33
  %9789 = getelementptr inbounds %struct.Reg, %struct.Reg* %9788, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %9789 to i64*
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9791 = getelementptr inbounds %struct.GPR, %struct.GPR* %9790, i32 0, i32 5
  %9792 = getelementptr inbounds %struct.Reg, %struct.Reg* %9791, i32 0, i32 0
  %ECX.i207 = bitcast %union.anon* %9792 to i32*
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 7
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %RDX.i208 = bitcast %union.anon* %9795 to i64*
  %9796 = load i32, i32* %ECX.i207
  %9797 = zext i32 %9796 to i64
  %9798 = load i64, i64* %PC.i206
  %9799 = add i64 %9798, 3
  store i64 %9799, i64* %PC.i206
  %9800 = shl i64 %9797, 32
  %9801 = ashr exact i64 %9800, 32
  store i64 %9801, i64* %RDX.i208, align 8
  store %struct.Memory* %loadMem_46d46c, %struct.Memory** %MEMORY
  %loadMem_46d46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 33
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %9804 to i64*
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 1
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %RAX.i204 = bitcast %union.anon* %9807 to i64*
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9809 = getelementptr inbounds %struct.GPR, %struct.GPR* %9808, i32 0, i32 7
  %9810 = getelementptr inbounds %struct.Reg, %struct.Reg* %9809, i32 0, i32 0
  %RDX.i205 = bitcast %union.anon* %9810 to i64*
  %9811 = load i64, i64* %RAX.i204
  %9812 = load i64, i64* %RDX.i205
  %9813 = mul i64 %9812, 4
  %9814 = add i64 %9813, %9811
  %9815 = load i64, i64* %PC.i203
  %9816 = add i64 %9815, 4
  store i64 %9816, i64* %PC.i203
  %9817 = inttoptr i64 %9814 to i32*
  %9818 = load i32, i32* %9817
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9819, align 1
  %9820 = and i32 %9818, 255
  %9821 = call i32 @llvm.ctpop.i32(i32 %9820)
  %9822 = trunc i32 %9821 to i8
  %9823 = and i8 %9822, 1
  %9824 = xor i8 %9823, 1
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9824, i8* %9825, align 1
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9826, align 1
  %9827 = icmp eq i32 %9818, 0
  %9828 = zext i1 %9827 to i8
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9828, i8* %9829, align 1
  %9830 = lshr i32 %9818, 31
  %9831 = trunc i32 %9830 to i8
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9831, i8* %9832, align 1
  %9833 = lshr i32 %9818, 31
  %9834 = xor i32 %9830, %9833
  %9835 = add i32 %9834, %9833
  %9836 = icmp eq i32 %9835, 2
  %9837 = zext i1 %9836 to i8
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9837, i8* %9838, align 1
  store %struct.Memory* %loadMem_46d46f, %struct.Memory** %MEMORY
  %loadMem_46d473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 33
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %9841 to i64*
  %9842 = load i64, i64* %PC.i202
  %9843 = add i64 %9842, 27
  %9844 = load i64, i64* %PC.i202
  %9845 = add i64 %9844, 6
  %9846 = load i64, i64* %PC.i202
  %9847 = add i64 %9846, 6
  store i64 %9847, i64* %PC.i202
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9849 = load i8, i8* %9848, align 1
  %9850 = icmp ne i8 %9849, 0
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9852 = load i8, i8* %9851, align 1
  %9853 = icmp ne i8 %9852, 0
  %9854 = xor i1 %9850, %9853
  %9855 = zext i1 %9854 to i8
  store i8 %9855, i8* %BRANCH_TAKEN, align 1
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9857 = select i1 %9854, i64 %9843, i64 %9845
  store i64 %9857, i64* %9856, align 8
  store %struct.Memory* %loadMem_46d473, %struct.Memory** %MEMORY
  %loadBr_46d473 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d473 = icmp eq i8 %loadBr_46d473, 1
  br i1 %cmpBr_46d473, label %block_.L_46d48e, label %block_46d479

block_46d479:                                     ; preds = %block_46d462
  %loadMem_46d479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9859 = getelementptr inbounds %struct.GPR, %struct.GPR* %9858, i32 0, i32 33
  %9860 = getelementptr inbounds %struct.Reg, %struct.Reg* %9859, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %9860 to i64*
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9862 = getelementptr inbounds %struct.GPR, %struct.GPR* %9861, i32 0, i32 1
  %9863 = getelementptr inbounds %struct.Reg, %struct.Reg* %9862, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %9863 to i64*
  %9864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9865 = getelementptr inbounds %struct.GPR, %struct.GPR* %9864, i32 0, i32 15
  %9866 = getelementptr inbounds %struct.Reg, %struct.Reg* %9865, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %9866 to i64*
  %9867 = load i64, i64* %RBP.i201
  %9868 = sub i64 %9867, 24
  %9869 = load i64, i64* %PC.i199
  %9870 = add i64 %9869, 4
  store i64 %9870, i64* %PC.i199
  %9871 = inttoptr i64 %9868 to i32*
  %9872 = load i32, i32* %9871
  %9873 = sext i32 %9872 to i64
  store i64 %9873, i64* %RAX.i200, align 8
  store %struct.Memory* %loadMem_46d479, %struct.Memory** %MEMORY
  %loadMem_46d47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9875 = getelementptr inbounds %struct.GPR, %struct.GPR* %9874, i32 0, i32 33
  %9876 = getelementptr inbounds %struct.Reg, %struct.Reg* %9875, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %9876 to i64*
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9878 = getelementptr inbounds %struct.GPR, %struct.GPR* %9877, i32 0, i32 1
  %9879 = getelementptr inbounds %struct.Reg, %struct.Reg* %9878, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %9879 to i64*
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9881 = getelementptr inbounds %struct.GPR, %struct.GPR* %9880, i32 0, i32 5
  %9882 = getelementptr inbounds %struct.Reg, %struct.Reg* %9881, i32 0, i32 0
  %RCX.i197 = bitcast %union.anon* %9882 to i64*
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 15
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %RBP.i198 = bitcast %union.anon* %9885 to i64*
  %9886 = load i64, i64* %RBP.i198
  %9887 = load i64, i64* %RAX.i196
  %9888 = mul i64 %9887, 4
  %9889 = add i64 %9886, -1632
  %9890 = add i64 %9889, %9888
  %9891 = load i64, i64* %PC.i195
  %9892 = add i64 %9891, 7
  store i64 %9892, i64* %PC.i195
  %9893 = inttoptr i64 %9890 to i32*
  %9894 = load i32, i32* %9893
  %9895 = zext i32 %9894 to i64
  store i64 %9895, i64* %RCX.i197, align 8
  store %struct.Memory* %loadMem_46d47d, %struct.Memory** %MEMORY
  %loadMem_46d484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 33
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %9898 to i64*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 5
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %RCX.i194 = bitcast %union.anon* %9901 to i64*
  %9902 = load i64, i64* %RCX.i194
  %9903 = load i64, i64* %PC.i193
  %9904 = add i64 %9903, 3
  store i64 %9904, i64* %PC.i193
  %9905 = trunc i64 %9902 to i32
  %9906 = add i32 1, %9905
  %9907 = zext i32 %9906 to i64
  store i64 %9907, i64* %RCX.i194, align 8
  %9908 = icmp ult i32 %9906, %9905
  %9909 = icmp ult i32 %9906, 1
  %9910 = or i1 %9908, %9909
  %9911 = zext i1 %9910 to i8
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9911, i8* %9912, align 1
  %9913 = and i32 %9906, 255
  %9914 = call i32 @llvm.ctpop.i32(i32 %9913)
  %9915 = trunc i32 %9914 to i8
  %9916 = and i8 %9915, 1
  %9917 = xor i8 %9916, 1
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9917, i8* %9918, align 1
  %9919 = xor i64 1, %9902
  %9920 = trunc i64 %9919 to i32
  %9921 = xor i32 %9920, %9906
  %9922 = lshr i32 %9921, 4
  %9923 = trunc i32 %9922 to i8
  %9924 = and i8 %9923, 1
  %9925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9924, i8* %9925, align 1
  %9926 = icmp eq i32 %9906, 0
  %9927 = zext i1 %9926 to i8
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9927, i8* %9928, align 1
  %9929 = lshr i32 %9906, 31
  %9930 = trunc i32 %9929 to i8
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9930, i8* %9931, align 1
  %9932 = lshr i32 %9905, 31
  %9933 = xor i32 %9929, %9932
  %9934 = add i32 %9933, %9929
  %9935 = icmp eq i32 %9934, 2
  %9936 = zext i1 %9935 to i8
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9936, i8* %9937, align 1
  store %struct.Memory* %loadMem_46d484, %struct.Memory** %MEMORY
  %loadMem_46d487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9939 = getelementptr inbounds %struct.GPR, %struct.GPR* %9938, i32 0, i32 33
  %9940 = getelementptr inbounds %struct.Reg, %struct.Reg* %9939, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %9940 to i64*
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9942 = getelementptr inbounds %struct.GPR, %struct.GPR* %9941, i32 0, i32 5
  %9943 = getelementptr inbounds %struct.Reg, %struct.Reg* %9942, i32 0, i32 0
  %ECX.i190 = bitcast %union.anon* %9943 to i32*
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 1
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %9946 to i64*
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9948 = getelementptr inbounds %struct.GPR, %struct.GPR* %9947, i32 0, i32 15
  %9949 = getelementptr inbounds %struct.Reg, %struct.Reg* %9948, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %9949 to i64*
  %9950 = load i64, i64* %RBP.i192
  %9951 = load i64, i64* %RAX.i191
  %9952 = mul i64 %9951, 4
  %9953 = add i64 %9950, -1632
  %9954 = add i64 %9953, %9952
  %9955 = load i32, i32* %ECX.i190
  %9956 = zext i32 %9955 to i64
  %9957 = load i64, i64* %PC.i189
  %9958 = add i64 %9957, 7
  store i64 %9958, i64* %PC.i189
  %9959 = inttoptr i64 %9954 to i32*
  store i32 %9955, i32* %9959
  store %struct.Memory* %loadMem_46d487, %struct.Memory** %MEMORY
  br label %block_.L_46d48e

block_.L_46d48e:                                  ; preds = %block_46d479, %block_46d462, %block_46d448
  %loadMem_46d48e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9961 = getelementptr inbounds %struct.GPR, %struct.GPR* %9960, i32 0, i32 33
  %9962 = getelementptr inbounds %struct.Reg, %struct.Reg* %9961, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %9962 to i64*
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9964 = getelementptr inbounds %struct.GPR, %struct.GPR* %9963, i32 0, i32 1
  %9965 = getelementptr inbounds %struct.Reg, %struct.Reg* %9964, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %9965 to i64*
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 15
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %9968 to i64*
  %9969 = load i64, i64* %RBP.i188
  %9970 = sub i64 %9969, 24
  %9971 = load i64, i64* %PC.i186
  %9972 = add i64 %9971, 3
  store i64 %9972, i64* %PC.i186
  %9973 = inttoptr i64 %9970 to i32*
  %9974 = load i32, i32* %9973
  %9975 = zext i32 %9974 to i64
  store i64 %9975, i64* %RAX.i187, align 8
  store %struct.Memory* %loadMem_46d48e, %struct.Memory** %MEMORY
  %loadMem_46d491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9977 = getelementptr inbounds %struct.GPR, %struct.GPR* %9976, i32 0, i32 33
  %9978 = getelementptr inbounds %struct.Reg, %struct.Reg* %9977, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %9978 to i64*
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9980 = getelementptr inbounds %struct.GPR, %struct.GPR* %9979, i32 0, i32 1
  %9981 = getelementptr inbounds %struct.Reg, %struct.Reg* %9980, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %9981 to i64*
  %9982 = load i64, i64* %RAX.i185
  %9983 = load i64, i64* %PC.i184
  %9984 = add i64 %9983, 3
  store i64 %9984, i64* %PC.i184
  %9985 = trunc i64 %9982 to i32
  %9986 = sub i32 %9985, 1
  %9987 = zext i32 %9986 to i64
  store i64 %9987, i64* %RAX.i185, align 8
  %9988 = icmp ult i32 %9985, 1
  %9989 = zext i1 %9988 to i8
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9989, i8* %9990, align 1
  %9991 = and i32 %9986, 255
  %9992 = call i32 @llvm.ctpop.i32(i32 %9991)
  %9993 = trunc i32 %9992 to i8
  %9994 = and i8 %9993, 1
  %9995 = xor i8 %9994, 1
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9995, i8* %9996, align 1
  %9997 = xor i64 1, %9982
  %9998 = trunc i64 %9997 to i32
  %9999 = xor i32 %9998, %9986
  %10000 = lshr i32 %9999, 4
  %10001 = trunc i32 %10000 to i8
  %10002 = and i8 %10001, 1
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10002, i8* %10003, align 1
  %10004 = icmp eq i32 %9986, 0
  %10005 = zext i1 %10004 to i8
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10005, i8* %10006, align 1
  %10007 = lshr i32 %9986, 31
  %10008 = trunc i32 %10007 to i8
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10008, i8* %10009, align 1
  %10010 = lshr i32 %9985, 31
  %10011 = xor i32 %10007, %10010
  %10012 = add i32 %10011, %10010
  %10013 = icmp eq i32 %10012, 2
  %10014 = zext i1 %10013 to i8
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10014, i8* %10015, align 1
  store %struct.Memory* %loadMem_46d491, %struct.Memory** %MEMORY
  %loadMem_46d494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10017 = getelementptr inbounds %struct.GPR, %struct.GPR* %10016, i32 0, i32 33
  %10018 = getelementptr inbounds %struct.Reg, %struct.Reg* %10017, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %10018 to i64*
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 1
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %EAX.i182 = bitcast %union.anon* %10021 to i32*
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 5
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %RCX.i183 = bitcast %union.anon* %10024 to i64*
  %10025 = load i32, i32* %EAX.i182
  %10026 = zext i32 %10025 to i64
  %10027 = load i64, i64* %PC.i181
  %10028 = add i64 %10027, 3
  store i64 %10028, i64* %PC.i181
  %10029 = shl i64 %10026, 32
  %10030 = ashr exact i64 %10029, 32
  store i64 %10030, i64* %RCX.i183, align 8
  store %struct.Memory* %loadMem_46d494, %struct.Memory** %MEMORY
  %loadMem_46d497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 33
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 1
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RAX.i179 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 5
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RCX.i180 = bitcast %union.anon* %10039 to i64*
  %10040 = load i64, i64* %RCX.i180
  %10041 = add i64 %10040, 12099168
  %10042 = load i64, i64* %PC.i178
  %10043 = add i64 %10042, 8
  store i64 %10043, i64* %PC.i178
  %10044 = inttoptr i64 %10041 to i8*
  %10045 = load i8, i8* %10044
  %10046 = zext i8 %10045 to i64
  store i64 %10046, i64* %RAX.i179, align 8
  store %struct.Memory* %loadMem_46d497, %struct.Memory** %MEMORY
  %loadMem_46d49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 33
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 1
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %EAX.i177 = bitcast %union.anon* %10052 to i32*
  %10053 = load i32, i32* %EAX.i177
  %10054 = zext i32 %10053 to i64
  %10055 = load i64, i64* %PC.i176
  %10056 = add i64 %10055, 3
  store i64 %10056, i64* %PC.i176
  %10057 = sub i32 %10053, 3
  %10058 = icmp ult i32 %10053, 3
  %10059 = zext i1 %10058 to i8
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10059, i8* %10060, align 1
  %10061 = and i32 %10057, 255
  %10062 = call i32 @llvm.ctpop.i32(i32 %10061)
  %10063 = trunc i32 %10062 to i8
  %10064 = and i8 %10063, 1
  %10065 = xor i8 %10064, 1
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10065, i8* %10066, align 1
  %10067 = xor i64 3, %10054
  %10068 = trunc i64 %10067 to i32
  %10069 = xor i32 %10068, %10057
  %10070 = lshr i32 %10069, 4
  %10071 = trunc i32 %10070 to i8
  %10072 = and i8 %10071, 1
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10072, i8* %10073, align 1
  %10074 = icmp eq i32 %10057, 0
  %10075 = zext i1 %10074 to i8
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10075, i8* %10076, align 1
  %10077 = lshr i32 %10057, 31
  %10078 = trunc i32 %10077 to i8
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10078, i8* %10079, align 1
  %10080 = lshr i32 %10053, 31
  %10081 = xor i32 %10077, %10080
  %10082 = add i32 %10081, %10080
  %10083 = icmp eq i32 %10082, 2
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10084, i8* %10085, align 1
  store %struct.Memory* %loadMem_46d49f, %struct.Memory** %MEMORY
  %loadMem_46d4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %10088 to i64*
  %10089 = load i64, i64* %PC.i175
  %10090 = add i64 %10089, 68
  %10091 = load i64, i64* %PC.i175
  %10092 = add i64 %10091, 6
  %10093 = load i64, i64* %PC.i175
  %10094 = add i64 %10093, 6
  store i64 %10094, i64* %PC.i175
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10096 = load i8, i8* %10095, align 1
  store i8 %10096, i8* %BRANCH_TAKEN, align 1
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10098 = icmp ne i8 %10096, 0
  %10099 = select i1 %10098, i64 %10090, i64 %10092
  store i64 %10099, i64* %10097, align 8
  store %struct.Memory* %loadMem_46d4a2, %struct.Memory** %MEMORY
  %loadBr_46d4a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d4a2 = icmp eq i8 %loadBr_46d4a2, 1
  br i1 %cmpBr_46d4a2, label %block_.L_46d4e6, label %block_46d4a8

block_46d4a8:                                     ; preds = %block_.L_46d48e
  %loadMem_46d4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 33
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %10102 to i64*
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 1
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %10105 to i64*
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 15
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %10108 to i64*
  %10109 = load i64, i64* %RBP.i174
  %10110 = sub i64 %10109, 16
  %10111 = load i64, i64* %PC.i172
  %10112 = add i64 %10111, 4
  store i64 %10112, i64* %PC.i172
  %10113 = inttoptr i64 %10110 to i64*
  %10114 = load i64, i64* %10113
  store i64 %10114, i64* %RAX.i173, align 8
  store %struct.Memory* %loadMem_46d4a8, %struct.Memory** %MEMORY
  %loadMem_46d4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 33
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %10117 to i64*
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10119 = getelementptr inbounds %struct.GPR, %struct.GPR* %10118, i32 0, i32 5
  %10120 = getelementptr inbounds %struct.Reg, %struct.Reg* %10119, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %10120 to i64*
  %10121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10122 = getelementptr inbounds %struct.GPR, %struct.GPR* %10121, i32 0, i32 15
  %10123 = getelementptr inbounds %struct.Reg, %struct.Reg* %10122, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %10123 to i64*
  %10124 = load i64, i64* %RBP.i171
  %10125 = sub i64 %10124, 24
  %10126 = load i64, i64* %PC.i169
  %10127 = add i64 %10126, 3
  store i64 %10127, i64* %PC.i169
  %10128 = inttoptr i64 %10125 to i32*
  %10129 = load i32, i32* %10128
  %10130 = zext i32 %10129 to i64
  store i64 %10130, i64* %RCX.i170, align 8
  store %struct.Memory* %loadMem_46d4ac, %struct.Memory** %MEMORY
  %loadMem_46d4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 33
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 5
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RCX.i168 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RCX.i168
  %10138 = load i64, i64* %PC.i167
  %10139 = add i64 %10138, 3
  store i64 %10139, i64* %PC.i167
  %10140 = trunc i64 %10137 to i32
  %10141 = sub i32 %10140, 1
  %10142 = zext i32 %10141 to i64
  store i64 %10142, i64* %RCX.i168, align 8
  %10143 = icmp ult i32 %10140, 1
  %10144 = zext i1 %10143 to i8
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10144, i8* %10145, align 1
  %10146 = and i32 %10141, 255
  %10147 = call i32 @llvm.ctpop.i32(i32 %10146)
  %10148 = trunc i32 %10147 to i8
  %10149 = and i8 %10148, 1
  %10150 = xor i8 %10149, 1
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10150, i8* %10151, align 1
  %10152 = xor i64 1, %10137
  %10153 = trunc i64 %10152 to i32
  %10154 = xor i32 %10153, %10141
  %10155 = lshr i32 %10154, 4
  %10156 = trunc i32 %10155 to i8
  %10157 = and i8 %10156, 1
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10157, i8* %10158, align 1
  %10159 = icmp eq i32 %10141, 0
  %10160 = zext i1 %10159 to i8
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10160, i8* %10161, align 1
  %10162 = lshr i32 %10141, 31
  %10163 = trunc i32 %10162 to i8
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10163, i8* %10164, align 1
  %10165 = lshr i32 %10140, 31
  %10166 = xor i32 %10162, %10165
  %10167 = add i32 %10166, %10165
  %10168 = icmp eq i32 %10167, 2
  %10169 = zext i1 %10168 to i8
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10169, i8* %10170, align 1
  store %struct.Memory* %loadMem_46d4af, %struct.Memory** %MEMORY
  %loadMem_46d4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10172 = getelementptr inbounds %struct.GPR, %struct.GPR* %10171, i32 0, i32 33
  %10173 = getelementptr inbounds %struct.Reg, %struct.Reg* %10172, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %10173 to i64*
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10175 = getelementptr inbounds %struct.GPR, %struct.GPR* %10174, i32 0, i32 5
  %10176 = getelementptr inbounds %struct.Reg, %struct.Reg* %10175, i32 0, i32 0
  %ECX.i165 = bitcast %union.anon* %10176 to i32*
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10178 = getelementptr inbounds %struct.GPR, %struct.GPR* %10177, i32 0, i32 7
  %10179 = getelementptr inbounds %struct.Reg, %struct.Reg* %10178, i32 0, i32 0
  %RDX.i166 = bitcast %union.anon* %10179 to i64*
  %10180 = load i32, i32* %ECX.i165
  %10181 = zext i32 %10180 to i64
  %10182 = load i64, i64* %PC.i164
  %10183 = add i64 %10182, 3
  store i64 %10183, i64* %PC.i164
  %10184 = shl i64 %10181, 32
  %10185 = ashr exact i64 %10184, 32
  store i64 %10185, i64* %RDX.i166, align 8
  store %struct.Memory* %loadMem_46d4b2, %struct.Memory** %MEMORY
  %loadMem_46d4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 33
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %10188 to i64*
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10190 = getelementptr inbounds %struct.GPR, %struct.GPR* %10189, i32 0, i32 1
  %10191 = getelementptr inbounds %struct.Reg, %struct.Reg* %10190, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %10191 to i64*
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 7
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %RDX.i163 = bitcast %union.anon* %10194 to i64*
  %10195 = load i64, i64* %RAX.i162
  %10196 = load i64, i64* %RDX.i163
  %10197 = mul i64 %10196, 4
  %10198 = add i64 %10197, %10195
  %10199 = load i64, i64* %PC.i161
  %10200 = add i64 %10199, 4
  store i64 %10200, i64* %PC.i161
  %10201 = inttoptr i64 %10198 to i32*
  %10202 = load i32, i32* %10201
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10203, align 1
  %10204 = and i32 %10202, 255
  %10205 = call i32 @llvm.ctpop.i32(i32 %10204)
  %10206 = trunc i32 %10205 to i8
  %10207 = and i8 %10206, 1
  %10208 = xor i8 %10207, 1
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10208, i8* %10209, align 1
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10210, align 1
  %10211 = icmp eq i32 %10202, 0
  %10212 = zext i1 %10211 to i8
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10212, i8* %10213, align 1
  %10214 = lshr i32 %10202, 31
  %10215 = trunc i32 %10214 to i8
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10215, i8* %10216, align 1
  %10217 = lshr i32 %10202, 31
  %10218 = xor i32 %10214, %10217
  %10219 = add i32 %10218, %10217
  %10220 = icmp eq i32 %10219, 2
  %10221 = zext i1 %10220 to i8
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10221, i8* %10222, align 1
  store %struct.Memory* %loadMem_46d4b5, %struct.Memory** %MEMORY
  %loadMem_46d4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 33
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %10225 to i64*
  %10226 = load i64, i64* %PC.i160
  %10227 = add i64 %10226, 45
  %10228 = load i64, i64* %PC.i160
  %10229 = add i64 %10228, 6
  %10230 = load i64, i64* %PC.i160
  %10231 = add i64 %10230, 6
  store i64 %10231, i64* %PC.i160
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10233 = load i8, i8* %10232, align 1
  %10234 = icmp ne i8 %10233, 0
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10236 = load i8, i8* %10235, align 1
  %10237 = icmp ne i8 %10236, 0
  %10238 = xor i1 %10234, %10237
  %10239 = zext i1 %10238 to i8
  store i8 %10239, i8* %BRANCH_TAKEN, align 1
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10241 = select i1 %10238, i64 %10227, i64 %10229
  store i64 %10241, i64* %10240, align 8
  store %struct.Memory* %loadMem_46d4b9, %struct.Memory** %MEMORY
  %loadBr_46d4b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d4b9 = icmp eq i8 %loadBr_46d4b9, 1
  br i1 %cmpBr_46d4b9, label %block_.L_46d4e6, label %block_46d4bf

block_46d4bf:                                     ; preds = %block_46d4a8
  %loadMem_46d4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10243 = getelementptr inbounds %struct.GPR, %struct.GPR* %10242, i32 0, i32 33
  %10244 = getelementptr inbounds %struct.Reg, %struct.Reg* %10243, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10244 to i64*
  %10245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10246 = getelementptr inbounds %struct.GPR, %struct.GPR* %10245, i32 0, i32 1
  %10247 = getelementptr inbounds %struct.Reg, %struct.Reg* %10246, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %10247 to i64*
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10249 = getelementptr inbounds %struct.GPR, %struct.GPR* %10248, i32 0, i32 15
  %10250 = getelementptr inbounds %struct.Reg, %struct.Reg* %10249, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %10250 to i64*
  %10251 = load i64, i64* %RBP.i159
  %10252 = sub i64 %10251, 24
  %10253 = load i64, i64* %PC.i157
  %10254 = add i64 %10253, 4
  store i64 %10254, i64* %PC.i157
  %10255 = inttoptr i64 %10252 to i32*
  %10256 = load i32, i32* %10255
  %10257 = sext i32 %10256 to i64
  store i64 %10257, i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_46d4bf, %struct.Memory** %MEMORY
  %loadMem_46d4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10259 = getelementptr inbounds %struct.GPR, %struct.GPR* %10258, i32 0, i32 33
  %10260 = getelementptr inbounds %struct.Reg, %struct.Reg* %10259, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %10260 to i64*
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10262 = getelementptr inbounds %struct.GPR, %struct.GPR* %10261, i32 0, i32 1
  %10263 = getelementptr inbounds %struct.Reg, %struct.Reg* %10262, i32 0, i32 0
  %RAX.i155 = bitcast %union.anon* %10263 to i64*
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10265 = getelementptr inbounds %struct.GPR, %struct.GPR* %10264, i32 0, i32 15
  %10266 = getelementptr inbounds %struct.Reg, %struct.Reg* %10265, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %10266 to i64*
  %10267 = load i64, i64* %RBP.i156
  %10268 = load i64, i64* %RAX.i155
  %10269 = mul i64 %10268, 4
  %10270 = add i64 %10267, -1632
  %10271 = add i64 %10270, %10269
  %10272 = load i64, i64* %PC.i154
  %10273 = add i64 %10272, 8
  store i64 %10273, i64* %PC.i154
  %10274 = inttoptr i64 %10271 to i32*
  %10275 = load i32, i32* %10274
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10276, align 1
  %10277 = and i32 %10275, 255
  %10278 = call i32 @llvm.ctpop.i32(i32 %10277)
  %10279 = trunc i32 %10278 to i8
  %10280 = and i8 %10279, 1
  %10281 = xor i8 %10280, 1
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10281, i8* %10282, align 1
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10283, align 1
  %10284 = icmp eq i32 %10275, 0
  %10285 = zext i1 %10284 to i8
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10285, i8* %10286, align 1
  %10287 = lshr i32 %10275, 31
  %10288 = trunc i32 %10287 to i8
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10288, i8* %10289, align 1
  %10290 = lshr i32 %10275, 31
  %10291 = xor i32 %10287, %10290
  %10292 = add i32 %10291, %10290
  %10293 = icmp eq i32 %10292, 2
  %10294 = zext i1 %10293 to i8
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10294, i8* %10295, align 1
  store %struct.Memory* %loadMem_46d4c3, %struct.Memory** %MEMORY
  %loadMem_46d4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10297 = getelementptr inbounds %struct.GPR, %struct.GPR* %10296, i32 0, i32 33
  %10298 = getelementptr inbounds %struct.Reg, %struct.Reg* %10297, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %10298 to i64*
  %10299 = load i64, i64* %PC.i153
  %10300 = add i64 %10299, 27
  %10301 = load i64, i64* %PC.i153
  %10302 = add i64 %10301, 6
  %10303 = load i64, i64* %PC.i153
  %10304 = add i64 %10303, 6
  store i64 %10304, i64* %PC.i153
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10306 = load i8, i8* %10305, align 1
  %10307 = icmp ne i8 %10306, 0
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10309 = load i8, i8* %10308, align 1
  %10310 = icmp ne i8 %10309, 0
  %10311 = xor i1 %10307, %10310
  %10312 = xor i1 %10311, true
  %10313 = zext i1 %10312 to i8
  store i8 %10313, i8* %BRANCH_TAKEN, align 1
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10315 = select i1 %10311, i64 %10302, i64 %10300
  store i64 %10315, i64* %10314, align 8
  store %struct.Memory* %loadMem_46d4cb, %struct.Memory** %MEMORY
  %loadBr_46d4cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d4cb = icmp eq i8 %loadBr_46d4cb, 1
  br i1 %cmpBr_46d4cb, label %block_.L_46d4e6, label %block_46d4d1

block_46d4d1:                                     ; preds = %block_46d4bf
  %loadMem_46d4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10317 = getelementptr inbounds %struct.GPR, %struct.GPR* %10316, i32 0, i32 33
  %10318 = getelementptr inbounds %struct.Reg, %struct.Reg* %10317, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %10318 to i64*
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10320 = getelementptr inbounds %struct.GPR, %struct.GPR* %10319, i32 0, i32 1
  %10321 = getelementptr inbounds %struct.Reg, %struct.Reg* %10320, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %10321 to i64*
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 15
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %10324 to i64*
  %10325 = load i64, i64* %RBP.i152
  %10326 = sub i64 %10325, 24
  %10327 = load i64, i64* %PC.i150
  %10328 = add i64 %10327, 4
  store i64 %10328, i64* %PC.i150
  %10329 = inttoptr i64 %10326 to i32*
  %10330 = load i32, i32* %10329
  %10331 = sext i32 %10330 to i64
  store i64 %10331, i64* %RAX.i151, align 8
  store %struct.Memory* %loadMem_46d4d1, %struct.Memory** %MEMORY
  %loadMem_46d4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10333 = getelementptr inbounds %struct.GPR, %struct.GPR* %10332, i32 0, i32 33
  %10334 = getelementptr inbounds %struct.Reg, %struct.Reg* %10333, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10334 to i64*
  %10335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10336 = getelementptr inbounds %struct.GPR, %struct.GPR* %10335, i32 0, i32 1
  %10337 = getelementptr inbounds %struct.Reg, %struct.Reg* %10336, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %10337 to i64*
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10339 = getelementptr inbounds %struct.GPR, %struct.GPR* %10338, i32 0, i32 5
  %10340 = getelementptr inbounds %struct.Reg, %struct.Reg* %10339, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %10340 to i64*
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10342 = getelementptr inbounds %struct.GPR, %struct.GPR* %10341, i32 0, i32 15
  %10343 = getelementptr inbounds %struct.Reg, %struct.Reg* %10342, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %10343 to i64*
  %10344 = load i64, i64* %RBP.i149
  %10345 = load i64, i64* %RAX.i147
  %10346 = mul i64 %10345, 4
  %10347 = add i64 %10344, -1632
  %10348 = add i64 %10347, %10346
  %10349 = load i64, i64* %PC.i146
  %10350 = add i64 %10349, 7
  store i64 %10350, i64* %PC.i146
  %10351 = inttoptr i64 %10348 to i32*
  %10352 = load i32, i32* %10351
  %10353 = zext i32 %10352 to i64
  store i64 %10353, i64* %RCX.i148, align 8
  store %struct.Memory* %loadMem_46d4d5, %struct.Memory** %MEMORY
  %loadMem_46d4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10355 = getelementptr inbounds %struct.GPR, %struct.GPR* %10354, i32 0, i32 33
  %10356 = getelementptr inbounds %struct.Reg, %struct.Reg* %10355, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10356 to i64*
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10358 = getelementptr inbounds %struct.GPR, %struct.GPR* %10357, i32 0, i32 5
  %10359 = getelementptr inbounds %struct.Reg, %struct.Reg* %10358, i32 0, i32 0
  %RCX.i145 = bitcast %union.anon* %10359 to i64*
  %10360 = load i64, i64* %RCX.i145
  %10361 = load i64, i64* %PC.i144
  %10362 = add i64 %10361, 3
  store i64 %10362, i64* %PC.i144
  %10363 = trunc i64 %10360 to i32
  %10364 = add i32 1, %10363
  %10365 = zext i32 %10364 to i64
  store i64 %10365, i64* %RCX.i145, align 8
  %10366 = icmp ult i32 %10364, %10363
  %10367 = icmp ult i32 %10364, 1
  %10368 = or i1 %10366, %10367
  %10369 = zext i1 %10368 to i8
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10369, i8* %10370, align 1
  %10371 = and i32 %10364, 255
  %10372 = call i32 @llvm.ctpop.i32(i32 %10371)
  %10373 = trunc i32 %10372 to i8
  %10374 = and i8 %10373, 1
  %10375 = xor i8 %10374, 1
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10375, i8* %10376, align 1
  %10377 = xor i64 1, %10360
  %10378 = trunc i64 %10377 to i32
  %10379 = xor i32 %10378, %10364
  %10380 = lshr i32 %10379, 4
  %10381 = trunc i32 %10380 to i8
  %10382 = and i8 %10381, 1
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10382, i8* %10383, align 1
  %10384 = icmp eq i32 %10364, 0
  %10385 = zext i1 %10384 to i8
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10385, i8* %10386, align 1
  %10387 = lshr i32 %10364, 31
  %10388 = trunc i32 %10387 to i8
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10388, i8* %10389, align 1
  %10390 = lshr i32 %10363, 31
  %10391 = xor i32 %10387, %10390
  %10392 = add i32 %10391, %10387
  %10393 = icmp eq i32 %10392, 2
  %10394 = zext i1 %10393 to i8
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10394, i8* %10395, align 1
  store %struct.Memory* %loadMem_46d4dc, %struct.Memory** %MEMORY
  %loadMem_46d4df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 33
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %10398 to i64*
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 5
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %ECX.i141 = bitcast %union.anon* %10401 to i32*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 1
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 15
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %10407 to i64*
  %10408 = load i64, i64* %RBP.i143
  %10409 = load i64, i64* %RAX.i142
  %10410 = mul i64 %10409, 4
  %10411 = add i64 %10408, -1632
  %10412 = add i64 %10411, %10410
  %10413 = load i32, i32* %ECX.i141
  %10414 = zext i32 %10413 to i64
  %10415 = load i64, i64* %PC.i140
  %10416 = add i64 %10415, 7
  store i64 %10416, i64* %PC.i140
  %10417 = inttoptr i64 %10412 to i32*
  store i32 %10413, i32* %10417
  store %struct.Memory* %loadMem_46d4df, %struct.Memory** %MEMORY
  br label %block_.L_46d4e6

block_.L_46d4e6:                                  ; preds = %block_46d4d1, %block_46d4bf, %block_46d4a8, %block_.L_46d48e
  %loadMem_46d4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 33
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %10420 to i64*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 1
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %10423 to i64*
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 15
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %10426 to i64*
  %10427 = load i64, i64* %RBP.i139
  %10428 = sub i64 %10427, 24
  %10429 = load i64, i64* %PC.i137
  %10430 = add i64 %10429, 3
  store i64 %10430, i64* %PC.i137
  %10431 = inttoptr i64 %10428 to i32*
  %10432 = load i32, i32* %10431
  %10433 = zext i32 %10432 to i64
  store i64 %10433, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_46d4e6, %struct.Memory** %MEMORY
  %loadMem_46d4e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10435 = getelementptr inbounds %struct.GPR, %struct.GPR* %10434, i32 0, i32 33
  %10436 = getelementptr inbounds %struct.Reg, %struct.Reg* %10435, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10436 to i64*
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10438 = getelementptr inbounds %struct.GPR, %struct.GPR* %10437, i32 0, i32 1
  %10439 = getelementptr inbounds %struct.Reg, %struct.Reg* %10438, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %10439 to i64*
  %10440 = load i64, i64* %RAX.i136
  %10441 = load i64, i64* %PC.i135
  %10442 = add i64 %10441, 3
  store i64 %10442, i64* %PC.i135
  %10443 = trunc i64 %10440 to i32
  %10444 = sub i32 %10443, 20
  %10445 = zext i32 %10444 to i64
  store i64 %10445, i64* %RAX.i136, align 8
  %10446 = icmp ult i32 %10443, 20
  %10447 = zext i1 %10446 to i8
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10447, i8* %10448, align 1
  %10449 = and i32 %10444, 255
  %10450 = call i32 @llvm.ctpop.i32(i32 %10449)
  %10451 = trunc i32 %10450 to i8
  %10452 = and i8 %10451, 1
  %10453 = xor i8 %10452, 1
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10453, i8* %10454, align 1
  %10455 = xor i64 20, %10440
  %10456 = trunc i64 %10455 to i32
  %10457 = xor i32 %10456, %10444
  %10458 = lshr i32 %10457, 4
  %10459 = trunc i32 %10458 to i8
  %10460 = and i8 %10459, 1
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10460, i8* %10461, align 1
  %10462 = icmp eq i32 %10444, 0
  %10463 = zext i1 %10462 to i8
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10463, i8* %10464, align 1
  %10465 = lshr i32 %10444, 31
  %10466 = trunc i32 %10465 to i8
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10466, i8* %10467, align 1
  %10468 = lshr i32 %10443, 31
  %10469 = xor i32 %10465, %10468
  %10470 = add i32 %10469, %10468
  %10471 = icmp eq i32 %10470, 2
  %10472 = zext i1 %10471 to i8
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10472, i8* %10473, align 1
  store %struct.Memory* %loadMem_46d4e9, %struct.Memory** %MEMORY
  %loadMem_46d4ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10475 = getelementptr inbounds %struct.GPR, %struct.GPR* %10474, i32 0, i32 33
  %10476 = getelementptr inbounds %struct.Reg, %struct.Reg* %10475, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10476 to i64*
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10478 = getelementptr inbounds %struct.GPR, %struct.GPR* %10477, i32 0, i32 1
  %10479 = getelementptr inbounds %struct.Reg, %struct.Reg* %10478, i32 0, i32 0
  %EAX.i133 = bitcast %union.anon* %10479 to i32*
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 5
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %RCX.i134 = bitcast %union.anon* %10482 to i64*
  %10483 = load i32, i32* %EAX.i133
  %10484 = zext i32 %10483 to i64
  %10485 = load i64, i64* %PC.i132
  %10486 = add i64 %10485, 3
  store i64 %10486, i64* %PC.i132
  %10487 = shl i64 %10484, 32
  %10488 = ashr exact i64 %10487, 32
  store i64 %10488, i64* %RCX.i134, align 8
  store %struct.Memory* %loadMem_46d4ec, %struct.Memory** %MEMORY
  %loadMem_46d4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %10489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10490 = getelementptr inbounds %struct.GPR, %struct.GPR* %10489, i32 0, i32 33
  %10491 = getelementptr inbounds %struct.Reg, %struct.Reg* %10490, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %10491 to i64*
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10493 = getelementptr inbounds %struct.GPR, %struct.GPR* %10492, i32 0, i32 1
  %10494 = getelementptr inbounds %struct.Reg, %struct.Reg* %10493, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %10494 to i64*
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10496 = getelementptr inbounds %struct.GPR, %struct.GPR* %10495, i32 0, i32 5
  %10497 = getelementptr inbounds %struct.Reg, %struct.Reg* %10496, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %10497 to i64*
  %10498 = load i64, i64* %RCX.i131
  %10499 = add i64 %10498, 12099168
  %10500 = load i64, i64* %PC.i129
  %10501 = add i64 %10500, 8
  store i64 %10501, i64* %PC.i129
  %10502 = inttoptr i64 %10499 to i8*
  %10503 = load i8, i8* %10502
  %10504 = zext i8 %10503 to i64
  store i64 %10504, i64* %RAX.i130, align 8
  store %struct.Memory* %loadMem_46d4ef, %struct.Memory** %MEMORY
  %loadMem_46d4f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 33
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %10507 to i64*
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 1
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %EAX.i128 = bitcast %union.anon* %10510 to i32*
  %10511 = load i32, i32* %EAX.i128
  %10512 = zext i32 %10511 to i64
  %10513 = load i64, i64* %PC.i127
  %10514 = add i64 %10513, 3
  store i64 %10514, i64* %PC.i127
  %10515 = sub i32 %10511, 3
  %10516 = icmp ult i32 %10511, 3
  %10517 = zext i1 %10516 to i8
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10517, i8* %10518, align 1
  %10519 = and i32 %10515, 255
  %10520 = call i32 @llvm.ctpop.i32(i32 %10519)
  %10521 = trunc i32 %10520 to i8
  %10522 = and i8 %10521, 1
  %10523 = xor i8 %10522, 1
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10523, i8* %10524, align 1
  %10525 = xor i64 3, %10512
  %10526 = trunc i64 %10525 to i32
  %10527 = xor i32 %10526, %10515
  %10528 = lshr i32 %10527, 4
  %10529 = trunc i32 %10528 to i8
  %10530 = and i8 %10529, 1
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10530, i8* %10531, align 1
  %10532 = icmp eq i32 %10515, 0
  %10533 = zext i1 %10532 to i8
  %10534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10533, i8* %10534, align 1
  %10535 = lshr i32 %10515, 31
  %10536 = trunc i32 %10535 to i8
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10536, i8* %10537, align 1
  %10538 = lshr i32 %10511, 31
  %10539 = xor i32 %10535, %10538
  %10540 = add i32 %10539, %10538
  %10541 = icmp eq i32 %10540, 2
  %10542 = zext i1 %10541 to i8
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10542, i8* %10543, align 1
  store %struct.Memory* %loadMem_46d4f7, %struct.Memory** %MEMORY
  %loadMem_46d4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10545 = getelementptr inbounds %struct.GPR, %struct.GPR* %10544, i32 0, i32 33
  %10546 = getelementptr inbounds %struct.Reg, %struct.Reg* %10545, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %10546 to i64*
  %10547 = load i64, i64* %PC.i126
  %10548 = add i64 %10547, 68
  %10549 = load i64, i64* %PC.i126
  %10550 = add i64 %10549, 6
  %10551 = load i64, i64* %PC.i126
  %10552 = add i64 %10551, 6
  store i64 %10552, i64* %PC.i126
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10554 = load i8, i8* %10553, align 1
  store i8 %10554, i8* %BRANCH_TAKEN, align 1
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10556 = icmp ne i8 %10554, 0
  %10557 = select i1 %10556, i64 %10548, i64 %10550
  store i64 %10557, i64* %10555, align 8
  store %struct.Memory* %loadMem_46d4fa, %struct.Memory** %MEMORY
  %loadBr_46d4fa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d4fa = icmp eq i8 %loadBr_46d4fa, 1
  br i1 %cmpBr_46d4fa, label %block_.L_46d53e, label %block_46d500

block_46d500:                                     ; preds = %block_.L_46d4e6
  %loadMem_46d500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 33
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10560 to i64*
  %10561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10562 = getelementptr inbounds %struct.GPR, %struct.GPR* %10561, i32 0, i32 1
  %10563 = getelementptr inbounds %struct.Reg, %struct.Reg* %10562, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %10563 to i64*
  %10564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10565 = getelementptr inbounds %struct.GPR, %struct.GPR* %10564, i32 0, i32 15
  %10566 = getelementptr inbounds %struct.Reg, %struct.Reg* %10565, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %10566 to i64*
  %10567 = load i64, i64* %RBP.i125
  %10568 = sub i64 %10567, 16
  %10569 = load i64, i64* %PC.i123
  %10570 = add i64 %10569, 4
  store i64 %10570, i64* %PC.i123
  %10571 = inttoptr i64 %10568 to i64*
  %10572 = load i64, i64* %10571
  store i64 %10572, i64* %RAX.i124, align 8
  store %struct.Memory* %loadMem_46d500, %struct.Memory** %MEMORY
  %loadMem_46d504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 33
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %10575 to i64*
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10577 = getelementptr inbounds %struct.GPR, %struct.GPR* %10576, i32 0, i32 5
  %10578 = getelementptr inbounds %struct.Reg, %struct.Reg* %10577, i32 0, i32 0
  %RCX.i121 = bitcast %union.anon* %10578 to i64*
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10580 = getelementptr inbounds %struct.GPR, %struct.GPR* %10579, i32 0, i32 15
  %10581 = getelementptr inbounds %struct.Reg, %struct.Reg* %10580, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %10581 to i64*
  %10582 = load i64, i64* %RBP.i122
  %10583 = sub i64 %10582, 24
  %10584 = load i64, i64* %PC.i120
  %10585 = add i64 %10584, 3
  store i64 %10585, i64* %PC.i120
  %10586 = inttoptr i64 %10583 to i32*
  %10587 = load i32, i32* %10586
  %10588 = zext i32 %10587 to i64
  store i64 %10588, i64* %RCX.i121, align 8
  store %struct.Memory* %loadMem_46d504, %struct.Memory** %MEMORY
  %loadMem_46d507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 33
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 5
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %10594 to i64*
  %10595 = load i64, i64* %RCX.i119
  %10596 = load i64, i64* %PC.i118
  %10597 = add i64 %10596, 3
  store i64 %10597, i64* %PC.i118
  %10598 = trunc i64 %10595 to i32
  %10599 = sub i32 %10598, 20
  %10600 = zext i32 %10599 to i64
  store i64 %10600, i64* %RCX.i119, align 8
  %10601 = icmp ult i32 %10598, 20
  %10602 = zext i1 %10601 to i8
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10602, i8* %10603, align 1
  %10604 = and i32 %10599, 255
  %10605 = call i32 @llvm.ctpop.i32(i32 %10604)
  %10606 = trunc i32 %10605 to i8
  %10607 = and i8 %10606, 1
  %10608 = xor i8 %10607, 1
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10608, i8* %10609, align 1
  %10610 = xor i64 20, %10595
  %10611 = trunc i64 %10610 to i32
  %10612 = xor i32 %10611, %10599
  %10613 = lshr i32 %10612, 4
  %10614 = trunc i32 %10613 to i8
  %10615 = and i8 %10614, 1
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10615, i8* %10616, align 1
  %10617 = icmp eq i32 %10599, 0
  %10618 = zext i1 %10617 to i8
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10618, i8* %10619, align 1
  %10620 = lshr i32 %10599, 31
  %10621 = trunc i32 %10620 to i8
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10621, i8* %10622, align 1
  %10623 = lshr i32 %10598, 31
  %10624 = xor i32 %10620, %10623
  %10625 = add i32 %10624, %10623
  %10626 = icmp eq i32 %10625, 2
  %10627 = zext i1 %10626 to i8
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10627, i8* %10628, align 1
  store %struct.Memory* %loadMem_46d507, %struct.Memory** %MEMORY
  %loadMem_46d50a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 33
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 5
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %ECX.i116 = bitcast %union.anon* %10634 to i32*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 7
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RDX.i117 = bitcast %union.anon* %10637 to i64*
  %10638 = load i32, i32* %ECX.i116
  %10639 = zext i32 %10638 to i64
  %10640 = load i64, i64* %PC.i115
  %10641 = add i64 %10640, 3
  store i64 %10641, i64* %PC.i115
  %10642 = shl i64 %10639, 32
  %10643 = ashr exact i64 %10642, 32
  store i64 %10643, i64* %RDX.i117, align 8
  store %struct.Memory* %loadMem_46d50a, %struct.Memory** %MEMORY
  %loadMem_46d50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10645 = getelementptr inbounds %struct.GPR, %struct.GPR* %10644, i32 0, i32 33
  %10646 = getelementptr inbounds %struct.Reg, %struct.Reg* %10645, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %10646 to i64*
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10648 = getelementptr inbounds %struct.GPR, %struct.GPR* %10647, i32 0, i32 1
  %10649 = getelementptr inbounds %struct.Reg, %struct.Reg* %10648, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %10649 to i64*
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 7
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %10652 to i64*
  %10653 = load i64, i64* %RAX.i113
  %10654 = load i64, i64* %RDX.i114
  %10655 = mul i64 %10654, 4
  %10656 = add i64 %10655, %10653
  %10657 = load i64, i64* %PC.i112
  %10658 = add i64 %10657, 4
  store i64 %10658, i64* %PC.i112
  %10659 = inttoptr i64 %10656 to i32*
  %10660 = load i32, i32* %10659
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10661, align 1
  %10662 = and i32 %10660, 255
  %10663 = call i32 @llvm.ctpop.i32(i32 %10662)
  %10664 = trunc i32 %10663 to i8
  %10665 = and i8 %10664, 1
  %10666 = xor i8 %10665, 1
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10666, i8* %10667, align 1
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10668, align 1
  %10669 = icmp eq i32 %10660, 0
  %10670 = zext i1 %10669 to i8
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10670, i8* %10671, align 1
  %10672 = lshr i32 %10660, 31
  %10673 = trunc i32 %10672 to i8
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10673, i8* %10674, align 1
  %10675 = lshr i32 %10660, 31
  %10676 = xor i32 %10672, %10675
  %10677 = add i32 %10676, %10675
  %10678 = icmp eq i32 %10677, 2
  %10679 = zext i1 %10678 to i8
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10679, i8* %10680, align 1
  store %struct.Memory* %loadMem_46d50d, %struct.Memory** %MEMORY
  %loadMem_46d511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10682 = getelementptr inbounds %struct.GPR, %struct.GPR* %10681, i32 0, i32 33
  %10683 = getelementptr inbounds %struct.Reg, %struct.Reg* %10682, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %10683 to i64*
  %10684 = load i64, i64* %PC.i111
  %10685 = add i64 %10684, 45
  %10686 = load i64, i64* %PC.i111
  %10687 = add i64 %10686, 6
  %10688 = load i64, i64* %PC.i111
  %10689 = add i64 %10688, 6
  store i64 %10689, i64* %PC.i111
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10691 = load i8, i8* %10690, align 1
  %10692 = icmp ne i8 %10691, 0
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10694 = load i8, i8* %10693, align 1
  %10695 = icmp ne i8 %10694, 0
  %10696 = xor i1 %10692, %10695
  %10697 = zext i1 %10696 to i8
  store i8 %10697, i8* %BRANCH_TAKEN, align 1
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10699 = select i1 %10696, i64 %10685, i64 %10687
  store i64 %10699, i64* %10698, align 8
  store %struct.Memory* %loadMem_46d511, %struct.Memory** %MEMORY
  %loadBr_46d511 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d511 = icmp eq i8 %loadBr_46d511, 1
  br i1 %cmpBr_46d511, label %block_.L_46d53e, label %block_46d517

block_46d517:                                     ; preds = %block_46d500
  %loadMem_46d517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10701 = getelementptr inbounds %struct.GPR, %struct.GPR* %10700, i32 0, i32 33
  %10702 = getelementptr inbounds %struct.Reg, %struct.Reg* %10701, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %10702 to i64*
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10704 = getelementptr inbounds %struct.GPR, %struct.GPR* %10703, i32 0, i32 1
  %10705 = getelementptr inbounds %struct.Reg, %struct.Reg* %10704, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %10705 to i64*
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 15
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %10708 to i64*
  %10709 = load i64, i64* %RBP.i110
  %10710 = sub i64 %10709, 24
  %10711 = load i64, i64* %PC.i108
  %10712 = add i64 %10711, 4
  store i64 %10712, i64* %PC.i108
  %10713 = inttoptr i64 %10710 to i32*
  %10714 = load i32, i32* %10713
  %10715 = sext i32 %10714 to i64
  store i64 %10715, i64* %RAX.i109, align 8
  store %struct.Memory* %loadMem_46d517, %struct.Memory** %MEMORY
  %loadMem_46d51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10717 = getelementptr inbounds %struct.GPR, %struct.GPR* %10716, i32 0, i32 33
  %10718 = getelementptr inbounds %struct.Reg, %struct.Reg* %10717, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %10718 to i64*
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10720 = getelementptr inbounds %struct.GPR, %struct.GPR* %10719, i32 0, i32 1
  %10721 = getelementptr inbounds %struct.Reg, %struct.Reg* %10720, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %10721 to i64*
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 15
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %10724 to i64*
  %10725 = load i64, i64* %RBP.i107
  %10726 = load i64, i64* %RAX.i106
  %10727 = mul i64 %10726, 4
  %10728 = add i64 %10725, -1632
  %10729 = add i64 %10728, %10727
  %10730 = load i64, i64* %PC.i105
  %10731 = add i64 %10730, 8
  store i64 %10731, i64* %PC.i105
  %10732 = inttoptr i64 %10729 to i32*
  %10733 = load i32, i32* %10732
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10734, align 1
  %10735 = and i32 %10733, 255
  %10736 = call i32 @llvm.ctpop.i32(i32 %10735)
  %10737 = trunc i32 %10736 to i8
  %10738 = and i8 %10737, 1
  %10739 = xor i8 %10738, 1
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10739, i8* %10740, align 1
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10741, align 1
  %10742 = icmp eq i32 %10733, 0
  %10743 = zext i1 %10742 to i8
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10743, i8* %10744, align 1
  %10745 = lshr i32 %10733, 31
  %10746 = trunc i32 %10745 to i8
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10746, i8* %10747, align 1
  %10748 = lshr i32 %10733, 31
  %10749 = xor i32 %10745, %10748
  %10750 = add i32 %10749, %10748
  %10751 = icmp eq i32 %10750, 2
  %10752 = zext i1 %10751 to i8
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10752, i8* %10753, align 1
  store %struct.Memory* %loadMem_46d51b, %struct.Memory** %MEMORY
  %loadMem_46d523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10755 = getelementptr inbounds %struct.GPR, %struct.GPR* %10754, i32 0, i32 33
  %10756 = getelementptr inbounds %struct.Reg, %struct.Reg* %10755, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %10756 to i64*
  %10757 = load i64, i64* %PC.i104
  %10758 = add i64 %10757, 27
  %10759 = load i64, i64* %PC.i104
  %10760 = add i64 %10759, 6
  %10761 = load i64, i64* %PC.i104
  %10762 = add i64 %10761, 6
  store i64 %10762, i64* %PC.i104
  %10763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10764 = load i8, i8* %10763, align 1
  %10765 = icmp ne i8 %10764, 0
  %10766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10767 = load i8, i8* %10766, align 1
  %10768 = icmp ne i8 %10767, 0
  %10769 = xor i1 %10765, %10768
  %10770 = xor i1 %10769, true
  %10771 = zext i1 %10770 to i8
  store i8 %10771, i8* %BRANCH_TAKEN, align 1
  %10772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10773 = select i1 %10769, i64 %10760, i64 %10758
  store i64 %10773, i64* %10772, align 8
  store %struct.Memory* %loadMem_46d523, %struct.Memory** %MEMORY
  %loadBr_46d523 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d523 = icmp eq i8 %loadBr_46d523, 1
  br i1 %cmpBr_46d523, label %block_.L_46d53e, label %block_46d529

block_46d529:                                     ; preds = %block_46d517
  %loadMem_46d529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10775 = getelementptr inbounds %struct.GPR, %struct.GPR* %10774, i32 0, i32 33
  %10776 = getelementptr inbounds %struct.Reg, %struct.Reg* %10775, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %10776 to i64*
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 1
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 15
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %10782 to i64*
  %10783 = load i64, i64* %RBP.i103
  %10784 = sub i64 %10783, 24
  %10785 = load i64, i64* %PC.i101
  %10786 = add i64 %10785, 4
  store i64 %10786, i64* %PC.i101
  %10787 = inttoptr i64 %10784 to i32*
  %10788 = load i32, i32* %10787
  %10789 = sext i32 %10788 to i64
  store i64 %10789, i64* %RAX.i102, align 8
  store %struct.Memory* %loadMem_46d529, %struct.Memory** %MEMORY
  %loadMem_46d52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 33
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %10792 to i64*
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 1
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %RAX.i98 = bitcast %union.anon* %10795 to i64*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 5
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %10798 to i64*
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 15
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %10801 to i64*
  %10802 = load i64, i64* %RBP.i100
  %10803 = load i64, i64* %RAX.i98
  %10804 = mul i64 %10803, 4
  %10805 = add i64 %10802, -1632
  %10806 = add i64 %10805, %10804
  %10807 = load i64, i64* %PC.i97
  %10808 = add i64 %10807, 7
  store i64 %10808, i64* %PC.i97
  %10809 = inttoptr i64 %10806 to i32*
  %10810 = load i32, i32* %10809
  %10811 = zext i32 %10810 to i64
  store i64 %10811, i64* %RCX.i99, align 8
  store %struct.Memory* %loadMem_46d52d, %struct.Memory** %MEMORY
  %loadMem_46d534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10813 = getelementptr inbounds %struct.GPR, %struct.GPR* %10812, i32 0, i32 33
  %10814 = getelementptr inbounds %struct.Reg, %struct.Reg* %10813, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %10814 to i64*
  %10815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10816 = getelementptr inbounds %struct.GPR, %struct.GPR* %10815, i32 0, i32 5
  %10817 = getelementptr inbounds %struct.Reg, %struct.Reg* %10816, i32 0, i32 0
  %RCX.i96 = bitcast %union.anon* %10817 to i64*
  %10818 = load i64, i64* %RCX.i96
  %10819 = load i64, i64* %PC.i95
  %10820 = add i64 %10819, 3
  store i64 %10820, i64* %PC.i95
  %10821 = trunc i64 %10818 to i32
  %10822 = add i32 1, %10821
  %10823 = zext i32 %10822 to i64
  store i64 %10823, i64* %RCX.i96, align 8
  %10824 = icmp ult i32 %10822, %10821
  %10825 = icmp ult i32 %10822, 1
  %10826 = or i1 %10824, %10825
  %10827 = zext i1 %10826 to i8
  %10828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10827, i8* %10828, align 1
  %10829 = and i32 %10822, 255
  %10830 = call i32 @llvm.ctpop.i32(i32 %10829)
  %10831 = trunc i32 %10830 to i8
  %10832 = and i8 %10831, 1
  %10833 = xor i8 %10832, 1
  %10834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10833, i8* %10834, align 1
  %10835 = xor i64 1, %10818
  %10836 = trunc i64 %10835 to i32
  %10837 = xor i32 %10836, %10822
  %10838 = lshr i32 %10837, 4
  %10839 = trunc i32 %10838 to i8
  %10840 = and i8 %10839, 1
  %10841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10840, i8* %10841, align 1
  %10842 = icmp eq i32 %10822, 0
  %10843 = zext i1 %10842 to i8
  %10844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10843, i8* %10844, align 1
  %10845 = lshr i32 %10822, 31
  %10846 = trunc i32 %10845 to i8
  %10847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10846, i8* %10847, align 1
  %10848 = lshr i32 %10821, 31
  %10849 = xor i32 %10845, %10848
  %10850 = add i32 %10849, %10845
  %10851 = icmp eq i32 %10850, 2
  %10852 = zext i1 %10851 to i8
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10852, i8* %10853, align 1
  store %struct.Memory* %loadMem_46d534, %struct.Memory** %MEMORY
  %loadMem_46d537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10855 = getelementptr inbounds %struct.GPR, %struct.GPR* %10854, i32 0, i32 33
  %10856 = getelementptr inbounds %struct.Reg, %struct.Reg* %10855, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %10856 to i64*
  %10857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10858 = getelementptr inbounds %struct.GPR, %struct.GPR* %10857, i32 0, i32 5
  %10859 = getelementptr inbounds %struct.Reg, %struct.Reg* %10858, i32 0, i32 0
  %ECX.i92 = bitcast %union.anon* %10859 to i32*
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10861 = getelementptr inbounds %struct.GPR, %struct.GPR* %10860, i32 0, i32 1
  %10862 = getelementptr inbounds %struct.Reg, %struct.Reg* %10861, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %10862 to i64*
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10864 = getelementptr inbounds %struct.GPR, %struct.GPR* %10863, i32 0, i32 15
  %10865 = getelementptr inbounds %struct.Reg, %struct.Reg* %10864, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %10865 to i64*
  %10866 = load i64, i64* %RBP.i94
  %10867 = load i64, i64* %RAX.i93
  %10868 = mul i64 %10867, 4
  %10869 = add i64 %10866, -1632
  %10870 = add i64 %10869, %10868
  %10871 = load i32, i32* %ECX.i92
  %10872 = zext i32 %10871 to i64
  %10873 = load i64, i64* %PC.i91
  %10874 = add i64 %10873, 7
  store i64 %10874, i64* %PC.i91
  %10875 = inttoptr i64 %10870 to i32*
  store i32 %10871, i32* %10875
  store %struct.Memory* %loadMem_46d537, %struct.Memory** %MEMORY
  br label %block_.L_46d53e

block_.L_46d53e:                                  ; preds = %block_46d529, %block_46d517, %block_46d500, %block_.L_46d4e6
  %loadMem_46d53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 33
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 1
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %RAX.i89 = bitcast %union.anon* %10881 to i64*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 15
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %10884 to i64*
  %10885 = load i64, i64* %RBP.i90
  %10886 = sub i64 %10885, 24
  %10887 = load i64, i64* %PC.i88
  %10888 = add i64 %10887, 3
  store i64 %10888, i64* %PC.i88
  %10889 = inttoptr i64 %10886 to i32*
  %10890 = load i32, i32* %10889
  %10891 = zext i32 %10890 to i64
  store i64 %10891, i64* %RAX.i89, align 8
  store %struct.Memory* %loadMem_46d53e, %struct.Memory** %MEMORY
  %loadMem_46d541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 33
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %10894 to i64*
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 1
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %RAX.i87 = bitcast %union.anon* %10897 to i64*
  %10898 = load i64, i64* %RAX.i87
  %10899 = load i64, i64* %PC.i86
  %10900 = add i64 %10899, 3
  store i64 %10900, i64* %PC.i86
  %10901 = trunc i64 %10898 to i32
  %10902 = add i32 1, %10901
  %10903 = zext i32 %10902 to i64
  store i64 %10903, i64* %RAX.i87, align 8
  %10904 = icmp ult i32 %10902, %10901
  %10905 = icmp ult i32 %10902, 1
  %10906 = or i1 %10904, %10905
  %10907 = zext i1 %10906 to i8
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10907, i8* %10908, align 1
  %10909 = and i32 %10902, 255
  %10910 = call i32 @llvm.ctpop.i32(i32 %10909)
  %10911 = trunc i32 %10910 to i8
  %10912 = and i8 %10911, 1
  %10913 = xor i8 %10912, 1
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10913, i8* %10914, align 1
  %10915 = xor i64 1, %10898
  %10916 = trunc i64 %10915 to i32
  %10917 = xor i32 %10916, %10902
  %10918 = lshr i32 %10917, 4
  %10919 = trunc i32 %10918 to i8
  %10920 = and i8 %10919, 1
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10920, i8* %10921, align 1
  %10922 = icmp eq i32 %10902, 0
  %10923 = zext i1 %10922 to i8
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10923, i8* %10924, align 1
  %10925 = lshr i32 %10902, 31
  %10926 = trunc i32 %10925 to i8
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10926, i8* %10927, align 1
  %10928 = lshr i32 %10901, 31
  %10929 = xor i32 %10925, %10928
  %10930 = add i32 %10929, %10925
  %10931 = icmp eq i32 %10930, 2
  %10932 = zext i1 %10931 to i8
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10932, i8* %10933, align 1
  store %struct.Memory* %loadMem_46d541, %struct.Memory** %MEMORY
  %loadMem_46d544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 1
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %EAX.i84 = bitcast %union.anon* %10939 to i32*
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10941 = getelementptr inbounds %struct.GPR, %struct.GPR* %10940, i32 0, i32 5
  %10942 = getelementptr inbounds %struct.Reg, %struct.Reg* %10941, i32 0, i32 0
  %RCX.i85 = bitcast %union.anon* %10942 to i64*
  %10943 = load i32, i32* %EAX.i84
  %10944 = zext i32 %10943 to i64
  %10945 = load i64, i64* %PC.i83
  %10946 = add i64 %10945, 3
  store i64 %10946, i64* %PC.i83
  %10947 = shl i64 %10944, 32
  %10948 = ashr exact i64 %10947, 32
  store i64 %10948, i64* %RCX.i85, align 8
  store %struct.Memory* %loadMem_46d544, %struct.Memory** %MEMORY
  %loadMem_46d547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 33
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %10951 to i64*
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 1
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %RAX.i81 = bitcast %union.anon* %10954 to i64*
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10956 = getelementptr inbounds %struct.GPR, %struct.GPR* %10955, i32 0, i32 5
  %10957 = getelementptr inbounds %struct.Reg, %struct.Reg* %10956, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %10957 to i64*
  %10958 = load i64, i64* %RCX.i82
  %10959 = add i64 %10958, 12099168
  %10960 = load i64, i64* %PC.i80
  %10961 = add i64 %10960, 8
  store i64 %10961, i64* %PC.i80
  %10962 = inttoptr i64 %10959 to i8*
  %10963 = load i8, i8* %10962
  %10964 = zext i8 %10963 to i64
  store i64 %10964, i64* %RAX.i81, align 8
  store %struct.Memory* %loadMem_46d547, %struct.Memory** %MEMORY
  %loadMem_46d54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 33
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %10967 to i64*
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10969 = getelementptr inbounds %struct.GPR, %struct.GPR* %10968, i32 0, i32 1
  %10970 = getelementptr inbounds %struct.Reg, %struct.Reg* %10969, i32 0, i32 0
  %EAX.i79 = bitcast %union.anon* %10970 to i32*
  %10971 = load i32, i32* %EAX.i79
  %10972 = zext i32 %10971 to i64
  %10973 = load i64, i64* %PC.i78
  %10974 = add i64 %10973, 3
  store i64 %10974, i64* %PC.i78
  %10975 = sub i32 %10971, 3
  %10976 = icmp ult i32 %10971, 3
  %10977 = zext i1 %10976 to i8
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10977, i8* %10978, align 1
  %10979 = and i32 %10975, 255
  %10980 = call i32 @llvm.ctpop.i32(i32 %10979)
  %10981 = trunc i32 %10980 to i8
  %10982 = and i8 %10981, 1
  %10983 = xor i8 %10982, 1
  %10984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10983, i8* %10984, align 1
  %10985 = xor i64 3, %10972
  %10986 = trunc i64 %10985 to i32
  %10987 = xor i32 %10986, %10975
  %10988 = lshr i32 %10987, 4
  %10989 = trunc i32 %10988 to i8
  %10990 = and i8 %10989, 1
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10990, i8* %10991, align 1
  %10992 = icmp eq i32 %10975, 0
  %10993 = zext i1 %10992 to i8
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10993, i8* %10994, align 1
  %10995 = lshr i32 %10975, 31
  %10996 = trunc i32 %10995 to i8
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10996, i8* %10997, align 1
  %10998 = lshr i32 %10971, 31
  %10999 = xor i32 %10995, %10998
  %11000 = add i32 %10999, %10998
  %11001 = icmp eq i32 %11000, 2
  %11002 = zext i1 %11001 to i8
  %11003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11002, i8* %11003, align 1
  store %struct.Memory* %loadMem_46d54f, %struct.Memory** %MEMORY
  %loadMem_46d552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 33
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %11006 to i64*
  %11007 = load i64, i64* %PC.i77
  %11008 = add i64 %11007, 68
  %11009 = load i64, i64* %PC.i77
  %11010 = add i64 %11009, 6
  %11011 = load i64, i64* %PC.i77
  %11012 = add i64 %11011, 6
  store i64 %11012, i64* %PC.i77
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11014 = load i8, i8* %11013, align 1
  store i8 %11014, i8* %BRANCH_TAKEN, align 1
  %11015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11016 = icmp ne i8 %11014, 0
  %11017 = select i1 %11016, i64 %11008, i64 %11010
  store i64 %11017, i64* %11015, align 8
  store %struct.Memory* %loadMem_46d552, %struct.Memory** %MEMORY
  %loadBr_46d552 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d552 = icmp eq i8 %loadBr_46d552, 1
  br i1 %cmpBr_46d552, label %block_.L_46d596, label %block_46d558

block_46d558:                                     ; preds = %block_.L_46d53e
  %loadMem_46d558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11019 = getelementptr inbounds %struct.GPR, %struct.GPR* %11018, i32 0, i32 33
  %11020 = getelementptr inbounds %struct.Reg, %struct.Reg* %11019, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %11020 to i64*
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11022 = getelementptr inbounds %struct.GPR, %struct.GPR* %11021, i32 0, i32 1
  %11023 = getelementptr inbounds %struct.Reg, %struct.Reg* %11022, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %11023 to i64*
  %11024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11025 = getelementptr inbounds %struct.GPR, %struct.GPR* %11024, i32 0, i32 15
  %11026 = getelementptr inbounds %struct.Reg, %struct.Reg* %11025, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %11026 to i64*
  %11027 = load i64, i64* %RBP.i76
  %11028 = sub i64 %11027, 16
  %11029 = load i64, i64* %PC.i74
  %11030 = add i64 %11029, 4
  store i64 %11030, i64* %PC.i74
  %11031 = inttoptr i64 %11028 to i64*
  %11032 = load i64, i64* %11031
  store i64 %11032, i64* %RAX.i75, align 8
  store %struct.Memory* %loadMem_46d558, %struct.Memory** %MEMORY
  %loadMem_46d55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11034 = getelementptr inbounds %struct.GPR, %struct.GPR* %11033, i32 0, i32 33
  %11035 = getelementptr inbounds %struct.Reg, %struct.Reg* %11034, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %11035 to i64*
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11037 = getelementptr inbounds %struct.GPR, %struct.GPR* %11036, i32 0, i32 5
  %11038 = getelementptr inbounds %struct.Reg, %struct.Reg* %11037, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %11038 to i64*
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11040 = getelementptr inbounds %struct.GPR, %struct.GPR* %11039, i32 0, i32 15
  %11041 = getelementptr inbounds %struct.Reg, %struct.Reg* %11040, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %11041 to i64*
  %11042 = load i64, i64* %RBP.i73
  %11043 = sub i64 %11042, 24
  %11044 = load i64, i64* %PC.i71
  %11045 = add i64 %11044, 3
  store i64 %11045, i64* %PC.i71
  %11046 = inttoptr i64 %11043 to i32*
  %11047 = load i32, i32* %11046
  %11048 = zext i32 %11047 to i64
  store i64 %11048, i64* %RCX.i72, align 8
  store %struct.Memory* %loadMem_46d55c, %struct.Memory** %MEMORY
  %loadMem_46d55f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11050 = getelementptr inbounds %struct.GPR, %struct.GPR* %11049, i32 0, i32 33
  %11051 = getelementptr inbounds %struct.Reg, %struct.Reg* %11050, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %11051 to i64*
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11053 = getelementptr inbounds %struct.GPR, %struct.GPR* %11052, i32 0, i32 5
  %11054 = getelementptr inbounds %struct.Reg, %struct.Reg* %11053, i32 0, i32 0
  %RCX.i70 = bitcast %union.anon* %11054 to i64*
  %11055 = load i64, i64* %RCX.i70
  %11056 = load i64, i64* %PC.i69
  %11057 = add i64 %11056, 3
  store i64 %11057, i64* %PC.i69
  %11058 = trunc i64 %11055 to i32
  %11059 = add i32 1, %11058
  %11060 = zext i32 %11059 to i64
  store i64 %11060, i64* %RCX.i70, align 8
  %11061 = icmp ult i32 %11059, %11058
  %11062 = icmp ult i32 %11059, 1
  %11063 = or i1 %11061, %11062
  %11064 = zext i1 %11063 to i8
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11064, i8* %11065, align 1
  %11066 = and i32 %11059, 255
  %11067 = call i32 @llvm.ctpop.i32(i32 %11066)
  %11068 = trunc i32 %11067 to i8
  %11069 = and i8 %11068, 1
  %11070 = xor i8 %11069, 1
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11070, i8* %11071, align 1
  %11072 = xor i64 1, %11055
  %11073 = trunc i64 %11072 to i32
  %11074 = xor i32 %11073, %11059
  %11075 = lshr i32 %11074, 4
  %11076 = trunc i32 %11075 to i8
  %11077 = and i8 %11076, 1
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11077, i8* %11078, align 1
  %11079 = icmp eq i32 %11059, 0
  %11080 = zext i1 %11079 to i8
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11080, i8* %11081, align 1
  %11082 = lshr i32 %11059, 31
  %11083 = trunc i32 %11082 to i8
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11083, i8* %11084, align 1
  %11085 = lshr i32 %11058, 31
  %11086 = xor i32 %11082, %11085
  %11087 = add i32 %11086, %11082
  %11088 = icmp eq i32 %11087, 2
  %11089 = zext i1 %11088 to i8
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11089, i8* %11090, align 1
  store %struct.Memory* %loadMem_46d55f, %struct.Memory** %MEMORY
  %loadMem_46d562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11092 = getelementptr inbounds %struct.GPR, %struct.GPR* %11091, i32 0, i32 33
  %11093 = getelementptr inbounds %struct.Reg, %struct.Reg* %11092, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %11093 to i64*
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11095 = getelementptr inbounds %struct.GPR, %struct.GPR* %11094, i32 0, i32 5
  %11096 = getelementptr inbounds %struct.Reg, %struct.Reg* %11095, i32 0, i32 0
  %ECX.i67 = bitcast %union.anon* %11096 to i32*
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11098 = getelementptr inbounds %struct.GPR, %struct.GPR* %11097, i32 0, i32 7
  %11099 = getelementptr inbounds %struct.Reg, %struct.Reg* %11098, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %11099 to i64*
  %11100 = load i32, i32* %ECX.i67
  %11101 = zext i32 %11100 to i64
  %11102 = load i64, i64* %PC.i66
  %11103 = add i64 %11102, 3
  store i64 %11103, i64* %PC.i66
  %11104 = shl i64 %11101, 32
  %11105 = ashr exact i64 %11104, 32
  store i64 %11105, i64* %RDX.i68, align 8
  store %struct.Memory* %loadMem_46d562, %struct.Memory** %MEMORY
  %loadMem_46d565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11107 = getelementptr inbounds %struct.GPR, %struct.GPR* %11106, i32 0, i32 33
  %11108 = getelementptr inbounds %struct.Reg, %struct.Reg* %11107, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %11108 to i64*
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11110 = getelementptr inbounds %struct.GPR, %struct.GPR* %11109, i32 0, i32 1
  %11111 = getelementptr inbounds %struct.Reg, %struct.Reg* %11110, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %11111 to i64*
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11113 = getelementptr inbounds %struct.GPR, %struct.GPR* %11112, i32 0, i32 7
  %11114 = getelementptr inbounds %struct.Reg, %struct.Reg* %11113, i32 0, i32 0
  %RDX.i65 = bitcast %union.anon* %11114 to i64*
  %11115 = load i64, i64* %RAX.i64
  %11116 = load i64, i64* %RDX.i65
  %11117 = mul i64 %11116, 4
  %11118 = add i64 %11117, %11115
  %11119 = load i64, i64* %PC.i63
  %11120 = add i64 %11119, 4
  store i64 %11120, i64* %PC.i63
  %11121 = inttoptr i64 %11118 to i32*
  %11122 = load i32, i32* %11121
  %11123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11123, align 1
  %11124 = and i32 %11122, 255
  %11125 = call i32 @llvm.ctpop.i32(i32 %11124)
  %11126 = trunc i32 %11125 to i8
  %11127 = and i8 %11126, 1
  %11128 = xor i8 %11127, 1
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11128, i8* %11129, align 1
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11130, align 1
  %11131 = icmp eq i32 %11122, 0
  %11132 = zext i1 %11131 to i8
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11132, i8* %11133, align 1
  %11134 = lshr i32 %11122, 31
  %11135 = trunc i32 %11134 to i8
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11135, i8* %11136, align 1
  %11137 = lshr i32 %11122, 31
  %11138 = xor i32 %11134, %11137
  %11139 = add i32 %11138, %11137
  %11140 = icmp eq i32 %11139, 2
  %11141 = zext i1 %11140 to i8
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11141, i8* %11142, align 1
  store %struct.Memory* %loadMem_46d565, %struct.Memory** %MEMORY
  %loadMem_46d569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11144 = getelementptr inbounds %struct.GPR, %struct.GPR* %11143, i32 0, i32 33
  %11145 = getelementptr inbounds %struct.Reg, %struct.Reg* %11144, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %11145 to i64*
  %11146 = load i64, i64* %PC.i62
  %11147 = add i64 %11146, 45
  %11148 = load i64, i64* %PC.i62
  %11149 = add i64 %11148, 6
  %11150 = load i64, i64* %PC.i62
  %11151 = add i64 %11150, 6
  store i64 %11151, i64* %PC.i62
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11153 = load i8, i8* %11152, align 1
  %11154 = icmp ne i8 %11153, 0
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11156 = load i8, i8* %11155, align 1
  %11157 = icmp ne i8 %11156, 0
  %11158 = xor i1 %11154, %11157
  %11159 = zext i1 %11158 to i8
  store i8 %11159, i8* %BRANCH_TAKEN, align 1
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11161 = select i1 %11158, i64 %11147, i64 %11149
  store i64 %11161, i64* %11160, align 8
  store %struct.Memory* %loadMem_46d569, %struct.Memory** %MEMORY
  %loadBr_46d569 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d569 = icmp eq i8 %loadBr_46d569, 1
  br i1 %cmpBr_46d569, label %block_.L_46d596, label %block_46d56f

block_46d56f:                                     ; preds = %block_46d558
  %loadMem_46d56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11163 = getelementptr inbounds %struct.GPR, %struct.GPR* %11162, i32 0, i32 33
  %11164 = getelementptr inbounds %struct.Reg, %struct.Reg* %11163, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %11164 to i64*
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11166 = getelementptr inbounds %struct.GPR, %struct.GPR* %11165, i32 0, i32 1
  %11167 = getelementptr inbounds %struct.Reg, %struct.Reg* %11166, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %11167 to i64*
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 15
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %11170 to i64*
  %11171 = load i64, i64* %RBP.i61
  %11172 = sub i64 %11171, 24
  %11173 = load i64, i64* %PC.i59
  %11174 = add i64 %11173, 4
  store i64 %11174, i64* %PC.i59
  %11175 = inttoptr i64 %11172 to i32*
  %11176 = load i32, i32* %11175
  %11177 = sext i32 %11176 to i64
  store i64 %11177, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_46d56f, %struct.Memory** %MEMORY
  %loadMem_46d573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 33
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %11180 to i64*
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 1
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %RAX.i57 = bitcast %union.anon* %11183 to i64*
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11185 = getelementptr inbounds %struct.GPR, %struct.GPR* %11184, i32 0, i32 15
  %11186 = getelementptr inbounds %struct.Reg, %struct.Reg* %11185, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %11186 to i64*
  %11187 = load i64, i64* %RBP.i58
  %11188 = load i64, i64* %RAX.i57
  %11189 = mul i64 %11188, 4
  %11190 = add i64 %11187, -1632
  %11191 = add i64 %11190, %11189
  %11192 = load i64, i64* %PC.i56
  %11193 = add i64 %11192, 8
  store i64 %11193, i64* %PC.i56
  %11194 = inttoptr i64 %11191 to i32*
  %11195 = load i32, i32* %11194
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11196, align 1
  %11197 = and i32 %11195, 255
  %11198 = call i32 @llvm.ctpop.i32(i32 %11197)
  %11199 = trunc i32 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = xor i8 %11200, 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11201, i8* %11202, align 1
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11203, align 1
  %11204 = icmp eq i32 %11195, 0
  %11205 = zext i1 %11204 to i8
  %11206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11205, i8* %11206, align 1
  %11207 = lshr i32 %11195, 31
  %11208 = trunc i32 %11207 to i8
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11208, i8* %11209, align 1
  %11210 = lshr i32 %11195, 31
  %11211 = xor i32 %11207, %11210
  %11212 = add i32 %11211, %11210
  %11213 = icmp eq i32 %11212, 2
  %11214 = zext i1 %11213 to i8
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11214, i8* %11215, align 1
  store %struct.Memory* %loadMem_46d573, %struct.Memory** %MEMORY
  %loadMem_46d57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11217 = getelementptr inbounds %struct.GPR, %struct.GPR* %11216, i32 0, i32 33
  %11218 = getelementptr inbounds %struct.Reg, %struct.Reg* %11217, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %11218 to i64*
  %11219 = load i64, i64* %PC.i55
  %11220 = add i64 %11219, 27
  %11221 = load i64, i64* %PC.i55
  %11222 = add i64 %11221, 6
  %11223 = load i64, i64* %PC.i55
  %11224 = add i64 %11223, 6
  store i64 %11224, i64* %PC.i55
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11226 = load i8, i8* %11225, align 1
  %11227 = icmp ne i8 %11226, 0
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11229 = load i8, i8* %11228, align 1
  %11230 = icmp ne i8 %11229, 0
  %11231 = xor i1 %11227, %11230
  %11232 = xor i1 %11231, true
  %11233 = zext i1 %11232 to i8
  store i8 %11233, i8* %BRANCH_TAKEN, align 1
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11235 = select i1 %11231, i64 %11222, i64 %11220
  store i64 %11235, i64* %11234, align 8
  store %struct.Memory* %loadMem_46d57b, %struct.Memory** %MEMORY
  %loadBr_46d57b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_46d57b = icmp eq i8 %loadBr_46d57b, 1
  br i1 %cmpBr_46d57b, label %block_.L_46d596, label %block_46d581

block_46d581:                                     ; preds = %block_46d56f
  %loadMem_46d581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11237 = getelementptr inbounds %struct.GPR, %struct.GPR* %11236, i32 0, i32 33
  %11238 = getelementptr inbounds %struct.Reg, %struct.Reg* %11237, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %11238 to i64*
  %11239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11240 = getelementptr inbounds %struct.GPR, %struct.GPR* %11239, i32 0, i32 1
  %11241 = getelementptr inbounds %struct.Reg, %struct.Reg* %11240, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %11241 to i64*
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11243 = getelementptr inbounds %struct.GPR, %struct.GPR* %11242, i32 0, i32 15
  %11244 = getelementptr inbounds %struct.Reg, %struct.Reg* %11243, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %11244 to i64*
  %11245 = load i64, i64* %RBP.i54
  %11246 = sub i64 %11245, 24
  %11247 = load i64, i64* %PC.i52
  %11248 = add i64 %11247, 4
  store i64 %11248, i64* %PC.i52
  %11249 = inttoptr i64 %11246 to i32*
  %11250 = load i32, i32* %11249
  %11251 = sext i32 %11250 to i64
  store i64 %11251, i64* %RAX.i53, align 8
  store %struct.Memory* %loadMem_46d581, %struct.Memory** %MEMORY
  %loadMem_46d585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 33
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %11254 to i64*
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11256 = getelementptr inbounds %struct.GPR, %struct.GPR* %11255, i32 0, i32 1
  %11257 = getelementptr inbounds %struct.Reg, %struct.Reg* %11256, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %11257 to i64*
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11259 = getelementptr inbounds %struct.GPR, %struct.GPR* %11258, i32 0, i32 5
  %11260 = getelementptr inbounds %struct.Reg, %struct.Reg* %11259, i32 0, i32 0
  %RCX.i50 = bitcast %union.anon* %11260 to i64*
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11262 = getelementptr inbounds %struct.GPR, %struct.GPR* %11261, i32 0, i32 15
  %11263 = getelementptr inbounds %struct.Reg, %struct.Reg* %11262, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %11263 to i64*
  %11264 = load i64, i64* %RBP.i51
  %11265 = load i64, i64* %RAX.i49
  %11266 = mul i64 %11265, 4
  %11267 = add i64 %11264, -1632
  %11268 = add i64 %11267, %11266
  %11269 = load i64, i64* %PC.i48
  %11270 = add i64 %11269, 7
  store i64 %11270, i64* %PC.i48
  %11271 = inttoptr i64 %11268 to i32*
  %11272 = load i32, i32* %11271
  %11273 = zext i32 %11272 to i64
  store i64 %11273, i64* %RCX.i50, align 8
  store %struct.Memory* %loadMem_46d585, %struct.Memory** %MEMORY
  %loadMem_46d58c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11275 = getelementptr inbounds %struct.GPR, %struct.GPR* %11274, i32 0, i32 33
  %11276 = getelementptr inbounds %struct.Reg, %struct.Reg* %11275, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %11276 to i64*
  %11277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11278 = getelementptr inbounds %struct.GPR, %struct.GPR* %11277, i32 0, i32 5
  %11279 = getelementptr inbounds %struct.Reg, %struct.Reg* %11278, i32 0, i32 0
  %RCX.i47 = bitcast %union.anon* %11279 to i64*
  %11280 = load i64, i64* %RCX.i47
  %11281 = load i64, i64* %PC.i46
  %11282 = add i64 %11281, 3
  store i64 %11282, i64* %PC.i46
  %11283 = trunc i64 %11280 to i32
  %11284 = add i32 1, %11283
  %11285 = zext i32 %11284 to i64
  store i64 %11285, i64* %RCX.i47, align 8
  %11286 = icmp ult i32 %11284, %11283
  %11287 = icmp ult i32 %11284, 1
  %11288 = or i1 %11286, %11287
  %11289 = zext i1 %11288 to i8
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11289, i8* %11290, align 1
  %11291 = and i32 %11284, 255
  %11292 = call i32 @llvm.ctpop.i32(i32 %11291)
  %11293 = trunc i32 %11292 to i8
  %11294 = and i8 %11293, 1
  %11295 = xor i8 %11294, 1
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11295, i8* %11296, align 1
  %11297 = xor i64 1, %11280
  %11298 = trunc i64 %11297 to i32
  %11299 = xor i32 %11298, %11284
  %11300 = lshr i32 %11299, 4
  %11301 = trunc i32 %11300 to i8
  %11302 = and i8 %11301, 1
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11302, i8* %11303, align 1
  %11304 = icmp eq i32 %11284, 0
  %11305 = zext i1 %11304 to i8
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11305, i8* %11306, align 1
  %11307 = lshr i32 %11284, 31
  %11308 = trunc i32 %11307 to i8
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11308, i8* %11309, align 1
  %11310 = lshr i32 %11283, 31
  %11311 = xor i32 %11307, %11310
  %11312 = add i32 %11311, %11307
  %11313 = icmp eq i32 %11312, 2
  %11314 = zext i1 %11313 to i8
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11314, i8* %11315, align 1
  store %struct.Memory* %loadMem_46d58c, %struct.Memory** %MEMORY
  %loadMem_46d58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 33
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %11318 to i64*
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11320 = getelementptr inbounds %struct.GPR, %struct.GPR* %11319, i32 0, i32 5
  %11321 = getelementptr inbounds %struct.Reg, %struct.Reg* %11320, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11321 to i32*
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 1
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %11324 to i64*
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 15
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %11327 to i64*
  %11328 = load i64, i64* %RBP.i45
  %11329 = load i64, i64* %RAX.i44
  %11330 = mul i64 %11329, 4
  %11331 = add i64 %11328, -1632
  %11332 = add i64 %11331, %11330
  %11333 = load i32, i32* %ECX.i
  %11334 = zext i32 %11333 to i64
  %11335 = load i64, i64* %PC.i43
  %11336 = add i64 %11335, 7
  store i64 %11336, i64* %PC.i43
  %11337 = inttoptr i64 %11332 to i32*
  store i32 %11333, i32* %11337
  store %struct.Memory* %loadMem_46d58f, %struct.Memory** %MEMORY
  br label %block_.L_46d596

block_.L_46d596:                                  ; preds = %block_46d581, %block_46d56f, %block_46d558, %block_.L_46d53e
  %loadMem_46d596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11339 = getelementptr inbounds %struct.GPR, %struct.GPR* %11338, i32 0, i32 33
  %11340 = getelementptr inbounds %struct.Reg, %struct.Reg* %11339, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %11340 to i64*
  %11341 = load i64, i64* %PC.i42
  %11342 = add i64 %11341, 5
  %11343 = load i64, i64* %PC.i42
  %11344 = add i64 %11343, 5
  store i64 %11344, i64* %PC.i42
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11342, i64* %11345, align 8
  store %struct.Memory* %loadMem_46d596, %struct.Memory** %MEMORY
  br label %block_.L_46d59b

block_.L_46d59b:                                  ; preds = %block_.L_46d596, %block_.L_46d436
  %loadMem_46d59b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11347 = getelementptr inbounds %struct.GPR, %struct.GPR* %11346, i32 0, i32 33
  %11348 = getelementptr inbounds %struct.Reg, %struct.Reg* %11347, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %11348 to i64*
  %11349 = load i64, i64* %PC.i41
  %11350 = add i64 %11349, 5
  %11351 = load i64, i64* %PC.i41
  %11352 = add i64 %11351, 5
  store i64 %11352, i64* %PC.i41
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11350, i64* %11353, align 8
  store %struct.Memory* %loadMem_46d59b, %struct.Memory** %MEMORY
  br label %block_.L_46d5a0

block_.L_46d5a0:                                  ; preds = %block_.L_46d59b, %block_46d2cc
  %loadMem_46d5a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11355 = getelementptr inbounds %struct.GPR, %struct.GPR* %11354, i32 0, i32 33
  %11356 = getelementptr inbounds %struct.Reg, %struct.Reg* %11355, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %11356 to i64*
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11358 = getelementptr inbounds %struct.GPR, %struct.GPR* %11357, i32 0, i32 1
  %11359 = getelementptr inbounds %struct.Reg, %struct.Reg* %11358, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %11359 to i64*
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11361 = getelementptr inbounds %struct.GPR, %struct.GPR* %11360, i32 0, i32 15
  %11362 = getelementptr inbounds %struct.Reg, %struct.Reg* %11361, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %11362 to i64*
  %11363 = load i64, i64* %RBP.i40
  %11364 = sub i64 %11363, 24
  %11365 = load i64, i64* %PC.i38
  %11366 = add i64 %11365, 3
  store i64 %11366, i64* %PC.i38
  %11367 = inttoptr i64 %11364 to i32*
  %11368 = load i32, i32* %11367
  %11369 = zext i32 %11368 to i64
  store i64 %11369, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_46d5a0, %struct.Memory** %MEMORY
  %loadMem_46d5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11371 = getelementptr inbounds %struct.GPR, %struct.GPR* %11370, i32 0, i32 33
  %11372 = getelementptr inbounds %struct.Reg, %struct.Reg* %11371, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %11372 to i64*
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11374 = getelementptr inbounds %struct.GPR, %struct.GPR* %11373, i32 0, i32 1
  %11375 = getelementptr inbounds %struct.Reg, %struct.Reg* %11374, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %11375 to i64*
  %11376 = load i64, i64* %RAX.i37
  %11377 = load i64, i64* %PC.i36
  %11378 = add i64 %11377, 3
  store i64 %11378, i64* %PC.i36
  %11379 = trunc i64 %11376 to i32
  %11380 = add i32 1, %11379
  %11381 = zext i32 %11380 to i64
  store i64 %11381, i64* %RAX.i37, align 8
  %11382 = icmp ult i32 %11380, %11379
  %11383 = icmp ult i32 %11380, 1
  %11384 = or i1 %11382, %11383
  %11385 = zext i1 %11384 to i8
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11385, i8* %11386, align 1
  %11387 = and i32 %11380, 255
  %11388 = call i32 @llvm.ctpop.i32(i32 %11387)
  %11389 = trunc i32 %11388 to i8
  %11390 = and i8 %11389, 1
  %11391 = xor i8 %11390, 1
  %11392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11391, i8* %11392, align 1
  %11393 = xor i64 1, %11376
  %11394 = trunc i64 %11393 to i32
  %11395 = xor i32 %11394, %11380
  %11396 = lshr i32 %11395, 4
  %11397 = trunc i32 %11396 to i8
  %11398 = and i8 %11397, 1
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11398, i8* %11399, align 1
  %11400 = icmp eq i32 %11380, 0
  %11401 = zext i1 %11400 to i8
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11401, i8* %11402, align 1
  %11403 = lshr i32 %11380, 31
  %11404 = trunc i32 %11403 to i8
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11404, i8* %11405, align 1
  %11406 = lshr i32 %11379, 31
  %11407 = xor i32 %11403, %11406
  %11408 = add i32 %11407, %11403
  %11409 = icmp eq i32 %11408, 2
  %11410 = zext i1 %11409 to i8
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11410, i8* %11411, align 1
  store %struct.Memory* %loadMem_46d5a3, %struct.Memory** %MEMORY
  %loadMem_46d5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11413 = getelementptr inbounds %struct.GPR, %struct.GPR* %11412, i32 0, i32 33
  %11414 = getelementptr inbounds %struct.Reg, %struct.Reg* %11413, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %11414 to i64*
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11416 = getelementptr inbounds %struct.GPR, %struct.GPR* %11415, i32 0, i32 1
  %11417 = getelementptr inbounds %struct.Reg, %struct.Reg* %11416, i32 0, i32 0
  %EAX.i34 = bitcast %union.anon* %11417 to i32*
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11419 = getelementptr inbounds %struct.GPR, %struct.GPR* %11418, i32 0, i32 15
  %11420 = getelementptr inbounds %struct.Reg, %struct.Reg* %11419, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %11420 to i64*
  %11421 = load i64, i64* %RBP.i35
  %11422 = sub i64 %11421, 24
  %11423 = load i32, i32* %EAX.i34
  %11424 = zext i32 %11423 to i64
  %11425 = load i64, i64* %PC.i33
  %11426 = add i64 %11425, 3
  store i64 %11426, i64* %PC.i33
  %11427 = inttoptr i64 %11422 to i32*
  store i32 %11423, i32* %11427
  store %struct.Memory* %loadMem_46d5a6, %struct.Memory** %MEMORY
  %loadMem_46d5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 33
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %11430 to i64*
  %11431 = load i64, i64* %PC.i32
  %11432 = add i64 %11431, -767
  %11433 = load i64, i64* %PC.i32
  %11434 = add i64 %11433, 5
  store i64 %11434, i64* %PC.i32
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11432, i64* %11435, align 8
  store %struct.Memory* %loadMem_46d5a9, %struct.Memory** %MEMORY
  br label %block_.L_46d2aa

block_.L_46d5ae:                                  ; preds = %block_.L_46d2aa
  %loadMem_46d5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 33
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %11438 to i64*
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11440 = getelementptr inbounds %struct.GPR, %struct.GPR* %11439, i32 0, i32 1
  %11441 = getelementptr inbounds %struct.Reg, %struct.Reg* %11440, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %11441 to i64*
  %11442 = load i64, i64* %PC.i30
  %11443 = add i64 %11442, 5
  store i64 %11443, i64* %PC.i30
  store i64 1600, i64* %RAX.i31, align 8
  store %struct.Memory* %loadMem_46d5ae, %struct.Memory** %MEMORY
  %loadMem_46d5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11445 = getelementptr inbounds %struct.GPR, %struct.GPR* %11444, i32 0, i32 33
  %11446 = getelementptr inbounds %struct.Reg, %struct.Reg* %11445, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %11446 to i64*
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11448 = getelementptr inbounds %struct.GPR, %struct.GPR* %11447, i32 0, i32 1
  %11449 = getelementptr inbounds %struct.Reg, %struct.Reg* %11448, i32 0, i32 0
  %EAX.i29 = bitcast %union.anon* %11449 to i32*
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11451 = getelementptr inbounds %struct.GPR, %struct.GPR* %11450, i32 0, i32 7
  %11452 = getelementptr inbounds %struct.Reg, %struct.Reg* %11451, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11452 to i64*
  %11453 = load i32, i32* %EAX.i29
  %11454 = zext i32 %11453 to i64
  %11455 = load i64, i64* %PC.i28
  %11456 = add i64 %11455, 2
  store i64 %11456, i64* %PC.i28
  %11457 = and i64 %11454, 4294967295
  store i64 %11457, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_46d5b3, %struct.Memory** %MEMORY
  %loadMem_46d5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11459 = getelementptr inbounds %struct.GPR, %struct.GPR* %11458, i32 0, i32 33
  %11460 = getelementptr inbounds %struct.Reg, %struct.Reg* %11459, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %11460 to i64*
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11462 = getelementptr inbounds %struct.GPR, %struct.GPR* %11461, i32 0, i32 5
  %11463 = getelementptr inbounds %struct.Reg, %struct.Reg* %11462, i32 0, i32 0
  %RCX.i26 = bitcast %union.anon* %11463 to i64*
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11465 = getelementptr inbounds %struct.GPR, %struct.GPR* %11464, i32 0, i32 15
  %11466 = getelementptr inbounds %struct.Reg, %struct.Reg* %11465, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %11466 to i64*
  %11467 = load i64, i64* %RBP.i27
  %11468 = sub i64 %11467, 1632
  %11469 = load i64, i64* %PC.i25
  %11470 = add i64 %11469, 7
  store i64 %11470, i64* %PC.i25
  store i64 %11468, i64* %RCX.i26, align 8
  store %struct.Memory* %loadMem_46d5b5, %struct.Memory** %MEMORY
  %loadMem_46d5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 33
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11473 to i64*
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 9
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %RSI.i23 = bitcast %union.anon* %11476 to i64*
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11478 = getelementptr inbounds %struct.GPR, %struct.GPR* %11477, i32 0, i32 15
  %11479 = getelementptr inbounds %struct.Reg, %struct.Reg* %11478, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %11479 to i64*
  %11480 = load i64, i64* %RBP.i24
  %11481 = sub i64 %11480, 16
  %11482 = load i64, i64* %PC.i22
  %11483 = add i64 %11482, 4
  store i64 %11483, i64* %PC.i22
  %11484 = inttoptr i64 %11481 to i64*
  %11485 = load i64, i64* %11484
  store i64 %11485, i64* %RSI.i23, align 8
  store %struct.Memory* %loadMem_46d5bc, %struct.Memory** %MEMORY
  %loadMem_46d5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11487 = getelementptr inbounds %struct.GPR, %struct.GPR* %11486, i32 0, i32 33
  %11488 = getelementptr inbounds %struct.Reg, %struct.Reg* %11487, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %11488 to i64*
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11490 = getelementptr inbounds %struct.GPR, %struct.GPR* %11489, i32 0, i32 9
  %11491 = getelementptr inbounds %struct.Reg, %struct.Reg* %11490, i32 0, i32 0
  %RSI.i21 = bitcast %union.anon* %11491 to i64*
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11493 = getelementptr inbounds %struct.GPR, %struct.GPR* %11492, i32 0, i32 11
  %11494 = getelementptr inbounds %struct.Reg, %struct.Reg* %11493, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %11494 to i64*
  %11495 = load i64, i64* %RSI.i21
  %11496 = load i64, i64* %PC.i20
  %11497 = add i64 %11496, 3
  store i64 %11497, i64* %PC.i20
  store i64 %11495, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_46d5c0, %struct.Memory** %MEMORY
  %loadMem_46d5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11499 = getelementptr inbounds %struct.GPR, %struct.GPR* %11498, i32 0, i32 33
  %11500 = getelementptr inbounds %struct.Reg, %struct.Reg* %11499, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %11500 to i64*
  %11501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11502 = getelementptr inbounds %struct.GPR, %struct.GPR* %11501, i32 0, i32 5
  %11503 = getelementptr inbounds %struct.Reg, %struct.Reg* %11502, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11503 to i64*
  %11504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11505 = getelementptr inbounds %struct.GPR, %struct.GPR* %11504, i32 0, i32 9
  %11506 = getelementptr inbounds %struct.Reg, %struct.Reg* %11505, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11506 to i64*
  %11507 = load i64, i64* %RCX.i
  %11508 = load i64, i64* %PC.i19
  %11509 = add i64 %11508, 3
  store i64 %11509, i64* %PC.i19
  store i64 %11507, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_46d5c3, %struct.Memory** %MEMORY
  %loadMem1_46d5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 33
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %11512 to i64*
  %11513 = load i64, i64* %PC.i18
  %11514 = add i64 %11513, -443606
  %11515 = load i64, i64* %PC.i18
  %11516 = add i64 %11515, 5
  %11517 = load i64, i64* %PC.i18
  %11518 = add i64 %11517, 5
  store i64 %11518, i64* %PC.i18
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11520 = load i64, i64* %11519, align 8
  %11521 = add i64 %11520, -8
  %11522 = inttoptr i64 %11521 to i64*
  store i64 %11516, i64* %11522
  store i64 %11521, i64* %11519, align 8
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11514, i64* %11523, align 8
  store %struct.Memory* %loadMem1_46d5c6, %struct.Memory** %MEMORY
  %loadMem2_46d5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_46d5c6 = load i64, i64* %3
  %11524 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_46d5c6)
  store %struct.Memory* %11524, %struct.Memory** %MEMORY
  %loadMem_46d5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11526 = getelementptr inbounds %struct.GPR, %struct.GPR* %11525, i32 0, i32 33
  %11527 = getelementptr inbounds %struct.Reg, %struct.Reg* %11526, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %11527 to i64*
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 1
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %11530 to i64*
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 15
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %11533 to i64*
  %11534 = load i64, i64* %RBP.i14
  %11535 = sub i64 %11534, 1636
  %11536 = load i64, i64* %PC.i12
  %11537 = add i64 %11536, 6
  store i64 %11537, i64* %PC.i12
  %11538 = inttoptr i64 %11535 to i32*
  %11539 = load i32, i32* %11538
  %11540 = zext i32 %11539 to i64
  store i64 %11540, i64* %RAX.i13, align 8
  store %struct.Memory* %loadMem_46d5cb, %struct.Memory** %MEMORY
  %loadMem_46d5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11542 = getelementptr inbounds %struct.GPR, %struct.GPR* %11541, i32 0, i32 33
  %11543 = getelementptr inbounds %struct.Reg, %struct.Reg* %11542, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %11543 to i64*
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11545 = getelementptr inbounds %struct.GPR, %struct.GPR* %11544, i32 0, i32 1
  %11546 = getelementptr inbounds %struct.Reg, %struct.Reg* %11545, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %11546 to i64*
  %11547 = load i64, i64* %RAX.i11
  %11548 = load i64, i64* %PC.i10
  %11549 = add i64 %11548, 3
  store i64 %11549, i64* %PC.i10
  %11550 = trunc i64 %11547 to i32
  %11551 = add i32 1, %11550
  %11552 = zext i32 %11551 to i64
  store i64 %11552, i64* %RAX.i11, align 8
  %11553 = icmp ult i32 %11551, %11550
  %11554 = icmp ult i32 %11551, 1
  %11555 = or i1 %11553, %11554
  %11556 = zext i1 %11555 to i8
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11556, i8* %11557, align 1
  %11558 = and i32 %11551, 255
  %11559 = call i32 @llvm.ctpop.i32(i32 %11558)
  %11560 = trunc i32 %11559 to i8
  %11561 = and i8 %11560, 1
  %11562 = xor i8 %11561, 1
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11562, i8* %11563, align 1
  %11564 = xor i64 1, %11547
  %11565 = trunc i64 %11564 to i32
  %11566 = xor i32 %11565, %11551
  %11567 = lshr i32 %11566, 4
  %11568 = trunc i32 %11567 to i8
  %11569 = and i8 %11568, 1
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11569, i8* %11570, align 1
  %11571 = icmp eq i32 %11551, 0
  %11572 = zext i1 %11571 to i8
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11572, i8* %11573, align 1
  %11574 = lshr i32 %11551, 31
  %11575 = trunc i32 %11574 to i8
  %11576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11575, i8* %11576, align 1
  %11577 = lshr i32 %11550, 31
  %11578 = xor i32 %11574, %11577
  %11579 = add i32 %11578, %11574
  %11580 = icmp eq i32 %11579, 2
  %11581 = zext i1 %11580 to i8
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11581, i8* %11582, align 1
  store %struct.Memory* %loadMem_46d5d1, %struct.Memory** %MEMORY
  %loadMem_46d5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 33
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %11585 to i64*
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11587 = getelementptr inbounds %struct.GPR, %struct.GPR* %11586, i32 0, i32 1
  %11588 = getelementptr inbounds %struct.Reg, %struct.Reg* %11587, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11588 to i32*
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11590 = getelementptr inbounds %struct.GPR, %struct.GPR* %11589, i32 0, i32 15
  %11591 = getelementptr inbounds %struct.Reg, %struct.Reg* %11590, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %11591 to i64*
  %11592 = load i64, i64* %RBP.i9
  %11593 = sub i64 %11592, 1636
  %11594 = load i32, i32* %EAX.i
  %11595 = zext i32 %11594 to i64
  %11596 = load i64, i64* %PC.i8
  %11597 = add i64 %11596, 6
  store i64 %11597, i64* %PC.i8
  %11598 = inttoptr i64 %11593 to i32*
  store i32 %11594, i32* %11598
  store %struct.Memory* %loadMem_46d5d4, %struct.Memory** %MEMORY
  %loadMem_46d5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11600 = getelementptr inbounds %struct.GPR, %struct.GPR* %11599, i32 0, i32 33
  %11601 = getelementptr inbounds %struct.Reg, %struct.Reg* %11600, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %11601 to i64*
  %11602 = load i64, i64* %PC.i7
  %11603 = add i64 %11602, -838
  %11604 = load i64, i64* %PC.i7
  %11605 = add i64 %11604, 5
  store i64 %11605, i64* %PC.i7
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11603, i64* %11606, align 8
  store %struct.Memory* %loadMem_46d5da, %struct.Memory** %MEMORY
  br label %block_.L_46d294

block_.L_46d5df:                                  ; preds = %block_.L_46d294
  %loadMem_46d5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11608 = getelementptr inbounds %struct.GPR, %struct.GPR* %11607, i32 0, i32 33
  %11609 = getelementptr inbounds %struct.Reg, %struct.Reg* %11608, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11609 to i64*
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11611 = getelementptr inbounds %struct.GPR, %struct.GPR* %11610, i32 0, i32 1
  %11612 = getelementptr inbounds %struct.Reg, %struct.Reg* %11611, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11612 to i64*
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11614 = getelementptr inbounds %struct.GPR, %struct.GPR* %11613, i32 0, i32 15
  %11615 = getelementptr inbounds %struct.Reg, %struct.Reg* %11614, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %11615 to i64*
  %11616 = load i64, i64* %RBP.i6
  %11617 = sub i64 %11616, 1640
  %11618 = load i64, i64* %PC.i5
  %11619 = add i64 %11618, 6
  store i64 %11619, i64* %PC.i5
  %11620 = inttoptr i64 %11617 to i32*
  %11621 = load i32, i32* %11620
  %11622 = zext i32 %11621 to i64
  store i64 %11622, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_46d5df, %struct.Memory** %MEMORY
  %loadMem_46d5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11624 = getelementptr inbounds %struct.GPR, %struct.GPR* %11623, i32 0, i32 33
  %11625 = getelementptr inbounds %struct.Reg, %struct.Reg* %11624, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11625 to i64*
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11627 = getelementptr inbounds %struct.GPR, %struct.GPR* %11626, i32 0, i32 13
  %11628 = getelementptr inbounds %struct.Reg, %struct.Reg* %11627, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11628 to i64*
  %11629 = load i64, i64* %RSP.i
  %11630 = load i64, i64* %PC.i4
  %11631 = add i64 %11630, 7
  store i64 %11631, i64* %PC.i4
  %11632 = add i64 1648, %11629
  store i64 %11632, i64* %RSP.i, align 8
  %11633 = icmp ult i64 %11632, %11629
  %11634 = icmp ult i64 %11632, 1648
  %11635 = or i1 %11633, %11634
  %11636 = zext i1 %11635 to i8
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11636, i8* %11637, align 1
  %11638 = trunc i64 %11632 to i32
  %11639 = and i32 %11638, 255
  %11640 = call i32 @llvm.ctpop.i32(i32 %11639)
  %11641 = trunc i32 %11640 to i8
  %11642 = and i8 %11641, 1
  %11643 = xor i8 %11642, 1
  %11644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11643, i8* %11644, align 1
  %11645 = xor i64 1648, %11629
  %11646 = xor i64 %11645, %11632
  %11647 = lshr i64 %11646, 4
  %11648 = trunc i64 %11647 to i8
  %11649 = and i8 %11648, 1
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11649, i8* %11650, align 1
  %11651 = icmp eq i64 %11632, 0
  %11652 = zext i1 %11651 to i8
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11652, i8* %11653, align 1
  %11654 = lshr i64 %11632, 63
  %11655 = trunc i64 %11654 to i8
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11655, i8* %11656, align 1
  %11657 = lshr i64 %11629, 63
  %11658 = xor i64 %11654, %11657
  %11659 = add i64 %11658, %11654
  %11660 = icmp eq i64 %11659, 2
  %11661 = zext i1 %11660 to i8
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11661, i8* %11662, align 1
  store %struct.Memory* %loadMem_46d5e5, %struct.Memory** %MEMORY
  %loadMem_46d5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11664 = getelementptr inbounds %struct.GPR, %struct.GPR* %11663, i32 0, i32 33
  %11665 = getelementptr inbounds %struct.Reg, %struct.Reg* %11664, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11665 to i64*
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 15
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11668 to i64*
  %11669 = load i64, i64* %PC.i2
  %11670 = add i64 %11669, 1
  store i64 %11670, i64* %PC.i2
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11672 = load i64, i64* %11671, align 8
  %11673 = add i64 %11672, 8
  %11674 = inttoptr i64 %11672 to i64*
  %11675 = load i64, i64* %11674
  store i64 %11675, i64* %RBP.i3, align 8
  store i64 %11673, i64* %11671, align 8
  store %struct.Memory* %loadMem_46d5ec, %struct.Memory** %MEMORY
  %loadMem_46d5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %11676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11677 = getelementptr inbounds %struct.GPR, %struct.GPR* %11676, i32 0, i32 33
  %11678 = getelementptr inbounds %struct.Reg, %struct.Reg* %11677, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11678 to i64*
  %11679 = load i64, i64* %PC.i1
  %11680 = add i64 %11679, 1
  store i64 %11680, i64* %PC.i1
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11683 = load i64, i64* %11682, align 8
  %11684 = inttoptr i64 %11683 to i64*
  %11685 = load i64, i64* %11684
  store i64 %11685, i64* %11681, align 8
  %11686 = add i64 %11683, 8
  store i64 %11686, i64* %11682, align 8
  store %struct.Memory* %loadMem_46d5ed, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_46d5ed
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x670___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 1648
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 1648
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1648, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x668__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46cdff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46cd20(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46cdf1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cd5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46cd5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x668__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1640
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46cd9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.captured_territory(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x80____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 128, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46cdec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46cdd8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffff80____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 -128, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46cde7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46ccf9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x640___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1600, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x660__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x664__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1636
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x664__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1636
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d28a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d259(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46ce60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d24b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_46d053(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cea3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46ced4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cf05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cf36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cf7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46cf7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x660__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1632
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x660__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1632
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46cfc2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46cfc2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d04e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d04e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d053(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46d246(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d096(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d0c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d0f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d129(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d16f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d16f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d1b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d1b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d1fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d1fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d241(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d241(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d246(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46ce39(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x664__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1636
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46ce23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d5df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d5ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_46d2d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d5a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x660__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -1632
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %21, align 1
  %22 = and i32 %20, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = xor i32 %32, %35
  %37 = add i32 %36, %35
  %38 = icmp eq i32 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d436(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d329(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46d329(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d381(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46d381(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d381(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d3d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46d3d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d3d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d431(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_46d431(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_46d431(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d436(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d59b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d48e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_46d48e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d4e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_46d4e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d4e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d53e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_46d53e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d53e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_46d596(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_46d596(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_46d596(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d59b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d2aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_46d294(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x668__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x670___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1648, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1648
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1648, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
