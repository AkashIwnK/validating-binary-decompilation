; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0xab0f24_type = type <{ [4 x i8] }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
%G__0x581daa_type = type <{ [8 x i8] }>
%G__0x582c08_type = type <{ [8 x i8] }>
%G__0x582c49_type = type <{ [8 x i8] }>
%G__0x582c84_type = type <{ [8 x i8] }>
%G__0x582cc6_type = type <{ [8 x i8] }>
%G__0xafdfc0_type = type <{ [8 x i8] }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
%G__0xb9d8f0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0xab0f24 = global %G_0xab0f24_type zeroinitializer
@G_0xab0fe0 = global %G_0xab0fe0_type zeroinitializer
@G__0x581daa = global %G__0x581daa_type zeroinitializer
@G__0x582c08 = global %G__0x582c08_type zeroinitializer
@G__0x582c49 = global %G__0x582c49_type zeroinitializer
@G__0x582c84 = global %G__0x582c84_type zeroinitializer
@G__0x582cc6 = global %G__0x582cc6_type zeroinitializer
@G__0xafdfc0 = global %G__0xafdfc0_type zeroinitializer
@G__0xb0eff0 = global %G__0xb0eff0_type zeroinitializer
@G__0xb4bd20 = global %G__0xb4bd20_type zeroinitializer
@G__0xb9d8f0 = global %G__0xb9d8f0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_413ec0.extended_chainlinks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_45da70.disconnect(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_452950.string_connect(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_408e30.trymove(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_432d50.add_connection_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_433070.add_cut_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40dd60.popgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4345c0.add_strategical_defense_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4771f0.cut_possible(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4860c0.bdist(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_488610.is_same_worm(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @induce_secondary_move_reasons(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_47e400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_47e400, %struct.Memory** %MEMORY
  %loadMem_47e401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1083 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1083
  %27 = load i64, i64* %PC.i1082
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1082
  store i64 %26, i64* %RBP.i1084, align 8
  store %struct.Memory* %loadMem_47e401, %struct.Memory** %MEMORY
  %loadMem_47e404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1081 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1081
  %36 = load i64, i64* %PC.i1080
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1080
  %38 = sub i64 %35, 736
  store i64 %38, i64* %RSP.i1081, align 8
  %39 = icmp ult i64 %35, 736
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 736, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_47e404, %struct.Memory** %MEMORY
  %loadMem_47e40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1079
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i1078
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i1078
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_47e40b, %struct.Memory** %MEMORY
  %loadMem_47e40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 15
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %88 to i64*
  %89 = load i64, i64* %RBP.i1077
  %90 = sub i64 %89, 8
  %91 = load i64, i64* %PC.i1076
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC.i1076
  %93 = inttoptr i64 %90 to i32*
  store i32 21, i32* %93
  store %struct.Memory* %loadMem_47e40e, %struct.Memory** %MEMORY
  br label %block_.L_47e415

block_.L_47e415:                                  ; preds = %block_.L_47ed4c, %entry
  %loadMem_47e415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 15
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %99 to i64*
  %100 = load i64, i64* %RBP.i1075
  %101 = sub i64 %100, 8
  %102 = load i64, i64* %PC.i1074
  %103 = add i64 %102, 7
  store i64 %103, i64* %PC.i1074
  %104 = inttoptr i64 %101 to i32*
  %105 = load i32, i32* %104
  %106 = sub i32 %105, 400
  %107 = icmp ult i32 %105, 400
  %108 = zext i1 %107 to i8
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %108, i8* %109, align 1
  %110 = and i32 %106, 255
  %111 = call i32 @llvm.ctpop.i32(i32 %110)
  %112 = trunc i32 %111 to i8
  %113 = and i8 %112, 1
  %114 = xor i8 %113, 1
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %114, i8* %115, align 1
  %116 = xor i32 %105, 400
  %117 = xor i32 %116, %106
  %118 = lshr i32 %117, 4
  %119 = trunc i32 %118 to i8
  %120 = and i8 %119, 1
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %120, i8* %121, align 1
  %122 = icmp eq i32 %106, 0
  %123 = zext i1 %122 to i8
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %123, i8* %124, align 1
  %125 = lshr i32 %106, 31
  %126 = trunc i32 %125 to i8
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %126, i8* %127, align 1
  %128 = lshr i32 %105, 31
  %129 = xor i32 %125, %128
  %130 = add i32 %129, %128
  %131 = icmp eq i32 %130, 2
  %132 = zext i1 %131 to i8
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %132, i8* %133, align 1
  store %struct.Memory* %loadMem_47e415, %struct.Memory** %MEMORY
  %loadMem_47e41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 33
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %PC.i1073
  %138 = add i64 %137, 2366
  %139 = load i64, i64* %PC.i1073
  %140 = add i64 %139, 6
  %141 = load i64, i64* %PC.i1073
  %142 = add i64 %141, 6
  store i64 %142, i64* %PC.i1073
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %144 = load i8, i8* %143, align 1
  %145 = icmp ne i8 %144, 0
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %147 = load i8, i8* %146, align 1
  %148 = icmp ne i8 %147, 0
  %149 = xor i1 %145, %148
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i8
  store i8 %151, i8* %BRANCH_TAKEN, align 1
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %153 = select i1 %149, i64 %140, i64 %138
  store i64 %153, i64* %152, align 8
  store %struct.Memory* %loadMem_47e41c, %struct.Memory** %MEMORY
  %loadBr_47e41c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e41c = icmp eq i8 %loadBr_47e41c, 1
  br i1 %cmpBr_47e41c, label %block_.L_47ed5a, label %block_47e422

block_47e422:                                     ; preds = %block_.L_47e415
  %loadMem_47e422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %155 = getelementptr inbounds %struct.GPR, %struct.GPR* %154, i32 0, i32 33
  %156 = getelementptr inbounds %struct.Reg, %struct.Reg* %155, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %156 to i64*
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %158 = getelementptr inbounds %struct.GPR, %struct.GPR* %157, i32 0, i32 1
  %159 = getelementptr inbounds %struct.Reg, %struct.Reg* %158, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %159 to i64*
  %160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %161 = getelementptr inbounds %struct.GPR, %struct.GPR* %160, i32 0, i32 15
  %162 = getelementptr inbounds %struct.Reg, %struct.Reg* %161, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %162 to i64*
  %163 = load i64, i64* %RBP.i1072
  %164 = sub i64 %163, 8
  %165 = load i64, i64* %PC.i1070
  %166 = add i64 %165, 4
  store i64 %166, i64* %PC.i1070
  %167 = inttoptr i64 %164 to i32*
  %168 = load i32, i32* %167
  %169 = sext i32 %168 to i64
  store i64 %169, i64* %RAX.i1071, align 8
  store %struct.Memory* %loadMem_47e422, %struct.Memory** %MEMORY
  %loadMem_47e426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 33
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %172 to i64*
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 1
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %175 to i64*
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 5
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %RCX.i1069 = bitcast %union.anon* %178 to i64*
  %179 = load i64, i64* %RAX.i1068
  %180 = add i64 %179, 12099168
  %181 = load i64, i64* %PC.i1067
  %182 = add i64 %181, 8
  store i64 %182, i64* %PC.i1067
  %183 = inttoptr i64 %180 to i8*
  %184 = load i8, i8* %183
  %185 = zext i8 %184 to i64
  store i64 %185, i64* %RCX.i1069, align 8
  store %struct.Memory* %loadMem_47e426, %struct.Memory** %MEMORY
  %loadMem_47e42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 33
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %188 to i64*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 5
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %ECX.i1066 = bitcast %union.anon* %191 to i32*
  %192 = load i32, i32* %ECX.i1066
  %193 = zext i32 %192 to i64
  %194 = load i64, i64* %PC.i1065
  %195 = add i64 %194, 3
  store i64 %195, i64* %PC.i1065
  %196 = sub i32 %192, 3
  %197 = icmp ult i32 %192, 3
  %198 = zext i1 %197 to i8
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %198, i8* %199, align 1
  %200 = and i32 %196, 255
  %201 = call i32 @llvm.ctpop.i32(i32 %200)
  %202 = trunc i32 %201 to i8
  %203 = and i8 %202, 1
  %204 = xor i8 %203, 1
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %204, i8* %205, align 1
  %206 = xor i64 3, %193
  %207 = trunc i64 %206 to i32
  %208 = xor i32 %207, %196
  %209 = lshr i32 %208, 4
  %210 = trunc i32 %209 to i8
  %211 = and i8 %210, 1
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %211, i8* %212, align 1
  %213 = icmp eq i32 %196, 0
  %214 = zext i1 %213 to i8
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %214, i8* %215, align 1
  %216 = lshr i32 %196, 31
  %217 = trunc i32 %216 to i8
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %217, i8* %218, align 1
  %219 = lshr i32 %192, 31
  %220 = xor i32 %216, %219
  %221 = add i32 %220, %219
  %222 = icmp eq i32 %221, 2
  %223 = zext i1 %222 to i8
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %223, i8* %224, align 1
  store %struct.Memory* %loadMem_47e42e, %struct.Memory** %MEMORY
  %loadMem_47e431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 33
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %227 to i64*
  %228 = load i64, i64* %PC.i1064
  %229 = add i64 %228, 11
  %230 = load i64, i64* %PC.i1064
  %231 = add i64 %230, 6
  %232 = load i64, i64* %PC.i1064
  %233 = add i64 %232, 6
  store i64 %233, i64* %PC.i1064
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 0
  %237 = zext i1 %236 to i8
  store i8 %237, i8* %BRANCH_TAKEN, align 1
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %239 = select i1 %236, i64 %229, i64 %231
  store i64 %239, i64* %238, align 8
  store %struct.Memory* %loadMem_47e431, %struct.Memory** %MEMORY
  %loadBr_47e431 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e431 = icmp eq i8 %loadBr_47e431, 1
  br i1 %cmpBr_47e431, label %block_.L_47e43c, label %block_47e437

block_47e437:                                     ; preds = %block_47e422
  %loadMem_47e437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 33
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %242 to i64*
  %243 = load i64, i64* %PC.i1063
  %244 = add i64 %243, 2325
  %245 = load i64, i64* %PC.i1063
  %246 = add i64 %245, 5
  store i64 %246, i64* %PC.i1063
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %244, i64* %247, align 8
  store %struct.Memory* %loadMem_47e437, %struct.Memory** %MEMORY
  br label %block_.L_47ed4c

block_.L_47e43c:                                  ; preds = %block_47e422
  %loadMem_47e43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 33
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %250 to i64*
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 15
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %253 to i64*
  %254 = load i64, i64* %RBP.i1062
  %255 = sub i64 %254, 12
  %256 = load i64, i64* %PC.i1061
  %257 = add i64 %256, 7
  store i64 %257, i64* %PC.i1061
  %258 = inttoptr i64 %255 to i32*
  store i32 0, i32* %258
  store %struct.Memory* %loadMem_47e43c, %struct.Memory** %MEMORY
  br label %block_.L_47e443

block_.L_47e443:                                  ; preds = %block_.L_47ed39, %block_.L_47e43c
  %loadMem_47e443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 15
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %264 to i64*
  %265 = load i64, i64* %RBP.i1060
  %266 = sub i64 %265, 12
  %267 = load i64, i64* %PC.i1059
  %268 = add i64 %267, 4
  store i64 %268, i64* %PC.i1059
  %269 = inttoptr i64 %266 to i32*
  %270 = load i32, i32* %269
  %271 = sub i32 %270, 120
  %272 = icmp ult i32 %270, 120
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %273, i8* %274, align 1
  %275 = and i32 %271, 255
  %276 = call i32 @llvm.ctpop.i32(i32 %275)
  %277 = trunc i32 %276 to i8
  %278 = and i8 %277, 1
  %279 = xor i8 %278, 1
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %279, i8* %280, align 1
  %281 = xor i32 %270, 120
  %282 = xor i32 %281, %271
  %283 = lshr i32 %282, 4
  %284 = trunc i32 %283 to i8
  %285 = and i8 %284, 1
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %285, i8* %286, align 1
  %287 = icmp eq i32 %271, 0
  %288 = zext i1 %287 to i8
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %288, i8* %289, align 1
  %290 = lshr i32 %271, 31
  %291 = trunc i32 %290 to i8
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %291, i8* %292, align 1
  %293 = lshr i32 %270, 31
  %294 = xor i32 %290, %293
  %295 = add i32 %294, %293
  %296 = icmp eq i32 %295, 2
  %297 = zext i1 %296 to i8
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %297, i8* %298, align 1
  store %struct.Memory* %loadMem_47e443, %struct.Memory** %MEMORY
  %loadMem_47e447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 33
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %301 to i64*
  %302 = load i64, i64* %PC.i1058
  %303 = add i64 %302, 2304
  %304 = load i64, i64* %PC.i1058
  %305 = add i64 %304, 6
  %306 = load i64, i64* %PC.i1058
  %307 = add i64 %306, 6
  store i64 %307, i64* %PC.i1058
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %309 = load i8, i8* %308, align 1
  %310 = icmp ne i8 %309, 0
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %312 = load i8, i8* %311, align 1
  %313 = icmp ne i8 %312, 0
  %314 = xor i1 %310, %313
  %315 = xor i1 %314, true
  %316 = zext i1 %315 to i8
  store i8 %316, i8* %BRANCH_TAKEN, align 1
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %318 = select i1 %314, i64 %305, i64 %303
  store i64 %318, i64* %317, align 8
  store %struct.Memory* %loadMem_47e447, %struct.Memory** %MEMORY
  %loadBr_47e447 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e447 = icmp eq i8 %loadBr_47e447, 1
  br i1 %cmpBr_47e447, label %block_.L_47ed47, label %block_47e44d

block_47e44d:                                     ; preds = %block_.L_47e443
  %loadMem_47e44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %320 = getelementptr inbounds %struct.GPR, %struct.GPR* %319, i32 0, i32 33
  %321 = getelementptr inbounds %struct.Reg, %struct.Reg* %320, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %321 to i64*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 1
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %RAX.i1057 = bitcast %union.anon* %324 to i64*
  %325 = load i64, i64* %PC.i1056
  %326 = add i64 %325, 10
  store i64 %326, i64* %PC.i1056
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i1057, align 8
  store %struct.Memory* %loadMem_47e44d, %struct.Memory** %MEMORY
  %loadMem_47e457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 33
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %329 to i64*
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 5
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %RCX.i1054 = bitcast %union.anon* %332 to i64*
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 15
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %335 to i64*
  %336 = load i64, i64* %RBP.i1055
  %337 = sub i64 %336, 8
  %338 = load i64, i64* %PC.i1053
  %339 = add i64 %338, 4
  store i64 %339, i64* %PC.i1053
  %340 = inttoptr i64 %337 to i32*
  %341 = load i32, i32* %340
  %342 = sext i32 %341 to i64
  store i64 %342, i64* %RCX.i1054, align 8
  store %struct.Memory* %loadMem_47e457, %struct.Memory** %MEMORY
  %loadMem_47e45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 33
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %345 to i64*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 5
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %RCX.i1052 = bitcast %union.anon* %348 to i64*
  %349 = load i64, i64* %RCX.i1052
  %350 = load i64, i64* %PC.i1051
  %351 = add i64 %350, 7
  store i64 %351, i64* %PC.i1051
  %352 = sext i64 %349 to i128
  %353 = and i128 %352, -18446744073709551616
  %354 = zext i64 %349 to i128
  %355 = or i128 %353, %354
  %356 = mul i128 564, %355
  %357 = trunc i128 %356 to i64
  store i64 %357, i64* %RCX.i1052, align 8
  %358 = sext i64 %357 to i128
  %359 = icmp ne i128 %358, %356
  %360 = zext i1 %359 to i8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %360, i8* %361, align 1
  %362 = trunc i128 %356 to i32
  %363 = and i32 %362, 255
  %364 = call i32 @llvm.ctpop.i32(i32 %363)
  %365 = trunc i32 %364 to i8
  %366 = and i8 %365, 1
  %367 = xor i8 %366, 1
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %367, i8* %368, align 1
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %369, align 1
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %370, align 1
  %371 = lshr i64 %357, 63
  %372 = trunc i64 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %372, i8* %373, align 1
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %360, i8* %374, align 1
  store %struct.Memory* %loadMem_47e45b, %struct.Memory** %MEMORY
  %loadMem_47e462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 33
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %377 to i64*
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 1
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %380 to i64*
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 5
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %383 to i64*
  %384 = load i64, i64* %RAX.i1049
  %385 = load i64, i64* %RCX.i1050
  %386 = load i64, i64* %PC.i1048
  %387 = add i64 %386, 3
  store i64 %387, i64* %PC.i1048
  %388 = add i64 %385, %384
  store i64 %388, i64* %RAX.i1049, align 8
  %389 = icmp ult i64 %388, %384
  %390 = icmp ult i64 %388, %385
  %391 = or i1 %389, %390
  %392 = zext i1 %391 to i8
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %392, i8* %393, align 1
  %394 = trunc i64 %388 to i32
  %395 = and i32 %394, 255
  %396 = call i32 @llvm.ctpop.i32(i32 %395)
  %397 = trunc i32 %396 to i8
  %398 = and i8 %397, 1
  %399 = xor i8 %398, 1
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %399, i8* %400, align 1
  %401 = xor i64 %385, %384
  %402 = xor i64 %401, %388
  %403 = lshr i64 %402, 4
  %404 = trunc i64 %403 to i8
  %405 = and i8 %404, 1
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %405, i8* %406, align 1
  %407 = icmp eq i64 %388, 0
  %408 = zext i1 %407 to i8
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %408, i8* %409, align 1
  %410 = lshr i64 %388, 63
  %411 = trunc i64 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %411, i8* %412, align 1
  %413 = lshr i64 %384, 63
  %414 = lshr i64 %385, 63
  %415 = xor i64 %410, %413
  %416 = xor i64 %410, %414
  %417 = add i64 %415, %416
  %418 = icmp eq i64 %417, 2
  %419 = zext i1 %418 to i8
  %420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %419, i8* %420, align 1
  store %struct.Memory* %loadMem_47e462, %struct.Memory** %MEMORY
  %loadMem_47e465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 33
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %423 to i64*
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 5
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %RCX.i1046 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 15
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %429 to i64*
  %430 = load i64, i64* %RBP.i1047
  %431 = sub i64 %430, 12
  %432 = load i64, i64* %PC.i1045
  %433 = add i64 %432, 4
  store i64 %433, i64* %PC.i1045
  %434 = inttoptr i64 %431 to i32*
  %435 = load i32, i32* %434
  %436 = sext i32 %435 to i64
  store i64 %436, i64* %RCX.i1046, align 8
  store %struct.Memory* %loadMem_47e465, %struct.Memory** %MEMORY
  %loadMem_47e469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %438 = getelementptr inbounds %struct.GPR, %struct.GPR* %437, i32 0, i32 33
  %439 = getelementptr inbounds %struct.Reg, %struct.Reg* %438, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %439 to i64*
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 1
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 5
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %445 to i64*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 7
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %RDX.i1044 = bitcast %union.anon* %448 to i64*
  %449 = load i64, i64* %RAX.i1042
  %450 = load i64, i64* %RCX.i1043
  %451 = mul i64 %450, 4
  %452 = add i64 %449, 72
  %453 = add i64 %452, %451
  %454 = load i64, i64* %PC.i1041
  %455 = add i64 %454, 4
  store i64 %455, i64* %PC.i1041
  %456 = inttoptr i64 %453 to i32*
  %457 = load i32, i32* %456
  %458 = zext i32 %457 to i64
  store i64 %458, i64* %RDX.i1044, align 8
  store %struct.Memory* %loadMem_47e469, %struct.Memory** %MEMORY
  %loadMem_47e46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 33
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %461 to i64*
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 7
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %EDX.i1039 = bitcast %union.anon* %464 to i32*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 15
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %RBP.i1040
  %469 = sub i64 %468, 28
  %470 = load i32, i32* %EDX.i1039
  %471 = zext i32 %470 to i64
  %472 = load i64, i64* %PC.i1038
  %473 = add i64 %472, 3
  store i64 %473, i64* %PC.i1038
  %474 = inttoptr i64 %469 to i32*
  store i32 %470, i32* %474
  store %struct.Memory* %loadMem_47e46d, %struct.Memory** %MEMORY
  %loadMem_47e470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 33
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %477 to i64*
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %479 = getelementptr inbounds %struct.GPR, %struct.GPR* %478, i32 0, i32 15
  %480 = getelementptr inbounds %struct.Reg, %struct.Reg* %479, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %480 to i64*
  %481 = load i64, i64* %RBP.i1037
  %482 = sub i64 %481, 28
  %483 = load i64, i64* %PC.i1036
  %484 = add i64 %483, 4
  store i64 %484, i64* %PC.i1036
  %485 = inttoptr i64 %482 to i32*
  %486 = load i32, i32* %485
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %487, align 1
  %488 = and i32 %486, 255
  %489 = call i32 @llvm.ctpop.i32(i32 %488)
  %490 = trunc i32 %489 to i8
  %491 = and i8 %490, 1
  %492 = xor i8 %491, 1
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %492, i8* %493, align 1
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %494, align 1
  %495 = icmp eq i32 %486, 0
  %496 = zext i1 %495 to i8
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %496, i8* %497, align 1
  %498 = lshr i32 %486, 31
  %499 = trunc i32 %498 to i8
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %499, i8* %500, align 1
  %501 = lshr i32 %486, 31
  %502 = xor i32 %498, %501
  %503 = add i32 %502, %501
  %504 = icmp eq i32 %503, 2
  %505 = zext i1 %504 to i8
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %505, i8* %506, align 1
  store %struct.Memory* %loadMem_47e470, %struct.Memory** %MEMORY
  %loadMem_47e474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 33
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %509 to i64*
  %510 = load i64, i64* %PC.i1035
  %511 = add i64 %510, 11
  %512 = load i64, i64* %PC.i1035
  %513 = add i64 %512, 6
  %514 = load i64, i64* %PC.i1035
  %515 = add i64 %514, 6
  store i64 %515, i64* %PC.i1035
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %517 = load i8, i8* %516, align 1
  %518 = icmp ne i8 %517, 0
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %520 = load i8, i8* %519, align 1
  %521 = icmp ne i8 %520, 0
  %522 = xor i1 %518, %521
  %523 = xor i1 %522, true
  %524 = zext i1 %523 to i8
  store i8 %524, i8* %BRANCH_TAKEN, align 1
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %526 = select i1 %522, i64 %513, i64 %511
  store i64 %526, i64* %525, align 8
  store %struct.Memory* %loadMem_47e474, %struct.Memory** %MEMORY
  %loadBr_47e474 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e474 = icmp eq i8 %loadBr_47e474, 1
  br i1 %cmpBr_47e474, label %block_.L_47e47f, label %block_47e47a

block_47e47a:                                     ; preds = %block_47e44d
  %loadMem_47e47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %528 = getelementptr inbounds %struct.GPR, %struct.GPR* %527, i32 0, i32 33
  %529 = getelementptr inbounds %struct.Reg, %struct.Reg* %528, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %529 to i64*
  %530 = load i64, i64* %PC.i1034
  %531 = add i64 %530, 2253
  %532 = load i64, i64* %PC.i1034
  %533 = add i64 %532, 5
  store i64 %533, i64* %PC.i1034
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %531, i64* %534, align 8
  store %struct.Memory* %loadMem_47e47a, %struct.Memory** %MEMORY
  br label %block_.L_47ed47

block_.L_47e47f:                                  ; preds = %block_47e44d
  %loadMem_47e47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 33
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %537 to i64*
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 1
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %540 to i64*
  %541 = load i64, i64* %PC.i1032
  %542 = add i64 %541, 10
  store i64 %542, i64* %PC.i1032
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1033, align 8
  store %struct.Memory* %loadMem_47e47f, %struct.Memory** %MEMORY
  %loadMem_47e489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 33
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %545 to i64*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 5
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 15
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %RBP.i1031
  %553 = sub i64 %552, 28
  %554 = load i64, i64* %PC.i1029
  %555 = add i64 %554, 4
  store i64 %555, i64* %PC.i1029
  %556 = inttoptr i64 %553 to i32*
  %557 = load i32, i32* %556
  %558 = sext i32 %557 to i64
  store i64 %558, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_47e489, %struct.Memory** %MEMORY
  %loadMem_47e48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 33
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %561 to i64*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 5
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RCX.i1028
  %566 = load i64, i64* %PC.i1027
  %567 = add i64 %566, 4
  store i64 %567, i64* %PC.i1027
  %568 = sext i64 %565 to i128
  %569 = and i128 %568, -18446744073709551616
  %570 = zext i64 %565 to i128
  %571 = or i128 %569, %570
  %572 = mul i128 12, %571
  %573 = trunc i128 %572 to i64
  store i64 %573, i64* %RCX.i1028, align 8
  %574 = sext i64 %573 to i128
  %575 = icmp ne i128 %574, %572
  %576 = zext i1 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %576, i8* %577, align 1
  %578 = trunc i128 %572 to i32
  %579 = and i32 %578, 255
  %580 = call i32 @llvm.ctpop.i32(i32 %579)
  %581 = trunc i32 %580 to i8
  %582 = and i8 %581, 1
  %583 = xor i8 %582, 1
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %583, i8* %584, align 1
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %585, align 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %586, align 1
  %587 = lshr i64 %573, 63
  %588 = trunc i64 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %588, i8* %589, align 1
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %576, i8* %590, align 1
  store %struct.Memory* %loadMem_47e48d, %struct.Memory** %MEMORY
  %loadMem_47e491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 33
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %593 to i64*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 1
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 5
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %599 to i64*
  %600 = load i64, i64* %RAX.i1025
  %601 = load i64, i64* %RCX.i1026
  %602 = load i64, i64* %PC.i1024
  %603 = add i64 %602, 3
  store i64 %603, i64* %PC.i1024
  %604 = add i64 %601, %600
  store i64 %604, i64* %RAX.i1025, align 8
  %605 = icmp ult i64 %604, %600
  %606 = icmp ult i64 %604, %601
  %607 = or i1 %605, %606
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %608, i8* %609, align 1
  %610 = trunc i64 %604 to i32
  %611 = and i32 %610, 255
  %612 = call i32 @llvm.ctpop.i32(i32 %611)
  %613 = trunc i32 %612 to i8
  %614 = and i8 %613, 1
  %615 = xor i8 %614, 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %615, i8* %616, align 1
  %617 = xor i64 %601, %600
  %618 = xor i64 %617, %604
  %619 = lshr i64 %618, 4
  %620 = trunc i64 %619 to i8
  %621 = and i8 %620, 1
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %621, i8* %622, align 1
  %623 = icmp eq i64 %604, 0
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %624, i8* %625, align 1
  %626 = lshr i64 %604, 63
  %627 = trunc i64 %626 to i8
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %627, i8* %628, align 1
  %629 = lshr i64 %600, 63
  %630 = lshr i64 %601, 63
  %631 = xor i64 %626, %629
  %632 = xor i64 %626, %630
  %633 = add i64 %631, %632
  %634 = icmp eq i64 %633, 2
  %635 = zext i1 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %635, i8* %636, align 1
  store %struct.Memory* %loadMem_47e491, %struct.Memory** %MEMORY
  %loadMem_47e494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 33
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %639 to i64*
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 1
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %RAX.i1023 = bitcast %union.anon* %642 to i64*
  %643 = load i64, i64* %RAX.i1023
  %644 = load i64, i64* %PC.i1022
  %645 = add i64 %644, 3
  store i64 %645, i64* %PC.i1022
  %646 = inttoptr i64 %643 to i32*
  %647 = load i32, i32* %646
  %648 = sub i32 %647, 2
  %649 = icmp ult i32 %647, 2
  %650 = zext i1 %649 to i8
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %650, i8* %651, align 1
  %652 = and i32 %648, 255
  %653 = call i32 @llvm.ctpop.i32(i32 %652)
  %654 = trunc i32 %653 to i8
  %655 = and i8 %654, 1
  %656 = xor i8 %655, 1
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %656, i8* %657, align 1
  %658 = xor i32 %647, 2
  %659 = xor i32 %658, %648
  %660 = lshr i32 %659, 4
  %661 = trunc i32 %660 to i8
  %662 = and i8 %661, 1
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %662, i8* %663, align 1
  %664 = icmp eq i32 %648, 0
  %665 = zext i1 %664 to i8
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %665, i8* %666, align 1
  %667 = lshr i32 %648, 31
  %668 = trunc i32 %667 to i8
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %668, i8* %669, align 1
  %670 = lshr i32 %647, 31
  %671 = xor i32 %667, %670
  %672 = add i32 %671, %670
  %673 = icmp eq i32 %672, 2
  %674 = zext i1 %673 to i8
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %674, i8* %675, align 1
  store %struct.Memory* %loadMem_47e494, %struct.Memory** %MEMORY
  %loadMem_47e497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 33
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %678 to i64*
  %679 = load i64, i64* %PC.i1021
  %680 = add i64 %679, 36
  %681 = load i64, i64* %PC.i1021
  %682 = add i64 %681, 6
  %683 = load i64, i64* %PC.i1021
  %684 = add i64 %683, 6
  store i64 %684, i64* %PC.i1021
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %686 = load i8, i8* %685, align 1
  store i8 %686, i8* %BRANCH_TAKEN, align 1
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %688 = icmp ne i8 %686, 0
  %689 = select i1 %688, i64 %680, i64 %682
  store i64 %689, i64* %687, align 8
  store %struct.Memory* %loadMem_47e497, %struct.Memory** %MEMORY
  %loadBr_47e497 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e497 = icmp eq i8 %loadBr_47e497, 1
  br i1 %cmpBr_47e497, label %block_.L_47e4bb, label %block_47e49d

block_47e49d:                                     ; preds = %block_.L_47e47f
  %loadMem_47e49d = load %struct.Memory*, %struct.Memory** %MEMORY
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 33
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %692 to i64*
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 1
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %695 to i64*
  %696 = load i64, i64* %PC.i1019
  %697 = add i64 %696, 10
  store i64 %697, i64* %PC.i1019
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1020, align 8
  store %struct.Memory* %loadMem_47e49d, %struct.Memory** %MEMORY
  %loadMem_47e4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %699 = getelementptr inbounds %struct.GPR, %struct.GPR* %698, i32 0, i32 33
  %700 = getelementptr inbounds %struct.Reg, %struct.Reg* %699, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %700 to i64*
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 5
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %703 to i64*
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 15
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %706 to i64*
  %707 = load i64, i64* %RBP.i1018
  %708 = sub i64 %707, 28
  %709 = load i64, i64* %PC.i1016
  %710 = add i64 %709, 4
  store i64 %710, i64* %PC.i1016
  %711 = inttoptr i64 %708 to i32*
  %712 = load i32, i32* %711
  %713 = sext i32 %712 to i64
  store i64 %713, i64* %RCX.i1017, align 8
  store %struct.Memory* %loadMem_47e4a7, %struct.Memory** %MEMORY
  %loadMem_47e4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %715 = getelementptr inbounds %struct.GPR, %struct.GPR* %714, i32 0, i32 33
  %716 = getelementptr inbounds %struct.Reg, %struct.Reg* %715, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %716 to i64*
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %718 = getelementptr inbounds %struct.GPR, %struct.GPR* %717, i32 0, i32 5
  %719 = getelementptr inbounds %struct.Reg, %struct.Reg* %718, i32 0, i32 0
  %RCX.i1015 = bitcast %union.anon* %719 to i64*
  %720 = load i64, i64* %RCX.i1015
  %721 = load i64, i64* %PC.i1014
  %722 = add i64 %721, 4
  store i64 %722, i64* %PC.i1014
  %723 = sext i64 %720 to i128
  %724 = and i128 %723, -18446744073709551616
  %725 = zext i64 %720 to i128
  %726 = or i128 %724, %725
  %727 = mul i128 12, %726
  %728 = trunc i128 %727 to i64
  store i64 %728, i64* %RCX.i1015, align 8
  %729 = sext i64 %728 to i128
  %730 = icmp ne i128 %729, %727
  %731 = zext i1 %730 to i8
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %731, i8* %732, align 1
  %733 = trunc i128 %727 to i32
  %734 = and i32 %733, 255
  %735 = call i32 @llvm.ctpop.i32(i32 %734)
  %736 = trunc i32 %735 to i8
  %737 = and i8 %736, 1
  %738 = xor i8 %737, 1
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %738, i8* %739, align 1
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %740, align 1
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %741, align 1
  %742 = lshr i64 %728, 63
  %743 = trunc i64 %742 to i8
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %743, i8* %744, align 1
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %731, i8* %745, align 1
  store %struct.Memory* %loadMem_47e4ab, %struct.Memory** %MEMORY
  %loadMem_47e4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 33
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 1
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %751 to i64*
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %753 = getelementptr inbounds %struct.GPR, %struct.GPR* %752, i32 0, i32 5
  %754 = getelementptr inbounds %struct.Reg, %struct.Reg* %753, i32 0, i32 0
  %RCX.i1013 = bitcast %union.anon* %754 to i64*
  %755 = load i64, i64* %RAX.i1012
  %756 = load i64, i64* %RCX.i1013
  %757 = load i64, i64* %PC.i1011
  %758 = add i64 %757, 3
  store i64 %758, i64* %PC.i1011
  %759 = add i64 %756, %755
  store i64 %759, i64* %RAX.i1012, align 8
  %760 = icmp ult i64 %759, %755
  %761 = icmp ult i64 %759, %756
  %762 = or i1 %760, %761
  %763 = zext i1 %762 to i8
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %763, i8* %764, align 1
  %765 = trunc i64 %759 to i32
  %766 = and i32 %765, 255
  %767 = call i32 @llvm.ctpop.i32(i32 %766)
  %768 = trunc i32 %767 to i8
  %769 = and i8 %768, 1
  %770 = xor i8 %769, 1
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %770, i8* %771, align 1
  %772 = xor i64 %756, %755
  %773 = xor i64 %772, %759
  %774 = lshr i64 %773, 4
  %775 = trunc i64 %774 to i8
  %776 = and i8 %775, 1
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %776, i8* %777, align 1
  %778 = icmp eq i64 %759, 0
  %779 = zext i1 %778 to i8
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %779, i8* %780, align 1
  %781 = lshr i64 %759, 63
  %782 = trunc i64 %781 to i8
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %782, i8* %783, align 1
  %784 = lshr i64 %755, 63
  %785 = lshr i64 %756, 63
  %786 = xor i64 %781, %784
  %787 = xor i64 %781, %785
  %788 = add i64 %786, %787
  %789 = icmp eq i64 %788, 2
  %790 = zext i1 %789 to i8
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %790, i8* %791, align 1
  store %struct.Memory* %loadMem_47e4af, %struct.Memory** %MEMORY
  %loadMem_47e4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %793 = getelementptr inbounds %struct.GPR, %struct.GPR* %792, i32 0, i32 33
  %794 = getelementptr inbounds %struct.Reg, %struct.Reg* %793, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %794 to i64*
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %796 = getelementptr inbounds %struct.GPR, %struct.GPR* %795, i32 0, i32 1
  %797 = getelementptr inbounds %struct.Reg, %struct.Reg* %796, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %797 to i64*
  %798 = load i64, i64* %RAX.i1010
  %799 = load i64, i64* %PC.i1009
  %800 = add i64 %799, 3
  store i64 %800, i64* %PC.i1009
  %801 = inttoptr i64 %798 to i32*
  %802 = load i32, i32* %801
  %803 = sub i32 %802, 8
  %804 = icmp ult i32 %802, 8
  %805 = zext i1 %804 to i8
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %805, i8* %806, align 1
  %807 = and i32 %803, 255
  %808 = call i32 @llvm.ctpop.i32(i32 %807)
  %809 = trunc i32 %808 to i8
  %810 = and i8 %809, 1
  %811 = xor i8 %810, 1
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %811, i8* %812, align 1
  %813 = xor i32 %802, 8
  %814 = xor i32 %813, %803
  %815 = lshr i32 %814, 4
  %816 = trunc i32 %815 to i8
  %817 = and i8 %816, 1
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %817, i8* %818, align 1
  %819 = icmp eq i32 %803, 0
  %820 = zext i1 %819 to i8
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %820, i8* %821, align 1
  %822 = lshr i32 %803, 31
  %823 = trunc i32 %822 to i8
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %823, i8* %824, align 1
  %825 = lshr i32 %802, 31
  %826 = xor i32 %822, %825
  %827 = add i32 %826, %825
  %828 = icmp eq i32 %827, 2
  %829 = zext i1 %828 to i8
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %829, i8* %830, align 1
  store %struct.Memory* %loadMem_47e4b2, %struct.Memory** %MEMORY
  %loadMem_47e4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 33
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %833 to i64*
  %834 = load i64, i64* %PC.i1008
  %835 = add i64 %834, 1269
  %836 = load i64, i64* %PC.i1008
  %837 = add i64 %836, 6
  %838 = load i64, i64* %PC.i1008
  %839 = add i64 %838, 6
  store i64 %839, i64* %PC.i1008
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %841 = load i8, i8* %840, align 1
  %842 = icmp eq i8 %841, 0
  %843 = zext i1 %842 to i8
  store i8 %843, i8* %BRANCH_TAKEN, align 1
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %845 = select i1 %842, i64 %835, i64 %837
  store i64 %845, i64* %844, align 8
  store %struct.Memory* %loadMem_47e4b5, %struct.Memory** %MEMORY
  %loadBr_47e4b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e4b5 = icmp eq i8 %loadBr_47e4b5, 1
  br i1 %cmpBr_47e4b5, label %block_.L_47e9aa, label %block_.L_47e4bb

block_.L_47e4bb:                                  ; preds = %block_47e49d, %block_.L_47e47f
  %loadMem_47e4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %847 = getelementptr inbounds %struct.GPR, %struct.GPR* %846, i32 0, i32 33
  %848 = getelementptr inbounds %struct.Reg, %struct.Reg* %847, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %848 to i64*
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 1
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %851 to i64*
  %852 = load i64, i64* %PC.i1006
  %853 = add i64 %852, 10
  store i64 %853, i64* %PC.i1006
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i1007, align 8
  store %struct.Memory* %loadMem_47e4bb, %struct.Memory** %MEMORY
  %loadMem_47e4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 33
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %856 to i64*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 5
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %RCX.i1004 = bitcast %union.anon* %859 to i64*
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %861 = getelementptr inbounds %struct.GPR, %struct.GPR* %860, i32 0, i32 15
  %862 = getelementptr inbounds %struct.Reg, %struct.Reg* %861, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %862 to i64*
  %863 = load i64, i64* %RBP.i1005
  %864 = sub i64 %863, 28
  %865 = load i64, i64* %PC.i1003
  %866 = add i64 %865, 4
  store i64 %866, i64* %PC.i1003
  %867 = inttoptr i64 %864 to i32*
  %868 = load i32, i32* %867
  %869 = sext i32 %868 to i64
  store i64 %869, i64* %RCX.i1004, align 8
  store %struct.Memory* %loadMem_47e4c5, %struct.Memory** %MEMORY
  %loadMem_47e4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 33
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %872 to i64*
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 5
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %875 to i64*
  %876 = load i64, i64* %RCX.i1002
  %877 = load i64, i64* %PC.i1001
  %878 = add i64 %877, 4
  store i64 %878, i64* %PC.i1001
  %879 = sext i64 %876 to i128
  %880 = and i128 %879, -18446744073709551616
  %881 = zext i64 %876 to i128
  %882 = or i128 %880, %881
  %883 = mul i128 12, %882
  %884 = trunc i128 %883 to i64
  store i64 %884, i64* %RCX.i1002, align 8
  %885 = sext i64 %884 to i128
  %886 = icmp ne i128 %885, %883
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %887, i8* %888, align 1
  %889 = trunc i128 %883 to i32
  %890 = and i32 %889, 255
  %891 = call i32 @llvm.ctpop.i32(i32 %890)
  %892 = trunc i32 %891 to i8
  %893 = and i8 %892, 1
  %894 = xor i8 %893, 1
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %894, i8* %895, align 1
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %896, align 1
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %897, align 1
  %898 = lshr i64 %884, 63
  %899 = trunc i64 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %899, i8* %900, align 1
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %887, i8* %901, align 1
  store %struct.Memory* %loadMem_47e4c9, %struct.Memory** %MEMORY
  %loadMem_47e4cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 33
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %904 to i64*
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 1
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %RAX.i999 = bitcast %union.anon* %907 to i64*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 7
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %RDX.i1000 = bitcast %union.anon* %910 to i64*
  %911 = load i64, i64* %RAX.i999
  %912 = load i64, i64* %PC.i998
  %913 = add i64 %912, 3
  store i64 %913, i64* %PC.i998
  store i64 %911, i64* %RDX.i1000, align 8
  store %struct.Memory* %loadMem_47e4cd, %struct.Memory** %MEMORY
  %loadMem_47e4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 33
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %916 to i64*
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 5
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 7
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %RDX.i997 = bitcast %union.anon* %922 to i64*
  %923 = load i64, i64* %RDX.i997
  %924 = load i64, i64* %RCX.i996
  %925 = load i64, i64* %PC.i995
  %926 = add i64 %925, 3
  store i64 %926, i64* %PC.i995
  %927 = add i64 %924, %923
  store i64 %927, i64* %RDX.i997, align 8
  %928 = icmp ult i64 %927, %923
  %929 = icmp ult i64 %927, %924
  %930 = or i1 %928, %929
  %931 = zext i1 %930 to i8
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %931, i8* %932, align 1
  %933 = trunc i64 %927 to i32
  %934 = and i32 %933, 255
  %935 = call i32 @llvm.ctpop.i32(i32 %934)
  %936 = trunc i32 %935 to i8
  %937 = and i8 %936, 1
  %938 = xor i8 %937, 1
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %938, i8* %939, align 1
  %940 = xor i64 %924, %923
  %941 = xor i64 %940, %927
  %942 = lshr i64 %941, 4
  %943 = trunc i64 %942 to i8
  %944 = and i8 %943, 1
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %944, i8* %945, align 1
  %946 = icmp eq i64 %927, 0
  %947 = zext i1 %946 to i8
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %947, i8* %948, align 1
  %949 = lshr i64 %927, 63
  %950 = trunc i64 %949 to i8
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %950, i8* %951, align 1
  %952 = lshr i64 %923, 63
  %953 = lshr i64 %924, 63
  %954 = xor i64 %949, %952
  %955 = xor i64 %949, %953
  %956 = add i64 %954, %955
  %957 = icmp eq i64 %956, 2
  %958 = zext i1 %957 to i8
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %958, i8* %959, align 1
  store %struct.Memory* %loadMem_47e4d0, %struct.Memory** %MEMORY
  %loadMem_47e4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 33
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %962 to i64*
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 7
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %RDX.i993 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 9
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RSI.i994 = bitcast %union.anon* %968 to i64*
  %969 = load i64, i64* %RDX.i993
  %970 = add i64 %969, 4
  %971 = load i64, i64* %PC.i992
  %972 = add i64 %971, 3
  store i64 %972, i64* %PC.i992
  %973 = inttoptr i64 %970 to i32*
  %974 = load i32, i32* %973
  %975 = zext i32 %974 to i64
  store i64 %975, i64* %RSI.i994, align 8
  store %struct.Memory* %loadMem_47e4d3, %struct.Memory** %MEMORY
  %loadMem_47e4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 33
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %978 to i64*
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 9
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %ESI.i990 = bitcast %union.anon* %981 to i32*
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %983 = getelementptr inbounds %struct.GPR, %struct.GPR* %982, i32 0, i32 15
  %984 = getelementptr inbounds %struct.Reg, %struct.Reg* %983, i32 0, i32 0
  %RBP.i991 = bitcast %union.anon* %984 to i64*
  %985 = load i64, i64* %RBP.i991
  %986 = sub i64 %985, 24
  %987 = load i32, i32* %ESI.i990
  %988 = zext i32 %987 to i64
  %989 = load i64, i64* %PC.i989
  %990 = add i64 %989, 3
  store i64 %990, i64* %PC.i989
  %991 = inttoptr i64 %986 to i32*
  store i32 %987, i32* %991
  store %struct.Memory* %loadMem_47e4d6, %struct.Memory** %MEMORY
  %loadMem_47e4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %993 = getelementptr inbounds %struct.GPR, %struct.GPR* %992, i32 0, i32 33
  %994 = getelementptr inbounds %struct.Reg, %struct.Reg* %993, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %994 to i64*
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %996 = getelementptr inbounds %struct.GPR, %struct.GPR* %995, i32 0, i32 5
  %997 = getelementptr inbounds %struct.Reg, %struct.Reg* %996, i32 0, i32 0
  %RCX.i987 = bitcast %union.anon* %997 to i64*
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %999 = getelementptr inbounds %struct.GPR, %struct.GPR* %998, i32 0, i32 15
  %1000 = getelementptr inbounds %struct.Reg, %struct.Reg* %999, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %1000 to i64*
  %1001 = load i64, i64* %RBP.i988
  %1002 = sub i64 %1001, 28
  %1003 = load i64, i64* %PC.i986
  %1004 = add i64 %1003, 4
  store i64 %1004, i64* %PC.i986
  %1005 = inttoptr i64 %1002 to i32*
  %1006 = load i32, i32* %1005
  %1007 = sext i32 %1006 to i64
  store i64 %1007, i64* %RCX.i987, align 8
  store %struct.Memory* %loadMem_47e4d9, %struct.Memory** %MEMORY
  %loadMem_47e4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1009 = getelementptr inbounds %struct.GPR, %struct.GPR* %1008, i32 0, i32 33
  %1010 = getelementptr inbounds %struct.Reg, %struct.Reg* %1009, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %1010 to i64*
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 5
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %RCX.i985 = bitcast %union.anon* %1013 to i64*
  %1014 = load i64, i64* %RCX.i985
  %1015 = load i64, i64* %PC.i984
  %1016 = add i64 %1015, 4
  store i64 %1016, i64* %PC.i984
  %1017 = sext i64 %1014 to i128
  %1018 = and i128 %1017, -18446744073709551616
  %1019 = zext i64 %1014 to i128
  %1020 = or i128 %1018, %1019
  %1021 = mul i128 12, %1020
  %1022 = trunc i128 %1021 to i64
  store i64 %1022, i64* %RCX.i985, align 8
  %1023 = sext i64 %1022 to i128
  %1024 = icmp ne i128 %1023, %1021
  %1025 = zext i1 %1024 to i8
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1025, i8* %1026, align 1
  %1027 = trunc i128 %1021 to i32
  %1028 = and i32 %1027, 255
  %1029 = call i32 @llvm.ctpop.i32(i32 %1028)
  %1030 = trunc i32 %1029 to i8
  %1031 = and i8 %1030, 1
  %1032 = xor i8 %1031, 1
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1032, i8* %1033, align 1
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1034, align 1
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1035, align 1
  %1036 = lshr i64 %1022, 63
  %1037 = trunc i64 %1036 to i8
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1037, i8* %1038, align 1
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1025, i8* %1039, align 1
  store %struct.Memory* %loadMem_47e4dd, %struct.Memory** %MEMORY
  %loadMem_47e4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1041 = getelementptr inbounds %struct.GPR, %struct.GPR* %1040, i32 0, i32 33
  %1042 = getelementptr inbounds %struct.Reg, %struct.Reg* %1041, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %1042 to i64*
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 1
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 5
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RCX.i983 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %RAX.i982
  %1050 = load i64, i64* %RCX.i983
  %1051 = load i64, i64* %PC.i981
  %1052 = add i64 %1051, 3
  store i64 %1052, i64* %PC.i981
  %1053 = add i64 %1050, %1049
  store i64 %1053, i64* %RAX.i982, align 8
  %1054 = icmp ult i64 %1053, %1049
  %1055 = icmp ult i64 %1053, %1050
  %1056 = or i1 %1054, %1055
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1057, i8* %1058, align 1
  %1059 = trunc i64 %1053 to i32
  %1060 = and i32 %1059, 255
  %1061 = call i32 @llvm.ctpop.i32(i32 %1060)
  %1062 = trunc i32 %1061 to i8
  %1063 = and i8 %1062, 1
  %1064 = xor i8 %1063, 1
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1064, i8* %1065, align 1
  %1066 = xor i64 %1050, %1049
  %1067 = xor i64 %1066, %1053
  %1068 = lshr i64 %1067, 4
  %1069 = trunc i64 %1068 to i8
  %1070 = and i8 %1069, 1
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1070, i8* %1071, align 1
  %1072 = icmp eq i64 %1053, 0
  %1073 = zext i1 %1072 to i8
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1073, i8* %1074, align 1
  %1075 = lshr i64 %1053, 63
  %1076 = trunc i64 %1075 to i8
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1076, i8* %1077, align 1
  %1078 = lshr i64 %1049, 63
  %1079 = lshr i64 %1050, 63
  %1080 = xor i64 %1075, %1078
  %1081 = xor i64 %1075, %1079
  %1082 = add i64 %1080, %1081
  %1083 = icmp eq i64 %1082, 2
  %1084 = zext i1 %1083 to i8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1084, i8* %1085, align 1
  store %struct.Memory* %loadMem_47e4e1, %struct.Memory** %MEMORY
  %loadMem_47e4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 1
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %1091 to i64*
  %1092 = load i64, i64* %RAX.i980
  %1093 = load i64, i64* %PC.i979
  %1094 = add i64 %1093, 3
  store i64 %1094, i64* %PC.i979
  %1095 = inttoptr i64 %1092 to i32*
  %1096 = load i32, i32* %1095
  %1097 = sub i32 %1096, 2
  %1098 = icmp ult i32 %1096, 2
  %1099 = zext i1 %1098 to i8
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1099, i8* %1100, align 1
  %1101 = and i32 %1097, 255
  %1102 = call i32 @llvm.ctpop.i32(i32 %1101)
  %1103 = trunc i32 %1102 to i8
  %1104 = and i8 %1103, 1
  %1105 = xor i8 %1104, 1
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1105, i8* %1106, align 1
  %1107 = xor i32 %1096, 2
  %1108 = xor i32 %1107, %1097
  %1109 = lshr i32 %1108, 4
  %1110 = trunc i32 %1109 to i8
  %1111 = and i8 %1110, 1
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1111, i8* %1112, align 1
  %1113 = icmp eq i32 %1097, 0
  %1114 = zext i1 %1113 to i8
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1114, i8* %1115, align 1
  %1116 = lshr i32 %1097, 31
  %1117 = trunc i32 %1116 to i8
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1117, i8* %1118, align 1
  %1119 = lshr i32 %1096, 31
  %1120 = xor i32 %1116, %1119
  %1121 = add i32 %1120, %1119
  %1122 = icmp eq i32 %1121, 2
  %1123 = zext i1 %1122 to i8
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1123, i8* %1124, align 1
  store %struct.Memory* %loadMem_47e4e4, %struct.Memory** %MEMORY
  %loadMem_47e4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 33
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %1127 to i64*
  %1128 = load i64, i64* %PC.i978
  %1129 = add i64 %1128, 40
  %1130 = load i64, i64* %PC.i978
  %1131 = add i64 %1130, 6
  %1132 = load i64, i64* %PC.i978
  %1133 = add i64 %1132, 6
  store i64 %1133, i64* %PC.i978
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1135 = load i8, i8* %1134, align 1
  %1136 = icmp eq i8 %1135, 0
  %1137 = zext i1 %1136 to i8
  store i8 %1137, i8* %BRANCH_TAKEN, align 1
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1139 = select i1 %1136, i64 %1129, i64 %1131
  store i64 %1139, i64* %1138, align 8
  store %struct.Memory* %loadMem_47e4e7, %struct.Memory** %MEMORY
  %loadBr_47e4e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e4e7 = icmp eq i8 %loadBr_47e4e7, 1
  br i1 %cmpBr_47e4e7, label %block_.L_47e50f, label %block_47e4ed

block_47e4ed:                                     ; preds = %block_.L_47e4bb
  %loadMem_47e4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1141 = getelementptr inbounds %struct.GPR, %struct.GPR* %1140, i32 0, i32 33
  %1142 = getelementptr inbounds %struct.Reg, %struct.Reg* %1141, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %1142 to i64*
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1144 = getelementptr inbounds %struct.GPR, %struct.GPR* %1143, i32 0, i32 1
  %1145 = getelementptr inbounds %struct.Reg, %struct.Reg* %1144, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %1145 to i64*
  %1146 = load i64, i64* %PC.i976
  %1147 = add i64 %1146, 5
  store i64 %1147, i64* %PC.i976
  store i64 3, i64* %RAX.i977, align 8
  store %struct.Memory* %loadMem_47e4ed, %struct.Memory** %MEMORY
  %loadMem_47e4f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 33
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %1150 to i64*
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 15
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %1153 to i64*
  %1154 = load i64, i64* %RBP.i975
  %1155 = sub i64 %1154, 32
  %1156 = load i64, i64* %PC.i974
  %1157 = add i64 %1156, 7
  store i64 %1157, i64* %PC.i974
  %1158 = inttoptr i64 %1155 to i32*
  store i32 1, i32* %1158
  store %struct.Memory* %loadMem_47e4f2, %struct.Memory** %MEMORY
  %loadMem_47e4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 33
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %1161 to i64*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 5
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %1164 to i64*
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1166 = getelementptr inbounds %struct.GPR, %struct.GPR* %1165, i32 0, i32 15
  %1167 = getelementptr inbounds %struct.Reg, %struct.Reg* %1166, i32 0, i32 0
  %RBP.i973 = bitcast %union.anon* %1167 to i64*
  %1168 = load i64, i64* %RBP.i973
  %1169 = sub i64 %1168, 24
  %1170 = load i64, i64* %PC.i971
  %1171 = add i64 %1170, 4
  store i64 %1171, i64* %PC.i971
  %1172 = inttoptr i64 %1169 to i32*
  %1173 = load i32, i32* %1172
  %1174 = sext i32 %1173 to i64
  store i64 %1174, i64* %RCX.i972, align 8
  store %struct.Memory* %loadMem_47e4f9, %struct.Memory** %MEMORY
  %loadMem_47e4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 33
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %1177 to i64*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 5
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RCX.i969 = bitcast %union.anon* %1180 to i64*
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 7
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %RDX.i970 = bitcast %union.anon* %1183 to i64*
  %1184 = load i64, i64* %RCX.i969
  %1185 = add i64 %1184, 12099168
  %1186 = load i64, i64* %PC.i968
  %1187 = add i64 %1186, 8
  store i64 %1187, i64* %PC.i968
  %1188 = inttoptr i64 %1185 to i8*
  %1189 = load i8, i8* %1188
  %1190 = zext i8 %1189 to i64
  store i64 %1190, i64* %RDX.i970, align 8
  store %struct.Memory* %loadMem_47e4fd, %struct.Memory** %MEMORY
  %loadMem_47e505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 33
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %1193 to i64*
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 7
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %EDX.i966 = bitcast %union.anon* %1196 to i32*
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1198 = getelementptr inbounds %struct.GPR, %struct.GPR* %1197, i32 0, i32 1
  %1199 = getelementptr inbounds %struct.Reg, %struct.Reg* %1198, i32 0, i32 0
  %RAX.i967 = bitcast %union.anon* %1199 to i64*
  %1200 = load i64, i64* %RAX.i967
  %1201 = load i32, i32* %EDX.i966
  %1202 = zext i32 %1201 to i64
  %1203 = load i64, i64* %PC.i965
  %1204 = add i64 %1203, 2
  store i64 %1204, i64* %PC.i965
  %1205 = trunc i64 %1200 to i32
  %1206 = sub i32 %1205, %1201
  %1207 = zext i32 %1206 to i64
  store i64 %1207, i64* %RAX.i967, align 8
  %1208 = icmp ult i32 %1205, %1201
  %1209 = zext i1 %1208 to i8
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1209, i8* %1210, align 1
  %1211 = and i32 %1206, 255
  %1212 = call i32 @llvm.ctpop.i32(i32 %1211)
  %1213 = trunc i32 %1212 to i8
  %1214 = and i8 %1213, 1
  %1215 = xor i8 %1214, 1
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1215, i8* %1216, align 1
  %1217 = xor i64 %1202, %1200
  %1218 = trunc i64 %1217 to i32
  %1219 = xor i32 %1218, %1206
  %1220 = lshr i32 %1219, 4
  %1221 = trunc i32 %1220 to i8
  %1222 = and i8 %1221, 1
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1222, i8* %1223, align 1
  %1224 = icmp eq i32 %1206, 0
  %1225 = zext i1 %1224 to i8
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1225, i8* %1226, align 1
  %1227 = lshr i32 %1206, 31
  %1228 = trunc i32 %1227 to i8
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1228, i8* %1229, align 1
  %1230 = lshr i32 %1205, 31
  %1231 = lshr i32 %1201, 31
  %1232 = xor i32 %1231, %1230
  %1233 = xor i32 %1227, %1230
  %1234 = add i32 %1233, %1232
  %1235 = icmp eq i32 %1234, 2
  %1236 = zext i1 %1235 to i8
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1236, i8* %1237, align 1
  store %struct.Memory* %loadMem_47e505, %struct.Memory** %MEMORY
  %loadMem_47e507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 33
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %1240 to i64*
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1242 = getelementptr inbounds %struct.GPR, %struct.GPR* %1241, i32 0, i32 1
  %1243 = getelementptr inbounds %struct.Reg, %struct.Reg* %1242, i32 0, i32 0
  %EAX.i963 = bitcast %union.anon* %1243 to i32*
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 15
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %1246 to i64*
  %1247 = load i64, i64* %RBP.i964
  %1248 = sub i64 %1247, 36
  %1249 = load i32, i32* %EAX.i963
  %1250 = zext i32 %1249 to i64
  %1251 = load i64, i64* %PC.i962
  %1252 = add i64 %1251, 3
  store i64 %1252, i64* %PC.i962
  %1253 = inttoptr i64 %1248 to i32*
  store i32 %1249, i32* %1253
  store %struct.Memory* %loadMem_47e507, %struct.Memory** %MEMORY
  %loadMem_47e50a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1255 = getelementptr inbounds %struct.GPR, %struct.GPR* %1254, i32 0, i32 33
  %1256 = getelementptr inbounds %struct.Reg, %struct.Reg* %1255, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %1256 to i64*
  %1257 = load i64, i64* %PC.i961
  %1258 = add i64 %1257, 27
  %1259 = load i64, i64* %PC.i961
  %1260 = add i64 %1259, 5
  store i64 %1260, i64* %PC.i961
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1258, i64* %1261, align 8
  store %struct.Memory* %loadMem_47e50a, %struct.Memory** %MEMORY
  br label %block_.L_47e525

block_.L_47e50f:                                  ; preds = %block_.L_47e4bb
  %loadMem_47e50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1263 = getelementptr inbounds %struct.GPR, %struct.GPR* %1262, i32 0, i32 33
  %1264 = getelementptr inbounds %struct.Reg, %struct.Reg* %1263, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %1264 to i64*
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 15
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %1267 to i64*
  %1268 = load i64, i64* %RBP.i960
  %1269 = sub i64 %1268, 32
  %1270 = load i64, i64* %PC.i959
  %1271 = add i64 %1270, 7
  store i64 %1271, i64* %PC.i959
  %1272 = inttoptr i64 %1269 to i32*
  store i32 0, i32* %1272
  store %struct.Memory* %loadMem_47e50f, %struct.Memory** %MEMORY
  %loadMem_47e516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 33
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %1275 to i64*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 1
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %RAX.i957 = bitcast %union.anon* %1278 to i64*
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 15
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %1281 to i64*
  %1282 = load i64, i64* %RBP.i958
  %1283 = sub i64 %1282, 24
  %1284 = load i64, i64* %PC.i956
  %1285 = add i64 %1284, 4
  store i64 %1285, i64* %PC.i956
  %1286 = inttoptr i64 %1283 to i32*
  %1287 = load i32, i32* %1286
  %1288 = sext i32 %1287 to i64
  store i64 %1288, i64* %RAX.i957, align 8
  store %struct.Memory* %loadMem_47e516, %struct.Memory** %MEMORY
  %loadMem_47e51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 33
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %1291 to i64*
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1293 = getelementptr inbounds %struct.GPR, %struct.GPR* %1292, i32 0, i32 1
  %1294 = getelementptr inbounds %struct.Reg, %struct.Reg* %1293, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %1294 to i64*
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 5
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %1297 to i64*
  %1298 = load i64, i64* %RAX.i954
  %1299 = add i64 %1298, 12099168
  %1300 = load i64, i64* %PC.i953
  %1301 = add i64 %1300, 8
  store i64 %1301, i64* %PC.i953
  %1302 = inttoptr i64 %1299 to i8*
  %1303 = load i8, i8* %1302
  %1304 = zext i8 %1303 to i64
  store i64 %1304, i64* %RCX.i955, align 8
  store %struct.Memory* %loadMem_47e51a, %struct.Memory** %MEMORY
  %loadMem_47e522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 33
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %1307 to i64*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 5
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %ECX.i951 = bitcast %union.anon* %1310 to i32*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 15
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %1313 to i64*
  %1314 = load i64, i64* %RBP.i952
  %1315 = sub i64 %1314, 36
  %1316 = load i32, i32* %ECX.i951
  %1317 = zext i32 %1316 to i64
  %1318 = load i64, i64* %PC.i950
  %1319 = add i64 %1318, 3
  store i64 %1319, i64* %PC.i950
  %1320 = inttoptr i64 %1315 to i32*
  store i32 %1316, i32* %1320
  store %struct.Memory* %loadMem_47e522, %struct.Memory** %MEMORY
  br label %block_.L_47e525

block_.L_47e525:                                  ; preds = %block_.L_47e50f, %block_47e4ed
  %loadMem_47e525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1322 = getelementptr inbounds %struct.GPR, %struct.GPR* %1321, i32 0, i32 33
  %1323 = getelementptr inbounds %struct.Reg, %struct.Reg* %1322, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %1323 to i64*
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 1
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %RAX.i949 = bitcast %union.anon* %1326 to i64*
  %1327 = load i64, i64* %PC.i948
  %1328 = add i64 %1327, 10
  store i64 %1328, i64* %PC.i948
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX.i949, align 8
  store %struct.Memory* %loadMem_47e525, %struct.Memory** %MEMORY
  %loadMem_47e52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 33
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %1331 to i64*
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 5
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 15
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %1337 to i64*
  %1338 = load i64, i64* %RBP.i947
  %1339 = sub i64 %1338, 24
  %1340 = load i64, i64* %PC.i945
  %1341 = add i64 %1340, 4
  store i64 %1341, i64* %PC.i945
  %1342 = inttoptr i64 %1339 to i32*
  %1343 = load i32, i32* %1342
  %1344 = sext i32 %1343 to i64
  store i64 %1344, i64* %RCX.i946, align 8
  store %struct.Memory* %loadMem_47e52f, %struct.Memory** %MEMORY
  %loadMem_47e533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 33
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %1347 to i64*
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 5
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %1350 to i64*
  %1351 = load i64, i64* %RCX.i944
  %1352 = load i64, i64* %PC.i943
  %1353 = add i64 %1352, 7
  store i64 %1353, i64* %PC.i943
  %1354 = sext i64 %1351 to i128
  %1355 = and i128 %1354, -18446744073709551616
  %1356 = zext i64 %1351 to i128
  %1357 = or i128 %1355, %1356
  %1358 = mul i128 380, %1357
  %1359 = trunc i128 %1358 to i64
  store i64 %1359, i64* %RCX.i944, align 8
  %1360 = sext i64 %1359 to i128
  %1361 = icmp ne i128 %1360, %1358
  %1362 = zext i1 %1361 to i8
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1362, i8* %1363, align 1
  %1364 = trunc i128 %1358 to i32
  %1365 = and i32 %1364, 255
  %1366 = call i32 @llvm.ctpop.i32(i32 %1365)
  %1367 = trunc i32 %1366 to i8
  %1368 = and i8 %1367, 1
  %1369 = xor i8 %1368, 1
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1369, i8* %1370, align 1
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1371, align 1
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1372, align 1
  %1373 = lshr i64 %1359, 63
  %1374 = trunc i64 %1373 to i8
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1374, i8* %1375, align 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1362, i8* %1376, align 1
  store %struct.Memory* %loadMem_47e533, %struct.Memory** %MEMORY
  %loadMem_47e53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 33
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %1379 to i64*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 1
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %1382 to i64*
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1384 = getelementptr inbounds %struct.GPR, %struct.GPR* %1383, i32 0, i32 5
  %1385 = getelementptr inbounds %struct.Reg, %struct.Reg* %1384, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %1385 to i64*
  %1386 = load i64, i64* %RAX.i941
  %1387 = load i64, i64* %RCX.i942
  %1388 = load i64, i64* %PC.i940
  %1389 = add i64 %1388, 3
  store i64 %1389, i64* %PC.i940
  %1390 = add i64 %1387, %1386
  store i64 %1390, i64* %RAX.i941, align 8
  %1391 = icmp ult i64 %1390, %1386
  %1392 = icmp ult i64 %1390, %1387
  %1393 = or i1 %1391, %1392
  %1394 = zext i1 %1393 to i8
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1394, i8* %1395, align 1
  %1396 = trunc i64 %1390 to i32
  %1397 = and i32 %1396, 255
  %1398 = call i32 @llvm.ctpop.i32(i32 %1397)
  %1399 = trunc i32 %1398 to i8
  %1400 = and i8 %1399, 1
  %1401 = xor i8 %1400, 1
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1401, i8* %1402, align 1
  %1403 = xor i64 %1387, %1386
  %1404 = xor i64 %1403, %1390
  %1405 = lshr i64 %1404, 4
  %1406 = trunc i64 %1405 to i8
  %1407 = and i8 %1406, 1
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1407, i8* %1408, align 1
  %1409 = icmp eq i64 %1390, 0
  %1410 = zext i1 %1409 to i8
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1410, i8* %1411, align 1
  %1412 = lshr i64 %1390, 63
  %1413 = trunc i64 %1412 to i8
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1413, i8* %1414, align 1
  %1415 = lshr i64 %1386, 63
  %1416 = lshr i64 %1387, 63
  %1417 = xor i64 %1412, %1415
  %1418 = xor i64 %1412, %1416
  %1419 = add i64 %1417, %1418
  %1420 = icmp eq i64 %1419, 2
  %1421 = zext i1 %1420 to i8
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1421, i8* %1422, align 1
  store %struct.Memory* %loadMem_47e53a, %struct.Memory** %MEMORY
  %loadMem_47e53d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1424 = getelementptr inbounds %struct.GPR, %struct.GPR* %1423, i32 0, i32 33
  %1425 = getelementptr inbounds %struct.Reg, %struct.Reg* %1424, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %1425 to i64*
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1427 = getelementptr inbounds %struct.GPR, %struct.GPR* %1426, i32 0, i32 1
  %1428 = getelementptr inbounds %struct.Reg, %struct.Reg* %1427, i32 0, i32 0
  %RAX.i939 = bitcast %union.anon* %1428 to i64*
  %1429 = load i64, i64* %RAX.i939
  %1430 = add i64 %1429, 180
  %1431 = load i64, i64* %PC.i938
  %1432 = add i64 %1431, 7
  store i64 %1432, i64* %PC.i938
  %1433 = inttoptr i64 %1430 to i32*
  %1434 = load i32, i32* %1433
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1435, align 1
  %1436 = and i32 %1434, 255
  %1437 = call i32 @llvm.ctpop.i32(i32 %1436)
  %1438 = trunc i32 %1437 to i8
  %1439 = and i8 %1438, 1
  %1440 = xor i8 %1439, 1
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1440, i8* %1441, align 1
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1442, align 1
  %1443 = icmp eq i32 %1434, 0
  %1444 = zext i1 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1444, i8* %1445, align 1
  %1446 = lshr i32 %1434, 31
  %1447 = trunc i32 %1446 to i8
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1447, i8* %1448, align 1
  %1449 = lshr i32 %1434, 31
  %1450 = xor i32 %1446, %1449
  %1451 = add i32 %1450, %1449
  %1452 = icmp eq i32 %1451, 2
  %1453 = zext i1 %1452 to i8
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1453, i8* %1454, align 1
  store %struct.Memory* %loadMem_47e53d, %struct.Memory** %MEMORY
  %loadMem_47e544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %1457 to i64*
  %1458 = load i64, i64* %PC.i937
  %1459 = add i64 %1458, 11
  %1460 = load i64, i64* %PC.i937
  %1461 = add i64 %1460, 6
  %1462 = load i64, i64* %PC.i937
  %1463 = add i64 %1462, 6
  store i64 %1463, i64* %PC.i937
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1465 = load i8, i8* %1464, align 1
  %1466 = icmp eq i8 %1465, 0
  %1467 = zext i1 %1466 to i8
  store i8 %1467, i8* %BRANCH_TAKEN, align 1
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1469 = select i1 %1466, i64 %1459, i64 %1461
  store i64 %1469, i64* %1468, align 8
  store %struct.Memory* %loadMem_47e544, %struct.Memory** %MEMORY
  %loadBr_47e544 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e544 = icmp eq i8 %loadBr_47e544, 1
  br i1 %cmpBr_47e544, label %block_.L_47e54f, label %block_47e54a

block_47e54a:                                     ; preds = %block_.L_47e525
  %loadMem_47e54a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 33
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %1472 to i64*
  %1473 = load i64, i64* %PC.i936
  %1474 = add i64 %1473, 2031
  %1475 = load i64, i64* %PC.i936
  %1476 = add i64 %1475, 5
  store i64 %1476, i64* %PC.i936
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1474, i64* %1477, align 8
  store %struct.Memory* %loadMem_47e54a, %struct.Memory** %MEMORY
  br label %block_.L_47ed39

block_.L_47e54f:                                  ; preds = %block_.L_47e525
  %loadMem_47e54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 33
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %1480 to i64*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 1
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %1483 to i64*
  %1484 = load i64, i64* %PC.i934
  %1485 = add i64 %1484, 10
  store i64 %1485, i64* %PC.i934
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i935, align 8
  store %struct.Memory* %loadMem_47e54f, %struct.Memory** %MEMORY
  %loadMem_47e559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1487 = getelementptr inbounds %struct.GPR, %struct.GPR* %1486, i32 0, i32 33
  %1488 = getelementptr inbounds %struct.Reg, %struct.Reg* %1487, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %1488 to i64*
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 5
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %RCX.i933 = bitcast %union.anon* %1491 to i64*
  %1492 = load i64, i64* %PC.i932
  %1493 = add i64 %1492, 8
  store i64 %1493, i64* %PC.i932
  %1494 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %1494, i64* %RCX.i933, align 8
  store %struct.Memory* %loadMem_47e559, %struct.Memory** %MEMORY
  %loadMem_47e561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 7
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RDX.i930 = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 15
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %1503 to i64*
  %1504 = load i64, i64* %RBP.i931
  %1505 = sub i64 %1504, 24
  %1506 = load i64, i64* %PC.i929
  %1507 = add i64 %1506, 4
  store i64 %1507, i64* %PC.i929
  %1508 = inttoptr i64 %1505 to i32*
  %1509 = load i32, i32* %1508
  %1510 = sext i32 %1509 to i64
  store i64 %1510, i64* %RDX.i930, align 8
  store %struct.Memory* %loadMem_47e561, %struct.Memory** %MEMORY
  %loadMem_47e565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 33
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %1513 to i64*
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 7
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %1516 to i64*
  %1517 = load i64, i64* %RDX.i928
  %1518 = load i64, i64* %PC.i927
  %1519 = add i64 %1518, 4
  store i64 %1519, i64* %PC.i927
  %1520 = sext i64 %1517 to i128
  %1521 = and i128 %1520, -18446744073709551616
  %1522 = zext i64 %1517 to i128
  %1523 = or i128 %1521, %1522
  %1524 = mul i128 76, %1523
  %1525 = trunc i128 %1524 to i64
  store i64 %1525, i64* %RDX.i928, align 8
  %1526 = sext i64 %1525 to i128
  %1527 = icmp ne i128 %1526, %1524
  %1528 = zext i1 %1527 to i8
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1528, i8* %1529, align 1
  %1530 = trunc i128 %1524 to i32
  %1531 = and i32 %1530, 255
  %1532 = call i32 @llvm.ctpop.i32(i32 %1531)
  %1533 = trunc i32 %1532 to i8
  %1534 = and i8 %1533, 1
  %1535 = xor i8 %1534, 1
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1535, i8* %1536, align 1
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1537, align 1
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1538, align 1
  %1539 = lshr i64 %1525, 63
  %1540 = trunc i64 %1539 to i8
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1540, i8* %1541, align 1
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1528, i8* %1542, align 1
  store %struct.Memory* %loadMem_47e565, %struct.Memory** %MEMORY
  %loadMem_47e569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1544 = getelementptr inbounds %struct.GPR, %struct.GPR* %1543, i32 0, i32 33
  %1545 = getelementptr inbounds %struct.Reg, %struct.Reg* %1544, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %1545 to i64*
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1547 = getelementptr inbounds %struct.GPR, %struct.GPR* %1546, i32 0, i32 1
  %1548 = getelementptr inbounds %struct.Reg, %struct.Reg* %1547, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %1548 to i64*
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1550 = getelementptr inbounds %struct.GPR, %struct.GPR* %1549, i32 0, i32 7
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %1551 to i64*
  %1552 = load i64, i64* %RAX.i925
  %1553 = load i64, i64* %RDX.i926
  %1554 = load i64, i64* %PC.i924
  %1555 = add i64 %1554, 3
  store i64 %1555, i64* %PC.i924
  %1556 = add i64 %1553, %1552
  store i64 %1556, i64* %RAX.i925, align 8
  %1557 = icmp ult i64 %1556, %1552
  %1558 = icmp ult i64 %1556, %1553
  %1559 = or i1 %1557, %1558
  %1560 = zext i1 %1559 to i8
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1560, i8* %1561, align 1
  %1562 = trunc i64 %1556 to i32
  %1563 = and i32 %1562, 255
  %1564 = call i32 @llvm.ctpop.i32(i32 %1563)
  %1565 = trunc i32 %1564 to i8
  %1566 = and i8 %1565, 1
  %1567 = xor i8 %1566, 1
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1567, i8* %1568, align 1
  %1569 = xor i64 %1553, %1552
  %1570 = xor i64 %1569, %1556
  %1571 = lshr i64 %1570, 4
  %1572 = trunc i64 %1571 to i8
  %1573 = and i8 %1572, 1
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1573, i8* %1574, align 1
  %1575 = icmp eq i64 %1556, 0
  %1576 = zext i1 %1575 to i8
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1576, i8* %1577, align 1
  %1578 = lshr i64 %1556, 63
  %1579 = trunc i64 %1578 to i8
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1579, i8* %1580, align 1
  %1581 = lshr i64 %1552, 63
  %1582 = lshr i64 %1553, 63
  %1583 = xor i64 %1578, %1581
  %1584 = xor i64 %1578, %1582
  %1585 = add i64 %1583, %1584
  %1586 = icmp eq i64 %1585, 2
  %1587 = zext i1 %1586 to i8
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1587, i8* %1588, align 1
  store %struct.Memory* %loadMem_47e569, %struct.Memory** %MEMORY
  %loadMem_47e56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1590 = getelementptr inbounds %struct.GPR, %struct.GPR* %1589, i32 0, i32 33
  %1591 = getelementptr inbounds %struct.Reg, %struct.Reg* %1590, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %1591 to i64*
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 1
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %1594 to i64*
  %1595 = load i64, i64* %RAX.i923
  %1596 = add i64 %1595, 4
  %1597 = load i64, i64* %PC.i922
  %1598 = add i64 %1597, 4
  store i64 %1598, i64* %PC.i922
  %1599 = inttoptr i64 %1596 to i32*
  %1600 = load i32, i32* %1599
  %1601 = sext i32 %1600 to i64
  store i64 %1601, i64* %RAX.i923, align 8
  store %struct.Memory* %loadMem_47e56c, %struct.Memory** %MEMORY
  %loadMem_47e570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 33
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %1604 to i64*
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 1
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %1607 to i64*
  %1608 = load i64, i64* %RAX.i921
  %1609 = load i64, i64* %PC.i920
  %1610 = add i64 %1609, 4
  store i64 %1610, i64* %PC.i920
  %1611 = sext i64 %1608 to i128
  %1612 = and i128 %1611, -18446744073709551616
  %1613 = zext i64 %1608 to i128
  %1614 = or i128 %1612, %1613
  %1615 = mul i128 104, %1614
  %1616 = trunc i128 %1615 to i64
  store i64 %1616, i64* %RAX.i921, align 8
  %1617 = sext i64 %1616 to i128
  %1618 = icmp ne i128 %1617, %1615
  %1619 = zext i1 %1618 to i8
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1619, i8* %1620, align 1
  %1621 = trunc i128 %1615 to i32
  %1622 = and i32 %1621, 255
  %1623 = call i32 @llvm.ctpop.i32(i32 %1622)
  %1624 = trunc i32 %1623 to i8
  %1625 = and i8 %1624, 1
  %1626 = xor i8 %1625, 1
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1626, i8* %1627, align 1
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1628, align 1
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1629, align 1
  %1630 = lshr i64 %1616, 63
  %1631 = trunc i64 %1630 to i8
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1631, i8* %1632, align 1
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1619, i8* %1633, align 1
  store %struct.Memory* %loadMem_47e570, %struct.Memory** %MEMORY
  %loadMem_47e574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1635 = getelementptr inbounds %struct.GPR, %struct.GPR* %1634, i32 0, i32 33
  %1636 = getelementptr inbounds %struct.Reg, %struct.Reg* %1635, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %1636 to i64*
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 1
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %1639 to i64*
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 5
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %RCX.i919 = bitcast %union.anon* %1642 to i64*
  %1643 = load i64, i64* %RCX.i919
  %1644 = load i64, i64* %RAX.i918
  %1645 = load i64, i64* %PC.i917
  %1646 = add i64 %1645, 3
  store i64 %1646, i64* %PC.i917
  %1647 = add i64 %1644, %1643
  store i64 %1647, i64* %RCX.i919, align 8
  %1648 = icmp ult i64 %1647, %1643
  %1649 = icmp ult i64 %1647, %1644
  %1650 = or i1 %1648, %1649
  %1651 = zext i1 %1650 to i8
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1651, i8* %1652, align 1
  %1653 = trunc i64 %1647 to i32
  %1654 = and i32 %1653, 255
  %1655 = call i32 @llvm.ctpop.i32(i32 %1654)
  %1656 = trunc i32 %1655 to i8
  %1657 = and i8 %1656, 1
  %1658 = xor i8 %1657, 1
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1658, i8* %1659, align 1
  %1660 = xor i64 %1644, %1643
  %1661 = xor i64 %1660, %1647
  %1662 = lshr i64 %1661, 4
  %1663 = trunc i64 %1662 to i8
  %1664 = and i8 %1663, 1
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1664, i8* %1665, align 1
  %1666 = icmp eq i64 %1647, 0
  %1667 = zext i1 %1666 to i8
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1667, i8* %1668, align 1
  %1669 = lshr i64 %1647, 63
  %1670 = trunc i64 %1669 to i8
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1670, i8* %1671, align 1
  %1672 = lshr i64 %1643, 63
  %1673 = lshr i64 %1644, 63
  %1674 = xor i64 %1669, %1672
  %1675 = xor i64 %1669, %1673
  %1676 = add i64 %1674, %1675
  %1677 = icmp eq i64 %1676, 2
  %1678 = zext i1 %1677 to i8
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1678, i8* %1679, align 1
  store %struct.Memory* %loadMem_47e574, %struct.Memory** %MEMORY
  %loadMem_47e577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 33
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 5
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %RCX.i916 = bitcast %union.anon* %1685 to i64*
  %1686 = load i64, i64* %RCX.i916
  %1687 = add i64 %1686, 60
  %1688 = load i64, i64* %PC.i915
  %1689 = add i64 %1688, 4
  store i64 %1689, i64* %PC.i915
  %1690 = inttoptr i64 %1687 to i32*
  %1691 = load i32, i32* %1690
  %1692 = sub i32 %1691, 5
  %1693 = icmp ult i32 %1691, 5
  %1694 = zext i1 %1693 to i8
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1694, i8* %1695, align 1
  %1696 = and i32 %1692, 255
  %1697 = call i32 @llvm.ctpop.i32(i32 %1696)
  %1698 = trunc i32 %1697 to i8
  %1699 = and i8 %1698, 1
  %1700 = xor i8 %1699, 1
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1700, i8* %1701, align 1
  %1702 = xor i32 %1691, 5
  %1703 = xor i32 %1702, %1692
  %1704 = lshr i32 %1703, 4
  %1705 = trunc i32 %1704 to i8
  %1706 = and i8 %1705, 1
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1706, i8* %1707, align 1
  %1708 = icmp eq i32 %1692, 0
  %1709 = zext i1 %1708 to i8
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1709, i8* %1710, align 1
  %1711 = lshr i32 %1692, 31
  %1712 = trunc i32 %1711 to i8
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1712, i8* %1713, align 1
  %1714 = lshr i32 %1691, 31
  %1715 = xor i32 %1711, %1714
  %1716 = add i32 %1715, %1714
  %1717 = icmp eq i32 %1716, 2
  %1718 = zext i1 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1718, i8* %1719, align 1
  store %struct.Memory* %loadMem_47e577, %struct.Memory** %MEMORY
  %loadMem_47e57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 33
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %1722 to i64*
  %1723 = load i64, i64* %PC.i914
  %1724 = add i64 %1723, 11
  %1725 = load i64, i64* %PC.i914
  %1726 = add i64 %1725, 6
  %1727 = load i64, i64* %PC.i914
  %1728 = add i64 %1727, 6
  store i64 %1728, i64* %PC.i914
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1730 = load i8, i8* %1729, align 1
  %1731 = icmp eq i8 %1730, 0
  %1732 = zext i1 %1731 to i8
  store i8 %1732, i8* %BRANCH_TAKEN, align 1
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1734 = select i1 %1731, i64 %1724, i64 %1726
  store i64 %1734, i64* %1733, align 8
  store %struct.Memory* %loadMem_47e57b, %struct.Memory** %MEMORY
  %loadBr_47e57b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e57b = icmp eq i8 %loadBr_47e57b, 1
  br i1 %cmpBr_47e57b, label %block_.L_47e586, label %block_47e581

block_47e581:                                     ; preds = %block_.L_47e54f
  %loadMem_47e581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 33
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %1737 to i64*
  %1738 = load i64, i64* %PC.i913
  %1739 = add i64 %1738, 1976
  %1740 = load i64, i64* %PC.i913
  %1741 = add i64 %1740, 5
  store i64 %1741, i64* %PC.i913
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1739, i64* %1742, align 8
  store %struct.Memory* %loadMem_47e581, %struct.Memory** %MEMORY
  br label %block_.L_47ed39

block_.L_47e586:                                  ; preds = %block_.L_47e54f
  %loadMem_47e586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %1745 to i64*
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 15
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %RBP.i912 = bitcast %union.anon* %1748 to i64*
  %1749 = load i64, i64* %RBP.i912
  %1750 = sub i64 %1749, 32
  %1751 = load i64, i64* %PC.i911
  %1752 = add i64 %1751, 4
  store i64 %1752, i64* %PC.i911
  %1753 = inttoptr i64 %1750 to i32*
  %1754 = load i32, i32* %1753
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1755, align 1
  %1756 = and i32 %1754, 255
  %1757 = call i32 @llvm.ctpop.i32(i32 %1756)
  %1758 = trunc i32 %1757 to i8
  %1759 = and i8 %1758, 1
  %1760 = xor i8 %1759, 1
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1760, i8* %1761, align 1
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1762, align 1
  %1763 = icmp eq i32 %1754, 0
  %1764 = zext i1 %1763 to i8
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1764, i8* %1765, align 1
  %1766 = lshr i32 %1754, 31
  %1767 = trunc i32 %1766 to i8
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1767, i8* %1768, align 1
  %1769 = lshr i32 %1754, 31
  %1770 = xor i32 %1766, %1769
  %1771 = add i32 %1770, %1769
  %1772 = icmp eq i32 %1771, 2
  %1773 = zext i1 %1772 to i8
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1773, i8* %1774, align 1
  store %struct.Memory* %loadMem_47e586, %struct.Memory** %MEMORY
  %loadMem_47e58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 33
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %1777 to i64*
  %1778 = load i64, i64* %PC.i910
  %1779 = add i64 %1778, 48
  %1780 = load i64, i64* %PC.i910
  %1781 = add i64 %1780, 6
  %1782 = load i64, i64* %PC.i910
  %1783 = add i64 %1782, 6
  store i64 %1783, i64* %PC.i910
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1785 = load i8, i8* %1784, align 1
  %1786 = icmp eq i8 %1785, 0
  %1787 = zext i1 %1786 to i8
  store i8 %1787, i8* %BRANCH_TAKEN, align 1
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1789 = select i1 %1786, i64 %1779, i64 %1781
  store i64 %1789, i64* %1788, align 8
  store %struct.Memory* %loadMem_47e58a, %struct.Memory** %MEMORY
  %loadBr_47e58a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e58a = icmp eq i8 %loadBr_47e58a, 1
  br i1 %cmpBr_47e58a, label %block_.L_47e5ba, label %block_47e590

block_47e590:                                     ; preds = %block_.L_47e586
  %loadMem_47e590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 33
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %1792 to i64*
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 1
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %1795 to i64*
  %1796 = load i64, i64* %PC.i908
  %1797 = add i64 %1796, 10
  store i64 %1797, i64* %PC.i908
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_47e590, %struct.Memory** %MEMORY
  %loadMem_47e59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 33
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %1800 to i64*
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 5
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %1803 to i64*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 15
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %1806 to i64*
  %1807 = load i64, i64* %RBP.i907
  %1808 = sub i64 %1807, 8
  %1809 = load i64, i64* %PC.i905
  %1810 = add i64 %1809, 4
  store i64 %1810, i64* %PC.i905
  %1811 = inttoptr i64 %1808 to i32*
  %1812 = load i32, i32* %1811
  %1813 = sext i32 %1812 to i64
  store i64 %1813, i64* %RCX.i906, align 8
  store %struct.Memory* %loadMem_47e59a, %struct.Memory** %MEMORY
  %loadMem_47e59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 33
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %1816 to i64*
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1818 = getelementptr inbounds %struct.GPR, %struct.GPR* %1817, i32 0, i32 5
  %1819 = getelementptr inbounds %struct.Reg, %struct.Reg* %1818, i32 0, i32 0
  %RCX.i904 = bitcast %union.anon* %1819 to i64*
  %1820 = load i64, i64* %RCX.i904
  %1821 = load i64, i64* %PC.i903
  %1822 = add i64 %1821, 7
  store i64 %1822, i64* %PC.i903
  %1823 = sext i64 %1820 to i128
  %1824 = and i128 %1823, -18446744073709551616
  %1825 = zext i64 %1820 to i128
  %1826 = or i128 %1824, %1825
  %1827 = mul i128 564, %1826
  %1828 = trunc i128 %1827 to i64
  store i64 %1828, i64* %RCX.i904, align 8
  %1829 = sext i64 %1828 to i128
  %1830 = icmp ne i128 %1829, %1827
  %1831 = zext i1 %1830 to i8
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1831, i8* %1832, align 1
  %1833 = trunc i128 %1827 to i32
  %1834 = and i32 %1833, 255
  %1835 = call i32 @llvm.ctpop.i32(i32 %1834)
  %1836 = trunc i32 %1835 to i8
  %1837 = and i8 %1836, 1
  %1838 = xor i8 %1837, 1
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1838, i8* %1839, align 1
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1840, align 1
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1841, align 1
  %1842 = lshr i64 %1828, 63
  %1843 = trunc i64 %1842 to i8
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1843, i8* %1844, align 1
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1831, i8* %1845, align 1
  store %struct.Memory* %loadMem_47e59e, %struct.Memory** %MEMORY
  %loadMem_47e5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 33
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %1848 to i64*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 1
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %1851 to i64*
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 5
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %RCX.i902 = bitcast %union.anon* %1854 to i64*
  %1855 = load i64, i64* %RAX.i901
  %1856 = load i64, i64* %RCX.i902
  %1857 = load i64, i64* %PC.i900
  %1858 = add i64 %1857, 3
  store i64 %1858, i64* %PC.i900
  %1859 = add i64 %1856, %1855
  store i64 %1859, i64* %RAX.i901, align 8
  %1860 = icmp ult i64 %1859, %1855
  %1861 = icmp ult i64 %1859, %1856
  %1862 = or i1 %1860, %1861
  %1863 = zext i1 %1862 to i8
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1863, i8* %1864, align 1
  %1865 = trunc i64 %1859 to i32
  %1866 = and i32 %1865, 255
  %1867 = call i32 @llvm.ctpop.i32(i32 %1866)
  %1868 = trunc i32 %1867 to i8
  %1869 = and i8 %1868, 1
  %1870 = xor i8 %1869, 1
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1870, i8* %1871, align 1
  %1872 = xor i64 %1856, %1855
  %1873 = xor i64 %1872, %1859
  %1874 = lshr i64 %1873, 4
  %1875 = trunc i64 %1874 to i8
  %1876 = and i8 %1875, 1
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1876, i8* %1877, align 1
  %1878 = icmp eq i64 %1859, 0
  %1879 = zext i1 %1878 to i8
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1879, i8* %1880, align 1
  %1881 = lshr i64 %1859, 63
  %1882 = trunc i64 %1881 to i8
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1882, i8* %1883, align 1
  %1884 = lshr i64 %1855, 63
  %1885 = lshr i64 %1856, 63
  %1886 = xor i64 %1881, %1884
  %1887 = xor i64 %1881, %1885
  %1888 = add i64 %1886, %1887
  %1889 = icmp eq i64 %1888, 2
  %1890 = zext i1 %1889 to i8
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1890, i8* %1891, align 1
  store %struct.Memory* %loadMem_47e5a5, %struct.Memory** %MEMORY
  %loadMem_47e5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 33
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %1894 to i64*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 1
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %RAX.i899 = bitcast %union.anon* %1897 to i64*
  %1898 = load i64, i64* %RAX.i899
  %1899 = add i64 %1898, 552
  %1900 = load i64, i64* %PC.i898
  %1901 = add i64 %1900, 7
  store i64 %1901, i64* %PC.i898
  %1902 = inttoptr i64 %1899 to i32*
  %1903 = load i32, i32* %1902
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1904, align 1
  %1905 = and i32 %1903, 255
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1909, i8* %1910, align 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1911, align 1
  %1912 = icmp eq i32 %1903, 0
  %1913 = zext i1 %1912 to i8
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1913, i8* %1914, align 1
  %1915 = lshr i32 %1903, 31
  %1916 = trunc i32 %1915 to i8
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1916, i8* %1917, align 1
  %1918 = lshr i32 %1903, 31
  %1919 = xor i32 %1915, %1918
  %1920 = add i32 %1919, %1918
  %1921 = icmp eq i32 %1920, 2
  %1922 = zext i1 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1922, i8* %1923, align 1
  store %struct.Memory* %loadMem_47e5a8, %struct.Memory** %MEMORY
  %loadMem_47e5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 33
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %1926 to i64*
  %1927 = load i64, i64* %PC.i897
  %1928 = add i64 %1927, 11
  %1929 = load i64, i64* %PC.i897
  %1930 = add i64 %1929, 6
  %1931 = load i64, i64* %PC.i897
  %1932 = add i64 %1931, 6
  store i64 %1932, i64* %PC.i897
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1934 = load i8, i8* %1933, align 1
  %1935 = icmp eq i8 %1934, 0
  %1936 = zext i1 %1935 to i8
  store i8 %1936, i8* %BRANCH_TAKEN, align 1
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1938 = select i1 %1935, i64 %1928, i64 %1930
  store i64 %1938, i64* %1937, align 8
  store %struct.Memory* %loadMem_47e5af, %struct.Memory** %MEMORY
  %loadBr_47e5af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e5af = icmp eq i8 %loadBr_47e5af, 1
  br i1 %cmpBr_47e5af, label %block_.L_47e5ba, label %block_47e5b5

block_47e5b5:                                     ; preds = %block_47e590
  %loadMem_47e5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %1941 to i64*
  %1942 = load i64, i64* %PC.i896
  %1943 = add i64 %1942, 1924
  %1944 = load i64, i64* %PC.i896
  %1945 = add i64 %1944, 5
  store i64 %1945, i64* %PC.i896
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1943, i64* %1946, align 8
  store %struct.Memory* %loadMem_47e5b5, %struct.Memory** %MEMORY
  br label %block_.L_47ed39

block_.L_47e5ba:                                  ; preds = %block_47e590, %block_.L_47e586
  %loadMem_47e5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 33
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %1949 to i64*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 7
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %RDX.i895 = bitcast %union.anon* %1952 to i64*
  %1953 = load i64, i64* %PC.i894
  %1954 = add i64 %1953, 5
  store i64 %1954, i64* %PC.i894
  store i64 1, i64* %RDX.i895, align 8
  store %struct.Memory* %loadMem_47e5ba, %struct.Memory** %MEMORY
  %loadMem_47e5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 33
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %1957 to i64*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 9
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %RSI.i892 = bitcast %union.anon* %1960 to i64*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 15
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %1963 to i64*
  %1964 = load i64, i64* %RBP.i893
  %1965 = sub i64 %1964, 688
  %1966 = load i64, i64* %PC.i891
  %1967 = add i64 %1966, 7
  store i64 %1967, i64* %PC.i891
  store i64 %1965, i64* %RSI.i892, align 8
  store %struct.Memory* %loadMem_47e5bf, %struct.Memory** %MEMORY
  %loadMem_47e5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1969 = getelementptr inbounds %struct.GPR, %struct.GPR* %1968, i32 0, i32 33
  %1970 = getelementptr inbounds %struct.Reg, %struct.Reg* %1969, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %1970 to i64*
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1972 = getelementptr inbounds %struct.GPR, %struct.GPR* %1971, i32 0, i32 11
  %1973 = getelementptr inbounds %struct.Reg, %struct.Reg* %1972, i32 0, i32 0
  %RDI.i889 = bitcast %union.anon* %1973 to i64*
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1975 = getelementptr inbounds %struct.GPR, %struct.GPR* %1974, i32 0, i32 15
  %1976 = getelementptr inbounds %struct.Reg, %struct.Reg* %1975, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %1976 to i64*
  %1977 = load i64, i64* %RBP.i890
  %1978 = sub i64 %1977, 24
  %1979 = load i64, i64* %PC.i888
  %1980 = add i64 %1979, 3
  store i64 %1980, i64* %PC.i888
  %1981 = inttoptr i64 %1978 to i32*
  %1982 = load i32, i32* %1981
  %1983 = zext i32 %1982 to i64
  store i64 %1983, i64* %RDI.i889, align 8
  store %struct.Memory* %loadMem_47e5c6, %struct.Memory** %MEMORY
  %loadMem1_47e5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 33
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %1986 to i64*
  %1987 = load i64, i64* %PC.i887
  %1988 = add i64 %1987, -435977
  %1989 = load i64, i64* %PC.i887
  %1990 = add i64 %1989, 5
  %1991 = load i64, i64* %PC.i887
  %1992 = add i64 %1991, 5
  store i64 %1992, i64* %PC.i887
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1994 = load i64, i64* %1993, align 8
  %1995 = add i64 %1994, -8
  %1996 = inttoptr i64 %1995 to i64*
  store i64 %1990, i64* %1996
  store i64 %1995, i64* %1993, align 8
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1988, i64* %1997, align 8
  store %struct.Memory* %loadMem1_47e5c9, %struct.Memory** %MEMORY
  %loadMem2_47e5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e5c9 = load i64, i64* %3
  %call2_47e5c9 = call %struct.Memory* @sub_413ec0.extended_chainlinks(%struct.State* %0, i64 %loadPC_47e5c9, %struct.Memory* %loadMem2_47e5c9)
  store %struct.Memory* %call2_47e5c9, %struct.Memory** %MEMORY
  %loadMem_47e5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 1
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %EAX.i885 = bitcast %union.anon* %2003 to i32*
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 15
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %2006 to i64*
  %2007 = load i64, i64* %RBP.i886
  %2008 = sub i64 %2007, 40
  %2009 = load i32, i32* %EAX.i885
  %2010 = zext i32 %2009 to i64
  %2011 = load i64, i64* %PC.i884
  %2012 = add i64 %2011, 3
  store i64 %2012, i64* %PC.i884
  %2013 = inttoptr i64 %2008 to i32*
  store i32 %2009, i32* %2013
  store %struct.Memory* %loadMem_47e5ce, %struct.Memory** %MEMORY
  %loadMem_47e5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 33
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2016 to i64*
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 15
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %2019 to i64*
  %2020 = load i64, i64* %RBP.i883
  %2021 = sub i64 %2020, 16
  %2022 = load i64, i64* %PC.i882
  %2023 = add i64 %2022, 7
  store i64 %2023, i64* %PC.i882
  %2024 = inttoptr i64 %2021 to i32*
  store i32 0, i32* %2024
  store %struct.Memory* %loadMem_47e5d1, %struct.Memory** %MEMORY
  br label %block_.L_47e5d8

block_.L_47e5d8:                                  ; preds = %block_.L_47e997, %block_.L_47e5ba
  %loadMem_47e5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %2027 to i64*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 1
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %RAX.i880 = bitcast %union.anon* %2030 to i64*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 15
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %2033 to i64*
  %2034 = load i64, i64* %RBP.i881
  %2035 = sub i64 %2034, 16
  %2036 = load i64, i64* %PC.i879
  %2037 = add i64 %2036, 3
  store i64 %2037, i64* %PC.i879
  %2038 = inttoptr i64 %2035 to i32*
  %2039 = load i32, i32* %2038
  %2040 = zext i32 %2039 to i64
  store i64 %2040, i64* %RAX.i880, align 8
  store %struct.Memory* %loadMem_47e5d8, %struct.Memory** %MEMORY
  %loadMem_47e5db = load %struct.Memory*, %struct.Memory** %MEMORY
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 33
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2043 to i64*
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2045 = getelementptr inbounds %struct.GPR, %struct.GPR* %2044, i32 0, i32 1
  %2046 = getelementptr inbounds %struct.Reg, %struct.Reg* %2045, i32 0, i32 0
  %EAX.i877 = bitcast %union.anon* %2046 to i32*
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2048 = getelementptr inbounds %struct.GPR, %struct.GPR* %2047, i32 0, i32 15
  %2049 = getelementptr inbounds %struct.Reg, %struct.Reg* %2048, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %2049 to i64*
  %2050 = load i32, i32* %EAX.i877
  %2051 = zext i32 %2050 to i64
  %2052 = load i64, i64* %RBP.i878
  %2053 = sub i64 %2052, 40
  %2054 = load i64, i64* %PC.i876
  %2055 = add i64 %2054, 3
  store i64 %2055, i64* %PC.i876
  %2056 = inttoptr i64 %2053 to i32*
  %2057 = load i32, i32* %2056
  %2058 = sub i32 %2050, %2057
  %2059 = icmp ult i32 %2050, %2057
  %2060 = zext i1 %2059 to i8
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2060, i8* %2061, align 1
  %2062 = and i32 %2058, 255
  %2063 = call i32 @llvm.ctpop.i32(i32 %2062)
  %2064 = trunc i32 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = xor i8 %2065, 1
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2066, i8* %2067, align 1
  %2068 = xor i32 %2057, %2050
  %2069 = xor i32 %2068, %2058
  %2070 = lshr i32 %2069, 4
  %2071 = trunc i32 %2070 to i8
  %2072 = and i8 %2071, 1
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2072, i8* %2073, align 1
  %2074 = icmp eq i32 %2058, 0
  %2075 = zext i1 %2074 to i8
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2075, i8* %2076, align 1
  %2077 = lshr i32 %2058, 31
  %2078 = trunc i32 %2077 to i8
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2078, i8* %2079, align 1
  %2080 = lshr i32 %2050, 31
  %2081 = lshr i32 %2057, 31
  %2082 = xor i32 %2081, %2080
  %2083 = xor i32 %2077, %2080
  %2084 = add i32 %2083, %2082
  %2085 = icmp eq i32 %2084, 2
  %2086 = zext i1 %2085 to i8
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2086, i8* %2087, align 1
  store %struct.Memory* %loadMem_47e5db, %struct.Memory** %MEMORY
  %loadMem_47e5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 33
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %2090 to i64*
  %2091 = load i64, i64* %PC.i875
  %2092 = add i64 %2091, 967
  %2093 = load i64, i64* %PC.i875
  %2094 = add i64 %2093, 6
  %2095 = load i64, i64* %PC.i875
  %2096 = add i64 %2095, 6
  store i64 %2096, i64* %PC.i875
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2098 = load i8, i8* %2097, align 1
  %2099 = icmp ne i8 %2098, 0
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2101 = load i8, i8* %2100, align 1
  %2102 = icmp ne i8 %2101, 0
  %2103 = xor i1 %2099, %2102
  %2104 = xor i1 %2103, true
  %2105 = zext i1 %2104 to i8
  store i8 %2105, i8* %BRANCH_TAKEN, align 1
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2107 = select i1 %2103, i64 %2094, i64 %2092
  store i64 %2107, i64* %2106, align 8
  store %struct.Memory* %loadMem_47e5de, %struct.Memory** %MEMORY
  %loadBr_47e5de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e5de = icmp eq i8 %loadBr_47e5de, 1
  br i1 %cmpBr_47e5de, label %block_.L_47e9a5, label %block_47e5e4

block_47e5e4:                                     ; preds = %block_.L_47e5d8
  %loadMem_47e5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 33
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2110 to i64*
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 1
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %2113 to i64*
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 15
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %2116 to i64*
  %2117 = load i64, i64* %RBP.i874
  %2118 = sub i64 %2117, 16
  %2119 = load i64, i64* %PC.i872
  %2120 = add i64 %2119, 3
  store i64 %2120, i64* %PC.i872
  %2121 = inttoptr i64 %2118 to i32*
  %2122 = load i32, i32* %2121
  %2123 = zext i32 %2122 to i64
  store i64 %2123, i64* %RAX.i873, align 8
  store %struct.Memory* %loadMem_47e5e4, %struct.Memory** %MEMORY
  %loadMem_47e5e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 33
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %2126 to i64*
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2128 = getelementptr inbounds %struct.GPR, %struct.GPR* %2127, i32 0, i32 1
  %2129 = getelementptr inbounds %struct.Reg, %struct.Reg* %2128, i32 0, i32 0
  %RAX.i871 = bitcast %union.anon* %2129 to i64*
  %2130 = load i64, i64* %RAX.i871
  %2131 = load i64, i64* %PC.i870
  %2132 = add i64 %2131, 3
  store i64 %2132, i64* %PC.i870
  %2133 = trunc i64 %2130 to i32
  %2134 = add i32 1, %2133
  %2135 = zext i32 %2134 to i64
  store i64 %2135, i64* %RAX.i871, align 8
  %2136 = icmp ult i32 %2134, %2133
  %2137 = icmp ult i32 %2134, 1
  %2138 = or i1 %2136, %2137
  %2139 = zext i1 %2138 to i8
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2139, i8* %2140, align 1
  %2141 = and i32 %2134, 255
  %2142 = call i32 @llvm.ctpop.i32(i32 %2141)
  %2143 = trunc i32 %2142 to i8
  %2144 = and i8 %2143, 1
  %2145 = xor i8 %2144, 1
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2145, i8* %2146, align 1
  %2147 = xor i64 1, %2130
  %2148 = trunc i64 %2147 to i32
  %2149 = xor i32 %2148, %2134
  %2150 = lshr i32 %2149, 4
  %2151 = trunc i32 %2150 to i8
  %2152 = and i8 %2151, 1
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2152, i8* %2153, align 1
  %2154 = icmp eq i32 %2134, 0
  %2155 = zext i1 %2154 to i8
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2155, i8* %2156, align 1
  %2157 = lshr i32 %2134, 31
  %2158 = trunc i32 %2157 to i8
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2158, i8* %2159, align 1
  %2160 = lshr i32 %2133, 31
  %2161 = xor i32 %2157, %2160
  %2162 = add i32 %2161, %2157
  %2163 = icmp eq i32 %2162, 2
  %2164 = zext i1 %2163 to i8
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2164, i8* %2165, align 1
  store %struct.Memory* %loadMem_47e5e7, %struct.Memory** %MEMORY
  %loadMem_47e5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 33
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2168 to i64*
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 1
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %EAX.i868 = bitcast %union.anon* %2171 to i32*
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 15
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %RBP.i869 = bitcast %union.anon* %2174 to i64*
  %2175 = load i64, i64* %RBP.i869
  %2176 = sub i64 %2175, 20
  %2177 = load i32, i32* %EAX.i868
  %2178 = zext i32 %2177 to i64
  %2179 = load i64, i64* %PC.i867
  %2180 = add i64 %2179, 3
  store i64 %2180, i64* %PC.i867
  %2181 = inttoptr i64 %2176 to i32*
  store i32 %2177, i32* %2181
  store %struct.Memory* %loadMem_47e5ea, %struct.Memory** %MEMORY
  br label %block_.L_47e5ed

block_.L_47e5ed:                                  ; preds = %block_.L_47e984, %block_47e5e4
  %loadMem_47e5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 33
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %2184 to i64*
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 1
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %RAX.i865 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 15
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %2190 to i64*
  %2191 = load i64, i64* %RBP.i866
  %2192 = sub i64 %2191, 20
  %2193 = load i64, i64* %PC.i864
  %2194 = add i64 %2193, 3
  store i64 %2194, i64* %PC.i864
  %2195 = inttoptr i64 %2192 to i32*
  %2196 = load i32, i32* %2195
  %2197 = zext i32 %2196 to i64
  store i64 %2197, i64* %RAX.i865, align 8
  store %struct.Memory* %loadMem_47e5ed, %struct.Memory** %MEMORY
  %loadMem_47e5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2199 = getelementptr inbounds %struct.GPR, %struct.GPR* %2198, i32 0, i32 33
  %2200 = getelementptr inbounds %struct.Reg, %struct.Reg* %2199, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %2200 to i64*
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2202 = getelementptr inbounds %struct.GPR, %struct.GPR* %2201, i32 0, i32 1
  %2203 = getelementptr inbounds %struct.Reg, %struct.Reg* %2202, i32 0, i32 0
  %EAX.i862 = bitcast %union.anon* %2203 to i32*
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2205 = getelementptr inbounds %struct.GPR, %struct.GPR* %2204, i32 0, i32 15
  %2206 = getelementptr inbounds %struct.Reg, %struct.Reg* %2205, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %2206 to i64*
  %2207 = load i32, i32* %EAX.i862
  %2208 = zext i32 %2207 to i64
  %2209 = load i64, i64* %RBP.i863
  %2210 = sub i64 %2209, 40
  %2211 = load i64, i64* %PC.i861
  %2212 = add i64 %2211, 3
  store i64 %2212, i64* %PC.i861
  %2213 = inttoptr i64 %2210 to i32*
  %2214 = load i32, i32* %2213
  %2215 = sub i32 %2207, %2214
  %2216 = icmp ult i32 %2207, %2214
  %2217 = zext i1 %2216 to i8
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2217, i8* %2218, align 1
  %2219 = and i32 %2215, 255
  %2220 = call i32 @llvm.ctpop.i32(i32 %2219)
  %2221 = trunc i32 %2220 to i8
  %2222 = and i8 %2221, 1
  %2223 = xor i8 %2222, 1
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2223, i8* %2224, align 1
  %2225 = xor i32 %2214, %2207
  %2226 = xor i32 %2225, %2215
  %2227 = lshr i32 %2226, 4
  %2228 = trunc i32 %2227 to i8
  %2229 = and i8 %2228, 1
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2229, i8* %2230, align 1
  %2231 = icmp eq i32 %2215, 0
  %2232 = zext i1 %2231 to i8
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2232, i8* %2233, align 1
  %2234 = lshr i32 %2215, 31
  %2235 = trunc i32 %2234 to i8
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2235, i8* %2236, align 1
  %2237 = lshr i32 %2207, 31
  %2238 = lshr i32 %2214, 31
  %2239 = xor i32 %2238, %2237
  %2240 = xor i32 %2234, %2237
  %2241 = add i32 %2240, %2239
  %2242 = icmp eq i32 %2241, 2
  %2243 = zext i1 %2242 to i8
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2243, i8* %2244, align 1
  store %struct.Memory* %loadMem_47e5f0, %struct.Memory** %MEMORY
  %loadMem_47e5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 33
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %2247 to i64*
  %2248 = load i64, i64* %PC.i860
  %2249 = add i64 %2248, 927
  %2250 = load i64, i64* %PC.i860
  %2251 = add i64 %2250, 6
  %2252 = load i64, i64* %PC.i860
  %2253 = add i64 %2252, 6
  store i64 %2253, i64* %PC.i860
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2255 = load i8, i8* %2254, align 1
  %2256 = icmp ne i8 %2255, 0
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2258 = load i8, i8* %2257, align 1
  %2259 = icmp ne i8 %2258, 0
  %2260 = xor i1 %2256, %2259
  %2261 = xor i1 %2260, true
  %2262 = zext i1 %2261 to i8
  store i8 %2262, i8* %BRANCH_TAKEN, align 1
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2264 = select i1 %2260, i64 %2251, i64 %2249
  store i64 %2264, i64* %2263, align 8
  store %struct.Memory* %loadMem_47e5f3, %struct.Memory** %MEMORY
  %loadBr_47e5f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e5f3 = icmp eq i8 %loadBr_47e5f3, 1
  br i1 %cmpBr_47e5f3, label %block_.L_47e992, label %block_47e5f9

block_47e5f9:                                     ; preds = %block_.L_47e5ed
  %loadMem_47e5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 33
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %2267 to i64*
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 1
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %2270 to i64*
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 15
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %RBP.i859 = bitcast %union.anon* %2273 to i64*
  %2274 = load i64, i64* %RBP.i859
  %2275 = sub i64 %2274, 16
  %2276 = load i64, i64* %PC.i857
  %2277 = add i64 %2276, 4
  store i64 %2277, i64* %PC.i857
  %2278 = inttoptr i64 %2275 to i32*
  %2279 = load i32, i32* %2278
  %2280 = sext i32 %2279 to i64
  store i64 %2280, i64* %RAX.i858, align 8
  store %struct.Memory* %loadMem_47e5f9, %struct.Memory** %MEMORY
  %loadMem_47e5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 33
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %2283 to i64*
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 1
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %2286 to i64*
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 5
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %RCX.i855 = bitcast %union.anon* %2289 to i64*
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 15
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %2292 to i64*
  %2293 = load i64, i64* %RBP.i856
  %2294 = load i64, i64* %RAX.i854
  %2295 = mul i64 %2294, 4
  %2296 = add i64 %2293, -688
  %2297 = add i64 %2296, %2295
  %2298 = load i64, i64* %PC.i853
  %2299 = add i64 %2298, 7
  store i64 %2299, i64* %PC.i853
  %2300 = inttoptr i64 %2297 to i32*
  %2301 = load i32, i32* %2300
  %2302 = zext i32 %2301 to i64
  store i64 %2302, i64* %RCX.i855, align 8
  store %struct.Memory* %loadMem_47e5fd, %struct.Memory** %MEMORY
  %loadMem_47e604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 33
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %2305 to i64*
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2307 = getelementptr inbounds %struct.GPR, %struct.GPR* %2306, i32 0, i32 5
  %2308 = getelementptr inbounds %struct.Reg, %struct.Reg* %2307, i32 0, i32 0
  %ECX.i851 = bitcast %union.anon* %2308 to i32*
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 15
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %2311 to i64*
  %2312 = load i64, i64* %RBP.i852
  %2313 = sub i64 %2312, 692
  %2314 = load i32, i32* %ECX.i851
  %2315 = zext i32 %2314 to i64
  %2316 = load i64, i64* %PC.i850
  %2317 = add i64 %2316, 6
  store i64 %2317, i64* %PC.i850
  %2318 = inttoptr i64 %2313 to i32*
  store i32 %2314, i32* %2318
  store %struct.Memory* %loadMem_47e604, %struct.Memory** %MEMORY
  %loadMem_47e60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 33
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %2321 to i64*
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2323 = getelementptr inbounds %struct.GPR, %struct.GPR* %2322, i32 0, i32 1
  %2324 = getelementptr inbounds %struct.Reg, %struct.Reg* %2323, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %2324 to i64*
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2326 = getelementptr inbounds %struct.GPR, %struct.GPR* %2325, i32 0, i32 15
  %2327 = getelementptr inbounds %struct.Reg, %struct.Reg* %2326, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %2327 to i64*
  %2328 = load i64, i64* %RBP.i849
  %2329 = sub i64 %2328, 20
  %2330 = load i64, i64* %PC.i847
  %2331 = add i64 %2330, 4
  store i64 %2331, i64* %PC.i847
  %2332 = inttoptr i64 %2329 to i32*
  %2333 = load i32, i32* %2332
  %2334 = sext i32 %2333 to i64
  store i64 %2334, i64* %RAX.i848, align 8
  store %struct.Memory* %loadMem_47e60a, %struct.Memory** %MEMORY
  %loadMem_47e60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 33
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2337 to i64*
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2339 = getelementptr inbounds %struct.GPR, %struct.GPR* %2338, i32 0, i32 1
  %2340 = getelementptr inbounds %struct.Reg, %struct.Reg* %2339, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %2340 to i64*
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2342 = getelementptr inbounds %struct.GPR, %struct.GPR* %2341, i32 0, i32 5
  %2343 = getelementptr inbounds %struct.Reg, %struct.Reg* %2342, i32 0, i32 0
  %RCX.i845 = bitcast %union.anon* %2343 to i64*
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2345 = getelementptr inbounds %struct.GPR, %struct.GPR* %2344, i32 0, i32 15
  %2346 = getelementptr inbounds %struct.Reg, %struct.Reg* %2345, i32 0, i32 0
  %RBP.i846 = bitcast %union.anon* %2346 to i64*
  %2347 = load i64, i64* %RBP.i846
  %2348 = load i64, i64* %RAX.i844
  %2349 = mul i64 %2348, 4
  %2350 = add i64 %2347, -688
  %2351 = add i64 %2350, %2349
  %2352 = load i64, i64* %PC.i843
  %2353 = add i64 %2352, 7
  store i64 %2353, i64* %PC.i843
  %2354 = inttoptr i64 %2351 to i32*
  %2355 = load i32, i32* %2354
  %2356 = zext i32 %2355 to i64
  store i64 %2356, i64* %RCX.i845, align 8
  store %struct.Memory* %loadMem_47e60e, %struct.Memory** %MEMORY
  %loadMem_47e615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 5
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %ECX.i841 = bitcast %union.anon* %2362 to i32*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 15
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %2365 to i64*
  %2366 = load i64, i64* %RBP.i842
  %2367 = sub i64 %2366, 696
  %2368 = load i32, i32* %ECX.i841
  %2369 = zext i32 %2368 to i64
  %2370 = load i64, i64* %PC.i840
  %2371 = add i64 %2370, 6
  store i64 %2371, i64* %PC.i840
  %2372 = inttoptr i64 %2367 to i32*
  store i32 %2368, i32* %2372
  store %struct.Memory* %loadMem_47e615, %struct.Memory** %MEMORY
  %loadMem_47e61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 1
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 15
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %2381 to i64*
  %2382 = load i64, i64* %RBP.i839
  %2383 = sub i64 %2382, 692
  %2384 = load i64, i64* %PC.i837
  %2385 = add i64 %2384, 7
  store i64 %2385, i64* %PC.i837
  %2386 = inttoptr i64 %2383 to i32*
  %2387 = load i32, i32* %2386
  %2388 = sext i32 %2387 to i64
  store i64 %2388, i64* %RAX.i838, align 8
  store %struct.Memory* %loadMem_47e61b, %struct.Memory** %MEMORY
  %loadMem_47e622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 33
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %2391 to i64*
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 1
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %RAX.i835 = bitcast %union.anon* %2394 to i64*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 5
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %RCX.i836 = bitcast %union.anon* %2397 to i64*
  %2398 = load i64, i64* %RAX.i835
  %2399 = add i64 %2398, 12099168
  %2400 = load i64, i64* %PC.i834
  %2401 = add i64 %2400, 8
  store i64 %2401, i64* %PC.i834
  %2402 = inttoptr i64 %2399 to i8*
  %2403 = load i8, i8* %2402
  %2404 = zext i8 %2403 to i64
  store i64 %2404, i64* %RCX.i836, align 8
  store %struct.Memory* %loadMem_47e622, %struct.Memory** %MEMORY
  %loadMem_47e62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 33
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %2407 to i64*
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 1
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %2410 to i64*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 15
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %RBP.i833 = bitcast %union.anon* %2413 to i64*
  %2414 = load i64, i64* %RBP.i833
  %2415 = sub i64 %2414, 696
  %2416 = load i64, i64* %PC.i831
  %2417 = add i64 %2416, 7
  store i64 %2417, i64* %PC.i831
  %2418 = inttoptr i64 %2415 to i32*
  %2419 = load i32, i32* %2418
  %2420 = sext i32 %2419 to i64
  store i64 %2420, i64* %RAX.i832, align 8
  store %struct.Memory* %loadMem_47e62a, %struct.Memory** %MEMORY
  %loadMem_47e631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 33
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 1
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RAX.i829 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 7
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RDX.i830 = bitcast %union.anon* %2429 to i64*
  %2430 = load i64, i64* %RAX.i829
  %2431 = add i64 %2430, 12099168
  %2432 = load i64, i64* %PC.i828
  %2433 = add i64 %2432, 8
  store i64 %2433, i64* %PC.i828
  %2434 = inttoptr i64 %2431 to i8*
  %2435 = load i8, i8* %2434
  %2436 = zext i8 %2435 to i64
  store i64 %2436, i64* %RDX.i830, align 8
  store %struct.Memory* %loadMem_47e631, %struct.Memory** %MEMORY
  %loadMem_47e639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 33
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 5
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %ECX.i826 = bitcast %union.anon* %2442 to i32*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 7
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %EDX.i827 = bitcast %union.anon* %2445 to i32*
  %2446 = load i32, i32* %ECX.i826
  %2447 = zext i32 %2446 to i64
  %2448 = load i32, i32* %EDX.i827
  %2449 = zext i32 %2448 to i64
  %2450 = load i64, i64* %PC.i825
  %2451 = add i64 %2450, 2
  store i64 %2451, i64* %PC.i825
  %2452 = sub i32 %2446, %2448
  %2453 = icmp ult i32 %2446, %2448
  %2454 = zext i1 %2453 to i8
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2454, i8* %2455, align 1
  %2456 = and i32 %2452, 255
  %2457 = call i32 @llvm.ctpop.i32(i32 %2456)
  %2458 = trunc i32 %2457 to i8
  %2459 = and i8 %2458, 1
  %2460 = xor i8 %2459, 1
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2460, i8* %2461, align 1
  %2462 = xor i64 %2449, %2447
  %2463 = trunc i64 %2462 to i32
  %2464 = xor i32 %2463, %2452
  %2465 = lshr i32 %2464, 4
  %2466 = trunc i32 %2465 to i8
  %2467 = and i8 %2466, 1
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2467, i8* %2468, align 1
  %2469 = icmp eq i32 %2452, 0
  %2470 = zext i1 %2469 to i8
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2470, i8* %2471, align 1
  %2472 = lshr i32 %2452, 31
  %2473 = trunc i32 %2472 to i8
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2473, i8* %2474, align 1
  %2475 = lshr i32 %2446, 31
  %2476 = lshr i32 %2448, 31
  %2477 = xor i32 %2476, %2475
  %2478 = xor i32 %2472, %2475
  %2479 = add i32 %2478, %2477
  %2480 = icmp eq i32 %2479, 2
  %2481 = zext i1 %2480 to i8
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2481, i8* %2482, align 1
  store %struct.Memory* %loadMem_47e639, %struct.Memory** %MEMORY
  %loadMem_47e63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 33
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %2485 to i64*
  %2486 = load i64, i64* %PC.i824
  %2487 = add i64 %2486, 11
  %2488 = load i64, i64* %PC.i824
  %2489 = add i64 %2488, 6
  %2490 = load i64, i64* %PC.i824
  %2491 = add i64 %2490, 6
  store i64 %2491, i64* %PC.i824
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2493 = load i8, i8* %2492, align 1
  store i8 %2493, i8* %BRANCH_TAKEN, align 1
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2495 = icmp ne i8 %2493, 0
  %2496 = select i1 %2495, i64 %2487, i64 %2489
  store i64 %2496, i64* %2494, align 8
  store %struct.Memory* %loadMem_47e63b, %struct.Memory** %MEMORY
  %loadBr_47e63b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e63b = icmp eq i8 %loadBr_47e63b, 1
  br i1 %cmpBr_47e63b, label %block_.L_47e646, label %block_47e641

block_47e641:                                     ; preds = %block_47e5f9
  %loadMem_47e641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 33
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %2499 to i64*
  %2500 = load i64, i64* %PC.i823
  %2501 = add i64 %2500, 835
  %2502 = load i64, i64* %PC.i823
  %2503 = add i64 %2502, 5
  store i64 %2503, i64* %PC.i823
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2501, i64* %2504, align 8
  store %struct.Memory* %loadMem_47e641, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e646:                                  ; preds = %block_47e5f9
  %loadMem_47e646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 15
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %2510 to i64*
  %2511 = load i64, i64* %RBP.i822
  %2512 = sub i64 %2511, 32
  %2513 = load i64, i64* %PC.i821
  %2514 = add i64 %2513, 4
  store i64 %2514, i64* %PC.i821
  %2515 = inttoptr i64 %2512 to i32*
  %2516 = load i32, i32* %2515
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2517, align 1
  %2518 = and i32 %2516, 255
  %2519 = call i32 @llvm.ctpop.i32(i32 %2518)
  %2520 = trunc i32 %2519 to i8
  %2521 = and i8 %2520, 1
  %2522 = xor i8 %2521, 1
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2522, i8* %2523, align 1
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2524, align 1
  %2525 = icmp eq i32 %2516, 0
  %2526 = zext i1 %2525 to i8
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2526, i8* %2527, align 1
  %2528 = lshr i32 %2516, 31
  %2529 = trunc i32 %2528 to i8
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2529, i8* %2530, align 1
  %2531 = lshr i32 %2516, 31
  %2532 = xor i32 %2528, %2531
  %2533 = add i32 %2532, %2531
  %2534 = icmp eq i32 %2533, 2
  %2535 = zext i1 %2534 to i8
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2535, i8* %2536, align 1
  store %struct.Memory* %loadMem_47e646, %struct.Memory** %MEMORY
  %loadMem_47e64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 33
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %2539 to i64*
  %2540 = load i64, i64* %PC.i820
  %2541 = add i64 %2540, 76
  %2542 = load i64, i64* %PC.i820
  %2543 = add i64 %2542, 6
  %2544 = load i64, i64* %PC.i820
  %2545 = add i64 %2544, 6
  store i64 %2545, i64* %PC.i820
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2547 = load i8, i8* %2546, align 1
  store i8 %2547, i8* %BRANCH_TAKEN, align 1
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2549 = icmp ne i8 %2547, 0
  %2550 = select i1 %2549, i64 %2541, i64 %2543
  store i64 %2550, i64* %2548, align 8
  store %struct.Memory* %loadMem_47e64a, %struct.Memory** %MEMORY
  %loadBr_47e64a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e64a = icmp eq i8 %loadBr_47e64a, 1
  br i1 %cmpBr_47e64a, label %block_.L_47e696, label %block_47e650

block_47e650:                                     ; preds = %block_.L_47e646
  %loadMem_47e650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 33
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %2553 to i64*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 1
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %RAX.i818 = bitcast %union.anon* %2556 to i64*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 15
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %RBP.i819 = bitcast %union.anon* %2559 to i64*
  %2560 = load i64, i64* %RBP.i819
  %2561 = sub i64 %2560, 692
  %2562 = load i64, i64* %PC.i817
  %2563 = add i64 %2562, 7
  store i64 %2563, i64* %PC.i817
  %2564 = inttoptr i64 %2561 to i32*
  %2565 = load i32, i32* %2564
  %2566 = sext i32 %2565 to i64
  store i64 %2566, i64* %RAX.i818, align 8
  store %struct.Memory* %loadMem_47e650, %struct.Memory** %MEMORY
  %loadMem_47e657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2568 = getelementptr inbounds %struct.GPR, %struct.GPR* %2567, i32 0, i32 33
  %2569 = getelementptr inbounds %struct.Reg, %struct.Reg* %2568, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %2569 to i64*
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 1
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 5
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %RCX.i816 = bitcast %union.anon* %2575 to i64*
  %2576 = load i64, i64* %RAX.i815
  %2577 = add i64 %2576, 12099168
  %2578 = load i64, i64* %PC.i814
  %2579 = add i64 %2578, 8
  store i64 %2579, i64* %PC.i814
  %2580 = inttoptr i64 %2577 to i8*
  %2581 = load i8, i8* %2580
  %2582 = zext i8 %2581 to i64
  store i64 %2582, i64* %RCX.i816, align 8
  store %struct.Memory* %loadMem_47e657, %struct.Memory** %MEMORY
  %loadMem_47e65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 33
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %2585 to i64*
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 1
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 15
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %2591 to i64*
  %2592 = load i64, i64* %RBP.i813
  %2593 = sub i64 %2592, 24
  %2594 = load i64, i64* %PC.i811
  %2595 = add i64 %2594, 4
  store i64 %2595, i64* %PC.i811
  %2596 = inttoptr i64 %2593 to i32*
  %2597 = load i32, i32* %2596
  %2598 = sext i32 %2597 to i64
  store i64 %2598, i64* %RAX.i812, align 8
  store %struct.Memory* %loadMem_47e65f, %struct.Memory** %MEMORY
  %loadMem_47e663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 33
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %2601 to i64*
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 1
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 7
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %RDX.i810 = bitcast %union.anon* %2607 to i64*
  %2608 = load i64, i64* %RAX.i809
  %2609 = add i64 %2608, 12099168
  %2610 = load i64, i64* %PC.i808
  %2611 = add i64 %2610, 8
  store i64 %2611, i64* %PC.i808
  %2612 = inttoptr i64 %2609 to i8*
  %2613 = load i8, i8* %2612
  %2614 = zext i8 %2613 to i64
  store i64 %2614, i64* %RDX.i810, align 8
  store %struct.Memory* %loadMem_47e663, %struct.Memory** %MEMORY
  %loadMem_47e66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %2617 to i64*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 5
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %ECX.i806 = bitcast %union.anon* %2620 to i32*
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 7
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %EDX.i807 = bitcast %union.anon* %2623 to i32*
  %2624 = load i32, i32* %ECX.i806
  %2625 = zext i32 %2624 to i64
  %2626 = load i32, i32* %EDX.i807
  %2627 = zext i32 %2626 to i64
  %2628 = load i64, i64* %PC.i805
  %2629 = add i64 %2628, 2
  store i64 %2629, i64* %PC.i805
  %2630 = sub i32 %2624, %2626
  %2631 = icmp ult i32 %2624, %2626
  %2632 = zext i1 %2631 to i8
  %2633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2632, i8* %2633, align 1
  %2634 = and i32 %2630, 255
  %2635 = call i32 @llvm.ctpop.i32(i32 %2634)
  %2636 = trunc i32 %2635 to i8
  %2637 = and i8 %2636, 1
  %2638 = xor i8 %2637, 1
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2638, i8* %2639, align 1
  %2640 = xor i64 %2627, %2625
  %2641 = trunc i64 %2640 to i32
  %2642 = xor i32 %2641, %2630
  %2643 = lshr i32 %2642, 4
  %2644 = trunc i32 %2643 to i8
  %2645 = and i8 %2644, 1
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2645, i8* %2646, align 1
  %2647 = icmp eq i32 %2630, 0
  %2648 = zext i1 %2647 to i8
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2648, i8* %2649, align 1
  %2650 = lshr i32 %2630, 31
  %2651 = trunc i32 %2650 to i8
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2651, i8* %2652, align 1
  %2653 = lshr i32 %2624, 31
  %2654 = lshr i32 %2626, 31
  %2655 = xor i32 %2654, %2653
  %2656 = xor i32 %2650, %2653
  %2657 = add i32 %2656, %2655
  %2658 = icmp eq i32 %2657, 2
  %2659 = zext i1 %2658 to i8
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2659, i8* %2660, align 1
  store %struct.Memory* %loadMem_47e66b, %struct.Memory** %MEMORY
  %loadMem_47e66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 33
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %2663 to i64*
  %2664 = load i64, i64* %PC.i804
  %2665 = add i64 %2664, 41
  %2666 = load i64, i64* %PC.i804
  %2667 = add i64 %2666, 6
  %2668 = load i64, i64* %PC.i804
  %2669 = add i64 %2668, 6
  store i64 %2669, i64* %PC.i804
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2671 = load i8, i8* %2670, align 1
  store i8 %2671, i8* %BRANCH_TAKEN, align 1
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2673 = icmp ne i8 %2671, 0
  %2674 = select i1 %2673, i64 %2665, i64 %2667
  store i64 %2674, i64* %2672, align 8
  store %struct.Memory* %loadMem_47e66d, %struct.Memory** %MEMORY
  %loadBr_47e66d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e66d = icmp eq i8 %loadBr_47e66d, 1
  br i1 %cmpBr_47e66d, label %block_.L_47e696, label %block_47e673

block_47e673:                                     ; preds = %block_47e650
  %loadMem_47e673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 33
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %2677 to i64*
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 1
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %EAX.i802 = bitcast %union.anon* %2680 to i32*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 1
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %2683 to i64*
  %2684 = load i64, i64* %RAX.i803
  %2685 = load i32, i32* %EAX.i802
  %2686 = zext i32 %2685 to i64
  %2687 = load i64, i64* %PC.i801
  %2688 = add i64 %2687, 2
  store i64 %2688, i64* %PC.i801
  %2689 = xor i64 %2686, %2684
  %2690 = trunc i64 %2689 to i32
  %2691 = and i64 %2689, 4294967295
  store i64 %2691, i64* %RAX.i803, align 8
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2692, align 1
  %2693 = and i32 %2690, 255
  %2694 = call i32 @llvm.ctpop.i32(i32 %2693)
  %2695 = trunc i32 %2694 to i8
  %2696 = and i8 %2695, 1
  %2697 = xor i8 %2696, 1
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2697, i8* %2698, align 1
  %2699 = icmp eq i32 %2690, 0
  %2700 = zext i1 %2699 to i8
  %2701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2700, i8* %2701, align 1
  %2702 = lshr i32 %2690, 31
  %2703 = trunc i32 %2702 to i8
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2703, i8* %2704, align 1
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2705, align 1
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2706, align 1
  store %struct.Memory* %loadMem_47e673, %struct.Memory** %MEMORY
  %loadMem_47e675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 33
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %2709 to i64*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2711 = getelementptr inbounds %struct.GPR, %struct.GPR* %2710, i32 0, i32 1
  %2712 = getelementptr inbounds %struct.Reg, %struct.Reg* %2711, i32 0, i32 0
  %EAX.i799 = bitcast %union.anon* %2712 to i32*
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2714 = getelementptr inbounds %struct.GPR, %struct.GPR* %2713, i32 0, i32 7
  %2715 = getelementptr inbounds %struct.Reg, %struct.Reg* %2714, i32 0, i32 0
  %RDX.i800 = bitcast %union.anon* %2715 to i64*
  %2716 = load i32, i32* %EAX.i799
  %2717 = zext i32 %2716 to i64
  %2718 = load i64, i64* %PC.i798
  %2719 = add i64 %2718, 2
  store i64 %2719, i64* %PC.i798
  %2720 = and i64 %2717, 4294967295
  store i64 %2720, i64* %RDX.i800, align 8
  store %struct.Memory* %loadMem_47e675, %struct.Memory** %MEMORY
  %loadMem_47e677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2722 = getelementptr inbounds %struct.GPR, %struct.GPR* %2721, i32 0, i32 33
  %2723 = getelementptr inbounds %struct.Reg, %struct.Reg* %2722, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %2723 to i64*
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 11
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %RDI.i796 = bitcast %union.anon* %2726 to i64*
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 15
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %2729 to i64*
  %2730 = load i64, i64* %RBP.i797
  %2731 = sub i64 %2730, 692
  %2732 = load i64, i64* %PC.i795
  %2733 = add i64 %2732, 6
  store i64 %2733, i64* %PC.i795
  %2734 = inttoptr i64 %2731 to i32*
  %2735 = load i32, i32* %2734
  %2736 = zext i32 %2735 to i64
  store i64 %2736, i64* %RDI.i796, align 8
  store %struct.Memory* %loadMem_47e677, %struct.Memory** %MEMORY
  %loadMem_47e67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 33
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %2739 to i64*
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2741 = getelementptr inbounds %struct.GPR, %struct.GPR* %2740, i32 0, i32 9
  %2742 = getelementptr inbounds %struct.Reg, %struct.Reg* %2741, i32 0, i32 0
  %RSI.i793 = bitcast %union.anon* %2742 to i64*
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 15
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %2745 to i64*
  %2746 = load i64, i64* %RBP.i794
  %2747 = sub i64 %2746, 696
  %2748 = load i64, i64* %PC.i792
  %2749 = add i64 %2748, 6
  store i64 %2749, i64* %PC.i792
  %2750 = inttoptr i64 %2747 to i32*
  %2751 = load i32, i32* %2750
  %2752 = zext i32 %2751 to i64
  store i64 %2752, i64* %RSI.i793, align 8
  store %struct.Memory* %loadMem_47e67d, %struct.Memory** %MEMORY
  %loadMem1_47e683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 33
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %2755 to i64*
  %2756 = load i64, i64* %PC.i791
  %2757 = add i64 %2756, -134163
  %2758 = load i64, i64* %PC.i791
  %2759 = add i64 %2758, 5
  %2760 = load i64, i64* %PC.i791
  %2761 = add i64 %2760, 5
  store i64 %2761, i64* %PC.i791
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2763 = load i64, i64* %2762, align 8
  %2764 = add i64 %2763, -8
  %2765 = inttoptr i64 %2764 to i64*
  store i64 %2759, i64* %2765
  store i64 %2764, i64* %2762, align 8
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2757, i64* %2766, align 8
  store %struct.Memory* %loadMem1_47e683, %struct.Memory** %MEMORY
  %loadMem2_47e683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e683 = load i64, i64* %3
  %call2_47e683 = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47e683, %struct.Memory* %loadMem2_47e683)
  store %struct.Memory* %call2_47e683, %struct.Memory** %MEMORY
  %loadMem_47e688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 33
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %2769 to i64*
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 1
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %EAX.i790 = bitcast %union.anon* %2772 to i32*
  %2773 = load i32, i32* %EAX.i790
  %2774 = zext i32 %2773 to i64
  %2775 = load i64, i64* %PC.i789
  %2776 = add i64 %2775, 3
  store i64 %2776, i64* %PC.i789
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2777, align 1
  %2778 = and i32 %2773, 255
  %2779 = call i32 @llvm.ctpop.i32(i32 %2778)
  %2780 = trunc i32 %2779 to i8
  %2781 = and i8 %2780, 1
  %2782 = xor i8 %2781, 1
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2782, i8* %2783, align 1
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2784, align 1
  %2785 = icmp eq i32 %2773, 0
  %2786 = zext i1 %2785 to i8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2786, i8* %2787, align 1
  %2788 = lshr i32 %2773, 31
  %2789 = trunc i32 %2788 to i8
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2789, i8* %2790, align 1
  %2791 = lshr i32 %2773, 31
  %2792 = xor i32 %2788, %2791
  %2793 = add i32 %2792, %2791
  %2794 = icmp eq i32 %2793, 2
  %2795 = zext i1 %2794 to i8
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2795, i8* %2796, align 1
  store %struct.Memory* %loadMem_47e688, %struct.Memory** %MEMORY
  %loadMem_47e68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %PC.i788
  %2801 = add i64 %2800, 11
  %2802 = load i64, i64* %PC.i788
  %2803 = add i64 %2802, 6
  %2804 = load i64, i64* %PC.i788
  %2805 = add i64 %2804, 6
  store i64 %2805, i64* %PC.i788
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2807 = load i8, i8* %2806, align 1
  %2808 = icmp eq i8 %2807, 0
  %2809 = zext i1 %2808 to i8
  store i8 %2809, i8* %BRANCH_TAKEN, align 1
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2811 = select i1 %2808, i64 %2801, i64 %2803
  store i64 %2811, i64* %2810, align 8
  store %struct.Memory* %loadMem_47e68b, %struct.Memory** %MEMORY
  %loadBr_47e68b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e68b = icmp eq i8 %loadBr_47e68b, 1
  br i1 %cmpBr_47e68b, label %block_.L_47e696, label %block_47e691

block_47e691:                                     ; preds = %block_47e673
  %loadMem_47e691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %2814 to i64*
  %2815 = load i64, i64* %PC.i787
  %2816 = add i64 %2815, 755
  %2817 = load i64, i64* %PC.i787
  %2818 = add i64 %2817, 5
  store i64 %2818, i64* %PC.i787
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2816, i64* %2819, align 8
  store %struct.Memory* %loadMem_47e691, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e696:                                  ; preds = %block_47e673, %block_47e650, %block_.L_47e646
  %loadMem_47e696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 33
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %2822 to i64*
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 15
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %2825 to i64*
  %2826 = load i64, i64* %RBP.i786
  %2827 = sub i64 %2826, 32
  %2828 = load i64, i64* %PC.i785
  %2829 = add i64 %2828, 4
  store i64 %2829, i64* %PC.i785
  %2830 = inttoptr i64 %2827 to i32*
  %2831 = load i32, i32* %2830
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2832, align 1
  %2833 = and i32 %2831, 255
  %2834 = call i32 @llvm.ctpop.i32(i32 %2833)
  %2835 = trunc i32 %2834 to i8
  %2836 = and i8 %2835, 1
  %2837 = xor i8 %2836, 1
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2837, i8* %2838, align 1
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2839, align 1
  %2840 = icmp eq i32 %2831, 0
  %2841 = zext i1 %2840 to i8
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2841, i8* %2842, align 1
  %2843 = lshr i32 %2831, 31
  %2844 = trunc i32 %2843 to i8
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2844, i8* %2845, align 1
  %2846 = lshr i32 %2831, 31
  %2847 = xor i32 %2843, %2846
  %2848 = add i32 %2847, %2846
  %2849 = icmp eq i32 %2848, 2
  %2850 = zext i1 %2849 to i8
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2850, i8* %2851, align 1
  store %struct.Memory* %loadMem_47e696, %struct.Memory** %MEMORY
  %loadMem_47e69a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %2854 to i64*
  %2855 = load i64, i64* %PC.i784
  %2856 = add i64 %2855, 76
  %2857 = load i64, i64* %PC.i784
  %2858 = add i64 %2857, 6
  %2859 = load i64, i64* %PC.i784
  %2860 = add i64 %2859, 6
  store i64 %2860, i64* %PC.i784
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2862 = load i8, i8* %2861, align 1
  %2863 = icmp eq i8 %2862, 0
  %2864 = zext i1 %2863 to i8
  store i8 %2864, i8* %BRANCH_TAKEN, align 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2866 = select i1 %2863, i64 %2856, i64 %2858
  store i64 %2866, i64* %2865, align 8
  store %struct.Memory* %loadMem_47e69a, %struct.Memory** %MEMORY
  %loadBr_47e69a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e69a = icmp eq i8 %loadBr_47e69a, 1
  br i1 %cmpBr_47e69a, label %block_.L_47e6e6, label %block_47e6a0

block_47e6a0:                                     ; preds = %block_.L_47e696
  %loadMem_47e6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 33
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %2869 to i64*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 1
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %2872 to i64*
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2874 = getelementptr inbounds %struct.GPR, %struct.GPR* %2873, i32 0, i32 15
  %2875 = getelementptr inbounds %struct.Reg, %struct.Reg* %2874, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %2875 to i64*
  %2876 = load i64, i64* %RBP.i783
  %2877 = sub i64 %2876, 692
  %2878 = load i64, i64* %PC.i781
  %2879 = add i64 %2878, 7
  store i64 %2879, i64* %PC.i781
  %2880 = inttoptr i64 %2877 to i32*
  %2881 = load i32, i32* %2880
  %2882 = sext i32 %2881 to i64
  store i64 %2882, i64* %RAX.i782, align 8
  store %struct.Memory* %loadMem_47e6a0, %struct.Memory** %MEMORY
  %loadMem_47e6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2884 = getelementptr inbounds %struct.GPR, %struct.GPR* %2883, i32 0, i32 33
  %2885 = getelementptr inbounds %struct.Reg, %struct.Reg* %2884, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %2885 to i64*
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2887 = getelementptr inbounds %struct.GPR, %struct.GPR* %2886, i32 0, i32 1
  %2888 = getelementptr inbounds %struct.Reg, %struct.Reg* %2887, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %2888 to i64*
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 5
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %RCX.i780 = bitcast %union.anon* %2891 to i64*
  %2892 = load i64, i64* %RAX.i779
  %2893 = add i64 %2892, 12099168
  %2894 = load i64, i64* %PC.i778
  %2895 = add i64 %2894, 8
  store i64 %2895, i64* %PC.i778
  %2896 = inttoptr i64 %2893 to i8*
  %2897 = load i8, i8* %2896
  %2898 = zext i8 %2897 to i64
  store i64 %2898, i64* %RCX.i780, align 8
  store %struct.Memory* %loadMem_47e6a7, %struct.Memory** %MEMORY
  %loadMem_47e6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 33
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 1
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %2904 to i64*
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 15
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %2907 to i64*
  %2908 = load i64, i64* %RBP.i777
  %2909 = sub i64 %2908, 24
  %2910 = load i64, i64* %PC.i775
  %2911 = add i64 %2910, 4
  store i64 %2911, i64* %PC.i775
  %2912 = inttoptr i64 %2909 to i32*
  %2913 = load i32, i32* %2912
  %2914 = sext i32 %2913 to i64
  store i64 %2914, i64* %RAX.i776, align 8
  store %struct.Memory* %loadMem_47e6af, %struct.Memory** %MEMORY
  %loadMem_47e6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 33
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %2917 to i64*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 1
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %2920 to i64*
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 7
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %RDX.i774 = bitcast %union.anon* %2923 to i64*
  %2924 = load i64, i64* %RAX.i773
  %2925 = add i64 %2924, 12099168
  %2926 = load i64, i64* %PC.i772
  %2927 = add i64 %2926, 8
  store i64 %2927, i64* %PC.i772
  %2928 = inttoptr i64 %2925 to i8*
  %2929 = load i8, i8* %2928
  %2930 = zext i8 %2929 to i64
  store i64 %2930, i64* %RDX.i774, align 8
  store %struct.Memory* %loadMem_47e6b3, %struct.Memory** %MEMORY
  %loadMem_47e6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 33
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %2933 to i64*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 5
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %ECX.i770 = bitcast %union.anon* %2936 to i32*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 7
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %EDX.i771 = bitcast %union.anon* %2939 to i32*
  %2940 = load i32, i32* %ECX.i770
  %2941 = zext i32 %2940 to i64
  %2942 = load i32, i32* %EDX.i771
  %2943 = zext i32 %2942 to i64
  %2944 = load i64, i64* %PC.i769
  %2945 = add i64 %2944, 2
  store i64 %2945, i64* %PC.i769
  %2946 = sub i32 %2940, %2942
  %2947 = icmp ult i32 %2940, %2942
  %2948 = zext i1 %2947 to i8
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2948, i8* %2949, align 1
  %2950 = and i32 %2946, 255
  %2951 = call i32 @llvm.ctpop.i32(i32 %2950)
  %2952 = trunc i32 %2951 to i8
  %2953 = and i8 %2952, 1
  %2954 = xor i8 %2953, 1
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2954, i8* %2955, align 1
  %2956 = xor i64 %2943, %2941
  %2957 = trunc i64 %2956 to i32
  %2958 = xor i32 %2957, %2946
  %2959 = lshr i32 %2958, 4
  %2960 = trunc i32 %2959 to i8
  %2961 = and i8 %2960, 1
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2961, i8* %2962, align 1
  %2963 = icmp eq i32 %2946, 0
  %2964 = zext i1 %2963 to i8
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2964, i8* %2965, align 1
  %2966 = lshr i32 %2946, 31
  %2967 = trunc i32 %2966 to i8
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2967, i8* %2968, align 1
  %2969 = lshr i32 %2940, 31
  %2970 = lshr i32 %2942, 31
  %2971 = xor i32 %2970, %2969
  %2972 = xor i32 %2966, %2969
  %2973 = add i32 %2972, %2971
  %2974 = icmp eq i32 %2973, 2
  %2975 = zext i1 %2974 to i8
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2975, i8* %2976, align 1
  store %struct.Memory* %loadMem_47e6bb, %struct.Memory** %MEMORY
  %loadMem_47e6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2978 = getelementptr inbounds %struct.GPR, %struct.GPR* %2977, i32 0, i32 33
  %2979 = getelementptr inbounds %struct.Reg, %struct.Reg* %2978, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %2979 to i64*
  %2980 = load i64, i64* %PC.i768
  %2981 = add i64 %2980, 41
  %2982 = load i64, i64* %PC.i768
  %2983 = add i64 %2982, 6
  %2984 = load i64, i64* %PC.i768
  %2985 = add i64 %2984, 6
  store i64 %2985, i64* %PC.i768
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2987 = load i8, i8* %2986, align 1
  store i8 %2987, i8* %BRANCH_TAKEN, align 1
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2989 = icmp ne i8 %2987, 0
  %2990 = select i1 %2989, i64 %2981, i64 %2983
  store i64 %2990, i64* %2988, align 8
  store %struct.Memory* %loadMem_47e6bd, %struct.Memory** %MEMORY
  %loadBr_47e6bd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e6bd = icmp eq i8 %loadBr_47e6bd, 1
  br i1 %cmpBr_47e6bd, label %block_.L_47e6e6, label %block_47e6c3

block_47e6c3:                                     ; preds = %block_47e6a0
  %loadMem_47e6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 33
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %2993 to i64*
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 1
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %EAX.i766 = bitcast %union.anon* %2996 to i32*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 1
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %2999 to i64*
  %3000 = load i64, i64* %RAX.i767
  %3001 = load i32, i32* %EAX.i766
  %3002 = zext i32 %3001 to i64
  %3003 = load i64, i64* %PC.i765
  %3004 = add i64 %3003, 2
  store i64 %3004, i64* %PC.i765
  %3005 = xor i64 %3002, %3000
  %3006 = trunc i64 %3005 to i32
  %3007 = and i64 %3005, 4294967295
  store i64 %3007, i64* %RAX.i767, align 8
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3008, align 1
  %3009 = and i32 %3006, 255
  %3010 = call i32 @llvm.ctpop.i32(i32 %3009)
  %3011 = trunc i32 %3010 to i8
  %3012 = and i8 %3011, 1
  %3013 = xor i8 %3012, 1
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3013, i8* %3014, align 1
  %3015 = icmp eq i32 %3006, 0
  %3016 = zext i1 %3015 to i8
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3016, i8* %3017, align 1
  %3018 = lshr i32 %3006, 31
  %3019 = trunc i32 %3018 to i8
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3019, i8* %3020, align 1
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3021, align 1
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3022, align 1
  store %struct.Memory* %loadMem_47e6c3, %struct.Memory** %MEMORY
  %loadMem_47e6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 33
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %3025 to i64*
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 1
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %EAX.i763 = bitcast %union.anon* %3028 to i32*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 7
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %RDX.i764 = bitcast %union.anon* %3031 to i64*
  %3032 = load i32, i32* %EAX.i763
  %3033 = zext i32 %3032 to i64
  %3034 = load i64, i64* %PC.i762
  %3035 = add i64 %3034, 2
  store i64 %3035, i64* %PC.i762
  %3036 = and i64 %3033, 4294967295
  store i64 %3036, i64* %RDX.i764, align 8
  store %struct.Memory* %loadMem_47e6c5, %struct.Memory** %MEMORY
  %loadMem_47e6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 33
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %3039 to i64*
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 11
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %RDI.i760 = bitcast %union.anon* %3042 to i64*
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3044 = getelementptr inbounds %struct.GPR, %struct.GPR* %3043, i32 0, i32 15
  %3045 = getelementptr inbounds %struct.Reg, %struct.Reg* %3044, i32 0, i32 0
  %RBP.i761 = bitcast %union.anon* %3045 to i64*
  %3046 = load i64, i64* %RBP.i761
  %3047 = sub i64 %3046, 692
  %3048 = load i64, i64* %PC.i759
  %3049 = add i64 %3048, 6
  store i64 %3049, i64* %PC.i759
  %3050 = inttoptr i64 %3047 to i32*
  %3051 = load i32, i32* %3050
  %3052 = zext i32 %3051 to i64
  store i64 %3052, i64* %RDI.i760, align 8
  store %struct.Memory* %loadMem_47e6c7, %struct.Memory** %MEMORY
  %loadMem_47e6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 33
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %3055 to i64*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 9
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %RSI.i757 = bitcast %union.anon* %3058 to i64*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 15
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %RBP.i758 = bitcast %union.anon* %3061 to i64*
  %3062 = load i64, i64* %RBP.i758
  %3063 = sub i64 %3062, 696
  %3064 = load i64, i64* %PC.i756
  %3065 = add i64 %3064, 6
  store i64 %3065, i64* %PC.i756
  %3066 = inttoptr i64 %3063 to i32*
  %3067 = load i32, i32* %3066
  %3068 = zext i32 %3067 to i64
  store i64 %3068, i64* %RSI.i757, align 8
  store %struct.Memory* %loadMem_47e6cd, %struct.Memory** %MEMORY
  %loadMem1_47e6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 33
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %PC.i755
  %3073 = add i64 %3072, -179587
  %3074 = load i64, i64* %PC.i755
  %3075 = add i64 %3074, 5
  %3076 = load i64, i64* %PC.i755
  %3077 = add i64 %3076, 5
  store i64 %3077, i64* %PC.i755
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3079 = load i64, i64* %3078, align 8
  %3080 = add i64 %3079, -8
  %3081 = inttoptr i64 %3080 to i64*
  store i64 %3075, i64* %3081
  store i64 %3080, i64* %3078, align 8
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3073, i64* %3082, align 8
  store %struct.Memory* %loadMem1_47e6d3, %struct.Memory** %MEMORY
  %loadMem2_47e6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e6d3 = load i64, i64* %3
  %call2_47e6d3 = call %struct.Memory* @sub_452950.string_connect(%struct.State* %0, i64 %loadPC_47e6d3, %struct.Memory* %loadMem2_47e6d3)
  store %struct.Memory* %call2_47e6d3, %struct.Memory** %MEMORY
  %loadMem_47e6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 33
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3085 to i64*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 1
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %EAX.i754 = bitcast %union.anon* %3088 to i32*
  %3089 = load i32, i32* %EAX.i754
  %3090 = zext i32 %3089 to i64
  %3091 = load i64, i64* %PC.i753
  %3092 = add i64 %3091, 3
  store i64 %3092, i64* %PC.i753
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3093, align 1
  %3094 = and i32 %3089, 255
  %3095 = call i32 @llvm.ctpop.i32(i32 %3094)
  %3096 = trunc i32 %3095 to i8
  %3097 = and i8 %3096, 1
  %3098 = xor i8 %3097, 1
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3098, i8* %3099, align 1
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3100, align 1
  %3101 = icmp eq i32 %3089, 0
  %3102 = zext i1 %3101 to i8
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3102, i8* %3103, align 1
  %3104 = lshr i32 %3089, 31
  %3105 = trunc i32 %3104 to i8
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3105, i8* %3106, align 1
  %3107 = lshr i32 %3089, 31
  %3108 = xor i32 %3104, %3107
  %3109 = add i32 %3108, %3107
  %3110 = icmp eq i32 %3109, 2
  %3111 = zext i1 %3110 to i8
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3111, i8* %3112, align 1
  store %struct.Memory* %loadMem_47e6d8, %struct.Memory** %MEMORY
  %loadMem_47e6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 33
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %3115 to i64*
  %3116 = load i64, i64* %PC.i752
  %3117 = add i64 %3116, 11
  %3118 = load i64, i64* %PC.i752
  %3119 = add i64 %3118, 6
  %3120 = load i64, i64* %PC.i752
  %3121 = add i64 %3120, 6
  store i64 %3121, i64* %PC.i752
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3123 = load i8, i8* %3122, align 1
  %3124 = icmp eq i8 %3123, 0
  %3125 = zext i1 %3124 to i8
  store i8 %3125, i8* %BRANCH_TAKEN, align 1
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3127 = select i1 %3124, i64 %3117, i64 %3119
  store i64 %3127, i64* %3126, align 8
  store %struct.Memory* %loadMem_47e6db, %struct.Memory** %MEMORY
  %loadBr_47e6db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e6db = icmp eq i8 %loadBr_47e6db, 1
  br i1 %cmpBr_47e6db, label %block_.L_47e6e6, label %block_47e6e1

block_47e6e1:                                     ; preds = %block_47e6c3
  %loadMem_47e6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 33
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %3130 to i64*
  %3131 = load i64, i64* %PC.i751
  %3132 = add i64 %3131, 675
  %3133 = load i64, i64* %PC.i751
  %3134 = add i64 %3133, 5
  store i64 %3134, i64* %PC.i751
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3132, i64* %3135, align 8
  store %struct.Memory* %loadMem_47e6e1, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e6e6:                                  ; preds = %block_47e6c3, %block_47e6a0, %block_.L_47e696
  %loadMem_47e6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 15
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %3141 to i64*
  %3142 = load i64, i64* %RBP.i750
  %3143 = sub i64 %3142, 32
  %3144 = load i64, i64* %PC.i749
  %3145 = add i64 %3144, 4
  store i64 %3145, i64* %PC.i749
  %3146 = inttoptr i64 %3143 to i32*
  %3147 = load i32, i32* %3146
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3148, align 1
  %3149 = and i32 %3147, 255
  %3150 = call i32 @llvm.ctpop.i32(i32 %3149)
  %3151 = trunc i32 %3150 to i8
  %3152 = and i8 %3151, 1
  %3153 = xor i8 %3152, 1
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3153, i8* %3154, align 1
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3155, align 1
  %3156 = icmp eq i32 %3147, 0
  %3157 = zext i1 %3156 to i8
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3157, i8* %3158, align 1
  %3159 = lshr i32 %3147, 31
  %3160 = trunc i32 %3159 to i8
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3160, i8* %3161, align 1
  %3162 = lshr i32 %3147, 31
  %3163 = xor i32 %3159, %3162
  %3164 = add i32 %3163, %3162
  %3165 = icmp eq i32 %3164, 2
  %3166 = zext i1 %3165 to i8
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3166, i8* %3167, align 1
  store %struct.Memory* %loadMem_47e6e6, %struct.Memory** %MEMORY
  %loadMem_47e6ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3169 = getelementptr inbounds %struct.GPR, %struct.GPR* %3168, i32 0, i32 33
  %3170 = getelementptr inbounds %struct.Reg, %struct.Reg* %3169, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %3170 to i64*
  %3171 = load i64, i64* %PC.i748
  %3172 = add i64 %3171, 46
  %3173 = load i64, i64* %PC.i748
  %3174 = add i64 %3173, 6
  %3175 = load i64, i64* %PC.i748
  %3176 = add i64 %3175, 6
  store i64 %3176, i64* %PC.i748
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3178 = load i8, i8* %3177, align 1
  store i8 %3178, i8* %BRANCH_TAKEN, align 1
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3180 = icmp ne i8 %3178, 0
  %3181 = select i1 %3180, i64 %3172, i64 %3174
  store i64 %3181, i64* %3179, align 8
  store %struct.Memory* %loadMem_47e6ea, %struct.Memory** %MEMORY
  %loadBr_47e6ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e6ea = icmp eq i8 %loadBr_47e6ea, 1
  br i1 %cmpBr_47e6ea, label %block_.L_47e718, label %block_47e6f0

block_47e6f0:                                     ; preds = %block_.L_47e6e6
  %loadMem_47e6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 33
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %3184 to i64*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 1
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %3187 to i64*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3189 = getelementptr inbounds %struct.GPR, %struct.GPR* %3188, i32 0, i32 15
  %3190 = getelementptr inbounds %struct.Reg, %struct.Reg* %3189, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %3190 to i64*
  %3191 = load i64, i64* %RBP.i747
  %3192 = sub i64 %3191, 692
  %3193 = load i64, i64* %PC.i745
  %3194 = add i64 %3193, 7
  store i64 %3194, i64* %PC.i745
  %3195 = inttoptr i64 %3192 to i32*
  %3196 = load i32, i32* %3195
  %3197 = sext i32 %3196 to i64
  store i64 %3197, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_47e6f0, %struct.Memory** %MEMORY
  %loadMem_47e6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 33
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 1
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %3203 to i64*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 5
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %3206 to i64*
  %3207 = load i64, i64* %RAX.i743
  %3208 = add i64 %3207, 12099168
  %3209 = load i64, i64* %PC.i742
  %3210 = add i64 %3209, 8
  store i64 %3210, i64* %PC.i742
  %3211 = inttoptr i64 %3208 to i8*
  %3212 = load i8, i8* %3211
  %3213 = zext i8 %3212 to i64
  store i64 %3213, i64* %RCX.i744, align 8
  store %struct.Memory* %loadMem_47e6f7, %struct.Memory** %MEMORY
  %loadMem_47e6ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 33
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %3216 to i64*
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 1
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %RAX.i740 = bitcast %union.anon* %3219 to i64*
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 15
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %3222 to i64*
  %3223 = load i64, i64* %RBP.i741
  %3224 = sub i64 %3223, 24
  %3225 = load i64, i64* %PC.i739
  %3226 = add i64 %3225, 4
  store i64 %3226, i64* %PC.i739
  %3227 = inttoptr i64 %3224 to i32*
  %3228 = load i32, i32* %3227
  %3229 = sext i32 %3228 to i64
  store i64 %3229, i64* %RAX.i740, align 8
  store %struct.Memory* %loadMem_47e6ff, %struct.Memory** %MEMORY
  %loadMem_47e703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 33
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %3232 to i64*
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3234 = getelementptr inbounds %struct.GPR, %struct.GPR* %3233, i32 0, i32 1
  %3235 = getelementptr inbounds %struct.Reg, %struct.Reg* %3234, i32 0, i32 0
  %RAX.i737 = bitcast %union.anon* %3235 to i64*
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3237 = getelementptr inbounds %struct.GPR, %struct.GPR* %3236, i32 0, i32 7
  %3238 = getelementptr inbounds %struct.Reg, %struct.Reg* %3237, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %3238 to i64*
  %3239 = load i64, i64* %RAX.i737
  %3240 = add i64 %3239, 12099168
  %3241 = load i64, i64* %PC.i736
  %3242 = add i64 %3241, 8
  store i64 %3242, i64* %PC.i736
  %3243 = inttoptr i64 %3240 to i8*
  %3244 = load i8, i8* %3243
  %3245 = zext i8 %3244 to i64
  store i64 %3245, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_47e703, %struct.Memory** %MEMORY
  %loadMem_47e70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 33
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %3248 to i64*
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 5
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %ECX.i734 = bitcast %union.anon* %3251 to i32*
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 7
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %EDX.i735 = bitcast %union.anon* %3254 to i32*
  %3255 = load i32, i32* %ECX.i734
  %3256 = zext i32 %3255 to i64
  %3257 = load i32, i32* %EDX.i735
  %3258 = zext i32 %3257 to i64
  %3259 = load i64, i64* %PC.i733
  %3260 = add i64 %3259, 2
  store i64 %3260, i64* %PC.i733
  %3261 = sub i32 %3255, %3257
  %3262 = icmp ult i32 %3255, %3257
  %3263 = zext i1 %3262 to i8
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3263, i8* %3264, align 1
  %3265 = and i32 %3261, 255
  %3266 = call i32 @llvm.ctpop.i32(i32 %3265)
  %3267 = trunc i32 %3266 to i8
  %3268 = and i8 %3267, 1
  %3269 = xor i8 %3268, 1
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3269, i8* %3270, align 1
  %3271 = xor i64 %3258, %3256
  %3272 = trunc i64 %3271 to i32
  %3273 = xor i32 %3272, %3261
  %3274 = lshr i32 %3273, 4
  %3275 = trunc i32 %3274 to i8
  %3276 = and i8 %3275, 1
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3276, i8* %3277, align 1
  %3278 = icmp eq i32 %3261, 0
  %3279 = zext i1 %3278 to i8
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3279, i8* %3280, align 1
  %3281 = lshr i32 %3261, 31
  %3282 = trunc i32 %3281 to i8
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3282, i8* %3283, align 1
  %3284 = lshr i32 %3255, 31
  %3285 = lshr i32 %3257, 31
  %3286 = xor i32 %3285, %3284
  %3287 = xor i32 %3281, %3284
  %3288 = add i32 %3287, %3286
  %3289 = icmp eq i32 %3288, 2
  %3290 = zext i1 %3289 to i8
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3290, i8* %3291, align 1
  store %struct.Memory* %loadMem_47e70b, %struct.Memory** %MEMORY
  %loadMem_47e70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 33
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %3294 to i64*
  %3295 = load i64, i64* %PC.i732
  %3296 = add i64 %3295, 11
  %3297 = load i64, i64* %PC.i732
  %3298 = add i64 %3297, 6
  %3299 = load i64, i64* %PC.i732
  %3300 = add i64 %3299, 6
  store i64 %3300, i64* %PC.i732
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3302 = load i8, i8* %3301, align 1
  %3303 = icmp eq i8 %3302, 0
  %3304 = zext i1 %3303 to i8
  store i8 %3304, i8* %BRANCH_TAKEN, align 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3306 = select i1 %3303, i64 %3296, i64 %3298
  store i64 %3306, i64* %3305, align 8
  store %struct.Memory* %loadMem_47e70d, %struct.Memory** %MEMORY
  %loadBr_47e70d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e70d = icmp eq i8 %loadBr_47e70d, 1
  br i1 %cmpBr_47e70d, label %block_.L_47e718, label %block_47e713

block_47e713:                                     ; preds = %block_47e6f0
  %loadMem_47e713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 33
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3309 to i64*
  %3310 = load i64, i64* %PC.i731
  %3311 = add i64 %3310, 625
  %3312 = load i64, i64* %PC.i731
  %3313 = add i64 %3312, 5
  store i64 %3313, i64* %PC.i731
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3311, i64* %3314, align 8
  store %struct.Memory* %loadMem_47e713, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e718:                                  ; preds = %block_47e6f0, %block_.L_47e6e6
  %loadMem_47e718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 33
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %3317 to i64*
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3319 = getelementptr inbounds %struct.GPR, %struct.GPR* %3318, i32 0, i32 15
  %3320 = getelementptr inbounds %struct.Reg, %struct.Reg* %3319, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %3320 to i64*
  %3321 = load i64, i64* %RBP.i730
  %3322 = sub i64 %3321, 32
  %3323 = load i64, i64* %PC.i729
  %3324 = add i64 %3323, 4
  store i64 %3324, i64* %PC.i729
  %3325 = inttoptr i64 %3322 to i32*
  %3326 = load i32, i32* %3325
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3327, align 1
  %3328 = and i32 %3326, 255
  %3329 = call i32 @llvm.ctpop.i32(i32 %3328)
  %3330 = trunc i32 %3329 to i8
  %3331 = and i8 %3330, 1
  %3332 = xor i8 %3331, 1
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3332, i8* %3333, align 1
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3334, align 1
  %3335 = icmp eq i32 %3326, 0
  %3336 = zext i1 %3335 to i8
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3336, i8* %3337, align 1
  %3338 = lshr i32 %3326, 31
  %3339 = trunc i32 %3338 to i8
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3339, i8* %3340, align 1
  %3341 = lshr i32 %3326, 31
  %3342 = xor i32 %3338, %3341
  %3343 = add i32 %3342, %3341
  %3344 = icmp eq i32 %3343, 2
  %3345 = zext i1 %3344 to i8
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3345, i8* %3346, align 1
  store %struct.Memory* %loadMem_47e718, %struct.Memory** %MEMORY
  %loadMem_47e71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 33
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3349 to i64*
  %3350 = load i64, i64* %PC.i728
  %3351 = add i64 %3350, 76
  %3352 = load i64, i64* %PC.i728
  %3353 = add i64 %3352, 6
  %3354 = load i64, i64* %PC.i728
  %3355 = add i64 %3354, 6
  store i64 %3355, i64* %PC.i728
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3357 = load i8, i8* %3356, align 1
  %3358 = icmp eq i8 %3357, 0
  %3359 = zext i1 %3358 to i8
  store i8 %3359, i8* %BRANCH_TAKEN, align 1
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3361 = select i1 %3358, i64 %3351, i64 %3353
  store i64 %3361, i64* %3360, align 8
  store %struct.Memory* %loadMem_47e71c, %struct.Memory** %MEMORY
  %loadBr_47e71c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e71c = icmp eq i8 %loadBr_47e71c, 1
  br i1 %cmpBr_47e71c, label %block_.L_47e768, label %block_47e722

block_47e722:                                     ; preds = %block_.L_47e718
  %loadMem_47e722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 33
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3364 to i64*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 1
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %3367 to i64*
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 15
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %3370 to i64*
  %3371 = load i64, i64* %RBP.i727
  %3372 = sub i64 %3371, 692
  %3373 = load i64, i64* %PC.i725
  %3374 = add i64 %3373, 7
  store i64 %3374, i64* %PC.i725
  %3375 = inttoptr i64 %3372 to i32*
  %3376 = load i32, i32* %3375
  %3377 = sext i32 %3376 to i64
  store i64 %3377, i64* %RAX.i726, align 8
  store %struct.Memory* %loadMem_47e722, %struct.Memory** %MEMORY
  %loadMem_47e729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 33
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3380 to i64*
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 1
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 5
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %3386 to i64*
  %3387 = load i64, i64* %RAX.i723
  %3388 = add i64 %3387, 12099168
  %3389 = load i64, i64* %PC.i722
  %3390 = add i64 %3389, 8
  store i64 %3390, i64* %PC.i722
  %3391 = inttoptr i64 %3388 to i8*
  %3392 = load i8, i8* %3391
  %3393 = zext i8 %3392 to i64
  store i64 %3393, i64* %RCX.i724, align 8
  store %struct.Memory* %loadMem_47e729, %struct.Memory** %MEMORY
  %loadMem_47e731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 33
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3396 to i64*
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 1
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %RAX.i720 = bitcast %union.anon* %3399 to i64*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 15
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %3402 to i64*
  %3403 = load i64, i64* %RBP.i721
  %3404 = sub i64 %3403, 24
  %3405 = load i64, i64* %PC.i719
  %3406 = add i64 %3405, 4
  store i64 %3406, i64* %PC.i719
  %3407 = inttoptr i64 %3404 to i32*
  %3408 = load i32, i32* %3407
  %3409 = sext i32 %3408 to i64
  store i64 %3409, i64* %RAX.i720, align 8
  store %struct.Memory* %loadMem_47e731, %struct.Memory** %MEMORY
  %loadMem_47e735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 33
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3412 to i64*
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 1
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %RAX.i717 = bitcast %union.anon* %3415 to i64*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 7
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %RDX.i718 = bitcast %union.anon* %3418 to i64*
  %3419 = load i64, i64* %RAX.i717
  %3420 = add i64 %3419, 12099168
  %3421 = load i64, i64* %PC.i716
  %3422 = add i64 %3421, 8
  store i64 %3422, i64* %PC.i716
  %3423 = inttoptr i64 %3420 to i8*
  %3424 = load i8, i8* %3423
  %3425 = zext i8 %3424 to i64
  store i64 %3425, i64* %RDX.i718, align 8
  store %struct.Memory* %loadMem_47e735, %struct.Memory** %MEMORY
  %loadMem_47e73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 33
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %3428 to i64*
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 5
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %ECX.i714 = bitcast %union.anon* %3431 to i32*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 7
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %EDX.i715 = bitcast %union.anon* %3434 to i32*
  %3435 = load i32, i32* %ECX.i714
  %3436 = zext i32 %3435 to i64
  %3437 = load i32, i32* %EDX.i715
  %3438 = zext i32 %3437 to i64
  %3439 = load i64, i64* %PC.i713
  %3440 = add i64 %3439, 2
  store i64 %3440, i64* %PC.i713
  %3441 = sub i32 %3435, %3437
  %3442 = icmp ult i32 %3435, %3437
  %3443 = zext i1 %3442 to i8
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3443, i8* %3444, align 1
  %3445 = and i32 %3441, 255
  %3446 = call i32 @llvm.ctpop.i32(i32 %3445)
  %3447 = trunc i32 %3446 to i8
  %3448 = and i8 %3447, 1
  %3449 = xor i8 %3448, 1
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3449, i8* %3450, align 1
  %3451 = xor i64 %3438, %3436
  %3452 = trunc i64 %3451 to i32
  %3453 = xor i32 %3452, %3441
  %3454 = lshr i32 %3453, 4
  %3455 = trunc i32 %3454 to i8
  %3456 = and i8 %3455, 1
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3456, i8* %3457, align 1
  %3458 = icmp eq i32 %3441, 0
  %3459 = zext i1 %3458 to i8
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3459, i8* %3460, align 1
  %3461 = lshr i32 %3441, 31
  %3462 = trunc i32 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3462, i8* %3463, align 1
  %3464 = lshr i32 %3435, 31
  %3465 = lshr i32 %3437, 31
  %3466 = xor i32 %3465, %3464
  %3467 = xor i32 %3461, %3464
  %3468 = add i32 %3467, %3466
  %3469 = icmp eq i32 %3468, 2
  %3470 = zext i1 %3469 to i8
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3470, i8* %3471, align 1
  store %struct.Memory* %loadMem_47e73d, %struct.Memory** %MEMORY
  %loadMem_47e73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3473 = getelementptr inbounds %struct.GPR, %struct.GPR* %3472, i32 0, i32 33
  %3474 = getelementptr inbounds %struct.Reg, %struct.Reg* %3473, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %3474 to i64*
  %3475 = load i64, i64* %PC.i712
  %3476 = add i64 %3475, 41
  %3477 = load i64, i64* %PC.i712
  %3478 = add i64 %3477, 6
  %3479 = load i64, i64* %PC.i712
  %3480 = add i64 %3479, 6
  store i64 %3480, i64* %PC.i712
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3482 = load i8, i8* %3481, align 1
  %3483 = icmp eq i8 %3482, 0
  %3484 = zext i1 %3483 to i8
  store i8 %3484, i8* %BRANCH_TAKEN, align 1
  %3485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3486 = select i1 %3483, i64 %3476, i64 %3478
  store i64 %3486, i64* %3485, align 8
  store %struct.Memory* %loadMem_47e73f, %struct.Memory** %MEMORY
  %loadBr_47e73f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e73f = icmp eq i8 %loadBr_47e73f, 1
  br i1 %cmpBr_47e73f, label %block_.L_47e768, label %block_47e745

block_47e745:                                     ; preds = %block_47e722
  %loadMem_47e745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 33
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %3489 to i64*
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 1
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %EAX.i710 = bitcast %union.anon* %3492 to i32*
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3494 = getelementptr inbounds %struct.GPR, %struct.GPR* %3493, i32 0, i32 1
  %3495 = getelementptr inbounds %struct.Reg, %struct.Reg* %3494, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %3495 to i64*
  %3496 = load i64, i64* %RAX.i711
  %3497 = load i32, i32* %EAX.i710
  %3498 = zext i32 %3497 to i64
  %3499 = load i64, i64* %PC.i709
  %3500 = add i64 %3499, 2
  store i64 %3500, i64* %PC.i709
  %3501 = xor i64 %3498, %3496
  %3502 = trunc i64 %3501 to i32
  %3503 = and i64 %3501, 4294967295
  store i64 %3503, i64* %RAX.i711, align 8
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3504, align 1
  %3505 = and i32 %3502, 255
  %3506 = call i32 @llvm.ctpop.i32(i32 %3505)
  %3507 = trunc i32 %3506 to i8
  %3508 = and i8 %3507, 1
  %3509 = xor i8 %3508, 1
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3509, i8* %3510, align 1
  %3511 = icmp eq i32 %3502, 0
  %3512 = zext i1 %3511 to i8
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3512, i8* %3513, align 1
  %3514 = lshr i32 %3502, 31
  %3515 = trunc i32 %3514 to i8
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3515, i8* %3516, align 1
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3517, align 1
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3518, align 1
  store %struct.Memory* %loadMem_47e745, %struct.Memory** %MEMORY
  %loadMem_47e747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3520 = getelementptr inbounds %struct.GPR, %struct.GPR* %3519, i32 0, i32 33
  %3521 = getelementptr inbounds %struct.Reg, %struct.Reg* %3520, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %3521 to i64*
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3523 = getelementptr inbounds %struct.GPR, %struct.GPR* %3522, i32 0, i32 1
  %3524 = getelementptr inbounds %struct.Reg, %struct.Reg* %3523, i32 0, i32 0
  %EAX.i707 = bitcast %union.anon* %3524 to i32*
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3526 = getelementptr inbounds %struct.GPR, %struct.GPR* %3525, i32 0, i32 7
  %3527 = getelementptr inbounds %struct.Reg, %struct.Reg* %3526, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %3527 to i64*
  %3528 = load i32, i32* %EAX.i707
  %3529 = zext i32 %3528 to i64
  %3530 = load i64, i64* %PC.i706
  %3531 = add i64 %3530, 2
  store i64 %3531, i64* %PC.i706
  %3532 = and i64 %3529, 4294967295
  store i64 %3532, i64* %RDX.i708, align 8
  store %struct.Memory* %loadMem_47e747, %struct.Memory** %MEMORY
  %loadMem_47e749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 11
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RDI.i704 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 15
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %RBP.i705
  %3543 = sub i64 %3542, 692
  %3544 = load i64, i64* %PC.i703
  %3545 = add i64 %3544, 6
  store i64 %3545, i64* %PC.i703
  %3546 = inttoptr i64 %3543 to i32*
  %3547 = load i32, i32* %3546
  %3548 = zext i32 %3547 to i64
  store i64 %3548, i64* %RDI.i704, align 8
  store %struct.Memory* %loadMem_47e749, %struct.Memory** %MEMORY
  %loadMem_47e74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 33
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %3551 to i64*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 9
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RSI.i701 = bitcast %union.anon* %3554 to i64*
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3556 = getelementptr inbounds %struct.GPR, %struct.GPR* %3555, i32 0, i32 15
  %3557 = getelementptr inbounds %struct.Reg, %struct.Reg* %3556, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %3557 to i64*
  %3558 = load i64, i64* %RBP.i702
  %3559 = sub i64 %3558, 696
  %3560 = load i64, i64* %PC.i700
  %3561 = add i64 %3560, 6
  store i64 %3561, i64* %PC.i700
  %3562 = inttoptr i64 %3559 to i32*
  %3563 = load i32, i32* %3562
  %3564 = zext i32 %3563 to i64
  store i64 %3564, i64* %RSI.i701, align 8
  store %struct.Memory* %loadMem_47e74f, %struct.Memory** %MEMORY
  %loadMem1_47e755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3566 = getelementptr inbounds %struct.GPR, %struct.GPR* %3565, i32 0, i32 33
  %3567 = getelementptr inbounds %struct.Reg, %struct.Reg* %3566, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %3567 to i64*
  %3568 = load i64, i64* %PC.i699
  %3569 = add i64 %3568, -134373
  %3570 = load i64, i64* %PC.i699
  %3571 = add i64 %3570, 5
  %3572 = load i64, i64* %PC.i699
  %3573 = add i64 %3572, 5
  store i64 %3573, i64* %PC.i699
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3575 = load i64, i64* %3574, align 8
  %3576 = add i64 %3575, -8
  %3577 = inttoptr i64 %3576 to i64*
  store i64 %3571, i64* %3577
  store i64 %3576, i64* %3574, align 8
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3569, i64* %3578, align 8
  store %struct.Memory* %loadMem1_47e755, %struct.Memory** %MEMORY
  %loadMem2_47e755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e755 = load i64, i64* %3
  %call2_47e755 = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47e755, %struct.Memory* %loadMem2_47e755)
  store %struct.Memory* %call2_47e755, %struct.Memory** %MEMORY
  %loadMem_47e75a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 33
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %3581 to i64*
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3583 = getelementptr inbounds %struct.GPR, %struct.GPR* %3582, i32 0, i32 1
  %3584 = getelementptr inbounds %struct.Reg, %struct.Reg* %3583, i32 0, i32 0
  %EAX.i698 = bitcast %union.anon* %3584 to i32*
  %3585 = load i32, i32* %EAX.i698
  %3586 = zext i32 %3585 to i64
  %3587 = load i64, i64* %PC.i697
  %3588 = add i64 %3587, 3
  store i64 %3588, i64* %PC.i697
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3589, align 1
  %3590 = and i32 %3585, 255
  %3591 = call i32 @llvm.ctpop.i32(i32 %3590)
  %3592 = trunc i32 %3591 to i8
  %3593 = and i8 %3592, 1
  %3594 = xor i8 %3593, 1
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3594, i8* %3595, align 1
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3596, align 1
  %3597 = icmp eq i32 %3585, 0
  %3598 = zext i1 %3597 to i8
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3598, i8* %3599, align 1
  %3600 = lshr i32 %3585, 31
  %3601 = trunc i32 %3600 to i8
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3601, i8* %3602, align 1
  %3603 = lshr i32 %3585, 31
  %3604 = xor i32 %3600, %3603
  %3605 = add i32 %3604, %3603
  %3606 = icmp eq i32 %3605, 2
  %3607 = zext i1 %3606 to i8
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3607, i8* %3608, align 1
  store %struct.Memory* %loadMem_47e75a, %struct.Memory** %MEMORY
  %loadMem_47e75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 33
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %3611 to i64*
  %3612 = load i64, i64* %PC.i696
  %3613 = add i64 %3612, 11
  %3614 = load i64, i64* %PC.i696
  %3615 = add i64 %3614, 6
  %3616 = load i64, i64* %PC.i696
  %3617 = add i64 %3616, 6
  store i64 %3617, i64* %PC.i696
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3619 = load i8, i8* %3618, align 1
  %3620 = icmp eq i8 %3619, 0
  %3621 = zext i1 %3620 to i8
  store i8 %3621, i8* %BRANCH_TAKEN, align 1
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3623 = select i1 %3620, i64 %3613, i64 %3615
  store i64 %3623, i64* %3622, align 8
  store %struct.Memory* %loadMem_47e75d, %struct.Memory** %MEMORY
  %loadBr_47e75d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e75d = icmp eq i8 %loadBr_47e75d, 1
  br i1 %cmpBr_47e75d, label %block_.L_47e768, label %block_47e763

block_47e763:                                     ; preds = %block_47e745
  %loadMem_47e763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 33
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %3626 to i64*
  %3627 = load i64, i64* %PC.i695
  %3628 = add i64 %3627, 545
  %3629 = load i64, i64* %PC.i695
  %3630 = add i64 %3629, 5
  store i64 %3630, i64* %PC.i695
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3628, i64* %3631, align 8
  store %struct.Memory* %loadMem_47e763, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e768:                                  ; preds = %block_47e745, %block_47e722, %block_.L_47e718
  %loadMem_47e768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 33
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %3634 to i64*
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 7
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %RDX.i694 = bitcast %union.anon* %3637 to i64*
  %3638 = load i64, i64* %PC.i693
  %3639 = add i64 %3638, 10
  store i64 %3639, i64* %PC.i693
  store i64 ptrtoint (%G__0x581daa_type* @G__0x581daa to i64), i64* %RDX.i694, align 8
  store %struct.Memory* %loadMem_47e768, %struct.Memory** %MEMORY
  %loadMem_47e772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 33
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %3642 to i64*
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3644 = getelementptr inbounds %struct.GPR, %struct.GPR* %3643, i32 0, i32 1
  %3645 = getelementptr inbounds %struct.Reg, %struct.Reg* %3644, i32 0, i32 0
  %EAX.i691 = bitcast %union.anon* %3645 to i32*
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3647 = getelementptr inbounds %struct.GPR, %struct.GPR* %3646, i32 0, i32 1
  %3648 = getelementptr inbounds %struct.Reg, %struct.Reg* %3647, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %3648 to i64*
  %3649 = load i64, i64* %RAX.i692
  %3650 = load i32, i32* %EAX.i691
  %3651 = zext i32 %3650 to i64
  %3652 = load i64, i64* %PC.i690
  %3653 = add i64 %3652, 2
  store i64 %3653, i64* %PC.i690
  %3654 = xor i64 %3651, %3649
  %3655 = trunc i64 %3654 to i32
  %3656 = and i64 %3654, 4294967295
  store i64 %3656, i64* %RAX.i692, align 8
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3657, align 1
  %3658 = and i32 %3655, 255
  %3659 = call i32 @llvm.ctpop.i32(i32 %3658)
  %3660 = trunc i32 %3659 to i8
  %3661 = and i8 %3660, 1
  %3662 = xor i8 %3661, 1
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3662, i8* %3663, align 1
  %3664 = icmp eq i32 %3655, 0
  %3665 = zext i1 %3664 to i8
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3665, i8* %3666, align 1
  %3667 = lshr i32 %3655, 31
  %3668 = trunc i32 %3667 to i8
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3668, i8* %3669, align 1
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3670, align 1
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3671, align 1
  store %struct.Memory* %loadMem_47e772, %struct.Memory** %MEMORY
  %loadMem_47e774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 33
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %3674 to i64*
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 11
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %RDI.i688 = bitcast %union.anon* %3677 to i64*
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 15
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %3680 to i64*
  %3681 = load i64, i64* %RBP.i689
  %3682 = sub i64 %3681, 8
  %3683 = load i64, i64* %PC.i687
  %3684 = add i64 %3683, 3
  store i64 %3684, i64* %PC.i687
  %3685 = inttoptr i64 %3682 to i32*
  %3686 = load i32, i32* %3685
  %3687 = zext i32 %3686 to i64
  store i64 %3687, i64* %RDI.i688, align 8
  store %struct.Memory* %loadMem_47e774, %struct.Memory** %MEMORY
  %loadMem_47e777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 33
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 9
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RSI.i685 = bitcast %union.anon* %3693 to i64*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 15
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %3696 to i64*
  %3697 = load i64, i64* %RBP.i686
  %3698 = sub i64 %3697, 36
  %3699 = load i64, i64* %PC.i684
  %3700 = add i64 %3699, 3
  store i64 %3700, i64* %PC.i684
  %3701 = inttoptr i64 %3698 to i32*
  %3702 = load i32, i32* %3701
  %3703 = zext i32 %3702 to i64
  store i64 %3703, i64* %RSI.i685, align 8
  store %struct.Memory* %loadMem_47e777, %struct.Memory** %MEMORY
  %loadMem_47e77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 33
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 5
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RCX.i682 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 15
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %3712 to i64*
  %3713 = load i64, i64* %RBP.i683
  %3714 = sub i64 %3713, 24
  %3715 = load i64, i64* %PC.i681
  %3716 = add i64 %3715, 3
  store i64 %3716, i64* %PC.i681
  %3717 = inttoptr i64 %3714 to i32*
  %3718 = load i32, i32* %3717
  %3719 = zext i32 %3718 to i64
  store i64 %3719, i64* %RCX.i682, align 8
  store %struct.Memory* %loadMem_47e77a, %struct.Memory** %MEMORY
  %loadMem_47e77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 33
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %3722 to i64*
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 1
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %EAX.i679 = bitcast %union.anon* %3725 to i32*
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 17
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %R8D.i680 = bitcast %union.anon* %3728 to i32*
  %3729 = bitcast i32* %R8D.i680 to i64*
  %3730 = load i32, i32* %EAX.i679
  %3731 = zext i32 %3730 to i64
  %3732 = load i64, i64* %PC.i678
  %3733 = add i64 %3732, 3
  store i64 %3733, i64* %PC.i678
  %3734 = and i64 %3731, 4294967295
  store i64 %3734, i64* %3729, align 8
  store %struct.Memory* %loadMem_47e77d, %struct.Memory** %MEMORY
  %loadMem_47e780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 33
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %3737 to i64*
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3739 = getelementptr inbounds %struct.GPR, %struct.GPR* %3738, i32 0, i32 1
  %3740 = getelementptr inbounds %struct.Reg, %struct.Reg* %3739, i32 0, i32 0
  %EAX.i676 = bitcast %union.anon* %3740 to i32*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 19
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %R9D.i677 = bitcast %union.anon* %3743 to i32*
  %3744 = bitcast i32* %R9D.i677 to i64*
  %3745 = load i32, i32* %EAX.i676
  %3746 = zext i32 %3745 to i64
  %3747 = load i64, i64* %PC.i675
  %3748 = add i64 %3747, 3
  store i64 %3748, i64* %PC.i675
  %3749 = and i64 %3746, 4294967295
  store i64 %3749, i64* %3744, align 8
  store %struct.Memory* %loadMem_47e780, %struct.Memory** %MEMORY
  %loadMem1_47e783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3751 = getelementptr inbounds %struct.GPR, %struct.GPR* %3750, i32 0, i32 33
  %3752 = getelementptr inbounds %struct.Reg, %struct.Reg* %3751, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %3752 to i64*
  %3753 = load i64, i64* %PC.i674
  %3754 = add i64 %3753, -481619
  %3755 = load i64, i64* %PC.i674
  %3756 = add i64 %3755, 5
  %3757 = load i64, i64* %PC.i674
  %3758 = add i64 %3757, 5
  store i64 %3758, i64* %PC.i674
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3760 = load i64, i64* %3759, align 8
  %3761 = add i64 %3760, -8
  %3762 = inttoptr i64 %3761 to i64*
  store i64 %3756, i64* %3762
  store i64 %3761, i64* %3759, align 8
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3754, i64* %3763, align 8
  store %struct.Memory* %loadMem1_47e783, %struct.Memory** %MEMORY
  %loadMem2_47e783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e783 = load i64, i64* %3
  %call2_47e783 = call %struct.Memory* @sub_408e30.trymove(%struct.State* %0, i64 %loadPC_47e783, %struct.Memory* %loadMem2_47e783)
  store %struct.Memory* %call2_47e783, %struct.Memory** %MEMORY
  %loadMem_47e788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 33
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %3766 to i64*
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3768 = getelementptr inbounds %struct.GPR, %struct.GPR* %3767, i32 0, i32 1
  %3769 = getelementptr inbounds %struct.Reg, %struct.Reg* %3768, i32 0, i32 0
  %EAX.i673 = bitcast %union.anon* %3769 to i32*
  %3770 = load i32, i32* %EAX.i673
  %3771 = zext i32 %3770 to i64
  %3772 = load i64, i64* %PC.i672
  %3773 = add i64 %3772, 3
  store i64 %3773, i64* %PC.i672
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3774, align 1
  %3775 = and i32 %3770, 255
  %3776 = call i32 @llvm.ctpop.i32(i32 %3775)
  %3777 = trunc i32 %3776 to i8
  %3778 = and i8 %3777, 1
  %3779 = xor i8 %3778, 1
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3779, i8* %3780, align 1
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3781, align 1
  %3782 = icmp eq i32 %3770, 0
  %3783 = zext i1 %3782 to i8
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3783, i8* %3784, align 1
  %3785 = lshr i32 %3770, 31
  %3786 = trunc i32 %3785 to i8
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3786, i8* %3787, align 1
  %3788 = lshr i32 %3770, 31
  %3789 = xor i32 %3785, %3788
  %3790 = add i32 %3789, %3788
  %3791 = icmp eq i32 %3790, 2
  %3792 = zext i1 %3791 to i8
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3792, i8* %3793, align 1
  store %struct.Memory* %loadMem_47e788, %struct.Memory** %MEMORY
  %loadMem_47e78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 33
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %3796 to i64*
  %3797 = load i64, i64* %PC.i671
  %3798 = add i64 %3797, 500
  %3799 = load i64, i64* %PC.i671
  %3800 = add i64 %3799, 6
  %3801 = load i64, i64* %PC.i671
  %3802 = add i64 %3801, 6
  store i64 %3802, i64* %PC.i671
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3804 = load i8, i8* %3803, align 1
  store i8 %3804, i8* %BRANCH_TAKEN, align 1
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3806 = icmp ne i8 %3804, 0
  %3807 = select i1 %3806, i64 %3798, i64 %3800
  store i64 %3807, i64* %3805, align 8
  store %struct.Memory* %loadMem_47e78b, %struct.Memory** %MEMORY
  %loadBr_47e78b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e78b = icmp eq i8 %loadBr_47e78b, 1
  br i1 %cmpBr_47e78b, label %block_.L_47e97f, label %block_47e791

block_47e791:                                     ; preds = %block_.L_47e768
  %loadMem_47e791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 33
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %3810 to i64*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 15
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %3813 to i64*
  %3814 = load i64, i64* %RBP.i670
  %3815 = sub i64 %3814, 32
  %3816 = load i64, i64* %PC.i669
  %3817 = add i64 %3816, 4
  store i64 %3817, i64* %PC.i669
  %3818 = inttoptr i64 %3815 to i32*
  %3819 = load i32, i32* %3818
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3820, align 1
  %3821 = and i32 %3819, 255
  %3822 = call i32 @llvm.ctpop.i32(i32 %3821)
  %3823 = trunc i32 %3822 to i8
  %3824 = and i8 %3823, 1
  %3825 = xor i8 %3824, 1
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3825, i8* %3826, align 1
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3827, align 1
  %3828 = icmp eq i32 %3819, 0
  %3829 = zext i1 %3828 to i8
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3829, i8* %3830, align 1
  %3831 = lshr i32 %3819, 31
  %3832 = trunc i32 %3831 to i8
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3832, i8* %3833, align 1
  %3834 = lshr i32 %3819, 31
  %3835 = xor i32 %3831, %3834
  %3836 = add i32 %3835, %3834
  %3837 = icmp eq i32 %3836, 2
  %3838 = zext i1 %3837 to i8
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3838, i8* %3839, align 1
  store %struct.Memory* %loadMem_47e791, %struct.Memory** %MEMORY
  %loadMem_47e795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 33
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %3842 to i64*
  %3843 = load i64, i64* %PC.i668
  %3844 = add i64 %3843, 159
  %3845 = load i64, i64* %PC.i668
  %3846 = add i64 %3845, 6
  %3847 = load i64, i64* %PC.i668
  %3848 = add i64 %3847, 6
  store i64 %3848, i64* %PC.i668
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3850 = load i8, i8* %3849, align 1
  store i8 %3850, i8* %BRANCH_TAKEN, align 1
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3852 = icmp ne i8 %3850, 0
  %3853 = select i1 %3852, i64 %3844, i64 %3846
  store i64 %3853, i64* %3851, align 8
  store %struct.Memory* %loadMem_47e795, %struct.Memory** %MEMORY
  %loadBr_47e795 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e795 = icmp eq i8 %loadBr_47e795, 1
  br i1 %cmpBr_47e795, label %block_.L_47e834, label %block_47e79b

block_47e79b:                                     ; preds = %block_47e791
  %loadMem_47e79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 33
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %3856 to i64*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 1
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %3859 to i64*
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3861 = getelementptr inbounds %struct.GPR, %struct.GPR* %3860, i32 0, i32 15
  %3862 = getelementptr inbounds %struct.Reg, %struct.Reg* %3861, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %3862 to i64*
  %3863 = load i64, i64* %RBP.i667
  %3864 = sub i64 %3863, 692
  %3865 = load i64, i64* %PC.i665
  %3866 = add i64 %3865, 7
  store i64 %3866, i64* %PC.i665
  %3867 = inttoptr i64 %3864 to i32*
  %3868 = load i32, i32* %3867
  %3869 = sext i32 %3868 to i64
  store i64 %3869, i64* %RAX.i666, align 8
  store %struct.Memory* %loadMem_47e79b, %struct.Memory** %MEMORY
  %loadMem_47e7a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 33
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %3872 to i64*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 1
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %3875 to i64*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 5
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %RCX.i664 = bitcast %union.anon* %3878 to i64*
  %3879 = load i64, i64* %RAX.i663
  %3880 = add i64 %3879, 12099168
  %3881 = load i64, i64* %PC.i662
  %3882 = add i64 %3881, 8
  store i64 %3882, i64* %PC.i662
  %3883 = inttoptr i64 %3880 to i8*
  %3884 = load i8, i8* %3883
  %3885 = zext i8 %3884 to i64
  store i64 %3885, i64* %RCX.i664, align 8
  store %struct.Memory* %loadMem_47e7a2, %struct.Memory** %MEMORY
  %loadMem_47e7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 33
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %3888 to i64*
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 1
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %3891 to i64*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 15
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %3894 to i64*
  %3895 = load i64, i64* %RBP.i661
  %3896 = sub i64 %3895, 24
  %3897 = load i64, i64* %PC.i659
  %3898 = add i64 %3897, 4
  store i64 %3898, i64* %PC.i659
  %3899 = inttoptr i64 %3896 to i32*
  %3900 = load i32, i32* %3899
  %3901 = sext i32 %3900 to i64
  store i64 %3901, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_47e7aa, %struct.Memory** %MEMORY
  %loadMem_47e7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 33
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 1
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %3907 to i64*
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3909 = getelementptr inbounds %struct.GPR, %struct.GPR* %3908, i32 0, i32 7
  %3910 = getelementptr inbounds %struct.Reg, %struct.Reg* %3909, i32 0, i32 0
  %RDX.i658 = bitcast %union.anon* %3910 to i64*
  %3911 = load i64, i64* %RAX.i657
  %3912 = add i64 %3911, 12099168
  %3913 = load i64, i64* %PC.i656
  %3914 = add i64 %3913, 8
  store i64 %3914, i64* %PC.i656
  %3915 = inttoptr i64 %3912 to i8*
  %3916 = load i8, i8* %3915
  %3917 = zext i8 %3916 to i64
  store i64 %3917, i64* %RDX.i658, align 8
  store %struct.Memory* %loadMem_47e7ae, %struct.Memory** %MEMORY
  %loadMem_47e7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 33
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %3920 to i64*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 5
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %ECX.i654 = bitcast %union.anon* %3923 to i32*
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 7
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %EDX.i655 = bitcast %union.anon* %3926 to i32*
  %3927 = load i32, i32* %ECX.i654
  %3928 = zext i32 %3927 to i64
  %3929 = load i32, i32* %EDX.i655
  %3930 = zext i32 %3929 to i64
  %3931 = load i64, i64* %PC.i653
  %3932 = add i64 %3931, 2
  store i64 %3932, i64* %PC.i653
  %3933 = sub i32 %3927, %3929
  %3934 = icmp ult i32 %3927, %3929
  %3935 = zext i1 %3934 to i8
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3935, i8* %3936, align 1
  %3937 = and i32 %3933, 255
  %3938 = call i32 @llvm.ctpop.i32(i32 %3937)
  %3939 = trunc i32 %3938 to i8
  %3940 = and i8 %3939, 1
  %3941 = xor i8 %3940, 1
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3941, i8* %3942, align 1
  %3943 = xor i64 %3930, %3928
  %3944 = trunc i64 %3943 to i32
  %3945 = xor i32 %3944, %3933
  %3946 = lshr i32 %3945, 4
  %3947 = trunc i32 %3946 to i8
  %3948 = and i8 %3947, 1
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3948, i8* %3949, align 1
  %3950 = icmp eq i32 %3933, 0
  %3951 = zext i1 %3950 to i8
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3951, i8* %3952, align 1
  %3953 = lshr i32 %3933, 31
  %3954 = trunc i32 %3953 to i8
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3954, i8* %3955, align 1
  %3956 = lshr i32 %3927, 31
  %3957 = lshr i32 %3929, 31
  %3958 = xor i32 %3957, %3956
  %3959 = xor i32 %3953, %3956
  %3960 = add i32 %3959, %3958
  %3961 = icmp eq i32 %3960, 2
  %3962 = zext i1 %3961 to i8
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3962, i8* %3963, align 1
  store %struct.Memory* %loadMem_47e7b6, %struct.Memory** %MEMORY
  %loadMem_47e7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3965 = getelementptr inbounds %struct.GPR, %struct.GPR* %3964, i32 0, i32 33
  %3966 = getelementptr inbounds %struct.Reg, %struct.Reg* %3965, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %3966 to i64*
  %3967 = load i64, i64* %PC.i652
  %3968 = add i64 %3967, 124
  %3969 = load i64, i64* %PC.i652
  %3970 = add i64 %3969, 6
  %3971 = load i64, i64* %PC.i652
  %3972 = add i64 %3971, 6
  store i64 %3972, i64* %PC.i652
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3974 = load i8, i8* %3973, align 1
  store i8 %3974, i8* %BRANCH_TAKEN, align 1
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3976 = icmp ne i8 %3974, 0
  %3977 = select i1 %3976, i64 %3968, i64 %3970
  store i64 %3977, i64* %3975, align 8
  store %struct.Memory* %loadMem_47e7b8, %struct.Memory** %MEMORY
  %loadBr_47e7b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e7b8 = icmp eq i8 %loadBr_47e7b8, 1
  br i1 %cmpBr_47e7b8, label %block_.L_47e834, label %block_47e7be

block_47e7be:                                     ; preds = %block_47e79b
  %loadMem_47e7be = load %struct.Memory*, %struct.Memory** %MEMORY
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 33
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %3980 to i64*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 1
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %EAX.i650 = bitcast %union.anon* %3983 to i32*
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 1
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %3986 to i64*
  %3987 = load i64, i64* %RAX.i651
  %3988 = load i32, i32* %EAX.i650
  %3989 = zext i32 %3988 to i64
  %3990 = load i64, i64* %PC.i649
  %3991 = add i64 %3990, 2
  store i64 %3991, i64* %PC.i649
  %3992 = xor i64 %3989, %3987
  %3993 = trunc i64 %3992 to i32
  %3994 = and i64 %3992, 4294967295
  store i64 %3994, i64* %RAX.i651, align 8
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3995, align 1
  %3996 = and i32 %3993, 255
  %3997 = call i32 @llvm.ctpop.i32(i32 %3996)
  %3998 = trunc i32 %3997 to i8
  %3999 = and i8 %3998, 1
  %4000 = xor i8 %3999, 1
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4000, i8* %4001, align 1
  %4002 = icmp eq i32 %3993, 0
  %4003 = zext i1 %4002 to i8
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4003, i8* %4004, align 1
  %4005 = lshr i32 %3993, 31
  %4006 = trunc i32 %4005 to i8
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4006, i8* %4007, align 1
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4008, align 1
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4009, align 1
  store %struct.Memory* %loadMem_47e7be, %struct.Memory** %MEMORY
  %loadMem_47e7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 33
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 1
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %EAX.i647 = bitcast %union.anon* %4015 to i32*
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4017 = getelementptr inbounds %struct.GPR, %struct.GPR* %4016, i32 0, i32 7
  %4018 = getelementptr inbounds %struct.Reg, %struct.Reg* %4017, i32 0, i32 0
  %RDX.i648 = bitcast %union.anon* %4018 to i64*
  %4019 = load i32, i32* %EAX.i647
  %4020 = zext i32 %4019 to i64
  %4021 = load i64, i64* %PC.i646
  %4022 = add i64 %4021, 2
  store i64 %4022, i64* %PC.i646
  %4023 = and i64 %4020, 4294967295
  store i64 %4023, i64* %RDX.i648, align 8
  store %struct.Memory* %loadMem_47e7c0, %struct.Memory** %MEMORY
  %loadMem_47e7c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4025 = getelementptr inbounds %struct.GPR, %struct.GPR* %4024, i32 0, i32 33
  %4026 = getelementptr inbounds %struct.Reg, %struct.Reg* %4025, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4026 to i64*
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4028 = getelementptr inbounds %struct.GPR, %struct.GPR* %4027, i32 0, i32 11
  %4029 = getelementptr inbounds %struct.Reg, %struct.Reg* %4028, i32 0, i32 0
  %RDI.i644 = bitcast %union.anon* %4029 to i64*
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 15
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %4032 to i64*
  %4033 = load i64, i64* %RBP.i645
  %4034 = sub i64 %4033, 692
  %4035 = load i64, i64* %PC.i643
  %4036 = add i64 %4035, 6
  store i64 %4036, i64* %PC.i643
  %4037 = inttoptr i64 %4034 to i32*
  %4038 = load i32, i32* %4037
  %4039 = zext i32 %4038 to i64
  store i64 %4039, i64* %RDI.i644, align 8
  store %struct.Memory* %loadMem_47e7c2, %struct.Memory** %MEMORY
  %loadMem_47e7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4041 = getelementptr inbounds %struct.GPR, %struct.GPR* %4040, i32 0, i32 33
  %4042 = getelementptr inbounds %struct.Reg, %struct.Reg* %4041, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %4042 to i64*
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4044 = getelementptr inbounds %struct.GPR, %struct.GPR* %4043, i32 0, i32 9
  %4045 = getelementptr inbounds %struct.Reg, %struct.Reg* %4044, i32 0, i32 0
  %RSI.i641 = bitcast %union.anon* %4045 to i64*
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 15
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %4048 to i64*
  %4049 = load i64, i64* %RBP.i642
  %4050 = sub i64 %4049, 696
  %4051 = load i64, i64* %PC.i640
  %4052 = add i64 %4051, 6
  store i64 %4052, i64* %PC.i640
  %4053 = inttoptr i64 %4050 to i32*
  %4054 = load i32, i32* %4053
  %4055 = zext i32 %4054 to i64
  store i64 %4055, i64* %RSI.i641, align 8
  store %struct.Memory* %loadMem_47e7c8, %struct.Memory** %MEMORY
  %loadMem1_47e7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 33
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %4058 to i64*
  %4059 = load i64, i64* %PC.i639
  %4060 = add i64 %4059, -134494
  %4061 = load i64, i64* %PC.i639
  %4062 = add i64 %4061, 5
  %4063 = load i64, i64* %PC.i639
  %4064 = add i64 %4063, 5
  store i64 %4064, i64* %PC.i639
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4066 = load i64, i64* %4065, align 8
  %4067 = add i64 %4066, -8
  %4068 = inttoptr i64 %4067 to i64*
  store i64 %4062, i64* %4068
  store i64 %4067, i64* %4065, align 8
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4060, i64* %4069, align 8
  store %struct.Memory* %loadMem1_47e7ce, %struct.Memory** %MEMORY
  %loadMem2_47e7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e7ce = load i64, i64* %3
  %call2_47e7ce = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47e7ce, %struct.Memory* %loadMem2_47e7ce)
  store %struct.Memory* %call2_47e7ce, %struct.Memory** %MEMORY
  %loadMem_47e7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 33
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %4072 to i64*
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4074 = getelementptr inbounds %struct.GPR, %struct.GPR* %4073, i32 0, i32 1
  %4075 = getelementptr inbounds %struct.Reg, %struct.Reg* %4074, i32 0, i32 0
  %EAX.i638 = bitcast %union.anon* %4075 to i32*
  %4076 = load i32, i32* %EAX.i638
  %4077 = zext i32 %4076 to i64
  %4078 = load i64, i64* %PC.i637
  %4079 = add i64 %4078, 3
  store i64 %4079, i64* %PC.i637
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4080, align 1
  %4081 = and i32 %4076, 255
  %4082 = call i32 @llvm.ctpop.i32(i32 %4081)
  %4083 = trunc i32 %4082 to i8
  %4084 = and i8 %4083, 1
  %4085 = xor i8 %4084, 1
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4085, i8* %4086, align 1
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4087, align 1
  %4088 = icmp eq i32 %4076, 0
  %4089 = zext i1 %4088 to i8
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4089, i8* %4090, align 1
  %4091 = lshr i32 %4076, 31
  %4092 = trunc i32 %4091 to i8
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4092, i8* %4093, align 1
  %4094 = lshr i32 %4076, 31
  %4095 = xor i32 %4091, %4094
  %4096 = add i32 %4095, %4094
  %4097 = icmp eq i32 %4096, 2
  %4098 = zext i1 %4097 to i8
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4098, i8* %4099, align 1
  store %struct.Memory* %loadMem_47e7d3, %struct.Memory** %MEMORY
  %loadMem_47e7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 33
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %4102 to i64*
  %4103 = load i64, i64* %PC.i636
  %4104 = add i64 %4103, 94
  %4105 = load i64, i64* %PC.i636
  %4106 = add i64 %4105, 6
  %4107 = load i64, i64* %PC.i636
  %4108 = add i64 %4107, 6
  store i64 %4108, i64* %PC.i636
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4110 = load i8, i8* %4109, align 1
  %4111 = icmp eq i8 %4110, 0
  %4112 = zext i1 %4111 to i8
  store i8 %4112, i8* %BRANCH_TAKEN, align 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4114 = select i1 %4111, i64 %4104, i64 %4106
  store i64 %4114, i64* %4113, align 8
  store %struct.Memory* %loadMem_47e7d6, %struct.Memory** %MEMORY
  %loadBr_47e7d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e7d6 = icmp eq i8 %loadBr_47e7d6, 1
  br i1 %cmpBr_47e7d6, label %block_.L_47e834, label %block_47e7dc

block_47e7dc:                                     ; preds = %block_47e7be
  %loadMem_47e7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %4120 to i64*
  %4121 = load i64, i64* %PC.i634
  %4122 = add i64 %4121, 7
  store i64 %4122, i64* %PC.i634
  %4123 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %4124 = zext i32 %4123 to i64
  store i64 %4124, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_47e7dc, %struct.Memory** %MEMORY
  %loadMem_47e7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 33
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4127 to i64*
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 1
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %4130 to i64*
  %4131 = load i64, i64* %RAX.i633
  %4132 = load i64, i64* %PC.i632
  %4133 = add i64 %4132, 5
  store i64 %4133, i64* %PC.i632
  %4134 = and i64 2048, %4131
  %4135 = trunc i64 %4134 to i32
  store i64 %4134, i64* %RAX.i633, align 8
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4136, align 1
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %4137, align 1
  %4138 = icmp eq i32 %4135, 0
  %4139 = zext i1 %4138 to i8
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4139, i8* %4140, align 1
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4141, align 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4142, align 1
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4143, align 1
  store %struct.Memory* %loadMem_47e7e3, %struct.Memory** %MEMORY
  %loadMem_47e7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 33
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %4146 to i64*
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 1
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %EAX.i631 = bitcast %union.anon* %4149 to i32*
  %4150 = load i32, i32* %EAX.i631
  %4151 = zext i32 %4150 to i64
  %4152 = load i64, i64* %PC.i630
  %4153 = add i64 %4152, 3
  store i64 %4153, i64* %PC.i630
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4154, align 1
  %4155 = and i32 %4150, 255
  %4156 = call i32 @llvm.ctpop.i32(i32 %4155)
  %4157 = trunc i32 %4156 to i8
  %4158 = and i8 %4157, 1
  %4159 = xor i8 %4158, 1
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4159, i8* %4160, align 1
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4161, align 1
  %4162 = icmp eq i32 %4150, 0
  %4163 = zext i1 %4162 to i8
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4163, i8* %4164, align 1
  %4165 = lshr i32 %4150, 31
  %4166 = trunc i32 %4165 to i8
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4166, i8* %4167, align 1
  %4168 = lshr i32 %4150, 31
  %4169 = xor i32 %4165, %4168
  %4170 = add i32 %4169, %4168
  %4171 = icmp eq i32 %4170, 2
  %4172 = zext i1 %4171 to i8
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4172, i8* %4173, align 1
  store %struct.Memory* %loadMem_47e7e8, %struct.Memory** %MEMORY
  %loadMem_47e7eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 33
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %4176 to i64*
  %4177 = load i64, i64* %PC.i629
  %4178 = add i64 %4177, 11
  %4179 = load i64, i64* %PC.i629
  %4180 = add i64 %4179, 6
  %4181 = load i64, i64* %PC.i629
  %4182 = add i64 %4181, 6
  store i64 %4182, i64* %PC.i629
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4184 = load i8, i8* %4183, align 1
  %4185 = icmp eq i8 %4184, 0
  %4186 = zext i1 %4185 to i8
  store i8 %4186, i8* %BRANCH_TAKEN, align 1
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4188 = select i1 %4185, i64 %4178, i64 %4180
  store i64 %4188, i64* %4187, align 8
  store %struct.Memory* %loadMem_47e7eb, %struct.Memory** %MEMORY
  %loadBr_47e7eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e7eb = icmp eq i8 %loadBr_47e7eb, 1
  br i1 %cmpBr_47e7eb, label %block_.L_47e7f6, label %block_47e7f1

block_47e7f1:                                     ; preds = %block_47e7dc
  %loadMem_47e7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 33
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %4191 to i64*
  %4192 = load i64, i64* %PC.i628
  %4193 = add i64 %4192, 47
  %4194 = load i64, i64* %PC.i628
  %4195 = add i64 %4194, 5
  store i64 %4195, i64* %PC.i628
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4193, i64* %4196, align 8
  store %struct.Memory* %loadMem_47e7f1, %struct.Memory** %MEMORY
  br label %block_.L_47e820

block_.L_47e7f6:                                  ; preds = %block_47e7dc
  %loadMem_47e7f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 33
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %4199 to i64*
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 11
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %RDI.i627 = bitcast %union.anon* %4202 to i64*
  %4203 = load i64, i64* %PC.i626
  %4204 = add i64 %4203, 10
  store i64 %4204, i64* %PC.i626
  store i64 ptrtoint (%G__0x582c08_type* @G__0x582c08 to i64), i64* %RDI.i627, align 8
  store %struct.Memory* %loadMem_47e7f6, %struct.Memory** %MEMORY
  %loadMem_47e800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 9
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %RSI.i624 = bitcast %union.anon* %4210 to i64*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 15
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %4213 to i64*
  %4214 = load i64, i64* %RBP.i625
  %4215 = sub i64 %4214, 8
  %4216 = load i64, i64* %PC.i623
  %4217 = add i64 %4216, 3
  store i64 %4217, i64* %PC.i623
  %4218 = inttoptr i64 %4215 to i32*
  %4219 = load i32, i32* %4218
  %4220 = zext i32 %4219 to i64
  store i64 %4220, i64* %RSI.i624, align 8
  store %struct.Memory* %loadMem_47e800, %struct.Memory** %MEMORY
  %loadMem_47e803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 7
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RDX.i621 = bitcast %union.anon* %4226 to i64*
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 15
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %4229 to i64*
  %4230 = load i64, i64* %RBP.i622
  %4231 = sub i64 %4230, 692
  %4232 = load i64, i64* %PC.i620
  %4233 = add i64 %4232, 6
  store i64 %4233, i64* %PC.i620
  %4234 = inttoptr i64 %4231 to i32*
  %4235 = load i32, i32* %4234
  %4236 = zext i32 %4235 to i64
  store i64 %4236, i64* %RDX.i621, align 8
  store %struct.Memory* %loadMem_47e803, %struct.Memory** %MEMORY
  %loadMem_47e809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4238 = getelementptr inbounds %struct.GPR, %struct.GPR* %4237, i32 0, i32 33
  %4239 = getelementptr inbounds %struct.Reg, %struct.Reg* %4238, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4239 to i64*
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 5
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %4242 to i64*
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4244 = getelementptr inbounds %struct.GPR, %struct.GPR* %4243, i32 0, i32 15
  %4245 = getelementptr inbounds %struct.Reg, %struct.Reg* %4244, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %4245 to i64*
  %4246 = load i64, i64* %RBP.i619
  %4247 = sub i64 %4246, 696
  %4248 = load i64, i64* %PC.i617
  %4249 = add i64 %4248, 6
  store i64 %4249, i64* %PC.i617
  %4250 = inttoptr i64 %4247 to i32*
  %4251 = load i32, i32* %4250
  %4252 = zext i32 %4251 to i64
  store i64 %4252, i64* %RCX.i618, align 8
  store %struct.Memory* %loadMem_47e809, %struct.Memory** %MEMORY
  %loadMem_47e80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 33
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4255 to i64*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 17
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %R8D.i615 = bitcast %union.anon* %4258 to i32*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 15
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %4261 to i64*
  %4262 = bitcast i32* %R8D.i615 to i64*
  %4263 = load i64, i64* %RBP.i616
  %4264 = sub i64 %4263, 24
  %4265 = load i64, i64* %PC.i614
  %4266 = add i64 %4265, 4
  store i64 %4266, i64* %PC.i614
  %4267 = inttoptr i64 %4264 to i32*
  %4268 = load i32, i32* %4267
  %4269 = zext i32 %4268 to i64
  store i64 %4269, i64* %4262, align 8
  store %struct.Memory* %loadMem_47e80f, %struct.Memory** %MEMORY
  %loadMem_47e813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 33
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4272 to i64*
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4274 = getelementptr inbounds %struct.GPR, %struct.GPR* %4273, i32 0, i32 1
  %4275 = getelementptr inbounds %struct.Reg, %struct.Reg* %4274, i32 0, i32 0
  %4276 = bitcast %union.anon* %4275 to %struct.anon.2*
  %AL.i613 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4276, i32 0, i32 0
  %4277 = load i64, i64* %PC.i612
  %4278 = add i64 %4277, 2
  store i64 %4278, i64* %PC.i612
  store i8 0, i8* %AL.i613, align 1
  store %struct.Memory* %loadMem_47e813, %struct.Memory** %MEMORY
  %loadMem1_47e815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 33
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %4281 to i64*
  %4282 = load i64, i64* %PC.i611
  %4283 = add i64 %4282, -182885
  %4284 = load i64, i64* %PC.i611
  %4285 = add i64 %4284, 5
  %4286 = load i64, i64* %PC.i611
  %4287 = add i64 %4286, 5
  store i64 %4287, i64* %PC.i611
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4289 = load i64, i64* %4288, align 8
  %4290 = add i64 %4289, -8
  %4291 = inttoptr i64 %4290 to i64*
  store i64 %4285, i64* %4291
  store i64 %4290, i64* %4288, align 8
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4283, i64* %4292, align 8
  store %struct.Memory* %loadMem1_47e815, %struct.Memory** %MEMORY
  %loadMem2_47e815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e815 = load i64, i64* %3
  %call2_47e815 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47e815, %struct.Memory* %loadMem2_47e815)
  store %struct.Memory* %call2_47e815, %struct.Memory** %MEMORY
  %loadMem_47e81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 33
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %4295 to i64*
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 1
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %EAX.i609 = bitcast %union.anon* %4298 to i32*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 15
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %4301 to i64*
  %4302 = load i64, i64* %RBP.i610
  %4303 = sub i64 %4302, 720
  %4304 = load i32, i32* %EAX.i609
  %4305 = zext i32 %4304 to i64
  %4306 = load i64, i64* %PC.i608
  %4307 = add i64 %4306, 6
  store i64 %4307, i64* %PC.i608
  %4308 = inttoptr i64 %4303 to i32*
  store i32 %4304, i32* %4308
  store %struct.Memory* %loadMem_47e81a, %struct.Memory** %MEMORY
  br label %block_.L_47e820

block_.L_47e820:                                  ; preds = %block_.L_47e7f6, %block_47e7f1
  %loadMem_47e820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4310 = getelementptr inbounds %struct.GPR, %struct.GPR* %4309, i32 0, i32 33
  %4311 = getelementptr inbounds %struct.Reg, %struct.Reg* %4310, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %4311 to i64*
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4313 = getelementptr inbounds %struct.GPR, %struct.GPR* %4312, i32 0, i32 11
  %4314 = getelementptr inbounds %struct.Reg, %struct.Reg* %4313, i32 0, i32 0
  %RDI.i606 = bitcast %union.anon* %4314 to i64*
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4316 = getelementptr inbounds %struct.GPR, %struct.GPR* %4315, i32 0, i32 15
  %4317 = getelementptr inbounds %struct.Reg, %struct.Reg* %4316, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %4317 to i64*
  %4318 = load i64, i64* %RBP.i607
  %4319 = sub i64 %4318, 8
  %4320 = load i64, i64* %PC.i605
  %4321 = add i64 %4320, 3
  store i64 %4321, i64* %PC.i605
  %4322 = inttoptr i64 %4319 to i32*
  %4323 = load i32, i32* %4322
  %4324 = zext i32 %4323 to i64
  store i64 %4324, i64* %RDI.i606, align 8
  store %struct.Memory* %loadMem_47e820, %struct.Memory** %MEMORY
  %loadMem_47e823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 33
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %4327 to i64*
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 9
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %RSI.i603 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 15
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %4333 to i64*
  %4334 = load i64, i64* %RBP.i604
  %4335 = sub i64 %4334, 692
  %4336 = load i64, i64* %PC.i602
  %4337 = add i64 %4336, 6
  store i64 %4337, i64* %PC.i602
  %4338 = inttoptr i64 %4335 to i32*
  %4339 = load i32, i32* %4338
  %4340 = zext i32 %4339 to i64
  store i64 %4340, i64* %RSI.i603, align 8
  store %struct.Memory* %loadMem_47e823, %struct.Memory** %MEMORY
  %loadMem_47e829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4342 = getelementptr inbounds %struct.GPR, %struct.GPR* %4341, i32 0, i32 33
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 7
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %RDX.i600 = bitcast %union.anon* %4346 to i64*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 15
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %RBP.i601 = bitcast %union.anon* %4349 to i64*
  %4350 = load i64, i64* %RBP.i601
  %4351 = sub i64 %4350, 696
  %4352 = load i64, i64* %PC.i599
  %4353 = add i64 %4352, 6
  store i64 %4353, i64* %PC.i599
  %4354 = inttoptr i64 %4351 to i32*
  %4355 = load i32, i32* %4354
  %4356 = zext i32 %4355 to i64
  store i64 %4356, i64* %RDX.i600, align 8
  store %struct.Memory* %loadMem_47e829, %struct.Memory** %MEMORY
  %loadMem1_47e82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 33
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %4359 to i64*
  %4360 = load i64, i64* %PC.i598
  %4361 = add i64 %4360, -309983
  %4362 = load i64, i64* %PC.i598
  %4363 = add i64 %4362, 5
  %4364 = load i64, i64* %PC.i598
  %4365 = add i64 %4364, 5
  store i64 %4365, i64* %PC.i598
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4367 = load i64, i64* %4366, align 8
  %4368 = add i64 %4367, -8
  %4369 = inttoptr i64 %4368 to i64*
  store i64 %4363, i64* %4369
  store i64 %4368, i64* %4366, align 8
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4361, i64* %4370, align 8
  store %struct.Memory* %loadMem1_47e82f, %struct.Memory** %MEMORY
  %loadMem2_47e82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e82f = load i64, i64* %3
  %call2_47e82f = call %struct.Memory* @sub_432d50.add_connection_move(%struct.State* %0, i64 %loadPC_47e82f, %struct.Memory* %loadMem2_47e82f)
  store %struct.Memory* %call2_47e82f, %struct.Memory** %MEMORY
  br label %block_.L_47e834

block_.L_47e834:                                  ; preds = %block_.L_47e820, %block_47e7be, %block_47e79b, %block_47e791
  %loadMem_47e834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4372 = getelementptr inbounds %struct.GPR, %struct.GPR* %4371, i32 0, i32 33
  %4373 = getelementptr inbounds %struct.Reg, %struct.Reg* %4372, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %4373 to i64*
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4375 = getelementptr inbounds %struct.GPR, %struct.GPR* %4374, i32 0, i32 15
  %4376 = getelementptr inbounds %struct.Reg, %struct.Reg* %4375, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %4376 to i64*
  %4377 = load i64, i64* %RBP.i597
  %4378 = sub i64 %4377, 32
  %4379 = load i64, i64* %PC.i596
  %4380 = add i64 %4379, 4
  store i64 %4380, i64* %PC.i596
  %4381 = inttoptr i64 %4378 to i32*
  %4382 = load i32, i32* %4381
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4383, align 1
  %4384 = and i32 %4382, 255
  %4385 = call i32 @llvm.ctpop.i32(i32 %4384)
  %4386 = trunc i32 %4385 to i8
  %4387 = and i8 %4386, 1
  %4388 = xor i8 %4387, 1
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4388, i8* %4389, align 1
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4390, align 1
  %4391 = icmp eq i32 %4382, 0
  %4392 = zext i1 %4391 to i8
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4392, i8* %4393, align 1
  %4394 = lshr i32 %4382, 31
  %4395 = trunc i32 %4394 to i8
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4395, i8* %4396, align 1
  %4397 = lshr i32 %4382, 31
  %4398 = xor i32 %4394, %4397
  %4399 = add i32 %4398, %4397
  %4400 = icmp eq i32 %4399, 2
  %4401 = zext i1 %4400 to i8
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4401, i8* %4402, align 1
  store %struct.Memory* %loadMem_47e834, %struct.Memory** %MEMORY
  %loadMem_47e838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4404 = getelementptr inbounds %struct.GPR, %struct.GPR* %4403, i32 0, i32 33
  %4405 = getelementptr inbounds %struct.Reg, %struct.Reg* %4404, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %4405 to i64*
  %4406 = load i64, i64* %PC.i595
  %4407 = add i64 %4406, 159
  %4408 = load i64, i64* %PC.i595
  %4409 = add i64 %4408, 6
  %4410 = load i64, i64* %PC.i595
  %4411 = add i64 %4410, 6
  store i64 %4411, i64* %PC.i595
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4413 = load i8, i8* %4412, align 1
  %4414 = icmp eq i8 %4413, 0
  %4415 = zext i1 %4414 to i8
  store i8 %4415, i8* %BRANCH_TAKEN, align 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4417 = select i1 %4414, i64 %4407, i64 %4409
  store i64 %4417, i64* %4416, align 8
  store %struct.Memory* %loadMem_47e838, %struct.Memory** %MEMORY
  %loadBr_47e838 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e838 = icmp eq i8 %loadBr_47e838, 1
  br i1 %cmpBr_47e838, label %block_.L_47e8d7, label %block_47e83e

block_47e83e:                                     ; preds = %block_.L_47e834
  %loadMem_47e83e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4419 = getelementptr inbounds %struct.GPR, %struct.GPR* %4418, i32 0, i32 33
  %4420 = getelementptr inbounds %struct.Reg, %struct.Reg* %4419, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %4420 to i64*
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4422 = getelementptr inbounds %struct.GPR, %struct.GPR* %4421, i32 0, i32 1
  %4423 = getelementptr inbounds %struct.Reg, %struct.Reg* %4422, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %4423 to i64*
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 15
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %4426 to i64*
  %4427 = load i64, i64* %RBP.i594
  %4428 = sub i64 %4427, 692
  %4429 = load i64, i64* %PC.i592
  %4430 = add i64 %4429, 7
  store i64 %4430, i64* %PC.i592
  %4431 = inttoptr i64 %4428 to i32*
  %4432 = load i32, i32* %4431
  %4433 = sext i32 %4432 to i64
  store i64 %4433, i64* %RAX.i593, align 8
  store %struct.Memory* %loadMem_47e83e, %struct.Memory** %MEMORY
  %loadMem_47e845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4435 = getelementptr inbounds %struct.GPR, %struct.GPR* %4434, i32 0, i32 33
  %4436 = getelementptr inbounds %struct.Reg, %struct.Reg* %4435, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %4436 to i64*
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 1
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %4439 to i64*
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 5
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %4442 to i64*
  %4443 = load i64, i64* %RAX.i590
  %4444 = add i64 %4443, 12099168
  %4445 = load i64, i64* %PC.i589
  %4446 = add i64 %4445, 8
  store i64 %4446, i64* %PC.i589
  %4447 = inttoptr i64 %4444 to i8*
  %4448 = load i8, i8* %4447
  %4449 = zext i8 %4448 to i64
  store i64 %4449, i64* %RCX.i591, align 8
  store %struct.Memory* %loadMem_47e845, %struct.Memory** %MEMORY
  %loadMem_47e84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4451 = getelementptr inbounds %struct.GPR, %struct.GPR* %4450, i32 0, i32 33
  %4452 = getelementptr inbounds %struct.Reg, %struct.Reg* %4451, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %4452 to i64*
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 1
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %4455 to i64*
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 15
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %4458 to i64*
  %4459 = load i64, i64* %RBP.i588
  %4460 = sub i64 %4459, 24
  %4461 = load i64, i64* %PC.i586
  %4462 = add i64 %4461, 4
  store i64 %4462, i64* %PC.i586
  %4463 = inttoptr i64 %4460 to i32*
  %4464 = load i32, i32* %4463
  %4465 = sext i32 %4464 to i64
  store i64 %4465, i64* %RAX.i587, align 8
  store %struct.Memory* %loadMem_47e84d, %struct.Memory** %MEMORY
  %loadMem_47e851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4467 = getelementptr inbounds %struct.GPR, %struct.GPR* %4466, i32 0, i32 33
  %4468 = getelementptr inbounds %struct.Reg, %struct.Reg* %4467, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %4468 to i64*
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 1
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %RAX.i584 = bitcast %union.anon* %4471 to i64*
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 7
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %RDX.i585 = bitcast %union.anon* %4474 to i64*
  %4475 = load i64, i64* %RAX.i584
  %4476 = add i64 %4475, 12099168
  %4477 = load i64, i64* %PC.i583
  %4478 = add i64 %4477, 8
  store i64 %4478, i64* %PC.i583
  %4479 = inttoptr i64 %4476 to i8*
  %4480 = load i8, i8* %4479
  %4481 = zext i8 %4480 to i64
  store i64 %4481, i64* %RDX.i585, align 8
  store %struct.Memory* %loadMem_47e851, %struct.Memory** %MEMORY
  %loadMem_47e859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 33
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %4484 to i64*
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 5
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %ECX.i581 = bitcast %union.anon* %4487 to i32*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 7
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %EDX.i582 = bitcast %union.anon* %4490 to i32*
  %4491 = load i32, i32* %ECX.i581
  %4492 = zext i32 %4491 to i64
  %4493 = load i32, i32* %EDX.i582
  %4494 = zext i32 %4493 to i64
  %4495 = load i64, i64* %PC.i580
  %4496 = add i64 %4495, 2
  store i64 %4496, i64* %PC.i580
  %4497 = sub i32 %4491, %4493
  %4498 = icmp ult i32 %4491, %4493
  %4499 = zext i1 %4498 to i8
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4499, i8* %4500, align 1
  %4501 = and i32 %4497, 255
  %4502 = call i32 @llvm.ctpop.i32(i32 %4501)
  %4503 = trunc i32 %4502 to i8
  %4504 = and i8 %4503, 1
  %4505 = xor i8 %4504, 1
  %4506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4505, i8* %4506, align 1
  %4507 = xor i64 %4494, %4492
  %4508 = trunc i64 %4507 to i32
  %4509 = xor i32 %4508, %4497
  %4510 = lshr i32 %4509, 4
  %4511 = trunc i32 %4510 to i8
  %4512 = and i8 %4511, 1
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4512, i8* %4513, align 1
  %4514 = icmp eq i32 %4497, 0
  %4515 = zext i1 %4514 to i8
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4515, i8* %4516, align 1
  %4517 = lshr i32 %4497, 31
  %4518 = trunc i32 %4517 to i8
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4518, i8* %4519, align 1
  %4520 = lshr i32 %4491, 31
  %4521 = lshr i32 %4493, 31
  %4522 = xor i32 %4521, %4520
  %4523 = xor i32 %4517, %4520
  %4524 = add i32 %4523, %4522
  %4525 = icmp eq i32 %4524, 2
  %4526 = zext i1 %4525 to i8
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4526, i8* %4527, align 1
  store %struct.Memory* %loadMem_47e859, %struct.Memory** %MEMORY
  %loadMem_47e85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4529 = getelementptr inbounds %struct.GPR, %struct.GPR* %4528, i32 0, i32 33
  %4530 = getelementptr inbounds %struct.Reg, %struct.Reg* %4529, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %4530 to i64*
  %4531 = load i64, i64* %PC.i579
  %4532 = add i64 %4531, 124
  %4533 = load i64, i64* %PC.i579
  %4534 = add i64 %4533, 6
  %4535 = load i64, i64* %PC.i579
  %4536 = add i64 %4535, 6
  store i64 %4536, i64* %PC.i579
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4538 = load i8, i8* %4537, align 1
  store i8 %4538, i8* %BRANCH_TAKEN, align 1
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4540 = icmp ne i8 %4538, 0
  %4541 = select i1 %4540, i64 %4532, i64 %4534
  store i64 %4541, i64* %4539, align 8
  store %struct.Memory* %loadMem_47e85b, %struct.Memory** %MEMORY
  %loadBr_47e85b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e85b = icmp eq i8 %loadBr_47e85b, 1
  br i1 %cmpBr_47e85b, label %block_.L_47e8d7, label %block_47e861

block_47e861:                                     ; preds = %block_47e83e
  %loadMem_47e861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4543 = getelementptr inbounds %struct.GPR, %struct.GPR* %4542, i32 0, i32 33
  %4544 = getelementptr inbounds %struct.Reg, %struct.Reg* %4543, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %4544 to i64*
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 1
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %EAX.i577 = bitcast %union.anon* %4547 to i32*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 1
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %4550 to i64*
  %4551 = load i64, i64* %RAX.i578
  %4552 = load i32, i32* %EAX.i577
  %4553 = zext i32 %4552 to i64
  %4554 = load i64, i64* %PC.i576
  %4555 = add i64 %4554, 2
  store i64 %4555, i64* %PC.i576
  %4556 = xor i64 %4553, %4551
  %4557 = trunc i64 %4556 to i32
  %4558 = and i64 %4556, 4294967295
  store i64 %4558, i64* %RAX.i578, align 8
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4559, align 1
  %4560 = and i32 %4557, 255
  %4561 = call i32 @llvm.ctpop.i32(i32 %4560)
  %4562 = trunc i32 %4561 to i8
  %4563 = and i8 %4562, 1
  %4564 = xor i8 %4563, 1
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4564, i8* %4565, align 1
  %4566 = icmp eq i32 %4557, 0
  %4567 = zext i1 %4566 to i8
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4567, i8* %4568, align 1
  %4569 = lshr i32 %4557, 31
  %4570 = trunc i32 %4569 to i8
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4570, i8* %4571, align 1
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4572, align 1
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4573, align 1
  store %struct.Memory* %loadMem_47e861, %struct.Memory** %MEMORY
  %loadMem_47e863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 33
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %4576 to i64*
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 1
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %EAX.i574 = bitcast %union.anon* %4579 to i32*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 7
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RDX.i575 = bitcast %union.anon* %4582 to i64*
  %4583 = load i32, i32* %EAX.i574
  %4584 = zext i32 %4583 to i64
  %4585 = load i64, i64* %PC.i573
  %4586 = add i64 %4585, 2
  store i64 %4586, i64* %PC.i573
  %4587 = and i64 %4584, 4294967295
  store i64 %4587, i64* %RDX.i575, align 8
  store %struct.Memory* %loadMem_47e863, %struct.Memory** %MEMORY
  %loadMem_47e865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4589 = getelementptr inbounds %struct.GPR, %struct.GPR* %4588, i32 0, i32 33
  %4590 = getelementptr inbounds %struct.Reg, %struct.Reg* %4589, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %4590 to i64*
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4592 = getelementptr inbounds %struct.GPR, %struct.GPR* %4591, i32 0, i32 11
  %4593 = getelementptr inbounds %struct.Reg, %struct.Reg* %4592, i32 0, i32 0
  %RDI.i571 = bitcast %union.anon* %4593 to i64*
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4595 = getelementptr inbounds %struct.GPR, %struct.GPR* %4594, i32 0, i32 15
  %4596 = getelementptr inbounds %struct.Reg, %struct.Reg* %4595, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %4596 to i64*
  %4597 = load i64, i64* %RBP.i572
  %4598 = sub i64 %4597, 692
  %4599 = load i64, i64* %PC.i570
  %4600 = add i64 %4599, 6
  store i64 %4600, i64* %PC.i570
  %4601 = inttoptr i64 %4598 to i32*
  %4602 = load i32, i32* %4601
  %4603 = zext i32 %4602 to i64
  store i64 %4603, i64* %RDI.i571, align 8
  store %struct.Memory* %loadMem_47e865, %struct.Memory** %MEMORY
  %loadMem_47e86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4605 = getelementptr inbounds %struct.GPR, %struct.GPR* %4604, i32 0, i32 33
  %4606 = getelementptr inbounds %struct.Reg, %struct.Reg* %4605, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %4606 to i64*
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4608 = getelementptr inbounds %struct.GPR, %struct.GPR* %4607, i32 0, i32 9
  %4609 = getelementptr inbounds %struct.Reg, %struct.Reg* %4608, i32 0, i32 0
  %RSI.i568 = bitcast %union.anon* %4609 to i64*
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4611 = getelementptr inbounds %struct.GPR, %struct.GPR* %4610, i32 0, i32 15
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %4612 to i64*
  %4613 = load i64, i64* %RBP.i569
  %4614 = sub i64 %4613, 696
  %4615 = load i64, i64* %PC.i567
  %4616 = add i64 %4615, 6
  store i64 %4616, i64* %PC.i567
  %4617 = inttoptr i64 %4614 to i32*
  %4618 = load i32, i32* %4617
  %4619 = zext i32 %4618 to i64
  store i64 %4619, i64* %RSI.i568, align 8
  store %struct.Memory* %loadMem_47e86b, %struct.Memory** %MEMORY
  %loadMem1_47e871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4621 = getelementptr inbounds %struct.GPR, %struct.GPR* %4620, i32 0, i32 33
  %4622 = getelementptr inbounds %struct.Reg, %struct.Reg* %4621, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %4622 to i64*
  %4623 = load i64, i64* %PC.i566
  %4624 = add i64 %4623, -180001
  %4625 = load i64, i64* %PC.i566
  %4626 = add i64 %4625, 5
  %4627 = load i64, i64* %PC.i566
  %4628 = add i64 %4627, 5
  store i64 %4628, i64* %PC.i566
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4630 = load i64, i64* %4629, align 8
  %4631 = add i64 %4630, -8
  %4632 = inttoptr i64 %4631 to i64*
  store i64 %4626, i64* %4632
  store i64 %4631, i64* %4629, align 8
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4624, i64* %4633, align 8
  store %struct.Memory* %loadMem1_47e871, %struct.Memory** %MEMORY
  %loadMem2_47e871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e871 = load i64, i64* %3
  %call2_47e871 = call %struct.Memory* @sub_452950.string_connect(%struct.State* %0, i64 %loadPC_47e871, %struct.Memory* %loadMem2_47e871)
  store %struct.Memory* %call2_47e871, %struct.Memory** %MEMORY
  %loadMem_47e876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 33
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 1
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %EAX.i565 = bitcast %union.anon* %4639 to i32*
  %4640 = load i32, i32* %EAX.i565
  %4641 = zext i32 %4640 to i64
  %4642 = load i64, i64* %PC.i564
  %4643 = add i64 %4642, 3
  store i64 %4643, i64* %PC.i564
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4644, align 1
  %4645 = and i32 %4640, 255
  %4646 = call i32 @llvm.ctpop.i32(i32 %4645)
  %4647 = trunc i32 %4646 to i8
  %4648 = and i8 %4647, 1
  %4649 = xor i8 %4648, 1
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4649, i8* %4650, align 1
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4651, align 1
  %4652 = icmp eq i32 %4640, 0
  %4653 = zext i1 %4652 to i8
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4653, i8* %4654, align 1
  %4655 = lshr i32 %4640, 31
  %4656 = trunc i32 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4656, i8* %4657, align 1
  %4658 = lshr i32 %4640, 31
  %4659 = xor i32 %4655, %4658
  %4660 = add i32 %4659, %4658
  %4661 = icmp eq i32 %4660, 2
  %4662 = zext i1 %4661 to i8
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4662, i8* %4663, align 1
  store %struct.Memory* %loadMem_47e876, %struct.Memory** %MEMORY
  %loadMem_47e879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4665 = getelementptr inbounds %struct.GPR, %struct.GPR* %4664, i32 0, i32 33
  %4666 = getelementptr inbounds %struct.Reg, %struct.Reg* %4665, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %4666 to i64*
  %4667 = load i64, i64* %PC.i563
  %4668 = add i64 %4667, 94
  %4669 = load i64, i64* %PC.i563
  %4670 = add i64 %4669, 6
  %4671 = load i64, i64* %PC.i563
  %4672 = add i64 %4671, 6
  store i64 %4672, i64* %PC.i563
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4674 = load i8, i8* %4673, align 1
  %4675 = icmp eq i8 %4674, 0
  %4676 = zext i1 %4675 to i8
  store i8 %4676, i8* %BRANCH_TAKEN, align 1
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4678 = select i1 %4675, i64 %4668, i64 %4670
  store i64 %4678, i64* %4677, align 8
  store %struct.Memory* %loadMem_47e879, %struct.Memory** %MEMORY
  %loadBr_47e879 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e879 = icmp eq i8 %loadBr_47e879, 1
  br i1 %cmpBr_47e879, label %block_.L_47e8d7, label %block_47e87f

block_47e87f:                                     ; preds = %block_47e861
  %loadMem_47e87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4680 = getelementptr inbounds %struct.GPR, %struct.GPR* %4679, i32 0, i32 33
  %4681 = getelementptr inbounds %struct.Reg, %struct.Reg* %4680, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %4681 to i64*
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4683 = getelementptr inbounds %struct.GPR, %struct.GPR* %4682, i32 0, i32 1
  %4684 = getelementptr inbounds %struct.Reg, %struct.Reg* %4683, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %4684 to i64*
  %4685 = load i64, i64* %PC.i561
  %4686 = add i64 %4685, 7
  store i64 %4686, i64* %PC.i561
  %4687 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %4688 = zext i32 %4687 to i64
  store i64 %4688, i64* %RAX.i562, align 8
  store %struct.Memory* %loadMem_47e87f, %struct.Memory** %MEMORY
  %loadMem_47e886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 33
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %4691 to i64*
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4693 = getelementptr inbounds %struct.GPR, %struct.GPR* %4692, i32 0, i32 1
  %4694 = getelementptr inbounds %struct.Reg, %struct.Reg* %4693, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %4694 to i64*
  %4695 = load i64, i64* %RAX.i560
  %4696 = load i64, i64* %PC.i559
  %4697 = add i64 %4696, 5
  store i64 %4697, i64* %PC.i559
  %4698 = and i64 2048, %4695
  %4699 = trunc i64 %4698 to i32
  store i64 %4698, i64* %RAX.i560, align 8
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4700, align 1
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %4701, align 1
  %4702 = icmp eq i32 %4699, 0
  %4703 = zext i1 %4702 to i8
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4703, i8* %4704, align 1
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4705, align 1
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4706, align 1
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4707, align 1
  store %struct.Memory* %loadMem_47e886, %struct.Memory** %MEMORY
  %loadMem_47e88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4709 = getelementptr inbounds %struct.GPR, %struct.GPR* %4708, i32 0, i32 33
  %4710 = getelementptr inbounds %struct.Reg, %struct.Reg* %4709, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %4710 to i64*
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4712 = getelementptr inbounds %struct.GPR, %struct.GPR* %4711, i32 0, i32 1
  %4713 = getelementptr inbounds %struct.Reg, %struct.Reg* %4712, i32 0, i32 0
  %EAX.i558 = bitcast %union.anon* %4713 to i32*
  %4714 = load i32, i32* %EAX.i558
  %4715 = zext i32 %4714 to i64
  %4716 = load i64, i64* %PC.i557
  %4717 = add i64 %4716, 3
  store i64 %4717, i64* %PC.i557
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4718, align 1
  %4719 = and i32 %4714, 255
  %4720 = call i32 @llvm.ctpop.i32(i32 %4719)
  %4721 = trunc i32 %4720 to i8
  %4722 = and i8 %4721, 1
  %4723 = xor i8 %4722, 1
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4723, i8* %4724, align 1
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4725, align 1
  %4726 = icmp eq i32 %4714, 0
  %4727 = zext i1 %4726 to i8
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4727, i8* %4728, align 1
  %4729 = lshr i32 %4714, 31
  %4730 = trunc i32 %4729 to i8
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4730, i8* %4731, align 1
  %4732 = lshr i32 %4714, 31
  %4733 = xor i32 %4729, %4732
  %4734 = add i32 %4733, %4732
  %4735 = icmp eq i32 %4734, 2
  %4736 = zext i1 %4735 to i8
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4736, i8* %4737, align 1
  store %struct.Memory* %loadMem_47e88b, %struct.Memory** %MEMORY
  %loadMem_47e88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4739 = getelementptr inbounds %struct.GPR, %struct.GPR* %4738, i32 0, i32 33
  %4740 = getelementptr inbounds %struct.Reg, %struct.Reg* %4739, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %4740 to i64*
  %4741 = load i64, i64* %PC.i556
  %4742 = add i64 %4741, 11
  %4743 = load i64, i64* %PC.i556
  %4744 = add i64 %4743, 6
  %4745 = load i64, i64* %PC.i556
  %4746 = add i64 %4745, 6
  store i64 %4746, i64* %PC.i556
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4748 = load i8, i8* %4747, align 1
  %4749 = icmp eq i8 %4748, 0
  %4750 = zext i1 %4749 to i8
  store i8 %4750, i8* %BRANCH_TAKEN, align 1
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4752 = select i1 %4749, i64 %4742, i64 %4744
  store i64 %4752, i64* %4751, align 8
  store %struct.Memory* %loadMem_47e88e, %struct.Memory** %MEMORY
  %loadBr_47e88e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e88e = icmp eq i8 %loadBr_47e88e, 1
  br i1 %cmpBr_47e88e, label %block_.L_47e899, label %block_47e894

block_47e894:                                     ; preds = %block_47e87f
  %loadMem_47e894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4754 = getelementptr inbounds %struct.GPR, %struct.GPR* %4753, i32 0, i32 33
  %4755 = getelementptr inbounds %struct.Reg, %struct.Reg* %4754, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %4755 to i64*
  %4756 = load i64, i64* %PC.i555
  %4757 = add i64 %4756, 47
  %4758 = load i64, i64* %PC.i555
  %4759 = add i64 %4758, 5
  store i64 %4759, i64* %PC.i555
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4757, i64* %4760, align 8
  store %struct.Memory* %loadMem_47e894, %struct.Memory** %MEMORY
  br label %block_.L_47e8c3

block_.L_47e899:                                  ; preds = %block_47e87f
  %loadMem_47e899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %4763 to i64*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 11
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %RDI.i554 = bitcast %union.anon* %4766 to i64*
  %4767 = load i64, i64* %PC.i553
  %4768 = add i64 %4767, 10
  store i64 %4768, i64* %PC.i553
  store i64 ptrtoint (%G__0x582c49_type* @G__0x582c49 to i64), i64* %RDI.i554, align 8
  store %struct.Memory* %loadMem_47e899, %struct.Memory** %MEMORY
  %loadMem_47e8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4770 = getelementptr inbounds %struct.GPR, %struct.GPR* %4769, i32 0, i32 33
  %4771 = getelementptr inbounds %struct.Reg, %struct.Reg* %4770, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %4771 to i64*
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4773 = getelementptr inbounds %struct.GPR, %struct.GPR* %4772, i32 0, i32 9
  %4774 = getelementptr inbounds %struct.Reg, %struct.Reg* %4773, i32 0, i32 0
  %RSI.i551 = bitcast %union.anon* %4774 to i64*
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 15
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %4777 to i64*
  %4778 = load i64, i64* %RBP.i552
  %4779 = sub i64 %4778, 8
  %4780 = load i64, i64* %PC.i550
  %4781 = add i64 %4780, 3
  store i64 %4781, i64* %PC.i550
  %4782 = inttoptr i64 %4779 to i32*
  %4783 = load i32, i32* %4782
  %4784 = zext i32 %4783 to i64
  store i64 %4784, i64* %RSI.i551, align 8
  store %struct.Memory* %loadMem_47e8a3, %struct.Memory** %MEMORY
  %loadMem_47e8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4786 = getelementptr inbounds %struct.GPR, %struct.GPR* %4785, i32 0, i32 33
  %4787 = getelementptr inbounds %struct.Reg, %struct.Reg* %4786, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %4787 to i64*
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4789 = getelementptr inbounds %struct.GPR, %struct.GPR* %4788, i32 0, i32 7
  %4790 = getelementptr inbounds %struct.Reg, %struct.Reg* %4789, i32 0, i32 0
  %RDX.i548 = bitcast %union.anon* %4790 to i64*
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 15
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %4793 to i64*
  %4794 = load i64, i64* %RBP.i549
  %4795 = sub i64 %4794, 692
  %4796 = load i64, i64* %PC.i547
  %4797 = add i64 %4796, 6
  store i64 %4797, i64* %PC.i547
  %4798 = inttoptr i64 %4795 to i32*
  %4799 = load i32, i32* %4798
  %4800 = zext i32 %4799 to i64
  store i64 %4800, i64* %RDX.i548, align 8
  store %struct.Memory* %loadMem_47e8a6, %struct.Memory** %MEMORY
  %loadMem_47e8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 33
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %4803 to i64*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 5
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %4806 to i64*
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 15
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %4809 to i64*
  %4810 = load i64, i64* %RBP.i546
  %4811 = sub i64 %4810, 696
  %4812 = load i64, i64* %PC.i544
  %4813 = add i64 %4812, 6
  store i64 %4813, i64* %PC.i544
  %4814 = inttoptr i64 %4811 to i32*
  %4815 = load i32, i32* %4814
  %4816 = zext i32 %4815 to i64
  store i64 %4816, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_47e8ac, %struct.Memory** %MEMORY
  %loadMem_47e8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4818 = getelementptr inbounds %struct.GPR, %struct.GPR* %4817, i32 0, i32 33
  %4819 = getelementptr inbounds %struct.Reg, %struct.Reg* %4818, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %4819 to i64*
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4821 = getelementptr inbounds %struct.GPR, %struct.GPR* %4820, i32 0, i32 17
  %4822 = getelementptr inbounds %struct.Reg, %struct.Reg* %4821, i32 0, i32 0
  %R8D.i542 = bitcast %union.anon* %4822 to i32*
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 15
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %4825 to i64*
  %4826 = bitcast i32* %R8D.i542 to i64*
  %4827 = load i64, i64* %RBP.i543
  %4828 = sub i64 %4827, 24
  %4829 = load i64, i64* %PC.i541
  %4830 = add i64 %4829, 4
  store i64 %4830, i64* %PC.i541
  %4831 = inttoptr i64 %4828 to i32*
  %4832 = load i32, i32* %4831
  %4833 = zext i32 %4832 to i64
  store i64 %4833, i64* %4826, align 8
  store %struct.Memory* %loadMem_47e8b2, %struct.Memory** %MEMORY
  %loadMem_47e8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 1
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %4840 = bitcast %union.anon* %4839 to %struct.anon.2*
  %AL.i540 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4840, i32 0, i32 0
  %4841 = load i64, i64* %PC.i539
  %4842 = add i64 %4841, 2
  store i64 %4842, i64* %PC.i539
  store i8 0, i8* %AL.i540, align 1
  store %struct.Memory* %loadMem_47e8b6, %struct.Memory** %MEMORY
  %loadMem1_47e8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 33
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %4845 to i64*
  %4846 = load i64, i64* %PC.i538
  %4847 = add i64 %4846, -183048
  %4848 = load i64, i64* %PC.i538
  %4849 = add i64 %4848, 5
  %4850 = load i64, i64* %PC.i538
  %4851 = add i64 %4850, 5
  store i64 %4851, i64* %PC.i538
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4853 = load i64, i64* %4852, align 8
  %4854 = add i64 %4853, -8
  %4855 = inttoptr i64 %4854 to i64*
  store i64 %4849, i64* %4855
  store i64 %4854, i64* %4852, align 8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4847, i64* %4856, align 8
  store %struct.Memory* %loadMem1_47e8b8, %struct.Memory** %MEMORY
  %loadMem2_47e8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e8b8 = load i64, i64* %3
  %call2_47e8b8 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47e8b8, %struct.Memory* %loadMem2_47e8b8)
  store %struct.Memory* %call2_47e8b8, %struct.Memory** %MEMORY
  %loadMem_47e8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 33
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 1
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %EAX.i536 = bitcast %union.anon* %4862 to i32*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 15
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %4865 to i64*
  %4866 = load i64, i64* %RBP.i537
  %4867 = sub i64 %4866, 724
  %4868 = load i32, i32* %EAX.i536
  %4869 = zext i32 %4868 to i64
  %4870 = load i64, i64* %PC.i535
  %4871 = add i64 %4870, 6
  store i64 %4871, i64* %PC.i535
  %4872 = inttoptr i64 %4867 to i32*
  store i32 %4868, i32* %4872
  store %struct.Memory* %loadMem_47e8bd, %struct.Memory** %MEMORY
  br label %block_.L_47e8c3

block_.L_47e8c3:                                  ; preds = %block_.L_47e899, %block_47e894
  %loadMem_47e8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 33
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %4875 to i64*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4877 = getelementptr inbounds %struct.GPR, %struct.GPR* %4876, i32 0, i32 11
  %4878 = getelementptr inbounds %struct.Reg, %struct.Reg* %4877, i32 0, i32 0
  %RDI.i533 = bitcast %union.anon* %4878 to i64*
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4880 = getelementptr inbounds %struct.GPR, %struct.GPR* %4879, i32 0, i32 15
  %4881 = getelementptr inbounds %struct.Reg, %struct.Reg* %4880, i32 0, i32 0
  %RBP.i534 = bitcast %union.anon* %4881 to i64*
  %4882 = load i64, i64* %RBP.i534
  %4883 = sub i64 %4882, 8
  %4884 = load i64, i64* %PC.i532
  %4885 = add i64 %4884, 3
  store i64 %4885, i64* %PC.i532
  %4886 = inttoptr i64 %4883 to i32*
  %4887 = load i32, i32* %4886
  %4888 = zext i32 %4887 to i64
  store i64 %4888, i64* %RDI.i533, align 8
  store %struct.Memory* %loadMem_47e8c3, %struct.Memory** %MEMORY
  %loadMem_47e8c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4890 = getelementptr inbounds %struct.GPR, %struct.GPR* %4889, i32 0, i32 33
  %4891 = getelementptr inbounds %struct.Reg, %struct.Reg* %4890, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %4891 to i64*
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4893 = getelementptr inbounds %struct.GPR, %struct.GPR* %4892, i32 0, i32 9
  %4894 = getelementptr inbounds %struct.Reg, %struct.Reg* %4893, i32 0, i32 0
  %RSI.i530 = bitcast %union.anon* %4894 to i64*
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 15
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %4897 to i64*
  %4898 = load i64, i64* %RBP.i531
  %4899 = sub i64 %4898, 692
  %4900 = load i64, i64* %PC.i529
  %4901 = add i64 %4900, 6
  store i64 %4901, i64* %PC.i529
  %4902 = inttoptr i64 %4899 to i32*
  %4903 = load i32, i32* %4902
  %4904 = zext i32 %4903 to i64
  store i64 %4904, i64* %RSI.i530, align 8
  store %struct.Memory* %loadMem_47e8c6, %struct.Memory** %MEMORY
  %loadMem_47e8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4906 = getelementptr inbounds %struct.GPR, %struct.GPR* %4905, i32 0, i32 33
  %4907 = getelementptr inbounds %struct.Reg, %struct.Reg* %4906, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %4907 to i64*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4909 = getelementptr inbounds %struct.GPR, %struct.GPR* %4908, i32 0, i32 7
  %4910 = getelementptr inbounds %struct.Reg, %struct.Reg* %4909, i32 0, i32 0
  %RDX.i527 = bitcast %union.anon* %4910 to i64*
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4912 = getelementptr inbounds %struct.GPR, %struct.GPR* %4911, i32 0, i32 15
  %4913 = getelementptr inbounds %struct.Reg, %struct.Reg* %4912, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %4913 to i64*
  %4914 = load i64, i64* %RBP.i528
  %4915 = sub i64 %4914, 696
  %4916 = load i64, i64* %PC.i526
  %4917 = add i64 %4916, 6
  store i64 %4917, i64* %PC.i526
  %4918 = inttoptr i64 %4915 to i32*
  %4919 = load i32, i32* %4918
  %4920 = zext i32 %4919 to i64
  store i64 %4920, i64* %RDX.i527, align 8
  store %struct.Memory* %loadMem_47e8cc, %struct.Memory** %MEMORY
  %loadMem1_47e8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4922 = getelementptr inbounds %struct.GPR, %struct.GPR* %4921, i32 0, i32 33
  %4923 = getelementptr inbounds %struct.Reg, %struct.Reg* %4922, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %4923 to i64*
  %4924 = load i64, i64* %PC.i525
  %4925 = add i64 %4924, -309346
  %4926 = load i64, i64* %PC.i525
  %4927 = add i64 %4926, 5
  %4928 = load i64, i64* %PC.i525
  %4929 = add i64 %4928, 5
  store i64 %4929, i64* %PC.i525
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4931 = load i64, i64* %4930, align 8
  %4932 = add i64 %4931, -8
  %4933 = inttoptr i64 %4932 to i64*
  store i64 %4927, i64* %4933
  store i64 %4932, i64* %4930, align 8
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4925, i64* %4934, align 8
  store %struct.Memory* %loadMem1_47e8d2, %struct.Memory** %MEMORY
  %loadMem2_47e8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e8d2 = load i64, i64* %3
  %call2_47e8d2 = call %struct.Memory* @sub_433070.add_cut_move(%struct.State* %0, i64 %loadPC_47e8d2, %struct.Memory* %loadMem2_47e8d2)
  store %struct.Memory* %call2_47e8d2, %struct.Memory** %MEMORY
  br label %block_.L_47e8d7

block_.L_47e8d7:                                  ; preds = %block_.L_47e8c3, %block_47e861, %block_47e83e, %block_.L_47e834
  %loadMem_47e8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 33
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %4937 to i64*
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4939 = getelementptr inbounds %struct.GPR, %struct.GPR* %4938, i32 0, i32 15
  %4940 = getelementptr inbounds %struct.Reg, %struct.Reg* %4939, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %4940 to i64*
  %4941 = load i64, i64* %RBP.i524
  %4942 = sub i64 %4941, 32
  %4943 = load i64, i64* %PC.i523
  %4944 = add i64 %4943, 4
  store i64 %4944, i64* %PC.i523
  %4945 = inttoptr i64 %4942 to i32*
  %4946 = load i32, i32* %4945
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4947, align 1
  %4948 = and i32 %4946, 255
  %4949 = call i32 @llvm.ctpop.i32(i32 %4948)
  %4950 = trunc i32 %4949 to i8
  %4951 = and i8 %4950, 1
  %4952 = xor i8 %4951, 1
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4952, i8* %4953, align 1
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4954, align 1
  %4955 = icmp eq i32 %4946, 0
  %4956 = zext i1 %4955 to i8
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4956, i8* %4957, align 1
  %4958 = lshr i32 %4946, 31
  %4959 = trunc i32 %4958 to i8
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4959, i8* %4960, align 1
  %4961 = lshr i32 %4946, 31
  %4962 = xor i32 %4958, %4961
  %4963 = add i32 %4962, %4961
  %4964 = icmp eq i32 %4963, 2
  %4965 = zext i1 %4964 to i8
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4965, i8* %4966, align 1
  store %struct.Memory* %loadMem_47e8d7, %struct.Memory** %MEMORY
  %loadMem_47e8db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 33
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %4969 to i64*
  %4970 = load i64, i64* %PC.i522
  %4971 = add i64 %4970, 159
  %4972 = load i64, i64* %PC.i522
  %4973 = add i64 %4972, 6
  %4974 = load i64, i64* %PC.i522
  %4975 = add i64 %4974, 6
  store i64 %4975, i64* %PC.i522
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4977 = load i8, i8* %4976, align 1
  %4978 = icmp eq i8 %4977, 0
  %4979 = zext i1 %4978 to i8
  store i8 %4979, i8* %BRANCH_TAKEN, align 1
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4981 = select i1 %4978, i64 %4971, i64 %4973
  store i64 %4981, i64* %4980, align 8
  store %struct.Memory* %loadMem_47e8db, %struct.Memory** %MEMORY
  %loadBr_47e8db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e8db = icmp eq i8 %loadBr_47e8db, 1
  br i1 %cmpBr_47e8db, label %block_.L_47e97a, label %block_47e8e1

block_47e8e1:                                     ; preds = %block_.L_47e8d7
  %loadMem_47e8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4983 = getelementptr inbounds %struct.GPR, %struct.GPR* %4982, i32 0, i32 33
  %4984 = getelementptr inbounds %struct.Reg, %struct.Reg* %4983, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %4984 to i64*
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 1
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %4987 to i64*
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 15
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %4990 to i64*
  %4991 = load i64, i64* %RBP.i521
  %4992 = sub i64 %4991, 692
  %4993 = load i64, i64* %PC.i519
  %4994 = add i64 %4993, 7
  store i64 %4994, i64* %PC.i519
  %4995 = inttoptr i64 %4992 to i32*
  %4996 = load i32, i32* %4995
  %4997 = sext i32 %4996 to i64
  store i64 %4997, i64* %RAX.i520, align 8
  store %struct.Memory* %loadMem_47e8e1, %struct.Memory** %MEMORY
  %loadMem_47e8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4999 = getelementptr inbounds %struct.GPR, %struct.GPR* %4998, i32 0, i32 33
  %5000 = getelementptr inbounds %struct.Reg, %struct.Reg* %4999, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %5000 to i64*
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5002 = getelementptr inbounds %struct.GPR, %struct.GPR* %5001, i32 0, i32 1
  %5003 = getelementptr inbounds %struct.Reg, %struct.Reg* %5002, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %5003 to i64*
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5005 = getelementptr inbounds %struct.GPR, %struct.GPR* %5004, i32 0, i32 5
  %5006 = getelementptr inbounds %struct.Reg, %struct.Reg* %5005, i32 0, i32 0
  %RCX.i518 = bitcast %union.anon* %5006 to i64*
  %5007 = load i64, i64* %RAX.i517
  %5008 = add i64 %5007, 12099168
  %5009 = load i64, i64* %PC.i516
  %5010 = add i64 %5009, 8
  store i64 %5010, i64* %PC.i516
  %5011 = inttoptr i64 %5008 to i8*
  %5012 = load i8, i8* %5011
  %5013 = zext i8 %5012 to i64
  store i64 %5013, i64* %RCX.i518, align 8
  store %struct.Memory* %loadMem_47e8e8, %struct.Memory** %MEMORY
  %loadMem_47e8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 33
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %5016 to i64*
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 1
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %5019 to i64*
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 15
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %5022 to i64*
  %5023 = load i64, i64* %RBP.i515
  %5024 = sub i64 %5023, 24
  %5025 = load i64, i64* %PC.i513
  %5026 = add i64 %5025, 4
  store i64 %5026, i64* %PC.i513
  %5027 = inttoptr i64 %5024 to i32*
  %5028 = load i32, i32* %5027
  %5029 = sext i32 %5028 to i64
  store i64 %5029, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_47e8f0, %struct.Memory** %MEMORY
  %loadMem_47e8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 33
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %5032 to i64*
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 1
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %5035 to i64*
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5037 = getelementptr inbounds %struct.GPR, %struct.GPR* %5036, i32 0, i32 7
  %5038 = getelementptr inbounds %struct.Reg, %struct.Reg* %5037, i32 0, i32 0
  %RDX.i512 = bitcast %union.anon* %5038 to i64*
  %5039 = load i64, i64* %RAX.i511
  %5040 = add i64 %5039, 12099168
  %5041 = load i64, i64* %PC.i510
  %5042 = add i64 %5041, 8
  store i64 %5042, i64* %PC.i510
  %5043 = inttoptr i64 %5040 to i8*
  %5044 = load i8, i8* %5043
  %5045 = zext i8 %5044 to i64
  store i64 %5045, i64* %RDX.i512, align 8
  store %struct.Memory* %loadMem_47e8f4, %struct.Memory** %MEMORY
  %loadMem_47e8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 33
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %5048 to i64*
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 5
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %ECX.i508 = bitcast %union.anon* %5051 to i32*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 7
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %EDX.i509 = bitcast %union.anon* %5054 to i32*
  %5055 = load i32, i32* %ECX.i508
  %5056 = zext i32 %5055 to i64
  %5057 = load i32, i32* %EDX.i509
  %5058 = zext i32 %5057 to i64
  %5059 = load i64, i64* %PC.i507
  %5060 = add i64 %5059, 2
  store i64 %5060, i64* %PC.i507
  %5061 = sub i32 %5055, %5057
  %5062 = icmp ult i32 %5055, %5057
  %5063 = zext i1 %5062 to i8
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5063, i8* %5064, align 1
  %5065 = and i32 %5061, 255
  %5066 = call i32 @llvm.ctpop.i32(i32 %5065)
  %5067 = trunc i32 %5066 to i8
  %5068 = and i8 %5067, 1
  %5069 = xor i8 %5068, 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5069, i8* %5070, align 1
  %5071 = xor i64 %5058, %5056
  %5072 = trunc i64 %5071 to i32
  %5073 = xor i32 %5072, %5061
  %5074 = lshr i32 %5073, 4
  %5075 = trunc i32 %5074 to i8
  %5076 = and i8 %5075, 1
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5076, i8* %5077, align 1
  %5078 = icmp eq i32 %5061, 0
  %5079 = zext i1 %5078 to i8
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5079, i8* %5080, align 1
  %5081 = lshr i32 %5061, 31
  %5082 = trunc i32 %5081 to i8
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5082, i8* %5083, align 1
  %5084 = lshr i32 %5055, 31
  %5085 = lshr i32 %5057, 31
  %5086 = xor i32 %5085, %5084
  %5087 = xor i32 %5081, %5084
  %5088 = add i32 %5087, %5086
  %5089 = icmp eq i32 %5088, 2
  %5090 = zext i1 %5089 to i8
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5090, i8* %5091, align 1
  store %struct.Memory* %loadMem_47e8fc, %struct.Memory** %MEMORY
  %loadMem_47e8fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %5094 to i64*
  %5095 = load i64, i64* %PC.i506
  %5096 = add i64 %5095, 124
  %5097 = load i64, i64* %PC.i506
  %5098 = add i64 %5097, 6
  %5099 = load i64, i64* %PC.i506
  %5100 = add i64 %5099, 6
  store i64 %5100, i64* %PC.i506
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5102 = load i8, i8* %5101, align 1
  %5103 = icmp eq i8 %5102, 0
  %5104 = zext i1 %5103 to i8
  store i8 %5104, i8* %BRANCH_TAKEN, align 1
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5106 = select i1 %5103, i64 %5096, i64 %5098
  store i64 %5106, i64* %5105, align 8
  store %struct.Memory* %loadMem_47e8fe, %struct.Memory** %MEMORY
  %loadBr_47e8fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e8fe = icmp eq i8 %loadBr_47e8fe, 1
  br i1 %cmpBr_47e8fe, label %block_.L_47e97a, label %block_47e904

block_47e904:                                     ; preds = %block_47e8e1
  %loadMem_47e904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 1
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %EAX.i504 = bitcast %union.anon* %5112 to i32*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 1
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %RAX.i505 = bitcast %union.anon* %5115 to i64*
  %5116 = load i64, i64* %RAX.i505
  %5117 = load i32, i32* %EAX.i504
  %5118 = zext i32 %5117 to i64
  %5119 = load i64, i64* %PC.i503
  %5120 = add i64 %5119, 2
  store i64 %5120, i64* %PC.i503
  %5121 = xor i64 %5118, %5116
  %5122 = trunc i64 %5121 to i32
  %5123 = and i64 %5121, 4294967295
  store i64 %5123, i64* %RAX.i505, align 8
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5124, align 1
  %5125 = and i32 %5122, 255
  %5126 = call i32 @llvm.ctpop.i32(i32 %5125)
  %5127 = trunc i32 %5126 to i8
  %5128 = and i8 %5127, 1
  %5129 = xor i8 %5128, 1
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5129, i8* %5130, align 1
  %5131 = icmp eq i32 %5122, 0
  %5132 = zext i1 %5131 to i8
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5132, i8* %5133, align 1
  %5134 = lshr i32 %5122, 31
  %5135 = trunc i32 %5134 to i8
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5135, i8* %5136, align 1
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5137, align 1
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5138, align 1
  store %struct.Memory* %loadMem_47e904, %struct.Memory** %MEMORY
  %loadMem_47e906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 33
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %5141 to i64*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 1
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %EAX.i501 = bitcast %union.anon* %5144 to i32*
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 7
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %RDX.i502 = bitcast %union.anon* %5147 to i64*
  %5148 = load i32, i32* %EAX.i501
  %5149 = zext i32 %5148 to i64
  %5150 = load i64, i64* %PC.i500
  %5151 = add i64 %5150, 2
  store i64 %5151, i64* %PC.i500
  %5152 = and i64 %5149, 4294967295
  store i64 %5152, i64* %RDX.i502, align 8
  store %struct.Memory* %loadMem_47e906, %struct.Memory** %MEMORY
  %loadMem_47e908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 33
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 11
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %RDI.i498 = bitcast %union.anon* %5158 to i64*
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 15
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %5161 to i64*
  %5162 = load i64, i64* %RBP.i499
  %5163 = sub i64 %5162, 692
  %5164 = load i64, i64* %PC.i497
  %5165 = add i64 %5164, 6
  store i64 %5165, i64* %PC.i497
  %5166 = inttoptr i64 %5163 to i32*
  %5167 = load i32, i32* %5166
  %5168 = zext i32 %5167 to i64
  store i64 %5168, i64* %RDI.i498, align 8
  store %struct.Memory* %loadMem_47e908, %struct.Memory** %MEMORY
  %loadMem_47e90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 33
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 9
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RSI.i495 = bitcast %union.anon* %5174 to i64*
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 15
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %5177 to i64*
  %5178 = load i64, i64* %RBP.i496
  %5179 = sub i64 %5178, 696
  %5180 = load i64, i64* %PC.i494
  %5181 = add i64 %5180, 6
  store i64 %5181, i64* %PC.i494
  %5182 = inttoptr i64 %5179 to i32*
  %5183 = load i32, i32* %5182
  %5184 = zext i32 %5183 to i64
  store i64 %5184, i64* %RSI.i495, align 8
  store %struct.Memory* %loadMem_47e90e, %struct.Memory** %MEMORY
  %loadMem1_47e914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %5187 to i64*
  %5188 = load i64, i64* %PC.i493
  %5189 = add i64 %5188, -134820
  %5190 = load i64, i64* %PC.i493
  %5191 = add i64 %5190, 5
  %5192 = load i64, i64* %PC.i493
  %5193 = add i64 %5192, 5
  store i64 %5193, i64* %PC.i493
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5195 = load i64, i64* %5194, align 8
  %5196 = add i64 %5195, -8
  %5197 = inttoptr i64 %5196 to i64*
  store i64 %5191, i64* %5197
  store i64 %5196, i64* %5194, align 8
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5189, i64* %5198, align 8
  store %struct.Memory* %loadMem1_47e914, %struct.Memory** %MEMORY
  %loadMem2_47e914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e914 = load i64, i64* %3
  %call2_47e914 = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47e914, %struct.Memory* %loadMem2_47e914)
  store %struct.Memory* %call2_47e914, %struct.Memory** %MEMORY
  %loadMem_47e919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 33
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %5201 to i64*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 1
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %EAX.i492 = bitcast %union.anon* %5204 to i32*
  %5205 = load i32, i32* %EAX.i492
  %5206 = zext i32 %5205 to i64
  %5207 = load i64, i64* %PC.i491
  %5208 = add i64 %5207, 3
  store i64 %5208, i64* %PC.i491
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5209, align 1
  %5210 = and i32 %5205, 255
  %5211 = call i32 @llvm.ctpop.i32(i32 %5210)
  %5212 = trunc i32 %5211 to i8
  %5213 = and i8 %5212, 1
  %5214 = xor i8 %5213, 1
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5214, i8* %5215, align 1
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5216, align 1
  %5217 = icmp eq i32 %5205, 0
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5218, i8* %5219, align 1
  %5220 = lshr i32 %5205, 31
  %5221 = trunc i32 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5221, i8* %5222, align 1
  %5223 = lshr i32 %5205, 31
  %5224 = xor i32 %5220, %5223
  %5225 = add i32 %5224, %5223
  %5226 = icmp eq i32 %5225, 2
  %5227 = zext i1 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5227, i8* %5228, align 1
  store %struct.Memory* %loadMem_47e919, %struct.Memory** %MEMORY
  %loadMem_47e91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 33
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %5231 to i64*
  %5232 = load i64, i64* %PC.i490
  %5233 = add i64 %5232, 94
  %5234 = load i64, i64* %PC.i490
  %5235 = add i64 %5234, 6
  %5236 = load i64, i64* %PC.i490
  %5237 = add i64 %5236, 6
  store i64 %5237, i64* %PC.i490
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5239 = load i8, i8* %5238, align 1
  %5240 = icmp eq i8 %5239, 0
  %5241 = zext i1 %5240 to i8
  store i8 %5241, i8* %BRANCH_TAKEN, align 1
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5243 = select i1 %5240, i64 %5233, i64 %5235
  store i64 %5243, i64* %5242, align 8
  store %struct.Memory* %loadMem_47e91c, %struct.Memory** %MEMORY
  %loadBr_47e91c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e91c = icmp eq i8 %loadBr_47e91c, 1
  br i1 %cmpBr_47e91c, label %block_.L_47e97a, label %block_47e922

block_47e922:                                     ; preds = %block_47e904
  %loadMem_47e922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 33
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %5246 to i64*
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 1
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %5249 to i64*
  %5250 = load i64, i64* %PC.i488
  %5251 = add i64 %5250, 7
  store i64 %5251, i64* %PC.i488
  %5252 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %5253 = zext i32 %5252 to i64
  store i64 %5253, i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_47e922, %struct.Memory** %MEMORY
  %loadMem_47e929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5255 = getelementptr inbounds %struct.GPR, %struct.GPR* %5254, i32 0, i32 33
  %5256 = getelementptr inbounds %struct.Reg, %struct.Reg* %5255, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %5256 to i64*
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 1
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %5259 to i64*
  %5260 = load i64, i64* %RAX.i487
  %5261 = load i64, i64* %PC.i486
  %5262 = add i64 %5261, 5
  store i64 %5262, i64* %PC.i486
  %5263 = and i64 2048, %5260
  %5264 = trunc i64 %5263 to i32
  store i64 %5263, i64* %RAX.i487, align 8
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5265, align 1
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %5266, align 1
  %5267 = icmp eq i32 %5264, 0
  %5268 = zext i1 %5267 to i8
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5268, i8* %5269, align 1
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5270, align 1
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5271, align 1
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5272, align 1
  store %struct.Memory* %loadMem_47e929, %struct.Memory** %MEMORY
  %loadMem_47e92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5274 = getelementptr inbounds %struct.GPR, %struct.GPR* %5273, i32 0, i32 33
  %5275 = getelementptr inbounds %struct.Reg, %struct.Reg* %5274, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %5275 to i64*
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5277 = getelementptr inbounds %struct.GPR, %struct.GPR* %5276, i32 0, i32 1
  %5278 = getelementptr inbounds %struct.Reg, %struct.Reg* %5277, i32 0, i32 0
  %EAX.i485 = bitcast %union.anon* %5278 to i32*
  %5279 = load i32, i32* %EAX.i485
  %5280 = zext i32 %5279 to i64
  %5281 = load i64, i64* %PC.i484
  %5282 = add i64 %5281, 3
  store i64 %5282, i64* %PC.i484
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5283, align 1
  %5284 = and i32 %5279, 255
  %5285 = call i32 @llvm.ctpop.i32(i32 %5284)
  %5286 = trunc i32 %5285 to i8
  %5287 = and i8 %5286, 1
  %5288 = xor i8 %5287, 1
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5288, i8* %5289, align 1
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5290, align 1
  %5291 = icmp eq i32 %5279, 0
  %5292 = zext i1 %5291 to i8
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5292, i8* %5293, align 1
  %5294 = lshr i32 %5279, 31
  %5295 = trunc i32 %5294 to i8
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5295, i8* %5296, align 1
  %5297 = lshr i32 %5279, 31
  %5298 = xor i32 %5294, %5297
  %5299 = add i32 %5298, %5297
  %5300 = icmp eq i32 %5299, 2
  %5301 = zext i1 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5301, i8* %5302, align 1
  store %struct.Memory* %loadMem_47e92e, %struct.Memory** %MEMORY
  %loadMem_47e931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 33
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %5305 to i64*
  %5306 = load i64, i64* %PC.i483
  %5307 = add i64 %5306, 11
  %5308 = load i64, i64* %PC.i483
  %5309 = add i64 %5308, 6
  %5310 = load i64, i64* %PC.i483
  %5311 = add i64 %5310, 6
  store i64 %5311, i64* %PC.i483
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5313 = load i8, i8* %5312, align 1
  %5314 = icmp eq i8 %5313, 0
  %5315 = zext i1 %5314 to i8
  store i8 %5315, i8* %BRANCH_TAKEN, align 1
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5317 = select i1 %5314, i64 %5307, i64 %5309
  store i64 %5317, i64* %5316, align 8
  store %struct.Memory* %loadMem_47e931, %struct.Memory** %MEMORY
  %loadBr_47e931 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e931 = icmp eq i8 %loadBr_47e931, 1
  br i1 %cmpBr_47e931, label %block_.L_47e93c, label %block_47e937

block_47e937:                                     ; preds = %block_47e922
  %loadMem_47e937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %5320 to i64*
  %5321 = load i64, i64* %PC.i482
  %5322 = add i64 %5321, 47
  %5323 = load i64, i64* %PC.i482
  %5324 = add i64 %5323, 5
  store i64 %5324, i64* %PC.i482
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5322, i64* %5325, align 8
  store %struct.Memory* %loadMem_47e937, %struct.Memory** %MEMORY
  br label %block_.L_47e966

block_.L_47e93c:                                  ; preds = %block_47e922
  %loadMem_47e93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 33
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %5328 to i64*
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5330 = getelementptr inbounds %struct.GPR, %struct.GPR* %5329, i32 0, i32 11
  %5331 = getelementptr inbounds %struct.Reg, %struct.Reg* %5330, i32 0, i32 0
  %RDI.i481 = bitcast %union.anon* %5331 to i64*
  %5332 = load i64, i64* %PC.i480
  %5333 = add i64 %5332, 10
  store i64 %5333, i64* %PC.i480
  store i64 ptrtoint (%G__0x582c84_type* @G__0x582c84 to i64), i64* %RDI.i481, align 8
  store %struct.Memory* %loadMem_47e93c, %struct.Memory** %MEMORY
  %loadMem_47e946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 33
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %5336 to i64*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 9
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RSI.i478 = bitcast %union.anon* %5339 to i64*
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5341 = getelementptr inbounds %struct.GPR, %struct.GPR* %5340, i32 0, i32 15
  %5342 = getelementptr inbounds %struct.Reg, %struct.Reg* %5341, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %5342 to i64*
  %5343 = load i64, i64* %RBP.i479
  %5344 = sub i64 %5343, 8
  %5345 = load i64, i64* %PC.i477
  %5346 = add i64 %5345, 3
  store i64 %5346, i64* %PC.i477
  %5347 = inttoptr i64 %5344 to i32*
  %5348 = load i32, i32* %5347
  %5349 = zext i32 %5348 to i64
  store i64 %5349, i64* %RSI.i478, align 8
  store %struct.Memory* %loadMem_47e946, %struct.Memory** %MEMORY
  %loadMem_47e949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 33
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %5352 to i64*
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 7
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %RDX.i475 = bitcast %union.anon* %5355 to i64*
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 15
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %5358 to i64*
  %5359 = load i64, i64* %RBP.i476
  %5360 = sub i64 %5359, 692
  %5361 = load i64, i64* %PC.i474
  %5362 = add i64 %5361, 6
  store i64 %5362, i64* %PC.i474
  %5363 = inttoptr i64 %5360 to i32*
  %5364 = load i32, i32* %5363
  %5365 = zext i32 %5364 to i64
  store i64 %5365, i64* %RDX.i475, align 8
  store %struct.Memory* %loadMem_47e949, %struct.Memory** %MEMORY
  %loadMem_47e94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 33
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %5368 to i64*
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 5
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %RCX.i472 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 15
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %5374 to i64*
  %5375 = load i64, i64* %RBP.i473
  %5376 = sub i64 %5375, 696
  %5377 = load i64, i64* %PC.i471
  %5378 = add i64 %5377, 6
  store i64 %5378, i64* %PC.i471
  %5379 = inttoptr i64 %5376 to i32*
  %5380 = load i32, i32* %5379
  %5381 = zext i32 %5380 to i64
  store i64 %5381, i64* %RCX.i472, align 8
  store %struct.Memory* %loadMem_47e94f, %struct.Memory** %MEMORY
  %loadMem_47e955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 33
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %5384 to i64*
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 17
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %R8D.i469 = bitcast %union.anon* %5387 to i32*
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5389 = getelementptr inbounds %struct.GPR, %struct.GPR* %5388, i32 0, i32 15
  %5390 = getelementptr inbounds %struct.Reg, %struct.Reg* %5389, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %5390 to i64*
  %5391 = bitcast i32* %R8D.i469 to i64*
  %5392 = load i64, i64* %RBP.i470
  %5393 = sub i64 %5392, 24
  %5394 = load i64, i64* %PC.i468
  %5395 = add i64 %5394, 4
  store i64 %5395, i64* %PC.i468
  %5396 = inttoptr i64 %5393 to i32*
  %5397 = load i32, i32* %5396
  %5398 = zext i32 %5397 to i64
  store i64 %5398, i64* %5391, align 8
  store %struct.Memory* %loadMem_47e955, %struct.Memory** %MEMORY
  %loadMem_47e959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5400 = getelementptr inbounds %struct.GPR, %struct.GPR* %5399, i32 0, i32 33
  %5401 = getelementptr inbounds %struct.Reg, %struct.Reg* %5400, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %5401 to i64*
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 1
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %5405 = bitcast %union.anon* %5404 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5405, i32 0, i32 0
  %5406 = load i64, i64* %PC.i467
  %5407 = add i64 %5406, 2
  store i64 %5407, i64* %PC.i467
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_47e959, %struct.Memory** %MEMORY
  %loadMem1_47e95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 33
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %5410 to i64*
  %5411 = load i64, i64* %PC.i466
  %5412 = add i64 %5411, -183211
  %5413 = load i64, i64* %PC.i466
  %5414 = add i64 %5413, 5
  %5415 = load i64, i64* %PC.i466
  %5416 = add i64 %5415, 5
  store i64 %5416, i64* %PC.i466
  %5417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5418 = load i64, i64* %5417, align 8
  %5419 = add i64 %5418, -8
  %5420 = inttoptr i64 %5419 to i64*
  store i64 %5414, i64* %5420
  store i64 %5419, i64* %5417, align 8
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5412, i64* %5421, align 8
  store %struct.Memory* %loadMem1_47e95b, %struct.Memory** %MEMORY
  %loadMem2_47e95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e95b = load i64, i64* %3
  %call2_47e95b = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64 %loadPC_47e95b, %struct.Memory* %loadMem2_47e95b)
  store %struct.Memory* %call2_47e95b, %struct.Memory** %MEMORY
  %loadMem_47e960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5423 = getelementptr inbounds %struct.GPR, %struct.GPR* %5422, i32 0, i32 33
  %5424 = getelementptr inbounds %struct.Reg, %struct.Reg* %5423, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %5424 to i64*
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 1
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %EAX.i464 = bitcast %union.anon* %5427 to i32*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5429 = getelementptr inbounds %struct.GPR, %struct.GPR* %5428, i32 0, i32 15
  %5430 = getelementptr inbounds %struct.Reg, %struct.Reg* %5429, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %5430 to i64*
  %5431 = load i64, i64* %RBP.i465
  %5432 = sub i64 %5431, 728
  %5433 = load i32, i32* %EAX.i464
  %5434 = zext i32 %5433 to i64
  %5435 = load i64, i64* %PC.i463
  %5436 = add i64 %5435, 6
  store i64 %5436, i64* %PC.i463
  %5437 = inttoptr i64 %5432 to i32*
  store i32 %5433, i32* %5437
  store %struct.Memory* %loadMem_47e960, %struct.Memory** %MEMORY
  br label %block_.L_47e966

block_.L_47e966:                                  ; preds = %block_.L_47e93c, %block_47e937
  %loadMem_47e966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5439 = getelementptr inbounds %struct.GPR, %struct.GPR* %5438, i32 0, i32 33
  %5440 = getelementptr inbounds %struct.Reg, %struct.Reg* %5439, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %5440 to i64*
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5442 = getelementptr inbounds %struct.GPR, %struct.GPR* %5441, i32 0, i32 11
  %5443 = getelementptr inbounds %struct.Reg, %struct.Reg* %5442, i32 0, i32 0
  %RDI.i461 = bitcast %union.anon* %5443 to i64*
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5445 = getelementptr inbounds %struct.GPR, %struct.GPR* %5444, i32 0, i32 15
  %5446 = getelementptr inbounds %struct.Reg, %struct.Reg* %5445, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %5446 to i64*
  %5447 = load i64, i64* %RBP.i462
  %5448 = sub i64 %5447, 8
  %5449 = load i64, i64* %PC.i460
  %5450 = add i64 %5449, 3
  store i64 %5450, i64* %PC.i460
  %5451 = inttoptr i64 %5448 to i32*
  %5452 = load i32, i32* %5451
  %5453 = zext i32 %5452 to i64
  store i64 %5453, i64* %RDI.i461, align 8
  store %struct.Memory* %loadMem_47e966, %struct.Memory** %MEMORY
  %loadMem_47e969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 33
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %5456 to i64*
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5458 = getelementptr inbounds %struct.GPR, %struct.GPR* %5457, i32 0, i32 9
  %5459 = getelementptr inbounds %struct.Reg, %struct.Reg* %5458, i32 0, i32 0
  %RSI.i458 = bitcast %union.anon* %5459 to i64*
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 15
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %RBP.i459 = bitcast %union.anon* %5462 to i64*
  %5463 = load i64, i64* %RBP.i459
  %5464 = sub i64 %5463, 692
  %5465 = load i64, i64* %PC.i457
  %5466 = add i64 %5465, 6
  store i64 %5466, i64* %PC.i457
  %5467 = inttoptr i64 %5464 to i32*
  %5468 = load i32, i32* %5467
  %5469 = zext i32 %5468 to i64
  store i64 %5469, i64* %RSI.i458, align 8
  store %struct.Memory* %loadMem_47e969, %struct.Memory** %MEMORY
  %loadMem_47e96f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 33
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %5472 to i64*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 7
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RDX.i455 = bitcast %union.anon* %5475 to i64*
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5477 = getelementptr inbounds %struct.GPR, %struct.GPR* %5476, i32 0, i32 15
  %5478 = getelementptr inbounds %struct.Reg, %struct.Reg* %5477, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %5478 to i64*
  %5479 = load i64, i64* %RBP.i456
  %5480 = sub i64 %5479, 696
  %5481 = load i64, i64* %PC.i454
  %5482 = add i64 %5481, 6
  store i64 %5482, i64* %PC.i454
  %5483 = inttoptr i64 %5480 to i32*
  %5484 = load i32, i32* %5483
  %5485 = zext i32 %5484 to i64
  store i64 %5485, i64* %RDX.i455, align 8
  store %struct.Memory* %loadMem_47e96f, %struct.Memory** %MEMORY
  %loadMem1_47e975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %5488 to i64*
  %5489 = load i64, i64* %PC.i453
  %5490 = add i64 %5489, -310309
  %5491 = load i64, i64* %PC.i453
  %5492 = add i64 %5491, 5
  %5493 = load i64, i64* %PC.i453
  %5494 = add i64 %5493, 5
  store i64 %5494, i64* %PC.i453
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5496 = load i64, i64* %5495, align 8
  %5497 = add i64 %5496, -8
  %5498 = inttoptr i64 %5497 to i64*
  store i64 %5492, i64* %5498
  store i64 %5497, i64* %5495, align 8
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5490, i64* %5499, align 8
  store %struct.Memory* %loadMem1_47e975, %struct.Memory** %MEMORY
  %loadMem2_47e975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e975 = load i64, i64* %3
  %call2_47e975 = call %struct.Memory* @sub_432d50.add_connection_move(%struct.State* %0, i64 %loadPC_47e975, %struct.Memory* %loadMem2_47e975)
  store %struct.Memory* %call2_47e975, %struct.Memory** %MEMORY
  br label %block_.L_47e97a

block_.L_47e97a:                                  ; preds = %block_.L_47e966, %block_47e904, %block_47e8e1, %block_.L_47e8d7
  %loadMem1_47e97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %PC.i452
  %5504 = add i64 %5503, -461850
  %5505 = load i64, i64* %PC.i452
  %5506 = add i64 %5505, 5
  %5507 = load i64, i64* %PC.i452
  %5508 = add i64 %5507, 5
  store i64 %5508, i64* %PC.i452
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5510 = load i64, i64* %5509, align 8
  %5511 = add i64 %5510, -8
  %5512 = inttoptr i64 %5511 to i64*
  store i64 %5506, i64* %5512
  store i64 %5511, i64* %5509, align 8
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5504, i64* %5513, align 8
  store %struct.Memory* %loadMem1_47e97a, %struct.Memory** %MEMORY
  %loadMem2_47e97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47e97a = load i64, i64* %3
  %call2_47e97a = call %struct.Memory* @sub_40dd60.popgo(%struct.State* %0, i64 %loadPC_47e97a, %struct.Memory* %loadMem2_47e97a)
  store %struct.Memory* %call2_47e97a, %struct.Memory** %MEMORY
  br label %block_.L_47e97f

block_.L_47e97f:                                  ; preds = %block_.L_47e97a, %block_.L_47e768
  %loadMem_47e97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5515 = getelementptr inbounds %struct.GPR, %struct.GPR* %5514, i32 0, i32 33
  %5516 = getelementptr inbounds %struct.Reg, %struct.Reg* %5515, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %5516 to i64*
  %5517 = load i64, i64* %PC.i451
  %5518 = add i64 %5517, 5
  %5519 = load i64, i64* %PC.i451
  %5520 = add i64 %5519, 5
  store i64 %5520, i64* %PC.i451
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5518, i64* %5521, align 8
  store %struct.Memory* %loadMem_47e97f, %struct.Memory** %MEMORY
  br label %block_.L_47e984

block_.L_47e984:                                  ; preds = %block_.L_47e97f, %block_47e763, %block_47e713, %block_47e6e1, %block_47e691, %block_47e641
  %loadMem_47e984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 33
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %5524 to i64*
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5526 = getelementptr inbounds %struct.GPR, %struct.GPR* %5525, i32 0, i32 1
  %5527 = getelementptr inbounds %struct.Reg, %struct.Reg* %5526, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %5527 to i64*
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 15
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %5530 to i64*
  %5531 = load i64, i64* %RBP.i450
  %5532 = sub i64 %5531, 20
  %5533 = load i64, i64* %PC.i448
  %5534 = add i64 %5533, 3
  store i64 %5534, i64* %PC.i448
  %5535 = inttoptr i64 %5532 to i32*
  %5536 = load i32, i32* %5535
  %5537 = zext i32 %5536 to i64
  store i64 %5537, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_47e984, %struct.Memory** %MEMORY
  %loadMem_47e987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 33
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %5540 to i64*
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5542 = getelementptr inbounds %struct.GPR, %struct.GPR* %5541, i32 0, i32 1
  %5543 = getelementptr inbounds %struct.Reg, %struct.Reg* %5542, i32 0, i32 0
  %RAX.i447 = bitcast %union.anon* %5543 to i64*
  %5544 = load i64, i64* %RAX.i447
  %5545 = load i64, i64* %PC.i446
  %5546 = add i64 %5545, 3
  store i64 %5546, i64* %PC.i446
  %5547 = trunc i64 %5544 to i32
  %5548 = add i32 1, %5547
  %5549 = zext i32 %5548 to i64
  store i64 %5549, i64* %RAX.i447, align 8
  %5550 = icmp ult i32 %5548, %5547
  %5551 = icmp ult i32 %5548, 1
  %5552 = or i1 %5550, %5551
  %5553 = zext i1 %5552 to i8
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5553, i8* %5554, align 1
  %5555 = and i32 %5548, 255
  %5556 = call i32 @llvm.ctpop.i32(i32 %5555)
  %5557 = trunc i32 %5556 to i8
  %5558 = and i8 %5557, 1
  %5559 = xor i8 %5558, 1
  %5560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5559, i8* %5560, align 1
  %5561 = xor i64 1, %5544
  %5562 = trunc i64 %5561 to i32
  %5563 = xor i32 %5562, %5548
  %5564 = lshr i32 %5563, 4
  %5565 = trunc i32 %5564 to i8
  %5566 = and i8 %5565, 1
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5566, i8* %5567, align 1
  %5568 = icmp eq i32 %5548, 0
  %5569 = zext i1 %5568 to i8
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5569, i8* %5570, align 1
  %5571 = lshr i32 %5548, 31
  %5572 = trunc i32 %5571 to i8
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5572, i8* %5573, align 1
  %5574 = lshr i32 %5547, 31
  %5575 = xor i32 %5571, %5574
  %5576 = add i32 %5575, %5571
  %5577 = icmp eq i32 %5576, 2
  %5578 = zext i1 %5577 to i8
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5578, i8* %5579, align 1
  store %struct.Memory* %loadMem_47e987, %struct.Memory** %MEMORY
  %loadMem_47e98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 33
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %5582 to i64*
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 1
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %EAX.i444 = bitcast %union.anon* %5585 to i32*
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 15
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %5588 to i64*
  %5589 = load i64, i64* %RBP.i445
  %5590 = sub i64 %5589, 20
  %5591 = load i32, i32* %EAX.i444
  %5592 = zext i32 %5591 to i64
  %5593 = load i64, i64* %PC.i443
  %5594 = add i64 %5593, 3
  store i64 %5594, i64* %PC.i443
  %5595 = inttoptr i64 %5590 to i32*
  store i32 %5591, i32* %5595
  store %struct.Memory* %loadMem_47e98a, %struct.Memory** %MEMORY
  %loadMem_47e98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 33
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %5598 to i64*
  %5599 = load i64, i64* %PC.i442
  %5600 = add i64 %5599, -928
  %5601 = load i64, i64* %PC.i442
  %5602 = add i64 %5601, 5
  store i64 %5602, i64* %PC.i442
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5600, i64* %5603, align 8
  store %struct.Memory* %loadMem_47e98d, %struct.Memory** %MEMORY
  br label %block_.L_47e5ed

block_.L_47e992:                                  ; preds = %block_.L_47e5ed
  %loadMem_47e992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5605 = getelementptr inbounds %struct.GPR, %struct.GPR* %5604, i32 0, i32 33
  %5606 = getelementptr inbounds %struct.Reg, %struct.Reg* %5605, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %5606 to i64*
  %5607 = load i64, i64* %PC.i441
  %5608 = add i64 %5607, 5
  %5609 = load i64, i64* %PC.i441
  %5610 = add i64 %5609, 5
  store i64 %5610, i64* %PC.i441
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5608, i64* %5611, align 8
  store %struct.Memory* %loadMem_47e992, %struct.Memory** %MEMORY
  br label %block_.L_47e997

block_.L_47e997:                                  ; preds = %block_.L_47e992
  %loadMem_47e997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5613 = getelementptr inbounds %struct.GPR, %struct.GPR* %5612, i32 0, i32 33
  %5614 = getelementptr inbounds %struct.Reg, %struct.Reg* %5613, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %5614 to i64*
  %5615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5616 = getelementptr inbounds %struct.GPR, %struct.GPR* %5615, i32 0, i32 1
  %5617 = getelementptr inbounds %struct.Reg, %struct.Reg* %5616, i32 0, i32 0
  %RAX.i439 = bitcast %union.anon* %5617 to i64*
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 15
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %5620 to i64*
  %5621 = load i64, i64* %RBP.i440
  %5622 = sub i64 %5621, 16
  %5623 = load i64, i64* %PC.i438
  %5624 = add i64 %5623, 3
  store i64 %5624, i64* %PC.i438
  %5625 = inttoptr i64 %5622 to i32*
  %5626 = load i32, i32* %5625
  %5627 = zext i32 %5626 to i64
  store i64 %5627, i64* %RAX.i439, align 8
  store %struct.Memory* %loadMem_47e997, %struct.Memory** %MEMORY
  %loadMem_47e99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 33
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %5630 to i64*
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 1
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %RAX.i437 = bitcast %union.anon* %5633 to i64*
  %5634 = load i64, i64* %RAX.i437
  %5635 = load i64, i64* %PC.i436
  %5636 = add i64 %5635, 3
  store i64 %5636, i64* %PC.i436
  %5637 = trunc i64 %5634 to i32
  %5638 = add i32 1, %5637
  %5639 = zext i32 %5638 to i64
  store i64 %5639, i64* %RAX.i437, align 8
  %5640 = icmp ult i32 %5638, %5637
  %5641 = icmp ult i32 %5638, 1
  %5642 = or i1 %5640, %5641
  %5643 = zext i1 %5642 to i8
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5643, i8* %5644, align 1
  %5645 = and i32 %5638, 255
  %5646 = call i32 @llvm.ctpop.i32(i32 %5645)
  %5647 = trunc i32 %5646 to i8
  %5648 = and i8 %5647, 1
  %5649 = xor i8 %5648, 1
  %5650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5649, i8* %5650, align 1
  %5651 = xor i64 1, %5634
  %5652 = trunc i64 %5651 to i32
  %5653 = xor i32 %5652, %5638
  %5654 = lshr i32 %5653, 4
  %5655 = trunc i32 %5654 to i8
  %5656 = and i8 %5655, 1
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5656, i8* %5657, align 1
  %5658 = icmp eq i32 %5638, 0
  %5659 = zext i1 %5658 to i8
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5659, i8* %5660, align 1
  %5661 = lshr i32 %5638, 31
  %5662 = trunc i32 %5661 to i8
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5662, i8* %5663, align 1
  %5664 = lshr i32 %5637, 31
  %5665 = xor i32 %5661, %5664
  %5666 = add i32 %5665, %5661
  %5667 = icmp eq i32 %5666, 2
  %5668 = zext i1 %5667 to i8
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5668, i8* %5669, align 1
  store %struct.Memory* %loadMem_47e99a, %struct.Memory** %MEMORY
  %loadMem_47e99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5671 = getelementptr inbounds %struct.GPR, %struct.GPR* %5670, i32 0, i32 33
  %5672 = getelementptr inbounds %struct.Reg, %struct.Reg* %5671, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %5672 to i64*
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 1
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %EAX.i434 = bitcast %union.anon* %5675 to i32*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 15
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %5678 to i64*
  %5679 = load i64, i64* %RBP.i435
  %5680 = sub i64 %5679, 16
  %5681 = load i32, i32* %EAX.i434
  %5682 = zext i32 %5681 to i64
  %5683 = load i64, i64* %PC.i433
  %5684 = add i64 %5683, 3
  store i64 %5684, i64* %PC.i433
  %5685 = inttoptr i64 %5680 to i32*
  store i32 %5681, i32* %5685
  store %struct.Memory* %loadMem_47e99d, %struct.Memory** %MEMORY
  %loadMem_47e9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 33
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %5688 to i64*
  %5689 = load i64, i64* %PC.i432
  %5690 = add i64 %5689, -968
  %5691 = load i64, i64* %PC.i432
  %5692 = add i64 %5691, 5
  store i64 %5692, i64* %PC.i432
  %5693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5690, i64* %5693, align 8
  store %struct.Memory* %loadMem_47e9a0, %struct.Memory** %MEMORY
  br label %block_.L_47e5d8

block_.L_47e9a5:                                  ; preds = %block_.L_47e5d8
  %loadMem_47e9a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 33
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %5696 to i64*
  %5697 = load i64, i64* %PC.i431
  %5698 = add i64 %5697, 911
  %5699 = load i64, i64* %PC.i431
  %5700 = add i64 %5699, 5
  store i64 %5700, i64* %PC.i431
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5698, i64* %5701, align 8
  store %struct.Memory* %loadMem_47e9a5, %struct.Memory** %MEMORY
  br label %block_.L_47ed34

block_.L_47e9aa:                                  ; preds = %block_47e49d
  %loadMem_47e9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 33
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %5704 to i64*
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5706 = getelementptr inbounds %struct.GPR, %struct.GPR* %5705, i32 0, i32 1
  %5707 = getelementptr inbounds %struct.Reg, %struct.Reg* %5706, i32 0, i32 0
  %RAX.i430 = bitcast %union.anon* %5707 to i64*
  %5708 = load i64, i64* %PC.i429
  %5709 = add i64 %5708, 10
  store i64 %5709, i64* %PC.i429
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i430, align 8
  store %struct.Memory* %loadMem_47e9aa, %struct.Memory** %MEMORY
  %loadMem_47e9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 33
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %5712 to i64*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 5
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RCX.i427 = bitcast %union.anon* %5715 to i64*
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 15
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %RBP.i428 = bitcast %union.anon* %5718 to i64*
  %5719 = load i64, i64* %RBP.i428
  %5720 = sub i64 %5719, 28
  %5721 = load i64, i64* %PC.i426
  %5722 = add i64 %5721, 4
  store i64 %5722, i64* %PC.i426
  %5723 = inttoptr i64 %5720 to i32*
  %5724 = load i32, i32* %5723
  %5725 = sext i32 %5724 to i64
  store i64 %5725, i64* %RCX.i427, align 8
  store %struct.Memory* %loadMem_47e9b4, %struct.Memory** %MEMORY
  %loadMem_47e9b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 33
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %5728 to i64*
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 5
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %RCX.i425 = bitcast %union.anon* %5731 to i64*
  %5732 = load i64, i64* %RCX.i425
  %5733 = load i64, i64* %PC.i424
  %5734 = add i64 %5733, 4
  store i64 %5734, i64* %PC.i424
  %5735 = sext i64 %5732 to i128
  %5736 = and i128 %5735, -18446744073709551616
  %5737 = zext i64 %5732 to i128
  %5738 = or i128 %5736, %5737
  %5739 = mul i128 12, %5738
  %5740 = trunc i128 %5739 to i64
  store i64 %5740, i64* %RCX.i425, align 8
  %5741 = sext i64 %5740 to i128
  %5742 = icmp ne i128 %5741, %5739
  %5743 = zext i1 %5742 to i8
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5743, i8* %5744, align 1
  %5745 = trunc i128 %5739 to i32
  %5746 = and i32 %5745, 255
  %5747 = call i32 @llvm.ctpop.i32(i32 %5746)
  %5748 = trunc i32 %5747 to i8
  %5749 = and i8 %5748, 1
  %5750 = xor i8 %5749, 1
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5750, i8* %5751, align 1
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5752, align 1
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5753, align 1
  %5754 = lshr i64 %5740, 63
  %5755 = trunc i64 %5754 to i8
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5755, i8* %5756, align 1
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5743, i8* %5757, align 1
  store %struct.Memory* %loadMem_47e9b8, %struct.Memory** %MEMORY
  %loadMem_47e9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 33
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %5760 to i64*
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 1
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %5763 to i64*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 5
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %RCX.i423 = bitcast %union.anon* %5766 to i64*
  %5767 = load i64, i64* %RAX.i422
  %5768 = load i64, i64* %RCX.i423
  %5769 = load i64, i64* %PC.i421
  %5770 = add i64 %5769, 3
  store i64 %5770, i64* %PC.i421
  %5771 = add i64 %5768, %5767
  store i64 %5771, i64* %RAX.i422, align 8
  %5772 = icmp ult i64 %5771, %5767
  %5773 = icmp ult i64 %5771, %5768
  %5774 = or i1 %5772, %5773
  %5775 = zext i1 %5774 to i8
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5775, i8* %5776, align 1
  %5777 = trunc i64 %5771 to i32
  %5778 = and i32 %5777, 255
  %5779 = call i32 @llvm.ctpop.i32(i32 %5778)
  %5780 = trunc i32 %5779 to i8
  %5781 = and i8 %5780, 1
  %5782 = xor i8 %5781, 1
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5782, i8* %5783, align 1
  %5784 = xor i64 %5768, %5767
  %5785 = xor i64 %5784, %5771
  %5786 = lshr i64 %5785, 4
  %5787 = trunc i64 %5786 to i8
  %5788 = and i8 %5787, 1
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5788, i8* %5789, align 1
  %5790 = icmp eq i64 %5771, 0
  %5791 = zext i1 %5790 to i8
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5791, i8* %5792, align 1
  %5793 = lshr i64 %5771, 63
  %5794 = trunc i64 %5793 to i8
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5794, i8* %5795, align 1
  %5796 = lshr i64 %5767, 63
  %5797 = lshr i64 %5768, 63
  %5798 = xor i64 %5793, %5796
  %5799 = xor i64 %5793, %5797
  %5800 = add i64 %5798, %5799
  %5801 = icmp eq i64 %5800, 2
  %5802 = zext i1 %5801 to i8
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5802, i8* %5803, align 1
  store %struct.Memory* %loadMem_47e9bc, %struct.Memory** %MEMORY
  %loadMem_47e9bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5805 = getelementptr inbounds %struct.GPR, %struct.GPR* %5804, i32 0, i32 33
  %5806 = getelementptr inbounds %struct.Reg, %struct.Reg* %5805, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %5806 to i64*
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5808 = getelementptr inbounds %struct.GPR, %struct.GPR* %5807, i32 0, i32 1
  %5809 = getelementptr inbounds %struct.Reg, %struct.Reg* %5808, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %5809 to i64*
  %5810 = load i64, i64* %RAX.i420
  %5811 = load i64, i64* %PC.i419
  %5812 = add i64 %5811, 3
  store i64 %5812, i64* %PC.i419
  %5813 = inttoptr i64 %5810 to i32*
  %5814 = load i32, i32* %5813
  %5815 = sub i32 %5814, 26
  %5816 = icmp ult i32 %5814, 26
  %5817 = zext i1 %5816 to i8
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5817, i8* %5818, align 1
  %5819 = and i32 %5815, 255
  %5820 = call i32 @llvm.ctpop.i32(i32 %5819)
  %5821 = trunc i32 %5820 to i8
  %5822 = and i8 %5821, 1
  %5823 = xor i8 %5822, 1
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5823, i8* %5824, align 1
  %5825 = xor i32 %5814, 26
  %5826 = xor i32 %5825, %5815
  %5827 = lshr i32 %5826, 4
  %5828 = trunc i32 %5827 to i8
  %5829 = and i8 %5828, 1
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5829, i8* %5830, align 1
  %5831 = icmp eq i32 %5815, 0
  %5832 = zext i1 %5831 to i8
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5832, i8* %5833, align 1
  %5834 = lshr i32 %5815, 31
  %5835 = trunc i32 %5834 to i8
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5835, i8* %5836, align 1
  %5837 = lshr i32 %5814, 31
  %5838 = xor i32 %5834, %5837
  %5839 = add i32 %5838, %5837
  %5840 = icmp eq i32 %5839, 2
  %5841 = zext i1 %5840 to i8
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5841, i8* %5842, align 1
  store %struct.Memory* %loadMem_47e9bf, %struct.Memory** %MEMORY
  %loadMem_47e9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5844 = getelementptr inbounds %struct.GPR, %struct.GPR* %5843, i32 0, i32 33
  %5845 = getelementptr inbounds %struct.Reg, %struct.Reg* %5844, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %5845 to i64*
  %5846 = load i64, i64* %PC.i418
  %5847 = add i64 %5846, 271
  %5848 = load i64, i64* %PC.i418
  %5849 = add i64 %5848, 6
  %5850 = load i64, i64* %PC.i418
  %5851 = add i64 %5850, 6
  store i64 %5851, i64* %PC.i418
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5853 = load i8, i8* %5852, align 1
  %5854 = icmp eq i8 %5853, 0
  %5855 = zext i1 %5854 to i8
  store i8 %5855, i8* %BRANCH_TAKEN, align 1
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5857 = select i1 %5854, i64 %5847, i64 %5849
  store i64 %5857, i64* %5856, align 8
  store %struct.Memory* %loadMem_47e9c2, %struct.Memory** %MEMORY
  %loadBr_47e9c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47e9c2 = icmp eq i8 %loadBr_47e9c2, 1
  br i1 %cmpBr_47e9c2, label %block_.L_47ead1, label %block_47e9c8

block_47e9c8:                                     ; preds = %block_.L_47e9aa
  %loadMem_47e9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5859 = getelementptr inbounds %struct.GPR, %struct.GPR* %5858, i32 0, i32 33
  %5860 = getelementptr inbounds %struct.Reg, %struct.Reg* %5859, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %5860 to i64*
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5862 = getelementptr inbounds %struct.GPR, %struct.GPR* %5861, i32 0, i32 1
  %5863 = getelementptr inbounds %struct.Reg, %struct.Reg* %5862, i32 0, i32 0
  %RAX.i417 = bitcast %union.anon* %5863 to i64*
  %5864 = load i64, i64* %PC.i416
  %5865 = add i64 %5864, 10
  store i64 %5865, i64* %PC.i416
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i417, align 8
  store %struct.Memory* %loadMem_47e9c8, %struct.Memory** %MEMORY
  %loadMem_47e9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 33
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %5868 to i64*
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5870 = getelementptr inbounds %struct.GPR, %struct.GPR* %5869, i32 0, i32 5
  %5871 = getelementptr inbounds %struct.Reg, %struct.Reg* %5870, i32 0, i32 0
  %RCX.i414 = bitcast %union.anon* %5871 to i64*
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5873 = getelementptr inbounds %struct.GPR, %struct.GPR* %5872, i32 0, i32 15
  %5874 = getelementptr inbounds %struct.Reg, %struct.Reg* %5873, i32 0, i32 0
  %RBP.i415 = bitcast %union.anon* %5874 to i64*
  %5875 = load i64, i64* %RBP.i415
  %5876 = sub i64 %5875, 28
  %5877 = load i64, i64* %PC.i413
  %5878 = add i64 %5877, 4
  store i64 %5878, i64* %PC.i413
  %5879 = inttoptr i64 %5876 to i32*
  %5880 = load i32, i32* %5879
  %5881 = sext i32 %5880 to i64
  store i64 %5881, i64* %RCX.i414, align 8
  store %struct.Memory* %loadMem_47e9d2, %struct.Memory** %MEMORY
  %loadMem_47e9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 33
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %5884 to i64*
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5886 = getelementptr inbounds %struct.GPR, %struct.GPR* %5885, i32 0, i32 5
  %5887 = getelementptr inbounds %struct.Reg, %struct.Reg* %5886, i32 0, i32 0
  %RCX.i412 = bitcast %union.anon* %5887 to i64*
  %5888 = load i64, i64* %RCX.i412
  %5889 = load i64, i64* %PC.i411
  %5890 = add i64 %5889, 4
  store i64 %5890, i64* %PC.i411
  %5891 = sext i64 %5888 to i128
  %5892 = and i128 %5891, -18446744073709551616
  %5893 = zext i64 %5888 to i128
  %5894 = or i128 %5892, %5893
  %5895 = mul i128 12, %5894
  %5896 = trunc i128 %5895 to i64
  store i64 %5896, i64* %RCX.i412, align 8
  %5897 = sext i64 %5896 to i128
  %5898 = icmp ne i128 %5897, %5895
  %5899 = zext i1 %5898 to i8
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5899, i8* %5900, align 1
  %5901 = trunc i128 %5895 to i32
  %5902 = and i32 %5901, 255
  %5903 = call i32 @llvm.ctpop.i32(i32 %5902)
  %5904 = trunc i32 %5903 to i8
  %5905 = and i8 %5904, 1
  %5906 = xor i8 %5905, 1
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5906, i8* %5907, align 1
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5908, align 1
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5909, align 1
  %5910 = lshr i64 %5896, 63
  %5911 = trunc i64 %5910 to i8
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5911, i8* %5912, align 1
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5899, i8* %5913, align 1
  store %struct.Memory* %loadMem_47e9d6, %struct.Memory** %MEMORY
  %loadMem_47e9da = load %struct.Memory*, %struct.Memory** %MEMORY
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 33
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %5916 to i64*
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5918 = getelementptr inbounds %struct.GPR, %struct.GPR* %5917, i32 0, i32 1
  %5919 = getelementptr inbounds %struct.Reg, %struct.Reg* %5918, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %5919 to i64*
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 5
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %RCX.i410 = bitcast %union.anon* %5922 to i64*
  %5923 = load i64, i64* %RAX.i409
  %5924 = load i64, i64* %RCX.i410
  %5925 = load i64, i64* %PC.i408
  %5926 = add i64 %5925, 3
  store i64 %5926, i64* %PC.i408
  %5927 = add i64 %5924, %5923
  store i64 %5927, i64* %RAX.i409, align 8
  %5928 = icmp ult i64 %5927, %5923
  %5929 = icmp ult i64 %5927, %5924
  %5930 = or i1 %5928, %5929
  %5931 = zext i1 %5930 to i8
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5931, i8* %5932, align 1
  %5933 = trunc i64 %5927 to i32
  %5934 = and i32 %5933, 255
  %5935 = call i32 @llvm.ctpop.i32(i32 %5934)
  %5936 = trunc i32 %5935 to i8
  %5937 = and i8 %5936, 1
  %5938 = xor i8 %5937, 1
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5938, i8* %5939, align 1
  %5940 = xor i64 %5924, %5923
  %5941 = xor i64 %5940, %5927
  %5942 = lshr i64 %5941, 4
  %5943 = trunc i64 %5942 to i8
  %5944 = and i8 %5943, 1
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5944, i8* %5945, align 1
  %5946 = icmp eq i64 %5927, 0
  %5947 = zext i1 %5946 to i8
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5947, i8* %5948, align 1
  %5949 = lshr i64 %5927, 63
  %5950 = trunc i64 %5949 to i8
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5950, i8* %5951, align 1
  %5952 = lshr i64 %5923, 63
  %5953 = lshr i64 %5924, 63
  %5954 = xor i64 %5949, %5952
  %5955 = xor i64 %5949, %5953
  %5956 = add i64 %5954, %5955
  %5957 = icmp eq i64 %5956, 2
  %5958 = zext i1 %5957 to i8
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5958, i8* %5959, align 1
  store %struct.Memory* %loadMem_47e9da, %struct.Memory** %MEMORY
  %loadMem_47e9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5961 = getelementptr inbounds %struct.GPR, %struct.GPR* %5960, i32 0, i32 33
  %5962 = getelementptr inbounds %struct.Reg, %struct.Reg* %5961, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %5962 to i64*
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5964 = getelementptr inbounds %struct.GPR, %struct.GPR* %5963, i32 0, i32 1
  %5965 = getelementptr inbounds %struct.Reg, %struct.Reg* %5964, i32 0, i32 0
  %RAX.i406 = bitcast %union.anon* %5965 to i64*
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5967 = getelementptr inbounds %struct.GPR, %struct.GPR* %5966, i32 0, i32 7
  %5968 = getelementptr inbounds %struct.Reg, %struct.Reg* %5967, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %5968 to i64*
  %5969 = load i64, i64* %RAX.i406
  %5970 = add i64 %5969, 4
  %5971 = load i64, i64* %PC.i405
  %5972 = add i64 %5971, 3
  store i64 %5972, i64* %PC.i405
  %5973 = inttoptr i64 %5970 to i32*
  %5974 = load i32, i32* %5973
  %5975 = zext i32 %5974 to i64
  store i64 %5975, i64* %RDX.i407, align 8
  store %struct.Memory* %loadMem_47e9dd, %struct.Memory** %MEMORY
  %loadMem_47e9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 33
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %5978 to i64*
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 7
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %5981 to i32*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 15
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %5984 to i64*
  %5985 = load i64, i64* %RBP.i404
  %5986 = sub i64 %5985, 24
  %5987 = load i32, i32* %EDX.i
  %5988 = zext i32 %5987 to i64
  %5989 = load i64, i64* %PC.i403
  %5990 = add i64 %5989, 3
  store i64 %5990, i64* %PC.i403
  %5991 = inttoptr i64 %5986 to i32*
  store i32 %5987, i32* %5991
  store %struct.Memory* %loadMem_47e9e0, %struct.Memory** %MEMORY
  %loadMem_47e9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 33
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %5994 to i64*
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 15
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %5997 to i64*
  %5998 = load i64, i64* %RBP.i402
  %5999 = sub i64 %5998, 16
  %6000 = load i64, i64* %PC.i401
  %6001 = add i64 %6000, 7
  store i64 %6001, i64* %PC.i401
  %6002 = inttoptr i64 %5999 to i32*
  store i32 0, i32* %6002
  store %struct.Memory* %loadMem_47e9e3, %struct.Memory** %MEMORY
  br label %block_.L_47e9ea

block_.L_47e9ea:                                  ; preds = %block_.L_47eabe, %block_47e9c8
  %loadMem_47e9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6004 = getelementptr inbounds %struct.GPR, %struct.GPR* %6003, i32 0, i32 33
  %6005 = getelementptr inbounds %struct.Reg, %struct.Reg* %6004, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %6005 to i64*
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 1
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %RAX.i400 = bitcast %union.anon* %6008 to i64*
  %6009 = load i64, i64* %PC.i399
  %6010 = add i64 %6009, 10
  store i64 %6010, i64* %PC.i399
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i400, align 8
  store %struct.Memory* %loadMem_47e9ea, %struct.Memory** %MEMORY
  %loadMem_47e9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 5
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %6016 to i64*
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6018 = getelementptr inbounds %struct.GPR, %struct.GPR* %6017, i32 0, i32 15
  %6019 = getelementptr inbounds %struct.Reg, %struct.Reg* %6018, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %6019 to i64*
  %6020 = load i64, i64* %RBP.i398
  %6021 = sub i64 %6020, 16
  %6022 = load i64, i64* %PC.i396
  %6023 = add i64 %6022, 3
  store i64 %6023, i64* %PC.i396
  %6024 = inttoptr i64 %6021 to i32*
  %6025 = load i32, i32* %6024
  %6026 = zext i32 %6025 to i64
  store i64 %6026, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_47e9f4, %struct.Memory** %MEMORY
  %loadMem_47e9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6028 = getelementptr inbounds %struct.GPR, %struct.GPR* %6027, i32 0, i32 33
  %6029 = getelementptr inbounds %struct.Reg, %struct.Reg* %6028, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %6029 to i64*
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6031 = getelementptr inbounds %struct.GPR, %struct.GPR* %6030, i32 0, i32 7
  %6032 = getelementptr inbounds %struct.Reg, %struct.Reg* %6031, i32 0, i32 0
  %RDX.i395 = bitcast %union.anon* %6032 to i64*
  %6033 = load i64, i64* %PC.i394
  %6034 = add i64 %6033, 8
  store i64 %6034, i64* %PC.i394
  %6035 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %6035, i64* %RDX.i395, align 8
  store %struct.Memory* %loadMem_47e9f7, %struct.Memory** %MEMORY
  %loadMem_47e9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6037 = getelementptr inbounds %struct.GPR, %struct.GPR* %6036, i32 0, i32 33
  %6038 = getelementptr inbounds %struct.Reg, %struct.Reg* %6037, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %6038 to i64*
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 9
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %RSI.i392 = bitcast %union.anon* %6041 to i64*
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 15
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %6044 to i64*
  %6045 = load i64, i64* %RBP.i393
  %6046 = sub i64 %6045, 24
  %6047 = load i64, i64* %PC.i391
  %6048 = add i64 %6047, 4
  store i64 %6048, i64* %PC.i391
  %6049 = inttoptr i64 %6046 to i32*
  %6050 = load i32, i32* %6049
  %6051 = sext i32 %6050 to i64
  store i64 %6051, i64* %RSI.i392, align 8
  store %struct.Memory* %loadMem_47e9ff, %struct.Memory** %MEMORY
  %loadMem_47ea03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6053 = getelementptr inbounds %struct.GPR, %struct.GPR* %6052, i32 0, i32 33
  %6054 = getelementptr inbounds %struct.Reg, %struct.Reg* %6053, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %6054 to i64*
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 9
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %RSI.i390 = bitcast %union.anon* %6057 to i64*
  %6058 = load i64, i64* %RSI.i390
  %6059 = load i64, i64* %PC.i389
  %6060 = add i64 %6059, 4
  store i64 %6060, i64* %PC.i389
  %6061 = sext i64 %6058 to i128
  %6062 = and i128 %6061, -18446744073709551616
  %6063 = zext i64 %6058 to i128
  %6064 = or i128 %6062, %6063
  %6065 = mul i128 76, %6064
  %6066 = trunc i128 %6065 to i64
  store i64 %6066, i64* %RSI.i390, align 8
  %6067 = sext i64 %6066 to i128
  %6068 = icmp ne i128 %6067, %6065
  %6069 = zext i1 %6068 to i8
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6069, i8* %6070, align 1
  %6071 = trunc i128 %6065 to i32
  %6072 = and i32 %6071, 255
  %6073 = call i32 @llvm.ctpop.i32(i32 %6072)
  %6074 = trunc i32 %6073 to i8
  %6075 = and i8 %6074, 1
  %6076 = xor i8 %6075, 1
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6076, i8* %6077, align 1
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6078, align 1
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6079, align 1
  %6080 = lshr i64 %6066, 63
  %6081 = trunc i64 %6080 to i8
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6081, i8* %6082, align 1
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6069, i8* %6083, align 1
  store %struct.Memory* %loadMem_47ea03, %struct.Memory** %MEMORY
  %loadMem_47ea07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6085 = getelementptr inbounds %struct.GPR, %struct.GPR* %6084, i32 0, i32 33
  %6086 = getelementptr inbounds %struct.Reg, %struct.Reg* %6085, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %6086 to i64*
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 1
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %6089 to i64*
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 9
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %RSI.i388 = bitcast %union.anon* %6092 to i64*
  %6093 = load i64, i64* %RAX.i387
  %6094 = load i64, i64* %RSI.i388
  %6095 = load i64, i64* %PC.i386
  %6096 = add i64 %6095, 3
  store i64 %6096, i64* %PC.i386
  %6097 = add i64 %6094, %6093
  store i64 %6097, i64* %RAX.i387, align 8
  %6098 = icmp ult i64 %6097, %6093
  %6099 = icmp ult i64 %6097, %6094
  %6100 = or i1 %6098, %6099
  %6101 = zext i1 %6100 to i8
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6101, i8* %6102, align 1
  %6103 = trunc i64 %6097 to i32
  %6104 = and i32 %6103, 255
  %6105 = call i32 @llvm.ctpop.i32(i32 %6104)
  %6106 = trunc i32 %6105 to i8
  %6107 = and i8 %6106, 1
  %6108 = xor i8 %6107, 1
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6108, i8* %6109, align 1
  %6110 = xor i64 %6094, %6093
  %6111 = xor i64 %6110, %6097
  %6112 = lshr i64 %6111, 4
  %6113 = trunc i64 %6112 to i8
  %6114 = and i8 %6113, 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6114, i8* %6115, align 1
  %6116 = icmp eq i64 %6097, 0
  %6117 = zext i1 %6116 to i8
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6117, i8* %6118, align 1
  %6119 = lshr i64 %6097, 63
  %6120 = trunc i64 %6119 to i8
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6120, i8* %6121, align 1
  %6122 = lshr i64 %6093, 63
  %6123 = lshr i64 %6094, 63
  %6124 = xor i64 %6119, %6122
  %6125 = xor i64 %6119, %6123
  %6126 = add i64 %6124, %6125
  %6127 = icmp eq i64 %6126, 2
  %6128 = zext i1 %6127 to i8
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6128, i8* %6129, align 1
  store %struct.Memory* %loadMem_47ea07, %struct.Memory** %MEMORY
  %loadMem_47ea0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %6132 to i64*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6134 = getelementptr inbounds %struct.GPR, %struct.GPR* %6133, i32 0, i32 1
  %6135 = getelementptr inbounds %struct.Reg, %struct.Reg* %6134, i32 0, i32 0
  %RAX.i385 = bitcast %union.anon* %6135 to i64*
  %6136 = load i64, i64* %RAX.i385
  %6137 = add i64 %6136, 4
  %6138 = load i64, i64* %PC.i384
  %6139 = add i64 %6138, 4
  store i64 %6139, i64* %PC.i384
  %6140 = inttoptr i64 %6137 to i32*
  %6141 = load i32, i32* %6140
  %6142 = sext i32 %6141 to i64
  store i64 %6142, i64* %RAX.i385, align 8
  store %struct.Memory* %loadMem_47ea0a, %struct.Memory** %MEMORY
  %loadMem_47ea0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 33
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %6145 to i64*
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6147 = getelementptr inbounds %struct.GPR, %struct.GPR* %6146, i32 0, i32 1
  %6148 = getelementptr inbounds %struct.Reg, %struct.Reg* %6147, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %6148 to i64*
  %6149 = load i64, i64* %RAX.i383
  %6150 = load i64, i64* %PC.i382
  %6151 = add i64 %6150, 4
  store i64 %6151, i64* %PC.i382
  %6152 = sext i64 %6149 to i128
  %6153 = and i128 %6152, -18446744073709551616
  %6154 = zext i64 %6149 to i128
  %6155 = or i128 %6153, %6154
  %6156 = mul i128 104, %6155
  %6157 = trunc i128 %6156 to i64
  store i64 %6157, i64* %RAX.i383, align 8
  %6158 = sext i64 %6157 to i128
  %6159 = icmp ne i128 %6158, %6156
  %6160 = zext i1 %6159 to i8
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6160, i8* %6161, align 1
  %6162 = trunc i128 %6156 to i32
  %6163 = and i32 %6162, 255
  %6164 = call i32 @llvm.ctpop.i32(i32 %6163)
  %6165 = trunc i32 %6164 to i8
  %6166 = and i8 %6165, 1
  %6167 = xor i8 %6166, 1
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6167, i8* %6168, align 1
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6169, align 1
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6170, align 1
  %6171 = lshr i64 %6157, 63
  %6172 = trunc i64 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6172, i8* %6173, align 1
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6160, i8* %6174, align 1
  store %struct.Memory* %loadMem_47ea0e, %struct.Memory** %MEMORY
  %loadMem_47ea12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6176 = getelementptr inbounds %struct.GPR, %struct.GPR* %6175, i32 0, i32 33
  %6177 = getelementptr inbounds %struct.Reg, %struct.Reg* %6176, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %6177 to i64*
  %6178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6179 = getelementptr inbounds %struct.GPR, %struct.GPR* %6178, i32 0, i32 1
  %6180 = getelementptr inbounds %struct.Reg, %struct.Reg* %6179, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %6180 to i64*
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 7
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %RDX.i381 = bitcast %union.anon* %6183 to i64*
  %6184 = load i64, i64* %RDX.i381
  %6185 = load i64, i64* %RAX.i380
  %6186 = load i64, i64* %PC.i379
  %6187 = add i64 %6186, 3
  store i64 %6187, i64* %PC.i379
  %6188 = add i64 %6185, %6184
  store i64 %6188, i64* %RDX.i381, align 8
  %6189 = icmp ult i64 %6188, %6184
  %6190 = icmp ult i64 %6188, %6185
  %6191 = or i1 %6189, %6190
  %6192 = zext i1 %6191 to i8
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6192, i8* %6193, align 1
  %6194 = trunc i64 %6188 to i32
  %6195 = and i32 %6194, 255
  %6196 = call i32 @llvm.ctpop.i32(i32 %6195)
  %6197 = trunc i32 %6196 to i8
  %6198 = and i8 %6197, 1
  %6199 = xor i8 %6198, 1
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6199, i8* %6200, align 1
  %6201 = xor i64 %6185, %6184
  %6202 = xor i64 %6201, %6188
  %6203 = lshr i64 %6202, 4
  %6204 = trunc i64 %6203 to i8
  %6205 = and i8 %6204, 1
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6205, i8* %6206, align 1
  %6207 = icmp eq i64 %6188, 0
  %6208 = zext i1 %6207 to i8
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6208, i8* %6209, align 1
  %6210 = lshr i64 %6188, 63
  %6211 = trunc i64 %6210 to i8
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6211, i8* %6212, align 1
  %6213 = lshr i64 %6184, 63
  %6214 = lshr i64 %6185, 63
  %6215 = xor i64 %6210, %6213
  %6216 = xor i64 %6210, %6214
  %6217 = add i64 %6215, %6216
  %6218 = icmp eq i64 %6217, 2
  %6219 = zext i1 %6218 to i8
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6219, i8* %6220, align 1
  store %struct.Memory* %loadMem_47ea12, %struct.Memory** %MEMORY
  %loadMem_47ea15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 33
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %6223 to i64*
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 5
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %ECX.i377 = bitcast %union.anon* %6226 to i32*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 7
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %RDX.i378 = bitcast %union.anon* %6229 to i64*
  %6230 = load i32, i32* %ECX.i377
  %6231 = zext i32 %6230 to i64
  %6232 = load i64, i64* %RDX.i378
  %6233 = add i64 %6232, 44
  %6234 = load i64, i64* %PC.i376
  %6235 = add i64 %6234, 3
  store i64 %6235, i64* %PC.i376
  %6236 = inttoptr i64 %6233 to i32*
  %6237 = load i32, i32* %6236
  %6238 = sub i32 %6230, %6237
  %6239 = icmp ult i32 %6230, %6237
  %6240 = zext i1 %6239 to i8
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6240, i8* %6241, align 1
  %6242 = and i32 %6238, 255
  %6243 = call i32 @llvm.ctpop.i32(i32 %6242)
  %6244 = trunc i32 %6243 to i8
  %6245 = and i8 %6244, 1
  %6246 = xor i8 %6245, 1
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6246, i8* %6247, align 1
  %6248 = xor i32 %6237, %6230
  %6249 = xor i32 %6248, %6238
  %6250 = lshr i32 %6249, 4
  %6251 = trunc i32 %6250 to i8
  %6252 = and i8 %6251, 1
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6252, i8* %6253, align 1
  %6254 = icmp eq i32 %6238, 0
  %6255 = zext i1 %6254 to i8
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6255, i8* %6256, align 1
  %6257 = lshr i32 %6238, 31
  %6258 = trunc i32 %6257 to i8
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6258, i8* %6259, align 1
  %6260 = lshr i32 %6230, 31
  %6261 = lshr i32 %6237, 31
  %6262 = xor i32 %6261, %6260
  %6263 = xor i32 %6257, %6260
  %6264 = add i32 %6263, %6262
  %6265 = icmp eq i32 %6264, 2
  %6266 = zext i1 %6265 to i8
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6266, i8* %6267, align 1
  store %struct.Memory* %loadMem_47ea15, %struct.Memory** %MEMORY
  %loadMem_47ea18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6269 = getelementptr inbounds %struct.GPR, %struct.GPR* %6268, i32 0, i32 33
  %6270 = getelementptr inbounds %struct.Reg, %struct.Reg* %6269, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %6270 to i64*
  %6271 = load i64, i64* %PC.i375
  %6272 = add i64 %6271, 180
  %6273 = load i64, i64* %PC.i375
  %6274 = add i64 %6273, 6
  %6275 = load i64, i64* %PC.i375
  %6276 = add i64 %6275, 6
  store i64 %6276, i64* %PC.i375
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6278 = load i8, i8* %6277, align 1
  %6279 = icmp ne i8 %6278, 0
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6281 = load i8, i8* %6280, align 1
  %6282 = icmp ne i8 %6281, 0
  %6283 = xor i1 %6279, %6282
  %6284 = xor i1 %6283, true
  %6285 = zext i1 %6284 to i8
  store i8 %6285, i8* %BRANCH_TAKEN, align 1
  %6286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6287 = select i1 %6283, i64 %6274, i64 %6272
  store i64 %6287, i64* %6286, align 8
  store %struct.Memory* %loadMem_47ea18, %struct.Memory** %MEMORY
  %loadBr_47ea18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ea18 = icmp eq i8 %loadBr_47ea18, 1
  br i1 %cmpBr_47ea18, label %block_.L_47eacc, label %block_47ea1e

block_47ea1e:                                     ; preds = %block_.L_47e9ea
  %loadMem_47ea1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 1
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %6293 to i64*
  %6294 = load i64, i64* %PC.i373
  %6295 = add i64 %6294, 10
  store i64 %6295, i64* %PC.i373
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i374, align 8
  store %struct.Memory* %loadMem_47ea1e, %struct.Memory** %MEMORY
  %loadMem_47ea28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 33
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %6298 to i64*
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6300 = getelementptr inbounds %struct.GPR, %struct.GPR* %6299, i32 0, i32 5
  %6301 = getelementptr inbounds %struct.Reg, %struct.Reg* %6300, i32 0, i32 0
  %RCX.i372 = bitcast %union.anon* %6301 to i64*
  %6302 = load i64, i64* %PC.i371
  %6303 = add i64 %6302, 8
  store i64 %6303, i64* %PC.i371
  %6304 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %6304, i64* %RCX.i372, align 8
  store %struct.Memory* %loadMem_47ea28, %struct.Memory** %MEMORY
  %loadMem_47ea30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6307 to i64*
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 7
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %RDX.i370 = bitcast %union.anon* %6310 to i64*
  %6311 = load i64, i64* %PC.i369
  %6312 = add i64 %6311, 8
  store i64 %6312, i64* %PC.i369
  %6313 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %6313, i64* %RDX.i370, align 8
  store %struct.Memory* %loadMem_47ea30, %struct.Memory** %MEMORY
  %loadMem_47ea38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 33
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6316 to i64*
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6318 = getelementptr inbounds %struct.GPR, %struct.GPR* %6317, i32 0, i32 9
  %6319 = getelementptr inbounds %struct.Reg, %struct.Reg* %6318, i32 0, i32 0
  %RSI.i367 = bitcast %union.anon* %6319 to i64*
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6321 = getelementptr inbounds %struct.GPR, %struct.GPR* %6320, i32 0, i32 15
  %6322 = getelementptr inbounds %struct.Reg, %struct.Reg* %6321, i32 0, i32 0
  %RBP.i368 = bitcast %union.anon* %6322 to i64*
  %6323 = load i64, i64* %RBP.i368
  %6324 = sub i64 %6323, 24
  %6325 = load i64, i64* %PC.i366
  %6326 = add i64 %6325, 4
  store i64 %6326, i64* %PC.i366
  %6327 = inttoptr i64 %6324 to i32*
  %6328 = load i32, i32* %6327
  %6329 = sext i32 %6328 to i64
  store i64 %6329, i64* %RSI.i367, align 8
  store %struct.Memory* %loadMem_47ea38, %struct.Memory** %MEMORY
  %loadMem_47ea3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 33
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %6332 to i64*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 9
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RSI.i365 = bitcast %union.anon* %6335 to i64*
  %6336 = load i64, i64* %RSI.i365
  %6337 = load i64, i64* %PC.i364
  %6338 = add i64 %6337, 4
  store i64 %6338, i64* %PC.i364
  %6339 = sext i64 %6336 to i128
  %6340 = and i128 %6339, -18446744073709551616
  %6341 = zext i64 %6336 to i128
  %6342 = or i128 %6340, %6341
  %6343 = mul i128 76, %6342
  %6344 = trunc i128 %6343 to i64
  store i64 %6344, i64* %RSI.i365, align 8
  %6345 = sext i64 %6344 to i128
  %6346 = icmp ne i128 %6345, %6343
  %6347 = zext i1 %6346 to i8
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6347, i8* %6348, align 1
  %6349 = trunc i128 %6343 to i32
  %6350 = and i32 %6349, 255
  %6351 = call i32 @llvm.ctpop.i32(i32 %6350)
  %6352 = trunc i32 %6351 to i8
  %6353 = and i8 %6352, 1
  %6354 = xor i8 %6353, 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6354, i8* %6355, align 1
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6356, align 1
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6357, align 1
  %6358 = lshr i64 %6344, 63
  %6359 = trunc i64 %6358 to i8
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6359, i8* %6360, align 1
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6347, i8* %6361, align 1
  store %struct.Memory* %loadMem_47ea3c, %struct.Memory** %MEMORY
  %loadMem_47ea40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 33
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %6364 to i64*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 1
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %6367 to i64*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 11
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %RDI.i363 = bitcast %union.anon* %6370 to i64*
  %6371 = load i64, i64* %RAX.i362
  %6372 = load i64, i64* %PC.i361
  %6373 = add i64 %6372, 3
  store i64 %6373, i64* %PC.i361
  store i64 %6371, i64* %RDI.i363, align 8
  store %struct.Memory* %loadMem_47ea40, %struct.Memory** %MEMORY
  %loadMem_47ea43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 33
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %6376 to i64*
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6378 = getelementptr inbounds %struct.GPR, %struct.GPR* %6377, i32 0, i32 9
  %6379 = getelementptr inbounds %struct.Reg, %struct.Reg* %6378, i32 0, i32 0
  %RSI.i359 = bitcast %union.anon* %6379 to i64*
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6381 = getelementptr inbounds %struct.GPR, %struct.GPR* %6380, i32 0, i32 11
  %6382 = getelementptr inbounds %struct.Reg, %struct.Reg* %6381, i32 0, i32 0
  %RDI.i360 = bitcast %union.anon* %6382 to i64*
  %6383 = load i64, i64* %RDI.i360
  %6384 = load i64, i64* %RSI.i359
  %6385 = load i64, i64* %PC.i358
  %6386 = add i64 %6385, 3
  store i64 %6386, i64* %PC.i358
  %6387 = add i64 %6384, %6383
  store i64 %6387, i64* %RDI.i360, align 8
  %6388 = icmp ult i64 %6387, %6383
  %6389 = icmp ult i64 %6387, %6384
  %6390 = or i1 %6388, %6389
  %6391 = zext i1 %6390 to i8
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6391, i8* %6392, align 1
  %6393 = trunc i64 %6387 to i32
  %6394 = and i32 %6393, 255
  %6395 = call i32 @llvm.ctpop.i32(i32 %6394)
  %6396 = trunc i32 %6395 to i8
  %6397 = and i8 %6396, 1
  %6398 = xor i8 %6397, 1
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6398, i8* %6399, align 1
  %6400 = xor i64 %6384, %6383
  %6401 = xor i64 %6400, %6387
  %6402 = lshr i64 %6401, 4
  %6403 = trunc i64 %6402 to i8
  %6404 = and i8 %6403, 1
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6404, i8* %6405, align 1
  %6406 = icmp eq i64 %6387, 0
  %6407 = zext i1 %6406 to i8
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6407, i8* %6408, align 1
  %6409 = lshr i64 %6387, 63
  %6410 = trunc i64 %6409 to i8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6410, i8* %6411, align 1
  %6412 = lshr i64 %6383, 63
  %6413 = lshr i64 %6384, 63
  %6414 = xor i64 %6409, %6412
  %6415 = xor i64 %6409, %6413
  %6416 = add i64 %6414, %6415
  %6417 = icmp eq i64 %6416, 2
  %6418 = zext i1 %6417 to i8
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6418, i8* %6419, align 1
  store %struct.Memory* %loadMem_47ea43, %struct.Memory** %MEMORY
  %loadMem_47ea46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6421 = getelementptr inbounds %struct.GPR, %struct.GPR* %6420, i32 0, i32 33
  %6422 = getelementptr inbounds %struct.Reg, %struct.Reg* %6421, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %6422 to i64*
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 9
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %RSI.i356 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 11
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RDI.i357 = bitcast %union.anon* %6428 to i64*
  %6429 = load i64, i64* %RDI.i357
  %6430 = add i64 %6429, 4
  %6431 = load i64, i64* %PC.i355
  %6432 = add i64 %6431, 4
  store i64 %6432, i64* %PC.i355
  %6433 = inttoptr i64 %6430 to i32*
  %6434 = load i32, i32* %6433
  %6435 = sext i32 %6434 to i64
  store i64 %6435, i64* %RSI.i356, align 8
  store %struct.Memory* %loadMem_47ea46, %struct.Memory** %MEMORY
  %loadMem_47ea4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 33
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %6438 to i64*
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 9
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %RSI.i354 = bitcast %union.anon* %6441 to i64*
  %6442 = load i64, i64* %RSI.i354
  %6443 = load i64, i64* %PC.i353
  %6444 = add i64 %6443, 4
  store i64 %6444, i64* %PC.i353
  %6445 = sext i64 %6442 to i128
  %6446 = and i128 %6445, -18446744073709551616
  %6447 = zext i64 %6442 to i128
  %6448 = or i128 %6446, %6447
  %6449 = mul i128 104, %6448
  %6450 = trunc i128 %6449 to i64
  store i64 %6450, i64* %RSI.i354, align 8
  %6451 = sext i64 %6450 to i128
  %6452 = icmp ne i128 %6451, %6449
  %6453 = zext i1 %6452 to i8
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6453, i8* %6454, align 1
  %6455 = trunc i128 %6449 to i32
  %6456 = and i32 %6455, 255
  %6457 = call i32 @llvm.ctpop.i32(i32 %6456)
  %6458 = trunc i32 %6457 to i8
  %6459 = and i8 %6458, 1
  %6460 = xor i8 %6459, 1
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6460, i8* %6461, align 1
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6462, align 1
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6463, align 1
  %6464 = lshr i64 %6450, 63
  %6465 = trunc i64 %6464 to i8
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6465, i8* %6466, align 1
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6453, i8* %6467, align 1
  store %struct.Memory* %loadMem_47ea4a, %struct.Memory** %MEMORY
  %loadMem_47ea4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 33
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %6470 to i64*
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 7
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %RDX.i351 = bitcast %union.anon* %6473 to i64*
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 9
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %RSI.i352 = bitcast %union.anon* %6476 to i64*
  %6477 = load i64, i64* %RDX.i351
  %6478 = load i64, i64* %RSI.i352
  %6479 = load i64, i64* %PC.i350
  %6480 = add i64 %6479, 3
  store i64 %6480, i64* %PC.i350
  %6481 = add i64 %6478, %6477
  store i64 %6481, i64* %RDX.i351, align 8
  %6482 = icmp ult i64 %6481, %6477
  %6483 = icmp ult i64 %6481, %6478
  %6484 = or i1 %6482, %6483
  %6485 = zext i1 %6484 to i8
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6485, i8* %6486, align 1
  %6487 = trunc i64 %6481 to i32
  %6488 = and i32 %6487, 255
  %6489 = call i32 @llvm.ctpop.i32(i32 %6488)
  %6490 = trunc i32 %6489 to i8
  %6491 = and i8 %6490, 1
  %6492 = xor i8 %6491, 1
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6492, i8* %6493, align 1
  %6494 = xor i64 %6478, %6477
  %6495 = xor i64 %6494, %6481
  %6496 = lshr i64 %6495, 4
  %6497 = trunc i64 %6496 to i8
  %6498 = and i8 %6497, 1
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6498, i8* %6499, align 1
  %6500 = icmp eq i64 %6481, 0
  %6501 = zext i1 %6500 to i8
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6501, i8* %6502, align 1
  %6503 = lshr i64 %6481, 63
  %6504 = trunc i64 %6503 to i8
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6504, i8* %6505, align 1
  %6506 = lshr i64 %6477, 63
  %6507 = lshr i64 %6478, 63
  %6508 = xor i64 %6503, %6506
  %6509 = xor i64 %6503, %6507
  %6510 = add i64 %6508, %6509
  %6511 = icmp eq i64 %6510, 2
  %6512 = zext i1 %6511 to i8
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6512, i8* %6513, align 1
  store %struct.Memory* %loadMem_47ea4e, %struct.Memory** %MEMORY
  %loadMem_47ea51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6515 = getelementptr inbounds %struct.GPR, %struct.GPR* %6514, i32 0, i32 33
  %6516 = getelementptr inbounds %struct.Reg, %struct.Reg* %6515, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %6516 to i64*
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 9
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %RSI.i348 = bitcast %union.anon* %6519 to i64*
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 15
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %6522 to i64*
  %6523 = load i64, i64* %RBP.i349
  %6524 = sub i64 %6523, 16
  %6525 = load i64, i64* %PC.i347
  %6526 = add i64 %6525, 4
  store i64 %6526, i64* %PC.i347
  %6527 = inttoptr i64 %6524 to i32*
  %6528 = load i32, i32* %6527
  %6529 = sext i32 %6528 to i64
  store i64 %6529, i64* %RSI.i348, align 8
  store %struct.Memory* %loadMem_47ea51, %struct.Memory** %MEMORY
  %loadMem_47ea55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6531 = getelementptr inbounds %struct.GPR, %struct.GPR* %6530, i32 0, i32 33
  %6532 = getelementptr inbounds %struct.Reg, %struct.Reg* %6531, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %6532 to i64*
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6534 = getelementptr inbounds %struct.GPR, %struct.GPR* %6533, i32 0, i32 7
  %6535 = getelementptr inbounds %struct.Reg, %struct.Reg* %6534, i32 0, i32 0
  %RDX.i345 = bitcast %union.anon* %6535 to i64*
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 9
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %RSI.i346 = bitcast %union.anon* %6538 to i64*
  %6539 = load i64, i64* %RDX.i345
  %6540 = load i64, i64* %RSI.i346
  %6541 = mul i64 %6540, 4
  %6542 = add i64 %6539, 4
  %6543 = add i64 %6542, %6541
  %6544 = load i64, i64* %PC.i344
  %6545 = add i64 %6544, 5
  store i64 %6545, i64* %PC.i344
  %6546 = inttoptr i64 %6543 to i32*
  %6547 = load i32, i32* %6546
  %6548 = sext i32 %6547 to i64
  store i64 %6548, i64* %RDX.i345, align 8
  store %struct.Memory* %loadMem_47ea55, %struct.Memory** %MEMORY
  %loadMem_47ea5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 33
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 7
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RDX.i343 = bitcast %union.anon* %6554 to i64*
  %6555 = load i64, i64* %RDX.i343
  %6556 = load i64, i64* %PC.i342
  %6557 = add i64 %6556, 4
  store i64 %6557, i64* %PC.i342
  %6558 = sext i64 %6555 to i128
  %6559 = and i128 %6558, -18446744073709551616
  %6560 = zext i64 %6555 to i128
  %6561 = or i128 %6559, %6560
  %6562 = mul i128 104, %6561
  %6563 = trunc i128 %6562 to i64
  store i64 %6563, i64* %RDX.i343, align 8
  %6564 = sext i64 %6563 to i128
  %6565 = icmp ne i128 %6564, %6562
  %6566 = zext i1 %6565 to i8
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6566, i8* %6567, align 1
  %6568 = trunc i128 %6562 to i32
  %6569 = and i32 %6568, 255
  %6570 = call i32 @llvm.ctpop.i32(i32 %6569)
  %6571 = trunc i32 %6570 to i8
  %6572 = and i8 %6571, 1
  %6573 = xor i8 %6572, 1
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6573, i8* %6574, align 1
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6575, align 1
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6576, align 1
  %6577 = lshr i64 %6563, 63
  %6578 = trunc i64 %6577 to i8
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6578, i8* %6579, align 1
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6566, i8* %6580, align 1
  store %struct.Memory* %loadMem_47ea5a, %struct.Memory** %MEMORY
  %loadMem_47ea5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6582 = getelementptr inbounds %struct.GPR, %struct.GPR* %6581, i32 0, i32 33
  %6583 = getelementptr inbounds %struct.Reg, %struct.Reg* %6582, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %6583 to i64*
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6585 = getelementptr inbounds %struct.GPR, %struct.GPR* %6584, i32 0, i32 5
  %6586 = getelementptr inbounds %struct.Reg, %struct.Reg* %6585, i32 0, i32 0
  %RCX.i340 = bitcast %union.anon* %6586 to i64*
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6588 = getelementptr inbounds %struct.GPR, %struct.GPR* %6587, i32 0, i32 7
  %6589 = getelementptr inbounds %struct.Reg, %struct.Reg* %6588, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %6589 to i64*
  %6590 = load i64, i64* %RCX.i340
  %6591 = load i64, i64* %RDX.i341
  %6592 = load i64, i64* %PC.i339
  %6593 = add i64 %6592, 3
  store i64 %6593, i64* %PC.i339
  %6594 = add i64 %6591, %6590
  store i64 %6594, i64* %RCX.i340, align 8
  %6595 = icmp ult i64 %6594, %6590
  %6596 = icmp ult i64 %6594, %6591
  %6597 = or i1 %6595, %6596
  %6598 = zext i1 %6597 to i8
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6598, i8* %6599, align 1
  %6600 = trunc i64 %6594 to i32
  %6601 = and i32 %6600, 255
  %6602 = call i32 @llvm.ctpop.i32(i32 %6601)
  %6603 = trunc i32 %6602 to i8
  %6604 = and i8 %6603, 1
  %6605 = xor i8 %6604, 1
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6605, i8* %6606, align 1
  %6607 = xor i64 %6591, %6590
  %6608 = xor i64 %6607, %6594
  %6609 = lshr i64 %6608, 4
  %6610 = trunc i64 %6609 to i8
  %6611 = and i8 %6610, 1
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6611, i8* %6612, align 1
  %6613 = icmp eq i64 %6594, 0
  %6614 = zext i1 %6613 to i8
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6614, i8* %6615, align 1
  %6616 = lshr i64 %6594, 63
  %6617 = trunc i64 %6616 to i8
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6617, i8* %6618, align 1
  %6619 = lshr i64 %6590, 63
  %6620 = lshr i64 %6591, 63
  %6621 = xor i64 %6616, %6619
  %6622 = xor i64 %6616, %6620
  %6623 = add i64 %6621, %6622
  %6624 = icmp eq i64 %6623, 2
  %6625 = zext i1 %6624 to i8
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6625, i8* %6626, align 1
  store %struct.Memory* %loadMem_47ea5e, %struct.Memory** %MEMORY
  %loadMem_47ea61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6628 = getelementptr inbounds %struct.GPR, %struct.GPR* %6627, i32 0, i32 33
  %6629 = getelementptr inbounds %struct.Reg, %struct.Reg* %6628, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %6629 to i64*
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6631 = getelementptr inbounds %struct.GPR, %struct.GPR* %6630, i32 0, i32 17
  %6632 = getelementptr inbounds %struct.Reg, %struct.Reg* %6631, i32 0, i32 0
  %R8D.i337 = bitcast %union.anon* %6632 to i32*
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6634 = getelementptr inbounds %struct.GPR, %struct.GPR* %6633, i32 0, i32 5
  %6635 = getelementptr inbounds %struct.Reg, %struct.Reg* %6634, i32 0, i32 0
  %RCX.i338 = bitcast %union.anon* %6635 to i64*
  %6636 = bitcast i32* %R8D.i337 to i64*
  %6637 = load i64, i64* %RCX.i338
  %6638 = load i64, i64* %PC.i336
  %6639 = add i64 %6638, 3
  store i64 %6639, i64* %PC.i336
  %6640 = inttoptr i64 %6637 to i32*
  %6641 = load i32, i32* %6640
  %6642 = zext i32 %6641 to i64
  store i64 %6642, i64* %6636, align 8
  store %struct.Memory* %loadMem_47ea61, %struct.Memory** %MEMORY
  %loadMem_47ea64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 33
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %6645 to i64*
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 17
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %R8D.i334 = bitcast %union.anon* %6648 to i32*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 15
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %6651 to i64*
  %6652 = load i64, i64* %RBP.i335
  %6653 = sub i64 %6652, 700
  %6654 = load i32, i32* %R8D.i334
  %6655 = zext i32 %6654 to i64
  %6656 = load i64, i64* %PC.i333
  %6657 = add i64 %6656, 7
  store i64 %6657, i64* %PC.i333
  %6658 = inttoptr i64 %6653 to i32*
  store i32 %6654, i32* %6658
  store %struct.Memory* %loadMem_47ea64, %struct.Memory** %MEMORY
  %loadMem_47ea6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6660 = getelementptr inbounds %struct.GPR, %struct.GPR* %6659, i32 0, i32 33
  %6661 = getelementptr inbounds %struct.Reg, %struct.Reg* %6660, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %6661 to i64*
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 5
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %6664 to i64*
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 15
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %6667 to i64*
  %6668 = load i64, i64* %RBP.i332
  %6669 = sub i64 %6668, 700
  %6670 = load i64, i64* %PC.i330
  %6671 = add i64 %6670, 7
  store i64 %6671, i64* %PC.i330
  %6672 = inttoptr i64 %6669 to i32*
  %6673 = load i32, i32* %6672
  %6674 = sext i32 %6673 to i64
  store i64 %6674, i64* %RCX.i331, align 8
  store %struct.Memory* %loadMem_47ea6b, %struct.Memory** %MEMORY
  %loadMem_47ea72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 33
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %6677 to i64*
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 5
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %RCX.i329 = bitcast %union.anon* %6680 to i64*
  %6681 = load i64, i64* %RCX.i329
  %6682 = load i64, i64* %PC.i328
  %6683 = add i64 %6682, 4
  store i64 %6683, i64* %PC.i328
  %6684 = sext i64 %6681 to i128
  %6685 = and i128 %6684, -18446744073709551616
  %6686 = zext i64 %6681 to i128
  %6687 = or i128 %6685, %6686
  %6688 = mul i128 76, %6687
  %6689 = trunc i128 %6688 to i64
  store i64 %6689, i64* %RCX.i329, align 8
  %6690 = sext i64 %6689 to i128
  %6691 = icmp ne i128 %6690, %6688
  %6692 = zext i1 %6691 to i8
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6692, i8* %6693, align 1
  %6694 = trunc i128 %6688 to i32
  %6695 = and i32 %6694, 255
  %6696 = call i32 @llvm.ctpop.i32(i32 %6695)
  %6697 = trunc i32 %6696 to i8
  %6698 = and i8 %6697, 1
  %6699 = xor i8 %6698, 1
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6699, i8* %6700, align 1
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6701, align 1
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6702, align 1
  %6703 = lshr i64 %6689, 63
  %6704 = trunc i64 %6703 to i8
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6704, i8* %6705, align 1
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6692, i8* %6706, align 1
  store %struct.Memory* %loadMem_47ea72, %struct.Memory** %MEMORY
  %loadMem_47ea76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 33
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 1
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 5
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RCX.i327 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RAX.i326
  %6717 = load i64, i64* %RCX.i327
  %6718 = load i64, i64* %PC.i325
  %6719 = add i64 %6718, 3
  store i64 %6719, i64* %PC.i325
  %6720 = add i64 %6717, %6716
  store i64 %6720, i64* %RAX.i326, align 8
  %6721 = icmp ult i64 %6720, %6716
  %6722 = icmp ult i64 %6720, %6717
  %6723 = or i1 %6721, %6722
  %6724 = zext i1 %6723 to i8
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6724, i8* %6725, align 1
  %6726 = trunc i64 %6720 to i32
  %6727 = and i32 %6726, 255
  %6728 = call i32 @llvm.ctpop.i32(i32 %6727)
  %6729 = trunc i32 %6728 to i8
  %6730 = and i8 %6729, 1
  %6731 = xor i8 %6730, 1
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6731, i8* %6732, align 1
  %6733 = xor i64 %6717, %6716
  %6734 = xor i64 %6733, %6720
  %6735 = lshr i64 %6734, 4
  %6736 = trunc i64 %6735 to i8
  %6737 = and i8 %6736, 1
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6737, i8* %6738, align 1
  %6739 = icmp eq i64 %6720, 0
  %6740 = zext i1 %6739 to i8
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6740, i8* %6741, align 1
  %6742 = lshr i64 %6720, 63
  %6743 = trunc i64 %6742 to i8
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6743, i8* %6744, align 1
  %6745 = lshr i64 %6716, 63
  %6746 = lshr i64 %6717, 63
  %6747 = xor i64 %6742, %6745
  %6748 = xor i64 %6742, %6746
  %6749 = add i64 %6747, %6748
  %6750 = icmp eq i64 %6749, 2
  %6751 = zext i1 %6750 to i8
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6751, i8* %6752, align 1
  store %struct.Memory* %loadMem_47ea76, %struct.Memory** %MEMORY
  %loadMem_47ea79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 33
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %6755 to i64*
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 17
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %R8D.i323 = bitcast %union.anon* %6758 to i32*
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6760 = getelementptr inbounds %struct.GPR, %struct.GPR* %6759, i32 0, i32 1
  %6761 = getelementptr inbounds %struct.Reg, %struct.Reg* %6760, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %6761 to i64*
  %6762 = bitcast i32* %R8D.i323 to i64*
  %6763 = load i64, i64* %RAX.i324
  %6764 = load i64, i64* %PC.i322
  %6765 = add i64 %6764, 3
  store i64 %6765, i64* %PC.i322
  %6766 = inttoptr i64 %6763 to i32*
  %6767 = load i32, i32* %6766
  %6768 = zext i32 %6767 to i64
  store i64 %6768, i64* %6762, align 8
  store %struct.Memory* %loadMem_47ea79, %struct.Memory** %MEMORY
  %loadMem_47ea7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 33
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %6771 to i64*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 17
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %R8D.i320 = bitcast %union.anon* %6774 to i32*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 15
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %6777 to i64*
  %6778 = load i32, i32* %R8D.i320
  %6779 = zext i32 %6778 to i64
  %6780 = load i64, i64* %RBP.i321
  %6781 = sub i64 %6780, 4
  %6782 = load i64, i64* %PC.i319
  %6783 = add i64 %6782, 4
  store i64 %6783, i64* %PC.i319
  %6784 = inttoptr i64 %6781 to i32*
  %6785 = load i32, i32* %6784
  %6786 = sub i32 %6778, %6785
  %6787 = icmp ult i32 %6778, %6785
  %6788 = zext i1 %6787 to i8
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6788, i8* %6789, align 1
  %6790 = and i32 %6786, 255
  %6791 = call i32 @llvm.ctpop.i32(i32 %6790)
  %6792 = trunc i32 %6791 to i8
  %6793 = and i8 %6792, 1
  %6794 = xor i8 %6793, 1
  %6795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6794, i8* %6795, align 1
  %6796 = xor i32 %6785, %6778
  %6797 = xor i32 %6796, %6786
  %6798 = lshr i32 %6797, 4
  %6799 = trunc i32 %6798 to i8
  %6800 = and i8 %6799, 1
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6800, i8* %6801, align 1
  %6802 = icmp eq i32 %6786, 0
  %6803 = zext i1 %6802 to i8
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6803, i8* %6804, align 1
  %6805 = lshr i32 %6786, 31
  %6806 = trunc i32 %6805 to i8
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6806, i8* %6807, align 1
  %6808 = lshr i32 %6778, 31
  %6809 = lshr i32 %6785, 31
  %6810 = xor i32 %6809, %6808
  %6811 = xor i32 %6805, %6808
  %6812 = add i32 %6811, %6810
  %6813 = icmp eq i32 %6812, 2
  %6814 = zext i1 %6813 to i8
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6814, i8* %6815, align 1
  store %struct.Memory* %loadMem_47ea7c, %struct.Memory** %MEMORY
  %loadMem_47ea80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6817 = getelementptr inbounds %struct.GPR, %struct.GPR* %6816, i32 0, i32 33
  %6818 = getelementptr inbounds %struct.Reg, %struct.Reg* %6817, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %6818 to i64*
  %6819 = load i64, i64* %PC.i318
  %6820 = add i64 %6819, 57
  %6821 = load i64, i64* %PC.i318
  %6822 = add i64 %6821, 6
  %6823 = load i64, i64* %PC.i318
  %6824 = add i64 %6823, 6
  store i64 %6824, i64* %PC.i318
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6826 = load i8, i8* %6825, align 1
  %6827 = icmp eq i8 %6826, 0
  %6828 = zext i1 %6827 to i8
  store i8 %6828, i8* %BRANCH_TAKEN, align 1
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6830 = select i1 %6827, i64 %6820, i64 %6822
  store i64 %6830, i64* %6829, align 8
  store %struct.Memory* %loadMem_47ea80, %struct.Memory** %MEMORY
  %loadBr_47ea80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ea80 = icmp eq i8 %loadBr_47ea80, 1
  br i1 %cmpBr_47ea80, label %block_.L_47eab9, label %block_47ea86

block_47ea86:                                     ; preds = %block_47ea1e
  %loadMem_47ea86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6832 = getelementptr inbounds %struct.GPR, %struct.GPR* %6831, i32 0, i32 33
  %6833 = getelementptr inbounds %struct.Reg, %struct.Reg* %6832, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %6833 to i64*
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6835 = getelementptr inbounds %struct.GPR, %struct.GPR* %6834, i32 0, i32 1
  %6836 = getelementptr inbounds %struct.Reg, %struct.Reg* %6835, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %6836 to i64*
  %6837 = load i64, i64* %PC.i316
  %6838 = add i64 %6837, 10
  store i64 %6838, i64* %PC.i316
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX.i317, align 8
  store %struct.Memory* %loadMem_47ea86, %struct.Memory** %MEMORY
  %loadMem_47ea90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6840 = getelementptr inbounds %struct.GPR, %struct.GPR* %6839, i32 0, i32 33
  %6841 = getelementptr inbounds %struct.Reg, %struct.Reg* %6840, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %6841 to i64*
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 5
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 15
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %6847 to i64*
  %6848 = load i64, i64* %RBP.i315
  %6849 = sub i64 %6848, 700
  %6850 = load i64, i64* %PC.i313
  %6851 = add i64 %6850, 7
  store i64 %6851, i64* %PC.i313
  %6852 = inttoptr i64 %6849 to i32*
  %6853 = load i32, i32* %6852
  %6854 = sext i32 %6853 to i64
  store i64 %6854, i64* %RCX.i314, align 8
  store %struct.Memory* %loadMem_47ea90, %struct.Memory** %MEMORY
  %loadMem_47ea97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6856 = getelementptr inbounds %struct.GPR, %struct.GPR* %6855, i32 0, i32 33
  %6857 = getelementptr inbounds %struct.Reg, %struct.Reg* %6856, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %6857 to i64*
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 5
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %RCX.i312 = bitcast %union.anon* %6860 to i64*
  %6861 = load i64, i64* %RCX.i312
  %6862 = load i64, i64* %PC.i311
  %6863 = add i64 %6862, 7
  store i64 %6863, i64* %PC.i311
  %6864 = sext i64 %6861 to i128
  %6865 = and i128 %6864, -18446744073709551616
  %6866 = zext i64 %6861 to i128
  %6867 = or i128 %6865, %6866
  %6868 = mul i128 380, %6867
  %6869 = trunc i128 %6868 to i64
  store i64 %6869, i64* %RCX.i312, align 8
  %6870 = sext i64 %6869 to i128
  %6871 = icmp ne i128 %6870, %6868
  %6872 = zext i1 %6871 to i8
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6872, i8* %6873, align 1
  %6874 = trunc i128 %6868 to i32
  %6875 = and i32 %6874, 255
  %6876 = call i32 @llvm.ctpop.i32(i32 %6875)
  %6877 = trunc i32 %6876 to i8
  %6878 = and i8 %6877, 1
  %6879 = xor i8 %6878, 1
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6879, i8* %6880, align 1
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6881, align 1
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6882, align 1
  %6883 = lshr i64 %6869, 63
  %6884 = trunc i64 %6883 to i8
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6884, i8* %6885, align 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6872, i8* %6886, align 1
  store %struct.Memory* %loadMem_47ea97, %struct.Memory** %MEMORY
  %loadMem_47ea9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6888 = getelementptr inbounds %struct.GPR, %struct.GPR* %6887, i32 0, i32 33
  %6889 = getelementptr inbounds %struct.Reg, %struct.Reg* %6888, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %6889 to i64*
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 1
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 5
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %6895 to i64*
  %6896 = load i64, i64* %RAX.i309
  %6897 = load i64, i64* %RCX.i310
  %6898 = load i64, i64* %PC.i308
  %6899 = add i64 %6898, 3
  store i64 %6899, i64* %PC.i308
  %6900 = add i64 %6897, %6896
  store i64 %6900, i64* %RAX.i309, align 8
  %6901 = icmp ult i64 %6900, %6896
  %6902 = icmp ult i64 %6900, %6897
  %6903 = or i1 %6901, %6902
  %6904 = zext i1 %6903 to i8
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6904, i8* %6905, align 1
  %6906 = trunc i64 %6900 to i32
  %6907 = and i32 %6906, 255
  %6908 = call i32 @llvm.ctpop.i32(i32 %6907)
  %6909 = trunc i32 %6908 to i8
  %6910 = and i8 %6909, 1
  %6911 = xor i8 %6910, 1
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6911, i8* %6912, align 1
  %6913 = xor i64 %6897, %6896
  %6914 = xor i64 %6913, %6900
  %6915 = lshr i64 %6914, 4
  %6916 = trunc i64 %6915 to i8
  %6917 = and i8 %6916, 1
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6917, i8* %6918, align 1
  %6919 = icmp eq i64 %6900, 0
  %6920 = zext i1 %6919 to i8
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6920, i8* %6921, align 1
  %6922 = lshr i64 %6900, 63
  %6923 = trunc i64 %6922 to i8
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6923, i8* %6924, align 1
  %6925 = lshr i64 %6896, 63
  %6926 = lshr i64 %6897, 63
  %6927 = xor i64 %6922, %6925
  %6928 = xor i64 %6922, %6926
  %6929 = add i64 %6927, %6928
  %6930 = icmp eq i64 %6929, 2
  %6931 = zext i1 %6930 to i8
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6931, i8* %6932, align 1
  store %struct.Memory* %loadMem_47ea9e, %struct.Memory** %MEMORY
  %loadMem_47eaa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6934 = getelementptr inbounds %struct.GPR, %struct.GPR* %6933, i32 0, i32 33
  %6935 = getelementptr inbounds %struct.Reg, %struct.Reg* %6934, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %6935 to i64*
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 1
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %6938 to i64*
  %6939 = load i64, i64* %RAX.i307
  %6940 = add i64 %6939, 100
  %6941 = load i64, i64* %PC.i306
  %6942 = add i64 %6941, 4
  store i64 %6942, i64* %PC.i306
  %6943 = inttoptr i64 %6940 to i32*
  %6944 = load i32, i32* %6943
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6945, align 1
  %6946 = and i32 %6944, 255
  %6947 = call i32 @llvm.ctpop.i32(i32 %6946)
  %6948 = trunc i32 %6947 to i8
  %6949 = and i8 %6948, 1
  %6950 = xor i8 %6949, 1
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6950, i8* %6951, align 1
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6952, align 1
  %6953 = icmp eq i32 %6944, 0
  %6954 = zext i1 %6953 to i8
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6954, i8* %6955, align 1
  %6956 = lshr i32 %6944, 31
  %6957 = trunc i32 %6956 to i8
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6957, i8* %6958, align 1
  %6959 = lshr i32 %6944, 31
  %6960 = xor i32 %6956, %6959
  %6961 = add i32 %6960, %6959
  %6962 = icmp eq i32 %6961, 2
  %6963 = zext i1 %6962 to i8
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6963, i8* %6964, align 1
  store %struct.Memory* %loadMem_47eaa1, %struct.Memory** %MEMORY
  %loadMem_47eaa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 33
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %6967 to i64*
  %6968 = load i64, i64* %PC.i305
  %6969 = add i64 %6968, 20
  %6970 = load i64, i64* %PC.i305
  %6971 = add i64 %6970, 6
  %6972 = load i64, i64* %PC.i305
  %6973 = add i64 %6972, 6
  store i64 %6973, i64* %PC.i305
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6975 = load i8, i8* %6974, align 1
  %6976 = icmp eq i8 %6975, 0
  %6977 = zext i1 %6976 to i8
  store i8 %6977, i8* %BRANCH_TAKEN, align 1
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6979 = select i1 %6976, i64 %6969, i64 %6971
  store i64 %6979, i64* %6978, align 8
  store %struct.Memory* %loadMem_47eaa5, %struct.Memory** %MEMORY
  %loadBr_47eaa5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eaa5 = icmp eq i8 %loadBr_47eaa5, 1
  br i1 %cmpBr_47eaa5, label %block_.L_47eab9, label %block_47eaab

block_47eaab:                                     ; preds = %block_47ea86
  %loadMem_47eaab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 33
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %6982 to i64*
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 11
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %RDI.i303 = bitcast %union.anon* %6985 to i64*
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 15
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %6988 to i64*
  %6989 = load i64, i64* %RBP.i304
  %6990 = sub i64 %6989, 8
  %6991 = load i64, i64* %PC.i302
  %6992 = add i64 %6991, 3
  store i64 %6992, i64* %PC.i302
  %6993 = inttoptr i64 %6990 to i32*
  %6994 = load i32, i32* %6993
  %6995 = zext i32 %6994 to i64
  store i64 %6995, i64* %RDI.i303, align 8
  store %struct.Memory* %loadMem_47eaab, %struct.Memory** %MEMORY
  %loadMem_47eaae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 33
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 9
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %RSI.i300 = bitcast %union.anon* %7001 to i64*
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 15
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %7004 to i64*
  %7005 = load i64, i64* %RBP.i301
  %7006 = sub i64 %7005, 700
  %7007 = load i64, i64* %PC.i299
  %7008 = add i64 %7007, 6
  store i64 %7008, i64* %PC.i299
  %7009 = inttoptr i64 %7006 to i32*
  %7010 = load i32, i32* %7009
  %7011 = zext i32 %7010 to i64
  store i64 %7011, i64* %RSI.i300, align 8
  store %struct.Memory* %loadMem_47eaae, %struct.Memory** %MEMORY
  %loadMem1_47eab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 33
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7014 to i64*
  %7015 = load i64, i64* %PC.i298
  %7016 = add i64 %7015, -304372
  %7017 = load i64, i64* %PC.i298
  %7018 = add i64 %7017, 5
  %7019 = load i64, i64* %PC.i298
  %7020 = add i64 %7019, 5
  store i64 %7020, i64* %PC.i298
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7022 = load i64, i64* %7021, align 8
  %7023 = add i64 %7022, -8
  %7024 = inttoptr i64 %7023 to i64*
  store i64 %7018, i64* %7024
  store i64 %7023, i64* %7021, align 8
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7016, i64* %7025, align 8
  store %struct.Memory* %loadMem1_47eab4, %struct.Memory** %MEMORY
  %loadMem2_47eab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eab4 = load i64, i64* %3
  %call2_47eab4 = call %struct.Memory* @sub_4345c0.add_strategical_defense_move(%struct.State* %0, i64 %loadPC_47eab4, %struct.Memory* %loadMem2_47eab4)
  store %struct.Memory* %call2_47eab4, %struct.Memory** %MEMORY
  br label %block_.L_47eab9

block_.L_47eab9:                                  ; preds = %block_47eaab, %block_47ea86, %block_47ea1e
  %loadMem_47eab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7027 = getelementptr inbounds %struct.GPR, %struct.GPR* %7026, i32 0, i32 33
  %7028 = getelementptr inbounds %struct.Reg, %struct.Reg* %7027, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %7028 to i64*
  %7029 = load i64, i64* %PC.i297
  %7030 = add i64 %7029, 5
  %7031 = load i64, i64* %PC.i297
  %7032 = add i64 %7031, 5
  store i64 %7032, i64* %PC.i297
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7030, i64* %7033, align 8
  store %struct.Memory* %loadMem_47eab9, %struct.Memory** %MEMORY
  br label %block_.L_47eabe

block_.L_47eabe:                                  ; preds = %block_.L_47eab9
  %loadMem_47eabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 33
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %7036 to i64*
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 1
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %7039 to i64*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7041 = getelementptr inbounds %struct.GPR, %struct.GPR* %7040, i32 0, i32 15
  %7042 = getelementptr inbounds %struct.Reg, %struct.Reg* %7041, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %7042 to i64*
  %7043 = load i64, i64* %RBP.i296
  %7044 = sub i64 %7043, 16
  %7045 = load i64, i64* %PC.i294
  %7046 = add i64 %7045, 3
  store i64 %7046, i64* %PC.i294
  %7047 = inttoptr i64 %7044 to i32*
  %7048 = load i32, i32* %7047
  %7049 = zext i32 %7048 to i64
  store i64 %7049, i64* %RAX.i295, align 8
  store %struct.Memory* %loadMem_47eabe, %struct.Memory** %MEMORY
  %loadMem_47eac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7051 = getelementptr inbounds %struct.GPR, %struct.GPR* %7050, i32 0, i32 33
  %7052 = getelementptr inbounds %struct.Reg, %struct.Reg* %7051, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %7052 to i64*
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7054 = getelementptr inbounds %struct.GPR, %struct.GPR* %7053, i32 0, i32 1
  %7055 = getelementptr inbounds %struct.Reg, %struct.Reg* %7054, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %7055 to i64*
  %7056 = load i64, i64* %RAX.i293
  %7057 = load i64, i64* %PC.i292
  %7058 = add i64 %7057, 3
  store i64 %7058, i64* %PC.i292
  %7059 = trunc i64 %7056 to i32
  %7060 = add i32 1, %7059
  %7061 = zext i32 %7060 to i64
  store i64 %7061, i64* %RAX.i293, align 8
  %7062 = icmp ult i32 %7060, %7059
  %7063 = icmp ult i32 %7060, 1
  %7064 = or i1 %7062, %7063
  %7065 = zext i1 %7064 to i8
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7065, i8* %7066, align 1
  %7067 = and i32 %7060, 255
  %7068 = call i32 @llvm.ctpop.i32(i32 %7067)
  %7069 = trunc i32 %7068 to i8
  %7070 = and i8 %7069, 1
  %7071 = xor i8 %7070, 1
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7071, i8* %7072, align 1
  %7073 = xor i64 1, %7056
  %7074 = trunc i64 %7073 to i32
  %7075 = xor i32 %7074, %7060
  %7076 = lshr i32 %7075, 4
  %7077 = trunc i32 %7076 to i8
  %7078 = and i8 %7077, 1
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7078, i8* %7079, align 1
  %7080 = icmp eq i32 %7060, 0
  %7081 = zext i1 %7080 to i8
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7081, i8* %7082, align 1
  %7083 = lshr i32 %7060, 31
  %7084 = trunc i32 %7083 to i8
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7084, i8* %7085, align 1
  %7086 = lshr i32 %7059, 31
  %7087 = xor i32 %7083, %7086
  %7088 = add i32 %7087, %7083
  %7089 = icmp eq i32 %7088, 2
  %7090 = zext i1 %7089 to i8
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7090, i8* %7091, align 1
  store %struct.Memory* %loadMem_47eac1, %struct.Memory** %MEMORY
  %loadMem_47eac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 1
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %EAX.i290 = bitcast %union.anon* %7097 to i32*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 15
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %7100 to i64*
  %7101 = load i64, i64* %RBP.i291
  %7102 = sub i64 %7101, 16
  %7103 = load i32, i32* %EAX.i290
  %7104 = zext i32 %7103 to i64
  %7105 = load i64, i64* %PC.i289
  %7106 = add i64 %7105, 3
  store i64 %7106, i64* %PC.i289
  %7107 = inttoptr i64 %7102 to i32*
  store i32 %7103, i32* %7107
  store %struct.Memory* %loadMem_47eac4, %struct.Memory** %MEMORY
  %loadMem_47eac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7109 = getelementptr inbounds %struct.GPR, %struct.GPR* %7108, i32 0, i32 33
  %7110 = getelementptr inbounds %struct.Reg, %struct.Reg* %7109, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %7110 to i64*
  %7111 = load i64, i64* %PC.i288
  %7112 = add i64 %7111, -221
  %7113 = load i64, i64* %PC.i288
  %7114 = add i64 %7113, 5
  store i64 %7114, i64* %PC.i288
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7112, i64* %7115, align 8
  store %struct.Memory* %loadMem_47eac7, %struct.Memory** %MEMORY
  br label %block_.L_47e9ea

block_.L_47eacc:                                  ; preds = %block_.L_47e9ea
  %loadMem_47eacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7117 = getelementptr inbounds %struct.GPR, %struct.GPR* %7116, i32 0, i32 33
  %7118 = getelementptr inbounds %struct.Reg, %struct.Reg* %7117, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7118 to i64*
  %7119 = load i64, i64* %PC.i287
  %7120 = add i64 %7119, 611
  %7121 = load i64, i64* %PC.i287
  %7122 = add i64 %7121, 5
  store i64 %7122, i64* %PC.i287
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7120, i64* %7123, align 8
  store %struct.Memory* %loadMem_47eacc, %struct.Memory** %MEMORY
  br label %block_.L_47ed2f

block_.L_47ead1:                                  ; preds = %block_.L_47e9aa
  %loadMem_47ead1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7126 to i64*
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 1
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %7129 to i64*
  %7130 = load i64, i64* %PC.i285
  %7131 = add i64 %7130, 10
  store i64 %7131, i64* %PC.i285
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_47ead1, %struct.Memory** %MEMORY
  %loadMem_47eadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7133 = getelementptr inbounds %struct.GPR, %struct.GPR* %7132, i32 0, i32 33
  %7134 = getelementptr inbounds %struct.Reg, %struct.Reg* %7133, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %7134 to i64*
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 5
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %RCX.i283 = bitcast %union.anon* %7137 to i64*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 15
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %7140 to i64*
  %7141 = load i64, i64* %RBP.i284
  %7142 = sub i64 %7141, 28
  %7143 = load i64, i64* %PC.i282
  %7144 = add i64 %7143, 4
  store i64 %7144, i64* %PC.i282
  %7145 = inttoptr i64 %7142 to i32*
  %7146 = load i32, i32* %7145
  %7147 = sext i32 %7146 to i64
  store i64 %7147, i64* %RCX.i283, align 8
  store %struct.Memory* %loadMem_47eadb, %struct.Memory** %MEMORY
  %loadMem_47eadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7149 = getelementptr inbounds %struct.GPR, %struct.GPR* %7148, i32 0, i32 33
  %7150 = getelementptr inbounds %struct.Reg, %struct.Reg* %7149, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %7150 to i64*
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7152 = getelementptr inbounds %struct.GPR, %struct.GPR* %7151, i32 0, i32 5
  %7153 = getelementptr inbounds %struct.Reg, %struct.Reg* %7152, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %7153 to i64*
  %7154 = load i64, i64* %RCX.i281
  %7155 = load i64, i64* %PC.i280
  %7156 = add i64 %7155, 4
  store i64 %7156, i64* %PC.i280
  %7157 = sext i64 %7154 to i128
  %7158 = and i128 %7157, -18446744073709551616
  %7159 = zext i64 %7154 to i128
  %7160 = or i128 %7158, %7159
  %7161 = mul i128 12, %7160
  %7162 = trunc i128 %7161 to i64
  store i64 %7162, i64* %RCX.i281, align 8
  %7163 = sext i64 %7162 to i128
  %7164 = icmp ne i128 %7163, %7161
  %7165 = zext i1 %7164 to i8
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7165, i8* %7166, align 1
  %7167 = trunc i128 %7161 to i32
  %7168 = and i32 %7167, 255
  %7169 = call i32 @llvm.ctpop.i32(i32 %7168)
  %7170 = trunc i32 %7169 to i8
  %7171 = and i8 %7170, 1
  %7172 = xor i8 %7171, 1
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7172, i8* %7173, align 1
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7174, align 1
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7175, align 1
  %7176 = lshr i64 %7162, 63
  %7177 = trunc i64 %7176 to i8
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7177, i8* %7178, align 1
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7165, i8* %7179, align 1
  store %struct.Memory* %loadMem_47eadf, %struct.Memory** %MEMORY
  %loadMem_47eae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 1
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %7185 to i64*
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 5
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %RCX.i279 = bitcast %union.anon* %7188 to i64*
  %7189 = load i64, i64* %RAX.i278
  %7190 = load i64, i64* %RCX.i279
  %7191 = load i64, i64* %PC.i277
  %7192 = add i64 %7191, 3
  store i64 %7192, i64* %PC.i277
  %7193 = add i64 %7190, %7189
  store i64 %7193, i64* %RAX.i278, align 8
  %7194 = icmp ult i64 %7193, %7189
  %7195 = icmp ult i64 %7193, %7190
  %7196 = or i1 %7194, %7195
  %7197 = zext i1 %7196 to i8
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7197, i8* %7198, align 1
  %7199 = trunc i64 %7193 to i32
  %7200 = and i32 %7199, 255
  %7201 = call i32 @llvm.ctpop.i32(i32 %7200)
  %7202 = trunc i32 %7201 to i8
  %7203 = and i8 %7202, 1
  %7204 = xor i8 %7203, 1
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7204, i8* %7205, align 1
  %7206 = xor i64 %7190, %7189
  %7207 = xor i64 %7206, %7193
  %7208 = lshr i64 %7207, 4
  %7209 = trunc i64 %7208 to i8
  %7210 = and i8 %7209, 1
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7210, i8* %7211, align 1
  %7212 = icmp eq i64 %7193, 0
  %7213 = zext i1 %7212 to i8
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7213, i8* %7214, align 1
  %7215 = lshr i64 %7193, 63
  %7216 = trunc i64 %7215 to i8
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7216, i8* %7217, align 1
  %7218 = lshr i64 %7189, 63
  %7219 = lshr i64 %7190, 63
  %7220 = xor i64 %7215, %7218
  %7221 = xor i64 %7215, %7219
  %7222 = add i64 %7220, %7221
  %7223 = icmp eq i64 %7222, 2
  %7224 = zext i1 %7223 to i8
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7224, i8* %7225, align 1
  store %struct.Memory* %loadMem_47eae3, %struct.Memory** %MEMORY
  %loadMem_47eae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 33
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %7228 to i64*
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 1
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %RAX.i276 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %RAX.i276
  %7233 = load i64, i64* %PC.i275
  %7234 = add i64 %7233, 3
  store i64 %7234, i64* %PC.i275
  %7235 = inttoptr i64 %7232 to i32*
  %7236 = load i32, i32* %7235
  %7237 = sub i32 %7236, 14
  %7238 = icmp ult i32 %7236, 14
  %7239 = zext i1 %7238 to i8
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7239, i8* %7240, align 1
  %7241 = and i32 %7237, 255
  %7242 = call i32 @llvm.ctpop.i32(i32 %7241)
  %7243 = trunc i32 %7242 to i8
  %7244 = and i8 %7243, 1
  %7245 = xor i8 %7244, 1
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7245, i8* %7246, align 1
  %7247 = xor i32 %7236, 14
  %7248 = xor i32 %7247, %7237
  %7249 = lshr i32 %7248, 4
  %7250 = trunc i32 %7249 to i8
  %7251 = and i8 %7250, 1
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7251, i8* %7252, align 1
  %7253 = icmp eq i32 %7237, 0
  %7254 = zext i1 %7253 to i8
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7254, i8* %7255, align 1
  %7256 = lshr i32 %7237, 31
  %7257 = trunc i32 %7256 to i8
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7257, i8* %7258, align 1
  %7259 = lshr i32 %7236, 31
  %7260 = xor i32 %7256, %7259
  %7261 = add i32 %7260, %7259
  %7262 = icmp eq i32 %7261, 2
  %7263 = zext i1 %7262 to i8
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7263, i8* %7264, align 1
  store %struct.Memory* %loadMem_47eae6, %struct.Memory** %MEMORY
  %loadMem_47eae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %7267 to i64*
  %7268 = load i64, i64* %PC.i274
  %7269 = add i64 %7268, 577
  %7270 = load i64, i64* %PC.i274
  %7271 = add i64 %7270, 6
  %7272 = load i64, i64* %PC.i274
  %7273 = add i64 %7272, 6
  store i64 %7273, i64* %PC.i274
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7275 = load i8, i8* %7274, align 1
  %7276 = icmp eq i8 %7275, 0
  %7277 = zext i1 %7276 to i8
  store i8 %7277, i8* %BRANCH_TAKEN, align 1
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7279 = select i1 %7276, i64 %7269, i64 %7271
  store i64 %7279, i64* %7278, align 8
  store %struct.Memory* %loadMem_47eae9, %struct.Memory** %MEMORY
  %loadBr_47eae9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eae9 = icmp eq i8 %loadBr_47eae9, 1
  br i1 %cmpBr_47eae9, label %block_.L_47ed2a, label %block_47eaef

block_47eaef:                                     ; preds = %block_.L_47ead1
  %loadMem_47eaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 33
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %7282 to i64*
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7284 = getelementptr inbounds %struct.GPR, %struct.GPR* %7283, i32 0, i32 1
  %7285 = getelementptr inbounds %struct.Reg, %struct.Reg* %7284, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %7285 to i64*
  %7286 = load i64, i64* %PC.i272
  %7287 = add i64 %7286, 5
  store i64 %7287, i64* %PC.i272
  store i64 3, i64* %RAX.i273, align 8
  store %struct.Memory* %loadMem_47eaef, %struct.Memory** %MEMORY
  %loadMem_47eaf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7289 = getelementptr inbounds %struct.GPR, %struct.GPR* %7288, i32 0, i32 33
  %7290 = getelementptr inbounds %struct.Reg, %struct.Reg* %7289, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7290 to i64*
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7292 = getelementptr inbounds %struct.GPR, %struct.GPR* %7291, i32 0, i32 11
  %7293 = getelementptr inbounds %struct.Reg, %struct.Reg* %7292, i32 0, i32 0
  %RDI.i270 = bitcast %union.anon* %7293 to i64*
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7295 = getelementptr inbounds %struct.GPR, %struct.GPR* %7294, i32 0, i32 15
  %7296 = getelementptr inbounds %struct.Reg, %struct.Reg* %7295, i32 0, i32 0
  %RBP.i271 = bitcast %union.anon* %7296 to i64*
  %7297 = load i64, i64* %RBP.i271
  %7298 = sub i64 %7297, 8
  %7299 = load i64, i64* %PC.i269
  %7300 = add i64 %7299, 3
  store i64 %7300, i64* %PC.i269
  %7301 = inttoptr i64 %7298 to i32*
  %7302 = load i32, i32* %7301
  %7303 = zext i32 %7302 to i64
  store i64 %7303, i64* %RDI.i270, align 8
  store %struct.Memory* %loadMem_47eaf4, %struct.Memory** %MEMORY
  %loadMem_47eaf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 33
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %7306 to i64*
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7308 = getelementptr inbounds %struct.GPR, %struct.GPR* %7307, i32 0, i32 1
  %7309 = getelementptr inbounds %struct.Reg, %struct.Reg* %7308, i32 0, i32 0
  %RAX.i267 = bitcast %union.anon* %7309 to i64*
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7311 = getelementptr inbounds %struct.GPR, %struct.GPR* %7310, i32 0, i32 15
  %7312 = getelementptr inbounds %struct.Reg, %struct.Reg* %7311, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %7312 to i64*
  %7313 = load i64, i64* %RAX.i267
  %7314 = load i64, i64* %RBP.i268
  %7315 = sub i64 %7314, 4
  %7316 = load i64, i64* %PC.i266
  %7317 = add i64 %7316, 3
  store i64 %7317, i64* %PC.i266
  %7318 = trunc i64 %7313 to i32
  %7319 = inttoptr i64 %7315 to i32*
  %7320 = load i32, i32* %7319
  %7321 = sub i32 %7318, %7320
  %7322 = zext i32 %7321 to i64
  store i64 %7322, i64* %RAX.i267, align 8
  %7323 = icmp ult i32 %7318, %7320
  %7324 = zext i1 %7323 to i8
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7324, i8* %7325, align 1
  %7326 = and i32 %7321, 255
  %7327 = call i32 @llvm.ctpop.i32(i32 %7326)
  %7328 = trunc i32 %7327 to i8
  %7329 = and i8 %7328, 1
  %7330 = xor i8 %7329, 1
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7330, i8* %7331, align 1
  %7332 = xor i32 %7320, %7318
  %7333 = xor i32 %7332, %7321
  %7334 = lshr i32 %7333, 4
  %7335 = trunc i32 %7334 to i8
  %7336 = and i8 %7335, 1
  %7337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7336, i8* %7337, align 1
  %7338 = icmp eq i32 %7321, 0
  %7339 = zext i1 %7338 to i8
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7339, i8* %7340, align 1
  %7341 = lshr i32 %7321, 31
  %7342 = trunc i32 %7341 to i8
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7342, i8* %7343, align 1
  %7344 = lshr i32 %7318, 31
  %7345 = lshr i32 %7320, 31
  %7346 = xor i32 %7345, %7344
  %7347 = xor i32 %7341, %7344
  %7348 = add i32 %7347, %7346
  %7349 = icmp eq i32 %7348, 2
  %7350 = zext i1 %7349 to i8
  %7351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7350, i8* %7351, align 1
  store %struct.Memory* %loadMem_47eaf7, %struct.Memory** %MEMORY
  %loadMem_47eafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7353 = getelementptr inbounds %struct.GPR, %struct.GPR* %7352, i32 0, i32 33
  %7354 = getelementptr inbounds %struct.Reg, %struct.Reg* %7353, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7354 to i64*
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 1
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %EAX.i264 = bitcast %union.anon* %7357 to i32*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 9
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RSI.i265 = bitcast %union.anon* %7360 to i64*
  %7361 = load i32, i32* %EAX.i264
  %7362 = zext i32 %7361 to i64
  %7363 = load i64, i64* %PC.i263
  %7364 = add i64 %7363, 2
  store i64 %7364, i64* %PC.i263
  %7365 = and i64 %7362, 4294967295
  store i64 %7365, i64* %RSI.i265, align 8
  store %struct.Memory* %loadMem_47eafa, %struct.Memory** %MEMORY
  %loadMem1_47eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 33
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %7368 to i64*
  %7369 = load i64, i64* %PC.i262
  %7370 = add i64 %7369, -30988
  %7371 = load i64, i64* %PC.i262
  %7372 = add i64 %7371, 5
  %7373 = load i64, i64* %PC.i262
  %7374 = add i64 %7373, 5
  store i64 %7374, i64* %PC.i262
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7376 = load i64, i64* %7375, align 8
  %7377 = add i64 %7376, -8
  %7378 = inttoptr i64 %7377 to i64*
  store i64 %7372, i64* %7378
  store i64 %7377, i64* %7375, align 8
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7370, i64* %7379, align 8
  store %struct.Memory* %loadMem1_47eafc, %struct.Memory** %MEMORY
  %loadMem2_47eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eafc = load i64, i64* %3
  %call2_47eafc = call %struct.Memory* @sub_4771f0.cut_possible(%struct.State* %0, i64 %loadPC_47eafc, %struct.Memory* %loadMem2_47eafc)
  store %struct.Memory* %call2_47eafc, %struct.Memory** %MEMORY
  %loadMem_47eb01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 33
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 1
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %EAX.i261 = bitcast %union.anon* %7385 to i32*
  %7386 = load i32, i32* %EAX.i261
  %7387 = zext i32 %7386 to i64
  %7388 = load i64, i64* %PC.i260
  %7389 = add i64 %7388, 3
  store i64 %7389, i64* %PC.i260
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7390, align 1
  %7391 = and i32 %7386, 255
  %7392 = call i32 @llvm.ctpop.i32(i32 %7391)
  %7393 = trunc i32 %7392 to i8
  %7394 = and i8 %7393, 1
  %7395 = xor i8 %7394, 1
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7395, i8* %7396, align 1
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7397, align 1
  %7398 = icmp eq i32 %7386, 0
  %7399 = zext i1 %7398 to i8
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7399, i8* %7400, align 1
  %7401 = lshr i32 %7386, 31
  %7402 = trunc i32 %7401 to i8
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7402, i8* %7403, align 1
  %7404 = lshr i32 %7386, 31
  %7405 = xor i32 %7401, %7404
  %7406 = add i32 %7405, %7404
  %7407 = icmp eq i32 %7406, 2
  %7408 = zext i1 %7407 to i8
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7408, i8* %7409, align 1
  store %struct.Memory* %loadMem_47eb01, %struct.Memory** %MEMORY
  %loadMem_47eb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 33
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7412 to i64*
  %7413 = load i64, i64* %PC.i259
  %7414 = add i64 %7413, 550
  %7415 = load i64, i64* %PC.i259
  %7416 = add i64 %7415, 6
  %7417 = load i64, i64* %PC.i259
  %7418 = add i64 %7417, 6
  store i64 %7418, i64* %PC.i259
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7420 = load i8, i8* %7419, align 1
  store i8 %7420, i8* %BRANCH_TAKEN, align 1
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7422 = icmp ne i8 %7420, 0
  %7423 = select i1 %7422, i64 %7414, i64 %7416
  store i64 %7423, i64* %7421, align 8
  store %struct.Memory* %loadMem_47eb04, %struct.Memory** %MEMORY
  %loadBr_47eb04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eb04 = icmp eq i8 %loadBr_47eb04, 1
  br i1 %cmpBr_47eb04, label %block_.L_47ed2a, label %block_47eb0a

block_47eb0a:                                     ; preds = %block_47eaef
  %loadMem_47eb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 33
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %7426 to i64*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 1
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %7429 to i64*
  %7430 = load i64, i64* %PC.i257
  %7431 = add i64 %7430, 10
  store i64 %7431, i64* %PC.i257
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX.i258, align 8
  store %struct.Memory* %loadMem_47eb0a, %struct.Memory** %MEMORY
  %loadMem_47eb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7433 = getelementptr inbounds %struct.GPR, %struct.GPR* %7432, i32 0, i32 33
  %7434 = getelementptr inbounds %struct.Reg, %struct.Reg* %7433, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %7434 to i64*
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 5
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %7437 to i64*
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7439 = getelementptr inbounds %struct.GPR, %struct.GPR* %7438, i32 0, i32 15
  %7440 = getelementptr inbounds %struct.Reg, %struct.Reg* %7439, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %7440 to i64*
  %7441 = load i64, i64* %RBP.i256
  %7442 = sub i64 %7441, 28
  %7443 = load i64, i64* %PC.i254
  %7444 = add i64 %7443, 4
  store i64 %7444, i64* %PC.i254
  %7445 = inttoptr i64 %7442 to i32*
  %7446 = load i32, i32* %7445
  %7447 = sext i32 %7446 to i64
  store i64 %7447, i64* %RCX.i255, align 8
  store %struct.Memory* %loadMem_47eb14, %struct.Memory** %MEMORY
  %loadMem_47eb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 33
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %7450 to i64*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 5
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %RCX.i253 = bitcast %union.anon* %7453 to i64*
  %7454 = load i64, i64* %RCX.i253
  %7455 = load i64, i64* %PC.i252
  %7456 = add i64 %7455, 4
  store i64 %7456, i64* %PC.i252
  %7457 = sext i64 %7454 to i128
  %7458 = and i128 %7457, -18446744073709551616
  %7459 = zext i64 %7454 to i128
  %7460 = or i128 %7458, %7459
  %7461 = mul i128 12, %7460
  %7462 = trunc i128 %7461 to i64
  store i64 %7462, i64* %RCX.i253, align 8
  %7463 = sext i64 %7462 to i128
  %7464 = icmp ne i128 %7463, %7461
  %7465 = zext i1 %7464 to i8
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7465, i8* %7466, align 1
  %7467 = trunc i128 %7461 to i32
  %7468 = and i32 %7467, 255
  %7469 = call i32 @llvm.ctpop.i32(i32 %7468)
  %7470 = trunc i32 %7469 to i8
  %7471 = and i8 %7470, 1
  %7472 = xor i8 %7471, 1
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7472, i8* %7473, align 1
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7474, align 1
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7475, align 1
  %7476 = lshr i64 %7462, 63
  %7477 = trunc i64 %7476 to i8
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7477, i8* %7478, align 1
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7465, i8* %7479, align 1
  store %struct.Memory* %loadMem_47eb18, %struct.Memory** %MEMORY
  %loadMem_47eb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 33
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %7482 to i64*
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7484 = getelementptr inbounds %struct.GPR, %struct.GPR* %7483, i32 0, i32 1
  %7485 = getelementptr inbounds %struct.Reg, %struct.Reg* %7484, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %7485 to i64*
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7487 = getelementptr inbounds %struct.GPR, %struct.GPR* %7486, i32 0, i32 7
  %7488 = getelementptr inbounds %struct.Reg, %struct.Reg* %7487, i32 0, i32 0
  %RDX.i251 = bitcast %union.anon* %7488 to i64*
  %7489 = load i64, i64* %RAX.i250
  %7490 = load i64, i64* %PC.i249
  %7491 = add i64 %7490, 3
  store i64 %7491, i64* %PC.i249
  store i64 %7489, i64* %RDX.i251, align 8
  store %struct.Memory* %loadMem_47eb1c, %struct.Memory** %MEMORY
  %loadMem_47eb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 33
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 5
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %7497 to i64*
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7499 = getelementptr inbounds %struct.GPR, %struct.GPR* %7498, i32 0, i32 7
  %7500 = getelementptr inbounds %struct.Reg, %struct.Reg* %7499, i32 0, i32 0
  %RDX.i248 = bitcast %union.anon* %7500 to i64*
  %7501 = load i64, i64* %RDX.i248
  %7502 = load i64, i64* %RCX.i247
  %7503 = load i64, i64* %PC.i246
  %7504 = add i64 %7503, 3
  store i64 %7504, i64* %PC.i246
  %7505 = add i64 %7502, %7501
  store i64 %7505, i64* %RDX.i248, align 8
  %7506 = icmp ult i64 %7505, %7501
  %7507 = icmp ult i64 %7505, %7502
  %7508 = or i1 %7506, %7507
  %7509 = zext i1 %7508 to i8
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7509, i8* %7510, align 1
  %7511 = trunc i64 %7505 to i32
  %7512 = and i32 %7511, 255
  %7513 = call i32 @llvm.ctpop.i32(i32 %7512)
  %7514 = trunc i32 %7513 to i8
  %7515 = and i8 %7514, 1
  %7516 = xor i8 %7515, 1
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7516, i8* %7517, align 1
  %7518 = xor i64 %7502, %7501
  %7519 = xor i64 %7518, %7505
  %7520 = lshr i64 %7519, 4
  %7521 = trunc i64 %7520 to i8
  %7522 = and i8 %7521, 1
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7522, i8* %7523, align 1
  %7524 = icmp eq i64 %7505, 0
  %7525 = zext i1 %7524 to i8
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7525, i8* %7526, align 1
  %7527 = lshr i64 %7505, 63
  %7528 = trunc i64 %7527 to i8
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7528, i8* %7529, align 1
  %7530 = lshr i64 %7501, 63
  %7531 = lshr i64 %7502, 63
  %7532 = xor i64 %7527, %7530
  %7533 = xor i64 %7527, %7531
  %7534 = add i64 %7532, %7533
  %7535 = icmp eq i64 %7534, 2
  %7536 = zext i1 %7535 to i8
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7536, i8* %7537, align 1
  store %struct.Memory* %loadMem_47eb1f, %struct.Memory** %MEMORY
  %loadMem_47eb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 33
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %7540 to i64*
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7542 = getelementptr inbounds %struct.GPR, %struct.GPR* %7541, i32 0, i32 5
  %7543 = getelementptr inbounds %struct.Reg, %struct.Reg* %7542, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %7543 to i64*
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7545 = getelementptr inbounds %struct.GPR, %struct.GPR* %7544, i32 0, i32 7
  %7546 = getelementptr inbounds %struct.Reg, %struct.Reg* %7545, i32 0, i32 0
  %RDX.i245 = bitcast %union.anon* %7546 to i64*
  %7547 = load i64, i64* %RDX.i245
  %7548 = add i64 %7547, 4
  %7549 = load i64, i64* %PC.i243
  %7550 = add i64 %7549, 4
  store i64 %7550, i64* %PC.i243
  %7551 = inttoptr i64 %7548 to i32*
  %7552 = load i32, i32* %7551
  %7553 = sext i32 %7552 to i64
  store i64 %7553, i64* %RCX.i244, align 8
  store %struct.Memory* %loadMem_47eb22, %struct.Memory** %MEMORY
  %loadMem_47eb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 33
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %7556 to i64*
  %7557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7558 = getelementptr inbounds %struct.GPR, %struct.GPR* %7557, i32 0, i32 5
  %7559 = getelementptr inbounds %struct.Reg, %struct.Reg* %7558, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %7559 to i64*
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7561 = getelementptr inbounds %struct.GPR, %struct.GPR* %7560, i32 0, i32 9
  %7562 = getelementptr inbounds %struct.Reg, %struct.Reg* %7561, i32 0, i32 0
  %RSI.i242 = bitcast %union.anon* %7562 to i64*
  %7563 = load i64, i64* %RCX.i241
  %7564 = mul i64 %7563, 4
  %7565 = add i64 %7564, 12099600
  %7566 = load i64, i64* %PC.i240
  %7567 = add i64 %7566, 7
  store i64 %7567, i64* %PC.i240
  %7568 = inttoptr i64 %7565 to i32*
  %7569 = load i32, i32* %7568
  %7570 = zext i32 %7569 to i64
  store i64 %7570, i64* %RSI.i242, align 8
  store %struct.Memory* %loadMem_47eb26, %struct.Memory** %MEMORY
  %loadMem_47eb2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 33
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %7573 to i64*
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7575 = getelementptr inbounds %struct.GPR, %struct.GPR* %7574, i32 0, i32 9
  %7576 = getelementptr inbounds %struct.Reg, %struct.Reg* %7575, i32 0, i32 0
  %ESI.i238 = bitcast %union.anon* %7576 to i32*
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7578 = getelementptr inbounds %struct.GPR, %struct.GPR* %7577, i32 0, i32 15
  %7579 = getelementptr inbounds %struct.Reg, %struct.Reg* %7578, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %7579 to i64*
  %7580 = load i64, i64* %RBP.i239
  %7581 = sub i64 %7580, 704
  %7582 = load i32, i32* %ESI.i238
  %7583 = zext i32 %7582 to i64
  %7584 = load i64, i64* %PC.i237
  %7585 = add i64 %7584, 6
  store i64 %7585, i64* %PC.i237
  %7586 = inttoptr i64 %7581 to i32*
  store i32 %7582, i32* %7586
  store %struct.Memory* %loadMem_47eb2d, %struct.Memory** %MEMORY
  %loadMem_47eb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7588 = getelementptr inbounds %struct.GPR, %struct.GPR* %7587, i32 0, i32 33
  %7589 = getelementptr inbounds %struct.Reg, %struct.Reg* %7588, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %7589 to i64*
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 5
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %RCX.i235 = bitcast %union.anon* %7592 to i64*
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 15
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %7595 to i64*
  %7596 = load i64, i64* %RBP.i236
  %7597 = sub i64 %7596, 28
  %7598 = load i64, i64* %PC.i234
  %7599 = add i64 %7598, 4
  store i64 %7599, i64* %PC.i234
  %7600 = inttoptr i64 %7597 to i32*
  %7601 = load i32, i32* %7600
  %7602 = sext i32 %7601 to i64
  store i64 %7602, i64* %RCX.i235, align 8
  store %struct.Memory* %loadMem_47eb33, %struct.Memory** %MEMORY
  %loadMem_47eb37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7604 = getelementptr inbounds %struct.GPR, %struct.GPR* %7603, i32 0, i32 33
  %7605 = getelementptr inbounds %struct.Reg, %struct.Reg* %7604, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7605 to i64*
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7607 = getelementptr inbounds %struct.GPR, %struct.GPR* %7606, i32 0, i32 5
  %7608 = getelementptr inbounds %struct.Reg, %struct.Reg* %7607, i32 0, i32 0
  %RCX.i233 = bitcast %union.anon* %7608 to i64*
  %7609 = load i64, i64* %RCX.i233
  %7610 = load i64, i64* %PC.i232
  %7611 = add i64 %7610, 4
  store i64 %7611, i64* %PC.i232
  %7612 = sext i64 %7609 to i128
  %7613 = and i128 %7612, -18446744073709551616
  %7614 = zext i64 %7609 to i128
  %7615 = or i128 %7613, %7614
  %7616 = mul i128 12, %7615
  %7617 = trunc i128 %7616 to i64
  store i64 %7617, i64* %RCX.i233, align 8
  %7618 = sext i64 %7617 to i128
  %7619 = icmp ne i128 %7618, %7616
  %7620 = zext i1 %7619 to i8
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7620, i8* %7621, align 1
  %7622 = trunc i128 %7616 to i32
  %7623 = and i32 %7622, 255
  %7624 = call i32 @llvm.ctpop.i32(i32 %7623)
  %7625 = trunc i32 %7624 to i8
  %7626 = and i8 %7625, 1
  %7627 = xor i8 %7626, 1
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7627, i8* %7628, align 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7629, align 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7630, align 1
  %7631 = lshr i64 %7617, 63
  %7632 = trunc i64 %7631 to i8
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7632, i8* %7633, align 1
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7620, i8* %7634, align 1
  store %struct.Memory* %loadMem_47eb37, %struct.Memory** %MEMORY
  %loadMem_47eb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7636 = getelementptr inbounds %struct.GPR, %struct.GPR* %7635, i32 0, i32 33
  %7637 = getelementptr inbounds %struct.Reg, %struct.Reg* %7636, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %7637 to i64*
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7639 = getelementptr inbounds %struct.GPR, %struct.GPR* %7638, i32 0, i32 1
  %7640 = getelementptr inbounds %struct.Reg, %struct.Reg* %7639, i32 0, i32 0
  %RAX.i230 = bitcast %union.anon* %7640 to i64*
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7642 = getelementptr inbounds %struct.GPR, %struct.GPR* %7641, i32 0, i32 5
  %7643 = getelementptr inbounds %struct.Reg, %struct.Reg* %7642, i32 0, i32 0
  %RCX.i231 = bitcast %union.anon* %7643 to i64*
  %7644 = load i64, i64* %RAX.i230
  %7645 = load i64, i64* %RCX.i231
  %7646 = load i64, i64* %PC.i229
  %7647 = add i64 %7646, 3
  store i64 %7647, i64* %PC.i229
  %7648 = add i64 %7645, %7644
  store i64 %7648, i64* %RAX.i230, align 8
  %7649 = icmp ult i64 %7648, %7644
  %7650 = icmp ult i64 %7648, %7645
  %7651 = or i1 %7649, %7650
  %7652 = zext i1 %7651 to i8
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7652, i8* %7653, align 1
  %7654 = trunc i64 %7648 to i32
  %7655 = and i32 %7654, 255
  %7656 = call i32 @llvm.ctpop.i32(i32 %7655)
  %7657 = trunc i32 %7656 to i8
  %7658 = and i8 %7657, 1
  %7659 = xor i8 %7658, 1
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7659, i8* %7660, align 1
  %7661 = xor i64 %7645, %7644
  %7662 = xor i64 %7661, %7648
  %7663 = lshr i64 %7662, 4
  %7664 = trunc i64 %7663 to i8
  %7665 = and i8 %7664, 1
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7665, i8* %7666, align 1
  %7667 = icmp eq i64 %7648, 0
  %7668 = zext i1 %7667 to i8
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7668, i8* %7669, align 1
  %7670 = lshr i64 %7648, 63
  %7671 = trunc i64 %7670 to i8
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7671, i8* %7672, align 1
  %7673 = lshr i64 %7644, 63
  %7674 = lshr i64 %7645, 63
  %7675 = xor i64 %7670, %7673
  %7676 = xor i64 %7670, %7674
  %7677 = add i64 %7675, %7676
  %7678 = icmp eq i64 %7677, 2
  %7679 = zext i1 %7678 to i8
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7679, i8* %7680, align 1
  store %struct.Memory* %loadMem_47eb3b, %struct.Memory** %MEMORY
  %loadMem_47eb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7682 = getelementptr inbounds %struct.GPR, %struct.GPR* %7681, i32 0, i32 33
  %7683 = getelementptr inbounds %struct.Reg, %struct.Reg* %7682, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %7683 to i64*
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 1
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %7686 to i64*
  %7687 = load i64, i64* %RAX.i228
  %7688 = add i64 %7687, 4
  %7689 = load i64, i64* %PC.i227
  %7690 = add i64 %7689, 4
  store i64 %7690, i64* %PC.i227
  %7691 = inttoptr i64 %7688 to i32*
  %7692 = load i32, i32* %7691
  %7693 = sext i32 %7692 to i64
  store i64 %7693, i64* %RAX.i228, align 8
  store %struct.Memory* %loadMem_47eb3e, %struct.Memory** %MEMORY
  %loadMem_47eb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7695 = getelementptr inbounds %struct.GPR, %struct.GPR* %7694, i32 0, i32 33
  %7696 = getelementptr inbounds %struct.Reg, %struct.Reg* %7695, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %7696 to i64*
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 1
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %7699 to i64*
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 9
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %RSI.i226 = bitcast %union.anon* %7702 to i64*
  %7703 = load i64, i64* %RAX.i225
  %7704 = mul i64 %7703, 4
  %7705 = add i64 %7704, 11555248
  %7706 = load i64, i64* %PC.i224
  %7707 = add i64 %7706, 7
  store i64 %7707, i64* %PC.i224
  %7708 = inttoptr i64 %7705 to i32*
  %7709 = load i32, i32* %7708
  %7710 = zext i32 %7709 to i64
  store i64 %7710, i64* %RSI.i226, align 8
  store %struct.Memory* %loadMem_47eb42, %struct.Memory** %MEMORY
  %loadMem_47eb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7712 = getelementptr inbounds %struct.GPR, %struct.GPR* %7711, i32 0, i32 33
  %7713 = getelementptr inbounds %struct.Reg, %struct.Reg* %7712, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %7713 to i64*
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 9
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %7716 to i32*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 15
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %7719 to i64*
  %7720 = load i64, i64* %RBP.i223
  %7721 = sub i64 %7720, 708
  %7722 = load i32, i32* %ESI.i
  %7723 = zext i32 %7722 to i64
  %7724 = load i64, i64* %PC.i222
  %7725 = add i64 %7724, 6
  store i64 %7725, i64* %PC.i222
  %7726 = inttoptr i64 %7721 to i32*
  store i32 %7722, i32* %7726
  store %struct.Memory* %loadMem_47eb49, %struct.Memory** %MEMORY
  %loadMem_47eb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 33
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %7729 to i64*
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 15
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %7732 to i64*
  %7733 = load i64, i64* %RBP.i221
  %7734 = sub i64 %7733, 712
  %7735 = load i64, i64* %PC.i220
  %7736 = add i64 %7735, 10
  store i64 %7736, i64* %PC.i220
  %7737 = inttoptr i64 %7734 to i32*
  store i32 21, i32* %7737
  store %struct.Memory* %loadMem_47eb4f, %struct.Memory** %MEMORY
  br label %block_.L_47eb59

block_.L_47eb59:                                  ; preds = %block_.L_47ed11, %block_47eb0a
  %loadMem_47eb59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 33
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %7740 to i64*
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 15
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %7743 to i64*
  %7744 = load i64, i64* %RBP.i219
  %7745 = sub i64 %7744, 712
  %7746 = load i64, i64* %PC.i218
  %7747 = add i64 %7746, 10
  store i64 %7747, i64* %PC.i218
  %7748 = inttoptr i64 %7745 to i32*
  %7749 = load i32, i32* %7748
  %7750 = sub i32 %7749, 400
  %7751 = icmp ult i32 %7749, 400
  %7752 = zext i1 %7751 to i8
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7752, i8* %7753, align 1
  %7754 = and i32 %7750, 255
  %7755 = call i32 @llvm.ctpop.i32(i32 %7754)
  %7756 = trunc i32 %7755 to i8
  %7757 = and i8 %7756, 1
  %7758 = xor i8 %7757, 1
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7758, i8* %7759, align 1
  %7760 = xor i32 %7749, 400
  %7761 = xor i32 %7760, %7750
  %7762 = lshr i32 %7761, 4
  %7763 = trunc i32 %7762 to i8
  %7764 = and i8 %7763, 1
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7764, i8* %7765, align 1
  %7766 = icmp eq i32 %7750, 0
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7767, i8* %7768, align 1
  %7769 = lshr i32 %7750, 31
  %7770 = trunc i32 %7769 to i8
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7770, i8* %7771, align 1
  %7772 = lshr i32 %7749, 31
  %7773 = xor i32 %7769, %7772
  %7774 = add i32 %7773, %7772
  %7775 = icmp eq i32 %7774, 2
  %7776 = zext i1 %7775 to i8
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7776, i8* %7777, align 1
  store %struct.Memory* %loadMem_47eb59, %struct.Memory** %MEMORY
  %loadMem_47eb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 33
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %7780 to i64*
  %7781 = load i64, i64* %PC.i217
  %7782 = add i64 %7781, 450
  %7783 = load i64, i64* %PC.i217
  %7784 = add i64 %7783, 6
  %7785 = load i64, i64* %PC.i217
  %7786 = add i64 %7785, 6
  store i64 %7786, i64* %PC.i217
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7788 = load i8, i8* %7787, align 1
  %7789 = icmp ne i8 %7788, 0
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7791 = load i8, i8* %7790, align 1
  %7792 = icmp ne i8 %7791, 0
  %7793 = xor i1 %7789, %7792
  %7794 = xor i1 %7793, true
  %7795 = zext i1 %7794 to i8
  store i8 %7795, i8* %BRANCH_TAKEN, align 1
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7797 = select i1 %7793, i64 %7784, i64 %7782
  store i64 %7797, i64* %7796, align 8
  store %struct.Memory* %loadMem_47eb63, %struct.Memory** %MEMORY
  %loadBr_47eb63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eb63 = icmp eq i8 %loadBr_47eb63, 1
  br i1 %cmpBr_47eb63, label %block_.L_47ed25, label %block_47eb69

block_47eb69:                                     ; preds = %block_.L_47eb59
  %loadMem_47eb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 33
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %7800 to i64*
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7802 = getelementptr inbounds %struct.GPR, %struct.GPR* %7801, i32 0, i32 1
  %7803 = getelementptr inbounds %struct.Reg, %struct.Reg* %7802, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %7803 to i64*
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 15
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %7806 to i64*
  %7807 = load i64, i64* %RBP.i216
  %7808 = sub i64 %7807, 712
  %7809 = load i64, i64* %PC.i214
  %7810 = add i64 %7809, 7
  store i64 %7810, i64* %PC.i214
  %7811 = inttoptr i64 %7808 to i32*
  %7812 = load i32, i32* %7811
  %7813 = sext i32 %7812 to i64
  store i64 %7813, i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_47eb69, %struct.Memory** %MEMORY
  %loadMem_47eb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 33
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %7816 to i64*
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 1
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %7819 to i64*
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7821 = getelementptr inbounds %struct.GPR, %struct.GPR* %7820, i32 0, i32 5
  %7822 = getelementptr inbounds %struct.Reg, %struct.Reg* %7821, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %7822 to i64*
  %7823 = load i64, i64* %RAX.i212
  %7824 = add i64 %7823, 12099168
  %7825 = load i64, i64* %PC.i211
  %7826 = add i64 %7825, 8
  store i64 %7826, i64* %PC.i211
  %7827 = inttoptr i64 %7824 to i8*
  %7828 = load i8, i8* %7827
  %7829 = zext i8 %7828 to i64
  store i64 %7829, i64* %RCX.i213, align 8
  store %struct.Memory* %loadMem_47eb70, %struct.Memory** %MEMORY
  %loadMem_47eb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 33
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %7832 to i64*
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 5
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %ECX.i210 = bitcast %union.anon* %7835 to i32*
  %7836 = load i32, i32* %ECX.i210
  %7837 = zext i32 %7836 to i64
  %7838 = load i64, i64* %PC.i209
  %7839 = add i64 %7838, 3
  store i64 %7839, i64* %PC.i209
  %7840 = sub i32 %7836, 3
  %7841 = icmp ult i32 %7836, 3
  %7842 = zext i1 %7841 to i8
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7842, i8* %7843, align 1
  %7844 = and i32 %7840, 255
  %7845 = call i32 @llvm.ctpop.i32(i32 %7844)
  %7846 = trunc i32 %7845 to i8
  %7847 = and i8 %7846, 1
  %7848 = xor i8 %7847, 1
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7848, i8* %7849, align 1
  %7850 = xor i64 3, %7837
  %7851 = trunc i64 %7850 to i32
  %7852 = xor i32 %7851, %7840
  %7853 = lshr i32 %7852, 4
  %7854 = trunc i32 %7853 to i8
  %7855 = and i8 %7854, 1
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7855, i8* %7856, align 1
  %7857 = icmp eq i32 %7840, 0
  %7858 = zext i1 %7857 to i8
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7858, i8* %7859, align 1
  %7860 = lshr i32 %7840, 31
  %7861 = trunc i32 %7860 to i8
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7861, i8* %7862, align 1
  %7863 = lshr i32 %7836, 31
  %7864 = xor i32 %7860, %7863
  %7865 = add i32 %7864, %7863
  %7866 = icmp eq i32 %7865, 2
  %7867 = zext i1 %7866 to i8
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7867, i8* %7868, align 1
  store %struct.Memory* %loadMem_47eb78, %struct.Memory** %MEMORY
  %loadMem_47eb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 33
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %7871 to i64*
  %7872 = load i64, i64* %PC.i208
  %7873 = add i64 %7872, 401
  %7874 = load i64, i64* %PC.i208
  %7875 = add i64 %7874, 6
  %7876 = load i64, i64* %PC.i208
  %7877 = add i64 %7876, 6
  store i64 %7877, i64* %PC.i208
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7879 = load i8, i8* %7878, align 1
  store i8 %7879, i8* %BRANCH_TAKEN, align 1
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7881 = icmp ne i8 %7879, 0
  %7882 = select i1 %7881, i64 %7873, i64 %7875
  store i64 %7882, i64* %7880, align 8
  store %struct.Memory* %loadMem_47eb7b, %struct.Memory** %MEMORY
  %loadBr_47eb7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eb7b = icmp eq i8 %loadBr_47eb7b, 1
  br i1 %cmpBr_47eb7b, label %block_.L_47ed0c, label %block_47eb81

block_47eb81:                                     ; preds = %block_47eb69
  %loadMem_47eb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7884 = getelementptr inbounds %struct.GPR, %struct.GPR* %7883, i32 0, i32 33
  %7885 = getelementptr inbounds %struct.Reg, %struct.Reg* %7884, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %7885 to i64*
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 1
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %7888 to i64*
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7890 = getelementptr inbounds %struct.GPR, %struct.GPR* %7889, i32 0, i32 15
  %7891 = getelementptr inbounds %struct.Reg, %struct.Reg* %7890, i32 0, i32 0
  %RBP.i207 = bitcast %union.anon* %7891 to i64*
  %7892 = load i64, i64* %RBP.i207
  %7893 = sub i64 %7892, 712
  %7894 = load i64, i64* %PC.i205
  %7895 = add i64 %7894, 7
  store i64 %7895, i64* %PC.i205
  %7896 = inttoptr i64 %7893 to i32*
  %7897 = load i32, i32* %7896
  %7898 = sext i32 %7897 to i64
  store i64 %7898, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_47eb81, %struct.Memory** %MEMORY
  %loadMem_47eb88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 33
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 1
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %RAX.i203 = bitcast %union.anon* %7904 to i64*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 5
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %7907 to i64*
  %7908 = load i64, i64* %RAX.i203
  %7909 = add i64 %7908, 12099168
  %7910 = load i64, i64* %PC.i202
  %7911 = add i64 %7910, 8
  store i64 %7911, i64* %PC.i202
  %7912 = inttoptr i64 %7909 to i8*
  %7913 = load i8, i8* %7912
  %7914 = zext i8 %7913 to i64
  store i64 %7914, i64* %RCX.i204, align 8
  store %struct.Memory* %loadMem_47eb88, %struct.Memory** %MEMORY
  %loadMem_47eb90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 5
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %ECX.i201 = bitcast %union.anon* %7920 to i32*
  %7921 = load i32, i32* %ECX.i201
  %7922 = zext i32 %7921 to i64
  %7923 = load i64, i64* %PC.i200
  %7924 = add i64 %7923, 3
  store i64 %7924, i64* %PC.i200
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7925, align 1
  %7926 = and i32 %7921, 255
  %7927 = call i32 @llvm.ctpop.i32(i32 %7926)
  %7928 = trunc i32 %7927 to i8
  %7929 = and i8 %7928, 1
  %7930 = xor i8 %7929, 1
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7930, i8* %7931, align 1
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7932, align 1
  %7933 = icmp eq i32 %7921, 0
  %7934 = zext i1 %7933 to i8
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7934, i8* %7935, align 1
  %7936 = lshr i32 %7921, 31
  %7937 = trunc i32 %7936 to i8
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7937, i8* %7938, align 1
  %7939 = lshr i32 %7921, 31
  %7940 = xor i32 %7936, %7939
  %7941 = add i32 %7940, %7939
  %7942 = icmp eq i32 %7941, 2
  %7943 = zext i1 %7942 to i8
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7943, i8* %7944, align 1
  store %struct.Memory* %loadMem_47eb90, %struct.Memory** %MEMORY
  %loadMem_47eb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 33
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %7947 to i64*
  %7948 = load i64, i64* %PC.i199
  %7949 = add i64 %7948, 377
  %7950 = load i64, i64* %PC.i199
  %7951 = add i64 %7950, 6
  %7952 = load i64, i64* %PC.i199
  %7953 = add i64 %7952, 6
  store i64 %7953, i64* %PC.i199
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7955 = load i8, i8* %7954, align 1
  %7956 = icmp eq i8 %7955, 0
  %7957 = zext i1 %7956 to i8
  store i8 %7957, i8* %BRANCH_TAKEN, align 1
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7959 = select i1 %7956, i64 %7949, i64 %7951
  store i64 %7959, i64* %7958, align 8
  store %struct.Memory* %loadMem_47eb93, %struct.Memory** %MEMORY
  %loadBr_47eb93 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47eb93 = icmp eq i8 %loadBr_47eb93, 1
  br i1 %cmpBr_47eb93, label %block_.L_47ed0c, label %block_47eb99

block_47eb99:                                     ; preds = %block_47eb81
  %loadMem_47eb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 33
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %7962 to i64*
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 1
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %7965 to i64*
  %7966 = load i64, i64* %PC.i197
  %7967 = add i64 %7966, 5
  store i64 %7967, i64* %PC.i197
  store i64 3, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_47eb99, %struct.Memory** %MEMORY
  %loadMem_47eb9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 33
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %7970 to i64*
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7972 = getelementptr inbounds %struct.GPR, %struct.GPR* %7971, i32 0, i32 11
  %7973 = getelementptr inbounds %struct.Reg, %struct.Reg* %7972, i32 0, i32 0
  %RDI.i195 = bitcast %union.anon* %7973 to i64*
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 15
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %7976 to i64*
  %7977 = load i64, i64* %RBP.i196
  %7978 = sub i64 %7977, 712
  %7979 = load i64, i64* %PC.i194
  %7980 = add i64 %7979, 6
  store i64 %7980, i64* %PC.i194
  %7981 = inttoptr i64 %7978 to i32*
  %7982 = load i32, i32* %7981
  %7983 = zext i32 %7982 to i64
  store i64 %7983, i64* %RDI.i195, align 8
  store %struct.Memory* %loadMem_47eb9e, %struct.Memory** %MEMORY
  %loadMem_47eba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 33
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %7986 to i64*
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7988 = getelementptr inbounds %struct.GPR, %struct.GPR* %7987, i32 0, i32 1
  %7989 = getelementptr inbounds %struct.Reg, %struct.Reg* %7988, i32 0, i32 0
  %RAX.i192 = bitcast %union.anon* %7989 to i64*
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7991 = getelementptr inbounds %struct.GPR, %struct.GPR* %7990, i32 0, i32 15
  %7992 = getelementptr inbounds %struct.Reg, %struct.Reg* %7991, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %7992 to i64*
  %7993 = load i64, i64* %RAX.i192
  %7994 = load i64, i64* %RBP.i193
  %7995 = sub i64 %7994, 4
  %7996 = load i64, i64* %PC.i191
  %7997 = add i64 %7996, 3
  store i64 %7997, i64* %PC.i191
  %7998 = trunc i64 %7993 to i32
  %7999 = inttoptr i64 %7995 to i32*
  %8000 = load i32, i32* %7999
  %8001 = sub i32 %7998, %8000
  %8002 = zext i32 %8001 to i64
  store i64 %8002, i64* %RAX.i192, align 8
  %8003 = icmp ult i32 %7998, %8000
  %8004 = zext i1 %8003 to i8
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8004, i8* %8005, align 1
  %8006 = and i32 %8001, 255
  %8007 = call i32 @llvm.ctpop.i32(i32 %8006)
  %8008 = trunc i32 %8007 to i8
  %8009 = and i8 %8008, 1
  %8010 = xor i8 %8009, 1
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8010, i8* %8011, align 1
  %8012 = xor i32 %8000, %7998
  %8013 = xor i32 %8012, %8001
  %8014 = lshr i32 %8013, 4
  %8015 = trunc i32 %8014 to i8
  %8016 = and i8 %8015, 1
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8016, i8* %8017, align 1
  %8018 = icmp eq i32 %8001, 0
  %8019 = zext i1 %8018 to i8
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8019, i8* %8020, align 1
  %8021 = lshr i32 %8001, 31
  %8022 = trunc i32 %8021 to i8
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8022, i8* %8023, align 1
  %8024 = lshr i32 %7998, 31
  %8025 = lshr i32 %8000, 31
  %8026 = xor i32 %8025, %8024
  %8027 = xor i32 %8021, %8024
  %8028 = add i32 %8027, %8026
  %8029 = icmp eq i32 %8028, 2
  %8030 = zext i1 %8029 to i8
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8030, i8* %8031, align 1
  store %struct.Memory* %loadMem_47eba4, %struct.Memory** %MEMORY
  %loadMem_47eba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 33
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8034 to i64*
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8036 = getelementptr inbounds %struct.GPR, %struct.GPR* %8035, i32 0, i32 1
  %8037 = getelementptr inbounds %struct.Reg, %struct.Reg* %8036, i32 0, i32 0
  %EAX.i189 = bitcast %union.anon* %8037 to i32*
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 9
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %RSI.i190 = bitcast %union.anon* %8040 to i64*
  %8041 = load i32, i32* %EAX.i189
  %8042 = zext i32 %8041 to i64
  %8043 = load i64, i64* %PC.i188
  %8044 = add i64 %8043, 2
  store i64 %8044, i64* %PC.i188
  %8045 = and i64 %8042, 4294967295
  store i64 %8045, i64* %RSI.i190, align 8
  store %struct.Memory* %loadMem_47eba7, %struct.Memory** %MEMORY
  %loadMem1_47eba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 33
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %8048 to i64*
  %8049 = load i64, i64* %PC.i187
  %8050 = add i64 %8049, -31161
  %8051 = load i64, i64* %PC.i187
  %8052 = add i64 %8051, 5
  %8053 = load i64, i64* %PC.i187
  %8054 = add i64 %8053, 5
  store i64 %8054, i64* %PC.i187
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8056 = load i64, i64* %8055, align 8
  %8057 = add i64 %8056, -8
  %8058 = inttoptr i64 %8057 to i64*
  store i64 %8052, i64* %8058
  store i64 %8057, i64* %8055, align 8
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8050, i64* %8059, align 8
  store %struct.Memory* %loadMem1_47eba9, %struct.Memory** %MEMORY
  %loadMem2_47eba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47eba9 = load i64, i64* %3
  %call2_47eba9 = call %struct.Memory* @sub_4771f0.cut_possible(%struct.State* %0, i64 %loadPC_47eba9, %struct.Memory* %loadMem2_47eba9)
  store %struct.Memory* %call2_47eba9, %struct.Memory** %MEMORY
  %loadMem_47ebae = load %struct.Memory*, %struct.Memory** %MEMORY
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 33
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %8062 to i64*
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 1
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %EAX.i186 = bitcast %union.anon* %8065 to i32*
  %8066 = load i32, i32* %EAX.i186
  %8067 = zext i32 %8066 to i64
  %8068 = load i64, i64* %PC.i185
  %8069 = add i64 %8068, 3
  store i64 %8069, i64* %PC.i185
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8070, align 1
  %8071 = and i32 %8066, 255
  %8072 = call i32 @llvm.ctpop.i32(i32 %8071)
  %8073 = trunc i32 %8072 to i8
  %8074 = and i8 %8073, 1
  %8075 = xor i8 %8074, 1
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8075, i8* %8076, align 1
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8077, align 1
  %8078 = icmp eq i32 %8066, 0
  %8079 = zext i1 %8078 to i8
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8079, i8* %8080, align 1
  %8081 = lshr i32 %8066, 31
  %8082 = trunc i32 %8081 to i8
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8082, i8* %8083, align 1
  %8084 = lshr i32 %8066, 31
  %8085 = xor i32 %8081, %8084
  %8086 = add i32 %8085, %8084
  %8087 = icmp eq i32 %8086, 2
  %8088 = zext i1 %8087 to i8
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8088, i8* %8089, align 1
  store %struct.Memory* %loadMem_47ebae, %struct.Memory** %MEMORY
  %loadMem_47ebb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 33
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %8092 to i64*
  %8093 = load i64, i64* %PC.i184
  %8094 = add i64 %8093, 347
  %8095 = load i64, i64* %PC.i184
  %8096 = add i64 %8095, 6
  %8097 = load i64, i64* %PC.i184
  %8098 = add i64 %8097, 6
  store i64 %8098, i64* %PC.i184
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8100 = load i8, i8* %8099, align 1
  store i8 %8100, i8* %BRANCH_TAKEN, align 1
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8102 = icmp ne i8 %8100, 0
  %8103 = select i1 %8102, i64 %8094, i64 %8096
  store i64 %8103, i64* %8101, align 8
  store %struct.Memory* %loadMem_47ebb1, %struct.Memory** %MEMORY
  %loadBr_47ebb1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ebb1 = icmp eq i8 %loadBr_47ebb1, 1
  br i1 %cmpBr_47ebb1, label %block_.L_47ed0c, label %block_47ebb7

block_47ebb7:                                     ; preds = %block_47eb99
  %loadMem_47ebb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 33
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %8106 to i64*
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 11
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %RDI.i182 = bitcast %union.anon* %8109 to i64*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 15
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %8112 to i64*
  %8113 = load i64, i64* %RBP.i183
  %8114 = sub i64 %8113, 8
  %8115 = load i64, i64* %PC.i181
  %8116 = add i64 %8115, 3
  store i64 %8116, i64* %PC.i181
  %8117 = inttoptr i64 %8114 to i32*
  %8118 = load i32, i32* %8117
  %8119 = zext i32 %8118 to i64
  store i64 %8119, i64* %RDI.i182, align 8
  store %struct.Memory* %loadMem_47ebb7, %struct.Memory** %MEMORY
  %loadMem_47ebba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8121 = getelementptr inbounds %struct.GPR, %struct.GPR* %8120, i32 0, i32 33
  %8122 = getelementptr inbounds %struct.Reg, %struct.Reg* %8121, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %8122 to i64*
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8124 = getelementptr inbounds %struct.GPR, %struct.GPR* %8123, i32 0, i32 9
  %8125 = getelementptr inbounds %struct.Reg, %struct.Reg* %8124, i32 0, i32 0
  %RSI.i179 = bitcast %union.anon* %8125 to i64*
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 15
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %8128 to i64*
  %8129 = load i64, i64* %RBP.i180
  %8130 = sub i64 %8129, 712
  %8131 = load i64, i64* %PC.i178
  %8132 = add i64 %8131, 6
  store i64 %8132, i64* %PC.i178
  %8133 = inttoptr i64 %8130 to i32*
  %8134 = load i32, i32* %8133
  %8135 = zext i32 %8134 to i64
  store i64 %8135, i64* %RSI.i179, align 8
  store %struct.Memory* %loadMem_47ebba, %struct.Memory** %MEMORY
  %loadMem1_47ebc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8137 = getelementptr inbounds %struct.GPR, %struct.GPR* %8136, i32 0, i32 33
  %8138 = getelementptr inbounds %struct.Reg, %struct.Reg* %8137, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8138 to i64*
  %8139 = load i64, i64* %PC.i177
  %8140 = add i64 %8139, 29952
  %8141 = load i64, i64* %PC.i177
  %8142 = add i64 %8141, 5
  %8143 = load i64, i64* %PC.i177
  %8144 = add i64 %8143, 5
  store i64 %8144, i64* %PC.i177
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8146 = load i64, i64* %8145, align 8
  %8147 = add i64 %8146, -8
  %8148 = inttoptr i64 %8147 to i64*
  store i64 %8142, i64* %8148
  store i64 %8147, i64* %8145, align 8
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8140, i64* %8149, align 8
  store %struct.Memory* %loadMem1_47ebc0, %struct.Memory** %MEMORY
  %loadMem2_47ebc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ebc0 = load i64, i64* %3
  %call2_47ebc0 = call %struct.Memory* @sub_4860c0.bdist(%struct.State* %0, i64 %loadPC_47ebc0, %struct.Memory* %loadMem2_47ebc0)
  store %struct.Memory* %call2_47ebc0, %struct.Memory** %MEMORY
  %loadMem_47ebc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8151 = getelementptr inbounds %struct.GPR, %struct.GPR* %8150, i32 0, i32 33
  %8152 = getelementptr inbounds %struct.Reg, %struct.Reg* %8151, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8152 to i64*
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8154 = getelementptr inbounds %struct.GPR, %struct.GPR* %8153, i32 0, i32 1
  %8155 = getelementptr inbounds %struct.Reg, %struct.Reg* %8154, i32 0, i32 0
  %EAX.i176 = bitcast %union.anon* %8155 to i32*
  %8156 = load i32, i32* %EAX.i176
  %8157 = zext i32 %8156 to i64
  %8158 = load i64, i64* %PC.i175
  %8159 = add i64 %8158, 3
  store i64 %8159, i64* %PC.i175
  %8160 = sub i32 %8156, 5
  %8161 = icmp ult i32 %8156, 5
  %8162 = zext i1 %8161 to i8
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8162, i8* %8163, align 1
  %8164 = and i32 %8160, 255
  %8165 = call i32 @llvm.ctpop.i32(i32 %8164)
  %8166 = trunc i32 %8165 to i8
  %8167 = and i8 %8166, 1
  %8168 = xor i8 %8167, 1
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8168, i8* %8169, align 1
  %8170 = xor i64 5, %8157
  %8171 = trunc i64 %8170 to i32
  %8172 = xor i32 %8171, %8160
  %8173 = lshr i32 %8172, 4
  %8174 = trunc i32 %8173 to i8
  %8175 = and i8 %8174, 1
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8175, i8* %8176, align 1
  %8177 = icmp eq i32 %8160, 0
  %8178 = zext i1 %8177 to i8
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8178, i8* %8179, align 1
  %8180 = lshr i32 %8160, 31
  %8181 = trunc i32 %8180 to i8
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8181, i8* %8182, align 1
  %8183 = lshr i32 %8156, 31
  %8184 = xor i32 %8180, %8183
  %8185 = add i32 %8184, %8183
  %8186 = icmp eq i32 %8185, 2
  %8187 = zext i1 %8186 to i8
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8187, i8* %8188, align 1
  store %struct.Memory* %loadMem_47ebc5, %struct.Memory** %MEMORY
  %loadMem_47ebc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 33
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %8191 to i64*
  %8192 = load i64, i64* %PC.i174
  %8193 = add i64 %8192, 324
  %8194 = load i64, i64* %PC.i174
  %8195 = add i64 %8194, 6
  %8196 = load i64, i64* %PC.i174
  %8197 = add i64 %8196, 6
  store i64 %8197, i64* %PC.i174
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8199 = load i8, i8* %8198, align 1
  %8200 = icmp eq i8 %8199, 0
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8202 = load i8, i8* %8201, align 1
  %8203 = icmp ne i8 %8202, 0
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8205 = load i8, i8* %8204, align 1
  %8206 = icmp ne i8 %8205, 0
  %8207 = xor i1 %8203, %8206
  %8208 = xor i1 %8207, true
  %8209 = and i1 %8200, %8208
  %8210 = zext i1 %8209 to i8
  store i8 %8210, i8* %BRANCH_TAKEN, align 1
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8212 = select i1 %8209, i64 %8193, i64 %8195
  store i64 %8212, i64* %8211, align 8
  store %struct.Memory* %loadMem_47ebc8, %struct.Memory** %MEMORY
  %loadBr_47ebc8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ebc8 = icmp eq i8 %loadBr_47ebc8, 1
  br i1 %cmpBr_47ebc8, label %block_.L_47ed0c, label %block_47ebce

block_47ebce:                                     ; preds = %block_47ebb7
  %loadMem_47ebce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 33
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 15
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %8218 to i64*
  %8219 = load i64, i64* %RBP.i173
  %8220 = sub i64 %8219, 20
  %8221 = load i64, i64* %PC.i172
  %8222 = add i64 %8221, 7
  store i64 %8222, i64* %PC.i172
  %8223 = inttoptr i64 %8220 to i32*
  store i32 0, i32* %8223
  store %struct.Memory* %loadMem_47ebce, %struct.Memory** %MEMORY
  br label %block_.L_47ebd5

block_.L_47ebd5:                                  ; preds = %block_.L_47ecf9, %block_47ebce
  %loadMem_47ebd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8225 = getelementptr inbounds %struct.GPR, %struct.GPR* %8224, i32 0, i32 33
  %8226 = getelementptr inbounds %struct.Reg, %struct.Reg* %8225, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %8226 to i64*
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 15
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %8229 to i64*
  %8230 = load i64, i64* %RBP.i171
  %8231 = sub i64 %8230, 20
  %8232 = load i64, i64* %PC.i170
  %8233 = add i64 %8232, 4
  store i64 %8233, i64* %PC.i170
  %8234 = inttoptr i64 %8231 to i32*
  %8235 = load i32, i32* %8234
  %8236 = sub i32 %8235, 8
  %8237 = icmp ult i32 %8235, 8
  %8238 = zext i1 %8237 to i8
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8238, i8* %8239, align 1
  %8240 = and i32 %8236, 255
  %8241 = call i32 @llvm.ctpop.i32(i32 %8240)
  %8242 = trunc i32 %8241 to i8
  %8243 = and i8 %8242, 1
  %8244 = xor i8 %8243, 1
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8244, i8* %8245, align 1
  %8246 = xor i32 %8235, 8
  %8247 = xor i32 %8246, %8236
  %8248 = lshr i32 %8247, 4
  %8249 = trunc i32 %8248 to i8
  %8250 = and i8 %8249, 1
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8250, i8* %8251, align 1
  %8252 = icmp eq i32 %8236, 0
  %8253 = zext i1 %8252 to i8
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8253, i8* %8254, align 1
  %8255 = lshr i32 %8236, 31
  %8256 = trunc i32 %8255 to i8
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8256, i8* %8257, align 1
  %8258 = lshr i32 %8235, 31
  %8259 = xor i32 %8255, %8258
  %8260 = add i32 %8259, %8258
  %8261 = icmp eq i32 %8260, 2
  %8262 = zext i1 %8261 to i8
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8262, i8* %8263, align 1
  store %struct.Memory* %loadMem_47ebd5, %struct.Memory** %MEMORY
  %loadMem_47ebd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8265 = getelementptr inbounds %struct.GPR, %struct.GPR* %8264, i32 0, i32 33
  %8266 = getelementptr inbounds %struct.Reg, %struct.Reg* %8265, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %8266 to i64*
  %8267 = load i64, i64* %PC.i169
  %8268 = add i64 %8267, 302
  %8269 = load i64, i64* %PC.i169
  %8270 = add i64 %8269, 6
  %8271 = load i64, i64* %PC.i169
  %8272 = add i64 %8271, 6
  store i64 %8272, i64* %PC.i169
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8274 = load i8, i8* %8273, align 1
  %8275 = icmp ne i8 %8274, 0
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8277 = load i8, i8* %8276, align 1
  %8278 = icmp ne i8 %8277, 0
  %8279 = xor i1 %8275, %8278
  %8280 = xor i1 %8279, true
  %8281 = zext i1 %8280 to i8
  store i8 %8281, i8* %BRANCH_TAKEN, align 1
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8283 = select i1 %8279, i64 %8270, i64 %8268
  store i64 %8283, i64* %8282, align 8
  store %struct.Memory* %loadMem_47ebd9, %struct.Memory** %MEMORY
  %loadBr_47ebd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ebd9 = icmp eq i8 %loadBr_47ebd9, 1
  br i1 %cmpBr_47ebd9, label %block_.L_47ed07, label %block_47ebdf

block_47ebdf:                                     ; preds = %block_.L_47ebd5
  %loadMem_47ebdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8285 = getelementptr inbounds %struct.GPR, %struct.GPR* %8284, i32 0, i32 33
  %8286 = getelementptr inbounds %struct.Reg, %struct.Reg* %8285, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %8286 to i64*
  %8287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8288 = getelementptr inbounds %struct.GPR, %struct.GPR* %8287, i32 0, i32 1
  %8289 = getelementptr inbounds %struct.Reg, %struct.Reg* %8288, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %8289 to i64*
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8291 = getelementptr inbounds %struct.GPR, %struct.GPR* %8290, i32 0, i32 15
  %8292 = getelementptr inbounds %struct.Reg, %struct.Reg* %8291, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %8292 to i64*
  %8293 = load i64, i64* %RBP.i168
  %8294 = sub i64 %8293, 712
  %8295 = load i64, i64* %PC.i166
  %8296 = add i64 %8295, 6
  store i64 %8296, i64* %PC.i166
  %8297 = inttoptr i64 %8294 to i32*
  %8298 = load i32, i32* %8297
  %8299 = zext i32 %8298 to i64
  store i64 %8299, i64* %RAX.i167, align 8
  store %struct.Memory* %loadMem_47ebdf, %struct.Memory** %MEMORY
  %loadMem_47ebe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 33
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %8302 to i64*
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 5
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %RCX.i164 = bitcast %union.anon* %8305 to i64*
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 15
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %8308 to i64*
  %8309 = load i64, i64* %RBP.i165
  %8310 = sub i64 %8309, 20
  %8311 = load i64, i64* %PC.i163
  %8312 = add i64 %8311, 4
  store i64 %8312, i64* %PC.i163
  %8313 = inttoptr i64 %8310 to i32*
  %8314 = load i32, i32* %8313
  %8315 = sext i32 %8314 to i64
  store i64 %8315, i64* %RCX.i164, align 8
  store %struct.Memory* %loadMem_47ebe5, %struct.Memory** %MEMORY
  %loadMem_47ebe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 33
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %8318 to i64*
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8320 = getelementptr inbounds %struct.GPR, %struct.GPR* %8319, i32 0, i32 1
  %8321 = getelementptr inbounds %struct.Reg, %struct.Reg* %8320, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %8321 to i64*
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 5
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %8324 to i64*
  %8325 = load i64, i64* %RAX.i161
  %8326 = load i64, i64* %RCX.i162
  %8327 = mul i64 %8326, 4
  %8328 = add i64 %8327, 8053168
  %8329 = load i64, i64* %PC.i160
  %8330 = add i64 %8329, 7
  store i64 %8330, i64* %PC.i160
  %8331 = trunc i64 %8325 to i32
  %8332 = inttoptr i64 %8328 to i32*
  %8333 = load i32, i32* %8332
  %8334 = add i32 %8333, %8331
  %8335 = zext i32 %8334 to i64
  store i64 %8335, i64* %RAX.i161, align 8
  %8336 = icmp ult i32 %8334, %8331
  %8337 = icmp ult i32 %8334, %8333
  %8338 = or i1 %8336, %8337
  %8339 = zext i1 %8338 to i8
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8339, i8* %8340, align 1
  %8341 = and i32 %8334, 255
  %8342 = call i32 @llvm.ctpop.i32(i32 %8341)
  %8343 = trunc i32 %8342 to i8
  %8344 = and i8 %8343, 1
  %8345 = xor i8 %8344, 1
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8345, i8* %8346, align 1
  %8347 = xor i32 %8333, %8331
  %8348 = xor i32 %8347, %8334
  %8349 = lshr i32 %8348, 4
  %8350 = trunc i32 %8349 to i8
  %8351 = and i8 %8350, 1
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8351, i8* %8352, align 1
  %8353 = icmp eq i32 %8334, 0
  %8354 = zext i1 %8353 to i8
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8354, i8* %8355, align 1
  %8356 = lshr i32 %8334, 31
  %8357 = trunc i32 %8356 to i8
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8357, i8* %8358, align 1
  %8359 = lshr i32 %8331, 31
  %8360 = lshr i32 %8333, 31
  %8361 = xor i32 %8356, %8359
  %8362 = xor i32 %8356, %8360
  %8363 = add i32 %8361, %8362
  %8364 = icmp eq i32 %8363, 2
  %8365 = zext i1 %8364 to i8
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8365, i8* %8366, align 1
  store %struct.Memory* %loadMem_47ebe9, %struct.Memory** %MEMORY
  %loadMem_47ebf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8368 = getelementptr inbounds %struct.GPR, %struct.GPR* %8367, i32 0, i32 33
  %8369 = getelementptr inbounds %struct.Reg, %struct.Reg* %8368, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %8369 to i64*
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8371 = getelementptr inbounds %struct.GPR, %struct.GPR* %8370, i32 0, i32 1
  %8372 = getelementptr inbounds %struct.Reg, %struct.Reg* %8371, i32 0, i32 0
  %EAX.i158 = bitcast %union.anon* %8372 to i32*
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 15
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %8375 to i64*
  %8376 = load i64, i64* %RBP.i159
  %8377 = sub i64 %8376, 716
  %8378 = load i32, i32* %EAX.i158
  %8379 = zext i32 %8378 to i64
  %8380 = load i64, i64* %PC.i157
  %8381 = add i64 %8380, 6
  store i64 %8381, i64* %PC.i157
  %8382 = inttoptr i64 %8377 to i32*
  store i32 %8378, i32* %8382
  store %struct.Memory* %loadMem_47ebf0, %struct.Memory** %MEMORY
  %loadMem_47ebf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 33
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8385 to i64*
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8387 = getelementptr inbounds %struct.GPR, %struct.GPR* %8386, i32 0, i32 5
  %8388 = getelementptr inbounds %struct.Reg, %struct.Reg* %8387, i32 0, i32 0
  %RCX.i155 = bitcast %union.anon* %8388 to i64*
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 15
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %8391 to i64*
  %8392 = load i64, i64* %RBP.i156
  %8393 = sub i64 %8392, 716
  %8394 = load i64, i64* %PC.i154
  %8395 = add i64 %8394, 7
  store i64 %8395, i64* %PC.i154
  %8396 = inttoptr i64 %8393 to i32*
  %8397 = load i32, i32* %8396
  %8398 = sext i32 %8397 to i64
  store i64 %8398, i64* %RCX.i155, align 8
  store %struct.Memory* %loadMem_47ebf6, %struct.Memory** %MEMORY
  %loadMem_47ebfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8400 = getelementptr inbounds %struct.GPR, %struct.GPR* %8399, i32 0, i32 33
  %8401 = getelementptr inbounds %struct.Reg, %struct.Reg* %8400, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %8401 to i64*
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 1
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 5
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %RCX.i153
  %8409 = add i64 %8408, 12099168
  %8410 = load i64, i64* %PC.i151
  %8411 = add i64 %8410, 8
  store i64 %8411, i64* %PC.i151
  %8412 = inttoptr i64 %8409 to i8*
  %8413 = load i8, i8* %8412
  %8414 = zext i8 %8413 to i64
  store i64 %8414, i64* %RAX.i152, align 8
  store %struct.Memory* %loadMem_47ebfd, %struct.Memory** %MEMORY
  %loadMem_47ec05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 33
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %8417 to i64*
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 1
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %EAX.i150 = bitcast %union.anon* %8420 to i32*
  %8421 = load i32, i32* %EAX.i150
  %8422 = zext i32 %8421 to i64
  %8423 = load i64, i64* %PC.i149
  %8424 = add i64 %8423, 3
  store i64 %8424, i64* %PC.i149
  %8425 = sub i32 %8421, 3
  %8426 = icmp ult i32 %8421, 3
  %8427 = zext i1 %8426 to i8
  %8428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8427, i8* %8428, align 1
  %8429 = and i32 %8425, 255
  %8430 = call i32 @llvm.ctpop.i32(i32 %8429)
  %8431 = trunc i32 %8430 to i8
  %8432 = and i8 %8431, 1
  %8433 = xor i8 %8432, 1
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8433, i8* %8434, align 1
  %8435 = xor i64 3, %8422
  %8436 = trunc i64 %8435 to i32
  %8437 = xor i32 %8436, %8425
  %8438 = lshr i32 %8437, 4
  %8439 = trunc i32 %8438 to i8
  %8440 = and i8 %8439, 1
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8440, i8* %8441, align 1
  %8442 = icmp eq i32 %8425, 0
  %8443 = zext i1 %8442 to i8
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8443, i8* %8444, align 1
  %8445 = lshr i32 %8425, 31
  %8446 = trunc i32 %8445 to i8
  %8447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8446, i8* %8447, align 1
  %8448 = lshr i32 %8421, 31
  %8449 = xor i32 %8445, %8448
  %8450 = add i32 %8449, %8448
  %8451 = icmp eq i32 %8450, 2
  %8452 = zext i1 %8451 to i8
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8452, i8* %8453, align 1
  store %struct.Memory* %loadMem_47ec05, %struct.Memory** %MEMORY
  %loadMem_47ec08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 33
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %8456 to i64*
  %8457 = load i64, i64* %PC.i148
  %8458 = add i64 %8457, 236
  %8459 = load i64, i64* %PC.i148
  %8460 = add i64 %8459, 6
  %8461 = load i64, i64* %PC.i148
  %8462 = add i64 %8461, 6
  store i64 %8462, i64* %PC.i148
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8464 = load i8, i8* %8463, align 1
  store i8 %8464, i8* %BRANCH_TAKEN, align 1
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8466 = icmp ne i8 %8464, 0
  %8467 = select i1 %8466, i64 %8458, i64 %8460
  store i64 %8467, i64* %8465, align 8
  store %struct.Memory* %loadMem_47ec08, %struct.Memory** %MEMORY
  %loadBr_47ec08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec08 = icmp eq i8 %loadBr_47ec08, 1
  br i1 %cmpBr_47ec08, label %block_.L_47ecf4, label %block_47ec0e

block_47ec0e:                                     ; preds = %block_47ebdf
  %loadMem_47ec0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 33
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %8470 to i64*
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 1
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 15
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %8476 to i64*
  %8477 = load i64, i64* %RBP.i147
  %8478 = sub i64 %8477, 716
  %8479 = load i64, i64* %PC.i145
  %8480 = add i64 %8479, 7
  store i64 %8480, i64* %PC.i145
  %8481 = inttoptr i64 %8478 to i32*
  %8482 = load i32, i32* %8481
  %8483 = sext i32 %8482 to i64
  store i64 %8483, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_47ec0e, %struct.Memory** %MEMORY
  %loadMem_47ec15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 33
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 1
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 5
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %RCX.i144 = bitcast %union.anon* %8492 to i64*
  %8493 = load i64, i64* %RAX.i143
  %8494 = add i64 %8493, 12099168
  %8495 = load i64, i64* %PC.i142
  %8496 = add i64 %8495, 8
  store i64 %8496, i64* %PC.i142
  %8497 = inttoptr i64 %8494 to i8*
  %8498 = load i8, i8* %8497
  %8499 = zext i8 %8498 to i64
  store i64 %8499, i64* %RCX.i144, align 8
  store %struct.Memory* %loadMem_47ec15, %struct.Memory** %MEMORY
  %loadMem_47ec1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 33
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %8502 to i64*
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8504 = getelementptr inbounds %struct.GPR, %struct.GPR* %8503, i32 0, i32 5
  %8505 = getelementptr inbounds %struct.Reg, %struct.Reg* %8504, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %8505 to i32*
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8507 = getelementptr inbounds %struct.GPR, %struct.GPR* %8506, i32 0, i32 15
  %8508 = getelementptr inbounds %struct.Reg, %struct.Reg* %8507, i32 0, i32 0
  %RBP.i141 = bitcast %union.anon* %8508 to i64*
  %8509 = load i32, i32* %ECX.i
  %8510 = zext i32 %8509 to i64
  %8511 = load i64, i64* %RBP.i141
  %8512 = sub i64 %8511, 4
  %8513 = load i64, i64* %PC.i140
  %8514 = add i64 %8513, 3
  store i64 %8514, i64* %PC.i140
  %8515 = inttoptr i64 %8512 to i32*
  %8516 = load i32, i32* %8515
  %8517 = sub i32 %8509, %8516
  %8518 = icmp ult i32 %8509, %8516
  %8519 = zext i1 %8518 to i8
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8519, i8* %8520, align 1
  %8521 = and i32 %8517, 255
  %8522 = call i32 @llvm.ctpop.i32(i32 %8521)
  %8523 = trunc i32 %8522 to i8
  %8524 = and i8 %8523, 1
  %8525 = xor i8 %8524, 1
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8525, i8* %8526, align 1
  %8527 = xor i32 %8516, %8509
  %8528 = xor i32 %8527, %8517
  %8529 = lshr i32 %8528, 4
  %8530 = trunc i32 %8529 to i8
  %8531 = and i8 %8530, 1
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8531, i8* %8532, align 1
  %8533 = icmp eq i32 %8517, 0
  %8534 = zext i1 %8533 to i8
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8534, i8* %8535, align 1
  %8536 = lshr i32 %8517, 31
  %8537 = trunc i32 %8536 to i8
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8537, i8* %8538, align 1
  %8539 = lshr i32 %8509, 31
  %8540 = lshr i32 %8516, 31
  %8541 = xor i32 %8540, %8539
  %8542 = xor i32 %8536, %8539
  %8543 = add i32 %8542, %8541
  %8544 = icmp eq i32 %8543, 2
  %8545 = zext i1 %8544 to i8
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8545, i8* %8546, align 1
  store %struct.Memory* %loadMem_47ec1d, %struct.Memory** %MEMORY
  %loadMem_47ec20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8548 = getelementptr inbounds %struct.GPR, %struct.GPR* %8547, i32 0, i32 33
  %8549 = getelementptr inbounds %struct.Reg, %struct.Reg* %8548, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %8549 to i64*
  %8550 = load i64, i64* %PC.i139
  %8551 = add i64 %8550, 212
  %8552 = load i64, i64* %PC.i139
  %8553 = add i64 %8552, 6
  %8554 = load i64, i64* %PC.i139
  %8555 = add i64 %8554, 6
  store i64 %8555, i64* %PC.i139
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8557 = load i8, i8* %8556, align 1
  %8558 = icmp eq i8 %8557, 0
  %8559 = zext i1 %8558 to i8
  store i8 %8559, i8* %BRANCH_TAKEN, align 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8561 = select i1 %8558, i64 %8551, i64 %8553
  store i64 %8561, i64* %8560, align 8
  store %struct.Memory* %loadMem_47ec20, %struct.Memory** %MEMORY
  %loadBr_47ec20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec20 = icmp eq i8 %loadBr_47ec20, 1
  br i1 %cmpBr_47ec20, label %block_.L_47ecf4, label %block_47ec26

block_47ec26:                                     ; preds = %block_47ec0e
  %loadMem_47ec26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 33
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %8564 to i64*
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 11
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %RDI.i137 = bitcast %union.anon* %8567 to i64*
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 15
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %8570 to i64*
  %8571 = load i64, i64* %RBP.i138
  %8572 = sub i64 %8571, 716
  %8573 = load i64, i64* %PC.i136
  %8574 = add i64 %8573, 6
  store i64 %8574, i64* %PC.i136
  %8575 = inttoptr i64 %8572 to i32*
  %8576 = load i32, i32* %8575
  %8577 = zext i32 %8576 to i64
  store i64 %8577, i64* %RDI.i137, align 8
  store %struct.Memory* %loadMem_47ec26, %struct.Memory** %MEMORY
  %loadMem_47ec2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 33
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %8580 to i64*
  %8581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8582 = getelementptr inbounds %struct.GPR, %struct.GPR* %8581, i32 0, i32 9
  %8583 = getelementptr inbounds %struct.Reg, %struct.Reg* %8582, i32 0, i32 0
  %RSI.i134 = bitcast %union.anon* %8583 to i64*
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8585 = getelementptr inbounds %struct.GPR, %struct.GPR* %8584, i32 0, i32 15
  %8586 = getelementptr inbounds %struct.Reg, %struct.Reg* %8585, i32 0, i32 0
  %RBP.i135 = bitcast %union.anon* %8586 to i64*
  %8587 = load i64, i64* %RBP.i135
  %8588 = sub i64 %8587, 704
  %8589 = load i64, i64* %PC.i133
  %8590 = add i64 %8589, 6
  store i64 %8590, i64* %PC.i133
  %8591 = inttoptr i64 %8588 to i32*
  %8592 = load i32, i32* %8591
  %8593 = zext i32 %8592 to i64
  store i64 %8593, i64* %RSI.i134, align 8
  store %struct.Memory* %loadMem_47ec2c, %struct.Memory** %MEMORY
  %loadMem1_47ec32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 33
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8596 to i64*
  %8597 = load i64, i64* %PC.i132
  %8598 = add i64 %8597, 39390
  %8599 = load i64, i64* %PC.i132
  %8600 = add i64 %8599, 5
  %8601 = load i64, i64* %PC.i132
  %8602 = add i64 %8601, 5
  store i64 %8602, i64* %PC.i132
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8604 = load i64, i64* %8603, align 8
  %8605 = add i64 %8604, -8
  %8606 = inttoptr i64 %8605 to i64*
  store i64 %8600, i64* %8606
  store i64 %8605, i64* %8603, align 8
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8598, i64* %8607, align 8
  store %struct.Memory* %loadMem1_47ec32, %struct.Memory** %MEMORY
  %loadMem2_47ec32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ec32 = load i64, i64* %3
  %call2_47ec32 = call %struct.Memory* @sub_488610.is_same_worm(%struct.State* %0, i64 %loadPC_47ec32, %struct.Memory* %loadMem2_47ec32)
  store %struct.Memory* %call2_47ec32, %struct.Memory** %MEMORY
  %loadMem_47ec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 1
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %EAX.i131 = bitcast %union.anon* %8613 to i32*
  %8614 = load i32, i32* %EAX.i131
  %8615 = zext i32 %8614 to i64
  %8616 = load i64, i64* %PC.i130
  %8617 = add i64 %8616, 3
  store i64 %8617, i64* %PC.i130
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8618, align 1
  %8619 = and i32 %8614, 255
  %8620 = call i32 @llvm.ctpop.i32(i32 %8619)
  %8621 = trunc i32 %8620 to i8
  %8622 = and i8 %8621, 1
  %8623 = xor i8 %8622, 1
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8623, i8* %8624, align 1
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8625, align 1
  %8626 = icmp eq i32 %8614, 0
  %8627 = zext i1 %8626 to i8
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8627, i8* %8628, align 1
  %8629 = lshr i32 %8614, 31
  %8630 = trunc i32 %8629 to i8
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8630, i8* %8631, align 1
  %8632 = lshr i32 %8614, 31
  %8633 = xor i32 %8629, %8632
  %8634 = add i32 %8633, %8632
  %8635 = icmp eq i32 %8634, 2
  %8636 = zext i1 %8635 to i8
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8636, i8* %8637, align 1
  store %struct.Memory* %loadMem_47ec37, %struct.Memory** %MEMORY
  %loadMem_47ec3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8639 = getelementptr inbounds %struct.GPR, %struct.GPR* %8638, i32 0, i32 33
  %8640 = getelementptr inbounds %struct.Reg, %struct.Reg* %8639, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %8640 to i64*
  %8641 = load i64, i64* %PC.i129
  %8642 = add i64 %8641, 186
  %8643 = load i64, i64* %PC.i129
  %8644 = add i64 %8643, 6
  %8645 = load i64, i64* %PC.i129
  %8646 = add i64 %8645, 6
  store i64 %8646, i64* %PC.i129
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8648 = load i8, i8* %8647, align 1
  %8649 = icmp eq i8 %8648, 0
  %8650 = zext i1 %8649 to i8
  store i8 %8650, i8* %BRANCH_TAKEN, align 1
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8652 = select i1 %8649, i64 %8642, i64 %8644
  store i64 %8652, i64* %8651, align 8
  store %struct.Memory* %loadMem_47ec3a, %struct.Memory** %MEMORY
  %loadBr_47ec3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec3a = icmp eq i8 %loadBr_47ec3a, 1
  br i1 %cmpBr_47ec3a, label %block_.L_47ecf4, label %block_47ec40

block_47ec40:                                     ; preds = %block_47ec26
  %loadMem_47ec40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8654 = getelementptr inbounds %struct.GPR, %struct.GPR* %8653, i32 0, i32 33
  %8655 = getelementptr inbounds %struct.Reg, %struct.Reg* %8654, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %8655 to i64*
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 11
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %RDI.i127 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 15
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %8661 to i64*
  %8662 = load i64, i64* %RBP.i128
  %8663 = sub i64 %8662, 716
  %8664 = load i64, i64* %PC.i126
  %8665 = add i64 %8664, 6
  store i64 %8665, i64* %PC.i126
  %8666 = inttoptr i64 %8663 to i32*
  %8667 = load i32, i32* %8666
  %8668 = zext i32 %8667 to i64
  store i64 %8668, i64* %RDI.i127, align 8
  store %struct.Memory* %loadMem_47ec40, %struct.Memory** %MEMORY
  %loadMem_47ec46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8670 = getelementptr inbounds %struct.GPR, %struct.GPR* %8669, i32 0, i32 33
  %8671 = getelementptr inbounds %struct.Reg, %struct.Reg* %8670, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %8671 to i64*
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8673 = getelementptr inbounds %struct.GPR, %struct.GPR* %8672, i32 0, i32 9
  %8674 = getelementptr inbounds %struct.Reg, %struct.Reg* %8673, i32 0, i32 0
  %RSI.i124 = bitcast %union.anon* %8674 to i64*
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 15
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %8677 to i64*
  %8678 = load i64, i64* %RBP.i125
  %8679 = sub i64 %8678, 708
  %8680 = load i64, i64* %PC.i123
  %8681 = add i64 %8680, 6
  store i64 %8681, i64* %PC.i123
  %8682 = inttoptr i64 %8679 to i32*
  %8683 = load i32, i32* %8682
  %8684 = zext i32 %8683 to i64
  store i64 %8684, i64* %RSI.i124, align 8
  store %struct.Memory* %loadMem_47ec46, %struct.Memory** %MEMORY
  %loadMem1_47ec4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8686 = getelementptr inbounds %struct.GPR, %struct.GPR* %8685, i32 0, i32 33
  %8687 = getelementptr inbounds %struct.Reg, %struct.Reg* %8686, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %8687 to i64*
  %8688 = load i64, i64* %PC.i122
  %8689 = add i64 %8688, 39364
  %8690 = load i64, i64* %PC.i122
  %8691 = add i64 %8690, 5
  %8692 = load i64, i64* %PC.i122
  %8693 = add i64 %8692, 5
  store i64 %8693, i64* %PC.i122
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8695 = load i64, i64* %8694, align 8
  %8696 = add i64 %8695, -8
  %8697 = inttoptr i64 %8696 to i64*
  store i64 %8691, i64* %8697
  store i64 %8696, i64* %8694, align 8
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8689, i64* %8698, align 8
  store %struct.Memory* %loadMem1_47ec4c, %struct.Memory** %MEMORY
  %loadMem2_47ec4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ec4c = load i64, i64* %3
  %call2_47ec4c = call %struct.Memory* @sub_488610.is_same_worm(%struct.State* %0, i64 %loadPC_47ec4c, %struct.Memory* %loadMem2_47ec4c)
  store %struct.Memory* %call2_47ec4c, %struct.Memory** %MEMORY
  %loadMem_47ec51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8700 = getelementptr inbounds %struct.GPR, %struct.GPR* %8699, i32 0, i32 33
  %8701 = getelementptr inbounds %struct.Reg, %struct.Reg* %8700, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %8701 to i64*
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8703 = getelementptr inbounds %struct.GPR, %struct.GPR* %8702, i32 0, i32 1
  %8704 = getelementptr inbounds %struct.Reg, %struct.Reg* %8703, i32 0, i32 0
  %EAX.i121 = bitcast %union.anon* %8704 to i32*
  %8705 = load i32, i32* %EAX.i121
  %8706 = zext i32 %8705 to i64
  %8707 = load i64, i64* %PC.i120
  %8708 = add i64 %8707, 3
  store i64 %8708, i64* %PC.i120
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8709, align 1
  %8710 = and i32 %8705, 255
  %8711 = call i32 @llvm.ctpop.i32(i32 %8710)
  %8712 = trunc i32 %8711 to i8
  %8713 = and i8 %8712, 1
  %8714 = xor i8 %8713, 1
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8714, i8* %8715, align 1
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8716, align 1
  %8717 = icmp eq i32 %8705, 0
  %8718 = zext i1 %8717 to i8
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8718, i8* %8719, align 1
  %8720 = lshr i32 %8705, 31
  %8721 = trunc i32 %8720 to i8
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8721, i8* %8722, align 1
  %8723 = lshr i32 %8705, 31
  %8724 = xor i32 %8720, %8723
  %8725 = add i32 %8724, %8723
  %8726 = icmp eq i32 %8725, 2
  %8727 = zext i1 %8726 to i8
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8727, i8* %8728, align 1
  store %struct.Memory* %loadMem_47ec51, %struct.Memory** %MEMORY
  %loadMem_47ec54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8730 = getelementptr inbounds %struct.GPR, %struct.GPR* %8729, i32 0, i32 33
  %8731 = getelementptr inbounds %struct.Reg, %struct.Reg* %8730, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %8731 to i64*
  %8732 = load i64, i64* %PC.i119
  %8733 = add i64 %8732, 160
  %8734 = load i64, i64* %PC.i119
  %8735 = add i64 %8734, 6
  %8736 = load i64, i64* %PC.i119
  %8737 = add i64 %8736, 6
  store i64 %8737, i64* %PC.i119
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8739 = load i8, i8* %8738, align 1
  %8740 = icmp eq i8 %8739, 0
  %8741 = zext i1 %8740 to i8
  store i8 %8741, i8* %BRANCH_TAKEN, align 1
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8743 = select i1 %8740, i64 %8733, i64 %8735
  store i64 %8743, i64* %8742, align 8
  store %struct.Memory* %loadMem_47ec54, %struct.Memory** %MEMORY
  %loadBr_47ec54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec54 = icmp eq i8 %loadBr_47ec54, 1
  br i1 %cmpBr_47ec54, label %block_.L_47ecf4, label %block_47ec5a

block_47ec5a:                                     ; preds = %block_47ec40
  %loadMem_47ec5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8745 = getelementptr inbounds %struct.GPR, %struct.GPR* %8744, i32 0, i32 33
  %8746 = getelementptr inbounds %struct.Reg, %struct.Reg* %8745, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %8746 to i64*
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 7
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %RDX.i118 = bitcast %union.anon* %8749 to i64*
  %8750 = load i64, i64* %PC.i117
  %8751 = add i64 %8750, 10
  store i64 %8751, i64* %PC.i117
  store i64 ptrtoint (%G__0x582cc6_type* @G__0x582cc6 to i64), i64* %RDX.i118, align 8
  store %struct.Memory* %loadMem_47ec5a, %struct.Memory** %MEMORY
  %loadMem_47ec64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 1
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %EAX.i115 = bitcast %union.anon* %8757 to i32*
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8759 = getelementptr inbounds %struct.GPR, %struct.GPR* %8758, i32 0, i32 1
  %8760 = getelementptr inbounds %struct.Reg, %struct.Reg* %8759, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %8760 to i64*
  %8761 = load i64, i64* %RAX.i116
  %8762 = load i32, i32* %EAX.i115
  %8763 = zext i32 %8762 to i64
  %8764 = load i64, i64* %PC.i114
  %8765 = add i64 %8764, 2
  store i64 %8765, i64* %PC.i114
  %8766 = xor i64 %8763, %8761
  %8767 = trunc i64 %8766 to i32
  %8768 = and i64 %8766, 4294967295
  store i64 %8768, i64* %RAX.i116, align 8
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8769, align 1
  %8770 = and i32 %8767, 255
  %8771 = call i32 @llvm.ctpop.i32(i32 %8770)
  %8772 = trunc i32 %8771 to i8
  %8773 = and i8 %8772, 1
  %8774 = xor i8 %8773, 1
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8774, i8* %8775, align 1
  %8776 = icmp eq i32 %8767, 0
  %8777 = zext i1 %8776 to i8
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8777, i8* %8778, align 1
  %8779 = lshr i32 %8767, 31
  %8780 = trunc i32 %8779 to i8
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8780, i8* %8781, align 1
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8782, align 1
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8783, align 1
  store %struct.Memory* %loadMem_47ec64, %struct.Memory** %MEMORY
  %loadMem_47ec66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8785 = getelementptr inbounds %struct.GPR, %struct.GPR* %8784, i32 0, i32 33
  %8786 = getelementptr inbounds %struct.Reg, %struct.Reg* %8785, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %8786 to i64*
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8788 = getelementptr inbounds %struct.GPR, %struct.GPR* %8787, i32 0, i32 11
  %8789 = getelementptr inbounds %struct.Reg, %struct.Reg* %8788, i32 0, i32 0
  %RDI.i112 = bitcast %union.anon* %8789 to i64*
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8791 = getelementptr inbounds %struct.GPR, %struct.GPR* %8790, i32 0, i32 15
  %8792 = getelementptr inbounds %struct.Reg, %struct.Reg* %8791, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %8792 to i64*
  %8793 = load i64, i64* %RBP.i113
  %8794 = sub i64 %8793, 8
  %8795 = load i64, i64* %PC.i111
  %8796 = add i64 %8795, 3
  store i64 %8796, i64* %PC.i111
  %8797 = inttoptr i64 %8794 to i32*
  %8798 = load i32, i32* %8797
  %8799 = zext i32 %8798 to i64
  store i64 %8799, i64* %RDI.i112, align 8
  store %struct.Memory* %loadMem_47ec66, %struct.Memory** %MEMORY
  %loadMem_47ec69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 33
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %8802 to i64*
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8804 = getelementptr inbounds %struct.GPR, %struct.GPR* %8803, i32 0, i32 9
  %8805 = getelementptr inbounds %struct.Reg, %struct.Reg* %8804, i32 0, i32 0
  %RSI.i109 = bitcast %union.anon* %8805 to i64*
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8807 = getelementptr inbounds %struct.GPR, %struct.GPR* %8806, i32 0, i32 15
  %8808 = getelementptr inbounds %struct.Reg, %struct.Reg* %8807, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %8808 to i64*
  %8809 = load i64, i64* %RBP.i110
  %8810 = sub i64 %8809, 4
  %8811 = load i64, i64* %PC.i108
  %8812 = add i64 %8811, 3
  store i64 %8812, i64* %PC.i108
  %8813 = inttoptr i64 %8810 to i32*
  %8814 = load i32, i32* %8813
  %8815 = zext i32 %8814 to i64
  store i64 %8815, i64* %RSI.i109, align 8
  store %struct.Memory* %loadMem_47ec69, %struct.Memory** %MEMORY
  %loadMem_47ec6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 33
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %8818 to i64*
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 5
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %8821 to i64*
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 15
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %8824 to i64*
  %8825 = load i64, i64* %RBP.i107
  %8826 = sub i64 %8825, 704
  %8827 = load i64, i64* %PC.i106
  %8828 = add i64 %8827, 6
  store i64 %8828, i64* %PC.i106
  %8829 = inttoptr i64 %8826 to i32*
  %8830 = load i32, i32* %8829
  %8831 = zext i32 %8830 to i64
  store i64 %8831, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_47ec6c, %struct.Memory** %MEMORY
  %loadMem_47ec72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 33
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %8834 to i64*
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8836 = getelementptr inbounds %struct.GPR, %struct.GPR* %8835, i32 0, i32 1
  %8837 = getelementptr inbounds %struct.Reg, %struct.Reg* %8836, i32 0, i32 0
  %EAX.i105 = bitcast %union.anon* %8837 to i32*
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 17
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %8840 to i32*
  %8841 = bitcast i32* %R8D.i to i64*
  %8842 = load i32, i32* %EAX.i105
  %8843 = zext i32 %8842 to i64
  %8844 = load i64, i64* %PC.i104
  %8845 = add i64 %8844, 3
  store i64 %8845, i64* %PC.i104
  %8846 = and i64 %8843, 4294967295
  store i64 %8846, i64* %8841, align 8
  store %struct.Memory* %loadMem_47ec72, %struct.Memory** %MEMORY
  %loadMem_47ec75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8848 = getelementptr inbounds %struct.GPR, %struct.GPR* %8847, i32 0, i32 33
  %8849 = getelementptr inbounds %struct.Reg, %struct.Reg* %8848, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %8849 to i64*
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8851 = getelementptr inbounds %struct.GPR, %struct.GPR* %8850, i32 0, i32 1
  %8852 = getelementptr inbounds %struct.Reg, %struct.Reg* %8851, i32 0, i32 0
  %EAX.i103 = bitcast %union.anon* %8852 to i32*
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 19
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %8855 to i32*
  %8856 = bitcast i32* %R9D.i to i64*
  %8857 = load i32, i32* %EAX.i103
  %8858 = zext i32 %8857 to i64
  %8859 = load i64, i64* %PC.i102
  %8860 = add i64 %8859, 3
  store i64 %8860, i64* %PC.i102
  %8861 = and i64 %8858, 4294967295
  store i64 %8861, i64* %8856, align 8
  store %struct.Memory* %loadMem_47ec75, %struct.Memory** %MEMORY
  %loadMem1_47ec78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8863 = getelementptr inbounds %struct.GPR, %struct.GPR* %8862, i32 0, i32 33
  %8864 = getelementptr inbounds %struct.Reg, %struct.Reg* %8863, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %8864 to i64*
  %8865 = load i64, i64* %PC.i101
  %8866 = add i64 %8865, -482888
  %8867 = load i64, i64* %PC.i101
  %8868 = add i64 %8867, 5
  %8869 = load i64, i64* %PC.i101
  %8870 = add i64 %8869, 5
  store i64 %8870, i64* %PC.i101
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8872 = load i64, i64* %8871, align 8
  %8873 = add i64 %8872, -8
  %8874 = inttoptr i64 %8873 to i64*
  store i64 %8868, i64* %8874
  store i64 %8873, i64* %8871, align 8
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8866, i64* %8875, align 8
  store %struct.Memory* %loadMem1_47ec78, %struct.Memory** %MEMORY
  %loadMem2_47ec78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ec78 = load i64, i64* %3
  %call2_47ec78 = call %struct.Memory* @sub_408e30.trymove(%struct.State* %0, i64 %loadPC_47ec78, %struct.Memory* %loadMem2_47ec78)
  store %struct.Memory* %call2_47ec78, %struct.Memory** %MEMORY
  %loadMem_47ec7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 33
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %8878 to i64*
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8880 = getelementptr inbounds %struct.GPR, %struct.GPR* %8879, i32 0, i32 1
  %8881 = getelementptr inbounds %struct.Reg, %struct.Reg* %8880, i32 0, i32 0
  %EAX.i100 = bitcast %union.anon* %8881 to i32*
  %8882 = load i32, i32* %EAX.i100
  %8883 = zext i32 %8882 to i64
  %8884 = load i64, i64* %PC.i99
  %8885 = add i64 %8884, 3
  store i64 %8885, i64* %PC.i99
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8886, align 1
  %8887 = and i32 %8882, 255
  %8888 = call i32 @llvm.ctpop.i32(i32 %8887)
  %8889 = trunc i32 %8888 to i8
  %8890 = and i8 %8889, 1
  %8891 = xor i8 %8890, 1
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8891, i8* %8892, align 1
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8893, align 1
  %8894 = icmp eq i32 %8882, 0
  %8895 = zext i1 %8894 to i8
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8895, i8* %8896, align 1
  %8897 = lshr i32 %8882, 31
  %8898 = trunc i32 %8897 to i8
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8898, i8* %8899, align 1
  %8900 = lshr i32 %8882, 31
  %8901 = xor i32 %8897, %8900
  %8902 = add i32 %8901, %8900
  %8903 = icmp eq i32 %8902, 2
  %8904 = zext i1 %8903 to i8
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8904, i8* %8905, align 1
  store %struct.Memory* %loadMem_47ec7d, %struct.Memory** %MEMORY
  %loadMem_47ec80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 33
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %PC.i98
  %8910 = add i64 %8909, 111
  %8911 = load i64, i64* %PC.i98
  %8912 = add i64 %8911, 6
  %8913 = load i64, i64* %PC.i98
  %8914 = add i64 %8913, 6
  store i64 %8914, i64* %PC.i98
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8916 = load i8, i8* %8915, align 1
  store i8 %8916, i8* %BRANCH_TAKEN, align 1
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8918 = icmp ne i8 %8916, 0
  %8919 = select i1 %8918, i64 %8910, i64 %8912
  store i64 %8919, i64* %8917, align 8
  store %struct.Memory* %loadMem_47ec80, %struct.Memory** %MEMORY
  %loadBr_47ec80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec80 = icmp eq i8 %loadBr_47ec80, 1
  br i1 %cmpBr_47ec80, label %block_.L_47ecef, label %block_47ec86

block_47ec86:                                     ; preds = %block_47ec5a
  %loadMem_47ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8921 = getelementptr inbounds %struct.GPR, %struct.GPR* %8920, i32 0, i32 33
  %8922 = getelementptr inbounds %struct.Reg, %struct.Reg* %8921, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %8922 to i64*
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 1
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %EAX.i96 = bitcast %union.anon* %8925 to i32*
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8927 = getelementptr inbounds %struct.GPR, %struct.GPR* %8926, i32 0, i32 1
  %8928 = getelementptr inbounds %struct.Reg, %struct.Reg* %8927, i32 0, i32 0
  %RAX.i97 = bitcast %union.anon* %8928 to i64*
  %8929 = load i64, i64* %RAX.i97
  %8930 = load i32, i32* %EAX.i96
  %8931 = zext i32 %8930 to i64
  %8932 = load i64, i64* %PC.i95
  %8933 = add i64 %8932, 2
  store i64 %8933, i64* %PC.i95
  %8934 = xor i64 %8931, %8929
  %8935 = trunc i64 %8934 to i32
  %8936 = and i64 %8934, 4294967295
  store i64 %8936, i64* %RAX.i97, align 8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8937, align 1
  %8938 = and i32 %8935, 255
  %8939 = call i32 @llvm.ctpop.i32(i32 %8938)
  %8940 = trunc i32 %8939 to i8
  %8941 = and i8 %8940, 1
  %8942 = xor i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8942, i8* %8943, align 1
  %8944 = icmp eq i32 %8935, 0
  %8945 = zext i1 %8944 to i8
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8945, i8* %8946, align 1
  %8947 = lshr i32 %8935, 31
  %8948 = trunc i32 %8947 to i8
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8948, i8* %8949, align 1
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8950, align 1
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8951, align 1
  store %struct.Memory* %loadMem_47ec86, %struct.Memory** %MEMORY
  %loadMem_47ec88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 33
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %8954 to i64*
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8956 = getelementptr inbounds %struct.GPR, %struct.GPR* %8955, i32 0, i32 1
  %8957 = getelementptr inbounds %struct.Reg, %struct.Reg* %8956, i32 0, i32 0
  %EAX.i93 = bitcast %union.anon* %8957 to i32*
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 7
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %RDX.i94 = bitcast %union.anon* %8960 to i64*
  %8961 = load i32, i32* %EAX.i93
  %8962 = zext i32 %8961 to i64
  %8963 = load i64, i64* %PC.i92
  %8964 = add i64 %8963, 2
  store i64 %8964, i64* %PC.i92
  %8965 = and i64 %8962, 4294967295
  store i64 %8965, i64* %RDX.i94, align 8
  store %struct.Memory* %loadMem_47ec88, %struct.Memory** %MEMORY
  %loadMem_47ec8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8967 = getelementptr inbounds %struct.GPR, %struct.GPR* %8966, i32 0, i32 33
  %8968 = getelementptr inbounds %struct.Reg, %struct.Reg* %8967, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %8968 to i64*
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8970 = getelementptr inbounds %struct.GPR, %struct.GPR* %8969, i32 0, i32 11
  %8971 = getelementptr inbounds %struct.Reg, %struct.Reg* %8970, i32 0, i32 0
  %RDI.i90 = bitcast %union.anon* %8971 to i64*
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 15
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %8974 to i64*
  %8975 = load i64, i64* %RBP.i91
  %8976 = sub i64 %8975, 716
  %8977 = load i64, i64* %PC.i89
  %8978 = add i64 %8977, 6
  store i64 %8978, i64* %PC.i89
  %8979 = inttoptr i64 %8976 to i32*
  %8980 = load i32, i32* %8979
  %8981 = zext i32 %8980 to i64
  store i64 %8981, i64* %RDI.i90, align 8
  store %struct.Memory* %loadMem_47ec8a, %struct.Memory** %MEMORY
  %loadMem_47ec90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 33
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %8984 to i64*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 9
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %RSI.i87 = bitcast %union.anon* %8987 to i64*
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8989 = getelementptr inbounds %struct.GPR, %struct.GPR* %8988, i32 0, i32 15
  %8990 = getelementptr inbounds %struct.Reg, %struct.Reg* %8989, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %8990 to i64*
  %8991 = load i64, i64* %RBP.i88
  %8992 = sub i64 %8991, 704
  %8993 = load i64, i64* %PC.i86
  %8994 = add i64 %8993, 6
  store i64 %8994, i64* %PC.i86
  %8995 = inttoptr i64 %8992 to i32*
  %8996 = load i32, i32* %8995
  %8997 = zext i32 %8996 to i64
  store i64 %8997, i64* %RSI.i87, align 8
  store %struct.Memory* %loadMem_47ec90, %struct.Memory** %MEMORY
  %loadMem1_47ec96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 33
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %9000 to i64*
  %9001 = load i64, i64* %PC.i85
  %9002 = add i64 %9001, -135718
  %9003 = load i64, i64* %PC.i85
  %9004 = add i64 %9003, 5
  %9005 = load i64, i64* %PC.i85
  %9006 = add i64 %9005, 5
  store i64 %9006, i64* %PC.i85
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9008 = load i64, i64* %9007, align 8
  %9009 = add i64 %9008, -8
  %9010 = inttoptr i64 %9009 to i64*
  store i64 %9004, i64* %9010
  store i64 %9009, i64* %9007, align 8
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9002, i64* %9011, align 8
  store %struct.Memory* %loadMem1_47ec96, %struct.Memory** %MEMORY
  %loadMem2_47ec96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ec96 = load i64, i64* %3
  %call2_47ec96 = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47ec96, %struct.Memory* %loadMem2_47ec96)
  store %struct.Memory* %call2_47ec96, %struct.Memory** %MEMORY
  %loadMem_47ec9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9013 = getelementptr inbounds %struct.GPR, %struct.GPR* %9012, i32 0, i32 33
  %9014 = getelementptr inbounds %struct.Reg, %struct.Reg* %9013, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %9014 to i64*
  %9015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9016 = getelementptr inbounds %struct.GPR, %struct.GPR* %9015, i32 0, i32 1
  %9017 = getelementptr inbounds %struct.Reg, %struct.Reg* %9016, i32 0, i32 0
  %EAX.i84 = bitcast %union.anon* %9017 to i32*
  %9018 = load i32, i32* %EAX.i84
  %9019 = zext i32 %9018 to i64
  %9020 = load i64, i64* %PC.i83
  %9021 = add i64 %9020, 3
  store i64 %9021, i64* %PC.i83
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9022, align 1
  %9023 = and i32 %9018, 255
  %9024 = call i32 @llvm.ctpop.i32(i32 %9023)
  %9025 = trunc i32 %9024 to i8
  %9026 = and i8 %9025, 1
  %9027 = xor i8 %9026, 1
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9027, i8* %9028, align 1
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9029, align 1
  %9030 = icmp eq i32 %9018, 0
  %9031 = zext i1 %9030 to i8
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9031, i8* %9032, align 1
  %9033 = lshr i32 %9018, 31
  %9034 = trunc i32 %9033 to i8
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9034, i8* %9035, align 1
  %9036 = lshr i32 %9018, 31
  %9037 = xor i32 %9033, %9036
  %9038 = add i32 %9037, %9036
  %9039 = icmp eq i32 %9038, 2
  %9040 = zext i1 %9039 to i8
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9040, i8* %9041, align 1
  store %struct.Memory* %loadMem_47ec9b, %struct.Memory** %MEMORY
  %loadMem_47ec9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 33
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9044 to i64*
  %9045 = load i64, i64* %PC.i82
  %9046 = add i64 %9045, 26
  %9047 = load i64, i64* %PC.i82
  %9048 = add i64 %9047, 6
  %9049 = load i64, i64* %PC.i82
  %9050 = add i64 %9049, 6
  store i64 %9050, i64* %PC.i82
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9052 = load i8, i8* %9051, align 1
  %9053 = icmp eq i8 %9052, 0
  %9054 = zext i1 %9053 to i8
  store i8 %9054, i8* %BRANCH_TAKEN, align 1
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9056 = select i1 %9053, i64 %9046, i64 %9048
  store i64 %9056, i64* %9055, align 8
  store %struct.Memory* %loadMem_47ec9e, %struct.Memory** %MEMORY
  %loadBr_47ec9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ec9e = icmp eq i8 %loadBr_47ec9e, 1
  br i1 %cmpBr_47ec9e, label %block_.L_47ecb8, label %block_47eca4

block_47eca4:                                     ; preds = %block_47ec86
  %loadMem_47eca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9058 = getelementptr inbounds %struct.GPR, %struct.GPR* %9057, i32 0, i32 33
  %9059 = getelementptr inbounds %struct.Reg, %struct.Reg* %9058, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %9059 to i64*
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 11
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %RDI.i80 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 15
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %9065 to i64*
  %9066 = load i64, i64* %RBP.i81
  %9067 = sub i64 %9066, 8
  %9068 = load i64, i64* %PC.i79
  %9069 = add i64 %9068, 3
  store i64 %9069, i64* %PC.i79
  %9070 = inttoptr i64 %9067 to i32*
  %9071 = load i32, i32* %9070
  %9072 = zext i32 %9071 to i64
  store i64 %9072, i64* %RDI.i80, align 8
  store %struct.Memory* %loadMem_47eca4, %struct.Memory** %MEMORY
  %loadMem_47eca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 33
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 9
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %RSI.i77 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 15
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %9081 to i64*
  %9082 = load i64, i64* %RBP.i78
  %9083 = sub i64 %9082, 716
  %9084 = load i64, i64* %PC.i76
  %9085 = add i64 %9084, 6
  store i64 %9085, i64* %PC.i76
  %9086 = inttoptr i64 %9083 to i32*
  %9087 = load i32, i32* %9086
  %9088 = zext i32 %9087 to i64
  store i64 %9088, i64* %RSI.i77, align 8
  store %struct.Memory* %loadMem_47eca7, %struct.Memory** %MEMORY
  %loadMem_47ecad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9090 = getelementptr inbounds %struct.GPR, %struct.GPR* %9089, i32 0, i32 33
  %9091 = getelementptr inbounds %struct.Reg, %struct.Reg* %9090, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9091 to i64*
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 7
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %RDX.i74 = bitcast %union.anon* %9094 to i64*
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 15
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %9097 to i64*
  %9098 = load i64, i64* %RBP.i75
  %9099 = sub i64 %9098, 704
  %9100 = load i64, i64* %PC.i73
  %9101 = add i64 %9100, 6
  store i64 %9101, i64* %PC.i73
  %9102 = inttoptr i64 %9099 to i32*
  %9103 = load i32, i32* %9102
  %9104 = zext i32 %9103 to i64
  store i64 %9104, i64* %RDX.i74, align 8
  store %struct.Memory* %loadMem_47ecad, %struct.Memory** %MEMORY
  %loadMem1_47ecb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 33
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %9107 to i64*
  %9108 = load i64, i64* %PC.i72
  %9109 = add i64 %9108, -311139
  %9110 = load i64, i64* %PC.i72
  %9111 = add i64 %9110, 5
  %9112 = load i64, i64* %PC.i72
  %9113 = add i64 %9112, 5
  store i64 %9113, i64* %PC.i72
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9115 = load i64, i64* %9114, align 8
  %9116 = add i64 %9115, -8
  %9117 = inttoptr i64 %9116 to i64*
  store i64 %9111, i64* %9117
  store i64 %9116, i64* %9114, align 8
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9109, i64* %9118, align 8
  store %struct.Memory* %loadMem1_47ecb3, %struct.Memory** %MEMORY
  %loadMem2_47ecb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ecb3 = load i64, i64* %3
  %call2_47ecb3 = call %struct.Memory* @sub_432d50.add_connection_move(%struct.State* %0, i64 %loadPC_47ecb3, %struct.Memory* %loadMem2_47ecb3)
  store %struct.Memory* %call2_47ecb3, %struct.Memory** %MEMORY
  br label %block_.L_47ecb8

block_.L_47ecb8:                                  ; preds = %block_47eca4, %block_47ec86
  %loadMem_47ecb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 33
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %9121 to i64*
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 1
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %EAX.i70 = bitcast %union.anon* %9124 to i32*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 1
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %9127 to i64*
  %9128 = load i64, i64* %RAX.i71
  %9129 = load i32, i32* %EAX.i70
  %9130 = zext i32 %9129 to i64
  %9131 = load i64, i64* %PC.i69
  %9132 = add i64 %9131, 2
  store i64 %9132, i64* %PC.i69
  %9133 = xor i64 %9130, %9128
  %9134 = trunc i64 %9133 to i32
  %9135 = and i64 %9133, 4294967295
  store i64 %9135, i64* %RAX.i71, align 8
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9136, align 1
  %9137 = and i32 %9134, 255
  %9138 = call i32 @llvm.ctpop.i32(i32 %9137)
  %9139 = trunc i32 %9138 to i8
  %9140 = and i8 %9139, 1
  %9141 = xor i8 %9140, 1
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9141, i8* %9142, align 1
  %9143 = icmp eq i32 %9134, 0
  %9144 = zext i1 %9143 to i8
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9144, i8* %9145, align 1
  %9146 = lshr i32 %9134, 31
  %9147 = trunc i32 %9146 to i8
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9147, i8* %9148, align 1
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9149, align 1
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9150, align 1
  store %struct.Memory* %loadMem_47ecb8, %struct.Memory** %MEMORY
  %loadMem_47ecba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 33
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %9153 to i64*
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 1
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %EAX.i67 = bitcast %union.anon* %9156 to i32*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 7
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %9159 to i64*
  %9160 = load i32, i32* %EAX.i67
  %9161 = zext i32 %9160 to i64
  %9162 = load i64, i64* %PC.i66
  %9163 = add i64 %9162, 2
  store i64 %9163, i64* %PC.i66
  %9164 = and i64 %9161, 4294967295
  store i64 %9164, i64* %RDX.i68, align 8
  store %struct.Memory* %loadMem_47ecba, %struct.Memory** %MEMORY
  %loadMem_47ecbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 33
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %9167 to i64*
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 11
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %RDI.i64 = bitcast %union.anon* %9170 to i64*
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9172 = getelementptr inbounds %struct.GPR, %struct.GPR* %9171, i32 0, i32 15
  %9173 = getelementptr inbounds %struct.Reg, %struct.Reg* %9172, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %9173 to i64*
  %9174 = load i64, i64* %RBP.i65
  %9175 = sub i64 %9174, 716
  %9176 = load i64, i64* %PC.i63
  %9177 = add i64 %9176, 6
  store i64 %9177, i64* %PC.i63
  %9178 = inttoptr i64 %9175 to i32*
  %9179 = load i32, i32* %9178
  %9180 = zext i32 %9179 to i64
  store i64 %9180, i64* %RDI.i64, align 8
  store %struct.Memory* %loadMem_47ecbc, %struct.Memory** %MEMORY
  %loadMem_47ecc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9182 = getelementptr inbounds %struct.GPR, %struct.GPR* %9181, i32 0, i32 33
  %9183 = getelementptr inbounds %struct.Reg, %struct.Reg* %9182, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9183 to i64*
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9185 = getelementptr inbounds %struct.GPR, %struct.GPR* %9184, i32 0, i32 9
  %9186 = getelementptr inbounds %struct.Reg, %struct.Reg* %9185, i32 0, i32 0
  %RSI.i61 = bitcast %union.anon* %9186 to i64*
  %9187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9188 = getelementptr inbounds %struct.GPR, %struct.GPR* %9187, i32 0, i32 15
  %9189 = getelementptr inbounds %struct.Reg, %struct.Reg* %9188, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %9189 to i64*
  %9190 = load i64, i64* %RBP.i62
  %9191 = sub i64 %9190, 708
  %9192 = load i64, i64* %PC.i60
  %9193 = add i64 %9192, 6
  store i64 %9193, i64* %PC.i60
  %9194 = inttoptr i64 %9191 to i32*
  %9195 = load i32, i32* %9194
  %9196 = zext i32 %9195 to i64
  store i64 %9196, i64* %RSI.i61, align 8
  store %struct.Memory* %loadMem_47ecc2, %struct.Memory** %MEMORY
  %loadMem1_47ecc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9198 = getelementptr inbounds %struct.GPR, %struct.GPR* %9197, i32 0, i32 33
  %9199 = getelementptr inbounds %struct.Reg, %struct.Reg* %9198, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %9199 to i64*
  %9200 = load i64, i64* %PC.i59
  %9201 = add i64 %9200, -135768
  %9202 = load i64, i64* %PC.i59
  %9203 = add i64 %9202, 5
  %9204 = load i64, i64* %PC.i59
  %9205 = add i64 %9204, 5
  store i64 %9205, i64* %PC.i59
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9207 = load i64, i64* %9206, align 8
  %9208 = add i64 %9207, -8
  %9209 = inttoptr i64 %9208 to i64*
  store i64 %9203, i64* %9209
  store i64 %9208, i64* %9206, align 8
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9201, i64* %9210, align 8
  store %struct.Memory* %loadMem1_47ecc8, %struct.Memory** %MEMORY
  %loadMem2_47ecc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ecc8 = load i64, i64* %3
  %call2_47ecc8 = call %struct.Memory* @sub_45da70.disconnect(%struct.State* %0, i64 %loadPC_47ecc8, %struct.Memory* %loadMem2_47ecc8)
  store %struct.Memory* %call2_47ecc8, %struct.Memory** %MEMORY
  %loadMem_47eccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9212 = getelementptr inbounds %struct.GPR, %struct.GPR* %9211, i32 0, i32 33
  %9213 = getelementptr inbounds %struct.Reg, %struct.Reg* %9212, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %9213 to i64*
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 1
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %EAX.i58 = bitcast %union.anon* %9216 to i32*
  %9217 = load i32, i32* %EAX.i58
  %9218 = zext i32 %9217 to i64
  %9219 = load i64, i64* %PC.i57
  %9220 = add i64 %9219, 3
  store i64 %9220, i64* %PC.i57
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9221, align 1
  %9222 = and i32 %9217, 255
  %9223 = call i32 @llvm.ctpop.i32(i32 %9222)
  %9224 = trunc i32 %9223 to i8
  %9225 = and i8 %9224, 1
  %9226 = xor i8 %9225, 1
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9226, i8* %9227, align 1
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9228, align 1
  %9229 = icmp eq i32 %9217, 0
  %9230 = zext i1 %9229 to i8
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9230, i8* %9231, align 1
  %9232 = lshr i32 %9217, 31
  %9233 = trunc i32 %9232 to i8
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9233, i8* %9234, align 1
  %9235 = lshr i32 %9217, 31
  %9236 = xor i32 %9232, %9235
  %9237 = add i32 %9236, %9235
  %9238 = icmp eq i32 %9237, 2
  %9239 = zext i1 %9238 to i8
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9239, i8* %9240, align 1
  store %struct.Memory* %loadMem_47eccd, %struct.Memory** %MEMORY
  %loadMem_47ecd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 33
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %PC.i56
  %9245 = add i64 %9244, 26
  %9246 = load i64, i64* %PC.i56
  %9247 = add i64 %9246, 6
  %9248 = load i64, i64* %PC.i56
  %9249 = add i64 %9248, 6
  store i64 %9249, i64* %PC.i56
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9251 = load i8, i8* %9250, align 1
  %9252 = icmp eq i8 %9251, 0
  %9253 = zext i1 %9252 to i8
  store i8 %9253, i8* %BRANCH_TAKEN, align 1
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9255 = select i1 %9252, i64 %9245, i64 %9247
  store i64 %9255, i64* %9254, align 8
  store %struct.Memory* %loadMem_47ecd0, %struct.Memory** %MEMORY
  %loadBr_47ecd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ecd0 = icmp eq i8 %loadBr_47ecd0, 1
  br i1 %cmpBr_47ecd0, label %block_.L_47ecea, label %block_47ecd6

block_47ecd6:                                     ; preds = %block_.L_47ecb8
  %loadMem_47ecd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 33
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %9258 to i64*
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 11
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9261 to i64*
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 15
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %9264 to i64*
  %9265 = load i64, i64* %RBP.i55
  %9266 = sub i64 %9265, 8
  %9267 = load i64, i64* %PC.i54
  %9268 = add i64 %9267, 3
  store i64 %9268, i64* %PC.i54
  %9269 = inttoptr i64 %9266 to i32*
  %9270 = load i32, i32* %9269
  %9271 = zext i32 %9270 to i64
  store i64 %9271, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_47ecd6, %struct.Memory** %MEMORY
  %loadMem_47ecd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9273 = getelementptr inbounds %struct.GPR, %struct.GPR* %9272, i32 0, i32 33
  %9274 = getelementptr inbounds %struct.Reg, %struct.Reg* %9273, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9274 to i64*
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 9
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9277 to i64*
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 15
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %RBP.i53
  %9282 = sub i64 %9281, 716
  %9283 = load i64, i64* %PC.i52
  %9284 = add i64 %9283, 6
  store i64 %9284, i64* %PC.i52
  %9285 = inttoptr i64 %9282 to i32*
  %9286 = load i32, i32* %9285
  %9287 = zext i32 %9286 to i64
  store i64 %9287, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_47ecd9, %struct.Memory** %MEMORY
  %loadMem_47ecdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 33
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %9290 to i64*
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 7
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9293 to i64*
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9295 = getelementptr inbounds %struct.GPR, %struct.GPR* %9294, i32 0, i32 15
  %9296 = getelementptr inbounds %struct.Reg, %struct.Reg* %9295, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %9296 to i64*
  %9297 = load i64, i64* %RBP.i51
  %9298 = sub i64 %9297, 708
  %9299 = load i64, i64* %PC.i50
  %9300 = add i64 %9299, 6
  store i64 %9300, i64* %PC.i50
  %9301 = inttoptr i64 %9298 to i32*
  %9302 = load i32, i32* %9301
  %9303 = zext i32 %9302 to i64
  store i64 %9303, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_47ecdf, %struct.Memory** %MEMORY
  %loadMem1_47ece5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9305 = getelementptr inbounds %struct.GPR, %struct.GPR* %9304, i32 0, i32 33
  %9306 = getelementptr inbounds %struct.Reg, %struct.Reg* %9305, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9306 to i64*
  %9307 = load i64, i64* %PC.i49
  %9308 = add i64 %9307, -311189
  %9309 = load i64, i64* %PC.i49
  %9310 = add i64 %9309, 5
  %9311 = load i64, i64* %PC.i49
  %9312 = add i64 %9311, 5
  store i64 %9312, i64* %PC.i49
  %9313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9314 = load i64, i64* %9313, align 8
  %9315 = add i64 %9314, -8
  %9316 = inttoptr i64 %9315 to i64*
  store i64 %9310, i64* %9316
  store i64 %9315, i64* %9313, align 8
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9308, i64* %9317, align 8
  store %struct.Memory* %loadMem1_47ece5, %struct.Memory** %MEMORY
  %loadMem2_47ece5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ece5 = load i64, i64* %3
  %call2_47ece5 = call %struct.Memory* @sub_432d50.add_connection_move(%struct.State* %0, i64 %loadPC_47ece5, %struct.Memory* %loadMem2_47ece5)
  store %struct.Memory* %call2_47ece5, %struct.Memory** %MEMORY
  br label %block_.L_47ecea

block_.L_47ecea:                                  ; preds = %block_47ecd6, %block_.L_47ecb8
  %loadMem1_47ecea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9319 = getelementptr inbounds %struct.GPR, %struct.GPR* %9318, i32 0, i32 33
  %9320 = getelementptr inbounds %struct.Reg, %struct.Reg* %9319, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %9320 to i64*
  %9321 = load i64, i64* %PC.i48
  %9322 = add i64 %9321, -462730
  %9323 = load i64, i64* %PC.i48
  %9324 = add i64 %9323, 5
  %9325 = load i64, i64* %PC.i48
  %9326 = add i64 %9325, 5
  store i64 %9326, i64* %PC.i48
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9328 = load i64, i64* %9327, align 8
  %9329 = add i64 %9328, -8
  %9330 = inttoptr i64 %9329 to i64*
  store i64 %9324, i64* %9330
  store i64 %9329, i64* %9327, align 8
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9322, i64* %9331, align 8
  store %struct.Memory* %loadMem1_47ecea, %struct.Memory** %MEMORY
  %loadMem2_47ecea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ecea = load i64, i64* %3
  %call2_47ecea = call %struct.Memory* @sub_40dd60.popgo(%struct.State* %0, i64 %loadPC_47ecea, %struct.Memory* %loadMem2_47ecea)
  store %struct.Memory* %call2_47ecea, %struct.Memory** %MEMORY
  br label %block_.L_47ecef

block_.L_47ecef:                                  ; preds = %block_.L_47ecea, %block_47ec5a
  %loadMem_47ecef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 33
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %9334 to i64*
  %9335 = load i64, i64* %PC.i47
  %9336 = add i64 %9335, 5
  %9337 = load i64, i64* %PC.i47
  %9338 = add i64 %9337, 5
  store i64 %9338, i64* %PC.i47
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9336, i64* %9339, align 8
  store %struct.Memory* %loadMem_47ecef, %struct.Memory** %MEMORY
  br label %block_.L_47ecf4

block_.L_47ecf4:                                  ; preds = %block_.L_47ecef, %block_47ec40, %block_47ec26, %block_47ec0e, %block_47ebdf
  %loadMem_47ecf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 33
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9342 to i64*
  %9343 = load i64, i64* %PC.i46
  %9344 = add i64 %9343, 5
  %9345 = load i64, i64* %PC.i46
  %9346 = add i64 %9345, 5
  store i64 %9346, i64* %PC.i46
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9344, i64* %9347, align 8
  store %struct.Memory* %loadMem_47ecf4, %struct.Memory** %MEMORY
  br label %block_.L_47ecf9

block_.L_47ecf9:                                  ; preds = %block_.L_47ecf4
  %loadMem_47ecf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9349 = getelementptr inbounds %struct.GPR, %struct.GPR* %9348, i32 0, i32 33
  %9350 = getelementptr inbounds %struct.Reg, %struct.Reg* %9349, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9350 to i64*
  %9351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9352 = getelementptr inbounds %struct.GPR, %struct.GPR* %9351, i32 0, i32 1
  %9353 = getelementptr inbounds %struct.Reg, %struct.Reg* %9352, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %9353 to i64*
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 15
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %9356 to i64*
  %9357 = load i64, i64* %RBP.i45
  %9358 = sub i64 %9357, 20
  %9359 = load i64, i64* %PC.i43
  %9360 = add i64 %9359, 3
  store i64 %9360, i64* %PC.i43
  %9361 = inttoptr i64 %9358 to i32*
  %9362 = load i32, i32* %9361
  %9363 = zext i32 %9362 to i64
  store i64 %9363, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_47ecf9, %struct.Memory** %MEMORY
  %loadMem_47ecfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 33
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9366 to i64*
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9368 = getelementptr inbounds %struct.GPR, %struct.GPR* %9367, i32 0, i32 1
  %9369 = getelementptr inbounds %struct.Reg, %struct.Reg* %9368, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %9369 to i64*
  %9370 = load i64, i64* %RAX.i42
  %9371 = load i64, i64* %PC.i41
  %9372 = add i64 %9371, 3
  store i64 %9372, i64* %PC.i41
  %9373 = trunc i64 %9370 to i32
  %9374 = add i32 1, %9373
  %9375 = zext i32 %9374 to i64
  store i64 %9375, i64* %RAX.i42, align 8
  %9376 = icmp ult i32 %9374, %9373
  %9377 = icmp ult i32 %9374, 1
  %9378 = or i1 %9376, %9377
  %9379 = zext i1 %9378 to i8
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9379, i8* %9380, align 1
  %9381 = and i32 %9374, 255
  %9382 = call i32 @llvm.ctpop.i32(i32 %9381)
  %9383 = trunc i32 %9382 to i8
  %9384 = and i8 %9383, 1
  %9385 = xor i8 %9384, 1
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9385, i8* %9386, align 1
  %9387 = xor i64 1, %9370
  %9388 = trunc i64 %9387 to i32
  %9389 = xor i32 %9388, %9374
  %9390 = lshr i32 %9389, 4
  %9391 = trunc i32 %9390 to i8
  %9392 = and i8 %9391, 1
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9392, i8* %9393, align 1
  %9394 = icmp eq i32 %9374, 0
  %9395 = zext i1 %9394 to i8
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9395, i8* %9396, align 1
  %9397 = lshr i32 %9374, 31
  %9398 = trunc i32 %9397 to i8
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9398, i8* %9399, align 1
  %9400 = lshr i32 %9373, 31
  %9401 = xor i32 %9397, %9400
  %9402 = add i32 %9401, %9397
  %9403 = icmp eq i32 %9402, 2
  %9404 = zext i1 %9403 to i8
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9404, i8* %9405, align 1
  store %struct.Memory* %loadMem_47ecfc, %struct.Memory** %MEMORY
  %loadMem_47ecff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 33
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9408 to i64*
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9410 = getelementptr inbounds %struct.GPR, %struct.GPR* %9409, i32 0, i32 1
  %9411 = getelementptr inbounds %struct.Reg, %struct.Reg* %9410, i32 0, i32 0
  %EAX.i39 = bitcast %union.anon* %9411 to i32*
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 15
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %9414 to i64*
  %9415 = load i64, i64* %RBP.i40
  %9416 = sub i64 %9415, 20
  %9417 = load i32, i32* %EAX.i39
  %9418 = zext i32 %9417 to i64
  %9419 = load i64, i64* %PC.i38
  %9420 = add i64 %9419, 3
  store i64 %9420, i64* %PC.i38
  %9421 = inttoptr i64 %9416 to i32*
  store i32 %9417, i32* %9421
  store %struct.Memory* %loadMem_47ecff, %struct.Memory** %MEMORY
  %loadMem_47ed02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9423 = getelementptr inbounds %struct.GPR, %struct.GPR* %9422, i32 0, i32 33
  %9424 = getelementptr inbounds %struct.Reg, %struct.Reg* %9423, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %9424 to i64*
  %9425 = load i64, i64* %PC.i37
  %9426 = add i64 %9425, -301
  %9427 = load i64, i64* %PC.i37
  %9428 = add i64 %9427, 5
  store i64 %9428, i64* %PC.i37
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9426, i64* %9429, align 8
  store %struct.Memory* %loadMem_47ed02, %struct.Memory** %MEMORY
  br label %block_.L_47ebd5

block_.L_47ed07:                                  ; preds = %block_.L_47ebd5
  %loadMem_47ed07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 33
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %9432 to i64*
  %9433 = load i64, i64* %PC.i36
  %9434 = add i64 %9433, 5
  %9435 = load i64, i64* %PC.i36
  %9436 = add i64 %9435, 5
  store i64 %9436, i64* %PC.i36
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9434, i64* %9437, align 8
  store %struct.Memory* %loadMem_47ed07, %struct.Memory** %MEMORY
  br label %block_.L_47ed0c

block_.L_47ed0c:                                  ; preds = %block_.L_47ed07, %block_47ebb7, %block_47eb99, %block_47eb81, %block_47eb69
  %loadMem_47ed0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 33
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9440 to i64*
  %9441 = load i64, i64* %PC.i35
  %9442 = add i64 %9441, 5
  %9443 = load i64, i64* %PC.i35
  %9444 = add i64 %9443, 5
  store i64 %9444, i64* %PC.i35
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9442, i64* %9445, align 8
  store %struct.Memory* %loadMem_47ed0c, %struct.Memory** %MEMORY
  br label %block_.L_47ed11

block_.L_47ed11:                                  ; preds = %block_.L_47ed0c
  %loadMem_47ed11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9447 = getelementptr inbounds %struct.GPR, %struct.GPR* %9446, i32 0, i32 33
  %9448 = getelementptr inbounds %struct.Reg, %struct.Reg* %9447, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %9448 to i64*
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9450 = getelementptr inbounds %struct.GPR, %struct.GPR* %9449, i32 0, i32 1
  %9451 = getelementptr inbounds %struct.Reg, %struct.Reg* %9450, i32 0, i32 0
  %RAX.i33 = bitcast %union.anon* %9451 to i64*
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9453 = getelementptr inbounds %struct.GPR, %struct.GPR* %9452, i32 0, i32 15
  %9454 = getelementptr inbounds %struct.Reg, %struct.Reg* %9453, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %9454 to i64*
  %9455 = load i64, i64* %RBP.i34
  %9456 = sub i64 %9455, 712
  %9457 = load i64, i64* %PC.i32
  %9458 = add i64 %9457, 6
  store i64 %9458, i64* %PC.i32
  %9459 = inttoptr i64 %9456 to i32*
  %9460 = load i32, i32* %9459
  %9461 = zext i32 %9460 to i64
  store i64 %9461, i64* %RAX.i33, align 8
  store %struct.Memory* %loadMem_47ed11, %struct.Memory** %MEMORY
  %loadMem_47ed17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9463 = getelementptr inbounds %struct.GPR, %struct.GPR* %9462, i32 0, i32 33
  %9464 = getelementptr inbounds %struct.Reg, %struct.Reg* %9463, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9464 to i64*
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9466 = getelementptr inbounds %struct.GPR, %struct.GPR* %9465, i32 0, i32 1
  %9467 = getelementptr inbounds %struct.Reg, %struct.Reg* %9466, i32 0, i32 0
  %RAX.i31 = bitcast %union.anon* %9467 to i64*
  %9468 = load i64, i64* %RAX.i31
  %9469 = load i64, i64* %PC.i30
  %9470 = add i64 %9469, 3
  store i64 %9470, i64* %PC.i30
  %9471 = trunc i64 %9468 to i32
  %9472 = add i32 1, %9471
  %9473 = zext i32 %9472 to i64
  store i64 %9473, i64* %RAX.i31, align 8
  %9474 = icmp ult i32 %9472, %9471
  %9475 = icmp ult i32 %9472, 1
  %9476 = or i1 %9474, %9475
  %9477 = zext i1 %9476 to i8
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9477, i8* %9478, align 1
  %9479 = and i32 %9472, 255
  %9480 = call i32 @llvm.ctpop.i32(i32 %9479)
  %9481 = trunc i32 %9480 to i8
  %9482 = and i8 %9481, 1
  %9483 = xor i8 %9482, 1
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9483, i8* %9484, align 1
  %9485 = xor i64 1, %9468
  %9486 = trunc i64 %9485 to i32
  %9487 = xor i32 %9486, %9472
  %9488 = lshr i32 %9487, 4
  %9489 = trunc i32 %9488 to i8
  %9490 = and i8 %9489, 1
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9490, i8* %9491, align 1
  %9492 = icmp eq i32 %9472, 0
  %9493 = zext i1 %9492 to i8
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9493, i8* %9494, align 1
  %9495 = lshr i32 %9472, 31
  %9496 = trunc i32 %9495 to i8
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9496, i8* %9497, align 1
  %9498 = lshr i32 %9471, 31
  %9499 = xor i32 %9495, %9498
  %9500 = add i32 %9499, %9495
  %9501 = icmp eq i32 %9500, 2
  %9502 = zext i1 %9501 to i8
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9502, i8* %9503, align 1
  store %struct.Memory* %loadMem_47ed17, %struct.Memory** %MEMORY
  %loadMem_47ed1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 33
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9506 to i64*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 1
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %EAX.i28 = bitcast %union.anon* %9509 to i32*
  %9510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9511 = getelementptr inbounds %struct.GPR, %struct.GPR* %9510, i32 0, i32 15
  %9512 = getelementptr inbounds %struct.Reg, %struct.Reg* %9511, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %9512 to i64*
  %9513 = load i64, i64* %RBP.i29
  %9514 = sub i64 %9513, 712
  %9515 = load i32, i32* %EAX.i28
  %9516 = zext i32 %9515 to i64
  %9517 = load i64, i64* %PC.i27
  %9518 = add i64 %9517, 6
  store i64 %9518, i64* %PC.i27
  %9519 = inttoptr i64 %9514 to i32*
  store i32 %9515, i32* %9519
  store %struct.Memory* %loadMem_47ed1a, %struct.Memory** %MEMORY
  %loadMem_47ed20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 33
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %9522 to i64*
  %9523 = load i64, i64* %PC.i26
  %9524 = add i64 %9523, -455
  %9525 = load i64, i64* %PC.i26
  %9526 = add i64 %9525, 5
  store i64 %9526, i64* %PC.i26
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9524, i64* %9527, align 8
  store %struct.Memory* %loadMem_47ed20, %struct.Memory** %MEMORY
  br label %block_.L_47eb59

block_.L_47ed25:                                  ; preds = %block_.L_47eb59
  %loadMem_47ed25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 33
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %9530 to i64*
  %9531 = load i64, i64* %PC.i25
  %9532 = add i64 %9531, 5
  %9533 = load i64, i64* %PC.i25
  %9534 = add i64 %9533, 5
  store i64 %9534, i64* %PC.i25
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9532, i64* %9535, align 8
  store %struct.Memory* %loadMem_47ed25, %struct.Memory** %MEMORY
  br label %block_.L_47ed2a

block_.L_47ed2a:                                  ; preds = %block_.L_47ed25, %block_47eaef, %block_.L_47ead1
  %loadMem_47ed2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 33
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %9538 to i64*
  %9539 = load i64, i64* %PC.i24
  %9540 = add i64 %9539, 5
  %9541 = load i64, i64* %PC.i24
  %9542 = add i64 %9541, 5
  store i64 %9542, i64* %PC.i24
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9540, i64* %9543, align 8
  store %struct.Memory* %loadMem_47ed2a, %struct.Memory** %MEMORY
  br label %block_.L_47ed2f

block_.L_47ed2f:                                  ; preds = %block_.L_47ed2a, %block_.L_47eacc
  %loadMem_47ed2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %9546 to i64*
  %9547 = load i64, i64* %PC.i23
  %9548 = add i64 %9547, 5
  %9549 = load i64, i64* %PC.i23
  %9550 = add i64 %9549, 5
  store i64 %9550, i64* %PC.i23
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9548, i64* %9551, align 8
  store %struct.Memory* %loadMem_47ed2f, %struct.Memory** %MEMORY
  br label %block_.L_47ed34

block_.L_47ed34:                                  ; preds = %block_.L_47ed2f, %block_.L_47e9a5
  %loadMem_47ed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9553 = getelementptr inbounds %struct.GPR, %struct.GPR* %9552, i32 0, i32 33
  %9554 = getelementptr inbounds %struct.Reg, %struct.Reg* %9553, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %9554 to i64*
  %9555 = load i64, i64* %PC.i22
  %9556 = add i64 %9555, 5
  %9557 = load i64, i64* %PC.i22
  %9558 = add i64 %9557, 5
  store i64 %9558, i64* %PC.i22
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9556, i64* %9559, align 8
  store %struct.Memory* %loadMem_47ed34, %struct.Memory** %MEMORY
  br label %block_.L_47ed39

block_.L_47ed39:                                  ; preds = %block_.L_47ed34, %block_47e5b5, %block_47e581, %block_47e54a
  %loadMem_47ed39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9561 = getelementptr inbounds %struct.GPR, %struct.GPR* %9560, i32 0, i32 33
  %9562 = getelementptr inbounds %struct.Reg, %struct.Reg* %9561, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9562 to i64*
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9564 = getelementptr inbounds %struct.GPR, %struct.GPR* %9563, i32 0, i32 1
  %9565 = getelementptr inbounds %struct.Reg, %struct.Reg* %9564, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %9565 to i64*
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 15
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %9568 to i64*
  %9569 = load i64, i64* %RBP.i21
  %9570 = sub i64 %9569, 12
  %9571 = load i64, i64* %PC.i19
  %9572 = add i64 %9571, 3
  store i64 %9572, i64* %PC.i19
  %9573 = inttoptr i64 %9570 to i32*
  %9574 = load i32, i32* %9573
  %9575 = zext i32 %9574 to i64
  store i64 %9575, i64* %RAX.i20, align 8
  store %struct.Memory* %loadMem_47ed39, %struct.Memory** %MEMORY
  %loadMem_47ed3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 33
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %9578 to i64*
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 1
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %9581 to i64*
  %9582 = load i64, i64* %RAX.i18
  %9583 = load i64, i64* %PC.i17
  %9584 = add i64 %9583, 3
  store i64 %9584, i64* %PC.i17
  %9585 = trunc i64 %9582 to i32
  %9586 = add i32 1, %9585
  %9587 = zext i32 %9586 to i64
  store i64 %9587, i64* %RAX.i18, align 8
  %9588 = icmp ult i32 %9586, %9585
  %9589 = icmp ult i32 %9586, 1
  %9590 = or i1 %9588, %9589
  %9591 = zext i1 %9590 to i8
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9591, i8* %9592, align 1
  %9593 = and i32 %9586, 255
  %9594 = call i32 @llvm.ctpop.i32(i32 %9593)
  %9595 = trunc i32 %9594 to i8
  %9596 = and i8 %9595, 1
  %9597 = xor i8 %9596, 1
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9597, i8* %9598, align 1
  %9599 = xor i64 1, %9582
  %9600 = trunc i64 %9599 to i32
  %9601 = xor i32 %9600, %9586
  %9602 = lshr i32 %9601, 4
  %9603 = trunc i32 %9602 to i8
  %9604 = and i8 %9603, 1
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9604, i8* %9605, align 1
  %9606 = icmp eq i32 %9586, 0
  %9607 = zext i1 %9606 to i8
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9607, i8* %9608, align 1
  %9609 = lshr i32 %9586, 31
  %9610 = trunc i32 %9609 to i8
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9610, i8* %9611, align 1
  %9612 = lshr i32 %9585, 31
  %9613 = xor i32 %9609, %9612
  %9614 = add i32 %9613, %9609
  %9615 = icmp eq i32 %9614, 2
  %9616 = zext i1 %9615 to i8
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9616, i8* %9617, align 1
  store %struct.Memory* %loadMem_47ed3c, %struct.Memory** %MEMORY
  %loadMem_47ed3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9619 = getelementptr inbounds %struct.GPR, %struct.GPR* %9618, i32 0, i32 33
  %9620 = getelementptr inbounds %struct.Reg, %struct.Reg* %9619, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %9620 to i64*
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9622 = getelementptr inbounds %struct.GPR, %struct.GPR* %9621, i32 0, i32 1
  %9623 = getelementptr inbounds %struct.Reg, %struct.Reg* %9622, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %9623 to i32*
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 15
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %9626 to i64*
  %9627 = load i64, i64* %RBP.i16
  %9628 = sub i64 %9627, 12
  %9629 = load i32, i32* %EAX.i15
  %9630 = zext i32 %9629 to i64
  %9631 = load i64, i64* %PC.i14
  %9632 = add i64 %9631, 3
  store i64 %9632, i64* %PC.i14
  %9633 = inttoptr i64 %9628 to i32*
  store i32 %9629, i32* %9633
  store %struct.Memory* %loadMem_47ed3f, %struct.Memory** %MEMORY
  %loadMem_47ed42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9635 = getelementptr inbounds %struct.GPR, %struct.GPR* %9634, i32 0, i32 33
  %9636 = getelementptr inbounds %struct.Reg, %struct.Reg* %9635, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9636 to i64*
  %9637 = load i64, i64* %PC.i13
  %9638 = add i64 %9637, -2303
  %9639 = load i64, i64* %PC.i13
  %9640 = add i64 %9639, 5
  store i64 %9640, i64* %PC.i13
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9638, i64* %9641, align 8
  store %struct.Memory* %loadMem_47ed42, %struct.Memory** %MEMORY
  br label %block_.L_47e443

block_.L_47ed47:                                  ; preds = %block_47e47a, %block_.L_47e443
  %loadMem_47ed47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 33
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %9644 to i64*
  %9645 = load i64, i64* %PC.i12
  %9646 = add i64 %9645, 5
  %9647 = load i64, i64* %PC.i12
  %9648 = add i64 %9647, 5
  store i64 %9648, i64* %PC.i12
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9646, i64* %9649, align 8
  store %struct.Memory* %loadMem_47ed47, %struct.Memory** %MEMORY
  br label %block_.L_47ed4c

block_.L_47ed4c:                                  ; preds = %block_.L_47ed47, %block_47e437
  %loadMem_47ed4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 33
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9652 to i64*
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9654 = getelementptr inbounds %struct.GPR, %struct.GPR* %9653, i32 0, i32 1
  %9655 = getelementptr inbounds %struct.Reg, %struct.Reg* %9654, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %9655 to i64*
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9657 = getelementptr inbounds %struct.GPR, %struct.GPR* %9656, i32 0, i32 15
  %9658 = getelementptr inbounds %struct.Reg, %struct.Reg* %9657, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %9658 to i64*
  %9659 = load i64, i64* %RBP.i11
  %9660 = sub i64 %9659, 8
  %9661 = load i64, i64* %PC.i9
  %9662 = add i64 %9661, 3
  store i64 %9662, i64* %PC.i9
  %9663 = inttoptr i64 %9660 to i32*
  %9664 = load i32, i32* %9663
  %9665 = zext i32 %9664 to i64
  store i64 %9665, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_47ed4c, %struct.Memory** %MEMORY
  %loadMem_47ed4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9667 = getelementptr inbounds %struct.GPR, %struct.GPR* %9666, i32 0, i32 33
  %9668 = getelementptr inbounds %struct.Reg, %struct.Reg* %9667, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %9668 to i64*
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9670 = getelementptr inbounds %struct.GPR, %struct.GPR* %9669, i32 0, i32 1
  %9671 = getelementptr inbounds %struct.Reg, %struct.Reg* %9670, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9671 to i64*
  %9672 = load i64, i64* %RAX.i
  %9673 = load i64, i64* %PC.i8
  %9674 = add i64 %9673, 3
  store i64 %9674, i64* %PC.i8
  %9675 = trunc i64 %9672 to i32
  %9676 = add i32 1, %9675
  %9677 = zext i32 %9676 to i64
  store i64 %9677, i64* %RAX.i, align 8
  %9678 = icmp ult i32 %9676, %9675
  %9679 = icmp ult i32 %9676, 1
  %9680 = or i1 %9678, %9679
  %9681 = zext i1 %9680 to i8
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9681, i8* %9682, align 1
  %9683 = and i32 %9676, 255
  %9684 = call i32 @llvm.ctpop.i32(i32 %9683)
  %9685 = trunc i32 %9684 to i8
  %9686 = and i8 %9685, 1
  %9687 = xor i8 %9686, 1
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9687, i8* %9688, align 1
  %9689 = xor i64 1, %9672
  %9690 = trunc i64 %9689 to i32
  %9691 = xor i32 %9690, %9676
  %9692 = lshr i32 %9691, 4
  %9693 = trunc i32 %9692 to i8
  %9694 = and i8 %9693, 1
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9694, i8* %9695, align 1
  %9696 = icmp eq i32 %9676, 0
  %9697 = zext i1 %9696 to i8
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9697, i8* %9698, align 1
  %9699 = lshr i32 %9676, 31
  %9700 = trunc i32 %9699 to i8
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9700, i8* %9701, align 1
  %9702 = lshr i32 %9675, 31
  %9703 = xor i32 %9699, %9702
  %9704 = add i32 %9703, %9699
  %9705 = icmp eq i32 %9704, 2
  %9706 = zext i1 %9705 to i8
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9706, i8* %9707, align 1
  store %struct.Memory* %loadMem_47ed4f, %struct.Memory** %MEMORY
  %loadMem_47ed52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9709 = getelementptr inbounds %struct.GPR, %struct.GPR* %9708, i32 0, i32 33
  %9710 = getelementptr inbounds %struct.Reg, %struct.Reg* %9709, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %9710 to i64*
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 1
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9713 to i32*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 15
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %9716 to i64*
  %9717 = load i64, i64* %RBP.i7
  %9718 = sub i64 %9717, 8
  %9719 = load i32, i32* %EAX.i
  %9720 = zext i32 %9719 to i64
  %9721 = load i64, i64* %PC.i6
  %9722 = add i64 %9721, 3
  store i64 %9722, i64* %PC.i6
  %9723 = inttoptr i64 %9718 to i32*
  store i32 %9719, i32* %9723
  store %struct.Memory* %loadMem_47ed52, %struct.Memory** %MEMORY
  %loadMem_47ed55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 33
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9726 to i64*
  %9727 = load i64, i64* %PC.i5
  %9728 = add i64 %9727, -2368
  %9729 = load i64, i64* %PC.i5
  %9730 = add i64 %9729, 5
  store i64 %9730, i64* %PC.i5
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9728, i64* %9731, align 8
  store %struct.Memory* %loadMem_47ed55, %struct.Memory** %MEMORY
  br label %block_.L_47e415

block_.L_47ed5a:                                  ; preds = %block_.L_47e415
  %loadMem_47ed5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9733 = getelementptr inbounds %struct.GPR, %struct.GPR* %9732, i32 0, i32 33
  %9734 = getelementptr inbounds %struct.Reg, %struct.Reg* %9733, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9734 to i64*
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9736 = getelementptr inbounds %struct.GPR, %struct.GPR* %9735, i32 0, i32 13
  %9737 = getelementptr inbounds %struct.Reg, %struct.Reg* %9736, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9737 to i64*
  %9738 = load i64, i64* %RSP.i
  %9739 = load i64, i64* %PC.i4
  %9740 = add i64 %9739, 7
  store i64 %9740, i64* %PC.i4
  %9741 = add i64 736, %9738
  store i64 %9741, i64* %RSP.i, align 8
  %9742 = icmp ult i64 %9741, %9738
  %9743 = icmp ult i64 %9741, 736
  %9744 = or i1 %9742, %9743
  %9745 = zext i1 %9744 to i8
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9745, i8* %9746, align 1
  %9747 = trunc i64 %9741 to i32
  %9748 = and i32 %9747, 255
  %9749 = call i32 @llvm.ctpop.i32(i32 %9748)
  %9750 = trunc i32 %9749 to i8
  %9751 = and i8 %9750, 1
  %9752 = xor i8 %9751, 1
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9752, i8* %9753, align 1
  %9754 = xor i64 736, %9738
  %9755 = xor i64 %9754, %9741
  %9756 = lshr i64 %9755, 4
  %9757 = trunc i64 %9756 to i8
  %9758 = and i8 %9757, 1
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9758, i8* %9759, align 1
  %9760 = icmp eq i64 %9741, 0
  %9761 = zext i1 %9760 to i8
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9761, i8* %9762, align 1
  %9763 = lshr i64 %9741, 63
  %9764 = trunc i64 %9763 to i8
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9764, i8* %9765, align 1
  %9766 = lshr i64 %9738, 63
  %9767 = xor i64 %9763, %9766
  %9768 = add i64 %9767, %9763
  %9769 = icmp eq i64 %9768, 2
  %9770 = zext i1 %9769 to i8
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9770, i8* %9771, align 1
  store %struct.Memory* %loadMem_47ed5a, %struct.Memory** %MEMORY
  %loadMem_47ed61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 33
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9774 to i64*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 15
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %PC.i2
  %9779 = add i64 %9778, 1
  store i64 %9779, i64* %PC.i2
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9781 = load i64, i64* %9780, align 8
  %9782 = add i64 %9781, 8
  %9783 = inttoptr i64 %9781 to i64*
  %9784 = load i64, i64* %9783
  store i64 %9784, i64* %RBP.i3, align 8
  store i64 %9782, i64* %9780, align 8
  store %struct.Memory* %loadMem_47ed61, %struct.Memory** %MEMORY
  %loadMem_47ed62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 33
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9787 to i64*
  %9788 = load i64, i64* %PC.i1
  %9789 = add i64 %9788, 1
  store i64 %9789, i64* %PC.i1
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9792 = load i64, i64* %9791, align 8
  %9793 = inttoptr i64 %9792 to i64*
  %9794 = load i64, i64* %9793
  store i64 %9794, i64* %9790, align 8
  %9795 = add i64 %9792, 8
  store i64 %9795, i64* %9791, align 8
  store %struct.Memory* %loadMem_47ed62, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_47ed62
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x2e0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 736
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 736
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 736, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47ed5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e43c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed4c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x78__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 120
  %16 = icmp ult i32 %14, 120
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 120
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47ed47(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb9d8f0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb9d8f0_type* @G__0xb9d8f0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x234___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 564, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x48__rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 72
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47e47f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed47(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xafdfc0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xafdfc0_type* @G__0xafdfc0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 2
  %15 = icmp ult i32 %13, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 2
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e4bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 8
  %15 = icmp ult i32 %13, 8
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 8
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e9aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e50f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e525(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 380, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 180
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e54f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed39(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x3c__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e586(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e5ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x228__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 552
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x2b0__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.extended_chainlinks(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 40
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47e9a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47e992(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -688
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2b4__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2b8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e646(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e984(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e696(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.disconnect(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e696(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e6e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e6e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.string_connect(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e718(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e718(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e768(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x581daa___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x581daa_type* @G__0x581daa to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.trymove(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e97f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e834(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e834(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xab0f24_type* @G_0xab0f24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__0x800___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = and i64 2048, %9
  %13 = trunc i64 %12 to i32
  store i64 %12, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %15, align 1
  %16 = icmp eq i32 %13, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e7f6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e820(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582c08___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582c08_type* @G__0x582c08 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gprintf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_connection_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e8d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47e8d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e899(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e8c3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582c49___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582c49_type* @G__0x582c49 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 724
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_cut_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e97a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47e93c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e966(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582c84___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582c84_type* @G__0x582c84 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.popgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e5ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e997(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e5d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1a____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 26
  %15 = icmp ult i32 %13, 26
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 26
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ead1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x2c__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDX
  %15 = add i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47eacc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rdx__rsi_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x2bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2bc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47eab9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x64__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2bc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.add_strategical_defense_move(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47eabe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e9ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xe____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sub i32 %13, 14
  %15 = icmp ult i32 %13, 14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, 14
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ed2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.cut_possible(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47ed2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rdx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8a010___rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 12099600
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x2c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb051b0___rax_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11555248
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x2c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x2c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x2c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47ed25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47ed0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ed0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.bdist(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 5
  %14 = icmp ult i32 %9, 5
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 5, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_47ed0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47ed07(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2cc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47ecf4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2cc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 4
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ecf4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_same_worm(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x582cc6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x582cc6_type* @G__0x582cc6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47ecef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ecb8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47ecea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ecf4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ecf9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ebd5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47eb59(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ed2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e443(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47e415(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2e0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 736, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 736
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 736, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
